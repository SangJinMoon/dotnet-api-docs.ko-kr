<Type Name="Application" FullName="System.Windows.Application">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f0a967c2f910d359d58039d71e768b227e2ee90b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Application : System.Windows.Threading.DispatcherObject, System.Windows.Markup.IQueryAmbient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Application extends System.Windows.Threading.DispatcherObject implements class System.Windows.Markup.IQueryAmbient" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Application" />
  <TypeSignature Language="VB.NET" Value="Public Class Application&#xA;Inherits DispatcherObject&#xA;Implements IQueryAmbient" />
  <TypeSignature Language="C++ CLI" Value="public ref class Application : System::Windows::Threading::DispatcherObject, System::Windows::Markup::IQueryAmbient" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IQueryAmbient</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="a6f91-101">WPF(Windows Presentation Foundation) 응용 프로그램을 캡슐화합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a6f91-101">Encapsulates a Windows Presentation Foundation (WPF) application.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-102"><xref:System.Windows.Application> 가 캡슐화 하는 클래스 [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] 을 다음을 비롯 한 응용 프로그램 관련 기능:</span><span class="sxs-lookup"><span data-stu-id="a6f91-102"><xref:System.Windows.Application> is a class that encapsulates [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] application-specific functionality, including the following:</span></span>  
  
-   <span data-ttu-id="a6f91-103">**응용 프로그램 수명**: <xref:System.Windows.Application.Activated>, <xref:System.Windows.Application.Current%2A>, <xref:System.Windows.Application.Deactivated>, <xref:System.Windows.Application.DispatcherUnhandledException>, <xref:System.Windows.Application.Exit>, <xref:System.Windows.Application.Run%2A>, <xref:System.Windows.Application.SessionEnding>, <xref:System.Windows.Application.Shutdown%2A>, <xref:System.Windows.Application.ShutdownMode%2A>, <xref:System.Windows.Application.Startup>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-103">**Application Lifetime**: <xref:System.Windows.Application.Activated>, <xref:System.Windows.Application.Current%2A>, <xref:System.Windows.Application.Deactivated>, <xref:System.Windows.Application.DispatcherUnhandledException>, <xref:System.Windows.Application.Exit>, <xref:System.Windows.Application.Run%2A>, <xref:System.Windows.Application.SessionEnding>, <xref:System.Windows.Application.Shutdown%2A>, <xref:System.Windows.Application.ShutdownMode%2A>, <xref:System.Windows.Application.Startup>.</span></span>  
  
-   <span data-ttu-id="a6f91-104">**응용 프로그램 범위 창, 속성 및 리소스 관리**: <xref:System.Windows.Application.FindResource%2A>, <xref:System.Windows.Application.GetContentStream%2A>, <xref:System.Windows.Application.GetResourceStream%2A>, <xref:System.Windows.Application.LoadComponent%2A>, <xref:System.Windows.Application.MainWindow%2A>, <xref:System.Windows.Application.Properties%2A>, <xref:System.Windows.Application.Resources%2A>, <xref:System.Windows.Application.StartupUri%2A>, <xref:System.Windows.Application.Windows%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-104">**Application-Scope Window, Property, and Resource Management**: <xref:System.Windows.Application.FindResource%2A>, <xref:System.Windows.Application.GetContentStream%2A>, <xref:System.Windows.Application.GetResourceStream%2A>, <xref:System.Windows.Application.LoadComponent%2A>, <xref:System.Windows.Application.MainWindow%2A>, <xref:System.Windows.Application.Properties%2A>, <xref:System.Windows.Application.Resources%2A>, <xref:System.Windows.Application.StartupUri%2A>, <xref:System.Windows.Application.Windows%2A>.</span></span>  
  
-   <span data-ttu-id="a6f91-105">**명령줄 매개 변수 및 종료 코드 처리**: <xref:System.Windows.Application.Startup?displayProperty=nameWithType>, <xref:System.Windows.Application.Exit?displayProperty=nameWithType>, <xref:System.Windows.Application.Shutdown%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-105">**Command-Line Parameter and Exit Code Processing**: <xref:System.Windows.Application.Startup?displayProperty=nameWithType>, <xref:System.Windows.Application.Exit?displayProperty=nameWithType>, <xref:System.Windows.Application.Shutdown%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="a6f91-106">**탐색**: <xref:System.Windows.Application.FragmentNavigation>, <xref:System.Windows.Application.LoadCompleted>, <xref:System.Windows.Application.Navigated>, <xref:System.Windows.Application.Navigating>, <xref:System.Windows.Application.NavigationProgress>, <xref:System.Windows.Application.NavigationStopped>, <xref:System.Windows.Application.NavigationFailed>, <xref:System.Windows.Application.SetCookie%2A>, <xref:System.Windows.Application.GetCookie%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-106">**Navigation**: <xref:System.Windows.Application.FragmentNavigation>, <xref:System.Windows.Application.LoadCompleted>, <xref:System.Windows.Application.Navigated>, <xref:System.Windows.Application.Navigating>, <xref:System.Windows.Application.NavigationProgress>, <xref:System.Windows.Application.NavigationStopped>, <xref:System.Windows.Application.NavigationFailed>, <xref:System.Windows.Application.SetCookie%2A>, <xref:System.Windows.Application.GetCookie%2A>.</span></span>  
  
 <span data-ttu-id="a6f91-107"><xref:System.Windows.Application> 해당 창, 속성 및 리소스 범위 서비스에 대 한 공유 액세스를 제공 하는 singleton 패턴을 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-107"><xref:System.Windows.Application> implements the singleton pattern to provide shared access to its window, property, and resource scope services.</span></span> <span data-ttu-id="a6f91-108">따라서 인스턴스가 하나만 <xref:System.Windows.Application> 당 클래스를 만들 수 있습니다 <xref:System.AppDomain>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-108">Consequently, only one instance of the <xref:System.Windows.Application> class can be created per <xref:System.AppDomain>.</span></span>  
  
 <span data-ttu-id="a6f91-109">구현할 수는 <xref:System.Windows.Application> 태그, 태그 및 코드 숨김 또는 코드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-109">You can implement an <xref:System.Windows.Application> using markup, markup and code-behind, or code.</span></span> <span data-ttu-id="a6f91-110">경우 <xref:System.Windows.Application> 태그 또는 태그 및 코드 숨김, 태그 파일으로 구성 해야 하는지 여부를 태그를 사용 하 여 구현 되는 [!INCLUDE[TLA#tla_msbuild](~/includes/tlasharptla-msbuild-md.md)] `ApplicationDefinition` 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-110">If <xref:System.Windows.Application> is implemented with markup, whether markup or markup and code-behind, the markup file must be configured as an [!INCLUDE[TLA#tla_msbuild](~/includes/tlasharptla-msbuild-md.md)] `ApplicationDefinition` item.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a6f91-111">독립 실행형 응용 프로그램 필요 하지 않습니다는 <xref:System.Windows.Application> 개체 사용자 지정을 구현 하는 것이 불가능 `static` 진입점 메서드 (`Main`)의 인스턴스를 만들지 않고 창을 엽니다.이 <xref:System.Windows.Application>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-111">A standalone application does not require an <xref:System.Windows.Application> object; it is possible to implement a custom `static` entry point method (`Main`) that opens a window without creating an instance of <xref:System.Windows.Application>.</span></span> <span data-ttu-id="a6f91-112">그러나 [!INCLUDE[TLA#tla_xbap#plural](~/includes/tlasharptla-xbapsharpplural-md.md)] 필요는 <xref:System.Windows.Application> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-112">However, [!INCLUDE[TLA#tla_xbap#plural](~/includes/tlasharptla-xbapsharpplural-md.md)] require an <xref:System.Windows.Application> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6f91-113">다음 예제에서는 표준 응용 프로그램을 하는 방법을 보여 줍니다. 태그만 사용 하 여 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-113">The following example shows how a standard application is defined using only markup:</span></span>  
  
 [!code-xaml[ApplicationSnippets#ApplicationMARKUP](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationSnippets/CSharp/AppMarkup.xaml#applicationmarkup)]  
  
 <span data-ttu-id="a6f91-114">다음 예제에서는 표준 응용 프로그램은 코드만 정의 방법을 사용 하 여:</span><span class="sxs-lookup"><span data-stu-id="a6f91-114">The following example shows how a standard application is defined using only code:</span></span>  
  
 [!code-csharp[ApplicationSnippets#ApplicationCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationSnippets/CSharp/AppCode.cs#applicationcode)]
 [!code-vb[ApplicationSnippets#ApplicationCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ApplicationSnippets/visualbasic/appcode.vb#applicationcode)]  
  
 <span data-ttu-id="a6f91-115">다음 예제에서는 표준 응용 프로그램을 하는 방법을 보여 줍니다. 태그 및 코드 숨김의 조합을 사용 하 여 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-115">The following example shows how a standard application is defined using a combination of markup and code-behind.</span></span>  
  
 [!code-xaml[ApplicationSnippets#ApplicationXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationSnippets/CSharp/App.xaml#applicationxaml)]  
  
 [!code-csharp[ApplicationSnippets#ApplicationCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationSnippets/CSharp/App.xaml.cs#applicationcodebehind)]
 [!code-vb[ApplicationSnippets#ApplicationCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ApplicationSnippets/visualbasic/application.xaml.vb#applicationcodebehind)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="a6f91-116">공용 <see langword="static" /> (<see langword="Shared" /> Visual basic에서)이 형식의 멤버는 스레드로부터 안전 합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a6f91-116">The public <see langword="static" /> (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="a6f91-117">또한는 <see cref="M:System.Windows.Application.FindResource(System.Object)" /> 및 <see cref="M:System.Windows.Application.TryFindResource(System.Object)" /> 메서드 및 <see cref="P:System.Windows.Application.Properties" /> 및 <see cref="P:System.Windows.Application.Resources" /> 속성은 스레드로부터 안전 합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a6f91-117">In addition, the <see cref="M:System.Windows.Application.FindResource(System.Object)" /> and <see cref="M:System.Windows.Application.TryFindResource(System.Object)" /> methods and the <see cref="P:System.Windows.Application.Properties" /> and <see cref="P:System.Windows.Application.Resources" /> properties are thread safe.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Windows.Window" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Application ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Application();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a6f91-118">
            <see cref="T:System.Windows.Application" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-118">Initializes a new instance of the <see cref="T:System.Windows.Application" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-119">인스턴스가 하나만 <xref:System.Windows.Application> 당 클래스를 만들 수 있습니다 <xref:System.AppDomain>, 응용 프로그램 범위 창, 속성 및 리소스 데이터의 단일 집합에 대 한 공유 액세스 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-119">Only one instance of the <xref:System.Windows.Application> class can be created per <xref:System.AppDomain>, to ensure shared access to a single set of application-scope window, property, and resource data.</span></span> <span data-ttu-id="a6f91-120">따라서의 기본 생성자는 <xref:System.Windows.Application> 클래스의 첫 번째 인스턴스가 초기화 되는 인스턴스 인지 검색는 <xref:System.AppDomain>정상이 아닌 경우는 <xref:System.InvalidOperationException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-120">Consequently, the default constructor of the <xref:System.Windows.Application> class detects whether the instance being initialized is the first instance in an <xref:System.AppDomain>; if it is not, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 <span data-ttu-id="a6f91-121"><xref:System.Windows.Application> 현재에 대 한 개체 <xref:System.AppDomain> 정적에서 노출 <xref:System.Windows.Application.Current%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-121">The <xref:System.Windows.Application> object for the current <xref:System.AppDomain> is exposed from the static <xref:System.Windows.Application.Current%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6f91-122">
            <see cref="T:System.Windows.Application" />당 <see cref="T:System.AppDomain" /> 클래스 인스턴스가 두 개 이상 만들어지는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-122">More than one instance of the <see cref="T:System.Windows.Application" /> class is created per <see cref="T:System.AppDomain" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Activated">
      <MemberSignature Language="C#" Value="public event EventHandler Activated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Activated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Application.Activated" />
      <MemberSignature Language="VB.NET" Value="Public Event Activated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Activated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6f91-123">응용 프로그램이 포그라운드 응용 프로그램이 될 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-123">Occurs when an application becomes the foreground application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-124">A [!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)] 하나 이상의 열려 있는 창이 응용 프로그램을 활성화 (포그라운드로 됨) 창 중 하나는 활성화 된 경우 처음으로 응용 프로그램이 시작 된 이후 또는 창 중 하나이 응용 프로그램 하는 동안 활성화 될 때 비활성 상태인: 프로그램이 경우:</span><span class="sxs-lookup"><span data-stu-id="a6f91-124">A [!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)] application that has one or more open windows is activated (becomes the foreground application) when one of the windows is activated for the first time since the application was launched, or when one of the windows is activated while the application is inactive: Specifically, activation occurs when:</span></span>  
  
-   <span data-ttu-id="a6f91-125">응용 프로그램의 첫 번째 창을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-125">An application opens its first window.</span></span>  
  
-   <span data-ttu-id="a6f91-126">사용자가 ALT + TAB을 사용 하 여 또는 작업 관리자를 사용 하 여 응용 프로그램으로 전환 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-126">A user switches to the application by using ALT+TAB or by using Task Manager.</span></span>  
  
-   <span data-ttu-id="a6f91-127">사용자가 응용 프로그램의 창 중 하나에 대 한 작업 표시줄 단추를 클릭 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-127">A user clicks the taskbar button for one of the windows in an application.</span></span>  
  
 <span data-ttu-id="a6f91-128">활성화 되는 시기를 검색 하는 응용 프로그램에서 처리할 수는 <xref:System.Windows.Application.Activated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-128">Applications that need to detect when they activate can handle the <xref:System.Windows.Application.Activated> event.</span></span>  
  
 <span data-ttu-id="a6f91-129">응용 프로그램 처음 활성화 된 후 비활성화 하 고 해당 수명 동안 여러 번 다시 활성화 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-129">After an application is first activated, it may be deactivated and reactivated many times during its lifetime.</span></span> <span data-ttu-id="a6f91-130">모두 처리할 수는 응용 프로그램의 동작이 나 상태가 활성화 상태에 따라 달라 지, <xref:System.Windows.Application.Activated> 및 <xref:System.Windows.Application.Deactivated> 이벤트를 상태를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-130">If an application's behavior or state depends on its activation state, it can handle both <xref:System.Windows.Application.Activated> and <xref:System.Windows.Application.Deactivated> events to determine which activation state it's in.</span></span>  
  
 <span data-ttu-id="a6f91-131">응용 프로그램 활성화 되 면 <xref:System.Windows.Application.Activated> 응용 프로그램이 활성 상태인 동안 응용 프로그램 내에서 개수 창이 활성화 될에 관계 없이 응용 프로그램이 비활성화 될 때까지 다시 발생 하지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-131">Once an application becomes active, <xref:System.Windows.Application.Activated> will not be raised again until the application is deactivated, irrespective of how many windows within an application are activated while the application is active.</span></span>  
  
 <span data-ttu-id="a6f91-132"><xref:System.Windows.Application.Activated> 에 대 한 끝나면 [!INCLUDE[TLA#tla_xbap#plural](~/includes/tlasharptla-xbapsharpplural-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-132"><xref:System.Windows.Application.Activated> is not raised for [!INCLUDE[TLA#tla_xbap#plural](~/includes/tlasharptla-xbapsharpplural-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6f91-133">다음 예제에는 독립 실행형 응용 프로그램 활성화 및 비활성화 하는 시기를 감지 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-133">The following example shows how to detect when a standalone application activates and deactivates.</span></span>  
  
 [!code-xaml[ApplicationActivationSnippets#DetectActivationStateXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationActivationSnippets/CSharp/App.xaml#detectactivationstatexaml)]  
  
 [!code-csharp[ApplicationActivationSnippets#DetectActivationStateCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationActivationSnippets/CSharp/App.xaml.cs#detectactivationstatecodebehind)]
 [!code-vb[ApplicationActivationSnippets#DetectActivationStateCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ApplicationActivationSnippets/visualbasic/application.xaml.vb#detectactivationstatecodebehind)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Application.OnActivated(System.EventArgs)" />
        <altmember cref="E:System.Windows.Application.Deactivated" />
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.Windows.Application Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Application Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Application.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Current As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Application ^ Current { System::Windows::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6f91-134">현재 <see cref="T:System.Windows.Application" />에 대한 <see cref="T:System.AppDomain" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-134">Gets the <see cref="T:System.Windows.Application" /> object for the current <see cref="T:System.AppDomain" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6f91-135">현재 <see cref="T:System.Windows.Application" />에 대한 <see cref="T:System.AppDomain" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-135">The <see cref="T:System.Windows.Application" /> object for the current <see cref="T:System.AppDomain" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-136"><xref:System.Windows.Application> 이 당-<xref:System.AppDomain> 정적을 구현 하는 단일 형식 <xref:System.Windows.Application.Current%2A> 속성에 대 한 공유 액세스를 제공 하는 <xref:System.Windows.Application> 현재에 대 한 인스턴스 <xref:System.AppDomain>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-136"><xref:System.Windows.Application> is a per-<xref:System.AppDomain> singleton type that implements the static <xref:System.Windows.Application.Current%2A> property to provide shared access to the <xref:System.Windows.Application> instance for the current <xref:System.AppDomain>.</span></span> <span data-ttu-id="a6f91-137">이 디자인 하 여 관리 되는 상태에서는 <xref:System.Windows.Application>, 공유 리소스 및 상태를 포함 하 여, 하나의 공유 위치에서 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-137">This design guarantees that state managed by <xref:System.Windows.Application>, including shared resources and state, is available from a single, shared location.</span></span>  
  
 <span data-ttu-id="a6f91-138">이 속성은 스레드로부터 안전 하 고 모든 스레드에서 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-138">This property is thread safe and is available from any thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deactivated">
      <MemberSignature Language="C#" Value="public event EventHandler Deactivated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Deactivated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Application.Deactivated" />
      <MemberSignature Language="VB.NET" Value="Public Event Deactivated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Deactivated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6f91-139">응용 프로그램이 더 이상 포그라운드 응용 프로그램이 아닐 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-139">Occurs when an application stops being the foreground application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-140">A [!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)] (포그라운드 응용 프로그램이 중지 됨)를 비활성화 하는 하나 이상의 열려 있는 창이 응용 프로그램 사용자가 다음을 수행 하는 경우:</span><span class="sxs-lookup"><span data-stu-id="a6f91-140">A [!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)] application that has one or more open windows deactivates (stops being the foreground application) when a user does the following:</span></span>  
  
-   <span data-ttu-id="a6f91-141">ALT + TAB을 사용 하 여 또는 작업 관리자를 사용 하 여 다른 응용 프로그램으로 전환 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-141">Switches to another application by using ALT+TAB or by using Task Manager.</span></span>  
  
-   <span data-ttu-id="a6f91-142">다른 응용 프로그램의 창에 대 한 작업 표시줄 단추를 클릭합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-142">Clicks the taskbar button for a window in another application.</span></span>  
  
 <span data-ttu-id="a6f91-143">비활성화를 처리할 수를 검색 하는 응용 프로그램의 <xref:System.Windows.Application.Deactivated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-143">Applications that need to detect deactivation can handle the <xref:System.Windows.Application.Deactivated> event.</span></span>  
  
 <span data-ttu-id="a6f91-144">응용 프로그램 처음 활성화 된 후 비활성화 하 고 해당 수명 동안 여러 번 다시 활성화 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-144">After an application is first activated, it may be deactivated and reactivated many times during its lifetime.</span></span> <span data-ttu-id="a6f91-145">모두 처리할 수는 응용 프로그램의 동작이 나 상태가 활성화 상태에 따라 달라 지, <xref:System.Windows.Application.Deactivated> 및 <xref:System.Windows.Application.Activated> 이벤트를 상태를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-145">If an application's behavior or state depends on its activation state, it can handle both <xref:System.Windows.Application.Deactivated> and <xref:System.Windows.Application.Activated> events to determine which state it's in.</span></span>  
  
 <span data-ttu-id="a6f91-146"><xref:System.Windows.Application.Deactivated> 에 대 한 끝나면 [!INCLUDE[TLA#tla_xbap#plural](~/includes/tlasharptla-xbapsharpplural-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-146"><xref:System.Windows.Application.Deactivated> is not raised for [!INCLUDE[TLA#tla_xbap#plural](~/includes/tlasharptla-xbapsharpplural-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6f91-147">다음 예제에는 독립 실행형 응용 프로그램을 비활성화 및 활성화 하는 시기를 감지 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-147">The following example shows how to detect when a standalone application deactivates and activates.</span></span>  
  
 [!code-xaml[ApplicationActivationSnippets#DetectActivationStateXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationActivationSnippets/CSharp/App.xaml#detectactivationstatexaml)]  
  
 [!code-csharp[ApplicationActivationSnippets#DetectActivationStateCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationActivationSnippets/CSharp/App.xaml.cs#detectactivationstatecodebehind)]
 [!code-vb[ApplicationActivationSnippets#DetectActivationStateCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ApplicationActivationSnippets/visualbasic/application.xaml.vb#detectactivationstatecodebehind)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Application.OnDeactivated(System.EventArgs)" />
        <altmember cref="E:System.Windows.Application.Activated" />
      </Docs>
    </Member>
    <Member MemberName="DispatcherUnhandledException">
      <MemberSignature Language="C#" Value="public event System.Windows.Threading.DispatcherUnhandledExceptionEventHandler DispatcherUnhandledException;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Threading.DispatcherUnhandledExceptionEventHandler DispatcherUnhandledException" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Application.DispatcherUnhandledException" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DispatcherUnhandledException As DispatcherUnhandledExceptionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Threading::DispatcherUnhandledExceptionEventHandler ^ DispatcherUnhandledException;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherUnhandledExceptionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6f91-148">응용 프로그램에서 예외가 throw되었지만 처리되지 않은 경우에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-148">Occurs when an exception is thrown by an application but not handled.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-149">기본적으로 [!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)] 처리 되지 않은 예외를 catch 하 고 예외 (올은 예외를 보고할 수) 대화 상자에서 사용자에 게 알려줍니다 자동으로 응용 프로그램을 종료 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-149">By default, [!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)] catches unhandled exceptions, notifies users of the exception from a dialog box (from which they can report the exception), and automatically shuts down an application.</span></span>  
  
 <span data-ttu-id="a6f91-150">그러나 응용 프로그램 중앙된 위치에서 처리 되지 않은 사용자 지정 예외 처리를 수행 하는 경우를 처리 해야 <xref:System.Windows.Application.DispatcherUnhandledException>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-150">However, if an application needs to perform custom unhandled exception processing from a centralized location, you should handle <xref:System.Windows.Application.DispatcherUnhandledException>.</span></span>  
  
 <span data-ttu-id="a6f91-151"><xref:System.Windows.Application.DispatcherUnhandledException> 에 의해 발생 한 <xref:System.Windows.Application> 주 UI 스레드에서 실행 되는 코드에서 처리 되지 않은 각 예외에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-151"><xref:System.Windows.Application.DispatcherUnhandledException> is raised by an <xref:System.Windows.Application> for each exception that is unhandled by code running on the main UI thread.</span></span>  
  
 <span data-ttu-id="a6f91-152">예외가 처리 되지 않은 경우에 배경 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 스레드 (자체로 스레드 <xref:System.Windows.Threading.Dispatcher>) 또는 백그라운드 작업자 스레드 (없는 스레드는 <xref:System.Windows.Threading.Dispatcher>), 예외 주에 게 전달 되지 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 스레드입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-152">If an exception is not handled on either a background [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread (a thread with its own <xref:System.Windows.Threading.Dispatcher>) or a background worker thread (a thread without a <xref:System.Windows.Threading.Dispatcher>), the exception is not forwarded to the main [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] thread.</span></span> <span data-ttu-id="a6f91-153">따라서 <xref:System.Windows.Application.DispatcherUnhandledException> 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-153">Consequently, <xref:System.Windows.Application.DispatcherUnhandledException> is not raised.</span></span> <span data-ttu-id="a6f91-154">이러한 상황에서는 다음을 수행 하는 코드를 작성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-154">In these circumstances, you will need to write code to do the following:</span></span>  
  
1.  <span data-ttu-id="a6f91-155">백그라운드 스레드에서 예외를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-155">Handle exceptions on the background thread.</span></span>  
  
2.  <span data-ttu-id="a6f91-156">이러한 예외를 주 디스패치 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 스레드입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-156">Dispatch those exceptions to the main [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] thread.</span></span>  
  
3.  <span data-ttu-id="a6f91-157">주 다시 throw 할 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 을 허용 하도록 처리 하지 않고 스레드 <xref:System.Windows.Application.DispatcherUnhandledException> 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-157">Rethrow them on the main [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] thread without handling them to allow <xref:System.Windows.Application.DispatcherUnhandledException> to be raised.</span></span>  
  
 <span data-ttu-id="a6f91-158">자세한 내용은 참조는 [스레딩 모델](~/docs/framework/wpf/advanced/threading-model.md) 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-158">For more information, see the [Threading Model](~/docs/framework/wpf/advanced/threading-model.md) overview.</span></span>  
  
 <span data-ttu-id="a6f91-159"><xref:System.Windows.Application.DispatcherUnhandledException> 이벤트 처리기에 전달 되는 <xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs> 인수는 예외에 대 한 컨텍스트 정보를 포함 하는 포함 하 여:</span><span class="sxs-lookup"><span data-stu-id="a6f91-159">The <xref:System.Windows.Application.DispatcherUnhandledException> event handler is passed a <xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs> argument that contains contextual information regarding the exception, including:</span></span>  
  
-   <span data-ttu-id="a6f91-160">예외 (<xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Exception%2A>).</span><span class="sxs-lookup"><span data-stu-id="a6f91-160">The exception (<xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Exception%2A>).</span></span>  
  
-   <span data-ttu-id="a6f91-161"><xref:System.Windows.Threading.Dispatcher> 예외가 시작 된 (<xref:System.Windows.Threading.DispatcherEventArgs.Dispatcher%2A>).</span><span class="sxs-lookup"><span data-stu-id="a6f91-161">The <xref:System.Windows.Threading.Dispatcher> from which it originated (<xref:System.Windows.Threading.DispatcherEventArgs.Dispatcher%2A>).</span></span>  
  
 <span data-ttu-id="a6f91-162">예외를 복구할 수 있는지 여부를 확인 하려면이 정보를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-162">You can use this information to determine whether an exception is recoverable or not.</span></span> <span data-ttu-id="a6f91-163">복구 가능한 예외는 <xref:System.IO.FileNotFoundException>, 예를 들어 복구할 수 없는 예외 수 있지만 <xref:System.StackOverflowException>, 예를 들어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-163">A recoverable exception might be a <xref:System.IO.FileNotFoundException>, for example, while an unrecoverable exception might be a <xref:System.StackOverflowException>, for example.</span></span>  
  
 <span data-ttu-id="a6f91-164">처리 되지 않은 예외를 처리 하는 경우 <xref:System.Windows.Application.DispatcherUnhandledException>, 않으려면 [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] 설정 해야 처리를 계속 하려면는 <xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled%2A> 속성을 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-164">When you process an unhandled exception from <xref:System.Windows.Application.DispatcherUnhandledException>, and you don't want [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] to continue processing it, you need to set the <xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="a6f91-165">다른 이벤트와 달리는 <xref:System.Windows.Application> 를 시키면 <xref:System.Windows.Application.DispatcherUnhandledException> 않습니다 없습니다가 일치 하는 보호 가상 구현 (OnDispatcherUnhandledException).</span><span class="sxs-lookup"><span data-stu-id="a6f91-165">Unlike the other events that <xref:System.Windows.Application> raises, <xref:System.Windows.Application.DispatcherUnhandledException> does not have a matching protected virtual implementation (OnDispatcherUnhandledException).</span></span> <span data-ttu-id="a6f91-166">따라서 클래스에서 파생 되는 <xref:System.Windows.Application> 항상와 이벤트 처리기를 등록 해야 <xref:System.Windows.Application.DispatcherUnhandledException> 처리 되지 않은 예외를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-166">Consequently, classes that derive from <xref:System.Windows.Application> must always register an event handler with <xref:System.Windows.Application.DispatcherUnhandledException> to process unhandled exceptions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6f91-167">처리 하 여 처리 되지 않은 예외를 처리 하는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Application.DispatcherUnhandledException> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-167">The following example shows how to process unhandled exceptions by handling the <xref:System.Windows.Application.DispatcherUnhandledException> event.</span></span>  
  
 [!code-csharp[ApplicationDispatcherUnhandledExceptionSnippets#HandleDispatcherUnhandledExceptionCODEBEHIND1](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationDispatcherUnhandledExceptionSnippets/CSharp/App.xaml.cs#handledispatcherunhandledexceptioncodebehind1)]
 [!code-vb[ApplicationDispatcherUnhandledExceptionSnippets#HandleDispatcherUnhandledExceptionCODEBEHIND1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ApplicationDispatcherUnhandledExceptionSnippets/visualbasic/application.xaml.vb#handledispatcherunhandledexceptioncodebehind1)]  
[!code-csharp[ApplicationDispatcherUnhandledExceptionSnippets#HandleDispatcherUnhandledExceptionCODEBEHIND2](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationDispatcherUnhandledExceptionSnippets/CSharp/App.xaml.cs#handledispatcherunhandledexceptioncodebehind2)]
[!code-vb[ApplicationDispatcherUnhandledExceptionSnippets#HandleDispatcherUnhandledExceptionCODEBEHIND2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ApplicationDispatcherUnhandledExceptionSnippets/visualbasic/application.xaml.vb#handledispatcherunhandledexceptioncodebehind2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exit">
      <MemberSignature Language="C#" Value="public event System.Windows.ExitEventHandler Exit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.ExitEventHandler Exit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Application.Exit" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Exit As ExitEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::ExitEventHandler ^ Exit;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ExitEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6f91-168">응용 프로그램이 종료되기 직전에 발생하며 취소할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-168">Occurs just before an application shuts down, and cannot be canceled.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-169">다음 이유 중 하나에 대 한 응용 프로그램이 종료 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-169">An application can shut down for either of the following reasons:</span></span>  
  
-   <span data-ttu-id="a6f91-170"><xref:System.Windows.Application.Shutdown%2A> 의 메서드는 <xref:System.Windows.Application> 의해 명시적으로 또는 결정 된 대로 개체 호출 됩니다는 <xref:System.Windows.Application.ShutdownMode%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-170">The <xref:System.Windows.Application.Shutdown%2A> method of the <xref:System.Windows.Application> object is called, either explicitly or as determined by the <xref:System.Windows.Application.ShutdownMode%2A> property.</span></span>  
  
-   <span data-ttu-id="a6f91-171">사용자 로그 오프 하거나 종료 하는 세션을 종료 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-171">The user ends the session by logging off or shutting down.</span></span>  
  
 <span data-ttu-id="a6f91-172">처리 하 여 응용 프로그램 종료가 발생할 때를 감지할 수 있습니다는 <xref:System.Windows.Application.Exit> 이벤트를 필요에 따라 추가 처리를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-172">You can detect when application shutdown occurs by handling the <xref:System.Windows.Application.Exit> event, and perform any additional processing as required.</span></span>  
  
 <span data-ttu-id="a6f91-173">처리할 수도 있습니다 <xref:System.Windows.Application.Exit> 검사 하거나를 호출할 필요 하지 않을 때 응용 프로그램 종료 코드를 변경 하려면 <xref:System.Windows.Application.Shutdown%2A> 명시적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-173">You can also handle <xref:System.Windows.Application.Exit> to inspect or change the application exit code when you don't need to call <xref:System.Windows.Application.Shutdown%2A> explicitly.</span></span> <span data-ttu-id="a6f91-174">종료 코드에서 노출 되는 <xref:System.Windows.ExitEventArgs.ApplicationExitCode%2A> 속성의는 <xref:System.Windows.ExitEventArgs> 에 전달 되는 인수는 <xref:System.Windows.Application.Exit> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-174">The exit code is exposed from the <xref:System.Windows.ExitEventArgs.ApplicationExitCode%2A> property of the <xref:System.Windows.ExitEventArgs> argument that's passed to the <xref:System.Windows.Application.Exit> event handler.</span></span> <span data-ttu-id="a6f91-175">응용 프로그램 실행을 중지, 종료 코드 후속 처리에 대 한 운영 체제에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-175">When the application stops running, the exit code is passed to the operating system for subsequent processing.</span></span>  
  
 <span data-ttu-id="a6f91-176">응용 프로그램에서 처리 하는 경우는 <xref:System.Windows.Application.SessionEnding> 이벤트 한 후 취소 <xref:System.Windows.Application.Exit> 발생 하지 않습니다 하 고 응용 프로그램에 따라 종료 모드에서에서 실행을 계속 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-176">If your application handles the <xref:System.Windows.Application.SessionEnding> event and subsequently cancels it, <xref:System.Windows.Application.Exit> is not raised and the application continues running in accordance with the shutdown mode.</span></span>  
  
 <span data-ttu-id="a6f91-177">종료 코드에서 설정할 수 있습니다는 [!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)]있지만 값이 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-177">The exit code can be set from an [!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)], although the value is ignored.</span></span>  
  
 <span data-ttu-id="a6f91-178">에 대 한 [!INCLUDE[TLA2#tla_xbap#plural](~/includes/tla2sharptla-xbapsharpplural-md.md)], <xref:System.Windows.Application.Exit> 는 다음과 같은 경우에 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-178">For [!INCLUDE[TLA2#tla_xbap#plural](~/includes/tla2sharptla-xbapsharpplural-md.md)], <xref:System.Windows.Application.Exit> is raised in the following circumstances:</span></span>  
  
-   <span data-ttu-id="a6f91-179">[!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)] 에서 멀리 이동 하 게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-179">An [!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)] is navigated away from.</span></span>  
  
-   <span data-ttu-id="a6f91-180">[!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)]때 호스팅하는 탭의 [!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)] 닫힙니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-180">In [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)], when the tab that is hosting the [!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)] is closed.</span></span>  
  
-   <span data-ttu-id="a6f91-181">브라우저가 닫힌 경우</span><span class="sxs-lookup"><span data-stu-id="a6f91-181">When the browser is closed.</span></span>  
  
 <span data-ttu-id="a6f91-182">모든 경우의 값에는 <xref:System.Windows.ExitEventArgs.ApplicationExitCode%2A> 속성은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-182">In all cases, the value of the <xref:System.Windows.ExitEventArgs.ApplicationExitCode%2A> property is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6f91-183">다음 예제에서는 하는 방법:</span><span class="sxs-lookup"><span data-stu-id="a6f91-183">The following example demonstrates how to:</span></span>  
  
-   <span data-ttu-id="a6f91-184">처리는 <xref:System.Windows.Application.Exit> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-184">Handle the <xref:System.Windows.Application.Exit> event.</span></span>  
  
-   <span data-ttu-id="a6f91-185">검사 하 고 업데이트는 <xref:System.Windows.ExitEventArgs.ApplicationExitCode%2A> 의 속성은 <xref:System.Windows.ExitEventArgs>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-185">Inspect and update the <xref:System.Windows.ExitEventArgs.ApplicationExitCode%2A> property of the <xref:System.Windows.ExitEventArgs>.</span></span>  
  
-   <span data-ttu-id="a6f91-186">격리 된 저장소에서 응용 프로그램 로그에 항목을 기록 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-186">Write an entry to an application log in isolated storage.</span></span>  
  
-   <span data-ttu-id="a6f91-187">격리 된 저장소를 응용 프로그램 상태를 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-187">Persist the application state to isolated storage.</span></span>  
  
 [!code-xaml[ApplicationExitSnippets#HandleExitXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationExitSnippets/CSharp/App.xaml#handleexitxaml)]  
  
 [!code-csharp[ApplicationExitSnippets#HandleExitCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationExitSnippets/CSharp/App.xaml.cs#handleexitcodebehind)]
 [!code-vb[ApplicationExitSnippets#HandleExitCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ApplicationExitSnippets/visualbasic/application.xaml.vb#handleexitcodebehind)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Application.OnExit(System.Windows.ExitEventArgs)" />
        <altmember cref="E:System.Windows.Application.Startup" />
        <altmember cref="T:System.IO.IsolatedStorage.IsolatedStorage" />
      </Docs>
    </Member>
    <Member MemberName="FindResource">
      <MemberSignature Language="C#" Value="public object FindResource (object resourceKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object FindResource(object resourceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.FindResource(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindResource (resourceKey As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FindResource(System::Object ^ resourceKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceKey" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="resourceKey">
          <span data-ttu-id="a6f91-188">찾을 리소스 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-188">The name of the resource to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f91-189">지정된 키를 사용하여 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 리소스(예: <see cref="T:System.Windows.Style" /> 또는 <see cref="T:System.Windows.Media.Brush" />)를 검색하고 요청된 리소스가 없으면 예외를 throw합니다([XAML 리소스](~/docs/framework/wpf/advanced/xaml-resources.md) 참조).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-189">Searches for a [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] resource, such as a <see cref="T:System.Windows.Style" /> or <see cref="T:System.Windows.Media.Brush" />, with the specified key, and throws an exception if the requested resource is not found (see [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md)).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a6f91-190">요청된 리소스 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-190">The requested resource object.</span>
          </span>
          <span data-ttu-id="a6f91-191">요청된 리소스가 없으면 <see cref="T:System.Windows.ResourceReferenceKeyNotFoundException" />이 throw됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-191">If the requested resource is not found, a <see cref="T:System.Windows.ResourceReferenceKeyNotFoundException" /> is thrown.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-192"><xref:System.Windows.Application.FindResource%2A> 지정된 된 리소스에 대 한 응용 프로그램 범위 리소스에서 소개 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-192"><xref:System.Windows.Application.FindResource%2A> will first look in application-scope resources for the specified resource.</span></span> <span data-ttu-id="a6f91-193">응용 프로그램 범위 리소스 관리 <xref:System.Windows.Application>에서 노출 하 고는 <xref:System.Windows.Application.Resources%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-193">Application-scope resources are managed by <xref:System.Windows.Application>, and are exposed from the <xref:System.Windows.Application.Resources%2A> property.</span></span> <span data-ttu-id="a6f91-194">지정된 된 리소스는 응용 프로그램 범위 리소스 집합에 없는 경우 <xref:System.Windows.Application.FindResource%2A> 다음 시스템 리소스를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-194">If the specified resource is not found in the set of application-scope resources, <xref:System.Windows.Application.FindResource%2A> then next searches the system resources.</span></span> <span data-ttu-id="a6f91-195">시스템 리소스는 사용자가 정의한 shell 리소스 있으며 색, 글꼴 및 셸 구성을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-195">System resources are shell resources defined by the user, and include colors, fonts, and shell configurations.</span></span> <span data-ttu-id="a6f91-196">노출 된 <xref:System.Windows.SystemColors>, <xref:System.Windows.SystemFonts>, 및 <xref:System.Windows.SystemParameters> 각각 정적 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-196">These are exposed from the <xref:System.Windows.SystemColors>, <xref:System.Windows.SystemFonts>, and <xref:System.Windows.SystemParameters> types, respectively, as static properties.</span></span> <span data-ttu-id="a6f91-197">사용 하도록 <xref:System.Windows.Application.FindResource%2A> 을 얻은를 이러한 형식 속성을 노출 리소스 키를 전달 하도록 디자인 된 <xref:System.Windows.Application.FindResource%2A>등 <xref:System.Windows.SystemParameters.IconWidthKey%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-197">To use <xref:System.Windows.Application.FindResource%2A> to acquire them, these types also expose resource key properties that are designed to be passed to <xref:System.Windows.Application.FindResource%2A>; for example, <xref:System.Windows.SystemParameters.IconWidthKey%2A>.</span></span>  
  
 <span data-ttu-id="a6f91-198">때문에 <xref:System.Windows.Application.FindResource%2A> 개체를 반환 리소스를 찾을 경우 적절 한 형식으로 반환된 된 값을 캐스팅 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-198">Because <xref:System.Windows.Application.FindResource%2A> returns an object, you must cast the returned value to the appropriate type if the resource is found.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a6f91-199">이 메서드를 찾을 수 없는 키에 대 한를 호출 하면 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-199">If you call this method for a key that cannot be found, an exception is thrown.</span></span> <span data-ttu-id="a6f91-200">호출에서 발생 하는 예외를 처리 하기 원하는 경우 하지 <xref:System.Windows.Application.FindResource%2A>, 호출 <xref:System.Windows.Application.TryFindResource%2A> 대신; <xref:System.Windows.Application.TryFindResource%2A> 반환는 `null` 참조할 때 요청 된 리소스를 찾을 수 없으면 예외를 throw 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-200">If you do not want to handle exceptions that result from calling <xref:System.Windows.Application.FindResource%2A>, call <xref:System.Windows.Application.TryFindResource%2A> instead; <xref:System.Windows.Application.TryFindResource%2A> returns a `null` reference when a requested resource cannot be found, and does not throw an exception.</span></span>  
  
 <span data-ttu-id="a6f91-201">이 메서드는 스레드로부터 안전 하 고 모든 스레드에서 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-201">This method is thread safe and can be called from any thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6f91-202">다음 예제에서는 사용 하는 방법을 보여 줍니다. <xref:System.Windows.Application.FindResource%2A> 하 고 처리 하는 리소스를 찾을 <xref:System.Windows.ResourceReferenceKeyNotFoundException> 리소스를 찾을 수 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="a6f91-202">The following example shows how to use <xref:System.Windows.Application.FindResource%2A> to find a resource, and to handle <xref:System.Windows.ResourceReferenceKeyNotFoundException> if the resource is not found.</span></span>  
  
 [!code-csharp[ApplicationFindResourceSnippets#ApplicationCallFindResourceCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationFindResourceSnippets/CSharp/MainWindow.xaml.cs#applicationcallfindresourcecodebehind)]
 [!code-vb[ApplicationFindResourceSnippets#ApplicationCallFindResourceCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ApplicationFindResourceSnippets/visualbasic/mainwindow.xaml.vb#applicationcallfindresourcecodebehind)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.ResourceReferenceKeyNotFoundException">
          <span data-ttu-id="a6f91-203">리소스를 찾을 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-203">The resource cannot be found.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Application.TryFindResource(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="FragmentNavigation">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.FragmentNavigationEventHandler FragmentNavigation;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.FragmentNavigationEventHandler FragmentNavigation" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Application.FragmentNavigation" />
      <MemberSignature Language="VB.NET" Value="Public Event FragmentNavigation As FragmentNavigationEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::FragmentNavigationEventHandler ^ FragmentNavigation;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.FragmentNavigationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6f91-204">응용 프로그램의 탐색기에서 콘텐츠 조각 탐색을 시작할 때 발생합니다. 원하는 조각이 현재 콘텐츠에 있으면 즉시 탐색이 발생하고, 원하는 조각이 다른 콘텐츠에 있으면 소스 [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] 콘텐츠가 로드된 후에 탐색이 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-204">Occurs when a navigator in the application begins navigation to a content fragment, Navigation occurs immediately if the desired fragment is in the current content, or after the source [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] content has been loaded if the desired fragment is in different content.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-205">탐색기는 한 <xref:System.Windows.Navigation.NavigationWindow> 또는 <xref:System.Windows.Controls.Frame>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-205">A navigator is either a <xref:System.Windows.Navigation.NavigationWindow> or a <xref:System.Windows.Controls.Frame>.</span></span>  
  
 <span data-ttu-id="a6f91-206"><xref:System.Windows.Navigation.NavigationService.FragmentNavigation?displayProperty=nameWithType>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="a6f91-206">See <xref:System.Windows.Navigation.NavigationService.FragmentNavigation?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Application.Navigated" />
        <altmember cref="E:System.Windows.Application.Navigating" />
        <altmember cref="E:System.Windows.Application.LoadCompleted" />
        <altmember cref="E:System.Windows.Application.NavigationProgress" />
        <altmember cref="E:System.Windows.Application.NavigationStopped" />
        <altmember cref="E:System.Windows.Application.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="GetContentStream">
      <MemberSignature Language="C#" Value="public static System.Windows.Resources.StreamResourceInfo GetContentStream (Uri uriContent);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Resources.StreamResourceInfo GetContentStream(class System.Uri uriContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.GetContentStream(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetContentStream (uriContent As Uri) As StreamResourceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Resources::StreamResourceInfo ^ GetContentStream(Uri ^ uriContent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Resources.StreamResourceInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriContent" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uriContent">
          <span data-ttu-id="a6f91-207">느슨한 리소스에 매핑되는 상대 <see cref="T:System.Uri" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-207">The relative <see cref="T:System.Uri" /> that maps to a loose resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f91-208">지정된 <see cref="T:System.Uri" />에 있는 콘텐츠 데이터 파일에 대한 리소스 스트림을 반환합니다([WPF 응용 프로그램 리소스, 콘텐츠 및 데이터 파일](~/docs/framework/wpf/app-development/wpf-application-resource-content-and-data-files.md) 참조).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-208">Returns a resource stream for a content data file that is located at the specified <see cref="T:System.Uri" /> (see [WPF Application Resource, Content, and Data Files](~/docs/framework/wpf/app-development/wpf-application-resource-content-and-data-files.md)).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a6f91-209">지정된 <see cref="T:System.Windows.Resources.StreamResourceInfo" />에 있는 콘텐츠 데이터 파일이 들어 있는 <see cref="T:System.Uri" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-209">A <see cref="T:System.Windows.Resources.StreamResourceInfo" /> that contains a content data file that is located at the specified <see cref="T:System.Uri" />.</span>
          </span>
          <span data-ttu-id="a6f91-210">느슨한 리소스가 없으면 null이 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-210">If a loose resource is not found, null is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-211">이 메서드는 스레드로부터 안전 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-211">This method is not thread safe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a6f91-212">
            <see cref="T:System.Uri" />에 전달된 <see cref="M:System.Windows.Application.GetContentStream(System.Uri)" />가 null인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-212">The <see cref="T:System.Uri" /> that is passed to <see cref="M:System.Windows.Application.GetContentStream(System.Uri)" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a6f91-213">
            <see cref="T:System.Uri" />에 전달된 <see cref="M:System.Windows.Application.GetContentStream(System.Uri)" />가 절대 <see cref="T:System.Uri" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-213">The <see cref="T:System.Uri" /> that is passed to <see cref="M:System.Windows.Application.GetContentStream(System.Uri)" /> is an absolute <see cref="T:System.Uri" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Application.GetResourceStream(System.Uri)" />
        <altmember cref="M:System.Windows.Application.GetRemoteStream(System.Uri)" />
        <altmember cref="Overload:System.Windows.Application.LoadComponent" />
      </Docs>
    </Member>
    <Member MemberName="GetCookie">
      <MemberSignature Language="C#" Value="public static string GetCookie (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetCookie(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.GetCookie(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetCookie(Uri ^ uri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="a6f91-214">쿠키가 만들어진 위치를 지정하는 <see cref="T:System.Uri" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-214">The <see cref="T:System.Uri" /> that specifies the location for which a cookie was created.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f91-215">
            <see cref="T:System.Uri" />에 의해 지정된 위치에 대한 쿠키를 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-215">Retrieves a cookie for the location specified by a <see cref="T:System.Uri" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a6f91-216">쿠키가 있으면 <see cref="T:System.String" /> 값이고, 그렇지 않으면 <see cref="T:System.ComponentModel.Win32Exception" />이 throw됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-216">A <see cref="T:System.String" /> value, if the cookie exists; otherwise, a <see cref="T:System.ComponentModel.Win32Exception" /> is thrown.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-217"><xref:System.Windows.Application.GetCookie%2A> 지정 된 쿠키를 검색 <xref:System.Uri>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-217"><xref:System.Windows.Application.GetCookie%2A> retrieves a cookie for the specified <xref:System.Uri>.</span></span> <span data-ttu-id="a6f91-218">쿠키를 검색할 수 없는 경우는 <xref:System.ComponentModel.Win32Exception> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-218">If the cookie can't be retrieved, a <xref:System.ComponentModel.Win32Exception> is thrown.</span></span> <span data-ttu-id="a6f91-219">이름/값 쌍의 목록 쿠키 문자열 구문 분석 하는 코드를 작성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-219">You need to write the code to parse the cookie string into a list of name/value pairs.</span></span>  
  
 <span data-ttu-id="a6f91-220">쿠키에 대 한 개요 [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)], 참조 [탐색 개요](~/docs/framework/wpf/app-development/navigation-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-220">For an overview of cookies in [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)], see [Navigation Overview](~/docs/framework/wpf/app-development/navigation-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="a6f91-221">지정된 쿠키를 검색하는 동안 문제가 발생하면 <see cref="M:System.Windows.Application.GetCookie(System.Uri)" />에서 호출된 <see langword="InternetGetCookie" /> 함수에 의해 [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] 오류가 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-221">A [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] error is raised by the <see langword="InternetGetCookie" /> function (called by <see cref="M:System.Windows.Application.GetCookie(System.Uri)" />) if a problem occurs when attempting to retrieve the specified cookie.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="a6f91-222">파일 기반에 대 한 쿠키를 가져오기 위한 <see cref="T:System.Uri" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-222">for getting the cookie for a file-based <see cref="T:System.Uri" />.</span>
          </span>
          <span data-ttu-id="a6f91-223">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-223">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="a6f91-224">비-파일 기반에 대 한 쿠키를 가져오기 위한 <see cref="T:System.Uri" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-224">for getting the cookie for a non-file-based <see cref="T:System.Uri" />.</span>
          </span>
          <span data-ttu-id="a6f91-225">연결 된 열거형의 경우: <see cref="P:System.Net.WebPermission.ConnectList" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-225">Associated enumeration: <see cref="P:System.Net.WebPermission.ConnectList" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Application.SetCookie(System.Uri,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRemoteStream">
      <MemberSignature Language="C#" Value="public static System.Windows.Resources.StreamResourceInfo GetRemoteStream (Uri uriRemote);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Resources.StreamResourceInfo GetRemoteStream(class System.Uri uriRemote) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.GetRemoteStream(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRemoteStream (uriRemote As Uri) As StreamResourceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Resources::StreamResourceInfo ^ GetRemoteStream(Uri ^ uriRemote);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Resources.StreamResourceInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriRemote" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uriRemote">
          <span data-ttu-id="a6f91-226">원본 사이트의 느슨한 리소스에 매핑되는 <see cref="T:System.Uri" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-226">The <see cref="T:System.Uri" /> that maps to a loose resource at the site of origin.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f91-227">지정된 <see cref="T:System.Uri" />에 있는 원본 사이트 데이터 파일에 대한 리소스 스트림을 반환합니다([WPF 응용 프로그램 리소스, 콘텐츠 및 데이터 파일](~/docs/framework/wpf/app-development/wpf-application-resource-content-and-data-files.md) 참조).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-227">Returns a resource stream for a site-of-origin data file that is located at the specified <see cref="T:System.Uri" /> (see [WPF Application Resource, Content, and Data Files](~/docs/framework/wpf/app-development/wpf-application-resource-content-and-data-files.md)).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a6f91-228">지정된 <see cref="T:System.Windows.Resources.StreamResourceInfo" />에 있는 원본 사이트 데이터 파일에 대한 리소스 스트림이 들어 있는 <see cref="T:System.Uri" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-228">A <see cref="T:System.Windows.Resources.StreamResourceInfo" /> that contains a resource stream for a site-of-origin data file that is located at the specified <see cref="T:System.Uri" />.</span>
          </span>
          <span data-ttu-id="a6f91-229">느슨한 리소스가 없으면 <see langword="null" />이 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-229">If the loose resource is not found, <see langword="null" /> is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-230">이 메서드는 스레드로부터 안전 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-230">This method is not thread safe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a6f91-231">
            <see cref="T:System.Uri" />에 전달된 <see cref="M:System.Windows.Application.GetRemoteStream(System.Uri)" />가 null인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-231">The <see cref="T:System.Uri" /> that is passed to <see cref="M:System.Windows.Application.GetRemoteStream(System.Uri)" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a6f91-232">
            <see cref="T:System.Uri" />에 전달된 <see cref="M:System.Windows.Application.GetRemoteStream(System.Uri)" />가 상대 경로가 아니거나 절대 경로이지만 <c>pack://siteoforigin:,,,/</c> 형태가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-232">The <see cref="T:System.Uri" /> that is passed to <see cref="M:System.Windows.Application.GetRemoteStream(System.Uri)" /> is either not relative, or is absolute but not in the <c>pack://siteoforigin:,,,/</c> form.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Application.GetContentStream(System.Uri)" />
        <altmember cref="M:System.Windows.Application.GetResourceStream(System.Uri)" />
        <altmember cref="Overload:System.Windows.Application.LoadComponent" />
      </Docs>
    </Member>
    <Member MemberName="GetResourceStream">
      <MemberSignature Language="C#" Value="public static System.Windows.Resources.StreamResourceInfo GetResourceStream (Uri uriResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Resources.StreamResourceInfo GetResourceStream(class System.Uri uriResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.GetResourceStream(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetResourceStream (uriResource As Uri) As StreamResourceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Resources::StreamResourceInfo ^ GetResourceStream(Uri ^ uriResource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Resources.StreamResourceInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriResource" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uriResource">
          <span data-ttu-id="a6f91-233">포함된 리소스로 매핑되는 <see cref="T:System.Uri" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-233">The <see cref="T:System.Uri" /> that maps to an embedded resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f91-234">지정된 <see cref="T:System.Uri" />에 있는 리소스 데이터 파일에 대한 리소스 스트림을 반환합니다([WPF 응용 프로그램 리소스, 콘텐츠 및 데이터 파일](~/docs/framework/wpf/app-development/wpf-application-resource-content-and-data-files.md) 참조).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-234">Returns a resource stream for a resource data file that is located at the specified <see cref="T:System.Uri" /> (see [WPF Application Resource, Content, and Data Files](~/docs/framework/wpf/app-development/wpf-application-resource-content-and-data-files.md)).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a6f91-235">지정된 <see cref="T:System.Windows.Resources.StreamResourceInfo" />에 있는 리소스 데이터 파일에 대한 리소스 스트림이 들어 있는 <see cref="T:System.Uri" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-235">A <see cref="T:System.Windows.Resources.StreamResourceInfo" /> that contains a resource stream for resource data file that is located at the specified <see cref="T:System.Uri" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-236">이 메서드는 스레드로부터 안전 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-236">This method is not thread safe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a6f91-237">
            <see cref="T:System.Uri" />에 전달된 <see cref="M:System.Windows.Application.GetResourceStream(System.Uri)" />가 null인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-237">The <see cref="T:System.Uri" /> that is passed to <see cref="M:System.Windows.Application.GetResourceStream(System.Uri)" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a6f91-238">
            <see cref="T:System.Uri" />에 전달된 <see cref="M:System.Windows.Application.GetResourceStream(System.Uri)" />가 상대 경로가 아니거나 절대 경로이지만 <c>pack://application:,,,/</c> 형태가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-238">The <see cref="T:System.Uri" /> that is passed to <see cref="M:System.Windows.Application.GetResourceStream(System.Uri)" /> is either not relative, or is absolute but not in the <c>pack://application:,,,/</c> form.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="a6f91-239">
            <see cref="T:System.Uri" />에 전달된 <see cref="M:System.Windows.Application.GetResourceStream(System.Uri)" />를 발견할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-239">The <see cref="T:System.Uri" /> that is passed to <see cref="M:System.Windows.Application.GetResourceStream(System.Uri)" /> cannot be found.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Application.GetContentStream(System.Uri)" />
        <altmember cref="M:System.Windows.Application.GetRemoteStream(System.Uri)" />
        <altmember cref="Overload:System.Windows.Application.LoadComponent" />
      </Docs>
    </Member>
    <Member MemberName="LoadCompleted">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Application.LoadCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Event LoadCompleted As LoadCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::LoadCompletedEventHandler ^ LoadCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.LoadCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6f91-240">응용 프로그램의 탐색기에서 탐색한 콘텐츠가 로드 및 구문 분석되었으며 렌더링을 시작한 경우에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-240">Occurs when content that was navigated to by a navigator in the application has been loaded, parsed, and has begun rendering.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-241">탐색기는 한 <xref:System.Windows.Navigation.NavigationWindow> 또는 <xref:System.Windows.Controls.Frame>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-241">A navigator is either a <xref:System.Windows.Navigation.NavigationWindow> or a <xref:System.Windows.Controls.Frame>.</span></span>  
  
 <span data-ttu-id="a6f91-242"><xref:System.Windows.Navigation.NavigationService.LoadCompleted?displayProperty=nameWithType>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="a6f91-242">See <xref:System.Windows.Navigation.NavigationService.LoadCompleted?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a6f91-243">와 같은 이벤트 탐색된 된 콘텐츠를 수신 대기는 <xref:System.Windows.FrameworkElement.Loaded> 이벤트에 <xref:System.Windows.Controls.Page> 탐색 콘텐츠의 속성에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-243">Listen for events on the navigated content such as the <xref:System.Windows.FrameworkElement.Loaded> event on <xref:System.Windows.Controls.Page> before you access properties of the navigated content.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Application.Navigated" />
        <altmember cref="E:System.Windows.Application.Navigating" />
        <altmember cref="E:System.Windows.Application.NavigationProgress" />
        <altmember cref="E:System.Windows.Application.NavigationStopped" />
        <altmember cref="E:System.Windows.Application.NavigationFailed" />
        <altmember cref="E:System.Windows.Application.FragmentNavigation" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadComponent">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a6f91-244">지정된 [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]에 있는 [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] 파일을 로드합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-244">Loads a [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] file that is located at the specified [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)].</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-245">[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] 파일에는 응용 프로그램 코드 파일 일 수 있습니다 (으로 구성 된는 [!INCLUDE[TLA#tla_msbuild](~/includes/tlasharptla-msbuild-md.md)] 페이지 항목) 또는 응용 프로그램 데이터 파일 (리소스 파일, 콘텐츠 파일 또는의 원본 사이트 파일; 참조 [WPF 응용 프로그램 리소스, 내용 및 데이터 파일](~/docs/framework/wpf/app-development/wpf-application-resource-content-and-data-files.md)).</span><span class="sxs-lookup"><span data-stu-id="a6f91-245">The [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] file can be an application code file (configured as an [!INCLUDE[TLA#tla_msbuild](~/includes/tlasharptla-msbuild-md.md)] Page item) or an application data file (a resource file, content file, or site-of-origin file; see [WPF Application Resource, Content, and Data Files](~/docs/framework/wpf/app-development/wpf-application-resource-content-and-data-files.md)).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a6f91-246">이 메서드는 스레드로부터 안전 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-246">This method is not thread-safe.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Application.GetResourceStream(System.Uri)" />
        <altmember cref="M:System.Windows.Application.GetContentStream(System.Uri)" />
        <altmember cref="M:System.Windows.Application.GetRemoteStream(System.Uri)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadComponent">
      <MemberSignature Language="C#" Value="public static object LoadComponent (Uri resourceLocator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object LoadComponent(class System.Uri resourceLocator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.LoadComponent(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadComponent (resourceLocator As Uri) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LoadComponent(Uri ^ resourceLocator);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceLocator" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="resourceLocator">
          <span data-ttu-id="a6f91-247">상대 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 파일에 매핑되는 <see cref="T:System.Uri" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-247">A <see cref="T:System.Uri" /> that maps to a relative [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f91-248">지정된 [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]에 있는 [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] 파일을 로드하고 [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] 파일의 루트 요소에 의해 지정된 개체의 인스턴스로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-248">Loads a [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] file that is located at the specified [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)], and converts it to an instance of the object that is specified by the root element of the [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a6f91-249">로드한 XAML 파일에 지정된 루트 요소의 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-249">An instance of the root element specified by the XAML file loaded.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-250">반환 값의 루트 요소와 동일한 형식으로 명시적으로 변환 해야 합니다는 [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-250">You must explicitly convert the return value to the same type as the root element of the [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] file.</span></span>  
  
 <span data-ttu-id="a6f91-251">[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] 파일에는 응용 프로그램 코드 파일 일 수 있습니다 (으로 구성 된는 [!INCLUDE[TLA#tla_msbuild](~/includes/tlasharptla-msbuild-md.md)] 페이지 항목) 또는 응용 프로그램 데이터 파일 (리소스 파일, 콘텐츠 파일 또는의 원본 사이트 파일; 참조 [WPF 응용 프로그램 리소스, 내용 및 데이터 파일](~/docs/framework/wpf/app-development/wpf-application-resource-content-and-data-files.md)).</span><span class="sxs-lookup"><span data-stu-id="a6f91-251">The [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] file can be an application code file (configured as an [!INCLUDE[TLA#tla_msbuild](~/includes/tlasharptla-msbuild-md.md)] Page item) or an application data file (a resource file, content file, or site-of-origin file; see [WPF Application Resource, Content, and Data Files](~/docs/framework/wpf/app-development/wpf-application-resource-content-and-data-files.md)).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a6f91-252">이 메서드는 스레드로부터 안전 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-252">This method is not thread-safe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a6f91-253">
            <paramref name="resourceLocator" />가 null인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-253">
              <paramref name="resourceLocator" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a6f91-254">
            <paramref name="resourceLocator" />가 절대 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-254">The <paramref name="resourceLocator" /> is an absolute [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</span>
          </span>
        </exception>
        <exception cref="T:System.Exception">
          <span data-ttu-id="a6f91-255">파일이 [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] 파일이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-255">The file is not a [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] file.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Application.GetResourceStream(System.Uri)" />
        <altmember cref="M:System.Windows.Application.GetContentStream(System.Uri)" />
        <altmember cref="M:System.Windows.Application.GetRemoteStream(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="LoadComponent">
      <MemberSignature Language="C#" Value="public static void LoadComponent (object component, Uri resourceLocator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadComponent(object component, class System.Uri resourceLocator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.LoadComponent(System.Object,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub LoadComponent (component As Object, resourceLocator As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void LoadComponent(System::Object ^ component, Uri ^ resourceLocator);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="resourceLocator" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="a6f91-256">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 파일의 루트 요소와 같은 형식의 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-256">An object of the same type as the root element of the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] file.</span>
          </span>
        </param>
        <param name="resourceLocator">
          <span data-ttu-id="a6f91-257">상대 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 파일에 매핑되는 <see cref="T:System.Uri" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-257">A <see cref="T:System.Uri" /> that maps to a relative [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f91-258">지정된 [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]에 있는 [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] 파일을 로드하고 [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] 파일의 루트 요소가 지정하는 개체의 인스턴스로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-258">Loads a [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] file that is located at the specified [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] and converts it to an instance of the object that is specified by the root element of the [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-259">[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] 파일에는 응용 프로그램 코드 파일 일 수 있습니다 (으로 구성 된는 [!INCLUDE[TLA#tla_msbuild](~/includes/tlasharptla-msbuild-md.md)] 페이지 항목) 또는 응용 프로그램 데이터 파일 (리소스 파일, 콘텐츠 파일 또는의 원본 사이트 파일; 참조 [WPF 응용 프로그램 리소스, 내용 및 데이터 파일](~/docs/framework/wpf/app-development/wpf-application-resource-content-and-data-files.md)).</span><span class="sxs-lookup"><span data-stu-id="a6f91-259">The [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] file can be an application code file (configured as an [!INCLUDE[TLA#tla_msbuild](~/includes/tlasharptla-msbuild-md.md)] Page item) or an application data file (a resource file, content file, or site-of-origin file; see [WPF Application Resource, Content, and Data Files](~/docs/framework/wpf/app-development/wpf-application-resource-content-and-data-files.md)).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a6f91-260">이 메서드는 스레드로부터 안전 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-260">This method is not thread-safe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a6f91-261">
            <paramref name="resourceLocator" />가 null인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-261">
              <paramref name="resourceLocator" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a6f91-262">
            <paramref name="resourceLocator" />가 절대 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-262">The <paramref name="resourceLocator" /> is an absolute [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</span>
          </span>
        </exception>
        <exception cref="T:System.Exception">
          <span data-ttu-id="a6f91-263">
            <paramref name="component" />가 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 파일의 루트 요소와 일치하지 않는 형식인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-263">
              <paramref name="component" /> is of a type that does not match the root element of the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] file.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Application.GetResourceStream(System.Uri)" />
        <altmember cref="M:System.Windows.Application.GetContentStream(System.Uri)" />
        <altmember cref="M:System.Windows.Application.GetRemoteStream(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="MainWindow">
      <MemberSignature Language="C#" Value="public System.Windows.Window MainWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Window MainWindow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Application.MainWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property MainWindow As Window" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Window ^ MainWindow { System::Windows::Window ^ get(); void set(System::Windows::Window ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Window</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6f91-264">응용 프로그램의 주 창을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-264">Gets or sets the main window of the application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6f91-265">주 응용 프로그램 창으로 지정된 <see cref="T:System.Windows.Window" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-265">A <see cref="T:System.Windows.Window" /> that is designated as the main application window.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-266"><xref:System.Windows.Application.MainWindow%2A> 자동으로 첫 번째에 대 한 참조 설정 <xref:System.Windows.Window> 에서 인스턴스화할 수 있는 개체는 <xref:System.AppDomain>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-266"><xref:System.Windows.Application.MainWindow%2A> is automatically set with a reference to the first <xref:System.Windows.Window> object to be instantiated in the <xref:System.AppDomain>.</span></span>  
  
 <span data-ttu-id="a6f91-267">다른 주 창을 설정 하 여 지정할 수 있습니다 <xref:System.Windows.Application.MainWindow%2A> 다른 할당 <xref:System.Windows.Application.Windows%2A> 개체는 <xref:System.Windows.Application.MainWindow%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-267">You can specify a different main window by setting <xref:System.Windows.Application.MainWindow%2A> assigning another <xref:System.Windows.Application.Windows%2A> object to the <xref:System.Windows.Application.MainWindow%2A> property.</span></span>  
  
 <span data-ttu-id="a6f91-268">경우는 <xref:System.Windows.Application.ShutdownMode%2A> 속성은 <xref:System.Windows.Application> 개체로 설정 되어 <xref:System.Windows.ShutdownMode.OnMainWindowClose>, 주 창을 닫으면 응용 프로그램을 종료 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-268">If the <xref:System.Windows.Application.ShutdownMode%2A> property of the <xref:System.Windows.Application> object is set to <xref:System.Windows.ShutdownMode.OnMainWindowClose>, closing the main window causes the application to shut down.</span></span>  
  
 <span data-ttu-id="a6f91-269">설정할 수는 <xref:System.Windows.Application.MainWindow%2A> 속성 [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]응용 프로그램의 주 창 설정 하 여 생성 되는 창이 아닌 경우는 <xref:System.Windows.Application.StartupUri%2A> 속성에 [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-269">It is possible to set the <xref:System.Windows.Application.MainWindow%2A> property from [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)], if an application's main window is not the window that is produced by setting the <xref:System.Windows.Application.StartupUri%2A> property in [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)].</span></span> <span data-ttu-id="a6f91-270">두 가지 제한 된 [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] 접근 방식이 됩니다:</span><span class="sxs-lookup"><span data-stu-id="a6f91-270">The two limitations of the [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] approach are:</span></span>  
  
-   <span data-ttu-id="a6f91-271">하나만 지정할 수 있습니다는 [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]-만 <xref:System.Windows.Window> 또는 [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]-만 <xref:System.Windows.Navigation.NavigationWindow> 주 창으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-271">You can specify either a [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]-only <xref:System.Windows.Window> or a [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]-only <xref:System.Windows.Navigation.NavigationWindow> as the main window.</span></span>  
  
-   <span data-ttu-id="a6f91-272">설정 해야 합니다는 <xref:System.Windows.UIElement.Visibility%2A> 지정할 속성 창, 그렇지 않으면 표시 되지 않게 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-272">You must set the <xref:System.Windows.UIElement.Visibility%2A> property of the window you specify, otherwise it won't be shown.</span></span>  
  
 <span data-ttu-id="a6f91-273">첫 번째에 대 한 참조 <xref:System.Windows.Window> 개체를 인스턴스화할 수에 첫 번째 항목으로 추가 됩니다는 <xref:System.Windows.Application.Windows%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-273">The reference to the first <xref:System.Windows.Window> object to be instantiated is also added as the first item to the <xref:System.Windows.Application.Windows%2A> collection.</span></span> <span data-ttu-id="a6f91-274">경우 <xref:System.Windows.Application.MainWindow%2A> 다른에 대 한 참조도 설정한 <xref:System.Windows.Window>에 있는 항목의 순서는 동안 주 창에 대 한 참조 항목의 위치가 변경 됩니다 <xref:System.Windows.Application.Windows%2A> 동일 하 게 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-274">If <xref:System.Windows.Application.MainWindow%2A> is subsequently set with a reference to a different <xref:System.Windows.Window>, the position of the item with the reference to the main window will change, while the order of items in <xref:System.Windows.Application.Windows%2A> remains the same.</span></span> <span data-ttu-id="a6f91-275">따라서 항상 사용할 <xref:System.Windows.Application.MainWindow%2A> 주 창에서 첫 번째 항목 대신 참조 하려면 <xref:System.Windows.Application.Windows%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-275">Consequently, always use <xref:System.Windows.Application.MainWindow%2A> to refer to the main window instead of the first item in <xref:System.Windows.Application.Windows%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a6f91-276">주 창이 없으면는 <xref:System.Windows.Navigation.NavigationWindow>, 특정 액세스 해야 하 고 <xref:System.Windows.Navigation.NavigationWindow> 멤버의 값을 캐스팅 해야 합니다 <xref:System.Windows.Application.MainWindow%2A> 를 <xref:System.Windows.Navigation.NavigationWindow>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-276">If the main window is a <xref:System.Windows.Navigation.NavigationWindow>, and you need specific access to <xref:System.Windows.Navigation.NavigationWindow> members, you will need to cast the value of <xref:System.Windows.Application.MainWindow%2A> to <xref:System.Windows.Navigation.NavigationWindow>.</span></span>  
>   
>  <span data-ttu-id="a6f91-277">이 속성은 작성 된 스레드에서 에서만 사용할 수는 <xref:System.Windows.Application> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-277">This property is available only from the thread that created the <xref:System.Windows.Application> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6f91-278">다음 예제에서는 기본 응용 프로그램 창을 찾는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-278">The following example shows how to find the main application window.</span></span>  
  
 [!code-csharp[ApplicationMainWindowSnippets#GetApplicationMainWindowCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationMainWindowSnippets/CSharp/App.xaml.cs#getapplicationmainwindowcode)]
 [!code-vb[ApplicationMainWindowSnippets#GetApplicationMainWindowCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ApplicationMainWindowSnippets/visualbasic/application.xaml.vb#getapplicationmainwindowcode)]  
  
 <span data-ttu-id="a6f91-279">다음 예제에서는 설정 하는 방법을 보여 줍니다. <xref:System.Windows.Application.MainWindow%2A> 를 사용 하 여 [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-279">The following example shows how to set <xref:System.Windows.Application.MainWindow%2A> using [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)].</span></span>  
  
 [!code-xaml[ApplicationMainWindowSnippets#SetApplicationMainWindowXAML](~/samples/snippets/xaml/VS_Snippets_Wpf/ApplicationMainWindowSnippets/XAML/App.xaml#setapplicationmainwindowxaml)]  
  
 <span data-ttu-id="a6f91-280">다음 예제에서는 인스턴스화하는 방법을 보여 줍니다.는 <xref:System.Windows.Application.MainWindow%2A> 응용 프로그램 시작 시 코드에서.</span><span class="sxs-lookup"><span data-stu-id="a6f91-280">The following example shows how to instantiate the <xref:System.Windows.Application.MainWindow%2A> in code during application startup.</span></span>  
  
 [!code-csharp[HOWTOWindowManagementSnippets#FirstWindowUsingCodeCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/HOWTOWindowManagementSnippets/CSharp/App.xaml.cs#firstwindowusingcodecodebehind)]
 [!code-vb[HOWTOWindowManagementSnippets#FirstWindowUsingCodeCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HOWTOWindowManagementSnippets/visualbasic/application.xaml.vb#firstwindowusingcodecodebehind)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6f91-281">
            <see cref="P:System.Windows.Application.MainWindow" />가 브라우저에서 호스팅된 응용 프로그램(예: [!INCLUDE[TLA#tla_xbap#plural](~/includes/tlasharptla-xbapsharpplural-md.md)])에서 설정된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-281">
              <see cref="P:System.Windows.Application.MainWindow" /> is set from an application that's hosted in a browser, such as an [!INCLUDE[TLA#tla_xbap#plural](~/includes/tlasharptla-xbapsharpplural-md.md)].</span>
          </span>
        </exception>
        <altmember cref="E:System.Windows.Application.Exit" />
      </Docs>
    </Member>
    <Member MemberName="Navigated">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigatedEventHandler Navigated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigatedEventHandler Navigated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Application.Navigated" />
      <MemberSignature Language="VB.NET" Value="Public Event Navigated As NavigatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigatedEventHandler ^ Navigated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6f91-282">응용 프로그램의 탐색기에서 탐색 중인 콘텐츠를 찾은 경우에 발생합니다. 콘텐츠가 완전히 로드되지 않았을 수도 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-282">Occurs when the content that is being navigated to by a navigator in the application has been found, although it may not have completed loading.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-283">탐색기는 한 <xref:System.Windows.Navigation.NavigationWindow> 또는 <xref:System.Windows.Controls.Frame>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-283">A navigator is either a <xref:System.Windows.Navigation.NavigationWindow> or a <xref:System.Windows.Controls.Frame>.</span></span>  
  
 <span data-ttu-id="a6f91-284"><xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=nameWithType>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="a6f91-284">See <xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Application.Navigating" />
        <altmember cref="E:System.Windows.Application.LoadCompleted" />
        <altmember cref="E:System.Windows.Application.NavigationProgress" />
        <altmember cref="E:System.Windows.Application.NavigationStopped" />
        <altmember cref="E:System.Windows.Application.NavigationFailed" />
        <altmember cref="E:System.Windows.Application.FragmentNavigation" />
      </Docs>
    </Member>
    <Member MemberName="Navigating">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigatingCancelEventHandler Navigating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigatingCancelEventHandler Navigating" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Application.Navigating" />
      <MemberSignature Language="VB.NET" Value="Public Event Navigating As NavigatingCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigatingCancelEventHandler ^ Navigating;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigatingCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6f91-285">응용 프로그램의 탐색기에서 새 탐색이 요청된 경우에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-285">Occurs when a new navigation is requested by a navigator in the application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-286">탐색기는 한 <xref:System.Windows.Navigation.NavigationWindow> 또는 <xref:System.Windows.Controls.Frame>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-286">A navigator is either a <xref:System.Windows.Navigation.NavigationWindow> or a <xref:System.Windows.Controls.Frame>.</span></span>  
  
 <span data-ttu-id="a6f91-287"><xref:System.Windows.Navigation.NavigationService.Navigating?displayProperty=nameWithType>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="a6f91-287">See <xref:System.Windows.Navigation.NavigationService.Navigating?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Application.Navigated" />
        <altmember cref="E:System.Windows.Application.LoadCompleted" />
        <altmember cref="E:System.Windows.Application.NavigationProgress" />
        <altmember cref="E:System.Windows.Application.NavigationStopped" />
        <altmember cref="E:System.Windows.Application.NavigationFailed" />
        <altmember cref="E:System.Windows.Application.FragmentNavigation" />
      </Docs>
    </Member>
    <Member MemberName="NavigationFailed">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationFailedEventHandler NavigationFailed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationFailedEventHandler NavigationFailed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Application.NavigationFailed" />
      <MemberSignature Language="VB.NET" Value="Public Event NavigationFailed As NavigationFailedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigationFailedEventHandler ^ NavigationFailed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationFailedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6f91-288">응용 프로그램의 탐색기에서 요청된 내용을 탐색하는 동안 오류가 표시될 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-288">Occurs when an error occurs while a navigator in the application is navigating to the requested content.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-289">탐색기는 한 <xref:System.Windows.Navigation.NavigationWindow> 또는 <xref:System.Windows.Controls.Frame>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-289">A navigator is either a <xref:System.Windows.Navigation.NavigationWindow> or a <xref:System.Windows.Controls.Frame>.</span></span>  
  
 <span data-ttu-id="a6f91-290"><xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=nameWithType>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="a6f91-290">See <xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Application.Navigated" />
        <altmember cref="E:System.Windows.Application.Navigating" />
        <altmember cref="E:System.Windows.Application.LoadCompleted" />
        <altmember cref="E:System.Windows.Application.NavigationProgress" />
        <altmember cref="E:System.Windows.Application.NavigationStopped" />
        <altmember cref="E:System.Windows.Application.FragmentNavigation" />
      </Docs>
    </Member>
    <Member MemberName="NavigationProgress">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationProgressEventHandler NavigationProgress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationProgressEventHandler NavigationProgress" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Application.NavigationProgress" />
      <MemberSignature Language="VB.NET" Value="Public Event NavigationProgress As NavigationProgressEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigationProgressEventHandler ^ NavigationProgress;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationProgressEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6f91-291">탐색 진행률 정보를 제공하기 위해 응용 프로그램의 탐색기에서 관리되는 다운로드 중에 정기적으로 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-291">Occurs periodically during a download that is being managed by a navigator in the application to provide navigation progress information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-292">탐색기는 한 <xref:System.Windows.Navigation.NavigationWindow> 또는 <xref:System.Windows.Controls.Frame>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-292">A navigator is either a <xref:System.Windows.Navigation.NavigationWindow> or a <xref:System.Windows.Controls.Frame>.</span></span>  
  
 <span data-ttu-id="a6f91-293"><xref:System.Windows.Navigation.NavigationService.NavigationProgress?displayProperty=nameWithType>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="a6f91-293">See <xref:System.Windows.Navigation.NavigationService.NavigationProgress?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Application.Navigating" />
        <altmember cref="E:System.Windows.Application.Navigated" />
        <altmember cref="E:System.Windows.Application.LoadCompleted" />
        <altmember cref="E:System.Windows.Application.NavigationStopped" />
        <altmember cref="E:System.Windows.Application.NavigationFailed" />
        <altmember cref="E:System.Windows.Application.FragmentNavigation" />
      </Docs>
    </Member>
    <Member MemberName="NavigationStopped">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationStoppedEventHandler NavigationStopped;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationStoppedEventHandler NavigationStopped" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Application.NavigationStopped" />
      <MemberSignature Language="VB.NET" Value="Public Event NavigationStopped As NavigationStoppedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigationStoppedEventHandler ^ NavigationStopped;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationStoppedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6f91-294">응용 프로그램 탐색기의 <see langword="StopLoading" /> 메서드가 호출되거나 현재 탐색이 진행되는 동안 탐색기에서 새 탐색이 요청된 경우에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-294">Occurs when the <see langword="StopLoading" /> method of a navigator in the application is called, or when a new navigation is requested by a navigator while a current navigation is in progress.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-295">탐색기는 한 <xref:System.Windows.Navigation.NavigationWindow> 또는 <xref:System.Windows.Controls.Frame>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-295">A navigator is either a <xref:System.Windows.Navigation.NavigationWindow> or a <xref:System.Windows.Controls.Frame>.</span></span>  
  
 <span data-ttu-id="a6f91-296"><xref:System.Windows.Navigation.NavigationService.NavigationStopped?displayProperty=nameWithType>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="a6f91-296">See <xref:System.Windows.Navigation.NavigationService.NavigationStopped?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Application.Navigated" />
        <altmember cref="E:System.Windows.Application.Navigating" />
        <altmember cref="E:System.Windows.Application.LoadCompleted" />
        <altmember cref="E:System.Windows.Application.NavigationProgress" />
        <altmember cref="E:System.Windows.Application.NavigationFailed" />
        <altmember cref="E:System.Windows.Application.FragmentNavigation" />
      </Docs>
    </Member>
    <Member MemberName="OnActivated">
      <MemberSignature Language="C#" Value="protected virtual void OnActivated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnActivated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.OnActivated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnActivated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnActivated(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a6f91-297">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-297">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f91-298">
            <see cref="E:System.Windows.Application.Activated" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-298">Raises the <see cref="E:System.Windows.Application.Activated" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-299"><xref:System.Windows.Application.OnActivated%2A>는 <xref:System.Windows.Application.Activated> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-299"><xref:System.Windows.Application.OnActivated%2A> raises the <xref:System.Windows.Application.Activated> event.</span></span>  
  
 <span data-ttu-id="a6f91-300">파생 되는 형식을 <xref:System.Windows.Application> 재정의할 수 있습니다 <xref:System.Windows.Application.OnActivated%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-300">A type that derives from <xref:System.Windows.Application> may override <xref:System.Windows.Application.OnActivated%2A>.</span></span> <span data-ttu-id="a6f91-301">재정의 된 메서드를 호출 해야 <xref:System.Windows.Application.OnActivated%2A> 기본 클래스의 경우 <xref:System.Windows.Application.Activated> 발생 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-301">The overridden method must call <xref:System.Windows.Application.OnActivated%2A> in the base class if <xref:System.Windows.Application.Activated> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Application.OnDeactivated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDeactivated">
      <MemberSignature Language="C#" Value="protected virtual void OnDeactivated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeactivated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.OnDeactivated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeactivated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeactivated(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a6f91-302">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-302">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f91-303">
            <see cref="E:System.Windows.Application.Deactivated" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-303">Raises the <see cref="E:System.Windows.Application.Deactivated" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-304"><xref:System.Windows.Application.OnDeactivated%2A>는 <xref:System.Windows.Application.Deactivated> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-304"><xref:System.Windows.Application.OnDeactivated%2A> raises the <xref:System.Windows.Application.Deactivated> event.</span></span>  
  
 <span data-ttu-id="a6f91-305">파생 되는 형식을 <xref:System.Windows.Application> 재정의할 수 있습니다 <xref:System.Windows.Application.OnDeactivated%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-305">A type that derives from <xref:System.Windows.Application> may override <xref:System.Windows.Application.OnDeactivated%2A>.</span></span> <span data-ttu-id="a6f91-306">재정의 된 메서드를 호출 해야 <xref:System.Windows.Application.OnDeactivated%2A> 기본 클래스의 경우 <xref:System.Windows.Application.Deactivated> 발생 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-306">The overridden method must call <xref:System.Windows.Application.OnDeactivated%2A> in the base class if <xref:System.Windows.Application.Deactivated> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Application.OnActivated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnExit">
      <MemberSignature Language="C#" Value="protected virtual void OnExit (System.Windows.ExitEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnExit(class System.Windows.ExitEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.OnExit(System.Windows.ExitEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnExit (e As ExitEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnExit(System::Windows::ExitEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.ExitEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a6f91-307">이벤트 데이터를 포함하는 <see cref="T:System.Windows.ExitEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-307">An <see cref="T:System.Windows.ExitEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f91-308">
            <see cref="E:System.Windows.Application.Exit" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-308">Raises the <see cref="E:System.Windows.Application.Exit" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-309"><xref:System.Windows.Application.OnExit%2A>는 <xref:System.Windows.Application.Exit> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-309"><xref:System.Windows.Application.OnExit%2A> raises the <xref:System.Windows.Application.Exit> event.</span></span>  
  
 <span data-ttu-id="a6f91-310">파생 되는 형식을 <xref:System.Windows.Application> 재정의할 수 있습니다는 <xref:System.Windows.Application.OnExit%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a6f91-310">A type that derives from <xref:System.Windows.Application> may override the <xref:System.Windows.Application.OnExit%2A> method.</span></span> <span data-ttu-id="a6f91-311">재정의 된 메서드를 호출 해야 <xref:System.Windows.Application.OnExit%2A> 기본 클래스의 경우 <xref:System.Windows.Application.Exit> 발생 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-311">The overridden method must call <xref:System.Windows.Application.OnExit%2A> in the base class if <xref:System.Windows.Application.Exit> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Application.OnStartup(System.Windows.StartupEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnSessionEnding(System.Windows.SessionEndingCancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnFragmentNavigation">
      <MemberSignature Language="C#" Value="protected virtual void OnFragmentNavigation (System.Windows.Navigation.FragmentNavigationEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFragmentNavigation(class System.Windows.Navigation.FragmentNavigationEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.OnFragmentNavigation(System.Windows.Navigation.FragmentNavigationEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFragmentNavigation (e As FragmentNavigationEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFragmentNavigation(System::Windows::Navigation::FragmentNavigationEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Navigation.FragmentNavigationEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a6f91-312">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Navigation.FragmentNavigationEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-312">A <see cref="T:System.Windows.Navigation.FragmentNavigationEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f91-313">
            <see cref="E:System.Windows.Application.FragmentNavigation" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-313">Raises the <see cref="E:System.Windows.Application.FragmentNavigation" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-314"><xref:System.Windows.Application.OnFragmentNavigation%2A>는 <xref:System.Windows.Application.FragmentNavigation> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-314"><xref:System.Windows.Application.OnFragmentNavigation%2A> raises the <xref:System.Windows.Application.FragmentNavigation> event.</span></span>  
  
 <span data-ttu-id="a6f91-315">파생 되는 형식을 <xref:System.Windows.Application> 재정의할 수 있습니다 <xref:System.Windows.Application.OnFragmentNavigation%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-315">A type that derives from <xref:System.Windows.Application> may override <xref:System.Windows.Application.OnFragmentNavigation%2A>.</span></span> <span data-ttu-id="a6f91-316">재정의 된 메서드를 호출 해야 <xref:System.Windows.Application.OnFragmentNavigation%2A> 기본 클래스의 경우 <xref:System.Windows.Application.FragmentNavigation> 발생 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-316">The overridden method must call <xref:System.Windows.Application.OnFragmentNavigation%2A> in the base class if <xref:System.Windows.Application.FragmentNavigation> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Application.OnNavigationFailed(System.Windows.Navigation.NavigationFailedEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnLoadCompleted(System.Windows.Navigation.NavigationEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnNavigated(System.Windows.Navigation.NavigationEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnNavigating(System.Windows.Navigation.NavigatingCancelEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnNavigationProgress(System.Windows.Navigation.NavigationProgressEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnNavigationStopped(System.Windows.Navigation.NavigationEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnLoadCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnLoadCompleted (System.Windows.Navigation.NavigationEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoadCompleted(class System.Windows.Navigation.NavigationEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.OnLoadCompleted(System.Windows.Navigation.NavigationEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoadCompleted (e As NavigationEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoadCompleted(System::Windows::Navigation::NavigationEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Navigation.NavigationEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a6f91-317">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Navigation.NavigationEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-317">A <see cref="T:System.Windows.Navigation.NavigationEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f91-318">
            <see cref="E:System.Windows.Application.LoadCompleted" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-318">Raises the <see cref="E:System.Windows.Application.LoadCompleted" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-319"><xref:System.Windows.Application.OnLoadCompleted%2A>는 <xref:System.Windows.Application.LoadCompleted> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-319"><xref:System.Windows.Application.OnLoadCompleted%2A> raises the <xref:System.Windows.Application.LoadCompleted> event.</span></span>  
  
 <span data-ttu-id="a6f91-320">파생 되는 형식을 <xref:System.Windows.Application> 재정의할 수 있습니다 <xref:System.Windows.Application.OnLoadCompleted%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-320">A type that derives from <xref:System.Windows.Application> may override <xref:System.Windows.Application.OnLoadCompleted%2A>.</span></span> <span data-ttu-id="a6f91-321">재정의 된 메서드를 호출 해야 <xref:System.Windows.Application.OnLoadCompleted%2A> 기본 클래스의 경우 <xref:System.Windows.Application.LoadCompleted> 발생 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-321">The overridden method must call <xref:System.Windows.Application.OnLoadCompleted%2A> in the base class if <xref:System.Windows.Application.LoadCompleted> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Application.OnNavigationFailed(System.Windows.Navigation.NavigationFailedEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnFragmentNavigation(System.Windows.Navigation.FragmentNavigationEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnNavigated(System.Windows.Navigation.NavigationEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnNavigating(System.Windows.Navigation.NavigatingCancelEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnNavigationProgress(System.Windows.Navigation.NavigationProgressEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnNavigationStopped(System.Windows.Navigation.NavigationEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnNavigated">
      <MemberSignature Language="C#" Value="protected virtual void OnNavigated (System.Windows.Navigation.NavigationEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNavigated(class System.Windows.Navigation.NavigationEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.OnNavigated(System.Windows.Navigation.NavigationEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNavigated (e As NavigationEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNavigated(System::Windows::Navigation::NavigationEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Navigation.NavigationEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a6f91-322">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Navigation.NavigationEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-322">A <see cref="T:System.Windows.Navigation.NavigationEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f91-323">
            <see cref="E:System.Windows.Application.Navigated" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-323">Raises the <see cref="E:System.Windows.Application.Navigated" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-324"><xref:System.Windows.Application.OnNavigated%2A>는 <xref:System.Windows.Application.Navigated> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-324"><xref:System.Windows.Application.OnNavigated%2A> raises the <xref:System.Windows.Application.Navigated> event.</span></span>  
  
 <span data-ttu-id="a6f91-325">파생 되는 형식을 <xref:System.Windows.Application> 재정의할 수 있습니다 <xref:System.Windows.Application.OnNavigated%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-325">A type that derives from <xref:System.Windows.Application> may override <xref:System.Windows.Application.OnNavigated%2A>.</span></span> <span data-ttu-id="a6f91-326">재정의 된 메서드를 호출 해야 <xref:System.Windows.Application.OnNavigated%2A> 기본 클래스의 경우 <xref:System.Windows.Application.Navigated> 발생 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-326">The overridden method must call <xref:System.Windows.Application.OnNavigated%2A> in the base class if <xref:System.Windows.Application.Navigated> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Application.OnNavigationFailed(System.Windows.Navigation.NavigationFailedEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnFragmentNavigation(System.Windows.Navigation.FragmentNavigationEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnLoadCompleted(System.Windows.Navigation.NavigationEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnNavigating(System.Windows.Navigation.NavigatingCancelEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnNavigationProgress(System.Windows.Navigation.NavigationProgressEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnNavigationStopped(System.Windows.Navigation.NavigationEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnNavigating">
      <MemberSignature Language="C#" Value="protected virtual void OnNavigating (System.Windows.Navigation.NavigatingCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNavigating(class System.Windows.Navigation.NavigatingCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.OnNavigating(System.Windows.Navigation.NavigatingCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNavigating (e As NavigatingCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNavigating(System::Windows::Navigation::NavigatingCancelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Navigation.NavigatingCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a6f91-327">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Navigation.NavigatingCancelEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-327">A <see cref="T:System.Windows.Navigation.NavigatingCancelEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f91-328">
            <see cref="E:System.Windows.Application.Navigating" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-328">Raises the <see cref="E:System.Windows.Application.Navigating" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-329"><xref:System.Windows.Application.OnNavigating%2A>는 <xref:System.Windows.Application.Navigating> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-329"><xref:System.Windows.Application.OnNavigating%2A> raises the <xref:System.Windows.Application.Navigating> event.</span></span>  
  
 <span data-ttu-id="a6f91-330">파생 되는 형식을 <xref:System.Windows.Application> 재정의할 수 있습니다 <xref:System.Windows.Application.OnNavigating%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-330">A type that derives from <xref:System.Windows.Application> may override <xref:System.Windows.Application.OnNavigating%2A>.</span></span> <span data-ttu-id="a6f91-331">재정의 된 메서드를 호출 해야 <xref:System.Windows.Application.OnNavigating%2A> 기본 클래스의 경우 <xref:System.Windows.Application.Navigating> 발생 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-331">The overridden method must call <xref:System.Windows.Application.OnNavigating%2A> in the base class if <xref:System.Windows.Application.Navigating> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Application.OnNavigationFailed(System.Windows.Navigation.NavigationFailedEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnFragmentNavigation(System.Windows.Navigation.FragmentNavigationEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnLoadCompleted(System.Windows.Navigation.NavigationEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnNavigated(System.Windows.Navigation.NavigationEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnNavigationProgress(System.Windows.Navigation.NavigationProgressEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnNavigationStopped(System.Windows.Navigation.NavigationEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnNavigationFailed">
      <MemberSignature Language="C#" Value="protected virtual void OnNavigationFailed (System.Windows.Navigation.NavigationFailedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNavigationFailed(class System.Windows.Navigation.NavigationFailedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.OnNavigationFailed(System.Windows.Navigation.NavigationFailedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNavigationFailed (e As NavigationFailedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNavigationFailed(System::Windows::Navigation::NavigationFailedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Navigation.NavigationFailedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a6f91-332">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Navigation.NavigationFailedEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-332">A <see cref="T:System.Windows.Navigation.NavigationFailedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f91-333">
            <see cref="E:System.Windows.Application.NavigationFailed" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-333">Raises the <see cref="E:System.Windows.Application.NavigationFailed" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-334"><xref:System.Windows.Application.OnNavigationFailed%2A>는 <xref:System.Windows.Application.NavigationFailed> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-334"><xref:System.Windows.Application.OnNavigationFailed%2A> raises the <xref:System.Windows.Application.NavigationFailed> event.</span></span>  
  
 <span data-ttu-id="a6f91-335">파생 되는 형식을 <xref:System.Windows.Application> 재정의할 수 있습니다 <xref:System.Windows.Application.OnNavigationFailed%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-335">A type that derives from <xref:System.Windows.Application> may override <xref:System.Windows.Application.OnNavigationFailed%2A>.</span></span> <span data-ttu-id="a6f91-336">재정의 된 메서드를 호출 해야 <xref:System.Windows.Application.OnNavigationFailed%2A> 기본 클래스의 경우 <xref:System.Windows.Application.NavigationFailed> 발생 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-336">The overridden method must call <xref:System.Windows.Application.OnNavigationFailed%2A> in the base class if <xref:System.Windows.Application.NavigationFailed> needs to be raised.</span></span>  
  
   
  
## Examples  
 <xref:System.Windows.Application.OnFragmentNavigation%2A>  
  
 <xref:System.Windows.Application.OnLoadCompleted%2A>  
  
 <xref:System.Windows.Application.OnNavigating%2A>  
  
 <xref:System.Windows.Application.OnNavigated%2A>  
  
 <xref:System.Windows.Application.OnNavigationProgress%2A>  
  
 <xref:System.Windows.Application.OnNavigationStopped%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNavigationProgress">
      <MemberSignature Language="C#" Value="protected virtual void OnNavigationProgress (System.Windows.Navigation.NavigationProgressEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNavigationProgress(class System.Windows.Navigation.NavigationProgressEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.OnNavigationProgress(System.Windows.Navigation.NavigationProgressEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNavigationProgress (e As NavigationProgressEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNavigationProgress(System::Windows::Navigation::NavigationProgressEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Navigation.NavigationProgressEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a6f91-337">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Navigation.NavigationProgressEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-337">A <see cref="T:System.Windows.Navigation.NavigationProgressEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f91-338">
            <see cref="E:System.Windows.Application.NavigationProgress" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-338">Raises the <see cref="E:System.Windows.Application.NavigationProgress" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-339"><xref:System.Windows.Application.OnNavigationProgress%2A>는 <xref:System.Windows.Application.NavigationProgress> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-339"><xref:System.Windows.Application.OnNavigationProgress%2A> raises the <xref:System.Windows.Application.NavigationProgress> event.</span></span>  
  
 <span data-ttu-id="a6f91-340">파생 되는 형식을 <xref:System.Windows.Application> 재정의할 수 있습니다 <xref:System.Windows.Application.OnNavigationProgress%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-340">A type that derives from <xref:System.Windows.Application> may override <xref:System.Windows.Application.OnNavigationProgress%2A>.</span></span> <span data-ttu-id="a6f91-341">재정의 된 메서드가 명시적으로 호출 해야 <xref:System.Windows.Application.OnNavigationProgress%2A> 기본 클래스의 경우 <xref:System.Windows.Application.NavigationProgress> 발생 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-341">The overridden method must explicitly call <xref:System.Windows.Application.OnNavigationProgress%2A> in the base class if <xref:System.Windows.Application.NavigationProgress> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Application.OnNavigationFailed(System.Windows.Navigation.NavigationFailedEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnFragmentNavigation(System.Windows.Navigation.FragmentNavigationEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnLoadCompleted(System.Windows.Navigation.NavigationEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnNavigated(System.Windows.Navigation.NavigationEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnNavigating(System.Windows.Navigation.NavigatingCancelEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnNavigationStopped(System.Windows.Navigation.NavigationEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnNavigationStopped">
      <MemberSignature Language="C#" Value="protected virtual void OnNavigationStopped (System.Windows.Navigation.NavigationEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNavigationStopped(class System.Windows.Navigation.NavigationEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.OnNavigationStopped(System.Windows.Navigation.NavigationEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNavigationStopped (e As NavigationEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNavigationStopped(System::Windows::Navigation::NavigationEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Navigation.NavigationEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a6f91-342">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Navigation.NavigationEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-342">A <see cref="T:System.Windows.Navigation.NavigationEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f91-343">
            <see cref="E:System.Windows.Application.NavigationStopped" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-343">Raises the <see cref="E:System.Windows.Application.NavigationStopped" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-344"><xref:System.Windows.Application.OnNavigationStopped%2A>는 <xref:System.Windows.Application.NavigationStopped> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-344"><xref:System.Windows.Application.OnNavigationStopped%2A> raises the <xref:System.Windows.Application.NavigationStopped> event.</span></span>  
  
 <span data-ttu-id="a6f91-345">파생 되는 형식을 <xref:System.Windows.Application> 재정의할 수 있습니다 <xref:System.Windows.Application.OnNavigationStopped%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-345">A type that derives from <xref:System.Windows.Application> may override <xref:System.Windows.Application.OnNavigationStopped%2A>.</span></span> <span data-ttu-id="a6f91-346">재정의 된 메서드를 호출 해야 <xref:System.Windows.Application.OnNavigationStopped%2A> 기본 클래스의 경우 <xref:System.Windows.Application.NavigationStopped> 발생 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-346">The overridden method must call <xref:System.Windows.Application.OnNavigationStopped%2A> in the base class if <xref:System.Windows.Application.NavigationStopped> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Application.OnFragmentNavigation(System.Windows.Navigation.FragmentNavigationEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnLoadCompleted(System.Windows.Navigation.NavigationEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnNavigated(System.Windows.Navigation.NavigationEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnNavigating(System.Windows.Navigation.NavigatingCancelEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnNavigationProgress(System.Windows.Navigation.NavigationProgressEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnNavigationFailed(System.Windows.Navigation.NavigationFailedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSessionEnding">
      <MemberSignature Language="C#" Value="protected virtual void OnSessionEnding (System.Windows.SessionEndingCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSessionEnding(class System.Windows.SessionEndingCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.OnSessionEnding(System.Windows.SessionEndingCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSessionEnding (e As SessionEndingCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSessionEnding(System::Windows::SessionEndingCancelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.SessionEndingCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a6f91-347">이벤트 데이터를 포함하는 <see cref="T:System.Windows.SessionEndingCancelEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-347">A <see cref="T:System.Windows.SessionEndingCancelEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f91-348">
            <see cref="E:System.Windows.Application.SessionEnding" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-348">Raises the <see cref="E:System.Windows.Application.SessionEnding" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-349"><xref:System.Windows.Application.OnSessionEnding%2A>는 <xref:System.Windows.Application.SessionEnding> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-349"><xref:System.Windows.Application.OnSessionEnding%2A> raises the <xref:System.Windows.Application.SessionEnding> event.</span></span>  
  
 <span data-ttu-id="a6f91-350">파생 되는 형식을 <xref:System.Windows.Application> 재정의할 수 있습니다 <xref:System.Windows.Application.OnSessionEnding%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-350">A type that derives from <xref:System.Windows.Application> may override <xref:System.Windows.Application.OnSessionEnding%2A>.</span></span> <span data-ttu-id="a6f91-351">재정의 된 메서드를 호출 해야 <xref:System.Windows.Application.OnSessionEnding%2A> 기본 클래스의 경우 <xref:System.Windows.Application.SessionEnding> 발생 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-351">The overridden method must call <xref:System.Windows.Application.OnSessionEnding%2A> in the base class if <xref:System.Windows.Application.SessionEnding> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Application.OnStartup(System.Windows.StartupEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnExit(System.Windows.ExitEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnStartup">
      <MemberSignature Language="C#" Value="protected virtual void OnStartup (System.Windows.StartupEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStartup(class System.Windows.StartupEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.OnStartup(System.Windows.StartupEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStartup (e As StartupEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStartup(System::Windows::StartupEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.StartupEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a6f91-352">이벤트 데이터를 포함하는 <see cref="T:System.Windows.StartupEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-352">A <see cref="T:System.Windows.StartupEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f91-353">
            <see cref="E:System.Windows.Application.Startup" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-353">Raises the <see cref="E:System.Windows.Application.Startup" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-354"><xref:System.Windows.Application.OnStartup%2A>는 <xref:System.Windows.Application.Startup> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-354"><xref:System.Windows.Application.OnStartup%2A> raises the <xref:System.Windows.Application.Startup> event.</span></span>  
  
 <span data-ttu-id="a6f91-355">파생 되는 형식을 <xref:System.Windows.Application> 재정의할 수 있습니다 <xref:System.Windows.Application.OnStartup%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-355">A type that derives from <xref:System.Windows.Application> may override <xref:System.Windows.Application.OnStartup%2A>.</span></span> <span data-ttu-id="a6f91-356">재정의 된 메서드를 호출 해야 <xref:System.Windows.Application.OnStartup%2A> 기본 클래스의 경우는 <xref:System.Windows.Application.Startup> 이벤트 발생 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-356">The overridden method must call <xref:System.Windows.Application.OnStartup%2A> in the base class if the <xref:System.Windows.Application.Startup> event needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Application.OnSessionEnding(System.Windows.SessionEndingCancelEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnExit(System.Windows.ExitEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Properties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Application.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IDictionary ^ Properties { System::Collections::IDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6f91-357">응용 프로그램 범위 속성의 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-357">Gets a collection of application-scope properties.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6f91-358">응용 프로그램 범위 속성이 들어 있는 <see cref="T:System.Collections.IDictionary" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-358">An <see cref="T:System.Collections.IDictionary" /> that contains the application-scope properties.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-359"><xref:System.Windows.Application> 사전을 통해 노출 <xref:System.Windows.Application.Properties%2A> 는 응용 프로그램 범위의 속성을 저장 하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-359"><xref:System.Windows.Application> exposes a dictionary via <xref:System.Windows.Application.Properties%2A> which you can use to store application-scope properties.</span></span> <span data-ttu-id="a6f91-360">모든 코드에서 상태를 공유할 수 있습니다는 <xref:System.AppDomain> 고유한 상태 코드를 작성할 필요 없이 스레드로부터 안전한 방식입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-360">This allows you to share state amongst all code in an <xref:System.AppDomain> in a thread-safe fashion, without the need to write your own state code.</span></span>  
  
 <span data-ttu-id="a6f91-361">속성에 저장 된 <xref:System.Windows.Application.Properties%2A> 반환 되는 적절 한 형식으로 변환 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-361">Properties stored in <xref:System.Windows.Application.Properties%2A> must be converted to the appropriate type returned.</span></span>  
  
 <span data-ttu-id="a6f91-362"><xref:System.Windows.Application.Properties%2A> 속성은 스레드로부터 안전 하 고 모든 스레드에서 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-362">The <xref:System.Windows.Application.Properties%2A> property is thread safe and is available from any thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6f91-363">다음 예제에서는 어떻게 만들고 사용 하 여 응용 프로그램 범위의 속성을 사용 하 여 <xref:System.Windows.Application.Properties%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-363">The following example shows how create and use an application-scope property using <xref:System.Windows.Application.Properties%2A>.</span></span>  
  
 [!code-xaml[ApplicationPropertiesSnippets#HandleStartupXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationPropertiesSnippets/CSharp/App.xaml#handlestartupxaml)]  
  
 [!code-csharp[ApplicationPropertiesSnippets#HandleStartupCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationPropertiesSnippets/CSharp/App.xaml.cs#handlestartupcodebehind)]
 [!code-vb[ApplicationPropertiesSnippets#HandleStartupCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ApplicationPropertiesSnippets/visualbasic/application.xaml.vb#handlestartupcodebehind)]  
  
 [!code-xaml[ApplicationPropertiesSnippets#MainWindowGetPropertyXAML1](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationPropertiesSnippets/CSharp/MainWindow.xaml#mainwindowgetpropertyxaml1)]  
[!code-xaml[ApplicationPropertiesSnippets#MainWindowGetPropertyXAML2](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationPropertiesSnippets/CSharp/MainWindow.xaml#mainwindowgetpropertyxaml2)]  
  
 [!code-csharp[ApplicationPropertiesSnippets#MainWindowGetPropertyCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationPropertiesSnippets/CSharp/MainWindow.xaml.cs#mainwindowgetpropertycodebehind)]
 [!code-vb[ApplicationPropertiesSnippets#MainWindowGetPropertyCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ApplicationPropertiesSnippets/visualbasic/mainwindow.xaml.vb#mainwindowgetpropertycodebehind)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Application.Startup" />
      </Docs>
    </Member>
    <Member MemberName="ResourceAssembly">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly ResourceAssembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Reflection.Assembly ResourceAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Application.ResourceAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ResourceAssembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Reflection::Assembly ^ ResourceAssembly { System::Reflection::Assembly ^ get(); void set(System::Reflection::Assembly ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6f91-364">[!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] 응용 프로그램의 리소스에 대한 팩 [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]를 제공하는 <see cref="T:System.Reflection.Assembly" />를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-364">Gets or sets the <see cref="T:System.Reflection.Assembly" /> that provides the pack [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] for resources in a [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6f91-365">[!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] 응용 프로그램의 리소스에 대한 팩 [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]를 제공하는 <see cref="T:System.Reflection.Assembly" />에 대한 참조입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-365">A reference to the <see cref="T:System.Reflection.Assembly" /> that provides the pack [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] for resources in a [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] application.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-366">기본적으로 [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] 리소스가 반환 되는 값으로 식별 되는 항목 어셈블리와 관련 하 여 실행 시 확인 되는 <xref:System.Reflection.Assembly.GetEntryAssembly%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a6f91-366">By default, [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] resources are resolved at run time with respect to the entry assembly, which is identified by the value returned from the <xref:System.Reflection.Assembly.GetEntryAssembly%2A> method.</span></span>  
  
 <span data-ttu-id="a6f91-367">진입 어셈블리에서 반환 되는 어셈블리는 <xref:System.Reflection.Assembly.GetEntryAssembly%2A> 다음 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-367">The entry assembly is the assembly that is returned by <xref:System.Reflection.Assembly.GetEntryAssembly%2A> and could be the following:</span></span>  
  
-   <span data-ttu-id="a6f91-368">기본 응용 프로그램 도메인에서 실행 가능한 어셈블리입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-368">The executable assembly in the default application domain.</span></span>  
  
-   <span data-ttu-id="a6f91-369">호출 하 여 실행할 첫 번째 어셈블리 <xref:System.AppDomain.ExecuteAssembly%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-369">The first assembly to be executed by calling <xref:System.AppDomain.ExecuteAssembly%2A>.</span></span>  
  
 <span data-ttu-id="a6f91-370">그러나 다음과 같은 경우에는 [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] 어셈블리 항목 어셈블리에 대 한 참조를 가져올 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-370">In the following cases, however, a [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] assembly cannot get a reference to the entry assembly:</span></span>  
  
-   <span data-ttu-id="a6f91-371">관리 되지 않는 (네이티브) 응용 프로그램 호스트는 [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] 어셈블리입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-371">An unmanaged (native) application hosts the [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] assembly.</span></span>  
  
-   <span data-ttu-id="a6f91-372">관리 되는 응용 프로그램 호스트는 [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] 이외의 메서드를 사용 하 여 새 응용 프로그램 도메인에 로드 하 여 어셈블리 <xref:System.AppDomain.ExecuteAssembly%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-372">A managed application hosts the [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] assembly by loading it into a new application domain using a method other than <xref:System.AppDomain.ExecuteAssembly%2A>.</span></span>  
  
 <span data-ttu-id="a6f91-373">이러한 경우 모두 <xref:System.Reflection.Assembly.GetEntryAssembly%2A> 반환 `null`, 및 [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] 어셈블리의 리소스를 확인할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-373">In both of these cases, <xref:System.Reflection.Assembly.GetEntryAssembly%2A> returns `null`, and the [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] assembly's resources cannot be resolved.</span></span> <span data-ttu-id="a6f91-374">이러한 경우 <xref:System.Windows.Application.ResourceAssembly%2A> 한 번만 리소스를 확인 하는 데 사용 해야 하는 어셈블리에 대 한 참조로 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-374">In these cases, <xref:System.Windows.Application.ResourceAssembly%2A> can be set, once only, with a reference to the assembly that should be used to resolve resources.</span></span>  
  
 <span data-ttu-id="a6f91-375"><xref:System.Windows.Application.ResourceAssembly%2A> 리소스 어셈블리가 후 변경 될 가능성이 없기 때문에 한 번 설정만 수는 [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] 어셈블리가 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-375"><xref:System.Windows.Application.ResourceAssembly%2A> can only be set once because it is unlikely that the resource assembly will change after the [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] assembly is loaded.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a6f91-376"><xref:System.Windows.Application.ResourceAssembly%2A> 설정할 수 없습니다는 [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] 어셈블리 항목 어셈블리를 검색할 수 있습니다-즉, <xref:System.Reflection.Assembly.GetEntryAssembly%2A> 어셈블리에 대 한 참조를 반환 하지 않고 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-376"><xref:System.Windows.Application.ResourceAssembly%2A> cannot be set when a [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] assembly can discover the entry assembly—that is, when <xref:System.Reflection.Assembly.GetEntryAssembly%2A> returns a reference to an assembly rather than `null`.</span></span>  
  
 <span data-ttu-id="a6f91-377">이 속성은 스레드로부터 안전 하 고 모든 스레드에서 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-377">This property is thread safe and is available from any thread.</span></span>  
  
 <span data-ttu-id="a6f91-378"><xref:System.Windows.Application.ResourceAssembly%2A> .NET Framework 버전 3.5에서에서 도입 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-378"><xref:System.Windows.Application.ResourceAssembly%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a6f91-379">자세한 내용은 [버전 및 종속성](~/docs/framework/migration-guide/versions-and-dependencies.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="a6f91-379">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6f91-380">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] 응용 프로그램에 진입 어셈블리가 있거나 <see cref="P:System.Windows.Application.ResourceAssembly" />가 이미 설정된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-380">A [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] application has an entry assembly, or <see cref="P:System.Windows.Application.ResourceAssembly" /> has already been set.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Resources">
      <MemberSignature Language="C#" Value="public System.Windows.ResourceDictionary Resources { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.ResourceDictionary Resources" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Application.Resources" />
      <MemberSignature Language="VB.NET" Value="Public Property Resources As ResourceDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::ResourceDictionary ^ Resources { System::Windows::ResourceDictionary ^ get(); void set(System::Windows::ResourceDictionary ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Markup.IHaveResources.Resources</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6f91-381">응용 프로그램 범위 리소스(예: 스타일 및 브러시)의 컬렉션을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-381">Gets or sets a collection of application-scope resources, such as styles and brushes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6f91-382">0개 이상의 응용 프로그램 범위 리소스가 들어 있는 <see cref="T:System.Windows.ResourceDictionary" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-382">A <see cref="T:System.Windows.ResourceDictionary" /> object that contains zero or more application-scope resources.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-383"><xref:System.Windows.Application.Resources%2A> 속성 창과 응용 프로그램의 요소 간에 리소스를 공유 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-383">The <xref:System.Windows.Application.Resources%2A> property can be used to share resources across the windows and elements of an application.</span></span> <span data-ttu-id="a6f91-384">또한는 <xref:System.Windows.Application.Resources%2A> 속성 다음과 같은 순서로 트래버스 리소스 조회 경로에 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-384">Additionally, the <xref:System.Windows.Application.Resources%2A> property is included in the resource lookup path, which is traversed in the following order:</span></span>  
  
1.  <span data-ttu-id="a6f91-385">요소</span><span class="sxs-lookup"><span data-stu-id="a6f91-385">Elements</span></span>  
  
2.  <span data-ttu-id="a6f91-386">Windows</span><span class="sxs-lookup"><span data-stu-id="a6f91-386">Windows</span></span>  
  
3.  <xref:System.Windows.Application.Resources%2A?displayProperty=nameWithType>  
  
4.  <span data-ttu-id="a6f91-387">시스템</span><span class="sxs-lookup"><span data-stu-id="a6f91-387">System</span></span>  
  
 <span data-ttu-id="a6f91-388">따라서 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 요소는 응용 프로그램 범위 리소스에 바인딩될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-388">Consequently, [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elements can bind to application-scope resources.</span></span> <span data-ttu-id="a6f91-389">또한, 리소스 변경, 리소스 시스템 해당 요소 되도록 해당 리소스에 바인딩되는 속성의 변경 내용을 반영 하도록 자동으로 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-389">Additionally, if resources change, the resource system ensures that element properties which are bound to those resources are automatically updated to reflect the change.</span></span>  
  
 <span data-ttu-id="a6f91-390">응용 프로그램 범위 리소스 응용 프로그램 전체에서 일관 된 테마를 지원 하는 간단한 방법을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-390">Application-scope resources provide a simple way to support a consistent theme across your application.</span></span> <span data-ttu-id="a6f91-391">에 테마를 쉽게 만들 수 있습니다 [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] 를 사용 하 여는 `Application.Resources` 태그입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-391">You can easily create a theme in [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] by using the `Application.Resources` tag.</span></span> <span data-ttu-id="a6f91-392">그러나 응용 프로그램이 많은 테마 요소를 포함할 수도 있는 여러 테마를 지원 하기 쉬울 수 있습니다 하나를 사용 하 여 관리 <xref:System.Windows.ResourceDictionary> 각 테마에 대 한 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="a6f91-392">However, if your application supports multiple themes, which may contain a large number of theme elements, it might be easier to manage them using one <xref:System.Windows.ResourceDictionary> instance for each theme.</span></span> <span data-ttu-id="a6f91-393">이러한 방식으로 새 테마에 적절 한 리소스 속성을 설정 하 여 적용 될 수 있는 <xref:System.Windows.ResourceDictionary>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-393">In this way, a new theme can be applied by setting the Resources property to the appropriate <xref:System.Windows.ResourceDictionary>.</span></span>  
  
 <span data-ttu-id="a6f91-394">사용 하는 경우를 확인 하려면 두 가지 고려 사항을 <xref:System.Windows.Application.Resources%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-394">There are two considerations to make when using <xref:System.Windows.Application.Resources%2A>.</span></span> <span data-ttu-id="a6f91-395">먼저, 사전 *키* 은 개체를 설정 하 고 (참고는 문자열을 사용 하는 경우 키가 대/소문자 구분) 속성 값을 가져올 경우 정확히 동일한 개체 인스턴스를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-395">First, the dictionary *key* is an object, so you need to use exactly the same object instance when both setting and getting a property value (note that the key is case-sensitive when using a string).</span></span> <span data-ttu-id="a6f91-396">두 번째, 사전 *값* 개체 이므로 속성 값을 가져올 때 값을 원하는 형식으로 변환 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-396">Second, the dictionary *value* is an object, so you will need to convert the value to the desired type when getting a property value.</span></span>  
  
 <span data-ttu-id="a6f91-397"><xref:System.Windows.Application.Resources%2A> 스레드로부터 안전 하 고 모든 스레드에서 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-397"><xref:System.Windows.Application.Resources%2A> is thread safe and is available from any thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6f91-398">사용 하는 방법을 보여 주는이 예제 [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] 일관성 있는 시각적 모양을 만들려는 응용 프로그램 범위 리소스와 함께 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-398">This example illustrates how to use [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] together with application-scope resources to create a consistent visual appearance.</span></span>  
  
 [!code-xaml[ApplicationResourcesSnippets#ResourcesPropertyXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationResourcesSnippets/CS/App.xaml#resourcespropertyxaml)]  
  
 [!code-xaml[ApplicationResourcesSnippets#WindowBackgroundPropertyXAML1](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationResourcesSnippets/CS/MainWindow.xaml#windowbackgroundpropertyxaml1)]  
[!code-xaml[ApplicationResourcesSnippets#WindowBackgroundPropertyXAML2](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationResourcesSnippets/CS/MainWindow.xaml#windowbackgroundpropertyxaml2)]  
  
 <span data-ttu-id="a6f91-399">다음 예제 코드 및 XAML에서 응용 프로그램 리소스를 설정 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-399">The following example shows how to set an application resource in code and XAML.</span></span>  
  
 [!code-csharp[HOWTOApplicationModelSnippets#SetApplicationScopeResourceCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/HOWTOApplicationModelSnippets/CSharp/ApplicationPropertiesSnippet.xaml.cs#setapplicationscoperesourcecode)]
 [!code-vb[HOWTOApplicationModelSnippets#SetApplicationScopeResourceCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HOWTOApplicationModelSnippets/visualbasic/applicationpropertiessnippet.xaml.vb#setapplicationscoperesourcecode)]  
  
 [!code-xaml[HOWTOApplicationModelSnippets#SetApplicationScopeResourceXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/HOWTOApplicationModelSnippets/CSharp/App.xaml#setapplicationscoperesourcexaml)]  
  
 <span data-ttu-id="a6f91-400">다음 예제에서는 코드에서 응용 프로그램 리소스를 가져오는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-400">The following example shows how to get an application resource in code.</span></span>  
  
 [!code-csharp[HOWTOApplicationModelSnippets#GetApplicationScopeResourceCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/HOWTOApplicationModelSnippets/CSharp/ApplicationPropertiesSnippet.xaml.cs#getapplicationscoperesourcecode)]
 [!code-vb[HOWTOApplicationModelSnippets#GetApplicationScopeResourceCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HOWTOApplicationModelSnippets/visualbasic/applicationpropertiessnippet.xaml.vb#getapplicationscoperesourcecode)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Run">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a6f91-401">WPF(Windows Presentation Foundation) 응용 프로그램을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-401">Starts a Windows Presentation Foundation (WPF) application.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public int Run ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Run() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.Run" />
      <MemberSignature Language="VB.NET" Value="Public Function Run () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Run();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a6f91-402">[!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)] 응용 프로그램을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-402">Starts a [!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)] application.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a6f91-403">응용 프로그램이 종료될 때 운영 체제로 반환되는 <see cref="T:System.Int32" /> 응용 프로그램 종료 코드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-403">The <see cref="T:System.Int32" /> application exit code that is returned to the operating system when the application shuts down.</span>
          </span>
          <span data-ttu-id="a6f91-404">기본적으로 종료 코드 값은 0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-404">By default, the exit code value is 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-405"><xref:System.Windows.Application.Run%2A> 시작 하기 위해 호출 됩니다는 [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] 응용 프로그램입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-405"><xref:System.Windows.Application.Run%2A> is called to start a [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] application.</span></span> <span data-ttu-id="a6f91-406">정의 하는 경우 프로그램 <xref:System.Windows.Application> 태그 또는 태그 및 코드 숨김을 사용 하 여 <xref:System.Windows.Application.Run%2A> 암시적으로 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-406">If you define your <xref:System.Windows.Application> using markup, or markup and code-behind, <xref:System.Windows.Application.Run%2A> will be called implicitly.</span></span> <span data-ttu-id="a6f91-407">그러나 정의 하는 경우 프로그램 <xref:System.Windows.Application> 코드를 사용 해야 합니다를 명시적으로 호출 <xref:System.Windows.Application.Run%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-407">However, if you define your <xref:System.Windows.Application> using code, you will need to explicitly call <xref:System.Windows.Application.Run%2A>.</span></span>  
  
 <span data-ttu-id="a6f91-408">때 <xref:System.Windows.Application.Run%2A> 가 호출 <xref:System.Windows.Application> 새 연결 <xref:System.Windows.Threading.Dispatcher> 인스턴스는 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 스레드입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-408">When <xref:System.Windows.Application.Run%2A> is called, <xref:System.Windows.Application> attaches a new <xref:System.Windows.Threading.Dispatcher> instance to the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] thread.</span></span> <span data-ttu-id="a6f91-409">다음으로 <xref:System.Windows.Threading.Dispatcher> 개체의 <xref:System.Windows.Threading.Dispatcher.Run%2A> windows 메시지를 처리 하는 메시지 펌프를 시작 하는 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-409">Next, the <xref:System.Windows.Threading.Dispatcher> object's <xref:System.Windows.Threading.Dispatcher.Run%2A> method is called, which starts a message pump to process windows messages.</span></span> <span data-ttu-id="a6f91-410">마지막으로,는 <xref:System.Windows.Threading.Dispatcher> 호출 개체는 <xref:System.Windows.Application> 개체의는 <xref:System.Windows.Application.OnStartup%2A> 를 발생 시키는 메서드는 <xref:System.Windows.Application.Startup> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-410">Finally, the <xref:System.Windows.Threading.Dispatcher> object calls the <xref:System.Windows.Application> object's the <xref:System.Windows.Application.OnStartup%2A> method to raise the <xref:System.Windows.Application.Startup> event.</span></span> <span data-ttu-id="a6f91-411">따라서 응용 프로그램 실행 모델 이미 처리할 때 설정 되었으며 <xref:System.Windows.Application.Startup>, 이때 응용 프로그램에 실행 되 고 것으로 간주 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-411">Consequently, the application execution model has been established by the time you handle <xref:System.Windows.Application.Startup>, at which point the application is considered to be running.</span></span>  
  
 <span data-ttu-id="a6f91-412">응용 프로그램의 경우 실행이 중지 <xref:System.Windows.Application.Shutdown%2A> 버전이 호출 됩니다; 값은 <xref:System.Windows.Application.ShutdownMode%2A> 속성 시기를 결정 합니다. <xref:System.Windows.Application.Shutdown%2A> 호출 되 고 자동으로 수행 됨 또는 명시적으로 해야 하는지 여부를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-412">An application stops running when <xref:System.Windows.Application.Shutdown%2A> is called; the value of the <xref:System.Windows.Application.ShutdownMode%2A> property determines when <xref:System.Windows.Application.Shutdown%2A> is called, and whether it happens automatically or you need to explicitly call it.</span></span>  
  
 <span data-ttu-id="a6f91-413"><xref:System.Windows.Application.Run%2A> 만들어진 스레드에서만에서 호출할 수는 <xref:System.Windows.Application> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-413"><xref:System.Windows.Application.Run%2A> can be called only from the thread that creates the <xref:System.Windows.Application> object.</span></span> <span data-ttu-id="a6f91-414">또한 <xref:System.Windows.Application.Run%2A> 에서 호출할 수 없습니다는 [!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-414">Also, <xref:System.Windows.Application.Run%2A> cannot be called from a [!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6f91-415">다음 예제에서는 사용자 지정을 사용 하는 응용 프로그램 <xref:System.Windows.Application> 명시적으로 호출 해야 하므로 <xref:System.Windows.Application.Run%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-415">The following example shows an application that uses a custom <xref:System.Windows.Application> and must therefore explicitly call <xref:System.Windows.Application.Run%2A>.</span></span>  
  
 [!code-csharp[ApplicationRunSnippets#CustomEntryPointAndRunCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationRunSnippets/CSharp/App.cs#customentrypointandruncode)]
 [!code-vb[ApplicationRunSnippets#CustomEntryPointAndRunCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ApplicationRunSnippets/visualbasic/app.vb#customentrypointandruncode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6f91-416">브라우저에서 호스팅된 응용 프로그램(예: [!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)])에서 <see cref="M:System.Windows.Application.Run" />이 호출되는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-416">
              <see cref="M:System.Windows.Application.Run" /> is called from a browser-hosted application (for example, an [!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)]).</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Application.Run(System.Windows.Window)" />
        <altmember cref="M:System.Windows.Application.Shutdown(System.Int32)" />
        <altmember cref="E:System.Windows.Application.Exit" />
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public int Run (System.Windows.Window window);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Run(class System.Windows.Window window) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.Run(System.Windows.Window)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Run(System::Windows::Window ^ window);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="window" Type="System.Windows.Window" />
      </Parameters>
      <Docs>
        <param name="window">
          <span data-ttu-id="a6f91-417">응용 프로그램이 시작될 때 자동으로 열리는 <see cref="T:System.Windows.Window" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-417">A <see cref="T:System.Windows.Window" /> that opens automatically when an application starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f91-418">[!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)] 응용 프로그램을 시작하고 지정된 창을 엽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-418">Starts a [!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)] application and opens the specified window.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a6f91-419">응용 프로그램이 종료될 때 운영 체제로 반환되는 <see cref="T:System.Int32" /> 응용 프로그램 종료 코드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-419">The <see cref="T:System.Int32" /> application exit code that is returned to the operating system when the application shuts down.</span>
          </span>
          <span data-ttu-id="a6f91-420">기본적으로 종료 코드 값은 0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-420">By default, the exit code value is 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-421">이 오버 로드 확장은 <xref:System.Windows.Application.Run%2A> 메서드를 실행 중인 응용 프로그램이 시작 된 후 지정 된 창을 엽니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-421">This overload extends the <xref:System.Windows.Application.Run%2A> method to open the specified window after an application starts running.</span></span>  
  
 <span data-ttu-id="a6f91-422">코드를 정의 하는 경우 <xref:System.Windows.Application> 하는 창을 엽니다.이 실행을 시작한 경우, 명시적으로 호출 <xref:System.Windows.Application.Run%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-422">If you define a code <xref:System.Windows.Application> that opens a window when it starts running, you explicitly call <xref:System.Windows.Application.Run%2A>.</span></span>  
  
 <span data-ttu-id="a6f91-423">만들면 사용자 <xref:System.Windows.Application> 태그 또는 태그 및 관련 코드를 사용 하 여 자동으로 창을 열 수 있습니다는 다음 방법 중 하나를 사용 하는 동안:</span><span class="sxs-lookup"><span data-stu-id="a6f91-423">If you create your <xref:System.Windows.Application> using markup, or markup and code-behind, you can automatically open a window during using either of the following techniques:</span></span>  
  
-   <span data-ttu-id="a6f91-424">설정 하 여 선언적 <xref:System.Windows.Application.StartupUri%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-424">Declaratively, by setting <xref:System.Windows.Application.StartupUri%2A>.</span></span>  
  
-   <span data-ttu-id="a6f91-425">프로그래밍 방식으로 처리 하 여 <xref:System.Windows.Application.Startup>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-425">Programmatically, by handling <xref:System.Windows.Application.Startup>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6f91-426">다음 예제를 인스턴스화하는 정적 진입점 수동으로 만든 메서드를 응용 프로그램에서는 <xref:System.Windows.Application>를 호출 하기 전에 <xref:System.Windows.Application.Run%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-426">The following example shows an application with a manually-created static entry point method that instantiates <xref:System.Windows.Application>, before calling <xref:System.Windows.Application.Run%2A>.</span></span>  
  
 [!code-csharp[ApplicationRunOL1Snippets#CustomEntryPointAndRunOL1CODE](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationRunOL1Snippets/CSharp/App.cs#customentrypointandrunol1code)]
 [!code-vb[ApplicationRunOL1Snippets#CustomEntryPointAndRunOL1CODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ApplicationRunOL1Snippets/visualbasic/app.vb#customentrypointandrunol1code)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6f91-427">브라우저에서 호스팅된 응용 프로그램(예: [!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)])에서 <see cref="M:System.Windows.Application.Run" />이 호출되는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-427">
              <see cref="M:System.Windows.Application.Run" /> is called from a browser-hosted application (for example, an [!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)]).</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Application.Shutdown" />
        <altmember cref="M:System.Windows.Application.Shutdown(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SessionEnding">
      <MemberSignature Language="C#" Value="public event System.Windows.SessionEndingCancelEventHandler SessionEnding;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.SessionEndingCancelEventHandler SessionEnding" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Application.SessionEnding" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SessionEnding As SessionEndingCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::SessionEndingCancelEventHandler ^ SessionEnding;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.SessionEndingCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6f91-428">사용자가 로그오프하거나 운영 체제를 종료하여 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 세션을 끝낼 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-428">Occurs when the user ends the [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] session by logging off or shutting down the operating system.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-429">기본적으로 응용 프로그램이 종료 될 때는 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 세션을 끝낼은 사용자가 로그 오프 하거나 종료 하는 경우에 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-429">By default, an application shuts down when the [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] session ends, which occurs when a user logs off or shuts down.</span></span> <span data-ttu-id="a6f91-430">이 경우 [!INCLUDE[TLA2#tla_mswin](~/includes/tla2sharptla-mswin-md.md)] 를 종료 하려면 각 열려 있는 응용 프로그램을 요청 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-430">When this happens, [!INCLUDE[TLA2#tla_mswin](~/includes/tla2sharptla-mswin-md.md)] asks each open application to shut down.</span></span> <span data-ttu-id="a6f91-431">그러나 있기 응용 프로그램이 발생 하는 때를 종료할 준비가 되어 있지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-431">However, it is possible that an application may not be ready to shut down when this occurs.</span></span> <span data-ttu-id="a6f91-432">예를 들어 응용 프로그램 또는 장기 실행 작업 중에 일관성이 없는 상태에 있는 데이터가 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-432">For example, an application may have data that is in an inconsistent state, or in the middle of a long-running operation.</span></span> <span data-ttu-id="a6f91-433">이러한 상황에서 세션 종료를 방지 하는 것이 바람직 수 있으며 사용자가 세션을 종료 여부를 결정 하는 옵션을 허용 하는 것이 더 효율적일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-433">In these situations, it may be desirable to prevent the session from ending, and may be more desirable to allow users the option to decide whether or not to let the session to end.</span></span>  
  
 <span data-ttu-id="a6f91-434">처리 하 여 세션이 끝날 때를 감지할 수 있습니다는 <xref:System.Windows.Application.SessionEnding> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-434">You can detect when a session ends by handling the <xref:System.Windows.Application.SessionEnding> event.</span></span> <span data-ttu-id="a6f91-435">응용 프로그램 세션 종료 하지 못하도록 해야 하는 경우는 <xref:System.Windows.SessionEndingCancelEventArgs> 노출 하는 이벤트 처리기에 전달 되는 인수는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 로 설정 하는 `true` (기본값은 `false`) 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-435">If an application needs to prevent the session from ending, the <xref:System.Windows.SessionEndingCancelEventArgs> argument that is passed to the event handler exposes the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> that you set to `true` (the default value is `false`).</span></span>  
  
 <span data-ttu-id="a6f91-436">경우 <xref:System.Windows.Application.SessionEnding> 처리 되지 않은 또는 취소 하지 않고 처리 <xref:System.Windows.Application.Shutdown%2A> 라고 및 <xref:System.Windows.Application.Exit> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-436">If <xref:System.Windows.Application.SessionEnding> is unhandled, or is handled without being cancelled, <xref:System.Windows.Application.Shutdown%2A> is called and the <xref:System.Windows.Application.Exit> event is raised.</span></span>  
  
 <span data-ttu-id="a6f91-437">세션이 종료 되는 이유는 방법에 대 한 자세한 정보를 얻으려면 응용 프로그램을 검사할 수 <xref:System.Windows.SessionEndingCancelEventArgs.ReasonSessionEnding%2A>, 중 하나인는 <xref:System.Windows.ReasonSessionEnding> 값 (<xref:System.Windows.ReasonSessionEnding.Logoff> 및 <xref:System.Windows.ReasonSessionEnding.Shutdown>).</span><span class="sxs-lookup"><span data-stu-id="a6f91-437">To obtain more information about why the session is ending, an application can inspect <xref:System.Windows.SessionEndingCancelEventArgs.ReasonSessionEnding%2A>, which is one of the <xref:System.Windows.ReasonSessionEnding> values (<xref:System.Windows.ReasonSessionEnding.Logoff> and <xref:System.Windows.ReasonSessionEnding.Shutdown>).</span></span>  
  
 <span data-ttu-id="a6f91-438"><xref:System.Windows.Application.SessionEnding> 콘솔 응용 프로그램에서 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-438"><xref:System.Windows.Application.SessionEnding> is not raised by console applications.</span></span>  
  
 <span data-ttu-id="a6f91-439"><xref:System.Windows.Application.SessionEnding> 만드는 스레드는에 발생 하는 <xref:System.Windows.Application> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-439"><xref:System.Windows.Application.SessionEnding> is raised only on the thread that creates the <xref:System.Windows.Application> object.</span></span>  
  
 <span data-ttu-id="a6f91-440"><xref:System.Windows.Application.SessionEnding> 에 대 한 끝나면 [!INCLUDE[TLA#tla_xbap#plural](~/includes/tlasharptla-xbapsharpplural-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-440"><xref:System.Windows.Application.SessionEnding> is not raised for [!INCLUDE[TLA#tla_xbap#plural](~/includes/tlasharptla-xbapsharpplural-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6f91-441">다음 예제에서는 처리 하는 방법을 <xref:System.Windows.Application.SessionEnding> 이벤트 취소 하 고 사용자입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-441">The following example demonstrates how to handle the <xref:System.Windows.Application.SessionEnding> event and allow the user to cancel it.</span></span>  
  
 [!code-xaml[ApplicationSessionEndingSnippets#HandlingSessionEndingXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationSessionEndingSnippets/CSharp/App.xaml#handlingsessionendingxaml)]  
  
 [!code-csharp[ApplicationSessionEndingSnippets#HandlingSessionEndingCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationSessionEndingSnippets/CSharp/App.xaml.cs#handlingsessionendingcodebehind)]
 [!code-vb[ApplicationSessionEndingSnippets#HandlingSessionEndingCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ApplicationSessionEndingSnippets/visualbasic/application.xaml.vb#handlingsessionendingcodebehind)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Application.OnSessionEnding(System.Windows.SessionEndingCancelEventArgs)" />
        <altmember cref="E:System.Windows.Application.Startup" />
      </Docs>
    </Member>
    <Member MemberName="SetCookie">
      <MemberSignature Language="C#" Value="public static void SetCookie (Uri uri, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCookie(class System.Uri uri, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.SetCookie(System.Uri,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCookie(Uri ^ uri, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="a6f91-442">쿠키를 만들어야 하는 위치를 지정하는 <see cref="T:System.Uri" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-442">The <see cref="T:System.Uri" /> that specifies the location for which the cookie should be created.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a6f91-443">쿠키 데이터가 들어 있는 <see cref="T:System.String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-443">The <see cref="T:System.String" /> that contains the cookie data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f91-444">
            <see cref="T:System.Uri" />에 의해 지정된 위치에 대한 쿠키를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-444">Creates a cookie for the location specified by a <see cref="T:System.Uri" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-445">쿠키는 응용 프로그램에서 클라이언트 컴퓨터에 응용 프로그램 세션 (세션 쿠키) 중 또는 응용 프로그램 세션 (영구 쿠키) 간에 저장 될 수 있는 데이터의 일부를 임의로.</span><span class="sxs-lookup"><span data-stu-id="a6f91-445">A cookie is an arbitrary piece of data that can be stored by an application on the client machine during application sessions (session cookies) or across application sessions (persistent cookies).</span></span> <span data-ttu-id="a6f91-446">호출 하 여 두 종류의 쿠키를 만들 수 있습니다 <xref:System.Windows.Application.SetCookie%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-446">You can create both types of cookies by calling <xref:System.Windows.Application.SetCookie%2A>.</span></span>  
  
 <span data-ttu-id="a6f91-447">쿠키 데이터는 일반적으로 다음과 같은 형식 이름/값 쌍 형식의 가집니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-447">Cookie data typically takes the form of a name/value pair in the following format:</span></span>  
  
 `Name=Value`  
  
 <span data-ttu-id="a6f91-448">이 형식의 문자열을 전달 하면 <xref:System.Windows.Application.SetCookie%2A>와 함께 <xref:System.Uri> 쿠키를 설정 해야 하는 위치 (일반적으로 응용 프로그램 도메인).</span><span class="sxs-lookup"><span data-stu-id="a6f91-448">You pass a string of this format to <xref:System.Windows.Application.SetCookie%2A>, along with the <xref:System.Uri> of the location for which the cookie should be set (typically, the application domain).</span></span>  
  
 <span data-ttu-id="a6f91-449">에 전달 하는 쿠키는 세션 쿠키 또는 영구 쿠키 쿠키 문자열 여부에 따라 달라 집니다 <xref:System.Windows.Application.SetCookie%2A> 만료 날짜를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-449">Whether a cookie is a session cookie or a persistent cookie depends on whether the cookie string that you pass to <xref:System.Windows.Application.SetCookie%2A> includes an expiry date.</span></span> <span data-ttu-id="a6f91-450">세션 쿠키에 대 한 문자열에서 한 만료 날짜를 포함 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-450">The string for a session cookie does not include an expiry date.</span></span> <span data-ttu-id="a6f91-451">영구 쿠키의 문자열에는 다음과 같은 형식 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-451">The string for a persistent cookie does, and must be in the following format:</span></span>  
  
 `NAME=VALUE; expires=DAY, DD-MMM-YYYY HH:MM:SS GMT`  
  
 <span data-ttu-id="a6f91-452">영구 쿠키는 현재에서 저장 된 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 설치의 임시 인터넷 파일 폴더 만료 될 때까지,이 경우 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-452">Persistent cookies are stored in the current [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] installation's Temporary Internet Files folder until they expire, in which case they are deleted.</span></span> <span data-ttu-id="a6f91-453">만료 날짜가 과거 날짜/시간 값으로 설정 하 여 응용 프로그램에서 영구 쿠키를 삭제할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-453">You can delete a persistent cookie from your application by setting its expiry date to a date/time value that is in the past.</span></span>  
  
 <span data-ttu-id="a6f91-454">쿠키에 대 한 개요 [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)], 참조 [탐색 개요](~/docs/framework/wpf/app-development/navigation-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-454">For an overview of cookies in [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)], see [Navigation Overview](~/docs/framework/wpf/app-development/navigation-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="a6f91-455">지정된 쿠키를 만드는 동안 문제가 발생하면 <see cref="M:System.Windows.Application.SetCookie(System.Uri,System.String)" />에서 호출된 <see langword="InternetSetCookie" /> 함수에 의해 [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] 오류가 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-455">A [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] error is raised by the <see langword="InternetSetCookie" /> function (called by <see cref="M:System.Windows.Application.SetCookie(System.Uri,System.String)" />) if a problem occurs when attempting to create the specified cookie.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="a6f91-456">파일 기반에 대 한 쿠키를 가져오기 위한 <see cref="T:System.Uri" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-456">for getting the cookie for a file-based <see cref="T:System.Uri" />.</span>
          </span>
          <span data-ttu-id="a6f91-457">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-457">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="a6f91-458">비-파일 기반에 대 한 쿠키를 가져오기 위한 <see cref="T:System.Uri" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-458">for getting the cookie for a non-file-based <see cref="T:System.Uri" />.</span>
          </span>
          <span data-ttu-id="a6f91-459">연결 된 열거형의 경우: <see cref="F:System.Net.NetworkAccess.Connect" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-459">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Connect" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Application.GetCookie(System.Uri)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Shutdown">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a6f91-460">응용 프로그램을 종료합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-460">Shuts down an application.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shutdown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a6f91-461">응용 프로그램을 종료합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-461">Shuts down an application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-462">때 <xref:System.Windows.Application.Shutdown%2A> 호출 되는 응용 프로그램 실행을 중지 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-462">When <xref:System.Windows.Application.Shutdown%2A> is called, an application stops running.</span></span> <span data-ttu-id="a6f91-463">처리할 수는 <xref:System.Windows.Application.Exit> 응용 프로그램은 적절 한 처리를 수행 하 고, 실행이 중지 시기를 감지 하는 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-463">You can handle the <xref:System.Windows.Application.Exit> event to detect when an application is about to stop running, to perform any appropriate processing.</span></span>  
  
 <span data-ttu-id="a6f91-464"><xref:System.Windows.Application.Shutdown%2A> 암시적으로 호출한 [!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)] 다음과 같은 경우:</span><span class="sxs-lookup"><span data-stu-id="a6f91-464"><xref:System.Windows.Application.Shutdown%2A> is implicitly called by [!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)] in the following situations:</span></span>  
  
-   <span data-ttu-id="a6f91-465">때 <xref:System.Windows.Application.ShutdownMode%2A> 로 설정 된 <xref:System.Windows.ShutdownMode.OnLastWindowClose>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-465">When <xref:System.Windows.Application.ShutdownMode%2A> is set to <xref:System.Windows.ShutdownMode.OnLastWindowClose>.</span></span>  
  
-   <span data-ttu-id="a6f91-466">경우는 <xref:System.Windows.Application.ShutdownMode%2A> 로 설정 된 <xref:System.Windows.ShutdownMode.OnMainWindowClose>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-466">When the <xref:System.Windows.Application.ShutdownMode%2A> is set to <xref:System.Windows.ShutdownMode.OnMainWindowClose>.</span></span>  
  
-   <span data-ttu-id="a6f91-467">사용자 세션을 종료 하는 경우 및 <xref:System.Windows.Application.SessionEnding> 이벤트, 처리 되지 않은 또는 취소 하지 않고 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-467">When a user ends a session and the <xref:System.Windows.Application.SessionEnding> event is either unhandled, or handled without cancellation.</span></span>  
  
 <span data-ttu-id="a6f91-468">호출 <xref:System.Windows.Application.Shutdown%2A> 명시적으로 응용 프로그램을 종료 하면에 관계 없이 <xref:System.Windows.Application.ShutdownMode%2A> 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-468">Calling <xref:System.Windows.Application.Shutdown%2A> explicitly causes an application to shut down, regardless of the <xref:System.Windows.Application.ShutdownMode%2A> setting.</span></span> <span data-ttu-id="a6f91-469">그러나 경우 <xref:System.Windows.Application.ShutdownMode%2A> 로 설정 되어 <xref:System.Windows.ShutdownMode.OnExplicitShutdown>, 호출 해야 <xref:System.Windows.Application.Shutdown%2A> 응용 프로그램을 종료 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-469">However, if <xref:System.Windows.Application.ShutdownMode%2A> is set to <xref:System.Windows.ShutdownMode.OnExplicitShutdown>, you must call <xref:System.Windows.Application.Shutdown%2A> to shut down an application.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a6f91-470">때 <xref:System.Windows.Application.Shutdown%2A> 는 호출 응용 프로그램에서 종료 여부에 관계 없이 <xref:System.Windows.Window.Closing> 열린 창의 이벤트를 취소 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-470">When <xref:System.Windows.Application.Shutdown%2A> is called, the application will shut down irrespective of whether the <xref:System.Windows.Window.Closing> event of any open windows is canceled.</span></span>  
  
 <span data-ttu-id="a6f91-471">이 메서드를 만든 스레드가 에서만 호출할 수 있습니다는 <xref:System.Windows.Application> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-471">This method can be called only from the thread that created the <xref:System.Windows.Application> object.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="a6f91-472">모든 창과 사용자 입력된 이벤트를 제한 없이 사용할 수 있는 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-472">for permission to use all windows and user input events without restriction.</span>
          </span>
          <span data-ttu-id="a6f91-473">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-473">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Application.Shutdown(System.Int32)" />
        <altmember cref="P:System.Windows.Application.ShutdownMode" />
        <altmember cref="E:System.Windows.Application.SessionEnding" />
        <altmember cref="M:System.Windows.Application.Run" />
        <altmember cref="M:System.Windows.Application.Run(System.Windows.Window)" />
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown (int exitCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Shutdown(int32 exitCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.Shutdown(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shutdown (exitCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shutdown(int exitCode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exitCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="exitCode">
          <span data-ttu-id="a6f91-474">응용 프로그램에 대한 정수 종료 코드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-474">An integer exit code for an application.</span>
          </span>
          <span data-ttu-id="a6f91-475">기본 종료 코드는 0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-475">The default exit code is 0.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f91-476">지정된 종료 코드를 운영 체제에 반환하는 응용 프로그램을 종료합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-476">Shuts down an application that returns the specified exit code to the operating system.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-477">처리할 수는 <xref:System.Windows.Application.Exit> 종료 코드를 설정 하는 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-477">You can handle the <xref:System.Windows.Application.Exit> event to set an exit code.</span></span> <span data-ttu-id="a6f91-478">그러나 명시적으로 호출 <xref:System.Windows.Application.Shutdown%2A>를 처리 하 고 <xref:System.Windows.Application.Exit> 만 호출할 수는 종료 코드를 설정 하려면 <xref:System.Windows.Application.Shutdown%2A> 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-478">However, if you explicitly call <xref:System.Windows.Application.Shutdown%2A>, and you handle <xref:System.Windows.Application.Exit> only to set an exit code, you can call <xref:System.Windows.Application.Shutdown%2A> instead.</span></span>  
  
 <span data-ttu-id="a6f91-479">이 메서드를 만든 스레드가 에서만 호출할 수 있습니다는 <xref:System.Windows.Application> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-479">This method can be called only from the thread that created the <xref:System.Windows.Application> object.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="a6f91-480">모든 창과 사용자 입력된 이벤트를 제한 없이 사용할 수 있는 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-480">for permission to use all windows and user input events without restriction.</span>
          </span>
          <span data-ttu-id="a6f91-481">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-481">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
        <altmember cref="Overload:System.Windows.Application.Run" />
      </Docs>
    </Member>
    <Member MemberName="ShutdownMode">
      <MemberSignature Language="C#" Value="public System.Windows.ShutdownMode ShutdownMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.ShutdownMode ShutdownMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Application.ShutdownMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ShutdownMode As ShutdownMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::ShutdownMode ShutdownMode { System::Windows::ShutdownMode get(); void set(System::Windows::ShutdownMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ShutdownMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6f91-482">
            <see cref="M:System.Windows.Application.Shutdown" /> 메서드가 호출되게 하는 조건을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-482">Gets or sets the condition that causes the <see cref="M:System.Windows.Application.Shutdown" /> method to be called.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6f91-483">
            <see cref="T:System.Windows.ShutdownMode" /> 열거형 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-483">A <see cref="T:System.Windows.ShutdownMode" /> enumeration value.</span>
          </span>
          <span data-ttu-id="a6f91-484">기본값은 <see cref="F:System.Windows.ShutdownMode.OnLastWindowClose" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-484">The default value is <see cref="F:System.Windows.ShutdownMode.OnLastWindowClose" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-485">응용 프로그램의 경우에만 실행이 중지 된 <xref:System.Windows.Application.Shutdown%2A> 응용 프로그램의 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-485">Applications stop running only when the <xref:System.Windows.Application.Shutdown%2A> method of the Application is called.</span></span> <span data-ttu-id="a6f91-486">암시적 또는 명시적 값에 의해 지정 된 대로 종료 발생할 수 있습니다는 <xref:System.Windows.Application.ShutdownMode%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-486">Shut down can occur implicitly or explicitly, as specified by the value of the <xref:System.Windows.Application.ShutdownMode%2A> property.</span></span>  
  
 <span data-ttu-id="a6f91-487">설정한 경우 <xref:System.Windows.Application.ShutdownMode%2A> 를 <xref:System.Windows.ShutdownMode.OnLastWindowClose>, [!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)] 암시적으로 호출 <xref:System.Windows.Application.Shutdown%2A> 응용 프로그램의 마지막 창의 닫을 때, 현재 인스턴스화된 창이 주 창으로 설정 된 경우에 (참조 <xref:System.Windows.Application.MainWindow%2A>).</span><span class="sxs-lookup"><span data-stu-id="a6f91-487">If you set <xref:System.Windows.Application.ShutdownMode%2A> to <xref:System.Windows.ShutdownMode.OnLastWindowClose>, [!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)] implicitly calls <xref:System.Windows.Application.Shutdown%2A> when the last window in an application closes, even if any currently instantiated windows are set as the main window (see <xref:System.Windows.Application.MainWindow%2A>).</span></span>  
  
 <span data-ttu-id="a6f91-488">A <xref:System.Windows.Application.ShutdownMode%2A> 의 <xref:System.Windows.ShutdownMode.OnMainWindowClose> 하면 [!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)]암시적으로 호출 하려면 <xref:System.Windows.Application.Shutdown%2A> 때는 <xref:System.Windows.Application.MainWindow%2A> 다른 창이 현재 열려 있는 경우에 닫힙니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-488">A <xref:System.Windows.Application.ShutdownMode%2A> of <xref:System.Windows.ShutdownMode.OnMainWindowClose> causes [!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)]to implicitly call <xref:System.Windows.Application.Shutdown%2A> when the <xref:System.Windows.Application.MainWindow%2A> closes, even if other windows are currently open.</span></span>  
  
 <span data-ttu-id="a6f91-489">일부 응용 프로그램의 수명 때 주 창 또는 마지막 창이 닫혀 또는 데이터에 종속 되지 않을 수 있습니다 windows에 종속 전혀 아닐 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-489">The lifetime of some applications may not be dependent on when the main window or last window is closed, or may not be dependent on windows at all.</span></span> <span data-ttu-id="a6f91-490">이러한 시나리오에 대해 설정 해야는 <xref:System.Windows.Application.ShutdownMode%2A> 속성을 <xref:System.Windows.ShutdownMode.OnExplicitShutdown>를 요구 하는 명시적 <xref:System.Windows.Application.Shutdown%2A> 메서드를 호출 하는 응용 프로그램을 중지 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-490">For these scenarios you need to set the <xref:System.Windows.Application.ShutdownMode%2A> property to <xref:System.Windows.ShutdownMode.OnExplicitShutdown>, which requires an explicit <xref:System.Windows.Application.Shutdown%2A> method call to stop the application.</span></span> <span data-ttu-id="a6f91-491">그렇지 않으면 응용 프로그램이 백그라운드에서 실행을 계속 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-491">Otherwise, the application continues running in the background.</span></span>  
  
 <span data-ttu-id="a6f91-492"><xref:System.Windows.Application.ShutdownMode%2A> 선언적으로 구성할 수 있습니다 [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] 또는 코드에서 프로그래밍 방식으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-492"><xref:System.Windows.Application.ShutdownMode%2A> can be configured declaratively from [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] or programmatically from code.</span></span>  
  
 <span data-ttu-id="a6f91-493">이 속성은 작성 된 스레드에서 에서만 사용할 수는 <xref:System.Windows.Application> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-493">This property is available only from the thread that created the <xref:System.Windows.Application> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6f91-494">다음 예제에서는 구성 방법을 보여 줍니다. <xref:System.Windows.Application.ShutdownMode%2A> 응용 프로그램을 명시적으로 닫아야를 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-494">The following example shows how to configure <xref:System.Windows.Application.ShutdownMode%2A> to specify that an application must be closed explicitly.</span></span>  
  
 [!code-xaml[ApplicationShutdownModeSnippets#SetShutdownModeXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationShutdownModeSnippets/CS/App.xaml#setshutdownmodexaml)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.ShutdownMode" />
        <altmember cref="E:System.Windows.Application.Exit" />
      </Docs>
    </Member>
    <Member MemberName="Startup">
      <MemberSignature Language="C#" Value="public event System.Windows.StartupEventHandler Startup;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.StartupEventHandler Startup" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Application.Startup" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Startup As StartupEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::StartupEventHandler ^ Startup;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.StartupEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6f91-495">
            <see cref="M:System.Windows.Application.Run" /> 개체의 <see cref="T:System.Windows.Application" /> 메서드가 호출될 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-495">Occurs when the <see cref="M:System.Windows.Application.Run" /> method of the <see cref="T:System.Windows.Application" /> object is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-496">일반적인 [!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)] 응용 프로그램은 시작 시를 포함 하 여 다양 한 초기화 작업을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-496">A typical [!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)] application may perform a variety of initialization tasks when it starts up, including:</span></span>  
  
-   <span data-ttu-id="a6f91-497">명령줄 매개 변수를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-497">Processing command-line parameters.</span></span>  
  
-   <span data-ttu-id="a6f91-498">주 창 열기</span><span class="sxs-lookup"><span data-stu-id="a6f91-498">Opening the main window.</span></span>  
  
-   <span data-ttu-id="a6f91-499">응용 프로그램 범위 리소스를 초기화 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-499">Initializing application-scope resources.</span></span>  
  
-   <span data-ttu-id="a6f91-500">응용 프로그램 범위의 속성을 초기화 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-500">Initializing application-scope properties.</span></span>  
  
 <span data-ttu-id="a6f91-501">주 창 및 사용 하 여 응용 프로그램 범위 리소스를 선언적으로 지정할 수 있습니다 [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] (<xref:System.Windows.Application.StartupUri%2A> 및 <xref:System.Windows.Application.Resources%2A>각각).</span><span class="sxs-lookup"><span data-stu-id="a6f91-501">You can declaratively specify the main window and application-scope resources using [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] (<xref:System.Windows.Application.StartupUri%2A> and <xref:System.Windows.Application.Resources%2A>, respectively).</span></span> <span data-ttu-id="a6f91-502">그러나 경우에 따라 리소스 또는 응용 프로그램의 주 창 수만 결정 되는 프로그래밍 방식으로 런타임에 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-502">Sometimes, however, the resources or main window of your application can only be determined programmatically at run time.</span></span> <span data-ttu-id="a6f91-503">또한 응용 프로그램 범위의 속성 및 명령줄 매개 변수 에서만 사용할 수 있습니다 프로그래밍 방식으로.</span><span class="sxs-lookup"><span data-stu-id="a6f91-503">Additionally, application-scope properties and command-line parameters can only be used programmatically.</span></span> <span data-ttu-id="a6f91-504">처리 하 여 프로그래밍 방식으로 초기화를 수행할 수는 <xref:System.Windows.Application.Startup> 다음을 포함 한 이벤트:</span><span class="sxs-lookup"><span data-stu-id="a6f91-504">Programmatic initialization can be performed by handling the <xref:System.Windows.Application.Startup> event, including the following:</span></span>  
  
-   <span data-ttu-id="a6f91-505">가져오고 처리에서 사용할 수 있는 명령줄 매개 변수는 <xref:System.Windows.StartupEventArgs.Args%2A> 속성은 <xref:System.Windows.StartupEventArgs> 에 전달 되는 클래스는 <xref:System.Windows.Application.Startup> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-505">Acquire and process command-line parameters, which are available from the <xref:System.Windows.StartupEventArgs.Args%2A> property of the <xref:System.Windows.StartupEventArgs> class that is passed to the <xref:System.Windows.Application.Startup> event handler.</span></span>  
  
-   <span data-ttu-id="a6f91-506">응용 프로그램 범위 리소스를 사용 하 여 초기화 된 <xref:System.Windows.Application.Resources%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-506">Initialize application-scope resources by using the <xref:System.Windows.Application.Resources%2A> property.</span></span>  
  
-   <span data-ttu-id="a6f91-507">응용 프로그램 범위의 속성을 사용 하 여 초기화 된 <xref:System.Windows.Application.Properties%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-507">Initialize application-scope properties by using the <xref:System.Windows.Application.Properties%2A> property.</span></span>  
  
-   <span data-ttu-id="a6f91-508">인스턴스화하고 (일부) 창을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-508">Instantiate and show one (or more) windows.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a6f91-509">명령줄 매개 변수는 정적을 호출 하 여 가져올 수도 있습니다 <xref:System.Environment.GetCommandLineArgs%2A> 의 메서드는 <xref:System.Environment> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-509">Command-line parameters can also be acquired by calling the static <xref:System.Environment.GetCommandLineArgs%2A> method of the <xref:System.Environment> object.</span></span> <span data-ttu-id="a6f91-510">그러나 <xref:System.Environment.GetCommandLineArgs%2A> 실행 되려면 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-510">However, <xref:System.Environment.GetCommandLineArgs%2A> requires full trust to execute.</span></span>  
  
 <span data-ttu-id="a6f91-511">설정 하는 경우 <xref:System.Windows.Application.StartupUri%2A> 를 사용 하 여 [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)], 만들어지는 주 창에서 사용할 수 없는 <xref:System.Windows.Application.MainWindow%2A> 속성 또는 <xref:System.Windows.Application.Windows%2A> 의 속성은 <xref:System.Windows.Application> 후 될 때까지 개체는 <xref:System.Windows.Application.Startup> 이벤트가 처리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-511">If you set <xref:System.Windows.Application.StartupUri%2A> using [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)], the main window that is created is not available from either the <xref:System.Windows.Application.MainWindow%2A> property or the <xref:System.Windows.Application.Windows%2A> property of the <xref:System.Windows.Application> object until after the <xref:System.Windows.Application.Startup> event is processed.</span></span> <span data-ttu-id="a6f91-512">시작 하는 동안 주 창에 대 한 액세스를 해야 하는 경우 수동으로에서 새 창 개체를 만들어야 할 프로그램 <xref:System.Windows.Application.Startup> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-512">If you need access to the main window during startup, you need to manually create a new window object from your <xref:System.Windows.Application.Startup> event handler.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a6f91-513">응용 프로그램을 사용 하는 경우 <xref:System.Net.AuthenticationManager.CredentialPolicy%2A> 자격 증명 정책을 지정 하려면 설정 해야 <xref:System.Net.AuthenticationManager.CredentialPolicy%2A> 후 <xref:System.Windows.Application.Startup> 발생 되지 않았으면, [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] 기본 내부 정책에 직접 후 설정는 <xref:System.Windows.Application.Startup> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-513">If your application uses <xref:System.Net.AuthenticationManager.CredentialPolicy%2A> to specify a credential policy, you need to set <xref:System.Net.AuthenticationManager.CredentialPolicy%2A> after <xref:System.Windows.Application.Startup> is raised; otherwise, [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] sets it to a default internal policy directly after the <xref:System.Windows.Application.Startup> event has been raised.</span></span>  
  
 <span data-ttu-id="a6f91-514">에 전달 되는 명령줄 인수는 <xref:System.Windows.Application.Startup> 이벤트 처리기와 동일 하지 않은 [!INCLUDE[TLA#tla_url](~/includes/tlasharptla-url-md.md)] 쿼리에 전달 되는 문자열 매개 변수는 [!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-514">The command-line arguments that are passed to the <xref:System.Windows.Application.Startup> event handler are not the same as the [!INCLUDE[TLA#tla_url](~/includes/tlasharptla-url-md.md)] query string parameters that are passed to an [!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6f91-515">다음 예제를 획득 하 고 독립 실행형 응용 프로그램에서 명령줄 옵션을 처리 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-515">The following example shows how to acquire and process command-line options from a standalone application.</span></span> <span data-ttu-id="a6f91-516">경우는 **/StartMinimized** 명령줄 매개 변수가 제공 된, 응용 프로그램 최소화 된 상태로 주 창을 엽니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-516">If the **/StartMinimized** command-line parameter was provided, the application opens the main window in a minimized state.</span></span>  
  
 [!code-xaml[ApplicationStartupSnippets#HandleStartupXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationStartupSnippets/CSharp/App.xaml#handlestartupxaml)]  
  
 [!code-csharp[ApplicationStartupSnippets#HandleStartupCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationStartupSnippets/CSharp/App.xaml.cs#handlestartupcodebehind)]
 [!code-vb[ApplicationStartupSnippets#HandleStartupCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ApplicationStartupSnippets/visualbasic/application.xaml.vb#handlestartupcodebehind)]  
  
 [!INCLUDE[TLA#tla_xbap#plural](~/includes/tlasharptla-xbapsharpplural-md.md)]<span data-ttu-id="a6f91-517"> 검색 및 사용 시작 되기 때문에 명령줄 인수를 처리할 수 없습니다 [!INCLUDE[TLA#tla_clickonce](~/includes/tlasharptla-clickonce-md.md)] 배포 (참조 [WPF 응용 프로그램 (WPF) 배포](~/docs/framework/wpf/app-development/deploying-a-wpf-application-wpf.md)).</span><span class="sxs-lookup"><span data-stu-id="a6f91-517"> cannot retrieve and process command-line arguments because they are launched with [!INCLUDE[TLA#tla_clickonce](~/includes/tlasharptla-clickonce-md.md)] deployment (see [Deploying a WPF Application (WPF)](~/docs/framework/wpf/app-development/deploying-a-wpf-application-wpf.md)).</span></span> <span data-ttu-id="a6f91-518">그러나 XBAP를 시작하는 데 사용되는 URL에서 쿼리 문자열 매개 변수를 검색하고 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-518">However, they can retrieve and process query string parameters from the URLs that are used to launch them.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Application.OnStartup(System.Windows.StartupEventArgs)" />
        <altmember cref="E:System.Windows.Application.Exit" />
      </Docs>
    </Member>
    <Member MemberName="StartupUri">
      <MemberSignature Language="C#" Value="public Uri StartupUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri StartupUri" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Application.StartupUri" />
      <MemberSignature Language="VB.NET" Value="Public Property StartupUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ StartupUri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6f91-519">응용 프로그램이 시작될 때 자동으로 표시되는 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-519">Gets or sets a [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] that is automatically shown when an application starts.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6f91-520">응용 프로그램이 시작될 때 자동으로 열리는 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]를 참조하는 <see cref="T:System.Uri" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-520">A <see cref="T:System.Uri" /> that refers to the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] that automatically opens when an application starts.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-521">사용할 수 있습니다 <xref:System.Windows.Application.StartupUri%2A> 을 자동으로 로드 한 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 리소스 응용 프로그램이 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-521">You can use <xref:System.Windows.Application.StartupUri%2A> to automatically load a [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] resource when an application starts.</span></span>  
  
 <span data-ttu-id="a6f91-522">다음 표에서 유형의 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 로드할 수 있는 리소스, 열리는 창 유형 및 이러한 리소스도 설정할 수 있는 응용 프로그램 종류는 <xref:System.Windows.Application.StartupUri%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-522">The following table shows the types of [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] resources that can be loaded, the type of window they are opened into, and the type of application that these resources can be set as the <xref:System.Windows.Application.StartupUri%2A>.</span></span>  
  
|<span data-ttu-id="a6f91-523">형식</span><span class="sxs-lookup"><span data-stu-id="a6f91-523">Type</span></span>|<span data-ttu-id="a6f91-524">창</span><span class="sxs-lookup"><span data-stu-id="a6f91-524">Window</span></span>|<span data-ttu-id="a6f91-525">응용 프로그램 유형</span><span class="sxs-lookup"><span data-stu-id="a6f91-525">Application type</span></span>|  
|----------|------------|----------------------|  
|<xref:System.Windows.Window>|<xref:System.Windows.Window>|<span data-ttu-id="a6f91-526">독립 실행형만</span><span class="sxs-lookup"><span data-stu-id="a6f91-526">Standalone only</span></span>|  
|<xref:System.Windows.Navigation.NavigationWindow>|<xref:System.Windows.Navigation.NavigationWindow>|<span data-ttu-id="a6f91-527">독립 실행형만</span><span class="sxs-lookup"><span data-stu-id="a6f91-527">Standalone only</span></span>|  
|<xref:System.Windows.Controls.Page>|<xref:System.Windows.Navigation.NavigationWindow>|<span data-ttu-id="a6f91-528">독립 실행형/브라우저 호스팅</span><span class="sxs-lookup"><span data-stu-id="a6f91-528">Standalone/browser-hosted</span></span>|  
|<xref:System.Windows.Controls.UserControl>|<xref:System.Windows.Navigation.NavigationWindow>|<span data-ttu-id="a6f91-529">독립 실행형/브라우저 호스팅</span><span class="sxs-lookup"><span data-stu-id="a6f91-529">Standalone/browser-hosted</span></span>|  
|<xref:System.Windows.Documents.FlowDocument>|<xref:System.Windows.Navigation.NavigationWindow>|<span data-ttu-id="a6f91-530">독립 실행형/브라우저 호스팅</span><span class="sxs-lookup"><span data-stu-id="a6f91-530">Standalone/browser-hosted</span></span>|  
|<xref:System.Windows.Navigation.PageFunction%601>|<xref:System.Windows.Navigation.NavigationWindow>|<span data-ttu-id="a6f91-531">독립 실행형/브라우저 호스팅</span><span class="sxs-lookup"><span data-stu-id="a6f91-531">Standalone/browser-hosted</span></span>|  
  
 <span data-ttu-id="a6f91-532">일반적으로 설정 된 <xref:System.Windows.Application.StartupUri%2A> 속성에서 선언적으로 [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-532">Typically, you set the <xref:System.Windows.Application.StartupUri%2A> property declaratively in [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)].</span></span> <span data-ttu-id="a6f91-533">설정할 수 있습니다 <xref:System.Windows.Application.StartupUri%2A> 프로그래밍 방식으로으로 <xref:System.Windows.Application.Startup> 필요한을 로드 하는 응용 프로그램에 있는 경우에 이벤트 처리기 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 런타임 시 리소스입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-533">However, you can set <xref:System.Windows.Application.StartupUri%2A> programmatically, such as from a <xref:System.Windows.Application.Startup> event handler, which is useful if for applications that can only load the necessary [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] resources at run time.</span></span> <span data-ttu-id="a6f91-534">예를 들어 응용 프로그램 수를 기다릴 경우 해당 리소스를 로드 하의 이름을 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 리소스 구성 파일에 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-534">For example, an application might wait until run time to load its resources if the name of the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] resource is stored in a configuration file.</span></span>  
  
 <span data-ttu-id="a6f91-535">설정 여부 <xref:System.Windows.Application.StartupUri%2A> 선언적으로 또는 프로그래밍 방식으로 해당 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 될 때까지 리소스 로드 되지 않았습니다. 후는 <xref:System.Windows.Application.Startup> 이벤트를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-535">Whether you set <xref:System.Windows.Application.StartupUri%2A> declaratively or programmatically, the corresponding [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] resource is not loaded until after the <xref:System.Windows.Application.Startup> event is handled.</span></span> <span data-ttu-id="a6f91-536">따라서 액세스할 수 없습니다 결과 창에 중 하 나와 <xref:System.Windows.Application.Windows%2A> 속성 또는 <xref:System.Windows.Application.MainWindow%2A> 속성을 처리할 때 <xref:System.Windows.Application.Startup>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-536">Consequently, you won't have access to the resulting window from either the <xref:System.Windows.Application.Windows%2A> property or the <xref:System.Windows.Application.MainWindow%2A> property when handling <xref:System.Windows.Application.Startup>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a6f91-537">
            <see cref="P:System.Windows.Application.StartupUri" />가 null 값으로 설정된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-537">
              <see cref="P:System.Windows.Application.StartupUri" /> is set with a value of null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable">
      <MemberSignature Language="C#" Value="bool IQueryAmbient.IsAmbientPropertyAvailable (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function IsAmbientPropertyAvailable (propertyName As String) As Boolean Implements IQueryAmbient.IsAmbientPropertyAvailable" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System::String ^ propertyName) = System::Windows::Markup::IQueryAmbient::IsAmbientPropertyAvailable;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">
          <span data-ttu-id="a6f91-538">요청된 앰비언트 속성의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-538">The name of the requested ambient property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f91-539">지정된 앰비언트 속성을 현재 범위에서 사용할 수 있는지 여부에 대한 쿼리입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-539">Queries for whether a specified ambient property is available in the current scope.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a6f91-540">요청된 앰비언트 속성을 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-540">
              <see langword="true" /> if the requested ambient property is available; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-541">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="a6f91-541">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a6f91-542"><xref:System.Windows.Application> 인스턴스가 <xref:System.Windows.Markup.IQueryAmbient> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-542">It can be used only when the <xref:System.Windows.Application> instance is cast to an <xref:System.Windows.Markup.IQueryAmbient> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.IQueryAmbient" />
      </Docs>
    </Member>
    <Member MemberName="TryFindResource">
      <MemberSignature Language="C#" Value="public object TryFindResource (object resourceKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object TryFindResource(object resourceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.TryFindResource(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFindResource (resourceKey As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ TryFindResource(System::Object ^ resourceKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceKey" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="resourceKey">
          <span data-ttu-id="a6f91-543">찾을 리소스 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-543">The name of the resource to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f91-544">지정된 리소스를 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-544">Searches for the specified resource.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a6f91-545">요청된 리소스 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-545">The requested resource object.</span>
          </span>
          <span data-ttu-id="a6f91-546">요청된 리소스가 없으면 null 참조가 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-546">If the requested resource is not found, a null reference is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-547"><xref:System.Windows.Application.TryFindResource%2A> 지정된 된 리소스에 대 한 응용 프로그램 범위 리소스에서 소개 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-547"><xref:System.Windows.Application.TryFindResource%2A> will first look in application-scope resources for the specified resource.</span></span> <span data-ttu-id="a6f91-548">응용 프로그램 범위 리소스 관리 <xref:System.Windows.Application>에서 노출 하 고는 <xref:System.Windows.Application.Resources%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-548">Application-scope resources are managed by <xref:System.Windows.Application>, and are exposed from the <xref:System.Windows.Application.Resources%2A> property.</span></span> <span data-ttu-id="a6f91-549">지정된 된 리소스는 응용 프로그램 범위 리소스 집합에 없는 경우 <xref:System.Windows.Application.TryFindResource%2A> 다음 시스템 리소스를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-549">If the specified resource is not found in the set of application-scope resources, <xref:System.Windows.Application.TryFindResource%2A> then next searches the system resources.</span></span> <span data-ttu-id="a6f91-550">시스템 리소스는 사용자가 정의한 shell 리소스 있으며 색, 글꼴 및 셸 구성을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-550">System resources are shell resources defined by the user, and include colors, fonts, and shell configurations.</span></span> <span data-ttu-id="a6f91-551">노출 된 <xref:System.Windows.SystemColors>, <xref:System.Windows.SystemFonts>, 및 <xref:System.Windows.SystemParameters> 각각 정적 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-551">These are exposed from the <xref:System.Windows.SystemColors>, <xref:System.Windows.SystemFonts>, and <xref:System.Windows.SystemParameters> types, respectively, as static properties.</span></span> <span data-ttu-id="a6f91-552">사용 하도록 <xref:System.Windows.Application.TryFindResource%2A> 을 얻은를 이러한 형식 속성을 노출 리소스 키를 전달 하도록 디자인 된 <xref:System.Windows.Application.TryFindResource%2A>등 <xref:System.Windows.SystemParameters.IconWidthKey%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-552">To use <xref:System.Windows.Application.TryFindResource%2A> to acquire them, these types also expose resource key properties that are designed to be passed to <xref:System.Windows.Application.TryFindResource%2A>; for example, <xref:System.Windows.SystemParameters.IconWidthKey%2A>.</span></span>  
  
 <span data-ttu-id="a6f91-553">때문에 <xref:System.Windows.Application.TryFindResource%2A> 개체를 반환 리소스를 찾을 경우 적절 한 형식으로 반환된 된 값을 캐스팅 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-553">Because <xref:System.Windows.Application.TryFindResource%2A> returns an object, you must cast the returned value to the appropriate type if the resource is found.</span></span>  
  
 <span data-ttu-id="a6f91-554">이 메서드는 스레드로부터 안전 하 고 모든 스레드에서 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-554">This method is thread safe and can be called from any thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6f91-555">다음 예제에서는 사용 하는 방법을 보여 줍니다. <xref:System.Windows.Application.TryFindResource%2A> 리소스 획득 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-555">The following example shows how to use <xref:System.Windows.Application.TryFindResource%2A> to acquire a resource.</span></span>  
  
 [!code-xaml[ApplicationTryFindResourceSnippets#ApplicationCallTryFindResourceXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationTryFindResourceSnippets/CSharp/App.xaml#applicationcalltryfindresourcexaml)]  
  
 [!code-csharp[ApplicationTryFindResourceSnippets#ApplicationCallTryFindResourceCODEBEHIND1](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationTryFindResourceSnippets/CSharp/MainWindow.xaml.cs#applicationcalltryfindresourcecodebehind1)]
 [!code-vb[ApplicationTryFindResourceSnippets#ApplicationCallTryFindResourceCODEBEHIND1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ApplicationTryFindResourceSnippets/visualbasic/mainwindow.xaml.vb#applicationcalltryfindresourcecodebehind1)]  
[!code-csharp[ApplicationTryFindResourceSnippets#ApplicationCallTryFindResourceCODEBEHIND2](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationTryFindResourceSnippets/CSharp/MainWindow.xaml.cs#applicationcalltryfindresourcecodebehind2)]
[!code-vb[ApplicationTryFindResourceSnippets#ApplicationCallTryFindResourceCODEBEHIND2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ApplicationTryFindResourceSnippets/visualbasic/mainwindow.xaml.vb#applicationcalltryfindresourcecodebehind2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Application.FindResource(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Windows">
      <MemberSignature Language="C#" Value="public System.Windows.WindowCollection Windows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.WindowCollection Windows" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Application.Windows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Windows As WindowCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::WindowCollection ^ Windows { System::Windows::WindowCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.WindowCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6f91-556">응용 프로그램의 인스턴스화된 창을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-556">Gets the instantiated windows in an application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6f91-557">현재 <see cref="T:System.Windows.WindowCollection" />의 모든 창 개체에 대한 참조가 들어 있는 <see cref="T:System.AppDomain" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f91-557">A <see cref="T:System.Windows.WindowCollection" /> that contains references to all window objects in the current <see cref="T:System.AppDomain" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f91-558">A <xref:System.Windows.Window> 참조가에 자동으로 추가 됩니다 <xref:System.Windows.Application.Windows%2A> 창이 인스턴스화됩니다으로 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 스레드; windows 스레드는 추가 작업자에 의해 만들어진 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-558">A <xref:System.Windows.Window> reference is automatically added to <xref:System.Windows.Application.Windows%2A> as soon as a window is instantiated on the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread; windows that are created by worker threads are not added.</span></span> <span data-ttu-id="a6f91-559">A <xref:System.Windows.Window> 참조 한 후 자동으로 제거 됩니다 해당 <xref:System.Windows.Window.Closing> 이벤트를 처리 하기 전에 해당 <xref:System.Windows.Window.Closed> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-559">A <xref:System.Windows.Window> reference is automatically removed after its <xref:System.Windows.Window.Closing> event has been handled and before its <xref:System.Windows.Window.Closed> event is raised.</span></span>  
  
 <span data-ttu-id="a6f91-560">기본적으로 첫 번째 항목에 추가 <xref:System.Windows.Application.Windows%2A> 속성이 하 게 되는 <xref:System.Windows.Application.MainWindow%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-560">By default, the first item added to the <xref:System.Windows.Application.Windows%2A> property becomes the <xref:System.Windows.Application.MainWindow%2A>.</span></span>  
  
 <span data-ttu-id="a6f91-561">이 속성은 작성 된 스레드에서 에서만 사용할 수는 <xref:System.Windows.Application> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a6f91-561">This property is available only from the thread that created the <xref:System.Windows.Application> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6f91-562">다음 예제에서는 열거 하는 방법을 <xref:System.Windows.Application.Windows%2A> 속성에 공통적인 최상위 창 메뉴를 만들려는 [!INCLUDE[TLA#tla_mdi](~/includes/tlasharptla-mdi-md.md)] 와 같은 응용 프로그램이 [!INCLUDE[TLA#tla_xl](~/includes/tlasharptla-xl-md.md)]와 같은 다중 인스턴스 인터페이스 SDI (단일 문서) 응용 프로그램 또는 [!INCLUDE[TLA#tla_word](~/includes/tlasharptla-word-md.md)].</span><span class="sxs-lookup"><span data-stu-id="a6f91-562">The following example demonstrates how to enumerate the <xref:System.Windows.Application.Windows%2A> property to build a top-level Windows menu, which is common to [!INCLUDE[TLA#tla_mdi](~/includes/tlasharptla-mdi-md.md)] applications like [!INCLUDE[TLA#tla_xl](~/includes/tlasharptla-xl-md.md)], or multiple-instance Single Document Interface (SDI) applications like [!INCLUDE[TLA#tla_word](~/includes/tlasharptla-word-md.md)].</span></span>  
  
 [!code-csharp[ApplicationWindowsSnippets#WindowMenuItemCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationWindowsSnippets/CSharp/WindowMenuItem.cs#windowmenuitemcode)]
 [!code-vb[ApplicationWindowsSnippets#WindowMenuItemCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ApplicationWindowsSnippets/visualbasic/windowmenuitem.vb#windowmenuitemcode)]  
  
 [!code-xaml[ApplicationWindowsSnippets#MainWindowSetWindowsXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationWindowsSnippets/CSharp/MainWindow.xaml#mainwindowsetwindowsxaml)]  
  
 [!code-csharp[ApplicationWindowsSnippets#MainWindowSetWindowsCODEBEHIND1](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationWindowsSnippets/CSharp/MainWindow.xaml.cs#mainwindowsetwindowscodebehind1)]
 [!code-vb[ApplicationWindowsSnippets#MainWindowSetWindowsCODEBEHIND1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ApplicationWindowsSnippets/visualbasic/mainwindow.xaml.vb#mainwindowsetwindowscodebehind1)]  
[!code-csharp[ApplicationWindowsSnippets#MainWindowSetWindowsCODEBEHIND2](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationWindowsSnippets/CSharp/MainWindow.xaml.cs#mainwindowsetwindowscodebehind2)]
[!code-vb[ApplicationWindowsSnippets#MainWindowSetWindowsCODEBEHIND2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ApplicationWindowsSnippets/visualbasic/mainwindow.xaml.vb#mainwindowsetwindowscodebehind2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Window" />
      </Docs>
    </Member>
  </Members>
</Type>