<Type Name="MultiDataTrigger" FullName="System.Windows.MultiDataTrigger">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3ae634ba841bc7e869d2c05bd36ba97c5f9a3d61" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36458465" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class MultiDataTrigger : System.Windows.TriggerBase, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MultiDataTrigger extends System.Windows.TriggerBase implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.MultiDataTrigger" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MultiDataTrigger&#xA;Inherits TriggerBase&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class MultiDataTrigger sealed : System::Windows::TriggerBase, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type MultiDataTrigger = class&#xA;    inherit TriggerBase&#xA;    interface IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.TriggerBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Setters")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>바인딩된 데이터가 조건 집합에 맞을 때 속성 값을 적용하거나 작업을 수행하는 트리거를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Windows.MultiDataTrigger> 개체 비슷합니다는 <xref:System.Windows.MultiTrigger>점을 제외 하 고, 조건에는 <xref:System.Windows.MultiDataTrigger> 아닌의 바인딩된 데이터의 속성 값에 따라는 <xref:System.Windows.UIElement>합니다. 에 <xref:System.Windows.MultiDataTrigger>, 조건이 충족 되는 데이터 항목의 속성 값과 지정 된 일치 하는 경우 <xref:System.Windows.Condition.Value%2A>합니다. Setter를 유도할 수 있습니다 또는 <xref:System.Windows.TriggerBase.EnterActions%2A> 및 <xref:System.Windows.TriggerBase.ExitActions%2A> 속성 변경 내용을 적용 하거나 조건이 모두 충족 되 면 작업을 시작 합니다.  
  
 <xref:System.Windows.MultiDataTrigger.Setters%2A> 속성은 <xref:System.Windows.MultiDataTrigger> 개체만 포함할 수 있습니다 <xref:System.Windows.Setter> 개체입니다. 추가 <xref:System.Windows.Setter> 자식은 <xref:System.Windows.MultiDataTrigger> 개체가 암시적으로 추가 <xref:System.Windows.SetterBaseCollection> 에 대 한는 <xref:System.Windows.MultiDataTrigger> 개체입니다. <xref:System.Windows.EventSetter> 개체가 지원 되지 않습니다. 만 <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> 지원 <xref:System.Windows.EventSetter> 개체입니다.  
  
 트리거를 사용 하는 경우 및 기타 기술을 사용 하는 경우에 대 한 정보를 참조 하십시오. [데이터 템플릿 개요](~/docs/framework/wpf/data/data-templating-overview.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> 속성은 <xref:System.Windows.Controls.ListBox> 에 바인딩된 `Places`, <xref:System.Collections.ObjectModel.ObservableCollection%601> 의 `Place` 개체입니다. `Place` 개체에는 속성이 `Name` 및 `State`합니다. 정의 `Place` 및 `Places` 표시 되지 않습니다.  
  
 각 <xref:System.Windows.Controls.ListBoxItem> 의 <xref:System.Windows.Controls.ListBox> 표시는 `Place` 개체입니다. <xref:System.Windows.Style> 위해 각 인스턴스에 적용 예제에서 <xref:System.Windows.Controls.ListBoxItem>합니다. <xref:System.Windows.Condition> 의 요소는 <xref:System.Windows.MultiDataTrigger> 지정는 `Name` 및 `State` 의 `Place` 데이터 항목은 `Portland` 및 `OR` 각각의 배경을 해당 <xref:System.Windows.Controls.ListBoxItem> 설정 `Cyan`합니다.  
  
 [!code-xaml[DataTrigger#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTrigger/CSharp/Window1.xaml#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.TriggerBase" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MultiDataTrigger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.MultiDataTrigger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MultiDataTrigger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.MultiDataTrigger" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Conditions">
      <MemberSignature Language="C#" Value="public System.Windows.ConditionCollection Conditions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.ConditionCollection Conditions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.MultiDataTrigger.Conditions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Conditions As ConditionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::ConditionCollection ^ Conditions { System::Windows::ConditionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Conditions : System.Windows.ConditionCollection" Usage="System.Windows.MultiDataTrigger.Conditions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.ConditionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Condition" /> 개체의 컬렉션입니다. 컬렉션의 모든 조건이 충족되면 속성 값의 변경 내용이 적용됩니다.</summary>
        <value>
          <see cref="T:System.Windows.Condition" /> 개체의 컬렉션입니다. 기본값은 빈 컬렉션입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Windows.MultiDataTrigger> 개체 비슷합니다는 <xref:System.Windows.MultiTrigger>점을 제외 하 고, 조건에는 <xref:System.Windows.MultiDataTrigger> 아닌의 바인딩된 데이터의 속성 값에 따라는 <xref:System.Windows.UIElement>합니다. 에 <xref:System.Windows.MultiDataTrigger>, 조건이 충족 되는 데이터 항목의 속성 값과 지정 된 일치 하는 경우 <xref:System.Windows.Condition.Value%2A>합니다. 가능한 경우 바인딩의 값의 형식으로 변환 값은 첫 번째 하 고 다음 사용 하 여 두 값을 비교는 `Object.Equals` 메서드. <xref:System.Windows.MultiTrigger> 관련된 setter 또는 작업 조건을 모두 만족 하는 경우에 적용 됩니다 (이진 `AND` 작업).  
  
 에 대 한는 <xref:System.Windows.MultiDataTrigger>, 컬렉션에 있는 각 조건 모두 설정 해야 합니다는 <xref:System.Windows.Condition.Binding%2A> 및 <xref:System.Windows.Condition.Value%2A> 속성입니다. 자세한 내용은 <xref:System.Windows.Condition.Binding%2A>을 참조하세요.  
  
<a name="xamlPropertyElementUsage_Conditions"></a>   
## <a name="xaml-property-element-usage"></a>XAML 속성 요소 사용  
  
```  
<object>  
  <object.Conditions>  
    zeroOrMoreConditions  
  </object.Conditions>  
</object>  
```  
  
<a name="xamlValues_Conditions"></a>   
## <a name="xaml-values"></a>XAML 값  
 *zeroOrMoreConditions*  
 0 개 이상의 <xref:System.Windows.Condition> 개체입니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> 속성은 <xref:System.Windows.Controls.ListBox> 에 바인딩된 `Places`, <xref:System.Collections.ObjectModel.ObservableCollection%601> 의 `Place` 개체입니다. `Place` 개체에는 속성이 `Name` 및 `State`합니다. 정의 `Place` 및 `Places` 표시 되지 않습니다.  
  
 각 <xref:System.Windows.Controls.ListBoxItem> 의 <xref:System.Windows.Controls.ListBox> 표시는 `Place` 개체입니다. <xref:System.Windows.Style> 위해 각 인스턴스에 적용 예제에서 <xref:System.Windows.Controls.ListBoxItem>합니다. <xref:System.Windows.Condition> 의 요소는 <xref:System.Windows.MultiDataTrigger> 지정는 `Name` 및 `State` 의 `Place` 데이터 항목은 `Portland` 및 `OR` 각각의 배경을 해당 <xref:System.Windows.Controls.ListBoxItem> 설정 `Cyan`합니다.  
  
 [!code-xaml[DataTrigger#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTrigger/CSharp/Window1.xaml#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.MultiDataTrigger.Setters" />
      </Docs>
    </Member>
    <Member MemberName="Setters">
      <MemberSignature Language="C#" Value="public System.Windows.SetterBaseCollection Setters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.SetterBaseCollection Setters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.MultiDataTrigger.Setters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Setters As SetterBaseCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::SetterBaseCollection ^ Setters { System::Windows::SetterBaseCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Setters : System.Windows.SetterBaseCollection" Usage="System.Windows.MultiDataTrigger.Setters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.SetterBaseCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Setter" />의 모든 조건이 충족될 때 적용할 속성 값을 설명하는 <see cref="T:System.Windows.MultiDataTrigger" /> 개체의 컬렉션을 가져옵니다.</summary>
        <value>
          <see cref="T:System.Windows.Setter" /> 개체의 컬렉션입니다. 기본값은 빈 컬렉션입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.MultiDataTrigger> 사용 하 여 작업을 시작할 수 있습니다는 <xref:System.Windows.TriggerBase.EnterActions%2A> 또는 <xref:System.Windows.TriggerBase.ExitActions%2A> 속성, 또는 사용 하 여 속성 값을 설정 하려면 <xref:System.Windows.Setter> 바인딩된 데이터 조건 집합을 충족 하는 경우 개체입니다.  
  
 두 개 있는 경우 <xref:System.Windows.Setter> 동일한 속성을 설정할 같거나 다른 setter 컬렉션의 개체는 <xref:System.Windows.Setter> 즉 마지막으로 선언된 사용 됩니다.  
  
 추가 <xref:System.Windows.Setter> 자식은 <xref:System.Windows.MultiDataTrigger> 개체가 암시적으로 추가 <xref:System.Windows.SetterBaseCollection> 에 대 한는 <xref:System.Windows.MultiDataTrigger> 개체입니다. <xref:System.Windows.EventSetter> 개체가 지원 되지 않습니다. 만 <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> 지원 <xref:System.Windows.EventSetter> 개체입니다.  
  
<a name="xamlPropertyElementUsage_Setters"></a>   
## <a name="xaml-property-element-usage"></a>XAML 속성 요소 사용  
  
```  
<object>  
    zeroOrMoreSetters  
</object>  
```  
  
<a name="xamlValues_Setters"></a>   
## <a name="xaml-values"></a>XAML 값  
 *zeroOrMoreSetters*  
 0 개 이상의 <xref:System.Windows.Setter> 개체입니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> 속성은 <xref:System.Windows.Controls.ListBox> 에 바인딩된 `Places`, <xref:System.Collections.ObjectModel.ObservableCollection%601> 의 `Place` 개체입니다. `Place` 개체에는 속성이 `Name` 및 `State`합니다. 정의 `Place` 및 `Places` 표시 되지 않습니다.  
  
 각 <xref:System.Windows.Controls.ListBoxItem> 의 <xref:System.Windows.Controls.ListBox> 표시는 `Place` 개체입니다. <xref:System.Windows.Style> 위해 각 인스턴스에 적용 예제에서 <xref:System.Windows.Controls.ListBoxItem>합니다. <xref:System.Windows.Condition> 의 요소는 <xref:System.Windows.MultiDataTrigger> 지정는 `Name` 및 `State` 의 `Place` 데이터 항목은 `Portland` 및 `OR` 각각의 배경을 해당 <xref:System.Windows.Controls.ListBoxItem> 설정 `Cyan`합니다.  
  
 `<MultiDataTrigger.Setters>` 암시적입니다.  
  
 [!code-xaml[DataTrigger#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTrigger/CSharp/Window1.xaml#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.MultiDataTrigger.Setters" />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.MultiDataTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">추가할 자식 개체입니다.</param>
        <summary>자식 개체를 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.MultiDataTrigger> 인스턴스가 <xref:System.Windows.Markup.IAddChild> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.MultiDataTrigger.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">개체에 추가할 텍스트입니다.</param>
        <summary>노드의 텍스트 콘텐츠를 개체에 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.MultiDataTrigger> 인스턴스가 <xref:System.Windows.Markup.IAddChild> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>