<Type Name="ComponentResourceKey" FullName="System.Windows.ComponentResourceKey">
  <TypeSignature Language="C#" Value="public class ComponentResourceKey : System.Windows.ResourceKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ComponentResourceKey extends System.Windows.ResourceKey" />
  <TypeSignature Language="DocId" Value="T:System.Windows.ComponentResourceKey" />
  <TypeSignature Language="VB.NET" Value="Public Class ComponentResourceKey&#xA;Inherits ResourceKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComponentResourceKey : System::Windows::ResourceKey" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.ResourceKey</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.ComponentResourceKeyConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f4fd9-101">외부 어셈블리의 클래스 이름 또는 추가 식별자를 기준으로 리소스 키를 정의하거나 참조합니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-101">Defines or references resource keys based on class names in external assemblies, as well as an additional identifier.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4fd9-102">에 대 한 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 정보 참조 [ComponentResourceKey 태그 확장](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-102">For [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] information, see [ComponentResourceKey Markup Extension](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md).</span></span>  
  
 <span data-ttu-id="f4fd9-103">이 클래스는 어셈블리와 식별자의 형식을 기반으로 하는 키를 만드는 데 유용 하는 개체 형식을 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-103">This class implements an object type that is useful for creating keys that are based on types in assemblies plus an identifier.</span></span> <span data-ttu-id="f4fd9-104">특정 요청 필요를 정의 하거나 형식을 참조 하므로 하지 <xref:System.Windows.ResourceDictionary>, 형식에 따라 각 차별화 된 어셈블리에 리소스 집합이 여러 개 존재할 수 및 해당 <xref:System.Windows.ComponentResourceKey>합니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-104">Because you define or reference the type, you do not need to request a specific <xref:System.Windows.ResourceDictionary>, and more than one set of resources can exist in the assembly, each differentiated by the type of their <xref:System.Windows.ComponentResourceKey>.</span></span>  
  
 <span data-ttu-id="f4fd9-105">두 가지 방법으로 정의 하는 <xref:System.Windows.ComponentResourceKey>합니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-105">There are two ways to define a <xref:System.Windows.ComponentResourceKey>.</span></span>  
  
 <span data-ttu-id="f4fd9-106">쉽게 액세스할 수 있는 키를 사용 하도록 하려는 경우를 반환 하는 컨트롤 클래스 코드에는 정적 속성을 정의할 수 있습니다는 <xref:System.Windows.ComponentResourceKey>를 통해 생성 된는 <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> 는 외부 리소스 어셈블리에 존재 하 고 <xref:System.Windows.ComponentResourceKey.ResourceId%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-106">If you want an easily accessible key, you can define a static property on your control class code that returns a <xref:System.Windows.ComponentResourceKey>, constructed with a <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> that exists in the external resource assembly, and a <xref:System.Windows.ComponentResourceKey.ResourceId%2A>.</span></span> <span data-ttu-id="f4fd9-107">사용자 지정에 대 한 원래 외부 리소스 어셈블리를 교체 하 여 어셈블리에서 컨트롤에 대해 대체 기본 스타일을 정의 하기 위한 키를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-107">The key can be used for defining alternate default styles for controls in an assembly, by swapping the original external resource assembly for a custom one.</span></span> <span data-ttu-id="f4fd9-108">더 큰 컨트롤 스타일 또는 사용자 지정 진입점을 노출 하는 템플릿 내에서 명명 된 리소스 파트를 정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-108">You can also define a named resource part within a larger control style or template to expose a customization entry point.</span></span> <span data-ttu-id="f4fd9-109">컨트롤에 대 한 리소스 사전은 테마를 정의 하는 경우 특히 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-109">This is particularly useful if you are defining a theme resource dictionary for your control.</span></span>  
  
 <span data-ttu-id="f4fd9-110">사용할 수도 있습니다는 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] [ComponentResourceKey 태그 확장](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md) 자세한 구문 직접 키의 느슨한 인스턴스를 만들려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-110">You can also use the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] [ComponentResourceKey Markup Extension](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md) in verbose syntax directly to create a loose instance of the key.</span></span> <span data-ttu-id="f4fd9-111">사용자 지정 하는 검색 성능이 떨어지는 다른 어셈블리에서 전용 리소스를 선언 하려면 경우에 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-111">This is useful if you want to declare private resources from other assemblies that are less discoverable to customize.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f4fd9-112"><see cref="T:System.Windows.ComponentResourceKey" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-112">Initializes a new instance of the <see cref="T:System.Windows.ComponentResourceKey" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComponentResourceKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComponentResourceKey();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4fd9-113"><see cref="T:System.Windows.ComponentResourceKey" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-113">Initializes a new instance of the <see cref="T:System.Windows.ComponentResourceKey" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4fd9-114">기본 생성자는 일반적으로 사용 하지 때문에 <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> 값 및 <xref:System.Windows.ComponentResourceKey.ResourceId%2A> 값은 적절 한 초기화 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-114">The default constructor is not generally used, because a <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> value and <xref:System.Windows.ComponentResourceKey.ResourceId%2A> value are required for proper initialization.</span></span> <span data-ttu-id="f4fd9-115">기본 생성자가 지원 하기 위해 주로 [ComponentResourceKey 태그 확장](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md) 명명 된 매개 변수 폼에서 XAML 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-115">The default constructor exists primarily to support [ComponentResourceKey Markup Extension](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md) XAML usage in named parameter form.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComponentResourceKey (Type typeInTargetAssembly, object resourceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type typeInTargetAssembly, object resourceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.#ctor(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeInTargetAssembly As Type, resourceId As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComponentResourceKey(Type ^ typeInTargetAssembly, System::Object ^ resourceId);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeInTargetAssembly" Type="System.Type" />
        <Parameter Name="resourceId" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="typeInTargetAssembly"><span data-ttu-id="f4fd9-116">리소스 키를 정의하는 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-116">The type that defines the resource key.</span></span></param>
        <param name="resourceId"><span data-ttu-id="f4fd9-117"><c>typeInTargetAssembly</c> 형식과 연관된 다른 키와 이 <see cref="T:System.Windows.ComponentResourceKey" />를 구분하기 위한 고유 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-117">A unique identifier to differentiate this <see cref="T:System.Windows.ComponentResourceKey" /> from others associated with the <c>typeInTargetAssembly</c> type.</span></span></param>
        <summary><span data-ttu-id="f4fd9-118">키를 정의하는 <see cref="T:System.Windows.ComponentResourceKey" />과 추가 리소스 식별자로 사용할 개체를 지정하여 <see cref="T:System.Type" />의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-118">Initializes a new instance of a <see cref="T:System.Windows.ComponentResourceKey" /> , specifying the <see cref="T:System.Type" /> that defines the key, and an object to use as an additional resource identifier.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4fd9-119">이 생성자는 가장 중요 한 첫 번째 시나리오와 두 가지 시나리오에 대 한 존재 합니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-119">This constructor exist for two scenarios, with the first scenario being the most important:</span></span>  
  
-   <span data-ttu-id="f4fd9-120">에서는 만들 수는 <xref:System.Windows.ComponentResourceKey> 사용자 지정 컨트롤 클래스에 공용 정적 필드로 노출 되는 합니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-120">Supports creating a <xref:System.Windows.ComponentResourceKey> that is then exposed as a public static field on a custom control class.</span></span> <span data-ttu-id="f4fd9-121">이 통해 서식 파일에 정의 된 리소스에 대 한 컨트롤의 액세스를 통해 간소화 `{x:Static}` 템플릿 속성 값에 대 한 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-121">This simplifies a control's access to its own defined resources in the template through `{x:Static}` usages for template property values.</span></span>  
  
-   <span data-ttu-id="f4fd9-122">지원 [ComponentResourceKey 태그 확장](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md) 중 한 가지 방법은 구성 요소 리소스를 참조 하는 제 3 자에 사용할 수 있는 위치 매개 변수 형식에서 XAML 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-122">Supports [ComponentResourceKey Markup Extension](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md) XAML usage in positional parameter form, which is one technique available for third parties that reference a component resource.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f4fd9-123">다음 예제에서는 한 <xref:System.Windows.ComponentResourceKey> 스타일 사용자 지정 진입점을 제공 하는 컨트롤 클래스의 정적 키로 노출 되는 합니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-123">The following example creates a <xref:System.Windows.ComponentResourceKey> that is then exposed as a static key of a control class to provide a style customization entry point.</span></span>  
  
 [!code-csharp[CorePseudocode#CRKCode](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#crkcode)]
 [!code-vb[CorePseudocode#CRKCode](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#crkcode)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public override System.Reflection.Assembly Assembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly Assembly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ComponentResourceKey.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Assembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Assembly ^ Assembly { System::Reflection::Assembly ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f4fd9-124">이 키와 연관된 값을 찾을 어셈블리의 사전을 나타내는 어셈블리 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-124">Gets the assembly object that indicates which assembly's dictionary to look in for the value associated with this key.</span></span></summary>
        <value><span data-ttu-id="f4fd9-125">리플렉션 클래스로 검색된 어셈블리입니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-125">The retrieved assembly, as a reflection class.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="f4fd9-126">현재 <see cref="T:System.Windows.ComponentResourceKey" />와 비교할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-126">Object to compare with the current <see cref="T:System.Windows.ComponentResourceKey" />.</span></span></param>
        <summary><span data-ttu-id="f4fd9-127">제공된 개체가 현재 <see cref="T:System.Windows.ComponentResourceKey" />와 같은지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-127">Determines whether the provided object is equal to the current <see cref="T:System.Windows.ComponentResourceKey" />.</span></span></summary>
        <returns>
          <span data-ttu-id="f4fd9-128">개체가 동일하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-128"><see langword="true" /> if the objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4fd9-129">두 키가 같은지 모두 즉각적인 모든 설정 가능한 속성에 대 한 동일한 값이 있는 경우 (<xref:System.Windows.ComponentResourceKey.ResourceId%2A>, <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A>).</span><span class="sxs-lookup"><span data-stu-id="f4fd9-129">Two keys are equal if they both have the same values for all their immediate settable properties (<xref:System.Windows.ComponentResourceKey.ResourceId%2A>, <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4fd9-130">이 <see cref="T:System.Windows.ComponentResourceKey" />의 해시 코드를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-130">Returns a hash code for this <see cref="T:System.Windows.ComponentResourceKey" />.</span></span></summary>
        <returns><span data-ttu-id="f4fd9-131">부호 있는 32비트 정수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-131">A signed 32-bit integer value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceId">
      <MemberSignature Language="C#" Value="public object ResourceId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ResourceId" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ComponentResourceKey.ResourceId" />
      <MemberSignature Language="VB.NET" Value="Public Property ResourceId As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ResourceId { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f4fd9-132">이 형식과 연관된 다른 키와 이 키를 구분하기 위한 고유 식별자를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-132">Gets or sets a unique identifier to differentiate this key from others associated with this type.</span></span></summary>
        <value><span data-ttu-id="f4fd9-133">고유 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-133">A unique identifier.</span></span> <span data-ttu-id="f4fd9-134">일반적으로 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-134">Typically this is a string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4fd9-135">에 대 한 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 정보 참조 [ComponentResourceKey 태그 확장](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-135">For [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] information, see [ComponentResourceKey Markup Extension](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md).</span></span>  
  
 <span data-ttu-id="f4fd9-136">사용 되는 문자열에 일반적으로 <xref:System.Windows.ComponentResourceKey.ResourceId%2A> 값 준수 하는 [XamlName 문법](~/docs/framework/xaml-services/xamlname-grammar.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-136">Typically, the string used for a <xref:System.Windows.ComponentResourceKey.ResourceId%2A> value conforms to the [XamlName Grammar](~/docs/framework/xaml-services/xamlname-grammar.md).</span></span>  
  
## Examples  
 <span data-ttu-id="f4fd9-137">사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Windows.ComponentResourceKey.ResourceId%2A> 이 형식과 연결 된 다른 사용자와이 키를 구별할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-137">The following example shows how to use the <xref:System.Windows.ComponentResourceKey.ResourceId%2A> to differentiate this key from others associated with this type.</span></span>  
  
 [!code-xaml[ColorPicker_snip#SliderStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/ColorPicker_snip/CSharp/ColorPickerLib/Themes/generic.xaml#sliderstyle)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4fd9-138"><see cref="T:System.Windows.ComponentResourceKey" />에 대한 문자열 표현을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-138">Gets the string representation of a <see cref="T:System.Windows.ComponentResourceKey" />.</span></span></summary>
        <returns><span data-ttu-id="f4fd9-139">문자열 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-139">The string representation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeInTargetAssembly">
      <MemberSignature Language="C#" Value="public Type TypeInTargetAssembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TypeInTargetAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ComponentResourceKey.TypeInTargetAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeInTargetAssembly As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ TypeInTargetAssembly { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f4fd9-140">리소스 키를 정의하는 <see cref="T:System.Type" />을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-140">Gets or sets the <see cref="T:System.Type" /> that defines the resource key.</span></span></summary>
        <value><span data-ttu-id="f4fd9-141">리소스 키를 정의하는 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-141">The type that defines the resource key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4fd9-142">에 대 한 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 정보 참조 [ComponentResourceKey 태그 확장](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-142">For [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] information, see [ComponentResourceKey Markup Extension](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md).</span></span>  
  
 <span data-ttu-id="f4fd9-143"><xref:System.Windows.ComponentResourceKey> 요소 형식을 포함 하는 어셈블리를 대상 지정을 기반으로 외부 어셈블리에서 액세스할 수 있는 리소스에 대 한 키를 정의 하려면 사용자 지정 구성 요소에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-143">The <xref:System.Windows.ComponentResourceKey> element is used by custom components to define keys for resources that are accessed from external assemblies, based on targeting an assembly that contains the type.</span></span> <span data-ttu-id="f4fd9-144">사용자 지정 구성 요소는 종종 리소스가 있는 어셈블리에 있어야 하는 새 형식을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-144">Custom components often define new types which must be in the assembly where the resource is located.</span></span> <span data-ttu-id="f4fd9-145">일반적으로 이러한 형식은 다른 구현이 없는 여백이, 형식을 조회 요구 사항을 충족 하기 위해서만 존재는 <xref:System.Windows.ComponentResourceKey>합니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-145">Generally these types have no other implementation, the types only exist in order to satisfy the lookup requirements of a <xref:System.Windows.ComponentResourceKey>.</span></span>  
  
## Examples  
 <span data-ttu-id="f4fd9-146">다음 예제에서는 정의 하는 방법을 보여 줍니다.는 <xref:System.Windows.ComponentResourceKey> 포함 하 여 <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> 및 <xref:System.Windows.ComponentResourceKey.ResourceId%2A> 를 사용 하는 [ComponentResourceKey 태그 확장](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-146">The following example shows how to define a <xref:System.Windows.ComponentResourceKey> including <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> and <xref:System.Windows.ComponentResourceKey.ResourceId%2A> using the [ComponentResourceKey Markup Extension](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md).</span></span> <span data-ttu-id="f4fd9-147">이 리소스 다음 외부 어셈블리에 배치 하 고 액세스할 수는 비슷한를 사용 하 여 리소스를 요청 하는 키 사용 하 여 <xref:System.Windows.ComponentResourceKey> 요청에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="f4fd9-147">This resource can then be placed in an external assembly and accessed by a key usage that requests the resource using an analogous <xref:System.Windows.ComponentResourceKey> in the request.</span></span>  
  
 [!code-xaml[ColorPicker_snip#SliderStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/ColorPicker_snip/CSharp/ColorPickerLib/Themes/generic.xaml#sliderstyle)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>