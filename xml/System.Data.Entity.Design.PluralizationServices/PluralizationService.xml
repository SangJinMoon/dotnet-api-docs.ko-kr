<Type Name="PluralizationService" FullName="System.Data.Entity.Design.PluralizationServices.PluralizationService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="87ef4ed0920ea18a498722cdf0f126c60e02963e" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39833311" /></Metadata><TypeSignature Language="C#" Value="public abstract class PluralizationService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PluralizationService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Design.PluralizationServices.PluralizationService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PluralizationService" />
  <TypeSignature Language="C++ CLI" Value="public ref class PluralizationService abstract" />
  <TypeSignature Language="F#" Value="type PluralizationService = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2e70a-101">단어의 복수 및 단수 형태를 생성하기 위한 메서드를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="2e70a-101">Provides methods for constructing plural and singular forms of words.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e70a-102"><xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> 클래스 단어의 복수 및 단 수 형태를 생성 하는 것에 대 한 영어 규칙을 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e70a-102">The <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> class applies English rules for constructing plural and singular forms of words.</span></span> <span data-ttu-id="2e70a-103">다른 언어 서비스 확장을 사용 합니다 <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> 에 <xref:System.Data.Entity.Design.EntityModelSchemaGenerator> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2e70a-103">To extend the service to other languages, use the <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> on the <xref:System.Data.Entity.Design.EntityModelSchemaGenerator> class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PluralizationService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.PluralizationServices.PluralizationService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PluralizationService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2e70a-104"><see cref="T:System.Data.Entity.Design.PluralizationServices.PluralizationService" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="2e70a-104">Initializes a new instance of the <see cref="T:System.Data.Entity.Design.PluralizationServices.PluralizationService" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateService">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Design.PluralizationServices.PluralizationService CreateService (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Design.PluralizationServices.PluralizationService CreateService(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.PluralizationServices.PluralizationService.CreateService(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateService (culture As CultureInfo) As PluralizationService" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Entity::Design::PluralizationServices::PluralizationService ^ CreateService(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="static member CreateService : System.Globalization.CultureInfo -&gt; System.Data.Entity.Design.PluralizationServices.PluralizationService" Usage="System.Data.Entity.Design.PluralizationServices.PluralizationService.CreateService culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Design.PluralizationServices.PluralizationService</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="2e70a-105">단어의 단수 및 복수 형태에 대해 적용된 언어 규칙에 해당하는 <see cref="T:System.Globalization.CultureInfo" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2e70a-105">The <see cref="T:System.Globalization.CultureInfo" /> that corresponds to the language rules applied for singular and plural forms of words.</span></span></param>
        <summary><span data-ttu-id="2e70a-106">지정된 <see cref="T:System.Data.Entity.Design.PluralizationServices.PluralizationService" />에 해당하는 언어 규칙을 적용하는 <see cref="T:System.Globalization.CultureInfo" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="2e70a-106">Creates a <see cref="T:System.Data.Entity.Design.PluralizationServices.PluralizationService" /> that applies language rules that correspond to the specified <see cref="T:System.Globalization.CultureInfo" />.</span></span></summary>
        <returns><span data-ttu-id="2e70a-107">새로 만든 <see cref="T:System.Data.Entity.Design.PluralizationServices.PluralizationService" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2e70a-107">The newly created <see cref="T:System.Data.Entity.Design.PluralizationServices.PluralizationService" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e70a-108"><xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> 클래스 단어의 복수 및 단 수 형태를 생성 하는 것에 대 한 영어 규칙을 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e70a-108">The <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> class applies English rules for constructing plural and singular forms of words.</span></span> <span data-ttu-id="2e70a-109">다른 언어 서비스 확장을 사용 합니다 <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> 에 <xref:System.Data.Entity.Design.EntityModelSchemaGenerator> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2e70a-109">To extend the service to other languages, use the <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> on the <xref:System.Data.Entity.Design.EntityModelSchemaGenerator> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Design.PluralizationServices.PluralizationService.Culture" />
      <MemberSignature Language="VB.NET" Value="Public Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Globalization::CultureInfo ^ Culture {  public:&#xA;System::Globalization::CultureInfo ^ get(); protected:&#xA; void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Culture : System.Globalization.CultureInfo with get, set" Usage="System.Data.Entity.Design.PluralizationServices.PluralizationService.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e70a-110"><see cref="T:System.Data.Entity.Design.PluralizationServices.PluralizationService" /> 문화권을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2e70a-110">Gets or sets the <see cref="T:System.Data.Entity.Design.PluralizationServices.PluralizationService" /> culture.</span></span></summary>
        <value><span data-ttu-id="2e70a-111">단수 및 복수에 대해 적용할 언어 규칙을 지정하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2e70a-111">An object that specifies which language rules to apply for singulars and plurals.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e70a-112"><xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> 클래스 단어의 복수 및 단 수 형태를 생성 하는 것에 대 한 영어 규칙을 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e70a-112">The <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> class applies English rules for constructing plural and singular forms of words.</span></span> <span data-ttu-id="2e70a-113">다른 언어 서비스 확장을 사용 합니다 <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> 에 <xref:System.Data.Entity.Design.EntityModelSchemaGenerator> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2e70a-113">To extend the service to other languages, use the <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> on the <xref:System.Data.Entity.Design.EntityModelSchemaGenerator> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPlural">
      <MemberSignature Language="C#" Value="public abstract bool IsPlural (string word);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsPlural(string word) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsPlural (word As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsPlural(System::String ^ word);" />
      <MemberSignature Language="F#" Value="abstract member IsPlural : string -&gt; bool" Usage="pluralizationService.IsPlural word" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="word" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="word"><span data-ttu-id="2e70a-114">분석할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2e70a-114">The value to be analyzed.</span></span></param>
        <summary><span data-ttu-id="2e70a-115">지정된 단어가 복수인지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="2e70a-115">Determines whether the specified word is plural.</span></span></summary>
        <returns><span data-ttu-id="2e70a-116">단어가 복수이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2e70a-116"><see langword="true" /> if the word is plural; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e70a-117"><xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> 클래스 단어의 복수 및 단 수 형태를 생성 하는 것에 대 한 영어 규칙을 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e70a-117">The <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> class applies English rules for constructing plural and singular forms of words.</span></span> <span data-ttu-id="2e70a-118">다른 언어 서비스 확장을 사용 합니다 <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> 에 <xref:System.Data.Entity.Design.EntityModelSchemaGenerator> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2e70a-118">To extend the service to other languages, use the <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> on the <xref:System.Data.Entity.Design.EntityModelSchemaGenerator> class.</span></span>  
  
 <span data-ttu-id="2e70a-119">모두를 <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural%2A> 하 고 <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular%2A> 메서드를 반환할 수 있습니다 `true` 동일한 단어에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e70a-119">Both the <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural%2A> and <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular%2A> methods can return `true` for the same word.</span></span> <span data-ttu-id="2e70a-120">두 메서드는 반환 하는 예를 들어 `true` "fish" 이라는 단어에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e70a-120">For example, both methods will return `true` for the word "fish".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSingular">
      <MemberSignature Language="C#" Value="public abstract bool IsSingular (string word);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSingular(string word) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsSingular (word As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsSingular(System::String ^ word);" />
      <MemberSignature Language="F#" Value="abstract member IsSingular : string -&gt; bool" Usage="pluralizationService.IsSingular word" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="word" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="word"><span data-ttu-id="2e70a-121">분석할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2e70a-121">The value to be analyzed.</span></span></param>
        <summary><span data-ttu-id="2e70a-122">지정된 단어가 단수인지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="2e70a-122">Determines whether the specified word is singular.</span></span></summary>
        <returns><span data-ttu-id="2e70a-123">단어가 단수이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2e70a-123"><see langword="true" /> if the word is singular; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e70a-124"><xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> 클래스 단어의 복수 및 단 수 형태를 생성 하는 것에 대 한 영어 규칙을 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e70a-124">The <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> class applies English rules for constructing plural and singular forms of words.</span></span> <span data-ttu-id="2e70a-125">다른 언어 서비스 확장을 사용 합니다 <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> 에 <xref:System.Data.Entity.Design.EntityModelSchemaGenerator> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2e70a-125">To extend the service to other languages, use the <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> on the <xref:System.Data.Entity.Design.EntityModelSchemaGenerator> class.</span></span>  
  
 <span data-ttu-id="2e70a-126">모두를 <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular%2A> 하 고 <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural%2A> 메서드를 반환할 수 있습니다 `true` 동일한 단어에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e70a-126">Both the <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular%2A> and <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural%2A> methods can return `true` for the same word.</span></span> <span data-ttu-id="2e70a-127">두 메서드는 반환 하는 예를 들어 `true` "fish" 이라는 단어에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e70a-127">For example, both methods will return `true` for the word "fish".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pluralize">
      <MemberSignature Language="C#" Value="public abstract string Pluralize (string word);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Pluralize(string word) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.PluralizationServices.PluralizationService.Pluralize(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Pluralize (word As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ Pluralize(System::String ^ word);" />
      <MemberSignature Language="F#" Value="abstract member Pluralize : string -&gt; string" Usage="pluralizationService.Pluralize word" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="word" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="word"><span data-ttu-id="2e70a-128">복수로 만들 단어입니다.</span><span class="sxs-lookup"><span data-stu-id="2e70a-128">The word to be made plural.</span></span></param>
        <summary><span data-ttu-id="2e70a-129">지정된 단어의 복수 형태를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2e70a-129">Returns the plural form of the specified word</span></span></summary>
        <returns><span data-ttu-id="2e70a-130">입력 매개 변수의 복수 형태입니다.</span><span class="sxs-lookup"><span data-stu-id="2e70a-130">The plural form of the input parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e70a-131"><xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> 클래스 단어의 복수 및 단 수 형태를 생성 하는 것에 대 한 영어 규칙을 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e70a-131">The <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> class applies English rules for constructing plural and singular forms of words.</span></span> <span data-ttu-id="2e70a-132">다른 언어 서비스 확장을 사용 합니다 <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> 에 <xref:System.Data.Entity.Design.EntityModelSchemaGenerator> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2e70a-132">To extend the service to other languages, use the <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> on the <xref:System.Data.Entity.Design.EntityModelSchemaGenerator> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Singularize">
      <MemberSignature Language="C#" Value="public abstract string Singularize (string word);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Singularize(string word) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.PluralizationServices.PluralizationService.Singularize(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Singularize (word As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ Singularize(System::String ^ word);" />
      <MemberSignature Language="F#" Value="abstract member Singularize : string -&gt; string" Usage="pluralizationService.Singularize word" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="word" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="word"><span data-ttu-id="2e70a-133">단수로 만들 단어입니다.</span><span class="sxs-lookup"><span data-stu-id="2e70a-133">The word to be made singular.</span></span></param>
        <summary><span data-ttu-id="2e70a-134">지정된 단어의 단수 형태를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2e70a-134">Returns the singular form of the specified word.</span></span></summary>
        <returns><span data-ttu-id="2e70a-135">입력 매개 변수의 단수 형태입니다.</span><span class="sxs-lookup"><span data-stu-id="2e70a-135">The singular form of the input parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e70a-136"><xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> 클래스 단어의 복수 및 단 수 형태를 생성 하는 것에 대 한 영어 규칙을 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e70a-136">The <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> class applies English rules for constructing plural and singular forms of words.</span></span> <span data-ttu-id="2e70a-137">다른 언어 서비스 확장을 사용 합니다 <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> 에 <xref:System.Data.Entity.Design.EntityModelSchemaGenerator> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2e70a-137">To extend the service to other languages, use the <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> on the <xref:System.Data.Entity.Design.EntityModelSchemaGenerator> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>