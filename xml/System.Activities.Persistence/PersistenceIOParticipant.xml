<Type Name="PersistenceIOParticipant" FullName="System.Activities.Persistence.PersistenceIOParticipant">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e788c825fb212822c897f4841918a2d40ea7bacb" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36654037" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PersistenceIOParticipant : System.Activities.Persistence.PersistenceParticipant" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PersistenceIOParticipant extends System.Activities.Persistence.PersistenceParticipant" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Persistence.PersistenceIOParticipant" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PersistenceIOParticipant&#xA;Inherits PersistenceParticipant" />
  <TypeSignature Language="C++ CLI" Value="public ref class PersistenceIOParticipant abstract : System::Activities::Persistence::PersistenceParticipant" />
  <TypeSignature Language="F#" Value="type PersistenceIOParticipant = class&#xA;    inherit PersistenceParticipant" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Persistence.PersistenceParticipant</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="713ff-101">지속성 프로세스를 통해 워크플로 인스턴스의 지속 및 로드 외에도 입력 및 출력 작업을 수행하는 메서드가 있는 <see cref="T:System.Activities.Persistence.PersistenceParticipant" /> 클래스의 파생 클래스입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="713ff-101">A derived vclass of the <see cref="T:System.Activities.Persistence.PersistenceParticipant" /> class with methods that perform input and output operations in addition to the persisting and loading of workflow instances through the persistence process.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="713ff-102">호스트는 인스턴스를 지속할 때 다음 단계를 실행합니다.</span><span class="sxs-lookup"><span data-stu-id="713ff-102">A host executes the following steps (or stages) when persisting an instance:</span></span>  
  
1.  <span data-ttu-id="713ff-103">지속할 값을 수집합니다.</span><span class="sxs-lookup"><span data-stu-id="713ff-103">Collects values to be persisted.</span></span>  
  
2.  <span data-ttu-id="713ff-104">단일 구조 값의 필드를 개별 값으로 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="713ff-104">Maps fields of monolithic structured values to individual values.</span></span>  
  
3.  <span data-ttu-id="713ff-105">지속성 공급자에게 <xref:System.Activities.DurableInstancing.SaveWorkflowCommand>를 실행합니다.</span><span class="sxs-lookup"><span data-stu-id="713ff-105">Issues the <xref:System.Activities.DurableInstancing.SaveWorkflowCommand> to the persistence provider.</span></span>  
  
4.  <span data-ttu-id="713ff-106">지속성 트랜잭션에서 I/O를 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="713ff-106">Performs I/O under the persistence transaction.</span></span>  
  
 <span data-ttu-id="713ff-107">호스트가 단계를 완료한 후 다음 단계를 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="713ff-107">A host completes a stage before beginning the next stage.</span></span> <span data-ttu-id="713ff-108">예를 들어, 지속할 때 호스트는 두 번째 단계로 이동하기 전에 모든 지속성 참석자로부터 값을 수집합니다.</span><span class="sxs-lookup"><span data-stu-id="713ff-108">For example when persisting, the host collects values from all the persistence participants before moving to the second stage.</span></span> <span data-ttu-id="713ff-109">두 번째 단계에서는 호스트가 첫 번째 단계에서 수집한 모든 값을 두 번째 단계의 모든 지속성 참석자에게 매핑을 위해 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="713ff-109">In the second stage, the host provides all the values collected in the first stage to all persistence participants in the second stage for mapping.</span></span> <span data-ttu-id="713ff-110">세 번째 단계에서는 호스트가 <xref:System.Activities.DurableInstancing.SaveWorkflowCommand>를 호출할 때 첫 번째 및 두 번째 단계에서 수집한 모든 값을 지속성 공급자에게 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="713ff-110">In the third stage, the host provides all the collected values in the first and second stages to the persistence provider when invoking the <xref:System.Activities.DurableInstancing.SaveWorkflowCommand>.</span></span> <span data-ttu-id="713ff-111">네 번째 단계에서는 호스트가 지속성 트랜잭션에서 수집한 모든 값을 모든 지속성 IO 참석자에게 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="713ff-111">Then in the fourth stage, the host provides all the collected values to all the persistence IO participants under the persistence transaction.</span></span>  
  
 <span data-ttu-id="713ff-112">호스트는 지속성 인스턴스를 로드할 때 다음 단계를 실행합니다.</span><span class="sxs-lookup"><span data-stu-id="713ff-112">A host executes the following stages when loading a persistence instance:</span></span>  
  
1.  <span data-ttu-id="713ff-113">지속성 공급자에게 <xref:System.Activities.DurableInstancing.LoadWorkflowCommand> 및 <xref:System.Activities.DurableInstancing.LoadWorkflowByInstanceKeyCommand>를 실행합니다.</span><span class="sxs-lookup"><span data-stu-id="713ff-113">Issues the <xref:System.Activities.DurableInstancing.LoadWorkflowCommand> and <xref:System.Activities.DurableInstancing.LoadWorkflowByInstanceKeyCommand> to the persistence provider.</span></span>  
  
2.  <span data-ttu-id="713ff-114">지속성 트랜잭션에서 I/O를 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="713ff-114">Performs I/O under the persistence transaction.</span></span>  
  
3.  <span data-ttu-id="713ff-115">로드된 값을 게시합니다.</span><span class="sxs-lookup"><span data-stu-id="713ff-115">Publishes the loaded values.</span></span>  
  
 <span data-ttu-id="713ff-116">상위 수준에서 <xref:System.Activities.Persistence.PersistenceParticipant> 클래스로부터 파생된 워크플로 인스턴스 확장은 지속 프로세스의 첫 번째(수집) 및 두 번째(매핑) 단계와 로드 프로세스의 세 번째 단계(게시)에 참가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="713ff-116">At the highest level, workflow instance extensions that derive from the <xref:System.Activities.Persistence.PersistenceParticipant> class can participate in the first (Collect) and second (Map) stages of persisting process and the third stage (Publish) of loading process.</span></span>  <span data-ttu-id="713ff-117">PersistenceIOParticipant 클래스로부터 파생된 워크플로 인스턴스 확장은 지속 프로세스의 네 번째 단계와 로드 프로세스의 두 번째 단계(I/O)에 추가로 참가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="713ff-117">Workflow instance extensions deriving from the PersistenceIOParticipant class can additionally participate in the fourth stage of the persisting process and the second stage of the loading process (I/O).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PersistenceIOParticipant (bool isSaveTransactionRequired, bool isLoadTransactionRequired);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(bool isSaveTransactionRequired, bool isLoadTransactionRequired) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceIOParticipant.#ctor(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (isSaveTransactionRequired As Boolean, isLoadTransactionRequired As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PersistenceIOParticipant(bool isSaveTransactionRequired, bool isLoadTransactionRequired);" />
      <MemberSignature Language="F#" Value="new System.Activities.Persistence.PersistenceIOParticipant : bool * bool -&gt; System.Activities.Persistence.PersistenceIOParticipant" Usage="new System.Activities.Persistence.PersistenceIOParticipant (isSaveTransactionRequired, isLoadTransactionRequired)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="isSaveTransactionRequired" Type="System.Boolean" />
        <Parameter Name="isLoadTransactionRequired" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isSaveTransactionRequired">
          <span data-ttu-id="713ff-118">저장 작업에 트랜잭션이 필요하면 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="713ff-118">
              <see langword="true" /> if a transaction is required for the Save operation.</span>
          </span>
          <span data-ttu-id="713ff-119">이 매개 변수를 <see langword="true" />로 설정하여 <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /> 개체를 만든 경우 BeginOnSave를 호출하면 Transaction.Current가 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="713ff-119">If the <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /> object is created with this parameter set to <see langword="true" />,  Transaction.Current is guaranteed to be set when BeginOnSave is invoked.</span>
          </span>
          <span data-ttu-id="713ff-120">트랜잭션은 지속성 공급자, 모든 PersistenceIOParticipant 확장명 및 기타 잠재적 트랜잭션 참가자 간에 공유됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="713ff-120">The transaction is shared between the persistence provider, all PersistenceIOParticipant extensions, and potentially other transaction participants.</span>
          </span>
        </param>
        <param name="isLoadTransactionRequired">
          <span data-ttu-id="713ff-121">로드 작업에 트랜잭션이 필요하면 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="713ff-121">
              <see langword="true" /> if a transaction is required for the Load operation.</span>
          </span>
          <span data-ttu-id="713ff-122">이 매개 변수를 <see langword="true" />로 설정하여 <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /> 개체를 만든 경우 BeginOnLoad를 호출하면 Transaction.Current가 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="713ff-122">If the <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /> object is created with this parameter set to <see langword="true" />,  Transaction.Current is guaranteed to be set  when BeginOnLoad is invoked.</span>
          </span>
          <span data-ttu-id="713ff-123">트랜잭션은 지속성 공급자, 모든 PersistenceIOParticipant 확장명 및 기타 잠재적 트랜잭션 참가자 간에 공유됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="713ff-123">The transaction is shared between the persistence provider, all PersistenceIOParticipant extensions, and potentially other transaction participants.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="713ff-124">
            <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /> 클래스의 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="713ff-124">Initializes an instance of the <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="protected abstract void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceIOParticipant.Abort" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void Abort();" />
      <MemberSignature Language="F#" Value="abstract member Abort : unit -&gt; unit" Usage="persistenceIOParticipant.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="713ff-125">보류 중인 IO(로드 또는 저장) 작업을 중단합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="713ff-125">Aborts the pending IO (Load or Save) operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="713ff-126">BeginOnSave 또는 BeginOnLoad를 재정의하며 즉시 완료되지 않을 수도 있는 파생 클래스는 중단을 재정의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="713ff-126">Derived classes that override BeginOnSave or BeginOnLoad and might not always complete immediately must override Abort.</span></span> <span data-ttu-id="713ff-127">중단을 호출하면 보류 중인 모든 IO 작업이 취소되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="713ff-127">If Abort is invoked, any pending IO operations must be canceled.</span></span> <span data-ttu-id="713ff-128">이런 방식으로 작업이 취소된 경우 해당 End 메서드에서 OperationCanceledException을 throw해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="713ff-128">If an operation is canceled in this way, the corresponding End method should throw OperationCanceledException.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginOnLoad">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginOnLoad (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; readWriteValues, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginOnLoad(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; readWriteValues, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceIOParticipant.BeginOnLoad(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BeginOnLoad (readWriteValues As IDictionary(Of XName, Object), timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ BeginOnLoad(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ readWriteValues, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginOnLoad : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginOnLoad : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="persistenceIOParticipant.BeginOnLoad (readWriteValues, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readWriteValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="readWriteValues">
          <span data-ttu-id="713ff-129">지속성 공급자가 로드한 읽기/쓰기 값의 사전입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="713ff-129">A dictionary of read-write values loaded by the persistence provider.</span>
          </span>
          <span data-ttu-id="713ff-130">이 사전은 이 인스턴스에 대한 최신 지속성 에피소드에서 BeginOnSave로 전달된 읽기/쓰기 값 집합에 해당합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="713ff-130">This corresponds to the set of read-write values passed to BeginOnSave in the most recent persistence episode for this instance.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="713ff-131">시간 초과 없이 작업을 완료할 시간 범위입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="713ff-131">The time span within which the operation should be completed without timing out.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="713ff-132">비동기 로드 작업의 완료에 대한 알림을 수신하는 비동기 콜백 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="713ff-132">The asynchronous callback delegate that receives notification of the completion of the asynchronous Load operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="713ff-133">비동기 작업과 연결된 상태 정보입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="713ff-133">The state information associated with the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="713ff-134">인스턴스 저장소에서 로드되는 인스턴스와 함께 추가 상태를 로드하는 비동기 작업을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="713ff-134">Begins an asynchronous operation to load additional state in conjunction with an instance being loaded from the instance store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="713ff-135">비동기 작업의 상태입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="713ff-135">The status of an asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginOnSave">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginOnSave (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; readWriteValues, System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; writeOnlyValues, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginOnSave(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; readWriteValues, class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; writeOnlyValues, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceIOParticipant.BeginOnSave(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BeginOnSave (readWriteValues As IDictionary(Of XName, Object), writeOnlyValues As IDictionary(Of XName, Object), timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ BeginOnSave(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ readWriteValues, System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ writeOnlyValues, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginOnSave : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; * System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginOnSave : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; * System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="persistenceIOParticipant.BeginOnSave (readWriteValues, writeOnlyValues, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readWriteValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
        <Parameter Name="writeOnlyValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="readWriteValues">
          <span data-ttu-id="713ff-136">CollectValues 및 MapValues 단계에서 수집한 읽기/쓰기 값의 사전입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="713ff-136">A dictionary of read-write values collected in the CollectValues and MapValues stages.</span>
          </span>
        </param>
        <param name="writeOnlyValues">
          <span data-ttu-id="713ff-137">CollectValues 및 MapValues 단계에서 수집한 쓰기 전용 값의 사전입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="713ff-137">A dictionary of write-only values collected in the CollectValues and MapValues stages.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="713ff-138">시간 초과 없이 작업을 완료할 시간 범위입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="713ff-138">The time span within which the operation should be completed without timing out.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="713ff-139">비동기 작업의 완료에 대한 알림을 수신하는 비동기 콜백 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="713ff-139">The asynchronous callback delegate that receives notification of the completion of the asynchronous operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="713ff-140">비동기 작업과 연결된 상태 정보입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="713ff-140">The state information associated with the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="713ff-141">인스턴스 저장소에 지속되는 인스턴스와 함께 추가 상태를 저장하는 비동기 작업을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="713ff-141">Begins an asynchronous operation to save additional state in conjunction with an instance being persisted to the instance store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="713ff-142">비동기 작업의 상태입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="713ff-142">The status of an asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndOnLoad">
      <MemberSignature Language="C#" Value="protected virtual void EndOnLoad (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EndOnLoad(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceIOParticipant.EndOnLoad(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub EndOnLoad (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void EndOnLoad(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndOnLoad : IAsyncResult -&gt; unit&#xA;override this.EndOnLoad : IAsyncResult -&gt; unit" Usage="persistenceIOParticipant.EndOnLoad result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="713ff-143">
            <see cref="M:System.Activities.Persistence.PersistenceIOParticipant.BeginOnSave(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)" /> 메서드 호출에서 반환된 비동기 결과입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="713ff-143">The asynchronous result returned by a call to the <see cref="M:System.Activities.Persistence.PersistenceIOParticipant.BeginOnSave(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="713ff-144">비동기 로드 작업을 완료합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="713ff-144">Completes the asynchronous Load operation.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndOnSave">
      <MemberSignature Language="C#" Value="protected virtual void EndOnSave (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EndOnSave(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceIOParticipant.EndOnSave(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub EndOnSave (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void EndOnSave(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndOnSave : IAsyncResult -&gt; unit&#xA;override this.EndOnSave : IAsyncResult -&gt; unit" Usage="persistenceIOParticipant.EndOnSave result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="713ff-145">
            <see cref="M:System.Activities.Persistence.PersistenceIOParticipant.BeginOnSave(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)" /> 메서드 호출에서 반환된 비동기 결과입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="713ff-145">The asynchronous result returned by a call to the <see cref="M:System.Activities.Persistence.PersistenceIOParticipant.BeginOnSave(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="713ff-146">비동기 저장 작업을 완료합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="713ff-146">Completes the asynchronous Save operation.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>