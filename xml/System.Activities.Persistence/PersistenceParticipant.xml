<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PersistenceParticipant.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae25fbb5-14a8-44f2-90c2-3c6d6fcaae7f8d7c75dc0fd110e2ed3fd606b8610133c2cf51d8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8d7c75dc0fd110e2ed3fd606b8610133c2cf51d8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b899505ed6d42225f2b3c9150bfdc080d0d1f9b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/28/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Activities.Persistence.PersistenceParticipant">
          <source>This class allows both <ph id="ph1">&lt;see cref="T:System.Activities.WorkflowApplication" /&gt;</ph> and <ph id="ph2">&lt;see cref="T:System.ServiceModel.WorkflowServiceHost" /&gt;</ph> to participate in persistence process.</source>
          <target state="translated">이 클래스를 사용하면 <ph id="ph1">&lt;see cref="T:System.Activities.WorkflowApplication" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="T:System.ServiceModel.WorkflowServiceHost" /&gt;</ph>가 모두 지속성 프로세스에 참가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Activities.Persistence.PersistenceParticipant">
          <source>A persistence participant derives from the <ph id="ph1">&lt;see cref="T:System.Activities.Persistence.PersistenceParticipant" /&gt;</ph> class or the <ph id="ph2">&lt;see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /&gt;</ph> class (derived class of the <ph id="ph3">&lt;see cref="T:System.Activities.Persistence.PersistenceParticipant" /&gt;</ph> class), implements abstract methods, and then add an instance of the class as a workflow instance extension.</source>
          <target state="translated">지속성 참석자는 <ph id="ph1">&lt;see cref="T:System.Activities.Persistence.PersistenceParticipant" /&gt;</ph> 클래스 또는 <ph id="ph2">&lt;see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /&gt;</ph> 클래스(<ph id="ph3">&lt;see cref="T:System.Activities.Persistence.PersistenceParticipant" /&gt;</ph> 클래스의 파생 클래스)에서 파생되며, 추상 메서드를 구현한 후 클래스 인스턴스를 워크플로 인스턴스 확장으로 추가합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Activities.Persistence.PersistenceParticipant">
          <source>The <ph id="ph1">&lt;see cref="T:System.Activities.WorkflowApplication" /&gt;</ph> and <ph id="ph2">&lt;see cref="T:System.ServiceModel.WorkflowServiceHost" /&gt;</ph> look for such extensions when persisting an instance and invoke appropriate methods at appropriate times.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Activities.WorkflowApplication" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="T:System.ServiceModel.WorkflowServiceHost" /&gt;</ph>는 인스턴스를 지속할 때 이러한 확장을 찾고 적절한 시간에 적절한 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Persistence.PersistenceParticipant">
          <source>A host executes the following steps (or stages) when persisting an instance:</source>
          <target state="translated">호스트는 인스턴스를 지속할 때 다음 단계를 실행합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Persistence.PersistenceParticipant">
          <source>Collects values to be persisted.</source>
          <target state="translated">지속할 값을 수집합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Persistence.PersistenceParticipant">
          <source>Maps fields of monolithic structured values to individual values.</source>
          <target state="translated">단일 구조 값의 필드를 개별 값으로 매핑합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Persistence.PersistenceParticipant">
          <source>Issues the <ph id="ph1">&lt;xref:System.Activities.DurableInstancing.SaveWorkflowCommand&gt;</ph> to the persistence provider.</source>
          <target state="translated">지속성 공급자에게 <ph id="ph1">&lt;xref:System.Activities.DurableInstancing.SaveWorkflowCommand&gt;</ph>를 실행합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Persistence.PersistenceParticipant">
          <source>Performs I/O under the persistence transaction.</source>
          <target state="translated">지속성 트랜잭션에서 I/O를 수행합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Persistence.PersistenceParticipant">
          <source>A host completes a stage before beginning the next stage.</source>
          <target state="translated">호스트가 단계를 완료한 후 다음 단계를 시작합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Persistence.PersistenceParticipant">
          <source>For example when persisting, the host collects values from all the persistence participants before moving to the second stage.</source>
          <target state="translated">예를 들어, 지속할 때 호스트는 두 번째 단계로 이동하기 전에 모든 지속성 참석자로부터 값을 수집합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Persistence.PersistenceParticipant">
          <source>In the second stage, the host provides all the values collected in the first stage to all persistence participants in the second stage for mapping.</source>
          <target state="translated">두 번째 단계에서는 호스트가 첫 번째 단계에서 수집한 모든 값을 두 번째 단계의 모든 지속성 참석자에게 매핑을 위해 제공합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Persistence.PersistenceParticipant">
          <source>In the third stage, the host provides all the collected values in the first and second stages to the persistence provider when invoking the <ph id="ph1">&lt;xref:System.Activities.DurableInstancing.SaveWorkflowCommand&gt;</ph>.</source>
          <target state="translated">세 번째 단계에서는 호스트가 <ph id="ph1">&lt;xref:System.Activities.DurableInstancing.SaveWorkflowCommand&gt;</ph>를 호출할 때 첫 번째 및 두 번째 단계에서 수집한 모든 값을 지속성 공급자에게 제공합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Persistence.PersistenceParticipant">
          <source>Then in the fourth stage, the host provides all the collected values to all the persistence IO participants under the persistence transaction.</source>
          <target state="translated">네 번째 단계에서는 호스트가 지속성 트랜잭션에서 수집한 모든 값을 모든 지속성 IO 참석자에게 제공합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Persistence.PersistenceParticipant">
          <source>A host executes the following stages when loading a persistence instance:</source>
          <target state="translated">호스트는 지속성 인스턴스를 로드할 때 다음 단계를 실행합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Persistence.PersistenceParticipant">
          <source>Issues the <ph id="ph1">&lt;xref:System.Activities.DurableInstancing.LoadWorkflowCommand&gt;</ph> and <ph id="ph2">&lt;xref:System.Activities.DurableInstancing.LoadWorkflowByInstanceKeyCommand&gt;</ph> to the persistence provider.</source>
          <target state="translated">지속성 공급자에게 <ph id="ph1">&lt;xref:System.Activities.DurableInstancing.LoadWorkflowCommand&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Activities.DurableInstancing.LoadWorkflowByInstanceKeyCommand&gt;</ph>를 실행합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Persistence.PersistenceParticipant">
          <source>Performs I/O under the persistence transaction.</source>
          <target state="translated">지속성 트랜잭션에서 I/O를 수행합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Persistence.PersistenceParticipant">
          <source>Publishes the loaded values.</source>
          <target state="translated">로드된 값을 게시합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Persistence.PersistenceParticipant">
          <source>At the highest level, workflow instance extensions that derive from the <ph id="ph1">&lt;xref:System.Activities.Persistence.PersistenceParticipant&gt;</ph> class can participate in the first (Collect) and second (Map) stages of persisting process and the third stage (Publish) of loading process.</source>
          <target state="translated">상위 수준에서 <ph id="ph1">&lt;xref:System.Activities.Persistence.PersistenceParticipant&gt;</ph> 클래스로부터 파생된 워크플로 인스턴스 확장은 지속 프로세스의 첫 번째(수집) 및 두 번째(매핑) 단계와 로드 프로세스의 세 번째 단계(게시)에 참가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Persistence.PersistenceParticipant">
          <source>Workflow instance extensions deriving from the PersistenceIOParticipant class can additionally participate in the fourth stage of the persisting process and the second stage of the loading process (I/O).</source>
          <target state="translated">PersistenceIOParticipant 클래스로부터 파생된 워크플로 인스턴스 확장은 지속 프로세스의 네 번째 단계와 로드 프로세스의 두 번째 단계(I/O)에 추가로 참가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Persistence.PersistenceParticipant">
          <source>The following code sample demonstrates creating a class that derives from <ph id="ph1">&lt;xref:System.Activities.Persistence.PersistenceParticipant&gt;</ph>.</source>
          <target state="translated">다음 코드 샘플에서는 <ph id="ph1">&lt;xref:System.Activities.Persistence.PersistenceParticipant&gt;</ph>에서 파생되는 클래스를 만드는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Persistence.PersistenceParticipant">
          <source>This example is from the <bpt id="p1">[</bpt>Hiring Process<ept id="p1">](~/docs/framework/windows-workflow-foundation/samples/hiring-process.md)</ept> sample.</source>
          <target state="translated">이 예제에서는 <bpt id="p1">[</bpt>채용 프로세스<ept id="p1">](~/docs/framework/windows-workflow-foundation/samples/hiring-process.md)</ept> 샘플.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Activities.Persistence.PersistenceParticipant.#ctor">
          <source>Initializes an instance of the <ph id="ph1">&lt;see cref="T:System.Activities.Persistence.PersistenceParticipant" /&gt;</ph> class.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Activities.Persistence.PersistenceParticipant" /&gt;</ph> 클래스의 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Persistence.PersistenceParticipant.#ctor">
          <source>The following code sample demonstrates creating a class that derives from <ph id="ph1">&lt;xref:System.Activities.Persistence.PersistenceParticipant&gt;</ph>.</source>
          <target state="translated">다음 코드 샘플에서는 <ph id="ph1">&lt;xref:System.Activities.Persistence.PersistenceParticipant&gt;</ph>에서 파생되는 클래스를 만드는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Persistence.PersistenceParticipant.#ctor">
          <source>This example is from the <bpt id="p1">[</bpt>Hiring Process<ept id="p1">](~/docs/framework/windows-workflow-foundation/samples/hiring-process.md)</ept> sample.</source>
          <target state="translated">이 예제에서는 <bpt id="p1">[</bpt>채용 프로세스<ept id="p1">](~/docs/framework/windows-workflow-foundation/samples/hiring-process.md)</ept> 샘플.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Activities.Persistence.PersistenceParticipant.CollectValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@)">
          <source>The read-write values to be persisted.</source>
          <target state="translated">지속할 읽기/쓰기 값입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Activities.Persistence.PersistenceParticipant.CollectValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@)">
          <source>The write-only values to be persisted.</source>
          <target state="translated">지속할 쓰기 전용 값입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Activities.Persistence.PersistenceParticipant.CollectValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@)">
          <source>A host invokes this method on a custom persistence participant to collect read-write values and write-only values, to be persisted.</source>
          <target state="translated">호스트는 지속할 읽기/쓰기 값과 쓰기 전용 값을 수집하기 위해 사용자 지정 지속성 참석자에 대해 이 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Persistence.PersistenceParticipant.CollectValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@)">
          <source>The host packages read-write values in the first dictionary as <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceValue&gt;</ph> objects of an <ph id="ph2">&lt;xref:System.Activities.DurableInstancing.SaveWorkflowCommand.InstanceData*&gt;</ph> collection, and packages write-only values in the second dictionary as <ph id="ph3">&lt;xref:System.Runtime.DurableInstancing.InstanceValue&gt;</ph> objects with <ph id="ph4">&lt;xref:System.Runtime.DurableInstancing.InstanceValueOptions.Optional&gt;</ph> and <ph id="ph5">&lt;xref:System.Runtime.DurableInstancing.InstanceValueOptions.WriteOnly&gt;</ph> flags set.</source>
          <target state="translated">호스트는 첫 번째 사전의 읽기/쓰기 값을 <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceValue&gt;</ph> 컬렉션의 <ph id="ph2">&lt;xref:System.Activities.DurableInstancing.SaveWorkflowCommand.InstanceData*&gt;</ph> 개체로 패키징하고 두 번째 사전의 쓰기 전용 값을 <ph id="ph3">&lt;xref:System.Runtime.DurableInstancing.InstanceValue&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Runtime.DurableInstancing.InstanceValueOptions.Optional&gt;</ph> 플래그가 설정된 <ph id="ph5">&lt;xref:System.Runtime.DurableInstancing.InstanceValueOptions.WriteOnly&gt;</ph> 개체로 패키징합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Persistence.PersistenceParticipant.CollectValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceValueOptions&gt;</ph>.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceValueOptions&gt;</ph>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Persistence.PersistenceParticipant.CollectValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@)">
          <source>Each value provided by implementations of <ph id="ph1">&lt;xref:System.Activities.Persistence.PersistenceParticipant.CollectValues%2A&gt;</ph> across all persistence participants within one persistence episode must have a unique XName.</source>
          <target state="translated">한 지속성 에피소드 내의 모든 지속성 참석자에 대해 <ph id="ph1">&lt;xref:System.Activities.Persistence.PersistenceParticipant.CollectValues%2A&gt;</ph> 구현이 제공하는 각 값에는 고유한 XName이 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Persistence.PersistenceParticipant.CollectValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@)">
          <source>The following code sample demonstrates using CollectValues in a class that derives from <ph id="ph1">&lt;xref:System.Activities.Persistence.PersistenceParticipant&gt;</ph>.</source>
          <target state="translated">다음 코드 샘플에서는 <ph id="ph1">&lt;xref:System.Activities.Persistence.PersistenceParticipant&gt;</ph>에서 파생되는 클래스에 CollectValues를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Persistence.PersistenceParticipant.CollectValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@)">
          <source>This example is from the <bpt id="p1">[</bpt>Persistence Participants<ept id="p1">](~/docs/framework/windows-workflow-foundation/persistence-participants.md)</ept> sample.</source>
          <target state="translated">이 예제에서는 <bpt id="p1">[</bpt>지 속성 참가자<ept id="p1">](~/docs/framework/windows-workflow-foundation/persistence-participants.md)</ept> 샘플.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Activities.Persistence.PersistenceParticipant.MapValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})">
          <source>The read-write values to be persisted.</source>
          <target state="translated">지속할 읽기/쓰기 값입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Activities.Persistence.PersistenceParticipant.MapValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})">
          <source>The write-only values to be persisted.</source>
          <target state="translated">지속할 쓰기 전용 값입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Activities.Persistence.PersistenceParticipant.MapValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})">
          <source>A host invokes this method after it is done with collecting the values in the first stage.</source>
          <target state="translated">호스트는 첫 번째 단계에서 값 수집을 완료한 후 이 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Activities.Persistence.PersistenceParticipant.MapValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})">
          <source>The host forwards two read-only dictionaries of values it collected from all persistence participants during the first stage (CollectValues stage) to this method for mapping.</source>
          <target state="translated">호스트는 첫 번째 단계(CollectValues 단계) 중에 모든 지속성 참석자로부터 수집한 값의 읽기 전용 사전 두 개를 매핑을 위해 이 메서드로 전달합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Activities.Persistence.PersistenceParticipant.MapValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})">
          <source>The host adds values in the dictionary returned by this method to the collection of write-only values.</source>
          <target state="translated">호스트는 이 메서드에 의해 반환된 사전의 값을 쓰기 전용 값 컬렉션에 추가합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Activities.Persistence.PersistenceParticipant.MapValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})">
          <source>A dictionary containing additional write-only values to be persisted.</source>
          <target state="translated">지속할 추가 쓰기 전용 값이 포함된 사전입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Persistence.PersistenceParticipant.MapValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})">
          <source>Each value provided by implementations of all the <ph id="ph1">&lt;xref:System.Activities.Persistence.PersistenceParticipant.MapValues%2A&gt;</ph> methods across all persistence participants including all the values collected in the first stage (CollectValues stage) must have a unique XName.</source>
          <target state="translated">첫 번째 단계(CollectValues 단계)에서 수집한 모든 값을 포함하는 모든 지속성 참석자에 대해 모든 <ph id="ph1">&lt;xref:System.Activities.Persistence.PersistenceParticipant.MapValues%2A&gt;</ph> 메서드 구현이 제공하는 각 값에는 고유한 XName이 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Persistence.PersistenceParticipant.MapValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})">
          <source>The following code sample demonstrates using MapValues in a class that derives from <ph id="ph1">&lt;xref:System.Activities.Persistence.PersistenceParticipant&gt;</ph>.</source>
          <target state="translated">다음 코드 샘플에서는 <ph id="ph1">&lt;xref:System.Activities.Persistence.PersistenceParticipant&gt;</ph>에서 파생되는 클래스에 MapValues를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Persistence.PersistenceParticipant.MapValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})">
          <source>This example is from the <bpt id="p1">[</bpt>Corporate Purchase Process<ept id="p1">](~/docs/framework/windows-workflow-foundation/samples/corporate-purchase-process.md)</ept> sample.</source>
          <target state="translated">이 예제에서는 <bpt id="p1">[</bpt>기업 구매 프로세스<ept id="p1">](~/docs/framework/windows-workflow-foundation/samples/corporate-purchase-process.md)</ept> 샘플.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Activities.Persistence.PersistenceParticipant.PublishValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})">
          <source>The read-write values that were loaded from the persistence store.</source>
          <target state="translated">지속성 저장소에서 로드된 읽기/쓰기 값입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Activities.Persistence.PersistenceParticipant.PublishValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})">
          <source>This dictionary corresponds to the dictionary of read-write values persisted in the most recent persistence episode.</source>
          <target state="translated">이 사전은 최신 지속성 에피소드에서 지속된 읽기/쓰기 값의 사전에 해당합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Activities.Persistence.PersistenceParticipant.PublishValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})">
          <source>The host invokes this method and passes all the loaded values in the <ph id="ph1">&lt;see cref="P:System.Activities.Persistence.SaveWorkflowCommand.InstanceData" /&gt;</ph> collection (filled by the <ph id="ph2">&lt;see cref="T:System.Activities.Persistence.LoadWorkflowCommand" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.Activities.Persistence.LoadWorkflowByInstanceKeyCommand" /&gt;</ph>) as a dictionary parameter.</source>
          <target state="translated">호스트는 이 메서드를 호출하고 <ph id="ph1">&lt;see cref="P:System.Activities.Persistence.SaveWorkflowCommand.InstanceData" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="T:System.Activities.Persistence.LoadWorkflowCommand" /&gt;</ph>로 채워진 <ph id="ph3">&lt;see cref="T:System.Activities.Persistence.LoadWorkflowByInstanceKeyCommand" /&gt;</ph> 컬렉션에 로드된 모든 값을 사전 매개 변수로 전달합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Persistence.PersistenceParticipant.PublishValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})">
          <source>The following code sample demonstrates using PublishValues in a class that derives from <ph id="ph1">&lt;xref:System.Activities.Persistence.PersistenceParticipant&gt;</ph>.</source>
          <target state="translated">다음 코드 샘플에서는 <ph id="ph1">&lt;xref:System.Activities.Persistence.PersistenceParticipant&gt;</ph>에서 파생되는 클래스에 PublishValues를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Persistence.PersistenceParticipant.PublishValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})">
          <source>This example is from the <bpt id="p1">[</bpt>Persistence Participants<ept id="p1">](~/docs/framework/windows-workflow-foundation/persistence-participants.md)</ept> sample.</source>
          <target state="translated">이 예제에서는 <bpt id="p1">[</bpt>지 속성 참가자<ept id="p1">](~/docs/framework/windows-workflow-foundation/persistence-participants.md)</ept> 샘플.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>