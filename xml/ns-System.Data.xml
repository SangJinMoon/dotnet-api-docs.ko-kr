<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ns-System.Data.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5a83ea4b-dd12-480b-bfc8-267272ef1864db22860ab86b6615962ccf96d14b06f53dd8e7fb.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">db22860ab86b6615962ccf96d14b06f53dd8e7fb</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df6cf590aa3087f6c7c202712eee781c6a3c8f96</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/10/2018</xliffext:ms.lasthandoff>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;see cref="N:System.Data" /&gt;</ph> namespace provides access to classes that represent the ADO.NET architecture.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="N:System.Data" /&gt;</ph> 네임스페이스는 ADO.NET 아키텍처를 나타내는 클래스에 대한 액세스를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ADO.NET lets you build components that efficiently manage data from multiple data sources.</source>
          <target state="translated">ADO.NET을 통해 여러 데이터 원본의 데이터를 효율적으로 관리할 수 있는 구성 요소를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a disconnected scenario such as the Internet, ADO.NET provides the tools to request, update, and reconcile data in multiple tier systems.</source>
          <target state="translated">연결이 끊긴 인터넷과 같은 시나리오에서 ADO.NET은 다계층 시스템에서 데이터를 요청, 업데이트 및 조정하는 도구를 제공합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ADO.NET architecture is also implemented in client applications, such as Windows Forms, or HTML pages created by ASP.NET.</source>
          <target state="translated">ADO.NET 아키텍처는 Windows Forms 같은 클라이언트 응용 프로그램이나 ASP.NET에서 만들어진 HTML 페이지에서도 구현됩니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The centerpiece of the ADO.NET architecture is the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> class.</source>
          <target state="translated">ADO.NET 아키텍처의 핵심은 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> can contain multiple <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects, with each <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> containing data from a single data source, such as SQL Server.</source>
          <target state="translated">각 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>은 각 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>에 SQL Server와 같은 단일 데이터 원본의 데이터가 포함된 <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> 개체를 다수 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> contains a <ph id="ph2">&lt;xref:System.Data.DataColumnCollection&gt;</ph>--a collection of <ph id="ph3">&lt;xref:System.Data.DataColumn&gt;</ph> objects--that determines the schema of each <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">각 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>에는 각 <ph id="ph2">&lt;xref:System.Data.DataColumnCollection&gt;</ph>의 스키마를 결정하는 <ph id="ph3">&lt;xref:System.Data.DataColumn&gt;</ph>(<ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> 개체의 컬렉션)이 포함됩니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataColumn.DataType%2A&gt;</ph> property determines the type of data held by the <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataColumn.DataType%2A&gt;</ph> 속성은 <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph>에서 보유되는 데이터의 형식을 결정합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataColumn.ReadOnly%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataColumn.AllowDBNull%2A&gt;</ph> properties let you further guarantee data integrity.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataColumn.ReadOnly%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Data.DataColumn.AllowDBNull%2A&gt;</ph> 속성을 사용하면 데이터 무결성이 더욱 보장됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph> property lets you construct calculated columns.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph> 속성을 사용하면 계산 열을 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> participates in a parent/child relationship with another <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, the relationship is constructed by adding a <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph> to the <ph id="ph4">&lt;xref:System.Data.DataRelationCollection&gt;</ph> of a <ph id="ph5">&lt;xref:System.Data.DataSet&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>이 다른 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>과 부모/자식 관계에 참여하는 경우, 이 관계는 <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph> 개체의 <ph id="ph4">&lt;xref:System.Data.DataRelationCollection&gt;</ph>에 <ph id="ph5">&lt;xref:System.Data.DataSet&gt;</ph>을 추가하는 방법으로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>When such a relation is added, a <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> and a <ph id="ph2">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> are both created automatically, depending on the parameter settings for the constructor.</source>
          <target state="translated">이런 관계가 추가되면, 생성자의 매개 변수 설정에 따라 <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph>와 <ph id="ph2">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph>가 자동으로 만들어집니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> guarantees that values that are contained in a column are unique.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph>는 열에 포함된 값이 고유한 값이 되도록 하며,</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> determines what action will happen to the child row or column when a primary key value is changed or deleted.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph>는 기본 키 값 변경이나 삭제 시 자식 행 또는 열에 발생할 동작을 결정합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using the <ph id="ph1">&lt;xref:System.Data.SqlClient&gt;</ph> namespace (the.NET Framework Data Provider for SQL Server), the <ph id="ph2">&lt;xref:System.Data.Odbc&gt;</ph> namespace (the.NET Framework Data Provider for ODBC), the <ph id="ph3">&lt;xref:System.Data.OleDb&gt;</ph> namespace (the.NET Framework Data Provider for OLE DB), or the <ph id="ph4">&lt;xref:System.Data.OracleClient&gt;</ph> namespace (the .NET Framework Data Provider for Oracle), you can access a data source to use together with a <ph id="ph5">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient&gt;</ph> 네임스페이스(.NET Framework Data Provider for SQL Server), <ph id="ph2">&lt;xref:System.Data.Odbc&gt;</ph> 네임스페이스(.NET Framework Data Provider for ODBC), <ph id="ph3">&lt;xref:System.Data.OleDb&gt;</ph> 네임스페이스(.NET Framework Data Provider for OLE DB) 또는 <ph id="ph4">&lt;xref:System.Data.OracleClient&gt;</ph> 네임스페이스(.NET Framework Data Provider for Oracle)를 사용하여 데이터 원본에 액세스하여 <ph id="ph5">&lt;xref:System.Data.DataSet&gt;</ph>과 함께 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each.NET Framework data provider has a corresponding <bpt id="p1">**</bpt>DataAdapter<ept id="p1">**</ept> that you use as a bridge between a data source and a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Each.NET Framework 데이터 공급자에는 해당 <bpt id="p1">**</bpt>DataAdapter<ept id="p1">**</ept> 데이터 원본 사이의 연결 고리로 사용 하는 및 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>