<Namespace Name="System.Data">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="db22860ab86b6615962ccf96d14b06f53dd8e7fb" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="05/10/2018" />
    <Meta Name="ms.locfileid" Value="30726357" />
  </Metadata>
  <Docs>
    <summary>
      <span data-ttu-id="6eb96-101">
        <see cref="N:System.Data" /> 네임스페이스는 ADO.NET 아키텍처를 나타내는 클래스에 대한 액세스를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6eb96-101">The <see cref="N:System.Data" /> namespace provides access to classes that represent the ADO.NET architecture.</span>
      </span>
      <span data-ttu-id="6eb96-102">ADO.NET을 통해 여러 데이터 원본의 데이터를 효율적으로 관리할 수 있는 구성 요소를 만들 수 있습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6eb96-102">ADO.NET lets you build components that efficiently manage data from multiple data sources.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6eb96-103">연결이 끊긴 인터넷과 같은 시나리오에서 ADO.NET은 다계층 시스템에서 데이터를 요청, 업데이트 및 조정하는 도구를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="6eb96-103">In a disconnected scenario such as the Internet, ADO.NET provides the tools to request, update, and reconcile data in multiple tier systems.</span></span> <span data-ttu-id="6eb96-104">ADO.NET 아키텍처는 Windows Forms 같은 클라이언트 응용 프로그램이나 ASP.NET에서 만들어진 HTML 페이지에서도 구현됩니다.</span><span class="sxs-lookup"><span data-stu-id="6eb96-104">The ADO.NET architecture is also implemented in client applications, such as Windows Forms, or HTML pages created by ASP.NET.</span></span>  
  
 <span data-ttu-id="6eb96-105">ADO.NET 아키텍처의 핵심은 <xref:System.Data.DataSet> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6eb96-105">The centerpiece of the ADO.NET architecture is the <xref:System.Data.DataSet> class.</span></span> <span data-ttu-id="6eb96-106">각 <xref:System.Data.DataSet>은 각 <xref:System.Data.DataTable>에 SQL Server와 같은 단일 데이터 원본의 데이터가 포함된 <xref:System.Data.DataTable> 개체를 다수 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6eb96-106">Each <xref:System.Data.DataSet> can contain multiple <xref:System.Data.DataTable> objects, with each <xref:System.Data.DataTable> containing data from a single data source, such as SQL Server.</span></span>  
  
 <span data-ttu-id="6eb96-107">각 <xref:System.Data.DataTable>에는 각 <xref:System.Data.DataColumnCollection>의 스키마를 결정하는 <xref:System.Data.DataColumn>(<xref:System.Data.DataTable> 개체의 컬렉션)이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="6eb96-107">Each <xref:System.Data.DataTable> contains a <xref:System.Data.DataColumnCollection>--a collection of <xref:System.Data.DataColumn> objects--that determines the schema of each <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="6eb96-108"><xref:System.Data.DataColumn.DataType%2A> 속성은 <xref:System.Data.DataColumn>에서 보유되는 데이터의 형식을 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="6eb96-108">The <xref:System.Data.DataColumn.DataType%2A> property determines the type of data held by the <xref:System.Data.DataColumn>.</span></span> <span data-ttu-id="6eb96-109"><xref:System.Data.DataColumn.ReadOnly%2A> 및 <xref:System.Data.DataColumn.AllowDBNull%2A> 속성을 사용하면 데이터 무결성이 더욱 보장됩니다.</span><span class="sxs-lookup"><span data-stu-id="6eb96-109">The <xref:System.Data.DataColumn.ReadOnly%2A> and <xref:System.Data.DataColumn.AllowDBNull%2A> properties let you further guarantee data integrity.</span></span> <span data-ttu-id="6eb96-110"><xref:System.Data.DataColumn.Expression%2A> 속성을 사용하면 계산 열을 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6eb96-110">The <xref:System.Data.DataColumn.Expression%2A> property lets you construct calculated columns.</span></span>  
  
 <span data-ttu-id="6eb96-111"><xref:System.Data.DataTable>이 다른 <xref:System.Data.DataTable>과 부모/자식 관계에 참여하는 경우, 이 관계는 <xref:System.Data.DataRelation> 개체의 <xref:System.Data.DataRelationCollection>에 <xref:System.Data.DataSet>을 추가하는 방법으로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="6eb96-111">If a <xref:System.Data.DataTable> participates in a parent/child relationship with another <xref:System.Data.DataTable>, the relationship is constructed by adding a <xref:System.Data.DataRelation> to the <xref:System.Data.DataRelationCollection> of a <xref:System.Data.DataSet> object.</span></span> <span data-ttu-id="6eb96-112">이런 관계가 추가되면, 생성자의 매개 변수 설정에 따라 <xref:System.Data.UniqueConstraint>와 <xref:System.Data.ForeignKeyConstraint>가 자동으로 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="6eb96-112">When such a relation is added, a <xref:System.Data.UniqueConstraint> and a <xref:System.Data.ForeignKeyConstraint> are both created automatically, depending on the parameter settings for the constructor.</span></span> <span data-ttu-id="6eb96-113"><xref:System.Data.UniqueConstraint>는 열에 포함된 값이 고유한 값이 되도록 하며,</span><span class="sxs-lookup"><span data-stu-id="6eb96-113">The <xref:System.Data.UniqueConstraint> guarantees that values that are contained in a column are unique.</span></span> <span data-ttu-id="6eb96-114"><xref:System.Data.ForeignKeyConstraint>는 기본 키 값 변경이나 삭제 시 자식 행 또는 열에 발생할 동작을 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="6eb96-114">The <xref:System.Data.ForeignKeyConstraint> determines what action will happen to the child row or column when a primary key value is changed or deleted.</span></span>  
  
 <span data-ttu-id="6eb96-115"><xref:System.Data.SqlClient> 네임스페이스(.NET Framework Data Provider for SQL Server), <xref:System.Data.Odbc> 네임스페이스(.NET Framework Data Provider for ODBC), <xref:System.Data.OleDb> 네임스페이스(.NET Framework Data Provider for OLE DB) 또는 <xref:System.Data.OracleClient> 네임스페이스(.NET Framework Data Provider for Oracle)를 사용하여 데이터 원본에 액세스하여 <xref:System.Data.DataSet>과 함께 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6eb96-115">Using the <xref:System.Data.SqlClient> namespace (the.NET Framework Data Provider for SQL Server), the <xref:System.Data.Odbc> namespace (the.NET Framework Data Provider for ODBC), the <xref:System.Data.OleDb> namespace (the.NET Framework Data Provider for OLE DB), or the <xref:System.Data.OracleClient> namespace (the .NET Framework Data Provider for Oracle), you can access a data source to use together with a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="6eb96-116">Each.NET Framework 데이터 공급자에는 해당 **DataAdapter** 데이터 원본 사이의 연결 고리로 사용 하는 및 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="6eb96-116">Each.NET Framework data provider has a corresponding **DataAdapter** that you use as a bridge between a data source and a <xref:System.Data.DataSet>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>