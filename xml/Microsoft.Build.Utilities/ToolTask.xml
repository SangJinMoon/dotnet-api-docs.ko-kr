<Type Name="ToolTask" FullName="Microsoft.Build.Utilities.ToolTask">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="04e265aa742135d56fa78ef77e2016b1a8af66d0" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34173998" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ToolTask : Microsoft.Build.Utilities.Task, Microsoft.Build.Framework.ICancelableTask" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ToolTask extends Microsoft.Build.Utilities.Task implements class Microsoft.Build.Framework.ICancelableTask, class Microsoft.Build.Framework.ITask" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Utilities.ToolTask" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ToolTask&#xA;Inherits Task&#xA;Implements ICancelableTask" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToolTask abstract : Microsoft::Build::Utilities::Task, Microsoft::Build::Framework::ICancelableTask" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Build.Utilities.Task</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.ICancelableTask</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="e9243-101">파생 폼에서 재정의되면 명령줄 도구를 래핑하는 작업에 대한 기능을 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e9243-101">When overridden in a derived form, provides functionality for a task that wraps a command line tool.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9243-102">이 추상 클래스는 메서드 및 명령줄 도구를 래핑하는 작업의 속성에 대 한 기본 구현을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9243-102">This abstract class provides default implementations for the methods and properties of a task that wraps a command line tool.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9243-103">다음 예제에서는 한 <xref:Microsoft.Build.Utilities.ToolTask> 실행 하는 [Ilasm.exe (IL 어셈블러)](~/docs/framework/tools/ilasm-exe-il-assembler.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e9243-103">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span> <span data-ttu-id="e9243-104"><xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, 및 <xref:Microsoft.Build.Utilities.TaskLoggingHelper> 클래스는 작업을 실행 하는 데 필요한 정보를 생성 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e9243-104">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]
 [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e9243-105">
            <see cref="T:Microsoft.Build.Utilities.ToolTask" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-105">Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.ToolTask" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ToolTask ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ToolTask();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9243-106">
            <see cref="T:Microsoft.Build.Utilities.ToolTask" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-106">Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.ToolTask" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ToolTask (System.Resources.ResourceManager taskResources);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Resources.ResourceManager taskResources) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.#ctor(System.Resources.ResourceManager)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (taskResources As ResourceManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ToolTask(System::Resources::ResourceManager ^ taskResources);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="taskResources" Type="System.Resources.ResourceManager" />
      </Parameters>
      <Docs>
        <param name="taskResources">
          <span data-ttu-id="e9243-107">작업 리소스의 <see cref="T:System.Resources.ResourceManager" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-107">The <see cref="T:System.Resources.ResourceManager" /> for task resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9243-108">지정된 <see cref="T:Microsoft.Build.Utilities.ToolTask" />를 사용하여 <see cref="T:System.Resources.ResourceManager" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-108">Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.ToolTask" /> class with the specified <see cref="T:System.Resources.ResourceManager" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ToolTask (System.Resources.ResourceManager taskResources, string helpKeywordPrefix);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Resources.ResourceManager taskResources, string helpKeywordPrefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.#ctor(System.Resources.ResourceManager,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (taskResources As ResourceManager, helpKeywordPrefix As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ToolTask(System::Resources::ResourceManager ^ taskResources, System::String ^ helpKeywordPrefix);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="taskResources" Type="System.Resources.ResourceManager" />
        <Parameter Name="helpKeywordPrefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="taskResources">
          <span data-ttu-id="e9243-109">작업 리소스의 <see cref="T:System.Resources.ResourceManager" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-109">The <see cref="T:System.Resources.ResourceManager" /> for task resources.</span>
          </span>
        </param>
        <param name="helpKeywordPrefix">
          <span data-ttu-id="e9243-110">작업에 의해 발생하는 메시지에 사용할 도움말 키워드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-110">The Help keyword to use for messages raised by the task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9243-111">지정한 <see cref="T:Microsoft.Build.Utilities.ToolTask" />와 도움말 키워드 접두사를 사용하여 <see cref="T:System.Resources.ResourceManager" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-111">Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.ToolTask" /> class with the specified <see cref="T:System.Resources.ResourceManager" /> and Help keyword prefix.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallHostObjectToExecute">
      <MemberSignature Language="C#" Value="protected virtual bool CallHostObjectToExecute ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CallHostObjectToExecute() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.CallHostObjectToExecute" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CallHostObjectToExecute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool CallHostObjectToExecute();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9243-112">작업을 수행할 호스트 개체를 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-112">Calls the host object to perform the work of the task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9243-113">메서드가 성공했으면 <see langword="true" />이고, 실패했으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-113">
              <see langword="true" /> if the method was successfule; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public virtual void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Cancel();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ICancelableTask.Cancel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9243-114">해당 프로세스를 제대로 닫도록 요청한 다음 잠시 후 강제 종료함으로써 작업을 실행하는 프로세스를 취소합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-114">Cancels the process executing the task by asking it to close nicely, then after a short period, forcing termination.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteTempFile">
      <MemberSignature Language="C#" Value="protected void DeleteTempFile (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void DeleteTempFile(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.DeleteTempFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub DeleteTempFile (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void DeleteTempFile(System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="e9243-115">삭제할 임시 파일의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-115">The name of the temporary file to delete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9243-116">지정된 임시 파일을 삭제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-116">Deletes the specified temporary file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9243-117">삭제 작업이 어떤 이유로 든 실패할 경우 (예: if 파일이 잠겨 있는 바이러스 백신 소프트웨어로),이 메서드를 빌드에 실패 하면 예외를 throw 하지 않고 경고를 기록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9243-117">If the delete operation fails for any reason (such as if a file is locked by antivirus software), then this method logs a warning rather than throwing an exception, which would cause the build to fail.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EchoOff">
      <MemberSignature Language="C#" Value="public bool EchoOff { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EchoOff" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.EchoOff" />
      <MemberSignature Language="VB.NET" Value="Public Property EchoOff As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EchoOff { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9243-118">명령줄 에코가 해제되었음을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-118">Indicates that command line echoing is turned off.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9243-119">명령줄 에코가 해제되었으면 true입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-119">True when command line echo is off.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9243-120">MSBuild는 명령줄 에코 /Q cmd.exe 명령줄에 전달 하 여 해제 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9243-120">MSBuild turns off command line echoing by passing /Q on the cmd.exe command line.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvironmentOverride">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Specialized.StringDictionary EnvironmentOverride { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringDictionary EnvironmentOverride" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.EnvironmentOverride" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property EnvironmentOverride As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Collections::Specialized::StringDictionary ^ EnvironmentOverride { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use EnvironmentVariables property")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9243-121">환경 변수 이름-값 쌍의 집합을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-121">Gets a set of environment variable name-value pairs.</span>
          </span>
          <span data-ttu-id="e9243-122">연결된 도구의 실행 컨텍스트를 만들기 위해 새 환경 변수 또는 변경된 환경 변수 집합을 반환하도록 사용자 지정 작업 클래스(ToolTask에서 파생)에서 재정의됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-122">Designed to be overridden in a custom task class (derived from ToolTask) to return a set of new or altered environment variables to create the execution context of the associated tool.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9243-123">환경 변수 집합을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-123">Returns a set of environment variables.</span>
          </span>
          <span data-ttu-id="e9243-124">각 사전 키는 재정의할 환경 변수의 이름이고, 사전 값은 해당 환경 변수에 대해 설정할 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-124">Each dictionary key is the name of the environment variable to override and the dictionary value is the value to set for that environment variable.</span>
          </span>
          <span data-ttu-id="e9243-125">EnvironmentOverride의 기본 구현에서는 null을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-125">The default implementation of EnvironmentOverride returns null.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9243-126">ExecuteTool 메서드 도구 실행 되는 프로세스의 StartInfo에 이러한 환경 변수를 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9243-126">The ExecuteTool method passes these environment variables to the StartInfo of the process in which the tool executes.</span></span> <span data-ttu-id="e9243-127">EnvironmentOverride 사전에 없는 모든 환경 변수 ExecuteTool 메서드가 실행 하는 과정에서 상속 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e9243-127">Any environment variables not included in the EnvironmentOverride dictionary are inherited from the process in which the ExecuteTool method executes.</span></span>  
  
   
  
## Examples  
  
```csharp  
using System;  
using Microsoft.Build.Utilities;  
using System.Collections.Specialized;  
  
/// <summary>  
/// CustomToolTask overrides the EnvironmentOverride property of ToolTask to add a directory  
/// to the Path environment variable of the process being executed  
/// </summary>  
abstract class CustomToolTask : ToolTask  
{  
      protected override StringDictionary EnvironmentOverride  
      {  
            get  
            {  
                  string newPath = Environment.GetEnvironmentVariable("Path", EnvironmentVariableTarget.Process) + @";C:\MyDirectory";  
                  StringDictionary result = new StringDictionary();  
                  result.Add("Path", newPath);  
                  return result;  
            }  
      }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvironmentVariables">
      <MemberSignature Language="C#" Value="public string[] EnvironmentVariables { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] EnvironmentVariables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.EnvironmentVariables" />
      <MemberSignature Language="VB.NET" Value="Public Property EnvironmentVariables As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ EnvironmentVariables { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9243-128">선택적으로 재정의하는 일반 환경 블록과 함께 생성된 실행 파일에 전달되어야 하는 등호로 구분된 환경 변수 쌍의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-128">Array of equals-separated pairs of environment variables that should be passed to the spawned executable, in addition to (or selectively overriding) the regular environment block.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9243-129">대신 사용 하 여이 EnvironmentOverride는 StringDictionary 생긴다는 대로 설정할 수 없습니다 MSBuild 프로젝트에서.</span><span class="sxs-lookup"><span data-stu-id="e9243-129">Using this instead of EnvironmentOverride as that takes a StringDictionary, which cannot be set from an MSBuild project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public override bool Execute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Execute() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.Execute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Execute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Execute();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ITask.Execute</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9243-130">지정된 작업 매개 변수를 사용하여 실행 파일을 실행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-130">Runs the exectuable file with the specified task parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9243-131">작업이 실행되면 <see langword="true" />이고, 실행되지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-131">
              <see langword="true" /> if the task runs successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteTool">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteTool (string pathToTool, string responseFileCommands, string commandLineCommands);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteTool(string pathToTool, string responseFileCommands, string commandLineCommands) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.ExecuteTool(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteTool (pathToTool As String, responseFileCommands As String, commandLineCommands As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteTool(System::String ^ pathToTool, System::String ^ responseFileCommands, System::String ^ commandLineCommands);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pathToTool" Type="System.String" />
        <Parameter Name="responseFileCommands" Type="System.String" />
        <Parameter Name="commandLineCommands" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pathToTool">
          <span data-ttu-id="e9243-132">실행 파일의 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-132">The path to the executable file.</span>
          </span>
        </param>
        <param name="responseFileCommands">
          <span data-ttu-id="e9243-133">.rsp 파일에 배치할 명령줄 인수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-133">The command line arguments to place in the .rsp file.</span>
          </span>
        </param>
        <param name="commandLineCommands">
          <span data-ttu-id="e9243-134">실행 파일에 직접 전달할 명령줄 인수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-134">The command line arguments to pass directly to the executable file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9243-135">임시 지시(.rsp) 파일을 만들고 실행 파일을 실행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-135">Creates a temporoary response (.rsp) file and runs the executable file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9243-136">실행 파일의 반환된 종료 코드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-136">The returned exit code of the executable file.</span>
          </span>
          <span data-ttu-id="e9243-137">작업이 오류를 로그했지만 실행 파일이 종료 코드 0을 반환한 경우 이 메서드가 -1을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-137">If the task logged errors, but the executable returned an exit code of 0, this method returns -1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitCode">
      <MemberSignature Language="C#" Value="public int ExitCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ExitCode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.ExitCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExitCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ExitCode { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.Build.Framework.Output</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9243-138">실행 파일의 반환된 종료 코드를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-138">Gets the returned exit code of the executable file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9243-139">실행 파일의 반환된 종료 코드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-139">The returned exit code of the executable file.</span>
          </span>
          <span data-ttu-id="e9243-140">작업이 오류를 로그했지만 실행 파일이 종료 코드 0을 반환한 경우 이 메서드가 -1을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-140">If the task logged errors, but the executable returned an exit code of 0, this method returns -1.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCommandLineCommands">
      <MemberSignature Language="C#" Value="protected virtual string GenerateCommandLineCommands ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GenerateCommandLineCommands() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.GenerateCommandLineCommands" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GenerateCommandLineCommands () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GenerateCommandLineCommands();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9243-141">실행 파일에 직접 전달할 명령줄 인수를 포함하는 문자열 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-141">Returns a string value containing the command line arguments to pass directly to the executable file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9243-142">실행 파일에 직접 전달할 명령줄 인수를 포함하는 문자열 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-142">A string value containing the command line arguments to pass directly to the executable file.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9243-143">후에이 메서드는 <xref:Microsoft.Build.Utilities.ToolTask.ValidateParameters%2A> 및 <xref:Microsoft.Build.Utilities.ToolTask.SkipTaskExecution%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e9243-143">This method is called after <xref:Microsoft.Build.Utilities.ToolTask.ValidateParameters%2A> and <xref:Microsoft.Build.Utilities.ToolTask.SkipTaskExecution%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9243-144">다음 예제에서는 한 <xref:Microsoft.Build.Utilities.ToolTask> 실행 하는 [Ilasm.exe (IL 어셈블러)](~/docs/framework/tools/ilasm-exe-il-assembler.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e9243-144">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span> <span data-ttu-id="e9243-145"><xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, 및 <xref:Microsoft.Build.Utilities.TaskLoggingHelper> 클래스는 작업을 실행 하는 데 필요한 정보를 생성 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e9243-145">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]
 [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateFullPathToTool">
      <MemberSignature Language="C#" Value="protected abstract string GenerateFullPathToTool ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GenerateFullPathToTool() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.GenerateFullPathToTool" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GenerateFullPathToTool () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ GenerateFullPathToTool();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9243-146">실행 파일의 정규화된 경로를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-146">Returns the fully qualified path to the executable file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9243-147">실행 파일의 정규화된 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-147">The fully qualified path to the executable file.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9243-148">값을 반환 하는이 메서드는 <xref:Microsoft.Build.Utilities.ToolTask.ToolName%2A> 도구는 시스템 경로에 있는 경우 속성을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9243-148">This method returns the value of the <xref:Microsoft.Build.Utilities.ToolTask.ToolName%2A> property if the tool is located in the system path.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9243-149">다음 예제에서는 한 <xref:Microsoft.Build.Utilities.ToolTask> 실행 하는 [Ilasm.exe (IL 어셈블러)](~/docs/framework/tools/ilasm-exe-il-assembler.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e9243-149">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span> <span data-ttu-id="e9243-150"><xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, 및 <xref:Microsoft.Build.Utilities.TaskLoggingHelper> 클래스는 작업을 실행 하는 데 필요한 정보를 생성 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e9243-150">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]
 [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateResponseFileCommands">
      <MemberSignature Language="C#" Value="protected virtual string GenerateResponseFileCommands ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GenerateResponseFileCommands() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.GenerateResponseFileCommands" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GenerateResponseFileCommands () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GenerateResponseFileCommands();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9243-151">실행 파일을 실행하기 전에 지시(.rsp) 파일에 추가할 명령줄 인수를 포함하는 문자열 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-151">Returns a string value containing the command line arguments to add to the response (.rsp) file before running the executable file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9243-152">실행 파일을 실행하기 전에 지시(.rsp) 파일에 추가할 명령줄 인수를 포함하는 문자열 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-152">a string value containing the command line arguments to add to the response (.rsp) file before running the executable file.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9243-153">후에이 메서드는 <xref:Microsoft.Build.Utilities.ToolTask.ValidateParameters%2A> 및 <xref:Microsoft.Build.Utilities.ToolTask.SkipTaskExecution%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e9243-153">This method is called after <xref:Microsoft.Build.Utilities.ToolTask.ValidateParameters%2A> and <xref:Microsoft.Build.Utilities.ToolTask.SkipTaskExecution%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProcessStartInfo">
      <MemberSignature Language="C#" Value="protected System.Diagnostics.ProcessStartInfo GetProcessStartInfo (string pathToTool, string commandLineCommands, string responseFileSwitch);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Diagnostics.ProcessStartInfo GetProcessStartInfo(string pathToTool, string commandLineCommands, string responseFileSwitch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.GetProcessStartInfo(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetProcessStartInfo (pathToTool As String, commandLineCommands As String, responseFileSwitch As String) As ProcessStartInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Diagnostics::ProcessStartInfo ^ GetProcessStartInfo(System::String ^ pathToTool, System::String ^ commandLineCommands, System::String ^ responseFileSwitch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.ProcessStartInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pathToTool" Type="System.String" />
        <Parameter Name="commandLineCommands" Type="System.String" />
        <Parameter Name="responseFileSwitch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pathToTool">
          <span data-ttu-id="e9243-154">도구에 대한 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-154">The path to the tool.</span>
          </span>
        </param>
        <param name="commandLineCommands">
          <span data-ttu-id="e9243-155">명령줄 명령입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-155">The command line commands.</span>
          </span>
        </param>
        <param name="responseFileSwitch">
          <span data-ttu-id="e9243-156">응답 파일 스위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-156">The response file switch.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9243-157">도구를 실행하는 프로세스를 생성하는 데 필요한 정보를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-157">Initializes the information required to spawn the process executing the tool.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9243-158">프로세스를 시작하는 데 필요한 정보입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-158">The information required to start the process.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResponseFileSwitch">
      <MemberSignature Language="C#" Value="protected virtual string GetResponseFileSwitch (string responseFilePath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetResponseFileSwitch(string responseFilePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.GetResponseFileSwitch(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetResponseFileSwitch (responseFilePath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetResponseFileSwitch(System::String ^ responseFilePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="responseFilePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="responseFilePath">
          <span data-ttu-id="e9243-159">임시 .rsp 파일에 대한 전체 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-159">The full path to the temporary .rsp file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9243-160">지시(.rsp) 파일을 지정하기 위해 실행 파일에서 사용되는 명령줄 스위치를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-160">Returns the command line switch used by the executable file to specifiy a response (.rsp) file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9243-161">지시(.rsp) 파일을 지정하기 위해 실행 파일에서 사용되는 명령줄 스위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-161">The command line switch used by the executable file to specifiy a response (.rsp) file.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9243-162">이 메서드는 경우에 호출 <xref:Microsoft.Build.Utilities.ToolTask.GenerateResponseFileCommands%2A> 비어 있지 않은 문자열 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9243-162">This method is only called if <xref:Microsoft.Build.Utilities.ToolTask.GenerateResponseFileCommands%2A> returns a non-empty string value.</span></span>  
  
 <span data-ttu-id="e9243-163">후에이 메서드는 <xref:Microsoft.Build.Utilities.ToolTask.ValidateParameters%2A>, <xref:Microsoft.Build.Utilities.ToolTask.SkipTaskExecution%2A> 및 <xref:Microsoft.Build.Utilities.ToolTask.GenerateResponseFileCommands%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e9243-163">This method is called after <xref:Microsoft.Build.Utilities.ToolTask.ValidateParameters%2A>, <xref:Microsoft.Build.Utilities.ToolTask.SkipTaskExecution%2A> and <xref:Microsoft.Build.Utilities.ToolTask.GenerateResponseFileCommands%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkingDirectory">
      <MemberSignature Language="C#" Value="protected virtual string GetWorkingDirectory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetWorkingDirectory() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.GetWorkingDirectory" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWorkingDirectory () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetWorkingDirectory();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9243-164">실행 파일을 실행하는 디렉터리를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-164">Returns the directory in which to run the executable file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9243-165">실행 파일을 실행할 디렉터리이거나, 현재 디렉터리에서 실행 파일을 실행해야 하는 경우 null 참조(Visual Basic의 <see langword="Nothing" />)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-165">The directory in which to run the executable file, or a null reference (<see langword="Nothing" /> in Visual Basic) if the executable file should be run in the current directory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9243-166">이것이 속성 보다는 메서드가 두 속성을 갖도록 혼동 하 고 파생 된 클래스 (예: Exec) 공용 WorkingDirectory 속성을 노출 하도록 선택할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9243-166">This is a method rather than a property so that derived classes (like Exec) can choose to expose a public WorkingDirectory property, and it would be confusing to have two properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleTaskExecutionErrors">
      <MemberSignature Language="C#" Value="protected virtual bool HandleTaskExecutionErrors ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool HandleTaskExecutionErrors() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.HandleTaskExecutionErrors" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HandleTaskExecutionErrors () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool HandleTaskExecutionErrors();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9243-167">실행 파일에서 발생하는 실행 오류를 처리합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-167">Handles execution errors raised by the executable file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9243-168">메서드가 실행되면 <see langword="true" />이고, 실행되지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-168">
              <see langword="true" /> if the method runs successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9243-169">이 메서드는 실행 파일에는 0이 아닌 종료 코드를 반환 하는 경우에 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e9243-169">This method is called only if the executable file returns a non-zero exit code.</span></span>  
  
 <span data-ttu-id="e9243-170">이 메서드의 반환 값은 작업의 반환 값으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e9243-170">The return value of this method is used as the return value of the task.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasLoggedErrors">
      <MemberSignature Language="C#" Value="protected virtual bool HasLoggedErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasLoggedErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.HasLoggedErrors" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property HasLoggedErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool HasLoggedErrors { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9243-171">이 ToolTask에서 오류를 기록했는지 여부를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-171">Whether this ToolTask has logged any errors</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeHostObject">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.Build.Utilities.HostObjectInitializationStatus InitializeHostObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype Microsoft.Build.Utilities.HostObjectInitializationStatus InitializeHostObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.InitializeHostObject" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function InitializeHostObject () As HostObjectInitializationStatus" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Microsoft::Build::Utilities::HostObjectInitializationStatus InitializeHostObject();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Utilities.HostObjectInitializationStatus</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9243-172">작업의 호스트 개체를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-172">Initializes the host object of the task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9243-173">호스트 개체의 <see cref="T:Microsoft.Build.Utilities.HostObjectInitializationStatus" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-173">The <see cref="T:Microsoft.Build.Utilities.HostObjectInitializationStatus" /> of the host object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogEventsFromTextOutput">
      <MemberSignature Language="C#" Value="protected virtual void LogEventsFromTextOutput (string singleLine, Microsoft.Build.Framework.MessageImportance messageImportance);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LogEventsFromTextOutput(string singleLine, valuetype Microsoft.Build.Framework.MessageImportance messageImportance) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.LogEventsFromTextOutput(System.String,Microsoft.Build.Framework.MessageImportance)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LogEventsFromTextOutput(System::String ^ singleLine, Microsoft::Build::Framework::MessageImportance messageImportance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="singleLine" Type="System.String" />
        <Parameter Name="messageImportance" Type="Microsoft.Build.Framework.MessageImportance" />
      </Parameters>
      <Docs>
        <param name="singleLine">
          <span data-ttu-id="e9243-174">구문 분석할 메서드의 한 줄 텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-174">A single line of text for the method to parse.</span>
          </span>
        </param>
        <param name="messageImportance">
          <span data-ttu-id="e9243-175">메시지를 기록할 중요도 수준을 나타내는 <see cref="T:Microsoft.Build.Framework.MessageImportance" />의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-175">A value of <see cref="T:Microsoft.Build.Framework.MessageImportance" /> that indicates the importance level with which to log the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9243-176">한 줄 텍스트를 구문 분석하여 정규형 형식으로 오류 또는 경고를 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-176">Parses a single line of text to identify any errors or warnings in canonical format.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogPathToTool">
      <MemberSignature Language="C#" Value="protected virtual void LogPathToTool (string toolName, string pathToTool);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LogPathToTool(string toolName, string pathToTool) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.LogPathToTool(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LogPathToTool (toolName As String, pathToTool As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LogPathToTool(System::String ^ toolName, System::String ^ pathToTool);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toolName" Type="System.String" />
        <Parameter Name="pathToTool" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="toolName">
          <span data-ttu-id="e9243-177">실행 파일 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-177">The executable file name.</span>
          </span>
        </param>
        <param name="pathToTool">
          <span data-ttu-id="e9243-178">실행 파일의 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-178">The path to the executable file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9243-179">등록된 모든 로거에 도구 이름 및 경로를 기록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-179">Logs the tool name and path to all registered loggers.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogStandardErrorAsError">
      <MemberSignature Language="C#" Value="public bool LogStandardErrorAsError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LogStandardErrorAsError" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.LogStandardErrorAsError" />
      <MemberSignature Language="VB.NET" Value="Public Property LogStandardErrorAsError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LogStandardErrorAsError { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9243-180">표준 오류 스트림에서 받은 모든 메시지가 오류로 기록되어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-180">Should ALL messages received on the standard error stream be logged as errors.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogToolCommand">
      <MemberSignature Language="C#" Value="protected virtual void LogToolCommand (string message);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LogToolCommand(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.LogToolCommand(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LogToolCommand (message As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LogToolCommand(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="e9243-181">로거를 제공할 설명 메시지이며 일반적으로 명령줄 및 스위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-181">A descriptive message to provide loggers, usually the command line and switches.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9243-182">등록된 모든 로거에 실행의 시작 위치를 기록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-182">Logs the starting point of the run to all registered loggers.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseFileEncoding">
      <MemberSignature Language="C#" Value="protected virtual System.Text.Encoding ResponseFileEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding ResponseFileEncoding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.ResponseFileEncoding" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ResponseFileEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Text::Encoding ^ ResponseFileEncoding { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9243-183">지시 파일의 <see cref="T:System.Text.Encoding" />을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-183">Gets the <see cref="T:System.Text.Encoding" /> of the response file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9243-184">지시 파일의 <see cref="T:System.Text.Encoding" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-184">The <see cref="T:System.Text.Encoding" /> of the response file.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9243-185">인코딩이 <xref:System.Text.Encoding.UTF8%2A> 기본적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9243-185">The encoding is <xref:System.Text.Encoding.UTF8%2A> by default.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseFileEscape">
      <MemberSignature Language="C#" Value="protected virtual string ResponseFileEscape (string responseString);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string ResponseFileEscape(string responseString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.ResponseFileEscape(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ResponseFileEscape (responseString As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ ResponseFileEscape(System::String ^ responseString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="responseString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="responseString">
          <span data-ttu-id="e9243-186">응답 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-186">The response string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9243-187">재정의 가능한 메서드를 사용 하 여 응답 파일의 콘텐츠를 이스케이프 해야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-187">Overridable method to escape the content of the response file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9243-188">응답 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-188">Returns the response string.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipTaskExecution">
      <MemberSignature Language="C#" Value="protected virtual bool SkipTaskExecution ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool SkipTaskExecution() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.SkipTaskExecution" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SkipTaskExecution () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool SkipTaskExecution();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9243-189">작업 실행을 건너뛸지 여부를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-189">Indicates whether task execution should be skipped.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9243-190">작업 실행을 건너뛰려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-190">
              <see langword="true" /> to skip task execution; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9243-191">후에이 메서드는 <xref:Microsoft.Build.Utilities.ToolTask.ValidateParameters%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e9243-191">This method is called after <xref:Microsoft.Build.Utilities.ToolTask.ValidateParameters%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardErrorEncoding">
      <MemberSignature Language="C#" Value="protected virtual System.Text.Encoding StandardErrorEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding StandardErrorEncoding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.StandardErrorEncoding" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property StandardErrorEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Text::Encoding ^ StandardErrorEncoding { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9243-192">작업의 표준 오류 스트림에 대한 <see cref="T:System.Text.Encoding" />을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-192">Gets the <see cref="T:System.Text.Encoding" /> of the standard error stream of the task.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9243-193">지시 파일의 <see cref="T:System.Text.Encoding" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-193">The <see cref="T:System.Text.Encoding" /> of the response file.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9243-194">콘솔 기반 출력 기본적으로 현재 시스템 OEM 코드 페이지를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="e9243-194">Console-based output uses the current system OEM code page by default.</span></span> <span data-ttu-id="e9243-195">사용 하지 Console.OutputEncoding 여기 프로세스 실행 우리의 콘솔 창으로 수행할 작업을 가진 실제로 (고도 통해 Console.OutputEncoding MSBuild를 호스팅하는 실행 중인 응용 프로그램 콘솔 응용 프로그램이 아닌 경우 OEM 코드 페이지를 반환 하지 않습니다) 이후 note 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9243-195">Note that we should not use Console.OutputEncoding here since processes we run don't really have much to do with our console window (and also Console.OutputEncoding doesn't return the OEM code page if the running application that hosts MSBuild is not a console application).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardErrorImportance">
      <MemberSignature Language="C#" Value="public string StandardErrorImportance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StandardErrorImportance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.StandardErrorImportance" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardErrorImportance As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StandardErrorImportance { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9243-196">작업 매개 변수: 표준 오류 스트림의 텍스트를 기록할 때 적용할 중요도입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-196">Task Parameter: Importance with which to log text from the standard error stream.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardErrorImportanceToUse">
      <MemberSignature Language="C#" Value="protected Microsoft.Build.Framework.MessageImportance StandardErrorImportanceToUse { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.MessageImportance StandardErrorImportanceToUse" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.StandardErrorImportanceToUse" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property StandardErrorImportanceToUse As MessageImportance" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Microsoft::Build::Framework::MessageImportance StandardErrorImportanceToUse { Microsoft::Build::Framework::MessageImportance get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.MessageImportance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9243-197">표준 오류 메시지가 기록될 실제 중요도를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-197">Gets the actual importance at which standard error messages will be logged.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9243-198">표준 오류 메시지가 기록될 실제 중요도를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-198">Returns the actual importance at which standard error messages will be logged.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardErrorLoggingImportance">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.Build.Framework.MessageImportance StandardErrorLoggingImportance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.MessageImportance StandardErrorLoggingImportance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.StandardErrorLoggingImportance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property StandardErrorLoggingImportance As MessageImportance" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Microsoft::Build::Framework::MessageImportance StandardErrorLoggingImportance { Microsoft::Build::Framework::MessageImportance get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.MessageImportance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9243-199">오류를 기록할 때 사용할 <see cref="T:Microsoft.Build.Framework.MessageImportance" />를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-199">Gets the <see cref="T:Microsoft.Build.Framework.MessageImportance" /> with which to log errors.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9243-200">오류를 기록할 때 사용할 <see cref="T:Microsoft.Build.Framework.MessageImportance" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-200">The <see cref="T:Microsoft.Build.Framework.MessageImportance" /> with which to log errors.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardOutputEncoding">
      <MemberSignature Language="C#" Value="protected virtual System.Text.Encoding StandardOutputEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding StandardOutputEncoding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.StandardOutputEncoding" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property StandardOutputEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Text::Encoding ^ StandardOutputEncoding { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9243-201">작업의 표준 출력 스트림에 대한 <see cref="T:System.Text.Encoding" />을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-201">Gets the <see cref="T:System.Text.Encoding" /> of the standard output stream of the task.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9243-202">지시 파일의 <see cref="T:System.Text.Encoding" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-202">The <see cref="T:System.Text.Encoding" /> of the response file.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9243-203">콘솔 기반 출력 기본적으로 현재 시스템 OEM 코드 페이지를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="e9243-203">Console-based output uses the current system OEM code page by default.</span></span> <span data-ttu-id="e9243-204">사용 하지 Console.OutputEncoding 여기 프로세스 실행 우리의 콘솔 창으로 수행할 작업을 가진 실제로 (고도 통해 Console.OutputEncoding MSBuild를 호스팅하는 실행 중인 응용 프로그램 콘솔 응용 프로그램이 아닌 경우 OEM 코드 페이지를 반환 하지 않습니다) 이후 note 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9243-204">Note that we should not use Console.OutputEncoding here since processes we run don't really have much to do with our console window (and also Console.OutputEncoding doesn't return the OEM code page if the running application that hosts MSBuild is not a console application).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardOutputImportance">
      <MemberSignature Language="C#" Value="public string StandardOutputImportance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StandardOutputImportance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.StandardOutputImportance" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardOutputImportance As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StandardOutputImportance { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9243-205">작업 매개 변수: 표준 출력 스트림의 텍스트를 기록할 때 적용할 중요도입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-205">Task Parameter: Importance with which to log text from the standard out stream.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardOutputImportanceToUse">
      <MemberSignature Language="C#" Value="protected Microsoft.Build.Framework.MessageImportance StandardOutputImportanceToUse { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.MessageImportance StandardOutputImportanceToUse" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.StandardOutputImportanceToUse" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property StandardOutputImportanceToUse As MessageImportance" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Microsoft::Build::Framework::MessageImportance StandardOutputImportanceToUse { Microsoft::Build::Framework::MessageImportance get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.MessageImportance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9243-206">표준 출력 메시지가 기록될 실제 중요도를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-206">Gets the actual importance at which standard out messages will be logged.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9243-207">표준 출력 메시지가 기록될 실제 중요도를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-207">Returns the actual importance at which standard out messages will be logged.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardOutputLoggingImportance">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.Build.Framework.MessageImportance StandardOutputLoggingImportance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.MessageImportance StandardOutputLoggingImportance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.StandardOutputLoggingImportance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property StandardOutputLoggingImportance As MessageImportance" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Microsoft::Build::Framework::MessageImportance StandardOutputLoggingImportance { Microsoft::Build::Framework::MessageImportance get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.MessageImportance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9243-208">오류를 기록할 때 사용할 <see cref="T:Microsoft.Build.Framework.MessageImportance" />를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-208">Gets the <see cref="T:Microsoft.Build.Framework.MessageImportance" /> with which to log errors.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9243-209">오류를 기록할 때 사용할 <see cref="T:Microsoft.Build.Framework.MessageImportance" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-209">The <see cref="T:Microsoft.Build.Framework.MessageImportance" /> with which to log errors.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskProcessTerminationTimeout">
      <MemberSignature Language="C#" Value="protected int TaskProcessTerminationTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TaskProcessTerminationTimeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.TaskProcessTerminationTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Property TaskProcessTerminationTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int TaskProcessTerminationTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9243-210">작업을 강제 종료하기 전에 작업이 종료될 때까지 기다리는 시간 제한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-210">A timeout to wait for a task to terminate before killing it.</span>
          </span>
          <span data-ttu-id="e9243-211">단위는 밀리초입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-211">In milliseconds.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public virtual int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Timeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9243-212">작업 실행 파일이 종료되는 경과 시간을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-212">Gets or sets the amount of time after which the task executable is terminated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9243-213">제한 시간(밀리초)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-213">The time-out length, in milliseconds.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolCanceled">
      <MemberSignature Language="C#" Value="protected System.Threading.ManualResetEvent ToolCanceled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.ManualResetEvent ToolCanceled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.ToolCanceled" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ToolCanceled As ManualResetEvent" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Threading::ManualResetEvent ^ ToolCanceled { System::Threading::ManualResetEvent ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ManualResetEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9243-214">도구가 취소된 경우 신호를 보내는 데 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-214">Used to signal when a tool has been cancelled.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolExe">
      <MemberSignature Language="C#" Value="public virtual string ToolExe { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolExe" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.ToolExe" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ToolExe As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ToolExe { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9243-215">프로젝트에서 작업의 ToolName을 재정의하기 위해 이 속성을 설정할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-215">Projects may set this to override a task's ToolName.</span>
          </span>
          <span data-ttu-id="e9243-216">ToolName 재정의를 방지하기 위해 작업에서 이 속성을 재정의할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-216">Tasks may override this to prevent that.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolName">
      <MemberSignature Language="C#" Value="protected abstract string ToolName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.ToolName" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride ReadOnly Property ToolName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract property System::String ^ ToolName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9243-217">실행할 실행 파일의 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-217">Gets the name of the executable file to run.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9243-218">실행할 실행 파일의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-218">The name of the executable file to run.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e9243-219">다음 예제에서는 한 <xref:Microsoft.Build.Utilities.ToolTask> 실행 하는 [Ilasm.exe (IL 어셈블러)](~/docs/framework/tools/ilasm-exe-il-assembler.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e9243-219">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span> <span data-ttu-id="e9243-220"><xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, 및 <xref:Microsoft.Build.Utilities.TaskLoggingHelper> 클래스는 작업을 실행 하는 데 필요한 정보를 생성 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e9243-220">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]
 [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolPath">
      <MemberSignature Language="C#" Value="public string ToolPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.ToolPath" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9243-221">실행할 실행 파일의 경로를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-221">Gets or sets the path of the executable file to run.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9243-222">실행할 파일의 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-222">The path of the file to run.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseCommandProcessor">
      <MemberSignature Language="C#" Value="public bool UseCommandProcessor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCommandProcessor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.UseCommandProcessor" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCommandProcessor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseCommandProcessor { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9243-223">도구 작업에서 명령줄에 대한 배치 파일을 만들고 명령을 직접 실행하는 대신 명령 처리기를 사용하여 해당 배치 파일을 실행할지 여부를 지정하는 스위치를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-223">Gets or sets a switch that specifies whether the tool task will create a batch file for the command-line and execute that using the command-processor, rather than executing the command directly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9243-224">true이면 도구 작업에서 명령줄에 대한 배치 파일을 만들고 명령 처리기를 사용하여 해당 배치 파일을 실행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-224">If true, the tool task will create a batch file for the command-line and execute that using the command-processor.</span>
          </span>
          <span data-ttu-id="e9243-225">false이면 도구 작업에서 명령을 직접 실행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-225">If false the tool task will execute the command directly.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateParameters">
      <MemberSignature Language="C#" Value="protected internal virtual bool ValidateParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ValidateParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.ValidateParameters" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ValidateParameters () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ValidateParameters();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9243-226">모든 작업 매개 변수가 올바른지 여부를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-226">Indicates whether all task paratmeters are valid.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9243-227">모든 작업 매개 변수가 올바르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-227">
              <see langword="true" /> if all task parameters are valid; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="YieldDuringToolExecution">
      <MemberSignature Language="C#" Value="public bool YieldDuringToolExecution { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool YieldDuringToolExecution" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.YieldDuringToolExecution" />
      <MemberSignature Language="VB.NET" Value="Public Property YieldDuringToolExecution As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool YieldDuringToolExecution { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9243-228">도구 실행 중에 작업이 노드를 반환할지 여부를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-228">Indicates if the task will yield the node during tool execution.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9243-229">도구 실행 중에 작업이 노드를 반환하면 true입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9243-229">True when the task will yield the node during tool execution.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>