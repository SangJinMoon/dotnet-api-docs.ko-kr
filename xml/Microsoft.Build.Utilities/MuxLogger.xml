<Type Name="MuxLogger" FullName="Microsoft.Build.Utilities.MuxLogger">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b9422600ac60f61f42f9b1ac680f9a0a9964b2d4" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52592170" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MuxLogger : Microsoft.Build.Framework.INodeLogger" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MuxLogger extends System.Object implements class Microsoft.Build.Framework.ILogger, class Microsoft.Build.Framework.INodeLogger" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Utilities.MuxLogger" />
  <TypeSignature Language="VB.NET" Value="Public Class MuxLogger&#xA;Implements INodeLogger" />
  <TypeSignature Language="C++ CLI" Value="public ref class MuxLogger : Microsoft::Build::Framework::INodeLogger" />
  <TypeSignature Language="F#" Value="type MuxLogger = class&#xA;    interface INodeLogger&#xA;    interface ILogger" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.ILogger</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.INodeLogger</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="85937-101">멀티플렉스 로거를 표현한다</span>
      <span class="sxs-lookup">
        <span data-stu-id="85937-101">Represents a multiplexing logger.</span>
      </span>
      <span data-ttu-id="85937-102">이 로거의 목적은 빌드하는 동안 여러 로거를 등록하고 등록 취소하기 위한 용도입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="85937-102">The purpose of this logger is to register and unregister multiple loggers during the build.</span>
      </span>
      <span data-ttu-id="85937-103">각 프로젝트 시스템의 빌드 요청에 대해 로거를 등록하거나 등록 취소하는 Visual Studio IDE 시나리오를 지원합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="85937-103">Supports the Visual Studio IDE scenario in which loggers are registered and unregistered for each project system's build request.</span>
      </span>
      <span data-ttu-id="85937-104">하나의 실제 빌드 각각 고유한 거 여러 논리 빌드에 있을 수 있습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="85937-104">One physical build can have multiple logical builds, each with its own set of loggers.</span>
      </span>
      <span data-ttu-id="85937-105">
        <see langword="MuxLogger" />는 정규식 중앙 /l 스타일 로거로서 빌드 관리자 자체를 등록합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="85937-105">The <see langword="MuxLogger" /> registers itself with the build manager as a regular central /l style logger.</span>
      </span>
      <span data-ttu-id="85937-106">빌드 관리자로부터 메시지를 수신하고 원래 경로의 메시지의 논리 빌드에 근거하여 올바른 로거를 작성합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="85937-106">It receives messages from the build manager and routes them to the correct logger, based on the logical build that the message came from.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85937-107">`MuxLogger` 일반적으로 다음과 같이 작동 합니다.</span><span class="sxs-lookup"><span data-stu-id="85937-107">The `MuxLogger` generally functions as follows:</span></span>  
  
-   <span data-ttu-id="85937-108">`MuxLogger` 빌드 관리자를 시작 빌드 시작 부분에 등록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="85937-108">The `MuxLogger` is registered at the beginning of the build manager's Begin build.</span></span>  
  
     <span data-ttu-id="85937-109">빌드 관리자 빌드를 시작 하기 전에 등록 된 모든로 거와 동일한 시간에 빌드가 시작 이벤트를 가져올는 `MuxLogger`합니다.</span><span class="sxs-lookup"><span data-stu-id="85937-109">Any loggers registered before the build manager starts the build get the build-started event at the same time as the `MuxLogger`.</span></span>  
  
     <span data-ttu-id="85937-110">빌드 관리자에는 빌드가 시작 된 후 등록 된 모든로 거에 합성 된 빌드가 시작 이벤트를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="85937-110">Any loggers registered after the build manager starts the build get a synthesized build-started event.</span></span> <span data-ttu-id="85937-111">빌드 시작 이벤트의 타임 스탬프는 이벤트가 생성 될 때 이벤트를 캐시에 등록 된로 거에 잘못 된 빌드 시간 제공은 결정 되므로 이벤트를 캐시할 수 없습니다는 `MuxLogger`합니다.</span><span class="sxs-lookup"><span data-stu-id="85937-111">The event cannot be cached because the timestamp of the build-started event is determined when the event is created, and caching the event would give incorrect build times in the loggers registered to the `MuxLogger`.</span></span>  
  
-   <span data-ttu-id="85937-112">`MuxLogger` 빌드 관리자가 초기화 됩니다</span><span class="sxs-lookup"><span data-stu-id="85937-112">The `MuxLogger` is initialized by the build manager</span></span>  
  
     <span data-ttu-id="85937-113">`MuxLogger` 빌드 관리자 로부터 이벤트 소스에서 모든 이벤트를 수신 하 고 등록 된로 거에 이벤트를 올바르게 라우팅합니다.</span><span class="sxs-lookup"><span data-stu-id="85937-113">The `MuxLogger` listens to all events on the event source from the build manager and routes events correctly to the registered loggers.</span></span>  
  
-   <span data-ttu-id="85937-114">`MuxLogger` 최종 빌드에 빌드가 완료 되 면 종료 됩니다.</span><span class="sxs-lookup"><span data-stu-id="85937-114">The `MuxLogger` is shutdown when the build is finished in end build.</span></span> <span data-ttu-id="85937-115">이때 연결 된 모든로 거 등록 취소 합니다.</span><span class="sxs-lookup"><span data-stu-id="85937-115">At this time, it unregisters any loggers attached to it.</span></span>  
  
-   <span data-ttu-id="85937-116">`MuxLogger` 각로 거에 대 한 첫 번째 프로젝트 시작 이벤트에 대 한 프로젝트 완료 이벤트는 발생 하는 경우 빌드 완료 이벤트를 기록 합니다.</span><span class="sxs-lookup"><span data-stu-id="85937-116">The `MuxLogger` logs the build-finished event when the project-finished event for the first project-started event is seen for each logger.</span></span>  
  
 <span data-ttu-id="85937-117">`MuxLogger` 다음과 같이 거를 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="85937-117">The `MuxLogger` registers loggers in the following way:</span></span>  
  
1.  <span data-ttu-id="85937-118">로 거에 전달 되는 `MuxLogger.RegisterLogger` 해당로 거로 메시지를 라우팅하는 데 사용 하는 제출 ID 사용 하 여 메서드.</span><span class="sxs-lookup"><span data-stu-id="85937-118">The logger is passed to the `MuxLogger.RegisterLogger` method with a submission ID that is used to route a message to that logger.</span></span>  
  
2.  <span data-ttu-id="85937-119">합니다 `MuxLogger` 에 거를 등록 합니다 `MuxLogger` 이벤트 소스입니다.</span><span class="sxs-lookup"><span data-stu-id="85937-119">The `MuxLogger` registers the logger to the `MuxLogger` event source.</span></span>  
  
3.  <span data-ttu-id="85937-120">빌드 시작 이벤트가 이미 기록 되었는지, 하는 경우는 `MuxLogger` 새 빌드가 시작 이벤트를 만들어로 거의 이벤트 소스에 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="85937-120">If the build-started event has already been logged, the `MuxLogger` creates a new build-started event and sends it to the logger's event source.</span></span>  
  
 <span data-ttu-id="85937-121">`MuxLogger` 다음과 같이 거를 등록 취소 합니다.</span><span class="sxs-lookup"><span data-stu-id="85937-121">The `MuxLogger` unregisters loggers in the following way:</span></span>  
  
1.  <span data-ttu-id="85937-122">빌드 전송이 완료 되 면는 `MuxLogger.UnregisterLogger` 전송 ID로 거에 대 한 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="85937-122">When a build submission is completed, the `MuxLogger.UnregisterLogger` method is called with the submission ID for the logger.</span></span>  
  
2.  <span data-ttu-id="85937-123">`MuxLogger` 제출 ID에 대 한 프로젝트 완료 이벤트의 성공 상태를 조회 하 고로 거에 빌드 완료 이벤트를 기록 합니다.</span><span class="sxs-lookup"><span data-stu-id="85937-123">The `MuxLogger` looks up the success state of the project-finished event for the submission ID and logs a build-finished event to the logger.</span></span>  
  
3.  <span data-ttu-id="85937-124">`MuxLogger` 이벤트 소스를 정리 합니다.</span><span class="sxs-lookup"><span data-stu-id="85937-124">The `MuxLogger` cleans up the event source.</span></span>  
  
     <span data-ttu-id="85937-125">스레드가 아닌 로깅 스레드와 동기화 문제를 등록 취소를 제공 한다는 참고 등록 취소 이벤트를 기록 하는 동안 호출 되는 경우에 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="85937-125">Note that the unregister comes from a thread other than the logging thread and a synchronization issue could occur if unregister is called while events are being logged.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MuxLogger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MuxLogger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85937-126">멀티플렉싱 로거의 새 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-126">Creates a new instance of the multiplexing logger.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Initialize">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="85937-127">
            <see langword="MuxLogger" /> 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-127">Initializes the <see langword="MuxLogger" /> instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (Microsoft.Build.Framework.IEventSource eventSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class Microsoft.Build.Framework.IEventSource eventSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.Initialize(Microsoft.Build.Framework.IEventSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (eventSource As IEventSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(Microsoft::Build::Framework::IEventSource ^ eventSource);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : Microsoft.Build.Framework.IEventSource -&gt; unit&#xA;override this.Initialize : Microsoft.Build.Framework.IEventSource -&gt; unit" Usage="muxLogger.Initialize eventSource" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ILogger.Initialize(Microsoft.Build.Framework.IEventSource)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="Microsoft.Build.Framework.IEventSource" />
      </Parameters>
      <Docs>
        <param name="eventSource">
          <span data-ttu-id="85937-128">이벤트 소스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-128">The event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85937-129">지정된 이벤트 소스로 <see langword="MuxLogger" /> 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-129">Initialize the <see langword="MuxLogger" /> instance with the specified event source.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (Microsoft.Build.Framework.IEventSource eventSource, int maxNodeCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class Microsoft.Build.Framework.IEventSource eventSource, int32 maxNodeCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (eventSource As IEventSource, maxNodeCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(Microsoft::Build::Framework::IEventSource ^ eventSource, int maxNodeCount);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : Microsoft.Build.Framework.IEventSource * int -&gt; unit&#xA;override this.Initialize : Microsoft.Build.Framework.IEventSource * int -&gt; unit" Usage="muxLogger.Initialize (eventSource, maxNodeCount)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.INodeLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="Microsoft.Build.Framework.IEventSource" />
        <Parameter Name="maxNodeCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventSource">
          <span data-ttu-id="85937-130">이벤트 소스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-130">The event source.</span>
          </span>
        </param>
        <param name="maxNodeCount">
          <span data-ttu-id="85937-131">노드의 최대 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-131">The maximum number of nodes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85937-132">초기화는 <see langword="MuxLogger" /> 인스턴스는 지정 된 이벤트 소스와 지정한 최대 노드 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-132">Initialize the <see langword="MuxLogger" /> instance with the specified event source and specified maximum number of nodes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public string Parameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Parameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.MuxLogger.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public Property Parameters As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Parameters { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : string with get, set" Usage="Microsoft.Build.Utilities.MuxLogger.Parameters" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Framework.ILogger.Parameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85937-133">
            <see langword="ILogger" /> 인터페이스가 필요로 하는 매개 변수 특성을 가져와 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-133">Gets and sets the Parameters attribute, required by the <see langword="ILogger" /> interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85937-134">매개 변수 특성을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-134">Returns the Parameters attribute.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterLogger">
      <MemberSignature Language="C#" Value="public void RegisterLogger (int submissionId, Microsoft.Build.Framework.ILogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterLogger(int32 submissionId, class Microsoft.Build.Framework.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.RegisterLogger(System.Int32,Microsoft.Build.Framework.ILogger)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterLogger (submissionId As Integer, logger As ILogger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterLogger(int submissionId, Microsoft::Build::Framework::ILogger ^ logger);" />
      <MemberSignature Language="F#" Value="member this.RegisterLogger : int * Microsoft.Build.Framework.ILogger -&gt; unit" Usage="muxLogger.RegisterLogger (submissionId, logger)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="submissionId" Type="System.Int32" />
        <Parameter Name="logger" Type="Microsoft.Build.Framework.ILogger" />
      </Parameters>
      <Docs>
        <param name="submissionId">
          <span data-ttu-id="85937-135">제출 ID에 의해 로거를 등록 중입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-135">The submission ID of the logger being registered.</span>
          </span>
        </param>
        <param name="logger">
          <span data-ttu-id="85937-136">등록할 로거입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-136">The logger to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85937-137">빌드 시작 이벤트가 이미 로그된 경우 <see langword="MuxLogger" />에 로거를 등록하고 빌드 시작 이벤트를 실행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-137">Registers a logger on the <see langword="MuxLogger" /> and raises a build-started event if the build-started event has already been logged.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Shutdown();" />
      <MemberSignature Language="F#" Value="abstract member Shutdown : unit -&gt; unit&#xA;override this.Shutdown : unit -&gt; unit" Usage="muxLogger.Shutdown " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ILogger.Shutdown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85937-138">
            <see langword="MuxLogger" />를 종료하고 모든 상태를 지웁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-138">Shuts down the <see langword="MuxLogger" /> and clears out any state.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterLoggers">
      <MemberSignature Language="C#" Value="public bool UnregisterLoggers (int submissionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool UnregisterLoggers(int32 submissionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.UnregisterLoggers(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function UnregisterLoggers (submissionId As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool UnregisterLoggers(int submissionId);" />
      <MemberSignature Language="F#" Value="member this.UnregisterLoggers : int -&gt; bool" Usage="muxLogger.UnregisterLoggers submissionId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="submissionId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="submissionId">
          <span data-ttu-id="85937-139">제출 ID에 의해 로거를 제거하려고 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-139">The submission ID of the logger to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85937-140">MuxLogger로부터 명시된 로거(logger)를 제거한다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-140">Removes the specified logger from the MuxLogger.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85937-141">메서드가 로거 제거에 성공하면 <see langword="true" />를 반환하고 그렇지 않으면 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-141">Returns <see langword="true" /> if the method is successful in removing the logger, otherwise, returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Verbosity">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.LoggerVerbosity Verbosity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.LoggerVerbosity Verbosity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.MuxLogger.Verbosity" />
      <MemberSignature Language="VB.NET" Value="Public Property Verbosity As LoggerVerbosity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Framework::LoggerVerbosity Verbosity { Microsoft::Build::Framework::LoggerVerbosity get(); void set(Microsoft::Build::Framework::LoggerVerbosity value); };" />
      <MemberSignature Language="F#" Value="member this.Verbosity : Microsoft.Build.Framework.LoggerVerbosity with get, set" Usage="Microsoft.Build.Utilities.MuxLogger.Verbosity" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Framework.ILogger.Verbosity</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.LoggerVerbosity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85937-142">
            <see langword="ILogger" /> 인터페이스가 필요로 하는 자세한 정도의 특성을 가져와 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-142">Gets and sets the Verbosity attribute, required by the <see langword="ILogger" /> interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85937-143">Verbosity 특성을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85937-143">Returns the Verbosity attribute.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>