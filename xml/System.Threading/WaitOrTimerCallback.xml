<Type Name="WaitOrTimerCallback" FullName="System.Threading.WaitOrTimerCallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b5d797b515515af78c99d7bae5dc98c881fba73b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30527297" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void WaitOrTimerCallback(object state, bool timedOut);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed WaitOrTimerCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.WaitOrTimerCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub WaitOrTimerCallback(state As Object, timedOut As Boolean)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void WaitOrTimerCallback(System::Object ^ state, bool timedOut);" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.ThreadPool</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="state" Type="System.Object" />
    <Parameter Name="timedOut" Type="System.Boolean" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="state">콜백 메서드가 실행될 때마다 사용할 정보가 포함된 개체입니다.</param>
    <param name="timedOut">
      <see cref="T:System.Threading.WaitHandle" /> 시간이 초과되면 <see langword="true" />이고, 신호를 받으면 <see langword="false" />입니다.</param>
    <summary>
      <see cref="T:System.Threading.WaitHandle" />이 신호를 받거나 시간 초과될 때 호출될 메서드를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Threading.WaitOrTimerCallback> 등록된 된 대기 핸들이 신호를 받는 하거나 시간이 초과 될 때 실행 하려는 콜백 메서드를 나타냅니다. 콜백 메서드를 전달 하 여 대리자를 만들는 <xref:System.Threading.WaitOrTimerCallback> 생성자입니다. 메서드에 다음과 같은 서명이 있어야 합니다.  
  
 전달 하 여 등록된 된 대기 핸들을 만듭니다는 <xref:System.Threading.WaitOrTimerCallback> 위임 및 <xref:System.Threading.WaitHandle> 를 <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A?displayProperty=nameWithType>합니다. 콜백 메서드가 실행 될 때마다는 <xref:System.Threading.WaitHandle> 제한 시간이 초과 되거나 신호입니다.  
  
  
> [!NOTE]
>  Visual Basic 사용자를 생략할 수는 <xref:System.Threading.WaitOrTimerCallback> 생성자 및 사용할은 `AddressOf` 콜백 메서드를 전달 하는 경우 연산자 <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A>합니다. Visual Basic에서 올바른 대리 생성자를 자동으로 호출합니다.  
  
 콜백 메서드에 정보를 전달 하려는 경우 필요한 정보를 포함 하는 개체를 만들고 전달 <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A> 등록된 된 대기 핸들을 만들 때. 콜백 메서드가 실행 될 때마다는 `state` 매개 변수는이 개체를 포함 합니다.  
  
 콜백 메서드를 사용 하 여 스레드 풀 스레드를 동기화 하는 방법에 대 한 자세한 내용은 참조 [관리 되는 스레드 풀](~/docs/standard/threading/the-managed-thread-pool.md)합니다.  
  
   
  
## Examples  
 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Threading.WaitOrTimerCallback> 대기 핸들이 신호를 받을 때 실행 되는 콜백 메서드를 나타내는 대리자입니다.  
  
 또한이 예제에서는 사용 하는 방법을 <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A> 메서드를 지정 된 대기 핸들이 신호를 받을 때 지정된 된 콜백 메서드를 실행 합니다. 이 예제에서는 콜백 메서드는 `WaitProc` 대기 핸들이 <xref:System.Threading.AutoResetEvent>합니다.  
  
 이 예제에서는 정의 `TaskInfo` 실행 될 때 콜백에 전달 되는 정보를 보관 하는 클래스입니다. 이 예에서는 만듭니다는 `TaskInfo` 개체를 문자열 데이터를 할당 합니다. <xref:System.Threading.RegisteredWaitHandle> 에서 반환 하는 <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A> 메서드에 할당 된는 `Handle` 필드는 `TaskInfo` 개체, 콜백 메서드는에 액세스할 수 있도록는 <xref:System.Threading.RegisteredWaitHandle>합니다.  
  
 외에는 `TaskInfo` 개체에 대 한 호출은 <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A> 메서드 지정는 <xref:System.Threading.AutoResetEvent> 태스크가 대기 하는,는 <xref:System.Threading.WaitOrTimerCallback> 를 나타내는 대리자는 `WaitProc` 콜백 메서드와 1 초 시간 제한 간격, 여러 콜백 발생 .  
  
 때 신호를 주 스레드는 <xref:System.Threading.AutoResetEvent> 호출 하 여 해당 <xref:System.Threading.EventWaitHandle.Set%2A> 메서드를는 <xref:System.Threading.WaitOrTimerCallback> 대리자가 호출 됩니다. `WaitProc` 메서드 테스트 <xref:System.Threading.RegisteredWaitHandle> 시간 초과가 발생 한 것인지 확인 합니다. 대기 핸들에 신호가 전달 되어 콜백이 호출 되는 경우는 `WaitProc` 메서드 등록을 취소는 <xref:System.Threading.RegisteredWaitHandle>, 추가 콜백을 중지 합니다. 시간 제한이 경과 작업 대기를 유지합니다. `WaitProc` 메서드가 콘솔에 메시지를 인쇄 하 여 종료 합니다.  
  
 [!code-cpp[System.Threading.ThreadPool RegisterWaitForSingleObject0#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ThreadPool RegisterWaitForSingleObject0/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ThreadPool RegisterWaitForSingleObject0#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ThreadPool RegisterWaitForSingleObject0/CS/source.cs#1)]
 [!code-vb[System.Threading.ThreadPool RegisterWaitForSingleObject0#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ThreadPool RegisterWaitForSingleObject0/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>