<Type Name="AbandonedMutexException" FullName="System.Threading.AbandonedMutexException">
  <TypeSignature Language="C#" Value="public class AbandonedMutexException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit AbandonedMutexException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.Threading.AbandonedMutexException" />
  <TypeSignature Language="VB.NET" Value="Public Class AbandonedMutexException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class AbandonedMutexException : SystemException" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e0af0-101">스레드가 다른 스레드에서 해제하지 않고 종료하여 중단한 <see cref="T:System.Threading.Mutex" /> 개체를 가져오면 throw되는 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-101">The exception that is thrown when one thread acquires a <see cref="T:System.Threading.Mutex" /> object that another thread has abandoned by exiting without releasing it.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0af0-102">다른 스레드에서 중단 된 뮤텍스를 예외는 뮤텍스를 획득 하는 다음 스레드에서 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-102">When a thread abandons a mutex, the exception is thrown in the next thread that acquires the mutex.</span></span> <span data-ttu-id="e0af0-103">뮤텍스 이미 대기 중 때문에 또는 나중에 뮤텍스를 전환 되기 때문에 스레드가 뮤텍스를 획득 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-103">The thread might acquire the mutex because it was already waiting on the mutex or because it enters the mutex at a later time.</span></span>  
  
 <span data-ttu-id="e0af0-104">중단 된 뮤텍스 심각한 프로그래밍 오류를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-104">An abandoned mutex indicates a serious programming error.</span></span> <span data-ttu-id="e0af0-105">스레드가 뮤텍스를 해제 하지 않고 종료 되 면 뮤텍스의 보호를 받는 데이터 구조 일관성 있는 상태가 아닐 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-105">When a thread exits without releasing the mutex, the data structures protected by the mutex might not be in a consistent state.</span></span> <span data-ttu-id="e0af0-106">.NET Framework 버전 2.0 이전 이러한 문제 중단의 결과로 완료 대기 하는 경우 예외가 throw 되었기 때문에 발견 하기가 어려웠습니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-106">Prior to version 2.0 of the .NET Framework, such problems were hard to discover because no exception was thrown if a wait completed as the result of an abandoned mutex.</span></span> <span data-ttu-id="e0af0-107">자세한 내용은 <xref:System.Threading.Mutex> 클래스를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e0af0-107">For more information, see the <xref:System.Threading.Mutex> class.</span></span>  
  
 <span data-ttu-id="e0af0-108">뮤텍스의 소유권을 요청 하는 다음 스레드에서이 예외를 처리 하 고 데이터 구조의 무결성을 확인할 수 있는 경우 계속 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-108">The next thread to request ownership of the mutex can handle this exception and proceed, provided that the integrity of the data structures can be verified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0af0-109">다음 코드 예제에서는 실행에 영향을 보여 주는 5 개의 뮤텍스를 중단 하는 스레드는 <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A>, 및 <xref:System.Threading.WaitHandle.WaitAll%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e0af0-109">The following code example executes a thread that abandons five mutexes, demonstrating their effects on the <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A>, and <xref:System.Threading.WaitHandle.WaitAll%2A> methods.</span></span> <span data-ttu-id="e0af0-110">값은 <xref:System.Threading.AbandonedMutexException.MutexIndex%2A> 속성에 대해 표시 되는 <xref:System.Threading.WaitHandle.WaitAny%2A> 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-110">The value of the <xref:System.Threading.AbandonedMutexException.MutexIndex%2A> property is displayed for the <xref:System.Threading.WaitHandle.WaitAny%2A> call.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0af0-111">에 대 한 호출의 <xref:System.Threading.WaitHandle.WaitAny%2A> 메서드 중단 된 뮤텍스 중 하나에 의해 중단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-111">The call to the <xref:System.Threading.WaitHandle.WaitAny%2A> method is interrupted by one of the abandoned mutexes.</span></span> <span data-ttu-id="e0af0-112">중단 된 뮤텍스 여전히 발생할 수 있는 <xref:System.Threading.AbandonedMutexException> 후속 대기 메서드에서 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-112">The other abandoned mutex could still cause an <xref:System.Threading.AbandonedMutexException> to be thrown by subsequent wait methods.</span></span>  
  
 [!code-cpp[System.Threading.AbandonedMutexException#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.AbandonedMutexException/CPP/koax.cpp#1)]
 [!code-csharp[System.Threading.AbandonedMutexException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.AbandonedMutexException/CS/koax.cs#1)]
 [!code-vb[System.Threading.AbandonedMutexException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.AbandonedMutexException/VB/koax.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.Mutex" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e0af0-113"><see cref="T:System.Threading.AbandonedMutexException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-113">Initializes a new instance of the <see cref="T:System.Threading.AbandonedMutexException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AbandonedMutexException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AbandonedMutexException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AbandonedMutexException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e0af0-114">기본값을 사용하여 <see cref="T:System.Threading.AbandonedMutexException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-114">Initializes a new instance of the <see cref="T:System.Threading.AbandonedMutexException" /> class with default values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0af0-115">이 생성자는 <xref:System.Exception.Message%2A> "대기 상태가 중단된 된 뮤텍스 때문에 완료 되었습니다."와 같은 오류를 설명 하는 시스템 제공 메시지로 새 인스턴스의 속성</span><span class="sxs-lookup"><span data-stu-id="e0af0-115">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as "The wait completed due to an abandoned mutex."</span></span> <span data-ttu-id="e0af0-116">이 메시지는 현재 시스템 문화권을 고려합니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-116">This message takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="e0af0-117">다음 표에서는 <xref:System.Threading.AbandonedMutexException> 인스턴스의 초기 속성 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-117">The following table shows the initial property values for an instance of <xref:System.Threading.AbandonedMutexException>.</span></span>  
  
|<span data-ttu-id="e0af0-118">속성</span><span class="sxs-lookup"><span data-stu-id="e0af0-118">Property</span></span>|<span data-ttu-id="e0af0-119">값</span><span class="sxs-lookup"><span data-stu-id="e0af0-119">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="e0af0-120">`null`.</span><span class="sxs-lookup"><span data-stu-id="e0af0-120">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="e0af0-121">시스템에서 제공 하는 오류 메시지 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-121">The system-supplied error message string.</span></span>|  
|<xref:System.Threading.AbandonedMutexException.Mutex%2A>|<span data-ttu-id="e0af0-122">`null`.</span><span class="sxs-lookup"><span data-stu-id="e0af0-122">`null`.</span></span>|  
|<xref:System.Threading.AbandonedMutexException.MutexIndex%2A>|<span data-ttu-id="e0af0-123">(-1)-1.</span><span class="sxs-lookup"><span data-stu-id="e0af0-123">–1 (minus one).</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Mutex" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AbandonedMutexException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AbandonedMutexException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AbandonedMutexException(System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="e0af0-124">예외에 대한 이유를 설명하는 오류 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-124">An error message that explains the reason for the exception.</span></span></param>
        <summary><span data-ttu-id="e0af0-125">지정된 오류 메시지를 사용하여 <see cref="T:System.Threading.AbandonedMutexException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-125">Initializes a new instance of the <see cref="T:System.Threading.AbandonedMutexException" /> class with a specified error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0af0-126">`message`의 내용은 사용자의 이해를 돕기 위한 것입니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-126">The content of `message` is intended to be understood by humans.</span></span> <span data-ttu-id="e0af0-127">이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-127">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span>  
  
 <span data-ttu-id="e0af0-128">다음 표에서의 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <xref:System.Threading.AbandonedMutexException> 이 생성자를 사용 하 여 초기화 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-128">The following table shows the initial property values for an instance of <xref:System.Threading.AbandonedMutexException> initialized with this constructor.</span></span>  
  
|<span data-ttu-id="e0af0-129">속성</span><span class="sxs-lookup"><span data-stu-id="e0af0-129">Property</span></span>|<span data-ttu-id="e0af0-130">값</span><span class="sxs-lookup"><span data-stu-id="e0af0-130">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="e0af0-131">`null`.</span><span class="sxs-lookup"><span data-stu-id="e0af0-131">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="e0af0-132">`message`.</span><span class="sxs-lookup"><span data-stu-id="e0af0-132">`message`.</span></span>|  
|<xref:System.Threading.AbandonedMutexException.Mutex%2A>|<span data-ttu-id="e0af0-133">`null`.</span><span class="sxs-lookup"><span data-stu-id="e0af0-133">`null`.</span></span>|  
|<xref:System.Threading.AbandonedMutexException.MutexIndex%2A>|<span data-ttu-id="e0af0-134">(-1)-1.</span><span class="sxs-lookup"><span data-stu-id="e0af0-134">–1 (minus one).</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Mutex" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AbandonedMutexException (int location, System.Threading.WaitHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 location, class System.Threading.WaitHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (location As Integer, handle As WaitHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AbandonedMutexException(int location, System::Threading::WaitHandle ^ handle);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="handle" Type="System.Threading.WaitHandle" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="e0af0-135"><see cref="Overload:System.Threading.WaitHandle.WaitAny" /> 메서드에 대해 예외가 throw되면 대기 핸들의 배열에서 중단된 뮤텍스의 인덱스이고, <see cref="Overload:System.Threading.WaitHandle.WaitOne" /> 또는 <see cref="Overload:System.Threading.WaitHandle.WaitAll" /> 메서드에 대해 예외가 throw되면 –1입니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-135">The index of the abandoned mutex in the array of wait handles if the exception is thrown for the <see cref="Overload:System.Threading.WaitHandle.WaitAny" /> method, or –1 if the exception is thrown for the <see cref="Overload:System.Threading.WaitHandle.WaitOne" /> or <see cref="Overload:System.Threading.WaitHandle.WaitAll" /> methods.</span></span></param>
        <param name="handle"><span data-ttu-id="e0af0-136">중단된 뮤텍스를 나타내는 <see cref="T:System.Threading.Mutex" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-136">A <see cref="T:System.Threading.Mutex" /> object that represents the abandoned mutex.</span></span></param>
        <summary><span data-ttu-id="e0af0-137">중단된 뮤텍스의 지정된 인덱스 및 뮤텍스를 나타내는 <see cref="T:System.Threading.AbandonedMutexException" /> 개체(해당 사항이 있을 경우)를 사용하여 <see cref="T:System.Threading.Mutex" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-137">Initializes a new instance of the <see cref="T:System.Threading.AbandonedMutexException" /> class with a specified index for the abandoned mutex, if applicable, and a <see cref="T:System.Threading.Mutex" /> object that represents the mutex.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0af0-138">이 생성자는 <xref:System.Exception.Message%2A> "대기 상태가 중단된 된 뮤텍스 때문에 완료 되었습니다."와 같은 오류를 설명 하는 시스템 제공 메시지로 새 인스턴스의 속성</span><span class="sxs-lookup"><span data-stu-id="e0af0-138">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as "The wait completed due to an abandoned mutex."</span></span> <span data-ttu-id="e0af0-139">이 메시지는 현재 시스템 문화권을 고려합니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-139">This message takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="e0af0-140">다음 표에서의 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <xref:System.Threading.AbandonedMutexException> 이 생성자를 사용 하 여 초기화 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-140">The following table shows the initial property values for an instance of <xref:System.Threading.AbandonedMutexException> initialized with this constructor.</span></span>  
  
|<span data-ttu-id="e0af0-141">속성</span><span class="sxs-lookup"><span data-stu-id="e0af0-141">Property</span></span>|<span data-ttu-id="e0af0-142">값</span><span class="sxs-lookup"><span data-stu-id="e0af0-142">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="e0af0-143">`null`.</span><span class="sxs-lookup"><span data-stu-id="e0af0-143">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="e0af0-144">시스템에서 제공 하는 오류 메시지 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-144">A system-supplied error message string.</span></span>|  
|<xref:System.Threading.AbandonedMutexException.Mutex%2A>|<span data-ttu-id="e0af0-145">`handle`.</span><span class="sxs-lookup"><span data-stu-id="e0af0-145">`handle`.</span></span>|  
|<xref:System.Threading.AbandonedMutexException.MutexIndex%2A>|<span data-ttu-id="e0af0-146">`location`.</span><span class="sxs-lookup"><span data-stu-id="e0af0-146">`location`.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Mutex" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AbandonedMutexException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AbandonedMutexException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AbandonedMutexException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="e0af0-147">발생되는 예외에 대해 직렬화된 개체 데이터를 보유하는 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-147">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized object data about the exception being thrown.</span></span></param>
        <param name="context"><span data-ttu-id="e0af0-148">소스 또는 대상에 대한 컨텍스트 정보를 포함하는 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-148">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="e0af0-149">serialize된 데이터를 사용하여 <see cref="T:System.Threading.AbandonedMutexException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-149">Initializes a new instance of the <see cref="T:System.Threading.AbandonedMutexException" /> class with serialized data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0af0-150">이 생성자는 deserialization을 수행하는 동안 호출되어 스트림을 통해 전송된 예외 개체를 다시 구성합니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-150">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="e0af0-151">자세한 내용은 참조 [XML 및 SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-151">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Mutex" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AbandonedMutexException (string message, Exception inner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, inner As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AbandonedMutexException(System::String ^ message, Exception ^ inner);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="inner" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="e0af0-152">예외에 대한 이유를 설명하는 오류 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-152">An error message that explains the reason for the exception.</span></span></param>
        <param name="inner"><span data-ttu-id="e0af0-153">현재 예외의 원인인 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-153">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="e0af0-154"><c>inner</c> 매개 변수가 <see langword="null" />이 아니면 현재 예외는 내부 예외를 처리하는 <see langword="catch" /> 블록에서 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-154">If the <c>inner</c> parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="e0af0-155">지정된 오류 메시지와 내부 예외를 사용하여 <see cref="T:System.Threading.AbandonedMutexException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-155">Initializes a new instance of the <see cref="T:System.Threading.AbandonedMutexException" /> class with a specified error message and inner exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0af0-156">`message`의 내용은 사용자의 이해를 돕기 위한 것입니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-156">The content of `message` is intended to be understood by humans.</span></span> <span data-ttu-id="e0af0-157">이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-157">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span>  
  
 <span data-ttu-id="e0af0-158">이전 예외의 직접적인 결과로 throw되는 예외의 <xref:System.Exception.InnerException%2A> 속성에는 이전 예외에 대한 참조가 들어 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-158">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="e0af0-159"><xref:System.Exception.InnerException%2A> 속성은 생성자에 전달되는 값과 동일한 값을 반환하며, `null` 속성이 생성자에 내부 예외 값을 제공하지 않는 경우에는 <xref:System.Exception.InnerException%2A>을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-159">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="e0af0-160">다음 표에서의 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <xref:System.Threading.AbandonedMutexException> 이 생성자를 사용 하 여 초기화 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-160">The following table shows the initial property values for an instance of <xref:System.Threading.AbandonedMutexException> initialized with this constructor.</span></span>  
  
|<span data-ttu-id="e0af0-161">속성</span><span class="sxs-lookup"><span data-stu-id="e0af0-161">Property</span></span>|<span data-ttu-id="e0af0-162">값</span><span class="sxs-lookup"><span data-stu-id="e0af0-162">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="e0af0-163">`inner`.</span><span class="sxs-lookup"><span data-stu-id="e0af0-163">`inner`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="e0af0-164">`message`.</span><span class="sxs-lookup"><span data-stu-id="e0af0-164">`message`.</span></span>|  
|<xref:System.Threading.AbandonedMutexException.Mutex%2A>|<span data-ttu-id="e0af0-165">`null`.</span><span class="sxs-lookup"><span data-stu-id="e0af0-165">`null`.</span></span>|  
|<xref:System.Threading.AbandonedMutexException.MutexIndex%2A>|<span data-ttu-id="e0af0-166">(-1)-1.</span><span class="sxs-lookup"><span data-stu-id="e0af0-166">–1 (minus one).</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Mutex" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AbandonedMutexException (string message, int location, System.Threading.WaitHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, int32 location, class System.Threading.WaitHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, location As Integer, handle As WaitHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AbandonedMutexException(System::String ^ message, int location, System::Threading::WaitHandle ^ handle);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="handle" Type="System.Threading.WaitHandle" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="e0af0-167">예외에 대한 이유를 설명하는 오류 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-167">An error message that explains the reason for the exception.</span></span></param>
        <param name="location"><span data-ttu-id="e0af0-168"><see cref="Overload:System.Threading.WaitHandle.WaitAny" /> 메서드에 대해 예외가 throw되면 대기 핸들의 배열에서 중단된 뮤텍스의 인덱스이고, <see cref="Overload:System.Threading.WaitHandle.WaitOne" /> 또는 <see cref="Overload:System.Threading.WaitHandle.WaitAll" /> 메서드에 대해 예외가 throw되면 –1입니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-168">The index of the abandoned mutex in the array of wait handles if the exception is thrown for the <see cref="Overload:System.Threading.WaitHandle.WaitAny" /> method, or –1 if the exception is thrown for the <see cref="Overload:System.Threading.WaitHandle.WaitOne" /> or <see cref="Overload:System.Threading.WaitHandle.WaitAll" /> methods.</span></span></param>
        <param name="handle"><span data-ttu-id="e0af0-169">중단된 뮤텍스를 나타내는 <see cref="T:System.Threading.Mutex" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-169">A <see cref="T:System.Threading.Mutex" /> object that represents the abandoned mutex.</span></span></param>
        <summary><span data-ttu-id="e0af0-170">지정된 오류 메시지, 중단된 뮤텍스의 인덱스 및 중단된 뮤텍스(해당 사항이 있을 경우)를 사용하여 <see cref="T:System.Threading.AbandonedMutexException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-170">Initializes a new instance of the <see cref="T:System.Threading.AbandonedMutexException" /> class with a specified error message, the index of the abandoned mutex, if applicable, and the abandoned mutex.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0af0-171">`message`의 내용은 사용자의 이해를 돕기 위한 것입니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-171">The content of `message` is intended to be understood by humans.</span></span> <span data-ttu-id="e0af0-172">이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-172">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span>  
  
 <span data-ttu-id="e0af0-173">다음 표에서의 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <xref:System.Threading.AbandonedMutexException> 이 생성자를 사용 하 여 초기화 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-173">The following table shows the initial property values for an instance of <xref:System.Threading.AbandonedMutexException> initialized with this constructor.</span></span>  
  
|<span data-ttu-id="e0af0-174">속성</span><span class="sxs-lookup"><span data-stu-id="e0af0-174">Property</span></span>|<span data-ttu-id="e0af0-175">값</span><span class="sxs-lookup"><span data-stu-id="e0af0-175">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="e0af0-176">`null`.</span><span class="sxs-lookup"><span data-stu-id="e0af0-176">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="e0af0-177">`message`.</span><span class="sxs-lookup"><span data-stu-id="e0af0-177">`message`.</span></span>|  
|<xref:System.Threading.AbandonedMutexException.Mutex%2A>|<span data-ttu-id="e0af0-178">`handle`.</span><span class="sxs-lookup"><span data-stu-id="e0af0-178">`handle`.</span></span>|  
|<xref:System.Threading.AbandonedMutexException.MutexIndex%2A>|<span data-ttu-id="e0af0-179">`location`.</span><span class="sxs-lookup"><span data-stu-id="e0af0-179">`location`.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Mutex" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AbandonedMutexException (string message, Exception inner, int location, System.Threading.WaitHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception inner, int32 location, class System.Threading.WaitHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, inner As Exception, location As Integer, handle As WaitHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AbandonedMutexException(System::String ^ message, Exception ^ inner, int location, System::Threading::WaitHandle ^ handle);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="inner" Type="System.Exception" />
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="handle" Type="System.Threading.WaitHandle" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="e0af0-180">예외에 대한 이유를 설명하는 오류 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-180">An error message that explains the reason for the exception.</span></span></param>
        <param name="inner"><span data-ttu-id="e0af0-181">현재 예외의 원인인 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-181">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="e0af0-182"><c>inner</c> 매개 변수가 <see langword="null" />이 아니면 현재 예외는 내부 예외를 처리하는 <see langword="catch" /> 블록에서 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-182">If the <c>inner</c> parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <param name="location"><span data-ttu-id="e0af0-183"><see cref="Overload:System.Threading.WaitHandle.WaitAny" /> 메서드에 대해 예외가 throw되면 대기 핸들의 배열에서 중단된 뮤텍스의 인덱스이고, <see cref="Overload:System.Threading.WaitHandle.WaitOne" /> 또는 <see cref="Overload:System.Threading.WaitHandle.WaitAll" /> 메서드에 대해 예외가 throw되면 –1입니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-183">The index of the abandoned mutex in the array of wait handles if the exception is thrown for the <see cref="Overload:System.Threading.WaitHandle.WaitAny" /> method, or –1 if the exception is thrown for the <see cref="Overload:System.Threading.WaitHandle.WaitOne" /> or <see cref="Overload:System.Threading.WaitHandle.WaitAll" /> methods.</span></span></param>
        <param name="handle"><span data-ttu-id="e0af0-184">중단된 뮤텍스를 나타내는 <see cref="T:System.Threading.Mutex" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-184">A <see cref="T:System.Threading.Mutex" /> object that represents the abandoned mutex.</span></span></param>
        <summary><span data-ttu-id="e0af0-185">지정된 오류 메시지, 내부 예외, 중단된 뮤텍스의 인덱스 및 뮤텍스를 나타내는 <see cref="T:System.Threading.AbandonedMutexException" /> 개체(해당 사항이 있을 경우)를 사용하여 <see cref="T:System.Threading.Mutex" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-185">Initializes a new instance of the <see cref="T:System.Threading.AbandonedMutexException" /> class with a specified error message, the inner exception, the index for the abandoned mutex, if applicable, and a <see cref="T:System.Threading.Mutex" /> object that represents the mutex.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0af0-186">내용을 `message` 텍스트 문자열 하기 위한 용도가 예외에 대 한 사용자에 게 알립니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-186">The content of `message` is a text string intended to inform the user about the exception.</span></span> <span data-ttu-id="e0af0-187">이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-187">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span>  
  
 <span data-ttu-id="e0af0-188">이전 예외의 직접적인 결과로 throw되는 예외의 <xref:System.Exception.InnerException%2A> 속성에는 이전 예외에 대한 참조가 들어 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-188">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="e0af0-189"><xref:System.Exception.InnerException%2A> 속성은 생성자에 전달되는 값과 동일한 값을 반환하며, `null` 속성이 생성자에 내부 예외 값을 제공하지 않는 경우에는 <xref:System.Exception.InnerException%2A>을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-189">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="e0af0-190">다음 표에서의 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <xref:System.Threading.AbandonedMutexException> 이 생성자를 사용 하 여 초기화 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-190">The following table shows the initial property values for an instance of <xref:System.Threading.AbandonedMutexException> initialized with this constructor.</span></span>  
  
|<span data-ttu-id="e0af0-191">속성</span><span class="sxs-lookup"><span data-stu-id="e0af0-191">Property</span></span>|<span data-ttu-id="e0af0-192">값</span><span class="sxs-lookup"><span data-stu-id="e0af0-192">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="e0af0-193">`inner`.</span><span class="sxs-lookup"><span data-stu-id="e0af0-193">`inner`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="e0af0-194">`message`.</span><span class="sxs-lookup"><span data-stu-id="e0af0-194">`message`.</span></span>|  
|<xref:System.Threading.AbandonedMutexException.Mutex%2A>|<span data-ttu-id="e0af0-195">`handle`.</span><span class="sxs-lookup"><span data-stu-id="e0af0-195">`handle`.</span></span>|  
|<xref:System.Threading.AbandonedMutexException.MutexIndex%2A>|<span data-ttu-id="e0af0-196">`location`.</span><span class="sxs-lookup"><span data-stu-id="e0af0-196">`location`.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Mutex" />
      </Docs>
    </Member>
    <Member MemberName="Mutex">
      <MemberSignature Language="C#" Value="public System.Threading.Mutex Mutex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Mutex Mutex" />
      <MemberSignature Language="DocId" Value="P:System.Threading.AbandonedMutexException.Mutex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mutex As Mutex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Mutex ^ Mutex { System::Threading::Mutex ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Mutex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0af0-197">예외의 발생시킨 중단된 뮤텍스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-197">Gets the abandoned mutex that caused the exception, if known.</span></span></summary>
        <value><span data-ttu-id="e0af0-198">중단된 뮤텍스를 나타내는 <see cref="T:System.Threading.Mutex" /> 개체이며, 중단된 뮤텍스를 식별할 수 없는 경우에는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-198">A <see cref="T:System.Threading.Mutex" /> object that represents the abandoned mutex, or <see langword="null" /> if the abandoned mutex could not be identified.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0af0-199">에 대 한 호출에서 예외가 throw 되는 경우는 <xref:System.Threading.WaitHandle.WaitAny%2A?displayProperty=nameWithType> 메서드는 <xref:System.Threading.Mutex> 반환 된 배열에서 가장 낮은 인덱스 중단 된 뮤텍스 <xref:System.Threading.WaitHandle> 개체에 전달 된 <xref:System.Threading.WaitHandle.WaitAny%2A>, 또는 `null` 중단 된 뮤텍스 수 없는 경우 식별 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-199">If the exception is thrown on a call to the <xref:System.Threading.WaitHandle.WaitAny%2A?displayProperty=nameWithType> method, the <xref:System.Threading.Mutex> returned is the abandoned mutex with the lowest index in the array of <xref:System.Threading.WaitHandle> objects that was passed to <xref:System.Threading.WaitHandle.WaitAny%2A>, or `null` if the abandoned mutex could not be identified.</span></span> <span data-ttu-id="e0af0-200">에 대 한 호출에는 예외가 있으면 <xref:System.Threading.WaitHandle.WaitOne%2A> 또는 <xref:System.Threading.WaitHandle.WaitAll%2A>,이 속성은 항상 반환 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-200">If the exception is thrown on a call to <xref:System.Threading.WaitHandle.WaitOne%2A> or <xref:System.Threading.WaitHandle.WaitAll%2A>, this property always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Mutex" />
      </Docs>
    </Member>
    <Member MemberName="MutexIndex">
      <MemberSignature Language="C#" Value="public int MutexIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MutexIndex" />
      <MemberSignature Language="DocId" Value="P:System.Threading.AbandonedMutexException.MutexIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MutexIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MutexIndex { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0af0-201">예외의 발생시킨 중단된 뮤텍스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-201">Gets the index of the abandoned mutex that caused the exception, if known.</span></span></summary>
        <value><span data-ttu-id="e0af0-202"><see cref="Overload:System.Threading.WaitHandle.WaitAny" /> 메서드에 전달된 대기 핸들의 배열에서 중단된 뮤텍스를 나타내는 <see cref="T:System.Threading.Mutex" /> 개체의 인덱스이고, 중단된 뮤텍스의 인덱스를 식별할 수 없는 경우에는 –1입니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-202">The index, in the array of wait handles passed to the <see cref="Overload:System.Threading.WaitHandle.WaitAny" /> method, of the <see cref="T:System.Threading.Mutex" /> object that represents the abandoned mutex, or –1 if the index of the abandoned mutex could not be determined.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0af0-203">에 대 한 호출에서 예외가 throw 되는 경우는 <xref:System.Threading.WaitHandle.WaitAny%2A?displayProperty=nameWithType> 메서드,이 속성의 인덱스를 반환 중단 된 뮤텍스 최저 인덱스를 가진 배열에 <xref:System.Threading.WaitHandle> 개체에 전달 된 <xref:System.Threading.WaitHandle.WaitAny%2A>, 또는 중단 된 뮤텍스를 식별할 수 없는 경우-1입니다. .</span><span class="sxs-lookup"><span data-stu-id="e0af0-203">If the exception is thrown on a call to the <xref:System.Threading.WaitHandle.WaitAny%2A?displayProperty=nameWithType> method, this property returns the index of the abandoned mutex with the lowest index in the array of <xref:System.Threading.WaitHandle> objects that was passed to <xref:System.Threading.WaitHandle.WaitAny%2A>, or –1 if the abandoned mutex could not be identified.</span></span> <span data-ttu-id="e0af0-204">에 대 한 호출에는 예외가 있으면 <xref:System.Threading.WaitHandle.WaitOne%2A> 또는 <xref:System.Threading.WaitHandle.WaitAll%2A>,이 속성은 항상-1을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-204">If the exception is thrown on a call to <xref:System.Threading.WaitHandle.WaitOne%2A> or <xref:System.Threading.WaitHandle.WaitAll%2A>, this property always returns –1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0af0-205">다음 코드 예제에서는 5 개의 뮤텍스를 중단 하는 스레드를 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-205">The following code example executes a thread that abandons five mutexes.</span></span> <span data-ttu-id="e0af0-206">중단 된 뮤텍스는에 효과 보여 주는 데 사용 되는 <xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType>, <xref:System.Threading.WaitHandle.WaitAny%2A>, 및 <xref:System.Threading.WaitHandle.WaitAll%2A> 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-206">The abandoned mutexes are used to demonstrate the effects on the <xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType>, <xref:System.Threading.WaitHandle.WaitAny%2A>, and <xref:System.Threading.WaitHandle.WaitAll%2A> method calls.</span></span> <span data-ttu-id="e0af0-207">값은 <xref:System.Threading.AbandonedMutexException.MutexIndex%2A> 속성에 대해 표시 되는 <xref:System.Threading.WaitHandle.WaitAny%2A> 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-207">The value of the <xref:System.Threading.AbandonedMutexException.MutexIndex%2A> property is displayed for the <xref:System.Threading.WaitHandle.WaitAny%2A> call.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0af0-208">에 대 한 호출 <xref:System.Threading.WaitHandle.WaitAny%2A> 중단 된 뮤텍스 중 하나에 의해 중단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-208">The call to <xref:System.Threading.WaitHandle.WaitAny%2A> is interrupted by one of the abandoned mutexes.</span></span> <span data-ttu-id="e0af0-209">중단 된 뮤텍스 여전히 발생할 수 있는 <xref:System.Threading.AbandonedMutexException> 후속 대기 메서드에서 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0af0-209">The other abandoned mutex could still cause an <xref:System.Threading.AbandonedMutexException> to be thrown by subsequent wait methods.</span></span>  
  
 [!code-cpp[System.Threading.AbandonedMutexException#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.AbandonedMutexException/CPP/koax.cpp#1)]
 [!code-csharp[System.Threading.AbandonedMutexException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.AbandonedMutexException/CS/koax.cs#1)]
 [!code-vb[System.Threading.AbandonedMutexException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.AbandonedMutexException/VB/koax.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Mutex" />
      </Docs>
    </Member>
  </Members>
</Type>