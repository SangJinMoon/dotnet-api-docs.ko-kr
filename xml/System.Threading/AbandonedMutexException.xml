<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AbandonedMutexException.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5aff749be646a23d7b3e5cd0e23fa4000612a6a58.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aff749be646a23d7b3e5cd0e23fa4000612a6a58</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Threading.AbandonedMutexException">
          <source>The exception that is thrown when one thread acquires a <ph id="ph1">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph> object that another thread has abandoned by exiting without releasing it.</source>
          <target state="translated">스레드가 다른 스레드에서 해제하지 않고 종료하여 중단한 <ph id="ph1">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph> 개체를 가져오면 throw되는 예외입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.AbandonedMutexException">
          <source>When a thread abandons a mutex, the exception is thrown in the next thread that acquires the mutex.</source>
          <target state="translated">다른 스레드에서 중단 된 뮤텍스를 예외는 뮤텍스를 획득 하는 다음 스레드에서 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.AbandonedMutexException">
          <source>The thread might acquire the mutex because it was already waiting on the mutex or because it enters the mutex at a later time.</source>
          <target state="translated">뮤텍스 이미 대기 중 때문에 또는 나중에 뮤텍스를 전환 되기 때문에 스레드가 뮤텍스를 획득 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.AbandonedMutexException">
          <source>An abandoned mutex indicates a serious programming error.</source>
          <target state="translated">중단 된 뮤텍스 심각한 프로그래밍 오류를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.AbandonedMutexException">
          <source>When a thread exits without releasing the mutex, the data structures protected by the mutex might not be in a consistent state.</source>
          <target state="translated">스레드가 뮤텍스를 해제 하지 않고 종료 되 면 뮤텍스의 보호를 받는 데이터 구조 일관성 있는 상태가 아닐 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.AbandonedMutexException">
          <source>Prior to version 2.0 of the .NET Framework, such problems were hard to discover because no exception was thrown if a wait completed as the result of an abandoned mutex.</source>
          <target state="translated">.NET Framework 버전 2.0 이전 이러한 문제 중단의 결과로 완료 대기 하는 경우 예외가 throw 되었기 때문에 발견 하기가 어려웠습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.AbandonedMutexException">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> class.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> 클래스를 참조하세요.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.AbandonedMutexException">
          <source>The next thread to request ownership of the mutex can handle this exception and proceed, provided that the integrity of the data structures can be verified.</source>
          <target state="translated">뮤텍스의 소유권을 요청 하는 다음 스레드에서이 예외를 처리 하 고 데이터 구조의 무결성을 확인할 수 있는 경우 계속 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.AbandonedMutexException">
          <source>The following code example executes a thread that abandons five mutexes, demonstrating their effects on the <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;</ph> methods.</source>
          <target state="translated">다음 코드 예제에서는 실행에 영향을 보여 주는 5 개의 뮤텍스를 중단 하는 스레드는 <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.AbandonedMutexException">
          <source>The value of the <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException.MutexIndex%2A&gt;</ph> property is displayed for the <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph> call.</source>
          <target state="translated">값은 <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException.MutexIndex%2A&gt;</ph> 속성에 대해 표시 되는 <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph> 호출 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.AbandonedMutexException">
          <source>The call to the <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph> method is interrupted by one of the abandoned mutexes.</source>
          <target state="translated">에 대 한 호출의 <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph> 메서드 중단 된 뮤텍스 중 하나에 의해 중단 됩니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.AbandonedMutexException">
          <source>The other abandoned mutex could still cause an <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> to be thrown by subsequent wait methods.</source>
          <target state="translated">중단 된 뮤텍스 여전히 발생할 수 있는 <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> 후속 대기 메서드에서 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.Threading.AbandonedMutexException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph> class with default values.</source>
          <target state="translated">기본값을 사용하여 <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as "The wait completed due to an abandoned mutex."</source>
          <target state="translated">이 생성자는 <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> "대기 상태가 중단된 된 뮤텍스 때문에 완료 되었습니다."와 같은 오류를 설명 하는 시스템 제공 메시지로 새 인스턴스의 속성</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">이 메시지는 현재 시스템 문화권을 고려합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph>.</source>
          <target state="translated">다음 표에서는 <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> 인스턴스의 초기 속성 값을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor">
          <source>Property</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor">
          <source>Value</source>
          <target state="translated">값</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor">
          <source>The system-supplied error message string.</source>
          <target state="translated">시스템에서 제공 하는 오류 메시지 문자열입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor">
          <source>–1 (minus one).</source>
          <target state="translated">(-1)-1.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String)">
          <source>An error message that explains the reason for the exception.</source>
          <target state="translated">예외에 대한 이유를 설명하는 오류 메시지입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph> class with a specified error message.</source>
          <target state="translated">지정된 오류 메시지를 사용하여 <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String)">
          <source>The content of <ph id="ph1">`message`</ph> is intended to be understood by humans.</source>
          <target state="translated"><ph id="ph1">`message`</ph>의 내용은 사용자의 이해를 돕기 위한 것입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> initialized with this constructor.</source>
          <target state="translated">다음 표에서의 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> 이 생성자를 사용 하 여 초기화 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String)">
          <source>Value</source>
          <target state="translated">값</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String)">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String)">
          <source><ph id="ph1">`message`</ph>.</source>
          <target state="translated"><ph id="ph1">`message`</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String)">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String)">
          <source>–1 (minus one).</source>
          <target state="translated">(-1)-1.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)">
          <source>The index of the abandoned mutex in the array of wait handles if the exception is thrown for the <ph id="ph1">&lt;see cref="Overload:System.Threading.WaitHandle.WaitAny" /&gt;</ph> method, or –1 if the exception is thrown for the <ph id="ph2">&lt;see cref="Overload:System.Threading.WaitHandle.WaitOne" /&gt;</ph> or <ph id="ph3">&lt;see cref="Overload:System.Threading.WaitHandle.WaitAll" /&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="Overload:System.Threading.WaitHandle.WaitAny" /&gt;</ph> 메서드에 대해 예외가 throw되면 대기 핸들의 배열에서 중단된 뮤텍스의 인덱스이고, <ph id="ph2">&lt;see cref="Overload:System.Threading.WaitHandle.WaitOne" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="Overload:System.Threading.WaitHandle.WaitAll" /&gt;</ph> 메서드에 대해 예외가 throw되면 –1입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph> object that represents the abandoned mutex.</source>
          <target state="translated">중단된 뮤텍스를 나타내는 <ph id="ph1">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph> class with a specified index for the abandoned mutex, if applicable, and a <ph id="ph2">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph> object that represents the mutex.</source>
          <target state="translated">중단된 뮤텍스의 지정된 인덱스 및 뮤텍스를 나타내는 <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph> 개체(해당 사항이 있을 경우)를 사용하여 <ph id="ph2">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as "The wait completed due to an abandoned mutex."</source>
          <target state="translated">이 생성자는 <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> "대기 상태가 중단된 된 뮤텍스 때문에 완료 되었습니다."와 같은 오류를 설명 하는 시스템 제공 메시지로 새 인스턴스의 속성</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">이 메시지는 현재 시스템 문화권을 고려합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> initialized with this constructor.</source>
          <target state="translated">다음 표에서의 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> 이 생성자를 사용 하 여 초기화 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)">
          <source>Property</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)">
          <source>Value</source>
          <target state="translated">값</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)">
          <source>A system-supplied error message string.</source>
          <target state="translated">시스템에서 제공 하는 오류 메시지 문자열입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)">
          <source><ph id="ph1">`handle`</ph>.</source>
          <target state="translated"><ph id="ph1">`handle`</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)">
          <source><ph id="ph1">`location`</ph>.</source>
          <target state="translated"><ph id="ph1">`location`</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object that holds the serialized object data about the exception being thrown.</source>
          <target state="translated">발생되는 예외에 대해 직렬화된 개체 데이터를 보유하는 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> object that contains contextual information about the source or destination.</source>
          <target state="translated">소스 또는 대상에 대한 컨텍스트 정보를 포함하는 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">serialize된 데이터를 사용하여 <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</source>
          <target state="translated">이 생성자는 deserialization을 수행하는 동안 호출되어 스트림을 통해 전송된 예외 개체를 다시 구성합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <bpt id="p1">[</bpt>XML and SOAP Serialization<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>XML 및 SOAP Serialization<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source>An error message that explains the reason for the exception.</source>
          <target state="translated">예외에 대한 이유를 설명하는 오류 메시지입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">현재 예외의 원인인 예외입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>inner<ept id="p1">&lt;/c&gt;</ept> parameter is not <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>inner<ept id="p1">&lt;/c&gt;</ept> 매개 변수가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이 아니면 현재 예외는 내부 예외를 처리하는 <ph id="ph2">&lt;see langword="catch" /&gt;</ph> 블록에서 발생합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph> class with a specified error message and inner exception.</source>
          <target state="translated">지정된 오류 메시지와 내부 예외를 사용하여 <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source>The content of <ph id="ph1">`message`</ph> is intended to be understood by humans.</source>
          <target state="translated"><ph id="ph1">`message`</ph>의 내용은 사용자의 이해를 돕기 위한 것입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">이전 예외의 직접적인 결과로 throw되는 예외의 <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 속성에는 이전 예외에 대한 참조가 들어 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id="ph2">`null`</ph> if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 속성은 생성자에 전달되는 값과 동일한 값을 반환하며, <ph id="ph2">`null`</ph> 속성이 생성자에 내부 예외 값을 제공하지 않는 경우에는 <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> initialized with this constructor.</source>
          <target state="translated">다음 표에서의 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> 이 생성자를 사용 하 여 초기화 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">값</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source><ph id="ph1">`inner`</ph>.</source>
          <target state="translated"><ph id="ph1">`inner`</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source><ph id="ph1">`message`</ph>.</source>
          <target state="translated"><ph id="ph1">`message`</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source>–1 (minus one).</source>
          <target state="translated">(-1)-1.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)">
          <source>An error message that explains the reason for the exception.</source>
          <target state="translated">예외에 대한 이유를 설명하는 오류 메시지입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)">
          <source>The index of the abandoned mutex in the array of wait handles if the exception is thrown for the <ph id="ph1">&lt;see cref="Overload:System.Threading.WaitHandle.WaitAny" /&gt;</ph> method, or –1 if the exception is thrown for the <ph id="ph2">&lt;see cref="Overload:System.Threading.WaitHandle.WaitOne" /&gt;</ph> or <ph id="ph3">&lt;see cref="Overload:System.Threading.WaitHandle.WaitAll" /&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="Overload:System.Threading.WaitHandle.WaitAny" /&gt;</ph> 메서드에 대해 예외가 throw되면 대기 핸들의 배열에서 중단된 뮤텍스의 인덱스이고, <ph id="ph2">&lt;see cref="Overload:System.Threading.WaitHandle.WaitOne" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="Overload:System.Threading.WaitHandle.WaitAll" /&gt;</ph> 메서드에 대해 예외가 throw되면 –1입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph> object that represents the abandoned mutex.</source>
          <target state="translated">중단된 뮤텍스를 나타내는 <ph id="ph1">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph> class with a specified error message, the index of the abandoned mutex, if applicable, and the abandoned mutex.</source>
          <target state="translated">지정된 오류 메시지, 중단된 뮤텍스의 인덱스 및 중단된 뮤텍스(해당 사항이 있을 경우)를 사용하여 <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)">
          <source>The content of <ph id="ph1">`message`</ph> is intended to be understood by humans.</source>
          <target state="translated"><ph id="ph1">`message`</ph>의 내용은 사용자의 이해를 돕기 위한 것입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> initialized with this constructor.</source>
          <target state="translated">다음 표에서의 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> 이 생성자를 사용 하 여 초기화 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)">
          <source>Property</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)">
          <source>Value</source>
          <target state="translated">값</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)">
          <source><ph id="ph1">`message`</ph>.</source>
          <target state="translated"><ph id="ph1">`message`</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)">
          <source><ph id="ph1">`handle`</ph>.</source>
          <target state="translated"><ph id="ph1">`handle`</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)">
          <source><ph id="ph1">`location`</ph>.</source>
          <target state="translated"><ph id="ph1">`location`</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source>An error message that explains the reason for the exception.</source>
          <target state="translated">예외에 대한 이유를 설명하는 오류 메시지입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">현재 예외의 원인인 예외입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>inner<ept id="p1">&lt;/c&gt;</ept> parameter is not <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>inner<ept id="p1">&lt;/c&gt;</ept> 매개 변수가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이 아니면 현재 예외는 내부 예외를 처리하는 <ph id="ph2">&lt;see langword="catch" /&gt;</ph> 블록에서 발생합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source>The index of the abandoned mutex in the array of wait handles if the exception is thrown for the <ph id="ph1">&lt;see cref="Overload:System.Threading.WaitHandle.WaitAny" /&gt;</ph> method, or –1 if the exception is thrown for the <ph id="ph2">&lt;see cref="Overload:System.Threading.WaitHandle.WaitOne" /&gt;</ph> or <ph id="ph3">&lt;see cref="Overload:System.Threading.WaitHandle.WaitAll" /&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="Overload:System.Threading.WaitHandle.WaitAny" /&gt;</ph> 메서드에 대해 예외가 throw되면 대기 핸들의 배열에서 중단된 뮤텍스의 인덱스이고, <ph id="ph2">&lt;see cref="Overload:System.Threading.WaitHandle.WaitOne" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="Overload:System.Threading.WaitHandle.WaitAll" /&gt;</ph> 메서드에 대해 예외가 throw되면 –1입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph> object that represents the abandoned mutex.</source>
          <target state="translated">중단된 뮤텍스를 나타내는 <ph id="ph1">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph> class with a specified error message, the inner exception, the index for the abandoned mutex, if applicable, and a <ph id="ph2">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph> object that represents the mutex.</source>
          <target state="translated">지정된 오류 메시지, 내부 예외, 중단된 뮤텍스의 인덱스 및 뮤텍스를 나타내는 <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph> 개체(해당 사항이 있을 경우)를 사용하여 <ph id="ph2">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source>The content of <ph id="ph1">`message`</ph> is a text string intended to inform the user about the exception.</source>
          <target state="translated">내용을 <ph id="ph1">`message`</ph> 텍스트 문자열 하기 위한 용도가 예외에 대 한 사용자에 게 알립니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">이전 예외의 직접적인 결과로 throw되는 예외의 <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 속성에는 이전 예외에 대한 참조가 들어 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id="ph2">`null`</ph> if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 속성은 생성자에 전달되는 값과 동일한 값을 반환하며, <ph id="ph2">`null`</ph> 속성이 생성자에 내부 예외 값을 제공하지 않는 경우에는 <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> initialized with this constructor.</source>
          <target state="translated">다음 표에서의 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> 이 생성자를 사용 하 여 초기화 합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source>Property</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source>Value</source>
          <target state="translated">값</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source><ph id="ph1">`inner`</ph>.</source>
          <target state="translated"><ph id="ph1">`inner`</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source><ph id="ph1">`message`</ph>.</source>
          <target state="translated"><ph id="ph1">`message`</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source><ph id="ph1">`handle`</ph>.</source>
          <target state="translated"><ph id="ph1">`handle`</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source><ph id="ph1">`location`</ph>.</source>
          <target state="translated"><ph id="ph1">`location`</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="P:System.Threading.AbandonedMutexException.Mutex">
          <source>Gets the abandoned mutex that caused the exception, if known.</source>
          <target state="translated">예외의 발생시킨 중단된 뮤텍스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.AbandonedMutexException.Mutex">
          <source>A <ph id="ph1">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph> object that represents the abandoned mutex, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the abandoned mutex could not be identified.</source>
          <target state="translated">중단된 뮤텍스를 나타내는 <ph id="ph1">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph> 개체이며, 중단된 뮤텍스를 식별할 수 없는 경우에는 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.AbandonedMutexException.Mutex">
          <source>If the exception is thrown on a call to the <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitAny%2A?displayProperty=nameWithType&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Threading.Mutex&gt;</ph> returned is the abandoned mutex with the lowest index in the array of <ph id="ph3">&lt;xref:System.Threading.WaitHandle&gt;</ph> objects that was passed to <ph id="ph4">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph>, or <ph id="ph5">`null`</ph> if the abandoned mutex could not be identified.</source>
          <target state="translated">에 대 한 호출에서 예외가 throw 되는 경우는 <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitAny%2A?displayProperty=nameWithType&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.Threading.Mutex&gt;</ph> 반환 된 배열에서 가장 낮은 인덱스 중단 된 뮤텍스 <ph id="ph3">&lt;xref:System.Threading.WaitHandle&gt;</ph> 개체에 전달 된 <ph id="ph4">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph>, 또는 <ph id="ph5">`null`</ph> 중단 된 뮤텍스 수 없는 경우 식별 됩니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.AbandonedMutexException.Mutex">
          <source>If the exception is thrown on a call to <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;</ph>, this property always returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">에 대 한 호출에는 예외가 있으면 <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;</ph>,이 속성은 항상 반환 <ph id="ph3">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.Threading.AbandonedMutexException.MutexIndex">
          <source>Gets the index of the abandoned mutex that caused the exception, if known.</source>
          <target state="translated">예외의 발생시킨 중단된 뮤텍스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.AbandonedMutexException.MutexIndex">
          <source>The index, in the array of wait handles passed to the <ph id="ph1">&lt;see cref="Overload:System.Threading.WaitHandle.WaitAny" /&gt;</ph> method, of the <ph id="ph2">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph> object that represents the abandoned mutex, or –1 if the index of the abandoned mutex could not be determined.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="Overload:System.Threading.WaitHandle.WaitAny" /&gt;</ph> 메서드에 전달된 대기 핸들의 배열에서 중단된 뮤텍스를 나타내는 <ph id="ph2">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph> 개체의 인덱스이고, 중단된 뮤텍스의 인덱스를 식별할 수 없는 경우에는 –1입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.AbandonedMutexException.MutexIndex">
          <source>If the exception is thrown on a call to the <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitAny%2A?displayProperty=nameWithType&gt;</ph> method, this property returns the index of the abandoned mutex with the lowest index in the array of <ph id="ph2">&lt;xref:System.Threading.WaitHandle&gt;</ph> objects that was passed to <ph id="ph3">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph>, or –1 if the abandoned mutex could not be identified.</source>
          <target state="translated">에 대 한 호출에서 예외가 throw 되는 경우는 <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitAny%2A?displayProperty=nameWithType&gt;</ph> 메서드,이 속성의 인덱스를 반환 중단 된 뮤텍스 최저 인덱스를 가진 배열에 <ph id="ph2">&lt;xref:System.Threading.WaitHandle&gt;</ph> 개체에 전달 된 <ph id="ph3">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph>, 또는 중단 된 뮤텍스를 식별할 수 없는 경우-1입니다. .</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.AbandonedMutexException.MutexIndex">
          <source>If the exception is thrown on a call to <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;</ph>, this property always returns –1.</source>
          <target state="translated">에 대 한 호출에는 예외가 있으면 <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;</ph>,이 속성은 항상-1을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.AbandonedMutexException.MutexIndex">
          <source>The following code example executes a thread that abandons five mutexes.</source>
          <target state="translated">다음 코드 예제에서는 5 개의 뮤텍스를 중단 하는 스레드를 실행 합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.AbandonedMutexException.MutexIndex">
          <source>The abandoned mutexes are used to demonstrate the effects on the <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;</ph> method calls.</source>
          <target state="translated">중단 된 뮤텍스는에 효과 보여 주는 데 사용 되는 <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.AbandonedMutexException.MutexIndex">
          <source>The value of the <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException.MutexIndex%2A&gt;</ph> property is displayed for the <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph> call.</source>
          <target state="translated">값은 <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException.MutexIndex%2A&gt;</ph> 속성에 대해 표시 되는 <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph> 호출 합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.AbandonedMutexException.MutexIndex">
          <source>The call to <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph> is interrupted by one of the abandoned mutexes.</source>
          <target state="translated">에 대 한 호출 <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph> 중단 된 뮤텍스 중 하나에 의해 중단 됩니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.AbandonedMutexException.MutexIndex">
          <source>The other abandoned mutex could still cause an <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> to be thrown by subsequent wait methods.</source>
          <target state="translated">중단 된 뮤텍스 여전히 발생할 수 있는 <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> 후속 대기 메서드에서 throw 됩니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>