<Type Name="HostExecutionContextManager" FullName="System.Threading.HostExecutionContextManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="337b99b403a59e4a7487df4f72ffc3a0d47b18e5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30527387" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HostExecutionContextManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HostExecutionContextManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.HostExecutionContextManager" />
  <TypeSignature Language="VB.NET" Value="Public Class HostExecutionContextManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class HostExecutionContextManager" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>공용 언어 런타임 호스트에서 실행 컨텍스트의 흐름 또는 마이그레이션에 참가할 수 있도록 하는 기능을 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하는 경우 현재 <xref:System.AppDomainManager> 에 대 한 참조가 <xref:System.Threading.HostExecutionContextManager> 에 해당 <xref:System.AppDomainManager.HostExecutionContextManager%2A> 속성을 다음 공용 언어 런타임 관리자에는 호출 될 때마다를 호출는 <xref:System.Threading.ExecutionContext.Run%2A?displayProperty=nameWithType> 호스트가 실행의 흐름에 참여할 수 있도록 메서드가 발생 컨텍스트입니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HostExecutionContextManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.HostExecutionContextManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HostExecutionContextManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Threading.HostExecutionContextManager" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public virtual System.Threading.HostExecutionContext Capture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.HostExecutionContext Capture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.HostExecutionContextManager.Capture" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Capture () As HostExecutionContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::HostExecutionContext ^ Capture();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.HostExecutionContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 스레드에서 호스트 실행 컨텍스트를 캡처합니다.</summary>
        <returns>현재 스레드의 호스트 실행 컨텍스트를 나타내는 <see cref="T:System.Threading.HostExecutionContext" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Threading.HostExecutionContext> 포함 하는 safehandle을 사용 하 여 만들어집니다는 `IUnknown` 현재 스레드를 실행 하는 호스트에 대 한 포인터입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Revert">
      <MemberSignature Language="C#" Value="public virtual void Revert (object previousState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Revert(object previousState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.HostExecutionContextManager.Revert(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Revert (previousState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Revert(System::Object ^ previousState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="previousState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="previousState">복원할 이전 컨텍스트 상태입니다.</param>
        <summary>호스트 실행 컨텍스트를 이전 상태로 복원합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `previousState` 개체에서 반환 해야는 <xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="previousState" />가 <see langword="null" />인 경우  
  
 또는  
  
 현재 스레드에 대해 <paramref name="previousState" />를 만들지 않은 경우  
  
 또는  
  
 <paramref name="previousState" />가 <see cref="T:System.Threading.HostExecutionContext" />의 마지막 상태가 아닌 경우</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</permission>
      </Docs>
    </Member>
    <Member MemberName="SetHostExecutionContext">
      <MemberSignature Language="C#" Value="public virtual object SetHostExecutionContext (System.Threading.HostExecutionContext hostExecutionContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object SetHostExecutionContext(class System.Threading.HostExecutionContext hostExecutionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.HostExecutionContextManager.SetHostExecutionContext(System.Threading.HostExecutionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ SetHostExecutionContext(System::Threading::HostExecutionContext ^ hostExecutionContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostExecutionContext" Type="System.Threading.HostExecutionContext" />
      </Parameters>
      <Docs>
        <param name="hostExecutionContext">설정할 <see cref="T:System.Threading.HostExecutionContext" />입니다.</param>
        <summary>현재 호스트 실행 컨텍스트를 지정한 호스트 실행 컨텍스트로 설정합니다.</summary>
        <returns>
          <see cref="T:System.Threading.HostExecutionContext" />를 이전 상태로 복원하기 위한 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A> 현재에 대 한 호스트 실행 컨텍스트를 설정 하는 메서드 <xref:System.Threading.HostExecutionContext>합니다.  A <xref:System.Threading.HostExecutionContext> 다른에 대 한 인수로 사용 되었던 <xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A> 메서드 호출에서이 메서드에 대 한 매개 변수로 전달할 수 없습니다. 대신를 사용 하 여는 <xref:System.Threading.HostExecutionContext.CreateCopy%2A?displayProperty=nameWithType> 의 복사본을 만드는 메서드는 <xref:System.Threading.HostExecutionContext> 개체를 다음 복사본을 사용 하 여 호스트 실행 컨텍스트를 설정 합니다.  
  
 호출의 <xref:System.Threading.HostExecutionContextManager.Revert%2A> 이 메서드에서 반환 된 개체를 사용 하 여 복원 하는 메서드는 <xref:System.Threading.HostExecutionContext> 를 이전 상태로 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          캡처 작업을 통해 <paramref name="hostExecutionContext" />를 가져오지 않은 경우  
  
 또는  
  
 <paramref name="hostExecutionContext" />가 이전 <see cref="M:System.Threading.HostExecutionContextManager.SetHostExecutionContext(System.Threading.HostExecutionContext)" /> 메서드 호출에 대한 인수로 사용되었습니다.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</permission>
      </Docs>
    </Member>
  </Members>
</Type>