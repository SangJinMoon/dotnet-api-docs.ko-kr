<Type Name="ThreadExceptionEventArgs" FullName="System.Threading.ThreadExceptionEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a54cf75e4e0c0ef07c0b66ac63e218532b41785d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ThreadExceptionEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ThreadExceptionEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ThreadExceptionEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ThreadExceptionEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ThreadExceptionEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Threading.Thread</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b67f1-101">
        <see cref="E:System.Windows.Forms.Application.ThreadException" /> 이벤트에 대한 데이터를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b67f1-101">Provides data for the <see cref="E:System.Windows.Forms.Application.ThreadException" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b67f1-102">A <xref:System.Threading.ThreadExceptionEventArgs> 는 처리 되지 않은 예외가 발생할 때 스레드에 의해 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="b67f1-102">A <xref:System.Threading.ThreadExceptionEventArgs> is created by a thread when an unhandled exception occurs.</span></span> <span data-ttu-id="b67f1-103"><xref:System.Threading.ThreadExceptionEventArgs> 포함 된 <xref:System.Exception> 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="b67f1-103"><xref:System.Threading.ThreadExceptionEventArgs> contains the <xref:System.Exception> that occurred.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b67f1-104">다음 예제에서는 시킬 수 있게는 <xref:System.Windows.Forms.Application.ThreadException> 이벤트를 클릭 하 여 `button1` 폼에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b67f1-104">The following example allows you to raise a <xref:System.Windows.Forms.Application.ThreadException> event by clicking `button1` on a form.</span></span> <span data-ttu-id="b67f1-105">이 예에서는 두 개의 클래스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b67f1-105">The example creates two classes.</span></span> <span data-ttu-id="b67f1-106">`ErrorHandler` 폼와 이벤트를 발생 하는 단추가 클래스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b67f1-106">The `ErrorHandler` class creates the form and the button that raises the event.</span></span> <span data-ttu-id="b67f1-107">`CustomExceptionHandler` 클래스 예외를 처리 하는 메서드를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="b67f1-107">The `CustomExceptionHandler` class provides the methods to handle the exception.</span></span>  
  
 <span data-ttu-id="b67f1-108">`Main` 에 `ErrorHandler` 클래스 코드는 예외 처리, 즉 클래스의 인스턴스로의 새 인스턴스를 만듭니다는 `CustomExceptionHandler`합니다.</span><span class="sxs-lookup"><span data-stu-id="b67f1-108">In `Main` in the `ErrorHandler` class, the code creates a new instance of the exception handling class, that is, an instance of the `CustomExceptionHandler`.</span></span> <span data-ttu-id="b67f1-109">이벤트에 인스턴스가 추가 되는 다음 하 고 응용 프로그램이 실행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b67f1-109">Then the instance is added to the event, and the application is run.</span></span>  
  
 <span data-ttu-id="b67f1-110">에 `OnThreadException` 에서 메서드는 `CustomExceptionHandler` 클래스를 사용 하 여는 `try...catch...finally` 문이 예외를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="b67f1-110">In the `OnThreadException` method in the `CustomExceptionHandler` class, the example uses a `try...catch...finally` statement to process the exception.</span></span> <span data-ttu-id="b67f1-111">`ShowThreadExceptionDialog` 메서드를 표시 하려면 메시지를 작성 하 고 메시지 상자에 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="b67f1-111">The `ShowThreadExceptionDialog` method creates the message to display, and displays it in a message box.</span></span>  
  
 [!code-csharp[Classic ThreadExceptionEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ThreadExceptionEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic ThreadExceptionEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ThreadExceptionEventArgs Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.Thread" />
    <altmember cref="T:System.Threading.ThreadStart" />
    <altmember cref="T:System.Threading.ThreadExceptionEventHandler" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThreadExceptionEventArgs (Exception t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadExceptionEventArgs.#ctor(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (t As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThreadExceptionEventArgs(Exception ^ t);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="t" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="t">
          <span data-ttu-id="b67f1-112">발생한 <see cref="T:System.Exception" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b67f1-112">The <see cref="T:System.Exception" /> that occurred.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b67f1-113">
            <see cref="T:System.Threading.ThreadExceptionEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b67f1-113">Initializes a new instance of the <see cref="T:System.Threading.ThreadExceptionEventArgs" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b67f1-114">다음 예제에서는 시킬 수 있게는 <xref:System.Windows.Forms.Application.ThreadException> 이벤트를 클릭 하 여 `button1` 폼에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b67f1-114">The following example allows you to raise a <xref:System.Windows.Forms.Application.ThreadException> event by clicking `button1` on a form.</span></span> <span data-ttu-id="b67f1-115">이 예에서는 두 개의 클래스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b67f1-115">The example creates two classes.</span></span> <span data-ttu-id="b67f1-116">`ErrorHandler` 폼와 이벤트를 발생 하는 단추가 클래스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b67f1-116">The `ErrorHandler` class creates the form and the button that raises the event.</span></span> <span data-ttu-id="b67f1-117">`CustomExceptionHandler` 클래스 예외를 처리 하는 메서드를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="b67f1-117">The `CustomExceptionHandler` class provides the methods to handle the exception.</span></span>  
  
 <span data-ttu-id="b67f1-118">`Main` 에 `ErrorHandler` 클래스 코드는 예외 처리, 즉 클래스의 인스턴스로의 새 인스턴스를 만듭니다는 `CustomExceptionHandler`합니다.</span><span class="sxs-lookup"><span data-stu-id="b67f1-118">In `Main` in the `ErrorHandler` class, the code creates a new instance of the exception handling class, that is, an instance of the `CustomExceptionHandler`.</span></span> <span data-ttu-id="b67f1-119">이벤트에 인스턴스가 추가 되는 다음 하 고 응용 프로그램이 실행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b67f1-119">Then the instance is added to the event, and the application is run.</span></span>  
  
 <span data-ttu-id="b67f1-120">에 `OnThreadException` 에서 메서드는 `CustomExceptionHandler` 클래스를 사용 하 여는 `try...catch...finally` 문이 예외를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="b67f1-120">In the `OnThreadException` method in the `CustomExceptionHandler` class, the example uses a `try...catch...finally` statement to process the exception.</span></span> <span data-ttu-id="b67f1-121">`ShowThreadExceptionDialog` 메서드를 표시 하려면 메시지를 작성 하 고 메시지 상자에 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="b67f1-121">The `ShowThreadExceptionDialog` method creates the message to display, and displays it in a message box.</span></span>  
  
 [!code-csharp[Classic ThreadExceptionEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ThreadExceptionEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic ThreadExceptionEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ThreadExceptionEventArgs Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Thread" />
        <altmember cref="T:System.Threading.ThreadStart" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Threading.ThreadExceptionEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b67f1-122">발생한 <see cref="T:System.Exception" />을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b67f1-122">Gets the <see cref="T:System.Exception" /> that occurred.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b67f1-123">발생한 <see cref="T:System.Exception" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b67f1-123">The <see cref="T:System.Exception" /> that occurred.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b67f1-124">다음 예제에서는 시킬 수 있게는 <xref:System.Windows.Forms.Application.ThreadException> 이벤트를 클릭 하 여 `button1` 폼에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b67f1-124">The following example allows you to raise a <xref:System.Windows.Forms.Application.ThreadException> event by clicking `button1` on a form.</span></span> <span data-ttu-id="b67f1-125">이 예에서는 두 개의 클래스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b67f1-125">The example creates two classes.</span></span> <span data-ttu-id="b67f1-126">`ErrorHandler` 폼와 이벤트를 발생 하는 단추가 클래스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b67f1-126">The `ErrorHandler` class creates the form and the button that raises the event.</span></span> <span data-ttu-id="b67f1-127">`CustomExceptionHandler` 클래스 예외를 처리 하는 메서드를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="b67f1-127">The `CustomExceptionHandler` class provides the methods to handle the exception.</span></span>  
  
 <span data-ttu-id="b67f1-128">`Main` 에 `ErrorHandler` 클래스 코드는 예외 처리, 즉 클래스의 인스턴스로의 새 인스턴스를 만듭니다는 `CustomExceptionHandler`합니다.</span><span class="sxs-lookup"><span data-stu-id="b67f1-128">In `Main` in the `ErrorHandler` class, the code creates a new instance of the exception handling class, that is, an instance of the `CustomExceptionHandler`.</span></span> <span data-ttu-id="b67f1-129">이벤트에 인스턴스가 추가 되는 다음 하 고 응용 프로그램이 실행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b67f1-129">Then the instance is added to the event, and the application is run.</span></span>  
  
 <span data-ttu-id="b67f1-130">에 `OnThreadException` 에서 메서드는 `CustomExceptionHandler` 클래스를 사용 하 여는 `try...catch...finally` 문이 예외를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="b67f1-130">In the `OnThreadException` method in the `CustomExceptionHandler` class, the example uses a `try...catch...finally` statement to process the exception.</span></span> <span data-ttu-id="b67f1-131">`ShowThreadExceptionDialog` 메서드를 표시 하려면 메시지를 작성 하 고 메시지 상자에 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="b67f1-131">The `ShowThreadExceptionDialog` method creates the message to display, and displays it in a message box.</span></span>  
  
 [!code-csharp[Classic ThreadExceptionEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ThreadExceptionEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic ThreadExceptionEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ThreadExceptionEventArgs Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>