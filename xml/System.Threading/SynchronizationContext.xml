<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SynchronizationContext.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c20592a4a6979435e8a6a981ffd30ce0e7e25f1c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c20592a4a6979435e8a6a981ffd30ce0e7e25f1c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Threading.SynchronizationContext">
          <source>Provides the basic functionality for propagating a synchronization context in various synchronization models.</source>
          <target state="translated">다양한 동기화 모델에서 동기화 컨텍스트를 전파하기 위한 기본 기능을 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SynchronizationContext">
          <source>The <ph id="ph1">&lt;xref:System.Threading.SynchronizationContext&gt;</ph> class is a base class that provides a free-threaded context with no synchronization.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Threading.SynchronizationContext&gt;</ph> 동기화 없는 자유 스레드 컨텍스트를 제공 하는 기본 클래스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SynchronizationContext">
          <source>The purpose of the synchronization model implemented by this class is to allow the internal asynchronous/synchronous operations of the common language runtime to behave properly with different synchronization models.</source>
          <target state="translated">이 클래스에서 구현 하는 동기화 모델 목적은 다른 동기화 모델을 올바르게 동작 하도록 공용 언어 런타임 내부 동기/비동기 작업을 허용 하는 것입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SynchronizationContext">
          <source>This model also simplifies some of the requirements that managed applications have had to follow in order to work correctly under different synchronization environments.</source>
          <target state="translated">이 모델도 일부 관리 되는 요구 사항을 간소화 응용 프로그램에 따라 다른 동기화 환경에서 올바르게 처리 해야 했습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SynchronizationContext">
          <source>Providers of synchronization models can extend this class and provide their own implementations for these methods.</source>
          <target state="translated">동기화 모델의 공급자는이 클래스를 확장 하 고 이러한 방법에 대 한 직접 구현을 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SynchronizationContext">
          <source>For more information about synchronization contexts, see the article <bpt id="p1">[</bpt>It's All About the SynchronizationContext<ept id="p1">](http://msdn.microsoft.com/magazine/gg598924.aspx)</ept> in the MSDN Magazine.</source>
          <target state="translated">동기화 컨텍스트에 대 한 자세한 내용은 문서 참조 <bpt id="p1">[</bpt>the SynchronizationContext에 대 한 모든 것이<ept id="p1">](http://msdn.microsoft.com/magazine/gg598924.aspx)</ept> MSDN Magazine의 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SynchronizationContext">
          <source>Inheritors must have <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /&gt;</ph> and <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /&gt;</ph>.</source>
          <target state="translated">상속자 참고 사항 있어야 <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.#ctor">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.SynchronizationContext" /&gt;</ph> class.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Threading.SynchronizationContext" /&gt;</ph> 클래스의 새 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SynchronizationContext.#ctor">
          <source>The default constructor performs no parameter initialization.</source>
          <target state="translated">기본 생성자 없음 매개 변수 초기화를 수행합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SynchronizationContext.#ctor">
          <source>Inheritors must have <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /&gt;</ph> and <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /&gt;</ph>.</source>
          <target state="translated">상속자 참고 사항 있어야 <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.CreateCopy">
          <source>When overridden in a derived class, creates a copy of the synchronization context.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 동기화 컨텍스트의 복사본을 만듭니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.CreateCopy">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Threading.SynchronizationContext" /&gt;</ph> object.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Threading.SynchronizationContext" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SynchronizationContext.CreateCopy">
          <source>The default implementation returns an empty <ph id="ph1">&lt;xref:System.Threading.SynchronizationContext&gt;</ph> object.</source>
          <target state="translated">기본 구현은 반환 하는 빈 <ph id="ph1">&lt;xref:System.Threading.SynchronizationContext&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.Threading.SynchronizationContext.Current">
          <source>Gets the synchronization context for the current thread.</source>
          <target state="translated">현재 스레드의 동기화 컨텍스트를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.SynchronizationContext.Current">
          <source>A <ph id="ph1">&lt;see cref="T:System.Threading.SynchronizationContext" /&gt;</ph> object representing the current synchronization context.</source>
          <target state="translated">현재 동기화 컨텍스트를 나타내는 <ph id="ph1">&lt;see cref="T:System.Threading.SynchronizationContext" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.SynchronizationContext.Current">
          <source>This property is useful for propagating a synchronization context from one thread to another.</source>
          <target state="translated">이 속성은 다른 스레드 간에 동기화 컨텍스트를 전파 하는 데 유용 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.IsWaitNotificationRequired">
          <source>Determines if wait notification is required.</source>
          <target state="translated">대기 알림이 필요한지 여부를 결정합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.IsWaitNotificationRequired">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if wait notification is required; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">대기 알림이 필요하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.OperationCompleted">
          <source>When overridden in a derived class, responds to the notification that an operation has completed.</source>
          <target state="translated">파생 클래스에서 재정의되면 작업이 완료되었음을 알리는 메시지에 응답합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SynchronizationContext.OperationCompleted">
          <source>The default implementation contains no code.</source>
          <target state="translated">기본 구현에 코드가 없습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SynchronizationContext.OperationCompleted">
          <source>You can optionally override this method to provide code that executes when an operation is complete.</source>
          <target state="translated">필요에 따라 작업이 완료 되었을 때 실행 되는 코드를 제공 하려면이 메서드를 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.OperationStarted">
          <source>When overridden in a derived class, responds to the notification that an operation has started.</source>
          <target state="translated">파생 클래스에서 재정의되면 작업이 시작되었음을 알리는 메시지에 응답합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SynchronizationContext.OperationStarted">
          <source>The default implementation contains no code.</source>
          <target state="translated">기본 구현에 코드가 없습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SynchronizationContext.OperationStarted">
          <source>You can optionally override this method to provide code that executes when an operation starts.</source>
          <target state="translated">필요에 따라 작업이 시작 될 때 실행 되는 코드를 제공 하려면이 메서드를 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.SendOrPostCallback" /&gt;</ph> delegate to call.</source>
          <target state="translated">호출할 <ph id="ph1">&lt;see cref="T:System.Threading.SendOrPostCallback" /&gt;</ph> 대리자입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)">
          <source>The object passed to the delegate.</source>
          <target state="translated">대리자에 전달된 개체입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)">
          <source>When overridden in a derived class, dispatches an asynchronous message to a synchronization context.</source>
          <target state="translated">파생 클래스에서 재정의될 때 비동기 메시지를 동기화 컨텍스트로 디스패치합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Threading.SynchronizationContext.Post%2A&gt;</ph> method starts an asynchronous request to post a message.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Threading.SynchronizationContext.Post%2A&gt;</ph> 메서드는 메시지를 게시 하는 비동기 요청을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.SendOrPostCallback" /&gt;</ph> delegate to call.</source>
          <target state="translated">호출할 <ph id="ph1">&lt;see cref="T:System.Threading.SendOrPostCallback" /&gt;</ph> 대리자입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)">
          <source>The object passed to the delegate.</source>
          <target state="translated">대리자에 전달된 개체입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)">
          <source>When overridden in a derived class, dispatches a synchronous message to a synchronization context.</source>
          <target state="translated">파생 클래스에서 재정의될 때 동기 메시지를 동기화 컨텍스트로 디스패치합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Threading.SynchronizationContext.Send%2A&gt;</ph> method starts a synchronous request to send a message.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Threading.SynchronizationContext.Send%2A&gt;</ph> 메서드 시작 동기 요청 메시지를 보내려고 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)">
          <source>The method was called in a Windows Store app.</source>
          <target state="translated">메서드가 Windows 스토어 응용 프로그램에서 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)">
          <source>The implementation of <ph id="ph1">&lt;see cref="T:System.Threading.SynchronizationContext" /&gt;</ph> for Windows Store apps does not support the <ph id="ph2">&lt;see cref="M:System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Windows 스토어 응용 프로그램에 대한 <ph id="ph1">&lt;see cref="T:System.Threading.SynchronizationContext" /&gt;</ph>의 구현 시 <ph id="ph2">&lt;see cref="M:System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" /&gt;</ph> 메서드를 지원하지 않습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.SetSynchronizationContext(System.Threading.SynchronizationContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.SynchronizationContext" /&gt;</ph> object to be set.</source>
          <target state="translated">설정할 <ph id="ph1">&lt;see cref="T:System.Threading.SynchronizationContext" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.SetSynchronizationContext(System.Threading.SynchronizationContext)">
          <source>Sets the current synchronization context.</source>
          <target state="translated">현재 동기화 컨텍스트를 설정합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SynchronizationContext.SetSynchronizationContext(System.Threading.SynchronizationContext)">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SynchronizationContext.SetSynchronizationContext(System.Threading.SynchronizationContext)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.SetWaitNotificationRequired">
          <source>Sets notification that wait notification is required and prepares the callback method so it can be called more reliably when a wait occurs.</source>
          <target state="translated">대기 알림이 필요하다는 알림을 설정하고 대기가 수행될 때 좀 더 안정적으로 호출될 수 있도록 콜백 메서드를 준비합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> that contains the native operating system handles.</source>
          <target state="translated">네이티브 운영 체제 핸들을 포함하는 <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> 유형의 배열입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to wait for all handles; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to wait for any handle.</source>
          <target state="translated">모든 핸들을 대기하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 임의 핸들을 대기하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)">
          <source>The number of milliseconds to wait, or <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1) to wait indefinitely.</source>
          <target state="translated">대기할 시간(밀리초)이거나, 무기한 대기할 경우 <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph>(-1)입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)">
          <source>Waits for any or all the elements in the specified array to receive a signal.</source>
          <target state="translated">지정된 배열의 임의 또는 모든 요소가 신호를 받기를 기다립니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)">
          <source>The array index of the object that satisfied the wait.</source>
          <target state="translated">대기를 만족한 개체의 배열 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Threading.SynchronizationContext.Wait%2A&gt;</ph> method calls the external declaration <ph id="ph2">&lt;xref:System.Threading.SynchronizationContext.WaitHelper%2A&gt;</ph> to perform the wait activity.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Threading.SynchronizationContext.Wait%2A&gt;</ph> 메서드 호출 외부 선언 <ph id="ph2">&lt;xref:System.Threading.SynchronizationContext.WaitHelper%2A&gt;</ph> 대기 작업을 수행 하기.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)">
          <source>Override the <ph id="ph1">&lt;xref:System.Threading.SynchronizationContext.Wait%2A&gt;</ph> method to change the wait behavior for the synchronization context.</source>
          <target state="translated">재정의 <ph id="ph1">&lt;xref:System.Threading.SynchronizationContext.Wait%2A&gt;</ph> 동기화 컨텍스트에 대 한 대기 동작을 변경 하려면 메서드.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="waitHandles" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="waitHandles" /&gt;</ph>가 null인 경우</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.WaitHelper(System.IntPtr[],System.Boolean,System.Int32)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> that contains the native operating system handles.</source>
          <target state="translated">네이티브 운영 체제 핸들을 포함하는 <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> 유형의 배열입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.WaitHelper(System.IntPtr[],System.Boolean,System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to wait for all handles;  <ph id="ph2">&lt;see langword="false" /&gt;</ph> to wait for any handle.</source>
          <target state="translated">모든 핸들을 대기하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 임의 핸들을 대기하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.WaitHelper(System.IntPtr[],System.Boolean,System.Int32)">
          <source>The number of milliseconds to wait, or <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1) to wait indefinitely.</source>
          <target state="translated">대기할 시간(밀리초)이거나, 무기한 대기할 경우 <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph>(-1)입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.WaitHelper(System.IntPtr[],System.Boolean,System.Int32)">
          <source>Helper function that waits for any or all the elements in the specified array to receive a signal.</source>
          <target state="translated">지정된 배열의 임의 또는 모든 요소가 신호를 받기를 기다리는 도우미 함수입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.WaitHelper(System.IntPtr[],System.Boolean,System.Int32)">
          <source>The array index of the object that satisfied the wait.</source>
          <target state="translated">대기를 만족한 개체의 배열 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SynchronizationContext.WaitHelper(System.IntPtr[],System.Boolean,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Threading.SynchronizationContext.WaitHelper%2A&gt;</ph> is a declaration for an unmanaged external helper function.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Threading.SynchronizationContext.WaitHelper%2A&gt;</ph> 관리 되지 않는 외부 도우미 함수에 대 한 선언입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SynchronizationContext.WaitHelper(System.IntPtr[],System.Boolean,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Threading.SynchronizationContext.WaitHelper%2A&gt;</ph> is called by the <ph id="ph2">&lt;xref:System.Threading.SynchronizationContext.Wait%2A&gt;</ph> method to wait for a signal for the specified operating system handles.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Threading.SynchronizationContext.WaitHelper%2A&gt;</ph> 에 의해 호출 됩니다는 <ph id="ph2">&lt;xref:System.Threading.SynchronizationContext.Wait%2A&gt;</ph> 메서드는 지정 된 운영 체제 핸들에 대 한 신호에 대해 기다려야 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SynchronizationContext.WaitHelper(System.IntPtr[],System.Boolean,System.Int32)">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SynchronizationContext.WaitHelper(System.IntPtr[],System.Boolean,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>