<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ThreadLocal`1.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b0866e1f64c7260da8823cd7e69e0b2646eebf23.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b0866e1f64c7260da8823cd7e69e0b2646eebf23</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadLocal`1">
          <source>Specifies the type of data stored per-thread.</source>
          <target state="translated">스레드별로 저장된 데이터의 형식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Threading.ThreadLocal`1">
          <source>Provides thread-local storage of data.</source>
          <target state="translated">데이터의 스레드 로컬 저장소를 제공합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadLocal`1">
          <source>The following example shows how to use <ph id="ph1">&lt;xref:System.Threading.ThreadLocal%601&gt;</ph>:</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Threading.ThreadLocal%601&gt;</ph>을 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadLocal`1">
          <source>With the exception of <ph id="ph1">&lt;see cref="M:System.Threading.ThreadLocal`1.Dispose" /&gt;</ph>, all public and protected members of <ph id="ph2">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> are thread-safe and may be used concurrently from multiple threads.</source>
          <target state="translated">제외 <ph id="ph1">&lt;see cref="M:System.Threading.ThreadLocal`1.Dispose" /&gt;</ph>모든 공용 및 보호 된 멤버의 <ph id="ph2">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> 는 스레드로부터 안전 하 고 여러 스레드에서 동시에 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadLocal`1">
          <source>The value returned for the <ph id="ph1">&lt;see cref="P:System.Threading.ThreadLocal`1.Value" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Threading.ThreadLocal`1.IsValueCreated" /&gt;</ph> properties is specific for the thread on which the property is accessed.</source>
          <target state="translated">에 대 한 반환 되는 값은 <ph id="ph1">&lt;see cref="P:System.Threading.ThreadLocal`1.Value" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="P:System.Threading.ThreadLocal`1.IsValueCreated" /&gt;</ph> 속성은 속성 액세스할 스레드에 대 한 특정 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.Threading.ThreadLocal`1">
          <source>Initializes a <ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Threading.ThreadLocal`1.#ctor">
          <source>Initializes the <ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ThreadLocal`1.#ctor">
          <source>The default value of <ph id="ph1">`T`</ph> is used to initialize the instance when <ph id="ph2">&lt;xref:System.Threading.ThreadLocal%601.Value%2A&gt;</ph> is accessed for the first time.</source>
          <target state="translated">기본값 <ph id="ph1">`T`</ph> 인스턴스를 초기화 하는 데 사용 되는 경우 <ph id="ph2">&lt;xref:System.Threading.ThreadLocal%601.Value%2A&gt;</ph> 처음으로 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ThreadLocal`1.#ctor">
          <source>This constructor is equivalent to calling the <ph id="ph1">&lt;xref:System.Threading.ThreadLocal%601.%23ctor%28System.Boolean%29&gt;</ph> constructor with a value of <ph id="ph2">`false`</ph> for the <ph id="ph3">`trackAllValues`</ph> argument.</source>
          <target state="translated">이 생성자는 호출 하는 <ph id="ph1">&lt;xref:System.Threading.ThreadLocal%601.%23ctor%28System.Boolean%29&gt;</ph> 생성자의 값을 가진 <ph id="ph2">`false`</ph> 에 대 한는 <ph id="ph3">`trackAllValues`</ph> 인수입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Threading.ThreadLocal`1.#ctor(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to track all values set on the instance and expose them through the <ph id="ph2">&lt;see cref="P:System.Threading.ThreadLocal`1.Values" /&gt;</ph> property; <ph id="ph3">&lt;see langword="false" /&gt;</ph> otherwise.</source>
          <target state="translated">인스턴스에 설정된 모든 값을 추적하고 해당 값을 <ph id="ph2">&lt;see cref="P:System.Threading.ThreadLocal`1.Values" /&gt;</ph> 속성을 통해 노출하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Threading.ThreadLocal`1.#ctor(System.Boolean)">
          <source>Initializes the <ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> instance and specifies whether all values are accessible from any thread.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> 인스턴스를 초기화하고 모든 값을 스레드에서 액세스할 수 있는지 여부를 지정합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ThreadLocal`1.#ctor(System.Boolean)">
          <source>If <ph id="ph1">`trackAllValues`</ph> is <ph id="ph2">`false`</ph>, only the value of this instance for the current thread is accessible.</source>
          <target state="translated">경우 <ph id="ph1">`trackAllValues`</ph> 은 <ph id="ph2">`false`</ph>는 현재 스레드에 대 한이 인스턴스의 값에 액세스만 필요 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ThreadLocal`1.#ctor(System.Boolean)">
          <source>Attempting to use the <ph id="ph1">&lt;xref:System.Threading.ThreadLocal%601.Values%2A&gt;</ph> property to retrieve all values throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> exception.</source>
          <target state="translated">사용 하려고 하면는 <ph id="ph1">&lt;xref:System.Threading.ThreadLocal%601.Values%2A&gt;</ph> 모든를 검색 하는 속성 값을 throw 한 <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> 예외입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Threading.ThreadLocal`1.#ctor(System.Func{`0})">
          <source>The  <ph id="ph1">&lt;see cref="T:System.Func`1" /&gt;</ph> invoked to produce a lazily-initialized value when an attempt is made to retrieve <ph id="ph2">&lt;see cref="P:System.Threading.ThreadLocal`1.Value" /&gt;</ph> without it having been previously initialized.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Func`1" /&gt;</ph>를 이전에 초기화하지 않고 검색하려고 하는 경우 lazily-initialized 값을 생성하기 위해 호출되는 <ph id="ph2">&lt;see cref="P:System.Threading.ThreadLocal`1.Value" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Threading.ThreadLocal`1.#ctor(System.Func{`0})">
          <source>Initializes the <ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> instance with the specified <ph id="ph2">&lt;paramref name="valueFactory" /&gt;</ph> function.</source>
          <target state="translated">지정된 <ph id="ph2">&lt;paramref name="valueFactory" /&gt;</ph> 함수를 사용하여 <ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph>의 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Threading.ThreadLocal`1.#ctor(System.Func{`0})">
          <source><ph id="ph1">&lt;paramref name="valueFactory" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="valueFactory" /&gt;</ph>가 null 참조(Visual Basic의 경우 Nothing)인 경우</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Threading.ThreadLocal`1.#ctor(System.Func{`0},System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Func`1" /&gt;</ph> invoked to produce a lazily-initialized value when an attempt is made to retrieve <ph id="ph2">&lt;see cref="P:System.Threading.ThreadLocal`1.Value" /&gt;</ph> without it having been previously initialized.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Threading.ThreadLocal`1.Value" /&gt;</ph>를 이전에 초기화하지 않고 검색하려고 하는 경우 지연 초기화 값을 생성하기 위해 호출되는 <ph id="ph1">&lt;see cref="T:System.Func`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Threading.ThreadLocal`1.#ctor(System.Func{`0},System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to track all values set on the instance and expose them through the <ph id="ph2">&lt;see cref="P:System.Threading.ThreadLocal`1.Values" /&gt;</ph> property; <ph id="ph3">&lt;see langword="false" /&gt;</ph> otherwise.</source>
          <target state="translated">인스턴스에 설정된 모든 값을 추적하고 해당 값을 <ph id="ph2">&lt;see cref="P:System.Threading.ThreadLocal`1.Values" /&gt;</ph> 속성을 통해 노출하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Threading.ThreadLocal`1.#ctor(System.Func{`0},System.Boolean)">
          <source>Initializes the <ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> instance with the specified <ph id="ph2">&lt;paramref name="valueFactory" /&gt;</ph> function and a flag that indicates whether all values are accessible from any thread.</source>
          <target state="translated">지정된 <ph id="ph2">&lt;paramref name="valueFactory" /&gt;</ph> 함수를 사용하여 <ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> 인스턴스 및 모든 값을 스레드에서 액세스할 수 있는지를 나타내는 플래그를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ThreadLocal`1.#ctor(System.Func{`0},System.Boolean)">
          <source>If <ph id="ph1">`trackAllValues`</ph> is <ph id="ph2">`false`</ph>, only the value of this instance for the current thread is accessible.</source>
          <target state="translated">경우 <ph id="ph1">`trackAllValues`</ph> 은 <ph id="ph2">`false`</ph>는 현재 스레드에 대 한이 인스턴스의 값에 액세스만 필요 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ThreadLocal`1.#ctor(System.Func{`0},System.Boolean)">
          <source>Attempting to use the <ph id="ph1">&lt;xref:System.Threading.ThreadLocal%601.Values%2A&gt;</ph> property to retrieve all values throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> exception.</source>
          <target state="translated">사용 하려고 하면는 <ph id="ph1">&lt;xref:System.Threading.ThreadLocal%601.Values%2A&gt;</ph> 모든를 검색 하는 속성 값을 throw 한 <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> 예외입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Threading.ThreadLocal`1.#ctor(System.Func{`0},System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="valueFactory" /&gt;</ph> is a <ph id="ph2">&lt;see langword="null" /&gt;</ph> reference (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="valueFactory" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph> 참조(Visual Basic의 경우 <ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>)인 경우</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="T:System.Threading.ThreadLocal`1">
          <source>Releases the resources used by this <ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> instance.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> 인스턴스에서 사용하는 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Threading.ThreadLocal`1.Dispose">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> 클래스의 현재 인스턴스에서 사용하는 모든 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ThreadLocal`1.Dispose">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Threading.ThreadLocal%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> 사용을 마치면 <ph id="ph2">&lt;xref:System.Threading.ThreadLocal%601&gt;</ph>를 호출합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ThreadLocal`1.Dispose">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the <ph id="ph2">&lt;xref:System.Threading.ThreadLocal%601&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> 메서드를 사용하면 <ph id="ph2">&lt;xref:System.Threading.ThreadLocal%601&gt;</ph>를 사용할 수 없게 됩니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ThreadLocal`1.Dispose">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Threading.ThreadLocal%601&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Threading.ThreadLocal%601&gt;</ph> was occupying.</source>
          <target state="translated">호출한 후 <ph id="ph1">`Dispose`</ph>에 대 한 모든 참조를 해제 해야는 <ph id="ph2">&lt;xref:System.Threading.ThreadLocal%601&gt;</ph> 가비지 수집기는 메모리를 회수할 수 있도록 하는 <ph id="ph3">&lt;xref:System.Threading.ThreadLocal%601&gt;</ph> 차지한 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ThreadLocal`1.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> 및 <bpt id="p2">[</bpt>Dispose 메서드를 구현<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ThreadLocal`1.Dispose">
          <source>Always call <ph id="ph1">`Dispose`</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Threading.ThreadLocal%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph>에 대한 마지막 참조를 해제하기 전에 반드시 <ph id="ph2">&lt;xref:System.Threading.ThreadLocal%601&gt;</ph>를 호출하십시오.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ThreadLocal`1.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Threading.ThreadLocal%601&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">이렇게 하지 않으면 가비지 수집기가 <ph id="ph1">&lt;xref:System.Threading.ThreadLocal%601&gt;</ph> 개체의 <ph id="ph2">`Finalize`</ph> 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Threading.ThreadLocal`1.Dispose(System.Boolean)">
          <source>A Boolean value that indicates whether this method is being called due to a call to <ph id="ph1">&lt;see cref="M:System.Threading.ThreadLocal`1.Dispose" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Threading.ThreadLocal`1.Dispose" /&gt;</ph> 호출로 인해 이 메서드가 호출되는지 여부를 나타내는 부울 값입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Threading.ThreadLocal`1.Dispose(System.Boolean)">
          <source>Releases the resources used by this <ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> instance.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> 인스턴스에서 사용하는 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ThreadLocal`1.Dispose(System.Boolean)">
          <source>Unlike most of the members of <ph id="ph1">&lt;xref:System.Threading.ThreadLocal%601&gt;</ph>, this method is not thread-safe.</source>
          <target state="translated">대부분의 멤버의 달리 <ph id="ph1">&lt;xref:System.Threading.ThreadLocal%601&gt;</ph>,이 메서드는 스레드로부터 안전 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Threading.ThreadLocal`1.Finalize">
          <source>Releases the resources used by this <ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> instance.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> 인스턴스에서 사용하는 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Threading.ThreadLocal`1.IsValueCreated">
          <source>Gets whether <ph id="ph1">&lt;see cref="P:System.Threading.ThreadLocal`1.Value" /&gt;</ph> is initialized on the current thread.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Threading.ThreadLocal`1.Value" /&gt;</ph>가 현재 스레드에서 초기화되었는지 여부를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.ThreadLocal`1.IsValueCreated">
          <source>true if <ph id="ph1">&lt;see cref="P:System.Threading.ThreadLocal`1.Value" /&gt;</ph> is initialized on the current thread; otherwise false.</source>
          <target state="translated">현재 스레드에서 <ph id="ph1">&lt;see cref="P:System.Threading.ThreadLocal`1.Value" /&gt;</ph>가 초기화되었으면 true이고, 그렇지 않으면 false입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Threading.ThreadLocal`1.IsValueCreated">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> instance has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> 인스턴스가 삭제되었습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Threading.ThreadLocal`1.ToString">
          <source>Creates and returns a string representation of this instance for the current thread.</source>
          <target state="translated">현재 스레드에 대한 이 인스턴스의 문자열 표현을 만들고 반환합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Threading.ThreadLocal`1.ToString">
          <source>The result of calling <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> on the <ph id="ph2">&lt;see cref="P:System.Threading.ThreadLocal`1.Value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph>에서 <ph id="ph2">&lt;see cref="P:System.Threading.ThreadLocal`1.Value" /&gt;</ph>을 호출한 결과입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ThreadLocal`1.ToString">
          <source>Calling this method forces initialization for the current thread, as is the case with accessing <ph id="ph1">&lt;xref:System.Threading.ThreadLocal%601.Value%2A&gt;</ph> directly.</source>
          <target state="translated">이 메서드를 호출에 액세스 하는 경우 처럼 현재 스레드에 대 한 초기화를 강제로 <ph id="ph1">&lt;xref:System.Threading.ThreadLocal%601.Value%2A&gt;</ph> 직접 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Threading.ThreadLocal`1.ToString">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> instance has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> 인스턴스가 삭제되었습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Threading.ThreadLocal`1.ToString">
          <source>The <ph id="ph1">&lt;see cref="P:System.Threading.ThreadLocal`1.Value" /&gt;</ph> for the current thread is a null reference (Nothing in Visual Basic).</source>
          <target state="translated">현재 스레드의 <ph id="ph1">&lt;see cref="P:System.Threading.ThreadLocal`1.Value" /&gt;</ph>는 null 참조입니다(Visual Basic에서는 Nothing).</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Threading.ThreadLocal`1.ToString">
          <source>The initialization function attempted to reference <ph id="ph1">&lt;see cref="P:System.Threading.ThreadLocal`1.Value" /&gt;</ph> recursively.</source>
          <target state="translated">초기화 함수는 <ph id="ph1">&lt;see cref="P:System.Threading.ThreadLocal`1.Value" /&gt;</ph>를 재귀적으로 참조하려고 했습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Threading.ThreadLocal`1.ToString">
          <source>No default constructor is provided and no value factory is supplied.</source>
          <target state="translated">기본 생성자가 제공되지 않으며 값 팩터리가 제공되지 않습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.Threading.ThreadLocal`1.Value">
          <source>Gets or sets the value of this instance for the current thread.</source>
          <target state="translated">현재 인스턴스에 대한 이 인스턴스의 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.ThreadLocal`1.Value">
          <source>Returns an instance of the object that this ThreadLocal is responsible for initializing.</source>
          <target state="translated">이 ThreadLocal이 초기화를 담당하는 개체의 인스턴스를 반환합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.ThreadLocal`1.Value">
          <source>If this instance was not previously initialized for the current thread, accessing <ph id="ph1">&lt;xref:System.Threading.ThreadLocal%601.Value%2A&gt;</ph> will attempt to initialize it.</source>
          <target state="translated">이 인스턴스가 현재 스레드에 대 한 이전에 초기화 되지 않은 경우 액세스 <ph id="ph1">&lt;xref:System.Threading.ThreadLocal%601.Value%2A&gt;</ph> 초기화를 시도 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.ThreadLocal`1.Value">
          <source>If an initialization function was supplied during the construction, that initialization will happen by invoking the function to retrieve the initial value for <ph id="ph1">&lt;xref:System.Threading.ThreadLocal%601.Value%2A&gt;</ph>.</source>
          <target state="translated">에 대 한 초기 값을 검색 하는 함수를 호출 하 여이 해당 초기화가 발생 초기화 함수를 생성 하는 동안 제공 하는 경우 <ph id="ph1">&lt;xref:System.Threading.ThreadLocal%601.Value%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.ThreadLocal`1.Value">
          <source>Otherwise, the default value of will be used.</source>
          <target state="translated">그렇지 않은 경우 기본값인 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.ThreadLocal`1.Value">
          <source>If an exception is thrown, that exception is cached and thrown on each subsequent access of the property.</source>
          <target state="translated">예외가 throw 되 면 해당 예외 캐시 되 고 각 후속 액세스 속성에 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Threading.ThreadLocal`1.Value">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> instance has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> 인스턴스가 삭제되었습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Threading.ThreadLocal`1.Value">
          <source>The initialization function attempted to reference <ph id="ph1">&lt;see cref="P:System.Threading.ThreadLocal`1.Value" /&gt;</ph> recursively.</source>
          <target state="translated">초기화 함수는 <ph id="ph1">&lt;see cref="P:System.Threading.ThreadLocal`1.Value" /&gt;</ph>를 재귀적으로 참조하려고 했습니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="P:System.Threading.ThreadLocal`1.Value">
          <source>No default constructor is provided and no value factory is supplied.</source>
          <target state="translated">기본 생성자가 제공되지 않으며 값 팩터리가 제공되지 않습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Threading.ThreadLocal`1.Values">
          <source>Gets a list for all of the values currently stored by all of the threads that have accessed this instance.</source>
          <target state="translated">이 인스턴스에 액세스한 모든 스레드가 현재 저장한 모든 값의 목록을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.ThreadLocal`1.Values">
          <source>A list for all of the values currently stored by all of the threads that have accessed this instance.</source>
          <target state="translated">이 인스턴스에 액세스한 모든 스레드가 현재 저장한 모든 값의 목록입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="P:System.Threading.ThreadLocal`1.Values">
          <source>Values stored by all threads are not available because this instance was initialized with the <ph id="ph1">&lt;paramref name="trackAllValues" /&gt;</ph> argument set to <ph id="ph2">&lt;see langword="false" /&gt;</ph> in the call to a class constructor.</source>
          <target state="translated">클래스 생성자에 대한 호출에서 <ph id="ph2">&lt;see langword="false" /&gt;</ph>로 설정된 <ph id="ph1">&lt;paramref name="trackAllValues" /&gt;</ph> 인수를 사용하여 이 인스턴스를 초기화했기 때문에 모든 스레드에서 저장한 값을 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="P:System.Threading.ThreadLocal`1.Values">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> instance has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> 인스턴스가 삭제되었습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>