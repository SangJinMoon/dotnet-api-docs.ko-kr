<Type Name="ThreadState" FullName="System.Threading.ThreadState">
  <TypeSignature Language="C#" Value="public enum ThreadState" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed ThreadState extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ThreadState" />
  <TypeSignature Language="VB.NET" Value="Public Enum ThreadState" />
  <TypeSignature Language="C++ CLI" Value="public enum class ThreadState" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Thread</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="37a52-101"><see cref="T:System.Threading.Thread" />의 실행 상태를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="37a52-101">Specifies the execution states of a <see cref="T:System.Threading.Thread" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a52-102"><xref:System.Threading.ThreadState> 일부에만 관심 열거형은 디버깅 시나리오입니다.</span><span class="sxs-lookup"><span data-stu-id="37a52-102">The <xref:System.Threading.ThreadState> enumeration is of interest only in a few debugging scenarios.</span></span> <span data-ttu-id="37a52-103">코드 스레드 활동을 동기화 할 스레드 상태를 사용해 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="37a52-103">Your code should never use the thread state to synchronize the activities of threads.</span></span>  
  
 <span data-ttu-id="37a52-104"><xref:System.Threading.ThreadState> 일련의 스레드에 대 한 모든 가능한 실행 상태를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="37a52-104"><xref:System.Threading.ThreadState> defines a set of all possible execution states for threads.</span></span> <span data-ttu-id="37a52-105">만든 스레드는 종료 될 때까지 상태 중 하나 이상에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="37a52-105">Once a thread is created, it is in at least one of the states until it terminates.</span></span> <span data-ttu-id="37a52-106">공용 언어 런타임 내에서 만들어진 스레드는 초기는 `Unstarted` 상태인을 런타임에 제공 되는 외부 스레드에 이미 있는 반면는 `Running` 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="37a52-106">Threads created within the common language runtime are initially in the `Unstarted` state, while external threads that come into the runtime are already in the `Running` state.</span></span> <span data-ttu-id="37a52-107">`Unstarted` 스레드를 전환 되는 `Running` 호출 하 여 상태 <xref:System.Threading.Thread.Start%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="37a52-107">An `Unstarted` thread is transitioned into the `Running` state by calling <xref:System.Threading.Thread.Start%2A>.</span></span> <span data-ttu-id="37a52-108">모든 조합의 `ThreadState` 유효한 값은; 모두에 스레드 수 없습니다. 예를 들어는 `Aborted` 및 `Unstarted` 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="37a52-108">Not all combinations of `ThreadState` values are valid; for example, a thread cannot be in both the `Aborted` and `Unstarted` states.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="37a52-109">두 개의 스레드 상태 열거형<xref:System.Threading.ThreadState?displayProperty=nameWithType> 및 <xref:System.Diagnostics.ThreadState?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="37a52-109">There are two thread state enumerations,<xref:System.Threading.ThreadState?displayProperty=nameWithType> and <xref:System.Diagnostics.ThreadState?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="37a52-110">다음 표에서 상태 변경이 발생 하는 작업을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="37a52-110">The following table shows the actions that cause a change of state.</span></span>  
  
|<span data-ttu-id="37a52-111">작업</span><span class="sxs-lookup"><span data-stu-id="37a52-111">Action</span></span>|<span data-ttu-id="37a52-112">ThreadState</span><span class="sxs-lookup"><span data-stu-id="37a52-112">ThreadState</span></span>|  
|------------|-----------------|  
|<span data-ttu-id="37a52-113">공용 언어 런타임 내에서 스레드가 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="37a52-113">A thread is created within the common language runtime.</span></span>|<span data-ttu-id="37a52-114">시작 되지 않은</span><span class="sxs-lookup"><span data-stu-id="37a52-114">Unstarted</span></span>|  
|<span data-ttu-id="37a52-115">다른 스레드 호출에서 <xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType> 새 스레드 및 호출에 메서드를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="37a52-115">Another thread calls the <xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType> method on the new thread, and the call returns.</span></span><br /><br /> <span data-ttu-id="37a52-116"><xref:System.Threading.Thread.Start%2A> 새 스레드가 실행을 시작할 때까지 메서드는 반환 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="37a52-116">The <xref:System.Threading.Thread.Start%2A> method does not return until the new thread has started running.</span></span> <span data-ttu-id="37a52-117">어느 시점 새 스레드 실행을 시작 합니다를 호출 하는 동안 알 수 있는 방법이 없는 <xref:System.Threading.Thread.Start%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="37a52-117">There is no way to know at what point the new thread will start running, during the call to <xref:System.Threading.Thread.Start%2A>.</span></span>|<span data-ttu-id="37a52-118">실행 중</span><span class="sxs-lookup"><span data-stu-id="37a52-118">Running</span></span>|  
|<span data-ttu-id="37a52-119">스레드 호출 <xref:System.Threading.Thread.Sleep%2A></span><span class="sxs-lookup"><span data-stu-id="37a52-119">The thread calls <xref:System.Threading.Thread.Sleep%2A></span></span>|<span data-ttu-id="37a52-120">WaitSleepJoin</span><span class="sxs-lookup"><span data-stu-id="37a52-120">WaitSleepJoin</span></span>|  
|<span data-ttu-id="37a52-121">스레드가 다른 개체에서 <xref:System.Threading.Monitor.Wait%2A>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="37a52-121">The thread calls <xref:System.Threading.Monitor.Wait%2A> on another object.</span></span>|<span data-ttu-id="37a52-122">WaitSleepJoin</span><span class="sxs-lookup"><span data-stu-id="37a52-122">WaitSleepJoin</span></span>|  
|<span data-ttu-id="37a52-123">스레드가 다른 스레드에서 <xref:System.Threading.Thread.Join%2A>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="37a52-123">The thread calls <xref:System.Threading.Thread.Join%2A> on another thread.</span></span>|<span data-ttu-id="37a52-124">WaitSleepJoin</span><span class="sxs-lookup"><span data-stu-id="37a52-124">WaitSleepJoin</span></span>|  
|<span data-ttu-id="37a52-125">다른 스레드 호출 <xref:System.Threading.Thread.Interrupt%2A></span><span class="sxs-lookup"><span data-stu-id="37a52-125">Another thread calls <xref:System.Threading.Thread.Interrupt%2A></span></span>|<span data-ttu-id="37a52-126">실행 중</span><span class="sxs-lookup"><span data-stu-id="37a52-126">Running</span></span>|  
|<span data-ttu-id="37a52-127">다른 스레드 호출 <xref:System.Threading.Thread.Suspend%2A></span><span class="sxs-lookup"><span data-stu-id="37a52-127">Another thread calls <xref:System.Threading.Thread.Suspend%2A></span></span>|<span data-ttu-id="37a52-128">SuspendRequested</span><span class="sxs-lookup"><span data-stu-id="37a52-128">SuspendRequested</span></span>|  
|<span data-ttu-id="37a52-129">스레드가 <xref:System.Threading.Thread.Suspend%2A> 요청에 응답합니다.</span><span class="sxs-lookup"><span data-stu-id="37a52-129">The thread responds to a <xref:System.Threading.Thread.Suspend%2A> request.</span></span>|<span data-ttu-id="37a52-130">Suspended</span><span class="sxs-lookup"><span data-stu-id="37a52-130">Suspended</span></span>|  
|<span data-ttu-id="37a52-131">다른 스레드 호출 <xref:System.Threading.Thread.Resume%2A></span><span class="sxs-lookup"><span data-stu-id="37a52-131">Another thread calls <xref:System.Threading.Thread.Resume%2A></span></span>|<span data-ttu-id="37a52-132">실행 중</span><span class="sxs-lookup"><span data-stu-id="37a52-132">Running</span></span>|  
|<span data-ttu-id="37a52-133">다른 스레드 호출 <xref:System.Threading.Thread.Abort%2A></span><span class="sxs-lookup"><span data-stu-id="37a52-133">Another thread calls <xref:System.Threading.Thread.Abort%2A></span></span>|<span data-ttu-id="37a52-134">AbortRequested</span><span class="sxs-lookup"><span data-stu-id="37a52-134">AbortRequested</span></span>|  
|<span data-ttu-id="37a52-135">스레드가 <xref:System.Threading.Thread.Abort%2A> 요청에 응답합니다.</span><span class="sxs-lookup"><span data-stu-id="37a52-135">The thread responds to a <xref:System.Threading.Thread.Abort%2A> request.</span></span>|<span data-ttu-id="37a52-136">중지됨</span><span class="sxs-lookup"><span data-stu-id="37a52-136">Stopped</span></span>|  
|<span data-ttu-id="37a52-137">스레드가 종료 됩니다.</span><span class="sxs-lookup"><span data-stu-id="37a52-137">A thread is terminated.</span></span>|<span data-ttu-id="37a52-138">중지됨</span><span class="sxs-lookup"><span data-stu-id="37a52-138">Stopped</span></span>|  
  
 <span data-ttu-id="37a52-139">위에서 설명한 상태 외에 `Background` 를 배경이 나 전경에서 스레드가 실행 되 고 있는지 여부를 나타내는 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="37a52-139">In addition to the states noted above, there is also the `Background` state, which indicates whether the thread is running in the background or foreground.</span></span>  
  
 <span data-ttu-id="37a52-140">스레드는 한 번에 둘 이상의 상태일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="37a52-140">A thread can be in more than one state at a given time.</span></span> <span data-ttu-id="37a52-141">스레드가에 대 한 호출에서 차단 된 경우 등 <xref:System.Threading.Monitor.Wait%2A>, 다른 스레드 호출 <xref:System.Threading.Thread.Abort%2A> 에 차단 된 스레드는 차단 된 스레드가 모두 됩니다는 `WaitSleepJoin` 및 `AbortRequested` 동시에 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="37a52-141">For example, if a thread is blocked on a call to <xref:System.Threading.Monitor.Wait%2A>, and another thread calls <xref:System.Threading.Thread.Abort%2A> on the blocked thread, the blocked thread will be in both the `WaitSleepJoin` and the `AbortRequested` states at the same time.</span></span> <span data-ttu-id="37a52-142">이 경우 스레드가에 대 한 호출에서 반환 되는 즉시 <xref:System.Threading.Monitor.Wait%2A> 아니거나 중단 되 면 수신는 <xref:System.Threading.ThreadAbortException> 중단 하려면.</span><span class="sxs-lookup"><span data-stu-id="37a52-142">In this case, as soon as the thread returns from the call to <xref:System.Threading.Monitor.Wait%2A> or is interrupted, it will receive the <xref:System.Threading.ThreadAbortException> to begin aborting.</span></span>  
  
 <span data-ttu-id="37a52-143"><xref:System.Threading.Thread.ThreadState%2A?displayProperty=nameWithType> 스레드 속성은 스레드의 현재 상태를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="37a52-143">The <xref:System.Threading.Thread.ThreadState%2A?displayProperty=nameWithType> property of a thread provides the current state of a thread.</span></span> <span data-ttu-id="37a52-144">응용 프로그램 스레드가 실행 되 고 있는지 확인 하는 비트 마스크를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="37a52-144">Applications must use a bitmask to determine whether a thread is running.</span></span> <span data-ttu-id="37a52-145">에 대 한 값이 이후 `Running` 영 (0), 스레드가 같은 C# 코드를 사용 하 여 실행 중인지 여부를 테스트 `(myThread.ThreadState & (ThreadState.Stopped | ThreadState.Unstarted)) == 0` 또는 Visual Basic 코드와 같은 `(myThread.ThreadState And (ThreadState.Stopped Or ThreadState.Unstarted)) = 0`합니다.</span><span class="sxs-lookup"><span data-stu-id="37a52-145">Since the value for `Running` is zero (0), test whether a thread is running by using C# code such as `(myThread.ThreadState & (ThreadState.Stopped | ThreadState.Unstarted)) == 0` or Visual Basic code such as `(myThread.ThreadState And (ThreadState.Stopped Or ThreadState.Unstarted)) = 0`.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.Thread" />
  </Docs>
  <Members>
    <Member MemberName="Aborted">
      <MemberSignature Language="C#" Value="Aborted" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState Aborted = int32(256)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.Aborted" />
      <MemberSignature Language="VB.NET" Value="Aborted" />
      <MemberSignature Language="C++ CLI" Value="Aborted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary><span data-ttu-id="37a52-146">스레드 상태에 <see cref="F:System.Threading.ThreadState.AbortRequested" />가 포함되어 있고 스레드가 작동하지 않지만 상태가 아직 <see cref="F:System.Threading.ThreadState.Stopped" />로 변경되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="37a52-146">The thread state includes <see cref="F:System.Threading.ThreadState.AbortRequested" /> and the thread is now dead, but its state has not yet changed to <see cref="F:System.Threading.ThreadState.Stopped" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="AbortRequested">
      <MemberSignature Language="C#" Value="AbortRequested" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState AbortRequested = int32(128)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.AbortRequested" />
      <MemberSignature Language="VB.NET" Value="AbortRequested" />
      <MemberSignature Language="C++ CLI" Value="AbortRequested" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>128</MemberValue>
      <Docs>
        <summary><span data-ttu-id="37a52-147">스레드에 <see cref="M:System.Threading.Thread.Abort(System.Object)" /> 메서드가 호출되었지만 해당 스레드는 자신을 종결시키려는 보류된 <see cref="T:System.Threading.ThreadAbortException" />을 받지 못했습니다.</span><span class="sxs-lookup"><span data-stu-id="37a52-147">The <see cref="M:System.Threading.Thread.Abort(System.Object)" /> method has been invoked on the thread, but the thread has not yet received the pending <see cref="T:System.Threading.ThreadAbortException" /> that will attempt to terminate it.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Background">
      <MemberSignature Language="C#" Value="Background" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState Background = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.Background" />
      <MemberSignature Language="VB.NET" Value="Background" />
      <MemberSignature Language="C++ CLI" Value="Background" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="37a52-148">해당 스레드는 전경 스레드와 반대인 배경 스레드로 실행됩니다.</span><span class="sxs-lookup"><span data-stu-id="37a52-148">The thread is being executed as a background thread, as opposed to a foreground thread.</span></span> <span data-ttu-id="37a52-149">이 상태는 <see cref="P:System.Threading.Thread.IsBackground" /> 속성을 설정하여 제어합니다.</span><span class="sxs-lookup"><span data-stu-id="37a52-149">This state is controlled by setting the <see cref="P:System.Threading.Thread.IsBackground" /> property.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Running">
      <MemberSignature Language="C#" Value="Running" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState Running = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.Running" />
      <MemberSignature Language="VB.NET" Value="Running" />
      <MemberSignature Language="C++ CLI" Value="Running" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="37a52-150">해당 스레드가 차단되지 않고 시작되었고 보류된 <see cref="T:System.Threading.ThreadAbortException" />이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="37a52-150">The thread has been started, it is not blocked, and there is no pending <see cref="T:System.Threading.ThreadAbortException" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Stopped">
      <MemberSignature Language="C#" Value="Stopped" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState Stopped = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.Stopped" />
      <MemberSignature Language="VB.NET" Value="Stopped" />
      <MemberSignature Language="C++ CLI" Value="Stopped" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary><span data-ttu-id="37a52-151">스레드가 중지되었습니다.</span><span class="sxs-lookup"><span data-stu-id="37a52-151">The thread has stopped.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="StopRequested">
      <MemberSignature Language="C#" Value="StopRequested" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState StopRequested = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.StopRequested" />
      <MemberSignature Language="VB.NET" Value="StopRequested" />
      <MemberSignature Language="C++ CLI" Value="StopRequested" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="37a52-152">스레드를 중지하도록 요청했습니다.</span><span class="sxs-lookup"><span data-stu-id="37a52-152">The thread is being requested to stop.</span></span> <span data-ttu-id="37a52-153">이는 내부 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="37a52-153">This is for internal use only.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Suspended">
      <MemberSignature Language="C#" Value="Suspended" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState Suspended = int32(64)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.Suspended" />
      <MemberSignature Language="VB.NET" Value="Suspended" />
      <MemberSignature Language="C++ CLI" Value="Suspended" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>64</MemberValue>
      <Docs>
        <summary><span data-ttu-id="37a52-154">스레드가 일시 중단되었습니다.</span><span class="sxs-lookup"><span data-stu-id="37a52-154">The thread has been suspended.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="SuspendRequested">
      <MemberSignature Language="C#" Value="SuspendRequested" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState SuspendRequested = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.SuspendRequested" />
      <MemberSignature Language="VB.NET" Value="SuspendRequested" />
      <MemberSignature Language="C++ CLI" Value="SuspendRequested" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="37a52-155">스레드를 일시 중단하도록 요청하고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="37a52-155">The thread is being requested to suspend.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Unstarted">
      <MemberSignature Language="C#" Value="Unstarted" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState Unstarted = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.Unstarted" />
      <MemberSignature Language="VB.NET" Value="Unstarted" />
      <MemberSignature Language="C++ CLI" Value="Unstarted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary><span data-ttu-id="37a52-156">스레드에 <see cref="M:System.Threading.Thread.Start" /> 메서드가 호출되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="37a52-156">The <see cref="M:System.Threading.Thread.Start" /> method has not been invoked on the thread.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="WaitSleepJoin">
      <MemberSignature Language="C#" Value="WaitSleepJoin" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState WaitSleepJoin = int32(32)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.WaitSleepJoin" />
      <MemberSignature Language="VB.NET" Value="WaitSleepJoin" />
      <MemberSignature Language="C++ CLI" Value="WaitSleepJoin" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary><span data-ttu-id="37a52-157">스레드가 차단되었습니다.</span><span class="sxs-lookup"><span data-stu-id="37a52-157">The thread is blocked.</span></span> <span data-ttu-id="37a52-158">이는 <see cref="M:System.Threading.Thread.Sleep(System.Int32)" /> 또는 <see cref="M:System.Threading.Thread.Join" />을 호출하거나, <see cref="M:System.Threading.Monitor.Enter(System.Object)" /> 또는 <see cref="M:System.Threading.Monitor.Wait(System.Object,System.Int32,System.Boolean)" />를 호출하는 등의 방법으로 잠금을 요청하거나, <see cref="T:System.Threading.ManualResetEvent" />와 같은 스레드 동기화 개체를 기다리고 있는 경우 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="37a52-158">This could be the result of calling <see cref="M:System.Threading.Thread.Sleep(System.Int32)" /> or <see cref="M:System.Threading.Thread.Join" />, of requesting a lock — for example, by calling <see cref="M:System.Threading.Monitor.Enter(System.Object)" /> or <see cref="M:System.Threading.Monitor.Wait(System.Object,System.Int32,System.Boolean)" /> — or of waiting on a thread synchronization object such as <see cref="T:System.Threading.ManualResetEvent" />.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>