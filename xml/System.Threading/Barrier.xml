<Type Name="Barrier" FullName="System.Threading.Barrier">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d271267ac0284159a3b1b51c2d7ecb5e4260d584" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36606334" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Barrier : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Barrier extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Barrier" />
  <TypeSignature Language="VB.NET" Value="Public Class Barrier&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Barrier : IDisposable" />
  <TypeSignature Language="F#" Value="type Barrier = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Participant Count={ParticipantCount},Participants Remaining={ParticipantsRemaining}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="8c735-101">여러 작업이 여러 단계에 걸쳐 특정 알고리즘에서 병렬로 함께 작동할 수 있도록 합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8c735-101">Enables multiple tasks to cooperatively work on an algorithm in parallel through multiple phases.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c735-102">에 도달한 신호 각 그룹에 일련의 단계를 통해 이동 하 여 협력 하 여 작업 그룹의 <xref:System.Threading.Barrier> 특정된 단계 및 암시적으로 다른 모든 사용자에 도착할 때까지 대기 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c735-102">A group of tasks cooperate by moving through a series of phases, where each in the group signals it has arrived at the <xref:System.Threading.Barrier> in a given phase and implicitly waits for all others to arrive.</span></span> <span data-ttu-id="8c735-103">동일한 <xref:System.Threading.Barrier> 여러 단계에 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8c735-103">The same <xref:System.Threading.Barrier> can be used for multiple phases.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c735-104">다음 예제에는 장벽을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8c735-104">The following example shows how to use a barrier:</span></span>  
  
 [!code-csharp[System.Threading.Barrier#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.barrier/cs/barrier.cs#01)]
 [!code-vb[System.Threading.Barrier#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.barrier/vb/barrier.vb#01)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="8c735-105">모든 공용 및 보호 된 구성원 <see cref="T:System.Threading.Barrier" /> 는 스레드로부터 안전 하며에서 해야 하는 Dispose 제외 하 고 여러 스레드에서 동시에 사용할 수 있습니다 때 사용의 다른 모든 작업이 <see cref="T:System.Threading.Barrier" /> 완료 했습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8c735-105">All public and protected members of <see cref="T:System.Threading.Barrier" /> are thread-safe and may be used concurrently from multiple threads, with the exception of Dispose, which must only be used when all other operations on the <see cref="T:System.Threading.Barrier" /> have completed.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8c735-106">
            <see cref="T:System.Threading.Barrier" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-106">Initializes a new instance of the <see cref="T:System.Threading.Barrier" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Barrier (int participantCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 participantCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (participantCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Barrier(int participantCount);" />
      <MemberSignature Language="F#" Value="new System.Threading.Barrier : int -&gt; System.Threading.Barrier" Usage="new System.Threading.Barrier participantCount" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="participantCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="participantCount">
          <span data-ttu-id="8c735-107">참여 스레드의 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-107">The number of participating threads.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c735-108">
            <see cref="T:System.Threading.Barrier" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-108">Initializes a new instance of the <see cref="T:System.Threading.Barrier" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8c735-109">
            <paramref name="participantCount" />가 0보다 작거나 32,767보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-109">
              <paramref name="participantCount" /> is less than 0 or greater than 32,767.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Barrier (int participantCount, Action&lt;System.Threading.Barrier&gt; postPhaseAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 participantCount, class System.Action`1&lt;class System.Threading.Barrier&gt; postPhaseAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.#ctor(System.Int32,System.Action{System.Threading.Barrier})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (participantCount As Integer, postPhaseAction As Action(Of Barrier))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Barrier(int participantCount, Action&lt;System::Threading::Barrier ^&gt; ^ postPhaseAction);" />
      <MemberSignature Language="F#" Value="new System.Threading.Barrier : int * Action&lt;System.Threading.Barrier&gt; -&gt; System.Threading.Barrier" Usage="new System.Threading.Barrier (participantCount, postPhaseAction)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="participantCount" Type="System.Int32" />
        <Parameter Name="postPhaseAction" Type="System.Action&lt;System.Threading.Barrier&gt;" />
      </Parameters>
      <Docs>
        <param name="participantCount">
          <span data-ttu-id="8c735-110">참여 스레드의 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-110">The number of participating threads.</span>
          </span>
        </param>
        <param name="postPhaseAction">
          <span data-ttu-id="8c735-111">각 단계 후에 실행할 <see cref="T:System.Action`1" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-111">The <see cref="T:System.Action`1" /> to be executed after each phase.</span>
          </span>
          <span data-ttu-id="8c735-112">아무 작업도 수행되지 않았음을 나타내기 위해 null(Visual Basic의 경우 Nothing)이 전달될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-112">null (Nothing in Visual Basic) may be passed to indicate no action is taken.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c735-113">
            <see cref="T:System.Threading.Barrier" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-113">Initializes a new instance of the <see cref="T:System.Threading.Barrier" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c735-114">`postPhaseAction` 대리자 한 단계에서 모든 참가자가 장벽에 도달한 후에 실행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c735-114">The `postPhaseAction` delegate will be executed after all participants have arrived at the barrier in one phase.</span></span> <span data-ttu-id="8c735-115">참가자는 postPhaseAction 대리자 실행이 완료 될 때까지 다음 단계로 해제 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c735-115">The participants will not be released to the next phase until the postPhaseAction delegate has completed execution.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8c735-116">
            <paramref name="participantCount" />가 0보다 작거나 32,767보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-116">
              <paramref name="participantCount" /> is less than 0 or greater than 32,767.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddParticipant">
      <MemberSignature Language="C#" Value="public long AddParticipant ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 AddParticipant() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.AddParticipant" />
      <MemberSignature Language="VB.NET" Value="Public Function AddParticipant () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long AddParticipant();" />
      <MemberSignature Language="F#" Value="member this.AddParticipant : unit -&gt; int64" Usage="barrier.AddParticipant " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8c735-117">추가 참가자가 있음을 <see cref="T:System.Threading.Barrier" />에 알립니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-117">Notifies the <see cref="T:System.Threading.Barrier" /> that there will be an additional participant.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c735-118">새 참가자가 처음으로 참여할 장벽의 단계 번호입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-118">The phase number of the barrier in which the new participants will first participate.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c735-119">장벽 현재 단계 후 작업을 실행 하 고, 단계 후 작업을 완료 한 장벽 다음 단계로 이동 될 때까지이 호출이 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c735-119">If the barrier is currently executing a post phase action, this call is blocked until the post phase action completes and the barrier has moved on to the next phase.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8c735-120">현재 인스턴스가 이미 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-120">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8c735-121">참가자를 추가하면 해당 장애물 참가자 수가 32,767을 초과하게 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-121">Adding a participant would cause the barrier's participant count to exceed 32,767.</span>
          </span>
          <span data-ttu-id="8c735-122">-또는- 이 메서드는 사후 단계 작업 내에서 호출되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-122">-or-  The method was invoked from within a post-phase action.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddParticipants">
      <MemberSignature Language="C#" Value="public long AddParticipants (int participantCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 AddParticipants(int32 participantCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.AddParticipants(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddParticipants (participantCount As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long AddParticipants(int participantCount);" />
      <MemberSignature Language="F#" Value="member this.AddParticipants : int -&gt; int64" Usage="barrier.AddParticipants participantCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="participantCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="participantCount">
          <span data-ttu-id="8c735-123">장벽에 추가할 추가 참가자의 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-123">The number of additional participants to add to the barrier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c735-124">추가 참가자가 있음을 <see cref="T:System.Threading.Barrier" />에 알립니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-124">Notifies the <see cref="T:System.Threading.Barrier" /> that there will be additional participants.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c735-125">새 참가자가 처음으로 참여할 장벽의 단계 번호입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-125">The phase number of the barrier in which the new participants will first participate.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c735-126">장벽 현재 단계 후 작업을 실행 하 고, 단계 후 작업을 완료 한 장벽 다음 단계로 이동 될 때까지이 호출이 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c735-126">If the barrier is currently executing a post phase action, this call is blocked until the post phase action completes and the barrier has moved on to the next phase.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8c735-127">현재 인스턴스가 이미 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-127">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8c735-128">
            <paramref name="participantCount" />가 0보다 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-128">
              <paramref name="participantCount" /> is less than 0.</span>
          </span>
          <span data-ttu-id="8c735-129">-또는- <paramref name="participantCount" /> 참가자를 추가하면 해당 장애물 참가자 수가 32,767을 초과하게 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-129">-or-  Adding <paramref name="participantCount" /> participants would cause the barrier's participant count to exceed 32,767.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8c735-130">이 메서드는 사후 단계 작업 내에서 호출되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-130">The method was invoked from within a post-phase action.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CurrentPhaseNumber">
      <MemberSignature Language="C#" Value="public long CurrentPhaseNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 CurrentPhaseNumber" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Barrier.CurrentPhaseNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentPhaseNumber As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long CurrentPhaseNumber { long get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentPhaseNumber : int64" Usage="System.Threading.Barrier.CurrentPhaseNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8c735-131">장벽의 현재 단계 번호를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-131">Gets the number of the barrier's current phase.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8c735-132">장벽의 현재 단계 번호를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-132">Returns the number of the barrier's current phase.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8c735-133">
            <see cref="T:System.Threading.Barrier" /> 클래스의 현재 인스턴스에서 사용하는 리소스를 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-133">Releases resources used by the current instance of the <see cref="T:System.Threading.Barrier" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="barrier.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8c735-134">
            <see cref="T:System.Threading.Barrier" /> 클래스의 현재 인스턴스에서 사용하는 모든 리소스를 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-134">Releases all resources used by the current instance of the <see cref="T:System.Threading.Barrier" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c735-135">`Dispose` 사용을 마치면 <xref:System.Threading.Barrier>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="8c735-135">Call `Dispose` when you are finished using the <xref:System.Threading.Barrier>.</span></span> <span data-ttu-id="8c735-136">`Dispose` 메서드를 사용하면 <xref:System.Threading.Barrier>를 사용할 수 없게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c735-136">The `Dispose` method leaves the <xref:System.Threading.Barrier> in an unusable state.</span></span> <span data-ttu-id="8c735-137">호출한 후 `Dispose`에 대 한 모든 참조를 해제 해야는 <xref:System.Threading.Barrier> 가비지 수집기는 메모리를 회수할 수 있도록 하는 <xref:System.Threading.Barrier> 차지한 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c735-137">After calling `Dispose`, you must release all references to the <xref:System.Threading.Barrier> so the garbage collector can reclaim the memory that the <xref:System.Threading.Barrier> was occupying.</span></span>  
  
 <span data-ttu-id="8c735-138">자세한 내용은 참조 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Dispose 메서드를 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8c735-138">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8c735-139">`Dispose`에 대한 마지막 참조를 해제하기 전에 반드시 <xref:System.Threading.Barrier>를 호출하십시오.</span><span class="sxs-lookup"><span data-stu-id="8c735-139">Always call `Dispose` before you release your last reference to the <xref:System.Threading.Barrier>.</span></span> <span data-ttu-id="8c735-140">이렇게 하지 않으면 가비지 수집기가 <xref:System.Threading.Barrier> 개체의 `Finalize` 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c735-140">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.Barrier> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8c735-141">이 메서드는 사후 단계 작업 내에서 호출되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-141">The method was invoked from within a post-phase action.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="barrier.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="8c735-142">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 true이고, 관리되지 않는 리소스만 해제하려면 false입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-142">true to release both managed and unmanaged resources; false to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c735-143">
            <see cref="T:System.Threading.Barrier" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-143">Releases the unmanaged resources used by the <see cref="T:System.Threading.Barrier" />, and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c735-144">대부분의 멤버의 달리 <xref:System.Threading.Barrier>, Dispose 스레드로부터 안전 하지 않은 하 고이 인스턴스의 다른 멤버와 동시에 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8c735-144">Unlike most of the members of <xref:System.Threading.Barrier>, Dispose is not thread-safe and may not be used concurrently with other members of this instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticipantCount">
      <MemberSignature Language="C#" Value="public int ParticipantCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ParticipantCount" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Barrier.ParticipantCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParticipantCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ParticipantCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ParticipantCount : int" Usage="System.Threading.Barrier.ParticipantCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8c735-145">장벽에 있는 참가자의 총 수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-145">Gets the total number of participants in the barrier.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8c735-146">장벽에 있는 참가자의 총 수를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-146">Returns the total number of participants in the barrier.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticipantsRemaining">
      <MemberSignature Language="C#" Value="public int ParticipantsRemaining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ParticipantsRemaining" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Barrier.ParticipantsRemaining" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParticipantsRemaining As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ParticipantsRemaining { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ParticipantsRemaining : int" Usage="System.Threading.Barrier.ParticipantsRemaining" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8c735-147">현재 단계에서 아직 신호를 받지 않은 장벽의 참가자 수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-147">Gets the number of participants in the barrier that haven’t yet signaled in the current phase.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8c735-148">현재 단계에서 아직 신호를 받지 않은 장벽의 참가자 수를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-148">Returns the number of participants in the barrier that haven’t yet signaled in the current phase.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c735-149">ParticipantCount 0 이면 또는 사후 단계 작업이 대리자 실행 하는 동안 0 일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8c735-149">This could be 0 during a post-phase action delegate execution or if the ParticipantCount is 0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveParticipant">
      <MemberSignature Language="C#" Value="public void RemoveParticipant ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveParticipant() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.RemoveParticipant" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveParticipant ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveParticipant();" />
      <MemberSignature Language="F#" Value="member this.RemoveParticipant : unit -&gt; unit" Usage="barrier.RemoveParticipant " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8c735-150">참가자가 하나 감소함을 <see cref="T:System.Threading.Barrier" />에 알립니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-150">Notifies the <see cref="T:System.Threading.Barrier" /> that there will be one less participant.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8c735-151">현재 인스턴스가 이미 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-151">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8c735-152">해당 장애물에 이미 0 참가자가 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-152">The barrier already has 0 participants.</span>
          </span>
          <span data-ttu-id="8c735-153">-또는- 이 메서드는 사후 단계 작업 내에서 호출되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-153">-or-  The method was invoked from within a post-phase action.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveParticipants">
      <MemberSignature Language="C#" Value="public void RemoveParticipants (int participantCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveParticipants(int32 participantCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.RemoveParticipants(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveParticipants (participantCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveParticipants(int participantCount);" />
      <MemberSignature Language="F#" Value="member this.RemoveParticipants : int -&gt; unit" Usage="barrier.RemoveParticipants participantCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="participantCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="participantCount">
          <span data-ttu-id="8c735-154">장벽에서 제거할 추가 참가자의 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-154">The number of additional participants to remove from the barrier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c735-155">참가자가 감소함을 <see cref="T:System.Threading.Barrier" />에 알립니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-155">Notifies the <see cref="T:System.Threading.Barrier" /> that there will be fewer participants.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c735-156">경우 `participantCount` 참가자가 장벽에 이미 대기 중,이 제거는 장벽을 충족, 사후 단계 작업이 실행 되 고 제거 되는이 참가자가 장벽에 도달한 성공적으로 하는 경우 모든 참가자는 해제 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c735-156">If `participantCount` participants are already waiting on the barrier, this removal fulfills the barrier, the post phase action is executed and all of the participants are woken as if this participant being removed had successfully reached the barrier.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8c735-157">현재 인스턴스가 이미 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-157">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8c735-158">총 참가자 수가 지정된 <paramref name="participantCount" />보다 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-158">The total participant count is less than the specified <paramref name="participantCount" /></span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8c735-159">해당 장애물에 이미 0 참가자가 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-159">The barrier already has 0 participants.</span>
          </span>
          <span data-ttu-id="8c735-160">-또는- 이 메서드는 사후 단계 작업 내에서 호출되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-160">-or-  The method was invoked from within a post-phase action.</span>
          </span>
          <span data-ttu-id="8c735-161">-또는- 현재 참가자 수가 지정된 participantCount보다 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-161">-or-  current participant count is less than the specified participantCount</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SignalAndWait">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8c735-162">참가자가 장벽에 도달했다는 신호를 보내고 다른 모든 참가자도 장벽에 도달할 때까지 기다립니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-162">Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public void SignalAndWait ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SignalAndWait() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.SignalAndWait" />
      <MemberSignature Language="VB.NET" Value="Public Sub SignalAndWait ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SignalAndWait();" />
      <MemberSignature Language="F#" Value="member this.SignalAndWait : unit -&gt; unit" Usage="barrier.SignalAndWait " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8c735-163">참가자가 장벽에 도달했다는 신호를 보내고 다른 모든 참가자도 장벽에 도달할 때까지 기다립니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-163">Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8c735-164">현재 인스턴스가 이미 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-164">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8c735-165">메서드는 사후 단계 작업 내에서 호출되며 현재 장애물에 0 참가자가 있거나 장애물이 참가자로 등록된 것보다 많은 스레드에서 신호를 받습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-165">The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.BarrierPostPhaseException">
          <span data-ttu-id="8c735-166">모든 참가 스레드가 SignalAndWait를 호출한 후에 Barrier의 단계 후 작업에서 예외가 throw되는 경우 예외가 BarrierPostPhaseException에서 래핑되고 모든 참가 스레드에서 throw됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-166">If an exception is thrown from the post phase action of a Barrier after all participating threads have called SignalAndWait, the exception will be wrapped in a BarrierPostPhaseException and be thrown on all participating threads.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public bool SignalAndWait (int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SignalAndWait(int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.SignalAndWait(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignalAndWait (millisecondsTimeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SignalAndWait(int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="member this.SignalAndWait : int -&gt; bool" Usage="barrier.SignalAndWait millisecondsTimeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout">
          <span data-ttu-id="8c735-167">대기할 시간(밀리초)이거나, 무기한 대기할 경우 <see cref="F:System.Threading.Timeout.Infinite" />(-1)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-167">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" />(-1) to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c735-168">참가자가 장벽에 도달했다는 신호를 보내고 부호 있는 32비트 정수로 시간 제한을 측정하여 다른 모든 참가자도 장벽에 도달할 때까지 기다립니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-168">Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a 32-bit signed integer to measure the timeout.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c735-169">지정된 시간 내에 모든 참가자가 장벽에 도달했으면 true이고, 그렇지 않으면 false입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-169">if all participants reached the barrier within the specified time; otherwise false.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8c735-170">현재 인스턴스가 이미 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-170">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8c735-171">
            <paramref name="millisecondsTimeout" />이 시간 제한 없음을 나타내는 -1 이외의 음수인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-171">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8c735-172">메서드는 사후 단계 작업 내에서 호출되며 현재 장애물에 0 참가자가 있거나 장애물이 참가자로 등록된 것보다 많은 스레드에서 신호를 받습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-172">The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.BarrierPostPhaseException">
          <span data-ttu-id="8c735-173">모든 참가 스레드가 SignalAndWait를 호출한 후에 Barrier의 단계 후 작업에서 예외가 throw되는 경우 예외가 BarrierPostPhaseException에서 래핑되고 모든 참가 스레드에서 throw됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-173">If an exception is thrown from the post phase action of a Barrier after all participating threads have called SignalAndWait, the exception will be wrapped in a BarrierPostPhaseException and be thrown on all participating threads.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public void SignalAndWait (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SignalAndWait(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.SignalAndWait(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SignalAndWait(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.SignalAndWait : System.Threading.CancellationToken -&gt; unit" Usage="barrier.SignalAndWait cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="8c735-174">확인할 <see cref="T:System.Threading.CancellationToken" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-174">The <see cref="T:System.Threading.CancellationToken" /> to observe.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c735-175">참가자가 장벽에 도달했다는 신호를 보내고 취소 토큰을 확인하면서 다른 모든 참가자도 장벽에 도달할 때까지 기다립니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-175">Signals that a participant has reached the barrier and waits for all other participants to reach the barrier, while observing a cancellation token.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="8c735-176">
            <paramref name="cancellationToken" />이 취소되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-176">
              <paramref name="cancellationToken" /> has been canceled.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8c735-177">현재 인스턴스가 이미 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-177">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8c735-178">메서드는 사후 단계 작업 내에서 호출되며 현재 장애물에 0 참가자가 있거나 장애물이 참가자로 등록된 것보다 많은 스레드에서 신호를 받습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-178">The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public bool SignalAndWait (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SignalAndWait(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignalAndWait (timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SignalAndWait(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.SignalAndWait : TimeSpan -&gt; bool" Usage="barrier.SignalAndWait timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="8c735-179">대기할 시간(밀리초)을 나타내는 <see cref="T:System.TimeSpan" />이거나, 무한 대기하도록 -1밀리초를 나타내는 <see cref="T:System.TimeSpan" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-179">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c735-180">참가자가 장벽에 도달했다는 신호를 보내고 <see cref="T:System.TimeSpan" /> 개체를 사용하여 시간 간격을 측정하여 다른 참가자도 장벽에 도달할 때까지 기다립니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-180">Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a <see cref="T:System.TimeSpan" /> object to measure the time interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c735-181">다른 모든 참가자가 장벽에 도달했으면 true이고, 그렇지 않으면 false입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-181">true if all other participants reached the barrier; otherwise, false.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8c735-182">현재 인스턴스가 이미 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-182">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8c735-183">
            <paramref name="timeout" />이 무기한 시간 제한을 나타내는 -1밀리초 이외의 음수이거나 시간 제한이 없거나, 32,767보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-183">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out, or it is greater than 32,767.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8c735-184">메서드는 사후 단계 작업 내에서 호출되며 현재 장애물에 0 참가자가 있거나 장애물이 참가자로 등록된 것보다 많은 스레드에서 신호를 받습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-184">The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public bool SignalAndWait (int millisecondsTimeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SignalAndWait(int32 millisecondsTimeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SignalAndWait(int millisecondsTimeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.SignalAndWait : int * System.Threading.CancellationToken -&gt; bool" Usage="barrier.SignalAndWait (millisecondsTimeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout">
          <span data-ttu-id="8c735-185">대기할 시간(밀리초)이거나, 무기한 대기할 경우 <see cref="F:System.Threading.Timeout.Infinite" />(-1)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-185">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" />(-1) to wait indefinitely.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="8c735-186">확인할 <see cref="T:System.Threading.CancellationToken" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-186">The <see cref="T:System.Threading.CancellationToken" /> to observe.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c735-187">참가자가 장벽에 도달했다는 신호를 보내고 취소 토큰을 확인하면서 부호 있는 32비트 정수로 시간 제한을 측정하여 다른 모든 참가자도 장벽에 도달할 때까지 기다립니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-187">Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a 32-bit signed integer to measure the timeout, while observing a cancellation token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c735-188">지정된 시간 내에 모든 참가자가 장벽에 도달했으면 true이고, 그렇지 않으면 false입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-188">if all participants reached the barrier within the specified time; otherwise false</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c735-189">경우는 `cancellationToken` 신호가 적용 하기 전에 취소 되었습니다 아니라면 <xref:System.OperationCanceledException> throw 되 고 <xref:System.Threading.Barrier.ParticipantsRemaining%2A> 값은 감소 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c735-189">If the `cancellationToken` was canceled before the signal took effect, then an <xref:System.OperationCanceledException> is thrown and the <xref:System.Threading.Barrier.ParticipantsRemaining%2A> value is not decreased.</span></span> <span data-ttu-id="8c735-190">경우는 `cancellationToken` 취소 되지 않으면 되거나는 신호가 적용 후 취소 되 <xref:System.Threading.Barrier.ParticipantsRemaining%2A> 감소 및 no <xref:System.OperationCanceledException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c735-190">If the `cancellationToken` is not canceled or is canceled after the signal takes effect then <xref:System.Threading.Barrier.ParticipantsRemaining%2A> is decreased and no <xref:System.OperationCanceledException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="8c735-191">
            <paramref name="cancellationToken" />이 취소되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-191">
              <paramref name="cancellationToken" /> has been canceled.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8c735-192">현재 인스턴스가 이미 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-192">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8c735-193">
            <paramref name="millisecondsTimeout" />이 시간 제한 없음을 나타내는 -1 이외의 음수인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-193">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8c735-194">메서드는 사후 단계 작업 내에서 호출되며 현재 장애물에 0 참가자가 있거나 장애물이 참가자로 등록된 것보다 많은 스레드에서 신호를 받습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-194">The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public bool SignalAndWait (TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SignalAndWait(valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SignalAndWait(TimeSpan timeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.SignalAndWait : TimeSpan * System.Threading.CancellationToken -&gt; bool" Usage="barrier.SignalAndWait (timeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="8c735-195">대기할 시간(밀리초)을 나타내는 <see cref="T:System.TimeSpan" />이거나, 무한 대기하도록 -1밀리초를 나타내는 <see cref="T:System.TimeSpan" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-195">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="8c735-196">확인할 <see cref="T:System.Threading.CancellationToken" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-196">The <see cref="T:System.Threading.CancellationToken" /> to observe.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c735-197">참가자가 장벽에 도달했다는 신호를 보내고 취소 토큰을 확인하면서 <see cref="T:System.TimeSpan" /> 개체를 사용하여 시간 제한을 측정하여 다른 모든 참가자도 장벽에 도달할 때까지 기다립니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-197">Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a <see cref="T:System.TimeSpan" /> object to measure the time interval, while observing a cancellation token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c735-198">다른 모든 참가자가 장벽에 도달했으면 true이고, 그렇지 않으면 false입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-198">true if all other participants reached the barrier; otherwise, false.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="8c735-199">
            <paramref name="cancellationToken" />이 취소되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-199">
              <paramref name="cancellationToken" /> has been canceled.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8c735-200">현재 인스턴스가 이미 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-200">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8c735-201">
            <paramref name="timeout" />은 시간 제한이 없음을 나타내는 -1밀리초 이외의 음수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-201">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8c735-202">메서드는 사후 단계 작업 내에서 호출되며 현재 장애물에 0 참가자가 있거나 장애물이 참가자로 등록된 것보다 많은 스레드에서 신호를 받습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c735-202">The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>