<Type Name="ThreadStart" FullName="System.Threading.ThreadStart">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2847d7cf8164513d435c7548adb57b6cd1419a68" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void ThreadStart();" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ThreadStart extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ThreadStart" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ThreadStart()" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ThreadStart();" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Thread</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters />
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <summary>
      <span data-ttu-id="6d719-101">
        <see cref="T:System.Threading.Thread" />에서 실행되는 메서드를 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6d719-101">Represents the method that executes on a <see cref="T:System.Threading.Thread" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d719-102">스레드에서 실행 되는 메서드의 관리 되는 스레드를 만들면 나타내는 <xref:System.Threading.ThreadStart> 위임 또는 <xref:System.Threading.ParameterizedThreadStart> 에 전달 되는 대리자는 <xref:System.Threading.Thread.%23ctor%2A> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="6d719-102">When a managed thread is created, the method that executes on the thread is represented by a <xref:System.Threading.ThreadStart> delegate or a <xref:System.Threading.ParameterizedThreadStart> delegate that is passed to the <xref:System.Threading.Thread.%23ctor%2A> constructor.</span></span> <span data-ttu-id="6d719-103">스레드가 실행 될 때까지 시작 되지 않습니다는 <xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType> 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d719-103">The thread does not begin executing until the <xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType> method is called.</span></span> <span data-ttu-id="6d719-104">가 나타내는 메서드의 첫 번째 줄에서 실행이 시작 된 <xref:System.Threading.ThreadStart> 또는 <xref:System.Threading.ParameterizedThreadStart> 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d719-104">Execution begins at the first line of the method represented by the <xref:System.Threading.ThreadStart> or <xref:System.Threading.ParameterizedThreadStart> delegate.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d719-105">Visual Basic 및 C# 사용자가 생략할 수는 <xref:System.Threading.ThreadStart> 또는 <xref:System.Threading.ParameterizedThreadStart> 스레드를 만드는 경우에 대리자 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="6d719-105">Visual Basic and C# users can omit the <xref:System.Threading.ThreadStart> or <xref:System.Threading.ParameterizedThreadStart> delegate constructor when creating a thread.</span></span> <span data-ttu-id="6d719-106">Visual Basic에서 사용 하 여는 `AddressOf` 되어 메서드가 전달 하는 경우 연산자는 <xref:System.Threading.Thread.%23ctor%2A> 생성자; 예를 들어 `Dim t As New Thread(AddressOf ThreadProc)`합니다.</span><span class="sxs-lookup"><span data-stu-id="6d719-106">In Visual Basic, use the `AddressOf` operator when passing your method to the <xref:System.Threading.Thread.%23ctor%2A> constructor; for example, `Dim t As New Thread(AddressOf ThreadProc)`.</span></span> <span data-ttu-id="6d719-107">C#에서는 스레드 프로시저의 이름을 지정 하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6d719-107">In C#, simply specify the name of the thread procedure.</span></span> <span data-ttu-id="6d719-108">컴파일러는 올바른 대리자 생성자를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d719-108">The compiler selects the correct delegate constructor.</span></span>  
  
 <span data-ttu-id="6d719-109">[C++]</span><span class="sxs-lookup"><span data-stu-id="6d719-109">[C++]</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d719-110">.NET Framework 버전 2.0에서에서 만드는 <xref:System.Threading.ThreadStart> 에 c + +에서 정적 메서드에 매개 변수가 하나만 필요한 위임: 클래스 이름으로 정규화 된 콜백 메서드의 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="6d719-110">In version 2.0 of the .NET Framework, creating a <xref:System.Threading.ThreadStart> delegate for a static method in C++ requires only one parameter: the address of the callback method, qualified by the class name.</span></span> <span data-ttu-id="6d719-111">이전 버전에서는 두 개의 매개 변수가 필요 했습니다 정적 메서드에 대 한 대리자를 만들 때: 0 (null) 및 메서드 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="6d719-111">In earlier versions two parameters were required when creating a delegate for a static method: zero (null) and the method address.</span></span> <span data-ttu-id="6d719-112">모든 버전의 두 매개 변수가 필요 인스턴스 메서드의: 인스턴스 변수 및 메서드 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="6d719-112">For an instance method, all versions require two parameters: the instance variable and the method address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d719-113">다음 코드 예제를 만들고 사용 하는 구문을 보여 줍니다는 <xref:System.Threading.ThreadStart> 인스턴스 메서드에 및 정적 메서드로 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d719-113">The following code example shows the syntax for creating and using a <xref:System.Threading.ThreadStart> delegate with an instance method and with a static method.</span></span>  
  
 <span data-ttu-id="6d719-114">만드는 방법을 보여 주는 또 다른 간단한 예는 <xref:System.Threading.ThreadStart> 대리자, 참조는 <xref:System.Threading.Thread.Start?displayProperty=nameWithType> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d719-114">For another simple example that demonstrates how to create a <xref:System.Threading.ThreadStart> delegate, see the <xref:System.Threading.Thread.Start?displayProperty=nameWithType> method overload.</span></span> <span data-ttu-id="6d719-115">스레드를 만드는 방법에 대 한 자세한 내용은 참조 [스레드 만들기 및 시작 시 데이터 전달](~/docs/standard/threading/creating-threads-and-passing-data-at-start-time.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="6d719-115">For more information about thread creation, see [Creating Threads and Passing Data at Start Time](~/docs/standard/threading/creating-threads-and-passing-data-at-start-time.md).</span></span>  
  
 [!code-cpp[System.Threading.ThreadStart2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ThreadStart2/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ThreadStart2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ThreadStart2/CS/source.cs#1)]
 [!code-vb[System.Threading.ThreadStart2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ThreadStart2/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.ParameterizedThreadStart" />
    <altmember cref="T:System.Threading.Thread" />
    <altmember cref="Overload:System.Threading.Thread.Start" />
    <altmember cref="T:System.AppDomain" />
  </Docs>
</Type>