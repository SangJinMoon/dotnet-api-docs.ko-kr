<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ThreadStart.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52847d7cf8164513d435c7548adb57b6cd1419a68.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2847d7cf8164513d435c7548adb57b6cd1419a68</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Threading.ThreadStart">
          <source>Represents the method that executes on a <ph id="ph1">&lt;see cref="T:System.Threading.Thread" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Thread" /&gt;</ph>에서 실행되는 메서드를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadStart">
          <source>When a managed thread is created, the method that executes on the thread is represented by a <ph id="ph1">&lt;xref:System.Threading.ThreadStart&gt;</ph> delegate or a <ph id="ph2">&lt;xref:System.Threading.ParameterizedThreadStart&gt;</ph> delegate that is passed to the <ph id="ph3">&lt;xref:System.Threading.Thread.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">스레드에서 실행 되는 메서드의 관리 되는 스레드를 만들면 나타내는 <ph id="ph1">&lt;xref:System.Threading.ThreadStart&gt;</ph> 위임 또는 <ph id="ph2">&lt;xref:System.Threading.ParameterizedThreadStart&gt;</ph> 에 전달 되는 대리자는 <ph id="ph3">&lt;xref:System.Threading.Thread.%23ctor%2A&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadStart">
          <source>The thread does not begin executing until the <ph id="ph1">&lt;xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType&gt;</ph> method is called.</source>
          <target state="translated">스레드가 실행 될 때까지 시작 되지 않습니다는 <ph id="ph1">&lt;xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadStart">
          <source>Execution begins at the first line of the method represented by the <ph id="ph1">&lt;xref:System.Threading.ThreadStart&gt;</ph> or <ph id="ph2">&lt;xref:System.Threading.ParameterizedThreadStart&gt;</ph> delegate.</source>
          <target state="translated">가 나타내는 메서드의 첫 번째 줄에서 실행이 시작 된 <ph id="ph1">&lt;xref:System.Threading.ThreadStart&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Threading.ParameterizedThreadStart&gt;</ph> 위임 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadStart">
          <source>Visual Basic and C# users can omit the <ph id="ph1">&lt;xref:System.Threading.ThreadStart&gt;</ph> or <ph id="ph2">&lt;xref:System.Threading.ParameterizedThreadStart&gt;</ph> delegate constructor when creating a thread.</source>
          <target state="translated">Visual Basic 및 C# 사용자가 생략할 수는 <ph id="ph1">&lt;xref:System.Threading.ThreadStart&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Threading.ParameterizedThreadStart&gt;</ph> 스레드를 만드는 경우에 대리자 생성자입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadStart">
          <source>In Visual Basic, use the <ph id="ph1">`AddressOf`</ph> operator when passing your method to the <ph id="ph2">&lt;xref:System.Threading.Thread.%23ctor%2A&gt;</ph> constructor; for example, <ph id="ph3">`Dim t As New Thread(AddressOf ThreadProc)`</ph>.</source>
          <target state="translated">Visual Basic에서 사용 하 여는 <ph id="ph1">`AddressOf`</ph> 되어 메서드가 전달 하는 경우 연산자는 <ph id="ph2">&lt;xref:System.Threading.Thread.%23ctor%2A&gt;</ph> 생성자; 예를 들어 <ph id="ph3">`Dim t As New Thread(AddressOf ThreadProc)`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadStart">
          <source>In C#, simply specify the name of the thread procedure.</source>
          <target state="translated">C#에서는 스레드 프로시저의 이름을 지정 하면 됩니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadStart">
          <source>The compiler selects the correct delegate constructor.</source>
          <target state="translated">컴파일러는 올바른 대리자 생성자를 선택 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadStart">
          <source>[C++]</source>
          <target state="translated">[C++]</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadStart">
          <source>In version 2.0 of the .NET Framework, creating a <ph id="ph1">&lt;xref:System.Threading.ThreadStart&gt;</ph> delegate for a static method in C++ requires only one parameter: the address of the callback method, qualified by the class name.</source>
          <target state="translated">.NET Framework 버전 2.0에서에서 만드는 <ph id="ph1">&lt;xref:System.Threading.ThreadStart&gt;</ph> 에 c + +에서 정적 메서드에 매개 변수가 하나만 필요한 위임: 클래스 이름으로 정규화 된 콜백 메서드의 주소입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadStart">
          <source>In earlier versions two parameters were required when creating a delegate for a static method: zero (null) and the method address.</source>
          <target state="translated">이전 버전에서는 두 개의 매개 변수가 필요 했습니다 정적 메서드에 대 한 대리자를 만들 때: 0 (null) 및 메서드 주소입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadStart">
          <source>For an instance method, all versions require two parameters: the instance variable and the method address.</source>
          <target state="translated">모든 버전의 두 매개 변수가 필요 인스턴스 메서드의: 인스턴스 변수 및 메서드 주소입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadStart">
          <source>The following code example shows the syntax for creating and using a <ph id="ph1">&lt;xref:System.Threading.ThreadStart&gt;</ph> delegate with an instance method and with a static method.</source>
          <target state="translated">다음 코드 예제를 만들고 사용 하는 구문을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Threading.ThreadStart&gt;</ph> 인스턴스 메서드에 및 정적 메서드로 위임 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadStart">
          <source>For another simple example that demonstrates how to create a <ph id="ph1">&lt;xref:System.Threading.ThreadStart&gt;</ph> delegate, see the <ph id="ph2">&lt;xref:System.Threading.Thread.Start?displayProperty=nameWithType&gt;</ph> method overload.</source>
          <target state="translated">만드는 방법을 보여 주는 또 다른 간단한 예는 <ph id="ph1">&lt;xref:System.Threading.ThreadStart&gt;</ph> 대리자, 참조는 <ph id="ph2">&lt;xref:System.Threading.Thread.Start?displayProperty=nameWithType&gt;</ph> 메서드 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadStart">
          <source>For more information about thread creation, see <bpt id="p1">[</bpt>Creating Threads and Passing Data at Start Time<ept id="p1">](~/docs/standard/threading/creating-threads-and-passing-data-at-start-time.md)</ept>.</source>
          <target state="translated">스레드를 만드는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>스레드 만들기 및 시작 시 데이터 전달<ept id="p1">](~/docs/standard/threading/creating-threads-and-passing-data-at-start-time.md)</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>