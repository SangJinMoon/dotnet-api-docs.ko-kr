<Type Name="CancellationToken" FullName="System.Threading.CancellationToken">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="19b22c264e9da195fc5b91af5de567dc3b839021" />
    <Meta Name="ms.sourcegitcommit" Value="b15b8cf0f6dbc1504057c88969d9ef4b790891fe" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="05/11/2018" />
    <Meta Name="ms.locfileid" Value="34061445" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct CancellationToken" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit CancellationToken extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Threading.CancellationToken" />
  <TypeSignature Language="VB.NET" Value="Public Structure CancellationToken" />
  <TypeSignature Language="C++ CLI" Value="public value class CancellationToken" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("IsCancellationRequested = {IsCancellationRequested}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>작업을 취소하지 않아야 함을 전파합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Threading.CancellationToken> 스레드 스레드 풀 작업 항목 간에 협조적 취소를 사용 하면 또는 <xref:System.Threading.Tasks.Task> 개체입니다. 인스턴스화하여 취소 토큰을 만들는 <xref:System.Threading.CancellationTokenSource> 에서 취소 토큰을 관리 하는 개체를 검색할 해당 <xref:System.Threading.CancellationTokenSource.Token%2A?displayProperty=nameWithType> 속성입니다. 그런 다음 원하는 수 스레드, 작업 또는 취소의 통지를 수신 해야 하는 작업의 취소 토큰을 전달 합니다. 취소를 시작 하는 토큰을 사용할 수 없습니다. 개체의 소유자가 호출 하는 경우 <xref:System.Threading.CancellationTokenSource.Cancel%2A?displayProperty=nameWithType>, <xref:System.Threading.CancellationToken.IsCancellationRequested%2A> 취소 토큰의 모든 복사본에 속성이로 설정 된 `true`합니다. 알림을 수신 하는 개체는 적절 한 방식으로 응답할 수 있습니다.  
  
 자세한 내용과 코드 예제를 참조 하십시오. [관리 되는 스레드의 취소](~/docs/standard/threading/cancellation-in-managed-threads.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 다른 계기를 11 개에서 10 정수 계열 값을 읽을 수 있는 데이터 컬렉션 응용 프로그램을 에뮬레이션 하는 난수 생성기를 사용 합니다. 값이 0에 대 한 작업을 취소 해야 하는 경우와 없는 전반적인 평균을 계산 해야 하는 하나의 계기에서 측정에 실패 했음을 나타냅니다.  
  
 이 예제에서는 작업의 가능한 취소를 처리 하려면 인스턴스화합니다는 <xref:System.Threading.CancellationTokenSource> 개체에 전달 되는 취소 토큰을 생성 하는 <xref:System.Threading.Tasks.TaskFactory> 개체입니다. <xref:System.Threading.Tasks.TaskFactory> 개체 취소 토큰에 전달 된 각 태스크의 특정 계측에 대 한 정보 수집을 담당 합니다. <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%60%602%28System.Threading.Tasks.Task%7B%60%600%7D%5B%5D%2CSystem.Func%7BSystem.Threading.Tasks.Task%7B%60%600%7D%5B%5D%2C%60%601%7D%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType> 메서드는 모든 판독값 성공적으로 수집한 후에 평균 계산 되도록 합니다. 작업은 취소 되었으므로 때문이 아니라에 경우에 대 한 호출에서 <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A?displayProperty=nameWithType> 메서드에서 예외를 throw 합니다.  
  
 [!code-csharp[System.Threading.CancellationTokenSource.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.cancellationtokensource.class/cs/cancel1.cs#1)]
 [!code-vb[System.Threading.CancellationTokenSource.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.cancellationtokensource.class/vb/cancel1.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>모든 공용 및 보호 된 구성원 <see cref="T:System.Threading.CancellationToken" /> 는 스레드로부터 안전 하 고 여러 스레드에서 동시에 사용할 수 있습니다.</threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CancellationToken (bool canceled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool canceled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationToken.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (canceled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CancellationToken(bool canceled);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="canceled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="canceled">토큰의 취소된 상태입니다.</param>
        <summary>
          <see cref="T:System.Threading.CancellationToken" /> 을(를) 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자를 사용 하 여 만든 토큰으로 지정 된 취소 된 상태로 유지 되는 `canceled` 매개 변수입니다. 경우 `canceled` 은 `false`모두 <xref:System.Threading.CancellationToken.CanBeCanceled%2A> 및 <xref:System.Threading.CancellationToken.IsCancellationRequested%2A> 됩니다 `false`합니다.  
  
 경우 `canceled` 은 `true`모두 <xref:System.Threading.CancellationToken.CanBeCanceled%2A> 및 <xref:System.Threading.CancellationToken.IsCancellationRequested%2A> 됩니다 `true`합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBeCanceled">
      <MemberSignature Language="C#" Value="public bool CanBeCanceled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanBeCanceled" />
      <MemberSignature Language="DocId" Value="P:System.Threading.CancellationToken.CanBeCanceled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanBeCanceled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanBeCanceled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 토큰이 취소된 상태로 있을 수 있는지 여부를 가져옵니다.</summary>
        <value>
          <see langword="true" /> 이 토큰이 취소 된 상태로; 있을 수 있는 경우 그렇지 않으면 <see langword="false" />합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우 <xref:System.Threading.CancellationToken.CanBeCanceled%2A> 반환 `false`는 토큰은 전환 되지 않습니다 취소 된 상태로 즉 보장할 수는 <xref:System.Threading.CancellationToken.IsCancellationRequested%2A> 반환 하지 것입니다 `true`합니다. 취소할 수 없는 취소 토큰 정적 반환한 <xref:System.Threading.CancellationToken.None%2A?displayProperty=nameWithType> 속성입니다.  
  
 취소 토큰 수 있는지 여부를 확인 하려면이 속성을 선택적으로 사용할 수의 값을 검사 하기 전에 취소는 <xref:System.Threading.CancellationToken.IsCancellationRequested%2A> 취소 되었는지 여부를 결정 하는 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>현재 <see cref="T:System.Threading.CancellationToken" /> 인스턴스와 지정한 토큰이 같은지 여부를 확인합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationToken.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (other As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="other">이 인스턴스와 비교할 다른 개체입니다.</param>
        <summary>현재 <see cref="T:System.Threading.CancellationToken" /> 인스턴스와 지정한 <see cref="T:System.Object" />가 같은지 여부를 확인합니다.</summary>
        <returns>
          <paramref name="other" />가 <see cref="T:System.Threading.CancellationToken" />이고 두 인스턴스가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 자세한 내용은 설명 부분을 참조하세요. </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
## Remarks  

두 취소 토큰은 다음 조건 중 하나에 해당할 경우: 

- 동일한와 연결 된 <xref:System.Threading.CancellationTokenSource>합니다.

- 둘 다 생성 된 public에서 <xref:System.Threading.CancellationToken> 생성자 및 해당 <xref:System.Threading.CancellationToken.IsCancellationRequested?displayProperty=nameWithType> 값이 동일 합니다.

- 두 취소 토큰의 값은 <xref:System.Threading.CancellationToken.None?displayProperty=nameWithType>합니다.

       ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">연결된 <see cref="T:System.Threading.CancellationTokenSource" />가 삭제되었습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Threading.CancellationToken other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Threading.CancellationToken other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationToken.Equals(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As CancellationToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Threading::CancellationToken other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="other">이 인스턴스와 비교할 다른 <see cref="T:System.Threading.CancellationToken" />입니다.</param>
        <summary>현재 <see cref="T:System.Threading.CancellationToken" /> 인스턴스와 지정한 토큰이 같은지 여부를 확인합니다.</summary>
        <returns>
          인스턴스가 서로 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 자세한 내용은 설명 부분을 참조하세요. </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
## Remarks  

두 취소 토큰은 다음 조건 중 하나에 해당할 경우: 

- 동일한와 연결 된 <xref:System.Threading.CancellationTokenSource>합니다.

- 둘 다 생성 된 public에서 <xref:System.Threading.CancellationToken> 생성자 및 해당 <xref:System.Threading.CancellationToken.IsCancellationRequested?displayProperty=nameWithType> 값이 동일 합니다.

- 두 취소 토큰의 값은 <xref:System.Threading.CancellationToken.None?displayProperty=nameWithType>합니다.

       ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationToken.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Threading.CancellationToken" />의 해시 함수 역할을 수행합니다.</summary>
        <returns>현재 <see cref="T:System.Threading.CancellationToken" /> 인스턴스에 대한 해시 코드입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCancellationRequested">
      <MemberSignature Language="C#" Value="public bool IsCancellationRequested { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCancellationRequested" />
      <MemberSignature Language="DocId" Value="P:System.Threading.CancellationToken.IsCancellationRequested" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCancellationRequested As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCancellationRequested { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 토큰의 취소가 요청되었는지 여부를 가져옵니다.</summary>
        <value>
          <see langword="true" /> 취소에이 토큰에 대 한 요청 그렇지 않으면 <see langword="false" />합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 처음에 취소 된 상태에서 생성 되 고 토큰을 통해 또는 호출을 통해이 토큰에 대 한 취소를 요청 되었는지 여부를 나타냅니다 <xref:System.Threading.CancellationTokenSource.Cancel%2A> 에서 토큰의 연결 된 <xref:System.Threading.CancellationTokenSource>합니다.  
  
 이 속성이 `true`, 취소가 요청 되었는지만 보장 합니다. 모든 등록 된 처리기가 실행을 완료 또는 취소 요청 모든 등록 된 처리기에 완전히 전파 완료 있는지는 보장 하지 않습니다. 추가 동기화는 특히 관련된 개체를 동시에 취소 되는 있는 경우에는 필요할 수 있습니다.  
  
   
  
## Examples  
 다음은 될 때까지 서버 프로세스를 실행 하는 간단한 예제는 <xref:System.Threading.CancellationToken.IsCancellationRequested%2A> 속성에서 반환 `true`합니다.  
  
 [!code-csharp[System.Threading.Tasks.CancellationToken.IsCancellationRequested#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Threading.Tasks.CancellationToken.IsCancellationRequested/cs/cancellation.cs#12)]
 [!code-vb[System.Threading.Tasks.CancellationToken.IsCancellationRequested#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Threading.Tasks.CancellationToken.IsCancellationRequested/vb/cancelthreads.vb#12)]  
  
 이 예제에서는 인스턴스화합니다는 <xref:System.Threading.CancellationTokenSource> 취소 토큰에 대 한 액세스를 제어 하는 개체입니다. 다음 두 개의 스레드 프로시저를 정의합니다. 첫 번째 키보드 풀 및 "C" 키를 누를 때 호출 하는 람다 식으로 정의 되어 <xref:System.Threading.CancellationTokenSource.Cancel%2A?displayProperty=nameWithType> 취소 된 상태로 취소 토큰을 설정 합니다. 두 번째 매개 변수가 있는 메서드는 `ServerClass.StaticMethod`때까지 루프를 실행 하는 <xref:System.Threading.CancellationToken.IsCancellationRequested%2A> 속성은 `true`합니다.  
  
 실행 하는 스레드가 될 때까지 다음가 시작 두 스레드 및 블록은 주 스레드는 `ServerClass.StaticMethod` 메서드를 종료 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="public static System.Threading.CancellationToken None { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Threading.CancellationToken None" />
      <MemberSignature Language="DocId" Value="P:System.Threading.CancellationToken.None" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property None As CancellationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Threading::CancellationToken None { System::Threading::CancellationToken get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>빈 <see cref="T:System.Threading.CancellationToken" /> 값을 반환합니다.</summary>
        <value>빈 취소 토큰입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에서 반환 되는 취소 토큰을 취소할 수 없습니다. 즉, 해당 <xref:System.Threading.CancellationToken.CanBeCanceled%2A> 속성은 `false`합니다.  
  
 C# 사용할 수도 있습니다 [default(CancellationToken)](~/docs/csharp/language-reference/keywords/default.md) 문을 빈 취소 토큰을 만들어야 합니다. 

 두 빈 취소 토큰은 항상 있습니다.
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Threading.CancellationToken left, System.Threading.CancellationToken right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Threading.CancellationToken left, valuetype System.Threading.CancellationToken right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationToken.op_Equality(System.Threading.CancellationToken,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As CancellationToken, right As CancellationToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Threading::CancellationToken left, System::Threading::CancellationToken right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Threading.CancellationToken" />
        <Parameter Name="right" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="left">첫 번째 인스턴스입니다.</param>
        <param name="right">두 번째 인스턴스입니다.</param>
        <summary>두 개의 <see cref="T:System.Threading.CancellationToken" /> 인스턴스가 같은지 여부를 확인합니다.</summary>
        <returns>
          인스턴스가 동일한 경우 <see langword="true" />이며, 그렇지 않은 경우 <see langword="false" />입니다. 자세한 내용은 설명 섹션을 참조하세요.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
## Remarks  

두 취소 토큰은 다음 조건 중 하나에 해당할 경우: 

- 동일한와 연결 된 <xref:System.Threading.CancellationTokenSource>합니다.

- 둘 다 생성 된 public에서 <xref:System.Threading.CancellationToken> 생성자 및 해당 <xref:System.Threading.CancellationToken.IsCancellationRequested?displayProperty=nameWithType> 값이 동일 합니다.

- 두 취소 토큰의 값은 <xref:System.Threading.CancellationToken.None?displayProperty=nameWithType>합니다.
       ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">연결된 <see cref="T:System.Threading.CancellationTokenSource" />가 삭제되었습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Threading.CancellationToken left, System.Threading.CancellationToken right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Threading.CancellationToken left, valuetype System.Threading.CancellationToken right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationToken.op_Inequality(System.Threading.CancellationToken,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As CancellationToken, right As CancellationToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Threading::CancellationToken left, System::Threading::CancellationToken right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Threading.CancellationToken" />
        <Parameter Name="right" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="left">첫 번째 인스턴스입니다.</param>
        <param name="right">두 번째 인스턴스입니다.</param>
        <summary>두 <see cref="T:System.Threading.CancellationToken" /> 인스턴스가 서로 다른지 여부를 확인합니다.</summary>
        <returns>
          인스턴스가 서로 다르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
## Remarks  

같음 정의 대 한 참조는 <xref:System.Threading.CancellationToken.Equals%2A> 메서드. 
       ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">연결된 <see cref="T:System.Threading.CancellationTokenSource" />가 삭제되었습니다.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Register">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>이 <see cref="T:System.Threading.CancellationToken" />이 취소될 때 호출할 대리자를 등록합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationTokenRegistration Register (Action callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.CancellationTokenRegistration Register(class System.Action callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationToken.Register(System.Action)" />
      <MemberSignature Language="VB.NET" Value="Public Function Register (callback As Action) As CancellationTokenRegistration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::CancellationTokenRegistration Register(Action ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationTokenRegistration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="callback">
          <see cref="T:System.Threading.CancellationToken" />이 취소될 때 실행할 대리자입니다.</param>
        <summary>이 <see cref="T:System.Threading.CancellationToken" />이 취소될 때 호출할 대리자를 등록합니다.</summary>
        <returns>콜백 등록을 취소하는 데 사용할 수 있는 <see cref="T:System.Threading.CancellationTokenRegistration" /> 인스턴스입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 토큰이 취소 된 상태로 이미 있으면 대리자는 즉시, 동기적으로 실행 됩니다. 이 메서드 호출에서 대리자를 생성 하는 모든 예외를 전파 됩니다.  
  
 현재 <xref:System.Threading.ExecutionContext> 대리자와 함께 캡처하고 실행할 때 사용 됩니다. 

 현재 <xref:System.Threading.SynchronizationContext> 캡처되지 않습니다.
 
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">연결된 <see cref="T:System.Threading.CancellationTokenSource" />가 삭제되었습니다.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callback" />가 null인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationTokenRegistration Register (Action callback, bool useSynchronizationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.CancellationTokenRegistration Register(class System.Action callback, bool useSynchronizationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationToken.Register(System.Action,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Register (callback As Action, useSynchronizationContext As Boolean) As CancellationTokenRegistration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::CancellationTokenRegistration Register(Action ^ callback, bool useSynchronizationContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationTokenRegistration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
        <Parameter Name="useSynchronizationContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="callback">
          <see cref="T:System.Threading.CancellationToken" />이 취소될 때 실행할 대리자입니다.</param>
        <param name="useSynchronizationContext">현재 <see cref="T:System.Threading.SynchronizationContext" />를 캡처하여 <c>콜백</c>을 호출할 때 사용할지 여부를 나타내는 값입니다.</param>
        <summary>이 <see cref="T:System.Threading.CancellationToken" />이 취소될 때 호출할 대리자를 등록합니다.</summary>
        <returns>콜백 등록을 취소하는 데 사용할 수 있는 <see cref="T:System.Threading.CancellationTokenRegistration" /> 인스턴스입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 토큰이 취소 된 상태로 이미 있으면 대리자는 즉시, 동기적으로 실행 됩니다. 이 메서드 호출에서 대리자를 생성 하는 모든 예외를 전파 됩니다.  
  
 현재 <xref:System.Threading.ExecutionContext> 대리자와 함께 캡처하고 실행할 때 사용 됩니다. 

 경우 `useSynchronizationContext` 은 `true`, 현재 <xref:System.Threading.SynchronizationContext>, 하는 경우 하나, 대리자와 함께 캡처된도 있으며 실행할 때 사용 됩니다. 그렇지 않으면 <xref:System.Threading.SynchronizationContext> 캡처되지 않습니다.
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">연결된 <see cref="T:System.Threading.CancellationTokenSource" />가 삭제되었습니다.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callback" />가 null인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationTokenRegistration Register (Action&lt;object&gt; callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.CancellationTokenRegistration Register(class System.Action`1&lt;object&gt; callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationToken.Register(System.Action{System.Object},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Register (callback As Action(Of Object), state As Object) As CancellationTokenRegistration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::CancellationTokenRegistration Register(Action&lt;System::Object ^&gt; ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationTokenRegistration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action&lt;System.Object&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <see cref="T:System.Threading.CancellationToken" />이 취소될 때 실행할 대리자입니다.</param>
        <param name="state">대리자가 호출될 때 <c>콜백</c>에 전달할 상태입니다. null일 수 있습니다.</param>
        <summary>이 <see cref="T:System.Threading.CancellationToken" />이 취소될 때 호출할 대리자를 등록합니다.</summary>
        <returns>콜백 등록을 취소하는 데 사용할 수 있는 <see cref="T:System.Threading.CancellationTokenRegistration" /> 인스턴스입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 토큰이 취소 된 상태로 이미 있으면 대리자는 즉시, 동기적으로 실행 됩니다. 이 메서드 호출에서 대리자를 생성 하는 모든 예외를 전파 됩니다.  
  
 현재 <xref:System.Threading.ExecutionContext> 대리자와 함께 캡처하고 실행할 때 사용 됩니다. 

 현재 <xref:System.Threading.SynchronizationContext> 캡처되지 않습니다.
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">연결된 <see cref="T:System.Threading.CancellationTokenSource" />가 삭제되었습니다.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callback" />가 null인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationTokenRegistration Register (Action&lt;object&gt; callback, object state, bool useSynchronizationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.CancellationTokenRegistration Register(class System.Action`1&lt;object&gt; callback, object state, bool useSynchronizationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationToken.Register(System.Action{System.Object},System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Register (callback As Action(Of Object), state As Object, useSynchronizationContext As Boolean) As CancellationTokenRegistration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::CancellationTokenRegistration Register(Action&lt;System::Object ^&gt; ^ callback, System::Object ^ state, bool useSynchronizationContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationTokenRegistration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action&lt;System.Object&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="useSynchronizationContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="callback">
          <see cref="T:System.Threading.CancellationToken" />이 취소될 때 실행할 대리자입니다.</param>
        <param name="state">대리자가 호출될 때 <c>콜백</c>에 전달할 상태입니다. null일 수 있습니다.</param>
        <param name="useSynchronizationContext">현재 <see cref="T:System.Threading.SynchronizationContext" />를 캡처하여 <c>콜백</c>을 호출할 때 사용할지 여부를 나타내는 부울 값입니다.</param>
        <summary>이 <see cref="T:System.Threading.CancellationToken" />이 취소될 때 호출할 대리자를 등록합니다.</summary>
        <returns>콜백 등록을 취소하는 데 사용할 수 있는 <see cref="T:System.Threading.CancellationTokenRegistration" /> 인스턴스입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 토큰이 취소 된 상태로 이미 있으면 대리자는 즉시, 동기적으로 실행 됩니다. 이 메서드 호출에서 대리자를 생성 하는 모든 예외를 전파 됩니다.  
  
 현재 <xref:System.Threading.ExecutionContext> 대리자와 함께 캡처하고 실행할 때 사용 됩니다. 

 경우 `useSynchronizationContext` 은 `true`, 현재 <xref:System.Threading.SynchronizationContext>, 하는 경우 하나, 대리자와 함께 캡처된도 있으며 실행할 때 사용 됩니다. 그렇지 않으면 <xref:System.Threading.SynchronizationContext> 캡처되지 않습니다.
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">연결된 <see cref="T:System.Threading.CancellationTokenSource" />가 삭제되었습니다.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callback" />가 null인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowIfCancellationRequested">
      <MemberSignature Language="C#" Value="public void ThrowIfCancellationRequested ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ThrowIfCancellationRequested() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationToken.ThrowIfCancellationRequested" />
      <MemberSignature Language="VB.NET" Value="Public Sub ThrowIfCancellationRequested ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ThrowIfCancellationRequested();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 토큰의 취소가 요청된 경우 <see cref="T:System.OperationCanceledException" />이 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 동일한 기능을을 제공합니다.  
  
 C#  
  
```csharp  
if (token.IsCancellationRequested)   
    throw new OperationCanceledException(token);  
```  
  
```vb  
If token.IsCancellationRequested Then  
    Throw New OperationCanceledException(token)  
End If  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">이 토큰의 취소가 요청되었습니다.</exception>
        <exception cref="T:System.ObjectDisposedException">연결된 <see cref="T:System.Threading.CancellationTokenSource" />가 삭제되었습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="WaitHandle">
      <MemberSignature Language="C#" Value="public System.Threading.WaitHandle WaitHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.WaitHandle WaitHandle" />
      <MemberSignature Language="DocId" Value="P:System.Threading.CancellationToken.WaitHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WaitHandle As WaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::WaitHandle ^ WaitHandle { System::Threading::WaitHandle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.WaitHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>토큰이 취소될 때 신호를 받는 <see cref="T:System.Threading.WaitHandle" />을 가져옵니다.</summary>
        <value>토큰이 취소될 때 신호를 받는 <see cref="T:System.Threading.WaitHandle" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에 액세스 하면는 <xref:System.Threading.WaitHandle> 인스턴스화할 수 있습니다. 좋습니다만 필요한 경우이 속성을 사용 하 고 연결을 삭제 해야 <xref:System.Threading.CancellationTokenSource> 이른 시일 내 (이 할당 된 핸들의 소스를 삭제 disposing)에 인스턴스. 핸들을 닫거나 직접 삭제 해야 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">연결된 <see cref="T:System.Threading.CancellationTokenSource" />가 삭제되었습니다.</exception>
      </Docs>
    </Member>
  </Members>
</Type>