<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PreAllocatedOverlapped.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b9c8213de3152acaef4de90e0a009eb799b79037.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b9c8213de3152acaef4de90e0a009eb799b79037</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.7.1,netstandard-2.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Threading.PreAllocatedOverlapped">
          <source>Represents pre-allocated state for native overlapped I/O operations.</source>
          <target state="translated">네이티브 중첩된 I/O 작업에 대한 미리 할당된 상태를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.Threading.PreAllocatedOverlapped.#ctor(System.Threading.IOCompletionCallback,System.Object,System.Object)">
          <source>A delegate that represents the callback method to invoke when each asynchronous I/O operation completes.</source>
          <target state="translated">각 비동기 I/O 작업이 완료될 때 호출할 콜백 메서드를 나타내는 대리자입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Threading.PreAllocatedOverlapped.#ctor(System.Threading.IOCompletionCallback,System.Object,System.Object)">
          <source>A user-supplied object that distinguishes the <ph id="ph1">&lt;see cref="T:System.Threading.NativeOverlapped" /&gt;</ph> instance produced from this object from other <ph id="ph2">&lt;see cref="T:System.Threading.NativeOverlapped" /&gt;</ph> instances.</source>
          <target state="translated">이 개체에서 생성된 <ph id="ph1">&lt;see cref="T:System.Threading.NativeOverlapped" /&gt;</ph> 인스턴스와 다른 <ph id="ph2">&lt;see cref="T:System.Threading.NativeOverlapped" /&gt;</ph> 인스턴스를 구별하는 사용자 제공 개체입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Threading.PreAllocatedOverlapped.#ctor(System.Threading.IOCompletionCallback,System.Object,System.Object)">
          <source>Its value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Threading.PreAllocatedOverlapped.#ctor(System.Threading.IOCompletionCallback,System.Object,System.Object)">
          <source>An object or array of objects that represent the input or output buffer for the operations.</source>
          <target state="translated">작업에 대한 입력 또는 출력 버퍼를 나타내는 개체의 배열 또는 개체입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Threading.PreAllocatedOverlapped.#ctor(System.Threading.IOCompletionCallback,System.Object,System.Object)">
          <source>Each object represents a buffer, such as an array of bytes.</source>
          <target state="translated">각 개체는 바이트 배열과 같은 버퍼를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Threading.PreAllocatedOverlapped.#ctor(System.Threading.IOCompletionCallback,System.Object,System.Object)">
          <source>Its value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Threading.PreAllocatedOverlapped.#ctor(System.Threading.IOCompletionCallback,System.Object,System.Object)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.PreAllocatedOverlapped" /&gt;</ph> class and specifies a delegate to invoke when each asynchronous I/O operation is complete, a user-provided object that provides context, and managed objects that serve as buffers.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.PreAllocatedOverlapped" /&gt;</ph> 클래스의 새 인스턴스를 초기화하고 각 비동기 I/O 작업이 완료될 때 호출할 대리자, 컨텍스트를 제공하는 사용자 제공 개체, 버퍼로 사용되는 관리되는 개체를 지정합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.PreAllocatedOverlapped.#ctor(System.Threading.IOCompletionCallback,System.Object,System.Object)">
          <source>The new <ph id="ph1">&lt;xref:System.Threading.PreAllocatedOverlapped&gt;</ph> instance can be passed to the <ph id="ph2">&lt;xref:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped%2A&gt;</ph> method to produce a <ph id="ph3">&lt;xref:System.Threading.NativeOverlapped&gt;</ph> instance that can be passed to the operating system in overlapped I/O operations.</source>
          <target state="translated">새 <ph id="ph1">&lt;xref:System.Threading.PreAllocatedOverlapped&gt;</ph> 인스턴스에 전달 될 수는 <ph id="ph2">&lt;xref:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped%2A&gt;</ph> 생성 하는 메서드는 <ph id="ph3">&lt;xref:System.Threading.NativeOverlapped&gt;</ph> 의 운영 체제에 전달 될 수 있는 인스턴스 겹쳐진 I/O 작업 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.PreAllocatedOverlapped.#ctor(System.Threading.IOCompletionCallback,System.Object,System.Object)">
          <source>A single <ph id="ph1">&lt;xref:System.Threading.PreAllocatedOverlapped&gt;</ph> instance can only be used for a single native I/O operation at a time.</source>
          <target state="translated">단일 <ph id="ph1">&lt;xref:System.Threading.PreAllocatedOverlapped&gt;</ph> 인스턴스는 한 번에 단일 기본 I/O 작업에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.PreAllocatedOverlapped.#ctor(System.Threading.IOCompletionCallback,System.Object,System.Object)">
          <source>However, the state stored in the <ph id="ph1">&lt;xref:System.Threading.PreAllocatedOverlapped&gt;</ph> instance can be reused for subsequent native operations.</source>
          <target state="translated">그러나 상태에 저장는 <ph id="ph1">&lt;xref:System.Threading.PreAllocatedOverlapped&gt;</ph> 네이티브 후속 작업에 대 한 인스턴스를 다시 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.PreAllocatedOverlapped.#ctor(System.Threading.IOCompletionCallback,System.Object,System.Object)">
          <source>The buffers specified in <ph id="ph1">`pinData`</ph> are pinned until the <ph id="ph2">&lt;xref:System.Threading.PreAllocatedOverlapped.Dispose%2A&gt;</ph> method is called.</source>
          <target state="translated">에 지정 된 버퍼 <ph id="ph1">`pinData`</ph> 될 때까지 고정 된 <ph id="ph2">&lt;xref:System.Threading.PreAllocatedOverlapped.Dispose%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Threading.PreAllocatedOverlapped.#ctor(System.Threading.IOCompletionCallback,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="callback" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callback" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Threading.PreAllocatedOverlapped.#ctor(System.Threading.IOCompletionCallback,System.Object,System.Object)">
          <source>This method was called after the <ph id="ph1">&lt;see cref="T:System.Threading.ThreadPoolBoundHandle" /&gt;</ph> was disposed.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;see cref="T:System.Threading.ThreadPoolBoundHandle" /&gt;</ph>이 삭제된 후 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Threading.PreAllocatedOverlapped.Dispose">
          <source>Frees the resources associated with this <ph id="ph1">&lt;see cref="T:System.Threading.PreAllocatedOverlapped" /&gt;</ph> instance.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Threading.PreAllocatedOverlapped" /&gt;</ph> 인스턴스와 연결된 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Threading.PreAllocatedOverlapped.Finalize">
          <source>Frees unmanaged resources before the current instance is reclaimed by garbage collection.</source>
          <target state="translated">현재 인스턴스가 가비지 수집으로 회수되기 전에 관리되지 않는 리소스를 해제합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>