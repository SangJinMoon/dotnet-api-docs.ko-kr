<Type Name="TimerCallback" FullName="System.Threading.TimerCallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="69b3f105e276f73fb4e520c9b7053918a180e13b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30526967" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void TimerCallback(object state);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TimerCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.TimerCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub TimerCallback(state As Object)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void TimerCallback(System::Object ^ state);" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Timer</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="state" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="state">
      <span data-ttu-id="2d82d-101">이 대리자에서 호출한 메서드와 관련된 응용 프로그램 관련 정보를 포함하는 개체 또는 <see langword="null" />입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2d82d-101">An object containing application-specific information relevant to the method invoked by this delegate, or <see langword="null" />.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="2d82d-102">
        <see cref="T:System.Threading.Timer" />의 호출을 처리하는 메서드를 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2d82d-102">Represents the method that handles calls from a <see cref="T:System.Threading.Timer" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d82d-103">사용 하 여 한 `TimerCallback` 호출 하는 방법을 지정 하는 대리자는 <xref:System.Threading.Timer>합니다.</span><span class="sxs-lookup"><span data-stu-id="2d82d-103">Use a `TimerCallback` delegate to specify the method that is called by a <xref:System.Threading.Timer>.</span></span> <span data-ttu-id="2d82d-104">이 메서드는; 타이머를 만든 스레드에서 실행 되지 않습니다. 시스템에서 제공 되는 별도 스레드 풀 스레드에서 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="2d82d-104">This method does not execute in the thread that created the timer; it executes in a separate thread pool thread that is provided by the system.</span></span> <span data-ttu-id="2d82d-105">`TimerCallback` 시작 시간이 경과 된 후 메서드를 한 번 호출 하 고 계속 될 때까지 타이머 간격 마다 한 번 호출 하는 대리자는 <xref:System.Threading.Timer.Dispose%2A> 메서드를 호출할 때까지 또는 <xref:System.Threading.Timer.Change%2A?displayProperty=nameWithType> 간격 값은 메서드는 <xref:System.Threading.Timeout.Infinite>합니다.</span><span class="sxs-lookup"><span data-stu-id="2d82d-105">The `TimerCallback` delegate invokes the method once after the start time elapses, and continues to invoke it once per timer interval until the <xref:System.Threading.Timer.Dispose%2A> method is called, or until the <xref:System.Threading.Timer.Change%2A?displayProperty=nameWithType> method is called with the interval value <xref:System.Threading.Timeout.Infinite>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d82d-106">콜백을 후 발생할 수 있습니다는 <xref:System.Threading.Timer.Dispose> 메서드 오버 로드가 호출 된 타이머 큐에 스레드 풀 스레드에서 실행에 대 한 콜백을 때문에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2d82d-106">Callbacks can occur after the <xref:System.Threading.Timer.Dispose> method overload has been called, because the timer queues callbacks for execution by thread pool threads.</span></span> <span data-ttu-id="2d82d-107">사용할 수는 <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> 메서드 오버 로드를 모든 콜백이 완료 될 때까지 기다립니다.</span><span class="sxs-lookup"><span data-stu-id="2d82d-107">You can use the <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> method overload to wait until all callbacks have completed.</span></span>  
  
 <span data-ttu-id="2d82d-108">타이머 대리자는 타이머는 생성 되며 변경할 수 없는 때 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2d82d-108">The timer delegate is specified when the timer is constructed, and cannot be changed.</span></span> <span data-ttu-id="2d82d-109">에 대 한 시작 시간은 `Timer` 에 전달 되는 `dueTime` 의 매개 변수는 `Timer` 기간과 생성자에 전달 되는 `period` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="2d82d-109">The start time for a `Timer` is passed in the `dueTime` parameter of the `Timer` constructors, and the period is passed in the `period` parameter.</span></span> <span data-ttu-id="2d82d-110">만들기 및 사용을 보여 주는 예제에 대 한는 `TimerCallback` 대리자를 참조 <xref:System.Threading.Timer?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="2d82d-110">For an example that demonstrates creating and using a `TimerCallback` delegate, see <xref:System.Threading.Timer?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d82d-111">다음 코드 예제에는 함께 사용할 대리자를 만드는 방법을 보여 줍니다는 `Timer` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2d82d-111">The following code example shows how to create the delegate used with the `Timer` class.</span></span>  
  
 [!code-cpp[System.Threading.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Timer/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Timer/CS/source.cs#1)]
 [!code-vb[System.Threading.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Timer/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.Timer" />
    <altmember cref="T:System.Threading.ThreadPool" />
  </Docs>
</Type>