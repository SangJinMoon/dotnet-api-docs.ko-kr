<Type Name="ResolveProgressChangedEventArgs" FullName="System.Net.PeerToPeer.ResolveProgressChangedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a272ffa782a4f6b08c5a921ae211b969748ae67f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30458957" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ResolveProgressChangedEventArgs : System.ComponentModel.ProgressChangedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResolveProgressChangedEventArgs extends System.ComponentModel.ProgressChangedEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ResolveProgressChangedEventArgs&#xA;Inherits ProgressChangedEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResolveProgressChangedEventArgs : System::ComponentModel::ProgressChangedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.ProgressChangedEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> 이벤트에 신호를 보낼 때 함께 사용됩니다.  특정 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />에 대한 <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> 작업의 응답으로 <see cref="T:System.Net.PeerToPeer.PeerName" /> 개체를 찾을 때마다 신호를 받습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 여러 개의 피어 이름 레코드 개체 쿼리 중인 클라우드에 있으면이 이벤트는 한 번에 대 한 각 레코드 개체를 찾을 수입니다. <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 이벤트는 모든 끝점을 찾은 후 때 한 번만 발생 합니다.  
  
 일반 프로세스 완료 확인자 개체 피어 이름에 대 한 쿼리를 클라우드에의 끝에 도달 했습니다 없거나에 도달해 레코드 항목의 최대 수는 피어에 대 한 이름 레코드 컬렉션을 의미 합니다.  
  
 해결 프로그램의이 인스턴스에 대 한 모든 참조는 토큰 userState에 맞게 조정 <xref:System.Object>,이 비동기 확인 요청에 대 한 고유 식별자 인 합니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResolveProgressChangedEventArgs (System.Net.PeerToPeer.PeerNameRecord peerNameRecord, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerNameRecord peerNameRecord, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.ResolveProgressChangedEventArgs.#ctor(System.Net.PeerToPeer.PeerNameRecord,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResolveProgressChangedEventArgs(System::Net::PeerToPeer::PeerNameRecord ^ peerNameRecord, System::Object ^ userToken);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="peerNameRecord" Type="System.Net.PeerToPeer.PeerNameRecord" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerNameRecord">찾을 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 개체입니다.</param>
        <param name="userToken">
          <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> 작업이 시작되었을 때 제공된 고유한 사용자 상태 개체입니다.</param>
        <summary>
          <see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 확인 된 피어 이름이를 통해 액세스할 수는 <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> 속성입니다.  
  
 사용자 상태에서 상속 된 <xref:System.ComponentModel.AsyncCompletedEventArgs>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PeerNameRecord">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecord PeerNameRecord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.PeerNameRecord PeerNameRecord" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.ResolveProgressChangedEventArgs.PeerNameRecord" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PeerNameRecord As PeerNameRecord" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::PeerNameRecord ^ PeerNameRecord { System::Net::PeerToPeer::PeerNameRecord ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecord</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>확인할 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 개체를 가져옵니다.</summary>
        <value>특정 <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" />에 대한 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> 작업의 응답으로 찾은 피어 이름 레코드 개체입니다.  
  
 명시적으로 지정한 경우 이외에는 모든 속성의 기본값은 참조 형식에 대해 <see langword="null" />이고, <see langword="int" /> 형식의 속성에 대해 0입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 보안 되지 않은 피어 이름 같은 여러 사용자가 동시에 등록할 수 있습니다 <xref:System.Net.PeerToPeer.Cloud>, 여러 끝점과 연결 하 고 있습니다. 따라서는 <xref:System.Net.PeerToPeer.PeerNameResolver> 클래스 피어 이름 레코드 이름을 피어 투 피어 또는 클라우드와 피어 이름 확인을 사용 됩니다. 진행률을 보고 하는 이벤트가 피어 이름 확인자에 대해 클라우드를 쿼리 하는 동안 찾을 때마다는 <xref:System.Net.PeerToPeer.PeerName>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>