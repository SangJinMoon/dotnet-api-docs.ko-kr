<Type Name="PeerNameResolver" FullName="System.Net.PeerToPeer.PeerNameResolver">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="67354bae27dcd8deeb32dbf337b9451f0282fe34" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52208505" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PeerNameResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi PeerNameResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerNameResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerNameResolver" />
  <TypeSignature Language="F#" Value="type PeerNameResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="53142-101">PNRP Namespace Provider API 프로토콜을 사용하여 <see cref="T:System.Net.PeerToPeer.PeerName" />을 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />로 확인하는 값을 지정합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="53142-101">Specifies the values that resolve a <see cref="T:System.Net.PeerToPeer.PeerName" /> to a <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> using the PNRP Namespace Provider API protocol.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53142-102">A <xref:System.Net.PeerToPeer.PeerNameRecord> 에 대 한 모든 정보를 포함 하는 합니다 <xref:System.Net.PeerToPeer.PeerName> 에 게시 되는 <xref:System.Net.PeerToPeer.Cloud> 또는 해결 과정에서 쿼리 된 클라우드에.</span><span class="sxs-lookup"><span data-stu-id="53142-102">A <xref:System.Net.PeerToPeer.PeerNameRecord> which contains all the information for the <xref:System.Net.PeerToPeer.PeerName> that was published in the <xref:System.Net.PeerToPeer.Cloud> or cloud(s) that were queried during the resolve process.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="53142-103">
            <see cref="T:System.Net.PeerToPeer.PeerNameResolver" /> 클래스의 새로운 기본 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-103">Initializes a new default instance of the <see cref="T:System.Net.PeerToPeer.PeerNameResolver" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53142-104">성공적으로 해결 한 후를 <xref:System.Net.PeerToPeer.PeerName>, <xref:System.Net.PeerToPeer.PeerNameRecord> 에 지정 된 모든 정보가 <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> 동안 쿼리 된 클라우드에 게시 되는 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 작업.</span><span class="sxs-lookup"><span data-stu-id="53142-104">After successfully resolving a <xref:System.Net.PeerToPeer.PeerName>, the <xref:System.Net.PeerToPeer.PeerNameRecord> contains all the information for the specified <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> that was published in the cloud(s) that were queried during the <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResolveCompleted">
      <MemberSignature Language="C#" Value="protected void OnResolveCompleted (System.Net.PeerToPeer.ResolveCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnResolveCompleted(class System.Net.PeerToPeer.ResolveCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnResolveCompleted (e As ResolveCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnResolveCompleted(System::Net::PeerToPeer::ResolveCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnResolveCompleted : System.Net.PeerToPeer.ResolveCompletedEventArgs -&gt; unit" Usage="peerNameResolver.OnResolveCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.PeerToPeer.ResolveCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="53142-105">
            <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> 이벤트에 의해 반환된 데이터가 포함된 <see cref="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-105">The <see cref="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" /> object that contains the data returned by the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="53142-106">
            <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> 이벤트가 발생된 후에 피어 확인 데이터를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-106">Returns peer resolution data after the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> event is raised.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53142-107">이 메서드는 피어 확인이 완료 된 후 피어 이름 확인 데이터를 처리 하는 데 사용 하는 비동기 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="53142-107">This method is an asynchronous callback used to process peer name resolution data after peer resolution has completed.</span></span>  
  
 <span data-ttu-id="53142-108">이 파생된 형식을 재정의할 수 있습니다 때 메서드를 추가 작업을 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 피어 확인자 개체에서 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-108">Derived types can override this method to perform additional tasks when the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event is raised by the peer resolver object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnResolveProgressChanged">
      <MemberSignature Language="C#" Value="protected void OnResolveProgressChanged (System.Net.PeerToPeer.ResolveProgressChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnResolveProgressChanged(class System.Net.PeerToPeer.ResolveProgressChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnResolveProgressChanged (e As ResolveProgressChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnResolveProgressChanged(System::Net::PeerToPeer::ResolveProgressChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnResolveProgressChanged : System.Net.PeerToPeer.ResolveProgressChangedEventArgs -&gt; unit" Usage="peerNameResolver.OnResolveProgressChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.PeerToPeer.ResolveProgressChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="53142-109">
            <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> 이벤트에 의해 반환된 피어 이름 확인 진행률 정보를 포함하는 <see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-109">
              <see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" /> object that contains peer name resolution progress information returned by the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="53142-110">
            <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> 이벤트가 발생할 때 피어 확인 진행률 데이터를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-110">Returns peer resolution progress data when the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> event is raised.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53142-111">이 메서드는 피어 확인 진행률 요청한 후 피어 확인 데이터를 처리 하는 데 사용 하는 비동기 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="53142-111">This method is an asynchronous callback used to process peer resolution data after peer resolution progress has been requested.</span></span>  
  
 <span data-ttu-id="53142-112">이 파생된 형식을 재정의할 수 메서드를 추가 될 때 작업을 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-112">Derived types can override this method to perform additional tasks when the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="53142-113">파생된 형식에서이 메서드를 재정의할 때 호출 해야 기본 형식의 <see cref="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="53142-113">When overriding this method in a derived type, be sure to call the base type's <see cref="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resolve">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="53142-114">PNRP 프로토콜을 사용하여 <see cref="T:System.Net.PeerToPeer.PeerName" /> 개체를 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />로 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-114">Resolves a <see cref="T:System.Net.PeerToPeer.PeerName" /> object to a <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> using the PNRP protocol.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53142-115">이 메서드는 클라우드의 피어 이름을 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-115">This method associates peer names to clouds.</span></span> <span data-ttu-id="53142-116">호출을 <xref:System.Net.PeerToPeer.PeerNameResolver> 호출 하는 것과 비슷합니다는 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 각 피어 이름 레코드에 대 한 메서드는 <xref:System.Net.PeerToPeer.PeerNameRecordCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-116">Calling the <xref:System.Net.PeerToPeer.PeerNameResolver> method is similar to calling the <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method for each peer name record in the <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</span></span> <span data-ttu-id="53142-117">참고 개별 피어 이름 레코드 확인 메서드를 사용 하 여 여러 피어 이름 확인 무효화 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="53142-117">Note that using the Resolve method on an individual peer name record does not invalidate resolving multiple peer names.</span></span>  
  
 <span data-ttu-id="53142-118">에 대 한 모든 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 메서드는 해당 하는 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="53142-118">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="53142-119">ResolveAsync 메서드 비동기 이벤트 처리에 대 한 매개 변수 목록의 시스템 토큰이 포함 된다는 점을 제외 하 고는 전달 될 매개 변수를 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-119">They are identical in the parameters they are passed, except that the ResolveAsync method includes a system token in its parameter list for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="53142-120">경우는 <xref:System.Net.PeerToPeer.Cloud> 매개 변수를 지정 하지 않으면, 메서드를 사용 하는 <xref:System.Net.PeerToPeer.Cloud.Available> 바로 가기를 클라우드 매개 변수를 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-120">If the <xref:System.Net.PeerToPeer.Cloud> parameter is not supplied, the method uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in cloud parameters.</span></span>  <span data-ttu-id="53142-121">경우는 `maxRecords` 기본값인 0을 사용 하면 매개 변수가 <xref:System.ArgumentOutOfRangeException> 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-121">If the `maxRecords` parameter is missing, the default value of zero causes an <xref:System.ArgumentOutOfRangeException> exception to be thrown.</span></span>  
  
 <span data-ttu-id="53142-122">확인 작업 오류 완료 되거나 취소 될 경우에이 이벤트를 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-122">This event will also be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameRegistration" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve peerName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <span data-ttu-id="53142-123">확인할 <see cref="T:System.Net.PeerToPeer.PeerName" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-123">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="53142-124">호출 피어에 알려진 모든 클라우드에서 지정된 <see cref="T:System.Net.PeerToPeer.PeerName" />을 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-124">Resolves the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in all clouds known to the calling peer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="53142-125">지정된 피어 이름과 연결된 모든 피어 이름 레코드(<see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> 개체로 표시)를 포함하는 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-125">A <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> that contains all peer name records (represented as <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects) associated with the specified peer name.</span>
          </span>
          <span data-ttu-id="53142-126">보안되지 않은 피어 이름의 경우 동일한 <see cref="T:System.Net.PeerToPeer.PeerName" />을 같은 <see cref="T:System.Net.PeerToPeer.Cloud" />의 여러 사용자가 등록하고 여러 엔드포인트와 연결할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-126">For unsecured peer names, the same <see cref="T:System.Net.PeerToPeer.PeerName" /> can be registered by different users in the same <see cref="T:System.Net.PeerToPeer.Cloud" />, and associated with different endpoints.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53142-127">이 메서드는 클라우드의 피어 이름을 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-127">This method associates a peer name to clouds.</span></span> <span data-ttu-id="53142-128">모든 클라우드를 쿼리하여는 <xref:System.Net.PeerToPeer.PeerName>합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-128">All clouds are queried for the <xref:System.Net.PeerToPeer.PeerName>.</span></span> <span data-ttu-id="53142-129">피어 이름을 확인할 수 없습니다. 나는 경우 `null`, <xref:System.Net.PeerToPeer.PeerToPeerException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="53142-129">If the peer name cannot be resolved or is `null`, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="53142-130">보안 되지 않은 피어 이름에 대 한 이름이 있습니다 수 등록 (및 다른 끝점과 연결 된) 동일한 클라우드 내의 여러 피어가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="53142-130">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="53142-131">호출을 <xref:System.Net.PeerToPeer.PeerNameResolver> 호출 하는 것과 비슷합니다는 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 각 피어 이름 레코드에 대 한 메서드는 <xref:System.Net.PeerToPeer.PeerNameRecordCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-131">Calling the <xref:System.Net.PeerToPeer.PeerNameResolver> method is similar to calling the <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method for each peer name record in the <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</span></span> <span data-ttu-id="53142-132">참고 개별 피어 이름 레코드 확인 메서드를 사용 하 여 여러 피어 이름 확인 무효화 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="53142-132">Note that using the Resolve method on an individual peer name record does not invalidate resolving multiple peer names.</span></span>  
  
 <span data-ttu-id="53142-133">에 대 한 모든 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 메서드는 해당 하는 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="53142-133">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="53142-134">ResolveAsync 메서드 비동기 이벤트 처리에 대 한 시스템 토큰이 포함 된다는 점을 제외 하 고 해당 매개 변수 목록은 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-134">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="53142-135">경우는 <xref:System.Net.PeerToPeer.Cloud> 매개 변수를 지정 하지 않으면, 메서드를 사용 하는 <xref:System.Net.PeerToPeer.Cloud.Available> 바로 가기를 클라우드 매개 변수를 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-135">If the <xref:System.Net.PeerToPeer.Cloud> parameter is not supplied, the method uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in cloud parameters.</span></span>  
  
 <span data-ttu-id="53142-136"><xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 확인 작업 오류 완료 되거나 취소 될 경우 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-136">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53142-137">다음 코드 예제에서는 해결 하는 방법을 보여 줍니다.는 <xref:System.Net.PeerToPeer.PeerName> 에 게시 된 <xref:System.Net.PeerToPeer.Cloud>합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-137">The following code example illustrates how to resolve a <xref:System.Net.PeerToPeer.PeerName> published in any <xref:System.Net.PeerToPeer.Cloud>.</span></span>  
  
 [!code-csharp[NCLPNRPPeerNameResolver#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPPeerNameResolver/CS/PeerNameResolver.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="53142-138">
            <paramref name="peerName" /> 매개 변수가 <see langword="null" />로 설정된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-138">The <paramref name="peerName" /> parameter is set to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <span data-ttu-id="53142-139">지정된 피어 이름을 확인할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-139">The peer name specified cannot be resolved.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameRegistration" />
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, int maxRecords);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName * int -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve (peerName, maxRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="maxRecords" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <span data-ttu-id="53142-140">확인할 <see cref="T:System.Net.PeerToPeer.PeerName" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-140">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span>
          </span>
        </param>
        <param name="maxRecords">
          <span data-ttu-id="53142-141">모든 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 개체에서 제공된 <paramref name="peerName" />을 확인하여 가져올 최대 <see cref="T:System.Net.PeerToPeer.Cloud" /> 개체의 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-141">The maximum number of <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects to obtain from all <see cref="T:System.Net.PeerToPeer.Cloud" /> objects for the supplied <paramref name="peerName" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="53142-142">호출 피어에 알려진 모든 클라우드에서 지정된 피어 이름을 확인하여 지정된 수를 초과하지 않는 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-142">Resolves the specified peer name in all clouds known to the calling peer, returning no more than the specified number of <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="53142-143">크기가 <paramref name="maxRecords" /> 항목보다 작거나 같은 <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-143">A <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> whose size is less than or equal to <paramref name="maxRecords" /> entries.</span>
          </span>
          <span data-ttu-id="53142-144">이 컬렉션에는 확인된 <see cref="T:System.Net.PeerToPeer.PeerName" />과 연결되어 있는 피어 이름 레코드가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-144">This collection contains peer name records associated with the <see cref="T:System.Net.PeerToPeer.PeerName" /> that was resolved.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53142-145">이 메서드는 클라우드의 피어 이름을 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-145">This method associates a peer name to clouds.</span></span> <span data-ttu-id="53142-146">모든 클라우드 피어 이름에 대해 쿼리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="53142-146">All clouds are queried for the peer name.</span></span> <span data-ttu-id="53142-147">보안 되지 않은 피어 이름에 대 한 피어 이름이 같은 여러 사용자가 등록 수 <xref:System.Net.PeerToPeer.Cloud>, 다른 끝점과 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-147">For unsecured peer names, the same peer name can be registered by different users in the same <xref:System.Net.PeerToPeer.Cloud>, and associated with different endpoints.</span></span> <span data-ttu-id="53142-148">경우는 <xref:System.Net.PeerToPeer.PeerName> 확인할 수 없습니다 (예를 들어 피어 이름 게시 되지 않은)는 <xref:System.Net.PeerToPeer.PeerToPeerException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="53142-148">If the <xref:System.Net.PeerToPeer.PeerName> cannot be resolved (for example, the peer name is not published) an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="53142-149">에 대 한 모든 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 메서드는 해당 하는 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="53142-149">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="53142-150">ResolveAsync 메서드 비동기 이벤트 처리에 대 한 시스템 토큰이 포함 된다는 점을 제외 하 고 해당 매개 변수 목록은 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-150">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="53142-151"><xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 확인 작업 오류 완료 되거나 취소 될 경우 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-151">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="53142-152">
            <paramref name="peerName" /> 매개 변수가 <see langword="null" />로 설정된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-152">The <paramref name="peerName" /> parameter is set to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="53142-153">
            <paramref name="maxRecords" /> 매개 변수가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-153">The <paramref name="maxRecords" /> parameter is less than or equal to zero.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <span data-ttu-id="53142-154">제공된 피어 이름을 확인할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-154">The supplied peer name cannot be resolved.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve (peerName, cloud)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <span data-ttu-id="53142-155">확인할 <see cref="T:System.Net.PeerToPeer.PeerName" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-155">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span>
          </span>
        </param>
        <param name="cloud">
          <span data-ttu-id="53142-156">피어 이름을 확인할 <see cref="T:System.Net.PeerToPeer.Cloud" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-156">The <see cref="T:System.Net.PeerToPeer.Cloud" /> in which to resolve the peer name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="53142-157">지정된 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" />에서 특정 <see cref="T:System.Net.PeerToPeer.Cloud" />을 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-157">Resolves the specified <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> in the specified <see cref="T:System.Net.PeerToPeer.Cloud" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="53142-158">지정된 피어 이름과 연결된 모든 피어 이름 레코드(<see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> 개체로 표시)를 포함하는 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-158">
              <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> that contains all peer name records (represented as <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects) associated with the specified peer name.</span>
          </span>
          <span data-ttu-id="53142-159">보안되지 않은 피어 이름의 경우 동일한 <see cref="T:System.Net.PeerToPeer.PeerName" />을 같은 <see cref="T:System.Net.PeerToPeer.Cloud" />의 여러 사용자가 등록하고 여러 엔드포인트와 연결할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-159">For unsecured peer names, the same <see cref="T:System.Net.PeerToPeer.PeerName" /> can be registered by different users in the same <see cref="T:System.Net.PeerToPeer.Cloud" />, and associated with different endpoints.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53142-160">경우는 <xref:System.Net.PeerToPeer.PeerName> 확인할 수 없습니다 (즉, 피어 이름 게시 되지 않은)는 <xref:System.Net.PeerToPeer.PeerToPeerException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="53142-160">If the <xref:System.Net.PeerToPeer.PeerName> cannot be resolved (i.e., the peer name is not published) an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="53142-161">보안 되지 않은 피어 이름에 대 한 이름이 있습니다 수 등록 (및 다른 끝점과 연결 된) 동일한 클라우드 내의 여러 피어가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="53142-161">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="53142-162">에 대 한 모든 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 메서드는 해당 하는 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="53142-162">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="53142-163">ResolveAsync 메서드 비동기 이벤트 처리에 대 한 시스템 토큰이 포함 된다는 점을 제외 하 고 해당 매개 변수 목록은 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-163">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="53142-164">경우는 <xref:System.Net.PeerToPeer.Cloud> 매개 변수는 `null`, <xref:System.Net.PeerToPeer.PeerNameResolver> 사용 하 여를 <xref:System.Net.PeerToPeer.Cloud.Available> 바로 가기를 입력 합니다 <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, 및 <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-164">If the <xref:System.Net.PeerToPeer.Cloud> parameter is `null`, the <xref:System.Net.PeerToPeer.PeerNameResolver> uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span></span>  
  
 <span data-ttu-id="53142-165"><xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 확인 작업 오류 완료 되거나 취소 될 경우 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-165">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="53142-166">
            <paramref name="peerName" /> 매개 변수가 <see langword="null" />로 설정된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-166">The <paramref name="peerName" /> parameter is set to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <span data-ttu-id="53142-167">제공된 피어 이름을 확인할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-167">The supplied peer name cannot be resolved.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, int maxRecords);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud * int -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve (peerName, cloud, maxRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="maxRecords" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <span data-ttu-id="53142-168">확인할 <see cref="T:System.Net.PeerToPeer.PeerName" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-168">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span>
          </span>
        </param>
        <param name="cloud">
          <span data-ttu-id="53142-169">
            <paramref name="peerName" />을 확인할 <see cref="T:System.Net.PeerToPeer.Cloud" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-169">The <see cref="T:System.Net.PeerToPeer.Cloud" /> in which to resolve the <paramref name="peerName" />.</span>
          </span>
        </param>
        <param name="maxRecords">
          <span data-ttu-id="53142-170">지정된 클라우드에서 특정 <paramref name="peerName" />을 확인하여 가져올 최대 피어 이름 레코드 개체의 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-170">The maximum number of peer name record objects to obtain from the specified cloud for the specified <paramref name="peerName" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="53142-171">지정된 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" />에서 특정 <see cref="T:System.Net.PeerToPeer.Cloud" />을 확인하여 지정된 수를 초과하지 않는 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-171">Resolves the specified <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> in the specified <see cref="T:System.Net.PeerToPeer.Cloud" />, returning no more than the specified number of <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="53142-172">크기가 <paramref name="maxRecords" /> 항목보다 작거나 같은 <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-172">A <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> whose size is less than or equal to <paramref name="maxRecords" /> entries.</span>
          </span>
          <span data-ttu-id="53142-173">이 컬렉션에는 확인된 <see cref="T:System.Net.PeerToPeer.PeerName" />과 연결되어 있는 피어 이름 레코드가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-173">This collection contains peer name records associated with the <see cref="T:System.Net.PeerToPeer.PeerName" /> that was resolved.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53142-174">보안 되지 않은 피어 이름에 대 한 이름이 있습니다 수 등록 (및 다른 끝점과 연결 된) 동일한 클라우드 내의 여러 피어가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="53142-174">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span> <span data-ttu-id="53142-175">피어 이름을 확인할 수 없는 경우는 <xref:System.Net.PeerToPeer.PeerToPeerException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="53142-175">If the peer name cannot be resolved, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="53142-176">에 대 한 모든 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 메서드는 해당 하는 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="53142-176">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="53142-177">ResolveAsync 메서드 비동기 이벤트 처리에 대 한 시스템 토큰이 포함 된다는 점을 제외 하 고 해당 매개 변수 목록은 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-177">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="53142-178">경우는 <xref:System.Net.PeerToPeer.Cloud> 매개 변수는 `null`, <xref:System.Net.PeerToPeer.PeerNameResolver> 사용 하 여를 <xref:System.Net.PeerToPeer.Cloud.Available> 바로 가기를 입력 합니다 <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, 및 <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-178">If the <xref:System.Net.PeerToPeer.Cloud> parameter is `null`, the <xref:System.Net.PeerToPeer.PeerNameResolver> uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span></span>  
  
 <span data-ttu-id="53142-179"><xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 확인 작업 오류 완료 되거나 취소 될 경우 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-179">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="53142-180">
            <paramref name="peerName" /> 매개 변수가 <see langword="null" />로 설정된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-180">The <paramref name="peerName" /> parameter is set to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="53142-181">
            <paramref name="maxRecords" /> 매개 변수가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-181">The <paramref name="maxRecords" /> parameter is less than or equal to zero.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <span data-ttu-id="53142-182">제공된 피어 이름을 확인할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-182">The supplied peer name cannot be resolved.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ResolveAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="53142-183">이러한 메서드는 호출 피어에 알려진 모든 클라우드에서 지정된 <see cref="T:System.Net.PeerToPeer.PeerName" />에 대한 비동기 확인 작업을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-183">These methods begin an asynchronous resolution operation for the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in all clouds known to the calling peer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53142-184">에 대 한 모든 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 메서드는 해당 하는 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 비동기 처리가 필요할 때 사용 되는 메서드.</span><span class="sxs-lookup"><span data-stu-id="53142-184">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, which is used when asynchronous processing is required.</span></span>  <span data-ttu-id="53142-185">ResolveAsync 이벤트 처리에 대 한 매개 변수 목록의 시스템 토큰이 포함 된다는 점을 제외 하 고는 전달 될 매개 변수를 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-185">They are identical in the parameters they are passed, except that ResolveAsync includes a system token in its parameter list for event handling.</span></span>  
  
 <span data-ttu-id="53142-186">Resolve 메서드에 사이의 ResolveAsync 메서드 매개 변수 불일치가 발생 하는 경우 및 <xref:System.Net.PeerToPeer.Cloud> 매개 변수를 지정 하지 않으면, 메서드를 사용 하는 <xref:System.Net.PeerToPeer.Cloud.Available> 바로 가기를 클라우드 매개 변수를 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-186">If a parameter mismatch occurs between the Resolve method and the ResolveAsync method, and the <xref:System.Net.PeerToPeer.Cloud> parameter is not supplied, the method uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in cloud parameters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <span data-ttu-id="53142-187">확인할 <see cref="T:System.Net.PeerToPeer.PeerName" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-187">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span>
          </span>
        </param>
        <param name="userState">
          <span data-ttu-id="53142-188">피어 이름 확인 작업에 대한 상태 정보가 들어 있는 사용자 정의 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-188">A user-defined object that contains state information about the peer name resolution operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="53142-189">호출 피어에 알려진 모든 클라우드에서 지정된 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" />에 대한 비동기 피어 이름 확인 작업을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-189">Begins an asynchronous peer name resolution operation for the specified <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> in all clouds known to the calling peer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53142-190">이 메서드는 비동기적으로 피어 이름은 클라우드에 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-190">This method asynchronously associates a peer name to clouds.</span></span> <span data-ttu-id="53142-191">모든 클라우드를 쿼리하여는 <xref:System.Net.PeerToPeer.PeerName>합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-191">All clouds are queried for the <xref:System.Net.PeerToPeer.PeerName>.</span></span> <span data-ttu-id="53142-192">발생 합니다 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 이벤트를 다시 호출 하는 <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="53142-192">It raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> method.</span></span> <span data-ttu-id="53142-193">발생 시킵니다 합니다 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> 이벤트를 다시 호출 하는 <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="53142-193">Or, it raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> method.</span></span>  
  
 <span data-ttu-id="53142-194">피어 이름을 확인할 수 없는 경우는 <xref:System.Net.PeerToPeer.PeerToPeerException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="53142-194">If the peer name cannot be resolved, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="53142-195">보안 되지 않은 피어 이름에 대 한 이름이 있습니다 수 등록 (및 다른 끝점과 연결 된) 동일한 클라우드 내의 여러 피어가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="53142-195">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="53142-196">호출을 <xref:System.Net.PeerToPeer.PeerNameResolver> 호출 하는 것과 비슷합니다는 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 각 피어 이름 레코드에 대 한 메서드는 <xref:System.Net.PeerToPeer.PeerNameRecordCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-196">Calling the <xref:System.Net.PeerToPeer.PeerNameResolver> method is similar to calling the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method for each peer name record in the <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</span></span> <span data-ttu-id="53142-197">참고 개별 피어 이름 레코드 확인 메서드를 사용 하 여 여러 피어 이름 확인 무효화 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="53142-197">Note that using the Resolve method on an individual peer name record does not invalidate resolving multiple peer names.</span></span>  
  
 <span data-ttu-id="53142-198">에 대 한 모든 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 메서드는 해당 하는 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="53142-198">For every <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method.</span></span>  <span data-ttu-id="53142-199">ResolveAsync 메서드 비동기 이벤트 처리를 위해 시스템 토큰이 포함 Resolve 메서드에 동기 처리를 위한 있다는 점을 제외 하면 해당 매개 변수 목록은 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-199">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.</span></span>  
  
 <span data-ttu-id="53142-200">모든 비동기 참조 확인자 개체를 고유 식별자 토큰을 사용 하 여 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="53142-200">All asynchronous references to the resolver object are coordinated with a unique identifier token.</span></span> <span data-ttu-id="53142-201">이 `userState` 토큰 또는 메시지 식별자를 사용 하면 운영 체제 메시지는 메시지 큐에 배치 된 후 단일 수신 프로세스에 메시지를 배달 합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-201">This `userState` token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.</span></span>  
  
 <span data-ttu-id="53142-202"><xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 확인 작업 오류 완료 되거나 취소 될 경우 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-202">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="53142-203">
            <paramref name="peerName" /> 및 <paramref name="userState" /> 매개 변수 중 하나 또는 둘 모두가 <see langword="null" />로 설정된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-203">One or both of the <paramref name="peerName" /> and <paramref name="userState" /> parameters are set to <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, int maxRecords, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, int32 maxRecords, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, int maxRecords, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * int * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, maxRecords, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <span data-ttu-id="53142-204">확인할 <see cref="T:System.Net.PeerToPeer.PeerName" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-204">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span>
          </span>
        </param>
        <param name="maxRecords">
          <span data-ttu-id="53142-205">피어 이름에 대해 획득할 최대 레코드 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-205">The maximum number of records to obtain for the Peer Name.</span>
          </span>
        </param>
        <param name="userState">
          <span data-ttu-id="53142-206">확인 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-206">A user-defined object that contains information about the resolve operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="53142-207">호출 피어에 알려진 모든 클라우드에서 지정된 <see cref="T:System.Net.PeerToPeer.PeerName" />에 대한 비동기 피어 이름 확인 작업을 시작하고 피어 이름에 대해 <paramref name="maxRecords" />개까지 항목을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-207">Begins an asynchronous peer name resolution operation for the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in all clouds known to the calling peer, returning no more than <paramref name="maxRecords" /> entries for the peer name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53142-208">이 메서드는 비동기적으로 피어 이름은 클라우드에 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-208">This method asynchronously associates a peer name to clouds.</span></span> <span data-ttu-id="53142-209">모든 클라우드를 쿼리하여는 <xref:System.Net.PeerToPeer.PeerName>합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-209">All clouds are queried for the <xref:System.Net.PeerToPeer.PeerName>.</span></span> <span data-ttu-id="53142-210">보안 되지 않은 피어 이름에 대 한 이름이 있습니다 수 등록 (및 다른 끝점과 연결 된) 동일한 클라우드 내의 여러 피어가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="53142-210">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span> <span data-ttu-id="53142-211">피어 이름을 확인할 수 없습니다. 나는 경우 `null`, <xref:System.Net.PeerToPeer.PeerToPeerException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="53142-211">If the peer name cannot be resolved or is `null`, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="53142-212">이 메서드는 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 이벤트를 다시 호출 하는 <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="53142-212">This method raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> method.</span></span> <span data-ttu-id="53142-213">발생 시킵니다 합니다 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> 이벤트를 다시 호출 하는 <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="53142-213">Or, it raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> method.</span></span>  
  
 <span data-ttu-id="53142-214">에 대 한 모든 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 메서드는 해당 하는 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="53142-214">For every <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method.</span></span>  <span data-ttu-id="53142-215">ResolveAsync 메서드 비동기 이벤트 처리를 위해 시스템 토큰이 포함 Resolve 메서드에 동기 처리를 위한 있다는 점을 제외 하면 해당 매개 변수 목록은 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-215">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.</span></span>  
  
 <span data-ttu-id="53142-216">모든 비동기 참조 확인자 개체를 고유 식별자 토큰을 사용 하 여 조정 됩니다 <xref:System.Object>합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-216">All asynchronous references to the resolver object are coordinated with a unique identifier token <xref:System.Object>.</span></span> <span data-ttu-id="53142-217">이 `userState` 토큰 또는 메시지 식별자를 사용 하면 운영 체제 메시지는 메시지 큐에 배치 된 후 단일 수신 프로세스에 메시지를 배달 합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-217">This `userState` token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.</span></span>  
  
 <span data-ttu-id="53142-218"><xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 확인 작업 오류 완료 되거나 취소 될 경우 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-218">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="53142-219">
            <paramref name="peerName" /> 및 <paramref name="userState" /> 매개 변수 중 하나 또는 둘 모두가 <see langword="null" />로 설정된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-219">One or both of the <paramref name="peerName" /> and <paramref name="userState" /> parameters are set to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="53142-220">
            <paramref name="maxRecords" /> 매개 변수가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-220">The <paramref name="maxRecords" /> parameter is less than or equal to zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, cloud, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <span data-ttu-id="53142-221">확인할 <see cref="T:System.Net.PeerToPeer.PeerName" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-221">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span>
          </span>
        </param>
        <param name="cloud">
          <span data-ttu-id="53142-222">
            <paramref name="peerName" />을 확인할 <see cref="T:System.Net.PeerToPeer.Cloud" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-222">The <see cref="T:System.Net.PeerToPeer.Cloud" /> in which to resolve the <paramref name="peerName" />.</span>
          </span>
        </param>
        <param name="userState">
          <span data-ttu-id="53142-223">피어 이름 확인 작업에 대한 정보가 들어 있는 사용자 정의 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-223">A user-defined <see cref="T:System.Object" /> that contains information about the peer name resolution operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="53142-224">지정된 <see cref="T:System.Net.PeerToPeer.Cloud" />에서 지정된 <see cref="T:System.Net.PeerToPeer.PeerName" />에 대한 비동기 피어 이름 확인 작업을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-224">Begins an asynchronous peer name resolution operation for the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in the specified <see cref="T:System.Net.PeerToPeer.Cloud" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53142-225">이 메서드는 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 이벤트를 다시 호출 하는 <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="53142-225">This method raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> method.</span></span> <span data-ttu-id="53142-226">발생 시킵니다 합니다 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> 이벤트를 다시 호출 하는 <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="53142-226">Or, it raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> method.</span></span>  
  
 <span data-ttu-id="53142-227">보안 되지 않은 피어 이름에 대 한 이름이 있습니다 수 등록 (및 다른 끝점과 연결 된) 동일한 클라우드 내의 여러 피어가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="53142-227">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="53142-228">경우는 <xref:System.Net.PeerToPeer.Cloud> 매개 변수는 `null`를 사용 하는 이름이 <xref:System.Net.PeerToPeer.Cloud.Available> 기본값을 초기화 하는 바로 가기는 <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, 및 <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="53142-228">If the <xref:System.Net.PeerToPeer.Cloud> parameter is `null`, the name is resolved using the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut, which initializes default values for the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> properties.</span></span>  
  
 <span data-ttu-id="53142-229">에 대 한 모든 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 메서드는 해당 하는 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="53142-229">For every <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method.</span></span>  <span data-ttu-id="53142-230">ResolveAsync 메서드 비동기 이벤트 처리를 위해 시스템 토큰이 포함 Resolve 메서드에 동기 처리를 위한 있다는 점을 제외 하면 해당 매개 변수 목록은 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-230">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.</span></span>  
  
 <span data-ttu-id="53142-231">모든 비동기 참조 확인자 개체를 고유 식별자 토큰을 사용 하 여 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="53142-231">All asynchronous references to the resolver object are coordinated with a unique identifier token.</span></span> <span data-ttu-id="53142-232">이 `userState` 토큰 또는 메시지 식별자를 사용 하면 운영 체제 메시지는 메시지 큐에 배치 된 후 단일 수신 프로세스에 메시지를 배달 합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-232">This `userState` token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.</span></span>  
  
 <span data-ttu-id="53142-233"><xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 확인 작업 오류 완료 되거나 취소 될 경우 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-233">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="53142-234">
            <paramref name="peerName" /> 및 <paramref name="userState" /> 매개 변수 중 하나 또는 둘 모두가 <see langword="null" />로 설정된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-234">One or both of the <paramref name="peerName" /> and <paramref name="userState" /> parameters are set to <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, int maxRecords, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, int32 maxRecords, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, int maxRecords, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud * int * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, cloud, maxRecords, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <span data-ttu-id="53142-235">확인할 <paramref name="peerName" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-235">The <paramref name="peerName" /> to resolve.</span>
          </span>
        </param>
        <param name="cloud">
          <span data-ttu-id="53142-236">
            <paramref name="peerName" />을 확인할 <paramref name="cloud" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-236">The <paramref name="cloud" /> in which to resolve <paramref name="peerName" />.</span>
          </span>
        </param>
        <param name="maxRecords">
          <span data-ttu-id="53142-237">
            <paramref name="peerName" />에 대해 <paramref name="cloud" />에서 획득할 최대 레코드 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-237">The maximum number of records to obtain from <paramref name="cloud" /> for <paramref name="peerName" />.</span>
          </span>
        </param>
        <param name="userState">
          <span data-ttu-id="53142-238">피어 이름 확인 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-238">A user-defined object that contains information about the peer name resolution operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="53142-239">지정된 <see cref="T:System.Net.PeerToPeer.Cloud" />에서 지정된 <see cref="T:System.Net.PeerToPeer.PeerName" />에 대한 비동기 피어 이름 확인 작업을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-239">Begins an asynchronous peer name resolution operation for the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in the specified <see cref="T:System.Net.PeerToPeer.Cloud" />.</span>
          </span>
          <span data-ttu-id="53142-240">확인 작업은 지정된 피어 이름에 대해 <paramref name="maxRecords" />개 이하의 피어 이름만 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-240">The resolution operation will resolve no more than <paramref name="maxRecords" /> entries for the specified peer name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53142-241">보안 되지 않은 피어 이름에 대 한 이름이 있습니다 수 등록 (및 다른 끝점과 연결 된) 동일한 클라우드 내의 여러 피어가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="53142-241">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="53142-242">이 메서드는 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 이벤트를 다시 호출 하는 <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="53142-242">This method raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> method.</span></span> <span data-ttu-id="53142-243">발생 시킵니다 합니다 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> 이벤트를 다시 호출 하는 <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="53142-243">Or, it raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> method.</span></span>  
  
 <span data-ttu-id="53142-244">경우는 <xref:System.Net.PeerToPeer.Cloud> 매개 변수는 `null`를 사용 하는 이름이 <xref:System.Net.PeerToPeer.Cloud.Available> 기본값을 초기화 하는 바로 가기는 <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, 및 <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="53142-244">If the <xref:System.Net.PeerToPeer.Cloud> parameter is `null`, the name is resolved using the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut, which initializes default values for the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> properties.</span></span>  
  
 <span data-ttu-id="53142-245">에 대 한 모든 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 메서드는 해당 하는 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="53142-245">For every <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method.</span></span>  <span data-ttu-id="53142-246">ResolveAsync 메서드 비동기 이벤트 처리를 위해 시스템 토큰이 포함 Resolve 메서드에 동기 처리를 위한 있다는 점을 제외 하면 해당 매개 변수 목록은 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-246">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.</span></span>  
  
 <span data-ttu-id="53142-247">피어 확인자 개체에 대 한 모든 비동기 참조 되는 고유 식별자 토큰을 사용 하 여 조정 된 <xref:System.Object>합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-247">All asynchronous references to the peer resolver object are coordinated with a unique identifier token <xref:System.Object>.</span></span> <span data-ttu-id="53142-248">이 `userState` 토큰 또는 메시지 식별자를 사용 하면 운영 체제 메시지는 메시지 큐에 배치 된 후 단일 수신 프로세스에 메시지를 배달 합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-248">This `userState` token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.</span></span>  
  
 <span data-ttu-id="53142-249"><xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 확인 작업 오류 완료 되거나 취소 될 경우 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-249">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="53142-250">
            <paramref name="peerName" /> 및 <paramref name="userState" /> 매개 변수 중 하나 또는 둘 모두가 <see langword="null" />로 설정된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-250">One or both of the <paramref name="peerName" /> and <paramref name="userState" /> parameters are set to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="53142-251">하나 이상의 제공된 매개 변수가 올바르지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-251">One or more supplied parameters are invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <span data-ttu-id="53142-252">이 작업이 성공적으로 완료되려면 하나 이상의 이벤트 처리기가 필요합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-252">Successful completion of this operation requires at least one event handler.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="53142-253">
            <paramref name="maxRecords" /> 매개 변수가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-253">The <paramref name="maxRecords" /> parameter is less than or equal to zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsyncCancel">
      <MemberSignature Language="C#" Value="public void ResolveAsyncCancel (object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsyncCancel(object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResolveAsyncCancel (userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsyncCancel(System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsyncCancel : obj -&gt; unit" Usage="peerNameResolver.ResolveAsyncCancel userState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userState">
          <span data-ttu-id="53142-254">확인 작업을 시작한 <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> 메서드 인스턴스에 제공된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-254">The object provided to the <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> method instance which started the resolve operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="53142-255">지정된 비동기 피어 이름 확인 요청을 취소합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-255">Cancels the specified asynchronous peer name resolution request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53142-256">이 메서드를 호출 하지 시스템이 지정 된 추가 레코드를 가져오려면 보장 <xref:System.Net.PeerToPeer.PeerName>합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-256">Calling this method guarantees the system will not attempt to obtain additional records for the specified <xref:System.Net.PeerToPeer.PeerName>.</span></span>  <span data-ttu-id="53142-257">비동기 피어 이름 확인 작업을 처리 중인 경우이 메서드는, 하는 경우 해당 연산 처럼 작동 "없습니다" (아니요 OP).</span><span class="sxs-lookup"><span data-stu-id="53142-257">If this method is called when an asynchronous peer name resolution operation is not outstanding, it acts as a "no operation" (NO OP).</span></span>  
  
 <span data-ttu-id="53142-258">`userState` 개체는 여러 호출이 진행 중인 경우 특정 비동기 호출을 추적에 사용 되므로 반드시 제공 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-258">The `userState` object must be provided since it is used to track a specific asynchronous call when multiple calls are in progress.</span></span> <span data-ttu-id="53142-259">이 호출자가 제공한 개체는 각 피어 이름 확인 요청에 대해 고유 합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-259">This caller-supplied object is unique for each peer name resolution request.</span></span>  
  
 <span data-ttu-id="53142-260">이 메서드는 즉시 반환 되지만 작업 수도 즉시 취소할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="53142-260">This method will return immediately, but the operation may or may not immediately cancel.</span></span> <span data-ttu-id="53142-261">반환 하는 이벤트 인수는 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 이벤트는 클라이언트가 취소 발생 여부를 확인 하 여 폴링할 수 있는 필드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-261">The event arguments returned by the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event contains a field which can be polled by clients to determine whether cancellation occurred.</span></span>  
  
 <span data-ttu-id="53142-262">이 메서드를 호출 하면 ResolveCompleted 이벤트는 이벤트 인수를 사용 하 여 가능한 한 빨리 신호 <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> 로 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-262">Calling this method ensures the ResolveCompleted event will be signaled as soon as possible with the event argument <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="53142-263">
            <paramref name="userState" /> 매개 변수는 <see langword="null" />일 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-263">The <paramref name="userState" /> parameters cannot be <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.AsyncCompletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ResolveCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; ResolveCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; ResolveCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResolveCompleted As EventHandler(Of ResolveCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::ResolveCompletedEventArgs ^&gt; ^ ResolveCompleted;" />
      <MemberSignature Language="F#" Value="member this.ResolveCompleted : EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; " Usage="member this.ResolveCompleted : System.EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="53142-264">특정 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />에 대한 피어 이름 확인 요청이 완료되면 <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> 이벤트가 신호를 받습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-264">The <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> event is signaled when a peer name resolution request for a specific <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> has completed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53142-265"><xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> 이벤트, 각 끝점에 대해 한 번 발생 하 고 모든 끝점을 찾은 후 때 한 번만이 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="53142-265">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event will be raised once for each endpoint found, and this event will be raised only once when all endpoints have been found.</span></span>  
  
 <span data-ttu-id="53142-266">경우에이 이벤트를 발생 됩니다는 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 작업이 오류 완료 되거나 취소 됩니다.</span><span class="sxs-lookup"><span data-stu-id="53142-266">This event will also be raised if the <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="ResolveProgressChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; ResolveProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; ResolveProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResolveProgressChanged As EventHandler(Of ResolveProgressChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::ResolveProgressChangedEventArgs ^&gt; ^ ResolveProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.ResolveProgressChanged : EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; " Usage="member this.ResolveProgressChanged : System.EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="53142-267">이 이벤트는 특정 <see cref="T:System.Net.PeerToPeer.PeerName" />에 대한 <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> 작업의 응답으로 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 개체가 발견될 때마다 신호를 받습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53142-267">This event is signaled whenever a <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> object is found in response to a <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> operation for a specific <see cref="T:System.Net.PeerToPeer.PeerName" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53142-268">여러 <xref:System.Net.PeerToPeer.PeerName> 개체가 쿼리 중인 클라우드에 있는,이 이벤트는 한 번 각각에 대 한 <xref:System.Net.PeerToPeer.PeerNameRecord> 찾을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="53142-268">If multiple <xref:System.Net.PeerToPeer.PeerName> objects exist in the cloud(s) being queried, this event is signaled once for each <xref:System.Net.PeerToPeer.PeerNameRecord> found.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />
      </Docs>
    </Member>
  </Members>
</Type>