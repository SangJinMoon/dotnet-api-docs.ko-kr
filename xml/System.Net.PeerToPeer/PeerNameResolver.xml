<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PeerNameResolver.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58fbb46569ea8c3e2c36d884eb360682eca12794a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8fbb46569ea8c3e2c36d884eb360682eca12794a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.PeerToPeer.PeerNameResolver">
          <source>Specifies the values that resolve a <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph> using the PNRP Namespace Provider API protocol.</source>
          <target state="translated">PNRP Namespace Provider API 프로토콜을 사용하여 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>을 <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph>로 확인하는 값을 지정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameResolver">
          <source>A <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRecord&gt;</ph> which contains all the information for the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> that was published in the <ph id="ph3">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph> or cloud(s) that were queried during the resolve process.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRecord&gt;</ph> 에 대 한 모든 정보를 포함 하는 <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> 에 게시 되는 <ph id="ph3">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph> 또는 확인 프로세스 동안 쿼리 된 클라우드에 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.#ctor">
          <source>Initializes a new default instance of the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameResolver" /&gt;</ph> class.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameResolver" /&gt;</ph> 클래스의 새로운 기본 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.#ctor">
          <source>After successfully resolving a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph>, the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRecord&gt;</ph> contains all the information for the specified <ph id="ph3">&lt;xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A&gt;</ph> that was published in the cloud(s) that were queried during the <ph id="ph4">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> operation.</source>
          <target state="translated">성공적으로 해결 한 후 한 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRecord&gt;</ph> 지정 된 항목에 대 한 모든 정보를 포함 <ph id="ph3">&lt;xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A&gt;</ph> 동안 쿼리 된 클라우드에 게시 되는 <ph id="ph4">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> 작업 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" /&gt;</ph> object that contains the data returned by the <ph id="ph2">&lt;see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /&gt;</ph> 이벤트에 의해 반환된 데이터가 포함된 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)">
          <source>Returns peer resolution data after the <ph id="ph1">&lt;see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /&gt;</ph> event is raised.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /&gt;</ph> 이벤트가 발생된 후에 피어 확인 데이터를 반환합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)">
          <source>This method is an asynchronous callback used to process peer name resolution data after peer resolution has completed.</source>
          <target state="translated">이 메서드는 피어 확인이 완료 된 후 피어 이름 확인 데이터를 처리 하는 데 사용 하는 비동기 콜백입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)">
          <source>Derived types can override this method to perform additional tasks when the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> event is raised by the peer resolver object.</source>
          <target state="translated">파생 된 형식은이 설정을 재정의할 수 경우 메서드를 추가 작업은 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> 이벤트는 피어 확인자 개체에 의해 발생 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" /&gt;</ph> object that contains peer name resolution progress information returned by the <ph id="ph2">&lt;see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /&gt;</ph> 이벤트에 의해 반환된 피어 이름 확인 진행률 정보를 포함하는 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)">
          <source>Returns peer resolution progress data when the <ph id="ph1">&lt;see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /&gt;</ph> event is raised.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /&gt;</ph> 이벤트가 발생할 때 피어 확인 진행률 데이터를 반환합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)">
          <source>This method is an asynchronous callback used to process peer resolution data after peer resolution progress has been requested.</source>
          <target state="translated">이 메서드는 피어 해결 진행률을 요청한 후 피어 확인 데이터를 처리 하는 데 사용 하는 비동기 콜백입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)">
          <source>Derived types can override this method to perform additional tasks when the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged&gt;</ph> event occurs.</source>
          <target state="translated">파생 된 형식은이 설정을 재정의할 수 경우 메서드를 추가 작업은 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged&gt;</ph> 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)">
          <source>When overriding this method in a derived type, be sure to call the base type's <ph id="ph1">&lt;see cref="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생된 형식에서이 메서드를 재정의 하는 경우 호출 해야 기본 형식의 <ph id="ph1">&lt;see cref="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="T:System.Net.PeerToPeer.PeerNameResolver">
          <source>Resolves a <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> object to a <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph> using the PNRP protocol.</source>
          <target state="translated">PNRP 프로토콜을 사용하여 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> 개체를 <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph>로 확인합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameResolver">
          <source>This method associates peer names to clouds.</source>
          <target state="translated">이 메서드는 피어 이름을 클라우드와 연결합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameResolver">
          <source>Calling the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver&gt;</ph> method is similar to calling the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> method for each peer name record in the <ph id="ph3">&lt;xref:System.Net.PeerToPeer.PeerNameRecordCollection&gt;</ph>.</source>
          <target state="translated">호출 된 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver&gt;</ph> 호출 하는 것과 비슷합니다는 <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> 각 피어 이름 레코드에 대 한 메서드는 <ph id="ph3">&lt;xref:System.Net.PeerToPeer.PeerNameRecordCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameResolver">
          <source>Note that using the Resolve method on an individual peer name record does not invalidate resolving multiple peer names.</source>
          <target state="translated">참고 개별 피어 이름 레코드에서 메서드를 사용 하 여 여러 피어 이름 확인 무효화 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameResolver">
          <source>For every <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> method, there is an equivalent <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A&gt;</ph> method.</source>
          <target state="translated">에 대 한 모든 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> 메서드는 해당 하는 <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameResolver">
          <source>They are identical in the parameters they are passed, except that the ResolveAsync method includes a system token in its parameter list for asynchronous event handling.</source>
          <target state="translated">ResolveAsync 메서드는 매개 변수 목록의 비동기 이벤트 처리에 대 한 시스템 토큰이 포함 된다는 점을 제외 하 고는 동일 전달 될 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameResolver">
          <source>If the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph> parameter is not supplied, the method uses the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> shortcut to fill in cloud parameters.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph> 매개 변수가 제공 되지 않은는 메서드에서 사용 하는 <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> 바로 가기 클라우드 매개 변수를 채웁니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameResolver">
          <source>If the <ph id="ph1">`maxRecords`</ph> parameter is missing, the default value of zero causes an <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> exception to be thrown.</source>
          <target state="translated">경우는 <ph id="ph1">`maxRecords`</ph> 기본값인 0을 사용 하면 매개 변수가 있는 <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameResolver">
          <source>This event will also be raised if the resolve operation completes in error or is canceled.</source>
          <target state="translated">확인 작업이 잘못 완료 되거나 취소 될 경우에이 이벤트를 발생 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> to resolve.</source>
          <target state="translated">확인할 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)">
          <source>Resolves the specified <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> in all clouds known to the calling peer.</source>
          <target state="translated">호출 피어에 알려진 모든 클라우드에서 지정된 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>을 확인합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /&gt;</ph> that contains all peer name records (represented as <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph> objects) associated with the specified peer name.</source>
          <target state="translated">지정된 피어 이름과 연결된 모든 피어 이름 레코드(<ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /&gt;</ph> 개체로 표시)를 포함하는 <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)">
          <source>For unsecured peer names, the same <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> can be registered by different users in the same <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>, and associated with different endpoints.</source>
          <target state="translated">보안되지 않은 피어 이름의 경우 동일한 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>을 같은 <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>의 여러 사용자가 등록하고 여러 끝점과 연결할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)">
          <source>This method associates a peer name to clouds.</source>
          <target state="translated">이 메서드는 클라우드에 피어 이름을 연결합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)">
          <source>All clouds are queried for the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph>.</source>
          <target state="translated">에 대 한 모든 클라우드를 쿼리하여는 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)">
          <source>If the peer name cannot be resolved or is <ph id="ph1">`null`</ph>, an <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerToPeerException&gt;</ph> is thrown.</source>
          <target state="translated">피어 이름을 확인할 수 없는 않거나 <ph id="ph1">`null`</ph>, <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerToPeerException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)">
          <source>For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</source>
          <target state="translated">보안 되지 않은 피어 이름에 대 한 이름이 같은 수 수 등록 (및 연결 된 끝점이 다른) 동일한 클라우드 내의 여러 피어가 있습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver&gt;</ph> method is similar to calling the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> method for each peer name record in the <ph id="ph3">&lt;xref:System.Net.PeerToPeer.PeerNameRecordCollection&gt;</ph>.</source>
          <target state="translated">호출 된 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver&gt;</ph> 호출 하는 것과 비슷합니다는 <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> 각 피어 이름 레코드에 대 한 메서드는 <ph id="ph3">&lt;xref:System.Net.PeerToPeer.PeerNameRecordCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)">
          <source>Note that using the Resolve method on an individual peer name record does not invalidate resolving multiple peer names.</source>
          <target state="translated">참고 개별 피어 이름 레코드에서 메서드를 사용 하 여 여러 피어 이름 확인 무효화 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)">
          <source>For every <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> method, there is an equivalent <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A&gt;</ph> method.</source>
          <target state="translated">에 대 한 모든 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> 메서드는 해당 하는 <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)">
          <source>Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling.</source>
          <target state="translated">매개 변수 목록은 동일 ResolveAsync 메서드는 비동기 이벤트 처리에 대 한 시스템 토큰 포함 된다는 점을 제외 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)">
          <source>If the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph> parameter is not supplied, the method uses the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> shortcut to fill in cloud parameters.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph> 매개 변수가 제공 되지 않은는 메서드에서 사용 하는 <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> 바로 가기 클라우드 매개 변수를 채웁니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)">
          <source>The <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> event will be raised if the resolve operation completes in error or is canceled.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> 확인 작업이 잘못 완료 되거나 취소 되 면 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)">
          <source>The following code example illustrates how to resolve a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> published in any <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 해결 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> 에 게시 된 <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)">
          <source>The <ph id="ph1">&lt;paramref name="peerName" /&gt;</ph> parameter is set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="peerName" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>로 설정된 경우</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)">
          <source>The peer name specified cannot be resolved.</source>
          <target state="translated">지정된 피어 이름을 확인할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> to resolve.</source>
          <target state="translated">확인할 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>The maximum number of <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph> objects to obtain from all <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> objects for the supplied <bpt id="p1">&lt;c&gt;</bpt>peerName<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">모든 <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> 개체에서 제공된 <bpt id="p1">&lt;c&gt;</bpt>peerName<ept id="p1">&lt;/c&gt;</ept>을 확인하여 가져올 최대 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph> 개체 수입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>Resolves the specified peer name in all clouds known to the calling peer, returning no more than the specified number of <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph> objects.</source>
          <target state="translated">호출 피어에 알려진 모든 클라우드에서 지정된 피어 이름을 확인하여 지정된 수를 초과하지 않는 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph> 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /&gt;</ph> whose size is less than or equal to <ph id="ph2">&lt;paramref name="maxRecords" /&gt;</ph> entries.</source>
          <target state="translated">크기가 <ph id="ph2">&lt;paramref name="maxRecords" /&gt;</ph> 항목보다 작거나 같은 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>This collection contains peer name records associated with the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> that was resolved.</source>
          <target state="translated">이 컬렉션에는 확인된 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>과 연결되어 있는 피어 이름 레코드가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>This method associates a peer name to clouds.</source>
          <target state="translated">이 메서드는 클라우드에 피어 이름을 연결합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>All clouds are queried for the peer name.</source>
          <target state="translated">피어 이름에 대 한 모든 클라우드를 쿼리 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>For unsecured peer names, the same peer name can be registered by different users in the same <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph>, and associated with different endpoints.</source>
          <target state="translated">보안 되지 않은 피어 이름에 대 한 동일한 피어 이름이 같은 여러 사용자가 등록 수 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph>, 여러 끝점과 연결 하 고 있습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>If the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> cannot be resolved (for example, the peer name is not published) an <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerToPeerException&gt;</ph> is thrown.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> 확인할 수 없습니다 (예를 들어 피어 이름 게시 되지 않은)는 <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerToPeerException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>For every <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> method, there is an equivalent <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A&gt;</ph> method.</source>
          <target state="translated">에 대 한 모든 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> 메서드는 해당 하는 <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling.</source>
          <target state="translated">매개 변수 목록은 동일 ResolveAsync 메서드는 비동기 이벤트 처리에 대 한 시스템 토큰 포함 된다는 점을 제외 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> event will be raised if the resolve operation completes in error or is canceled.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> 확인 작업이 잘못 완료 되거나 취소 되 면 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="peerName" /&gt;</ph> parameter is set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="peerName" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>로 설정된 경우</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="maxRecords" /&gt;</ph> parameter is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="maxRecords" /&gt;</ph> 매개 변수가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>The supplied peer name cannot be resolved.</source>
          <target state="translated">제공된 피어 이름을 확인할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> to resolve.</source>
          <target state="translated">확인할 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> in which to resolve the peer name.</source>
          <target state="translated">피어 이름을 확인할 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)">
          <source>Resolves the specified <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /&gt;</ph> in the specified <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /&gt;</ph>에서 특정 <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>을 확인합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /&gt;</ph> that contains all peer name records (represented as <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph> objects) associated with the specified peer name.</source>
          <target state="translated">지정된 피어 이름과 연결된 모든 피어 이름 레코드(<ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /&gt;</ph> 개체로 표시)를 포함하는 <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)">
          <source>For unsecured peer names, the same <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> can be registered by different users in the same <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>, and associated with different endpoints.</source>
          <target state="translated">보안되지 않은 피어 이름의 경우 동일한 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>을 같은 <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>의 여러 사용자가 등록하고 여러 끝점과 연결할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)">
          <source>If the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> cannot be resolved (i.e., the peer name is not published) an <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerToPeerException&gt;</ph> is thrown.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> 확인할 수 없습니다 (즉, 피어 이름 게시 되지 않은)는 <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerToPeerException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)">
          <source>For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</source>
          <target state="translated">보안 되지 않은 피어 이름에 대 한 이름이 같은 수 수 등록 (및 연결 된 끝점이 다른) 동일한 클라우드 내의 여러 피어가 있습니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)">
          <source>For every <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> method, there is an equivalent <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A&gt;</ph> method.</source>
          <target state="translated">에 대 한 모든 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> 메서드는 해당 하는 <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)">
          <source>Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling.</source>
          <target state="translated">매개 변수 목록은 동일 ResolveAsync 메서드는 비동기 이벤트 처리에 대 한 시스템 토큰 포함 된다는 점을 제외 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)">
          <source>If the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph> parameter is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Net.PeerToPeer.PeerNameResolver&gt;</ph> uses the <ph id="ph4">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> shortcut to fill in the <ph id="ph5">&lt;xref:System.Net.PeerToPeer.Cloud.Name%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Net.PeerToPeer.Cloud.Scope%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Net.PeerToPeer.Cloud.ScopeId%2A&gt;</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph> 매개 변수는 <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Net.PeerToPeer.PeerNameResolver&gt;</ph> 사용 하 여는 <ph id="ph4">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> 차이를 바로 가기는 <ph id="ph5">&lt;xref:System.Net.PeerToPeer.Cloud.Name%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Net.PeerToPeer.Cloud.Scope%2A&gt;</ph>, 및 <ph id="ph7">&lt;xref:System.Net.PeerToPeer.Cloud.ScopeId%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)">
          <source>The <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> event will be raised if the resolve operation completes in error or is canceled.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> 확인 작업이 잘못 완료 되거나 취소 되 면 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)">
          <source>The <ph id="ph1">&lt;paramref name="peerName" /&gt;</ph> parameter is set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="peerName" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>로 설정된 경우</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)">
          <source>The supplied peer name cannot be resolved.</source>
          <target state="translated">제공된 피어 이름을 확인할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> to resolve.</source>
          <target state="translated">확인할 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> in which to resolve the <bpt id="p1">&lt;c&gt;</bpt>peerName<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>peerName<ept id="p1">&lt;/c&gt;</ept>을 확인할 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)">
          <source>The maximum number of peer name record objects to obtain from the specified cloud for the specified <bpt id="p1">&lt;c&gt;</bpt>peerName<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">지정된 클라우드에서 특정 <bpt id="p1">&lt;c&gt;</bpt>peerName<ept id="p1">&lt;/c&gt;</ept>을 확인하여 가져올 최대 피어 이름 레코드 개체의 수입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)">
          <source>Resolves the specified <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /&gt;</ph> in the specified <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>, returning no more than the specified number of <ph id="ph3">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph> objects.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /&gt;</ph>에서 특정 <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>을 확인하여 지정된 수를 초과하지 않는 <ph id="ph3">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph> 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /&gt;</ph> whose size is less than or equal to <ph id="ph2">&lt;paramref name="maxRecords" /&gt;</ph> entries.</source>
          <target state="translated">크기가 <ph id="ph2">&lt;paramref name="maxRecords" /&gt;</ph> 항목보다 작거나 같은 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)">
          <source>This collection contains peer name records associated with the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> that was resolved.</source>
          <target state="translated">이 컬렉션에는 확인된 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>과 연결되어 있는 피어 이름 레코드가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)">
          <source>For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</source>
          <target state="translated">보안 되지 않은 피어 이름에 대 한 이름이 같은 수 수 등록 (및 연결 된 끝점이 다른) 동일한 클라우드 내의 여러 피어가 있습니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)">
          <source>If the peer name cannot be resolved, an <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerToPeerException&gt;</ph> is thrown.</source>
          <target state="translated">피어 이름의 확인할 수 없는 경우는 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerToPeerException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)">
          <source>For every <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> method, there is an equivalent <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A&gt;</ph> method.</source>
          <target state="translated">에 대 한 모든 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> 메서드는 해당 하는 <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)">
          <source>Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling.</source>
          <target state="translated">매개 변수 목록은 동일 ResolveAsync 메서드는 비동기 이벤트 처리에 대 한 시스템 토큰 포함 된다는 점을 제외 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)">
          <source>If the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph> parameter is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Net.PeerToPeer.PeerNameResolver&gt;</ph> uses the <ph id="ph4">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> shortcut to fill in the <ph id="ph5">&lt;xref:System.Net.PeerToPeer.Cloud.Name%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Net.PeerToPeer.Cloud.Scope%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Net.PeerToPeer.Cloud.ScopeId%2A&gt;</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph> 매개 변수는 <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Net.PeerToPeer.PeerNameResolver&gt;</ph> 사용 하 여는 <ph id="ph4">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> 차이를 바로 가기는 <ph id="ph5">&lt;xref:System.Net.PeerToPeer.Cloud.Name%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Net.PeerToPeer.Cloud.Scope%2A&gt;</ph>, 및 <ph id="ph7">&lt;xref:System.Net.PeerToPeer.Cloud.ScopeId%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> event will be raised if the resolve operation completes in error or is canceled.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> 확인 작업이 잘못 완료 되거나 취소 되 면 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="peerName" /&gt;</ph> parameter is set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="peerName" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>로 설정된 경우</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="maxRecords" /&gt;</ph> parameter is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="maxRecords" /&gt;</ph> 매개 변수가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)">
          <source>The supplied peer name cannot be resolved.</source>
          <target state="translated">제공된 피어 이름을 확인할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="T:System.Net.PeerToPeer.PeerNameResolver">
          <source>These methods begin an asynchronous resolution operation for the specified <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> in all clouds known to the calling peer.</source>
          <target state="translated">이러한 메서드는 호출 피어에 알려진 모든 클라우드에서 지정된 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>에 대한 비동기 확인 작업을 시작합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameResolver">
          <source>For every <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> method, there is an equivalent <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A&gt;</ph> method, which is used when asynchronous processing is required.</source>
          <target state="translated">에 대 한 모든 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> 메서드는 해당 하는 <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A&gt;</ph> 비동기 처리가 필요한 때 사용 되는 메서드.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameResolver">
          <source>They are identical in the parameters they are passed, except that ResolveAsync includes a system token in its parameter list for event handling.</source>
          <target state="translated">ResolveAsync 이벤트 처리에는 매개 변수 목록의 시스템 토큰이 포함 된다는 점을 제외 하 고는 동일 전달 될 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameResolver">
          <source>If a parameter mismatch occurs between the Resolve method and the ResolveAsync method, and the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph> parameter is not supplied, the method uses the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> shortcut to fill in cloud parameters.</source>
          <target state="translated">해결 방법 및 ResolveAsync 방법 사이 매개 변수가 일치 하지 않습니다 발생 한 경우 및 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph> 매개 변수가 제공 되지 않은는 메서드에서 사용 하는 <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> 바로 가기 클라우드 매개 변수를 채웁니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> to resolve.</source>
          <target state="translated">확인할 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)">
          <source>A user-defined object that contains state information about the peer name resolution operation.</source>
          <target state="translated">피어 이름 확인 작업에 대한 상태 정보가 들어 있는 사용자 정의 개체입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)">
          <source>Begins an asynchronous peer name resolution operation for the specified <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /&gt;</ph> in all clouds known to the calling peer.</source>
          <target state="translated">호출 피어에 알려진 모든 클라우드에서 지정된 <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /&gt;</ph>에 대한 비동기 피어 이름 확인 작업을 시작합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)">
          <source>This method asynchronously associates a peer name to clouds.</source>
          <target state="translated">이 메서드는 비동기적으로 클라우드에 피어 이름을 연결합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)">
          <source>All clouds are queried for the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph>.</source>
          <target state="translated">에 대 한 모든 클라우드를 쿼리하여는 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)">
          <source>It raises the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> event, which calls back to the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A&gt;</ph> method.</source>
          <target state="translated">발생 된 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> 이벤트를 다시 호출 하는 <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)">
          <source>Or, it raises the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged&gt;</ph> event, which calls back to the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A&gt;</ph> method.</source>
          <target state="translated">발생 또는 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged&gt;</ph> 이벤트를 다시 호출 하는 <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)">
          <source>If the peer name cannot be resolved, an <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerToPeerException&gt;</ph> is thrown.</source>
          <target state="translated">피어 이름의 확인할 수 없는 경우는 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerToPeerException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)">
          <source>For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</source>
          <target state="translated">보안 되지 않은 피어 이름에 대 한 이름이 같은 수 수 등록 (및 연결 된 끝점이 다른) 동일한 클라우드 내의 여러 피어가 있습니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver&gt;</ph> method is similar to calling the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A&gt;</ph> method for each peer name record in the <ph id="ph3">&lt;xref:System.Net.PeerToPeer.PeerNameRecordCollection&gt;</ph>.</source>
          <target state="translated">호출 된 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver&gt;</ph> 호출 하는 것과 비슷합니다는 <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A&gt;</ph> 각 피어 이름 레코드에 대 한 메서드는 <ph id="ph3">&lt;xref:System.Net.PeerToPeer.PeerNameRecordCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)">
          <source>Note that using the Resolve method on an individual peer name record does not invalidate resolving multiple peer names.</source>
          <target state="translated">참고 개별 피어 이름 레코드에서 메서드를 사용 하 여 여러 피어 이름 확인 무효화 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)">
          <source>For every <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A&gt;</ph> method, there is an equivalent <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> method.</source>
          <target state="translated">에 대 한 모든 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A&gt;</ph> 메서드는 해당 하는 <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)">
          <source>Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.</source>
          <target state="translated">매개 변수 목록은 동일 ResolveAsync 메서드는 비동기 이벤트 처리에 대 한 시스템 토큰이 포함 Resolve 메서드에 동기 처리를 위한 된다는 점이 다릅니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)">
          <source>All asynchronous references to the resolver object are coordinated with a unique identifier token.</source>
          <target state="translated">모든 비동기 참조 확인자 개체에는 고유 식별자 토큰에 맞게 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)">
          <source>This <ph id="ph1">`userState`</ph> token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.</source>
          <target state="translated">이 <ph id="ph1">`userState`</ph> 토큰 또는 메시지 식별자를 사용 하면 운영 체제 메시지가 메시지 큐에 배치 된 후 단일 수신 프로세스에 메시지를 배달 합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> event will be raised if the resolve operation completes in error or is canceled.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> 확인 작업이 잘못 완료 되거나 취소 되 면 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)">
          <source>One or both of the <ph id="ph1">&lt;paramref name="peerName" /&gt;</ph> and <ph id="ph2">&lt;paramref name="userState" /&gt;</ph> parameters are set to <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="peerName" /&gt;</ph> 및 <ph id="ph2">&lt;paramref name="userState" /&gt;</ph> 매개 변수 중 하나 또는 둘 모두가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>로 설정된 경우</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> to resolve.</source>
          <target state="translated">확인할 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)">
          <source>The maximum number of records to obtain for the Peer Name.</source>
          <target state="translated">피어 이름에 대해 획득할 최대 레코드 수입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)">
          <source>A user-defined object that contains information about the resolve operation.</source>
          <target state="translated">확인 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)">
          <source>Begins an asynchronous peer name resolution operation for the specified <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> in all clouds known to the calling peer, returning no more than <ph id="ph2">&lt;paramref name="maxRecords" /&gt;</ph> entries for the peer name.</source>
          <target state="translated">호출 피어에 알려진 모든 클라우드에서 지정된 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>에 대한 비동기 피어 이름 확인 작업을 시작하고 피어 이름에 대해 <ph id="ph2">&lt;paramref name="maxRecords" /&gt;</ph>개까지 항목을 반환합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)">
          <source>This method asynchronously associates a peer name to clouds.</source>
          <target state="translated">이 메서드는 비동기적으로 클라우드에 피어 이름을 연결합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)">
          <source>All clouds are queried for the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph>.</source>
          <target state="translated">에 대 한 모든 클라우드를 쿼리하여는 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)">
          <source>For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</source>
          <target state="translated">보안 되지 않은 피어 이름에 대 한 이름이 같은 수 수 등록 (및 연결 된 끝점이 다른) 동일한 클라우드 내의 여러 피어가 있습니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)">
          <source>If the peer name cannot be resolved or is <ph id="ph1">`null`</ph>, an <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerToPeerException&gt;</ph> is thrown.</source>
          <target state="translated">피어 이름을 확인할 수 없는 않거나 <ph id="ph1">`null`</ph>, <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerToPeerException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)">
          <source>This method raises the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> event, which calls back to the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A&gt;</ph> method.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> 이벤트를 다시 호출 하는 <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)">
          <source>Or, it raises the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged&gt;</ph> event, which calls back to the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A&gt;</ph> method.</source>
          <target state="translated">발생 또는 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged&gt;</ph> 이벤트를 다시 호출 하는 <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)">
          <source>For every <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A&gt;</ph> method, there is an equivalent <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> method.</source>
          <target state="translated">에 대 한 모든 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A&gt;</ph> 메서드는 해당 하는 <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)">
          <source>Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.</source>
          <target state="translated">매개 변수 목록은 동일 ResolveAsync 메서드는 비동기 이벤트 처리에 대 한 시스템 토큰이 포함 Resolve 메서드에 동기 처리를 위한 된다는 점이 다릅니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)">
          <source>All asynchronous references to the resolver object are coordinated with a unique identifier token <ph id="ph1">&lt;xref:System.Object&gt;</ph>.</source>
          <target state="translated">모든 비동기 참조 확인자 개체에는 고유 식별자 토큰에 맞게 조정 <ph id="ph1">&lt;xref:System.Object&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)">
          <source>This <ph id="ph1">`userState`</ph> token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.</source>
          <target state="translated">이 <ph id="ph1">`userState`</ph> 토큰 또는 메시지 식별자를 사용 하면 운영 체제 메시지가 메시지 큐에 배치 된 후 단일 수신 프로세스에 메시지를 배달 합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> event will be raised if the resolve operation completes in error or is canceled.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> 확인 작업이 잘못 완료 되거나 취소 되 면 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)">
          <source>One or both of the <ph id="ph1">&lt;paramref name="peerName" /&gt;</ph> and <ph id="ph2">&lt;paramref name="userState" /&gt;</ph> parameters are set to <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="peerName" /&gt;</ph> 및 <ph id="ph2">&lt;paramref name="userState" /&gt;</ph> 매개 변수 중 하나 또는 둘 모두가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>로 설정된 경우</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="maxRecords" /&gt;</ph> parameter is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="maxRecords" /&gt;</ph> 매개 변수가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> to resolve.</source>
          <target state="translated">확인할 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> in which to resolve the <bpt id="p1">&lt;c&gt;</bpt>peerName<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>peerName<ept id="p1">&lt;/c&gt;</ept>을 확인할 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)">
          <source>A user-defined <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that contains information about the peer name resolution operation.</source>
          <target state="translated">피어 이름 확인 작업에 대한 정보가 들어 있는 사용자 정의 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)">
          <source>Begins an asynchronous peer name resolution operation for the specified <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> in the specified <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>에서 지정된 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>에 대한 비동기 피어 이름 확인 작업을 시작합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)">
          <source>This method raises the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> event, which calls back to the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A&gt;</ph> method.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> 이벤트를 다시 호출 하는 <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)">
          <source>Or, it raises the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged&gt;</ph> event, which calls back to the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A&gt;</ph> method.</source>
          <target state="translated">발생 또는 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged&gt;</ph> 이벤트를 다시 호출 하는 <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)">
          <source>For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</source>
          <target state="translated">보안 되지 않은 피어 이름에 대 한 이름이 같은 수 수 등록 (및 연결 된 끝점이 다른) 동일한 클라우드 내의 여러 피어가 있습니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph> parameter is <ph id="ph2">`null`</ph>, the name is resolved using the <ph id="ph3">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> shortcut, which initializes default values for the <ph id="ph4">&lt;xref:System.Net.PeerToPeer.Cloud.Name%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Net.PeerToPeer.Cloud.Scope%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Net.PeerToPeer.Cloud.ScopeId%2A&gt;</ph> properties.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph> 매개 변수는 <ph id="ph2">`null`</ph>를 사용 하 여 이름이 확인 됩니다는 <ph id="ph3">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> 기본값에 대 한 초기화 하는 바로 가기는 <ph id="ph4">&lt;xref:System.Net.PeerToPeer.Cloud.Name%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Net.PeerToPeer.Cloud.Scope%2A&gt;</ph>, 및 <ph id="ph6">&lt;xref:System.Net.PeerToPeer.Cloud.ScopeId%2A&gt;</ph> 속성.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)">
          <source>For every <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A&gt;</ph> method, there is an equivalent <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> method.</source>
          <target state="translated">에 대 한 모든 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A&gt;</ph> 메서드는 해당 하는 <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)">
          <source>Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.</source>
          <target state="translated">매개 변수 목록은 동일 ResolveAsync 메서드는 비동기 이벤트 처리에 대 한 시스템 토큰이 포함 Resolve 메서드에 동기 처리를 위한 된다는 점이 다릅니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)">
          <source>All asynchronous references to the resolver object are coordinated with a unique identifier token.</source>
          <target state="translated">모든 비동기 참조 확인자 개체에는 고유 식별자 토큰에 맞게 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)">
          <source>This <ph id="ph1">`userState`</ph> token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.</source>
          <target state="translated">이 <ph id="ph1">`userState`</ph> 토큰 또는 메시지 식별자를 사용 하면 운영 체제 메시지가 메시지 큐에 배치 된 후 단일 수신 프로세스에 메시지를 배달 합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> event will be raised if the resolve operation completes in error or is canceled.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> 확인 작업이 잘못 완료 되거나 취소 되 면 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)">
          <source>One or both of the <ph id="ph1">&lt;paramref name="peerName" /&gt;</ph> and <ph id="ph2">&lt;paramref name="userState" /&gt;</ph> parameters are set to <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="peerName" /&gt;</ph> 및 <ph id="ph2">&lt;paramref name="userState" /&gt;</ph> 매개 변수 중 하나 또는 둘 모두가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>로 설정된 경우</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>peerName<ept id="p1">&lt;/c&gt;</ept> to resolve.</source>
          <target state="translated">확인할 <bpt id="p1">&lt;c&gt;</bpt>peerName<ept id="p1">&lt;/c&gt;</ept>입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>cloud<ept id="p1">&lt;/c&gt;</ept> in which to resolve <bpt id="p2">&lt;c&gt;</bpt>peerName<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p2">&lt;c&gt;</bpt>peerName<ept id="p2">&lt;/c&gt;</ept>을 확인할 <bpt id="p1">&lt;c&gt;</bpt>cloud<ept id="p1">&lt;/c&gt;</ept>입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)">
          <source>The maximum number of records to obtain from <bpt id="p1">&lt;c&gt;</bpt>cloud<ept id="p1">&lt;/c&gt;</ept> for <bpt id="p2">&lt;c&gt;</bpt>peerName<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p2">&lt;c&gt;</bpt>peerName<ept id="p2">&lt;/c&gt;</ept>에 대해 <bpt id="p1">&lt;c&gt;</bpt>cloud<ept id="p1">&lt;/c&gt;</ept>에서 획득할 최대 레코드 수입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)">
          <source>A user-defined object that contains information about the peer name resolution operation.</source>
          <target state="translated">피어 이름 확인 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)">
          <source>Begins an asynchronous peer name resolution operation for the specified <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> in the specified <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>에서 지정된 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>에 대한 비동기 피어 이름 확인 작업을 시작합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)">
          <source>The resolution operation will resolve no more than <ph id="ph1">&lt;paramref name="maxRecords" /&gt;</ph> entries for the specified peer name.</source>
          <target state="translated">확인 작업은 지정된 피어 이름에 대해 <ph id="ph1">&lt;paramref name="maxRecords" /&gt;</ph>개 이하의 피어 이름만 확인합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)">
          <source>For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</source>
          <target state="translated">보안 되지 않은 피어 이름에 대 한 이름이 같은 수 수 등록 (및 연결 된 끝점이 다른) 동일한 클라우드 내의 여러 피어가 있습니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)">
          <source>This method raises the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> event, which calls back to the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A&gt;</ph> method.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> 이벤트를 다시 호출 하는 <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)">
          <source>Or, it raises the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged&gt;</ph> event, which calls back to the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A&gt;</ph> method.</source>
          <target state="translated">발생 또는 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged&gt;</ph> 이벤트를 다시 호출 하는 <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph> parameter is <ph id="ph2">`null`</ph>, the name is resolved using the <ph id="ph3">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> shortcut, which initializes default values for the <ph id="ph4">&lt;xref:System.Net.PeerToPeer.Cloud.Name%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Net.PeerToPeer.Cloud.Scope%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Net.PeerToPeer.Cloud.ScopeId%2A&gt;</ph> properties.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph> 매개 변수는 <ph id="ph2">`null`</ph>를 사용 하 여 이름이 확인 됩니다는 <ph id="ph3">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> 기본값에 대 한 초기화 하는 바로 가기는 <ph id="ph4">&lt;xref:System.Net.PeerToPeer.Cloud.Name%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Net.PeerToPeer.Cloud.Scope%2A&gt;</ph>, 및 <ph id="ph6">&lt;xref:System.Net.PeerToPeer.Cloud.ScopeId%2A&gt;</ph> 속성.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)">
          <source>For every <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A&gt;</ph> method, there is an equivalent <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> method.</source>
          <target state="translated">에 대 한 모든 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A&gt;</ph> 메서드는 해당 하는 <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)">
          <source>Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.</source>
          <target state="translated">매개 변수 목록은 동일 ResolveAsync 메서드는 비동기 이벤트 처리에 대 한 시스템 토큰이 포함 Resolve 메서드에 동기 처리를 위한 된다는 점이 다릅니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)">
          <source>All asynchronous references to the peer resolver object are coordinated with a unique identifier token <ph id="ph1">&lt;xref:System.Object&gt;</ph>.</source>
          <target state="translated">피어 확인자 개체에 대 한 모든 비동기 참조 되는 고유 식별자 토큰에 맞게 조정 <ph id="ph1">&lt;xref:System.Object&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)">
          <source>This <ph id="ph1">`userState`</ph> token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.</source>
          <target state="translated">이 <ph id="ph1">`userState`</ph> 토큰 또는 메시지 식별자를 사용 하면 운영 체제 메시지가 메시지 큐에 배치 된 후 단일 수신 프로세스에 메시지를 배달 합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> event will be raised if the resolve operation completes in error or is canceled.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> 확인 작업이 잘못 완료 되거나 취소 되 면 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)">
          <source>One or both of the <ph id="ph1">&lt;paramref name="peerName" /&gt;</ph> and <ph id="ph2">&lt;paramref name="userState" /&gt;</ph> parameters are set to <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="peerName" /&gt;</ph> 및 <ph id="ph2">&lt;paramref name="userState" /&gt;</ph> 매개 변수 중 하나 또는 둘 모두가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>로 설정된 경우</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)">
          <source>One or more supplied parameters are invalid.</source>
          <target state="translated">하나 이상의 제공된 매개 변수가 올바르지 않은 경우</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)">
          <source>Successful completion of this operation requires at least one event handler.</source>
          <target state="translated">이 작업이 성공적으로 완료되려면 하나 이상의 이벤트 처리기가 필요합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="maxRecords" /&gt;</ph> parameter is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="maxRecords" /&gt;</ph> 매개 변수가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)">
          <source>The object provided to the <ph id="ph1">&lt;see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /&gt;</ph> method instance which started the resolve operation.</source>
          <target state="translated">확인 작업을 시작한 <ph id="ph1">&lt;see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /&gt;</ph> 메서드 인스턴스에 제공된 개체입니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)">
          <source>Cancels the specified asynchronous peer name resolution request.</source>
          <target state="translated">지정된 비동기 피어 이름 확인 요청을 취소합니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)">
          <source>Calling this method guarantees the system will not attempt to obtain additional records for the specified <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph>.</source>
          <target state="translated">이 메서드를 호출 하지 시스템이 지정 된 항목에 대 한 추가 레코드를 가져오지 보장 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)">
          <source>If this method is called when an asynchronous peer name resolution operation is not outstanding, it acts as a "no operation" (NO OP).</source>
          <target state="translated">"연산 없음" 처럼 작동 하는 경우 비동기 피어 이름 확인 작업이 처리 되지 않은 경우이 메서드는, (NO OP).</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)">
          <source>The <ph id="ph1">`userState`</ph> object must be provided since it is used to track a specific asynchronous call when multiple calls are in progress.</source>
          <target state="translated"><ph id="ph1">`userState`</ph> 개체는 여러 호출이 진행 중인 경우 특정 비동기 호출을 추적 하는 데 사용 됩니다 되므로 반드시 제공 해야 합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)">
          <source>This caller-supplied object is unique for each peer name resolution request.</source>
          <target state="translated">호출자 제공이 개체는 각 피어 이름 확인 요청에 대해 고유 합니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)">
          <source>This method will return immediately, but the operation may or may not immediately cancel.</source>
          <target state="translated">이 메서드는 즉시 반환 되지만 작업 수도 즉시 취소 되지 않을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)">
          <source>The event arguments returned by the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> event contains a field which can be polled by clients to determine whether cancellation occurred.</source>
          <target state="translated">반환 된 이벤트 인수는 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> 취소가 발생 한 것인지 확인 하기 위해 클라이언트에서 폴링할 수 있는 필드를 포함 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)">
          <source>Calling this method ensures the ResolveCompleted event will be signaled as soon as possible with the event argument <ph id="ph1">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A&gt;</ph> set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 호출 하면 ResolveCompleted 이벤트 신호를 받는 가능한 한 빨리 이벤트 인수와 함께 <ph id="ph1">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A&gt;</ph> 로 설정 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="userState" /&gt;</ph> parameters cannot be <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="userState" /&gt;</ph> 매개 변수는 <ph id="ph2">&lt;see langword="null" /&gt;</ph>일 수 없습니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted">
          <source>The <ph id="ph1">&lt;see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /&gt;</ph> event is signaled when a peer name resolution request for a specific <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> has completed.</source>
          <target state="translated">특정 <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph>에 대한 피어 이름 확인 요청이 완료되면 <ph id="ph1">&lt;see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /&gt;</ph> 이벤트가 신호를 받습니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted">
          <source>The <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged&gt;</ph> event will be raised once for each endpoint found, and this event will be raised only once when all endpoints have been found.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged&gt;</ph> 이벤트가 발견 된 각 끝점에 대해 한 번 발생 하 고이 이벤트는 모든 끝점을 찾은 후 때 한 번만 발생 합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted">
          <source>This event will also be raised if the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> operation completes in error or is canceled.</source>
          <target state="translated">경우에이 이벤트를 발생 됩니다는 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> 작업이 오류 완료 되거나 취소 됩니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged">
          <source>This event is signaled whenever a <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph> object is found in response to a <ph id="ph2">&lt;see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /&gt;</ph> operation for a specific <ph id="ph3">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>.</source>
          <target state="translated">이 이벤트는 특정 <ph id="ph3">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>에 대한 <ph id="ph2">&lt;see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /&gt;</ph> 작업의 응답으로 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph> 개체가 발견될 때마다 신호를 받습니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged">
          <source>If multiple <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> objects exist in the cloud(s) being queried, this event is signaled once for each <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRecord&gt;</ph> found.</source>
          <target state="translated">여러 개인 경우 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> 개체 쿼리 중인 클라우드에 있는 경우이 이벤트는 한 번 각각에 대해 <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRecord&gt;</ph> 찾을 수 있습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>