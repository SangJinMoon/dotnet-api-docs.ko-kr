<Type Name="PeerNameType" FullName="System.Net.PeerToPeer.PeerNameType">
  <TypeSignature Language="C#" Value="public enum PeerNameType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PeerNameType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameType" />
  <TypeSignature Language="VB.NET" Value="Public Enum PeerNameType" />
  <TypeSignature Language="C++ CLI" Value="public enum class PeerNameType" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="96cd3-101">새로 만들 <see cref="T:System.Net.PeerToPeer.PeerName" />의 형식을 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="96cd3-101">Defines the type of <see cref="T:System.Net.PeerToPeer.PeerName" /> to create.</span></span> <span data-ttu-id="96cd3-102">피어 이름은 보안되거나 보안되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="96cd3-102">A peer name is either secured or unsecured.</span></span> <span data-ttu-id="96cd3-103">보안된 피어 이름은 이름 소유권을 증명하고</span><span class="sxs-lookup"><span data-stu-id="96cd3-103">A secured peer name provides a proof of ownership of the name.</span></span> <span data-ttu-id="96cd3-104">보안되지 않은 피어 이름에는 ID가 연결되어 있지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="96cd3-104">An unsecured peer name has no identity associated.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96cd3-105">노드 공개 키와 연결 된 개인 키에 액세스할 수 있어야 합니다. 보안 된 만드는 데 사용 되 <xref:System.Net.PeerToPeer.PeerName>, 소유권을 증명 하려면.</span><span class="sxs-lookup"><span data-stu-id="96cd3-105">A node must have access to the private key associated with the public key, used in creating the secured <xref:System.Net.PeerToPeer.PeerName>, in order to prove ownership.</span></span> <span data-ttu-id="96cd3-106">노드는 공개 키에 대 한 관계는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="96cd3-106">The node does not have a relationship to a public key.</span></span>  
  
 <span data-ttu-id="96cd3-107">피어 이름의 포맷이: *Authority.Classifier*합니다.</span><span class="sxs-lookup"><span data-stu-id="96cd3-107">The format of a peer name is: *Authority.Classifier*.</span></span> <span data-ttu-id="96cd3-108">값 <xref:System.Net.PeerToPeer.PeerName.Authority%2A> 이름이 보안 된 피어 이름 또는 보안 되지 않은 피어 이름 인지에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="96cd3-108">The value of <xref:System.Net.PeerToPeer.PeerName.Authority%2A> depends on whether the name is a secured peer name or an unsecured peer name.</span></span> <span data-ttu-id="96cd3-109"><xref:System.Net.PeerToPeer.PeerName.Classifier%2A> 이름의 일부로 포함 하 여 15 이하의 유니코드 문자를 포함 하는 모든 문자열으로 설정할 수 있습니다는 `null` 종결자입니다.</span><span class="sxs-lookup"><span data-stu-id="96cd3-109">The <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> part of the name can be set to any string that contains 15 or fewer Unicode characters, including the `null` terminator.</span></span> <span data-ttu-id="96cd3-110">한 번의 <xref:System.Net.PeerToPeer.PeerName.Authority%2A>, <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> 및 피어의 보안 수준을 설정 된, 피어도 참조할 수 호스트 이름 또는 상대 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="96cd3-110">Once the <xref:System.Net.PeerToPeer.PeerName.Authority%2A>, <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> and security level of a peer have been established, a peer can also be referred to with a relative name or a host name.</span></span>  
  
 <span data-ttu-id="96cd3-111">소유자 또는 피어 호스트를 사용 하 여 피어 이름을 등록할 수는 [PNRP Namespace 공급자 API](http://go.microsoft.com/fwlink?LinkID=92731)합니다.</span><span class="sxs-lookup"><span data-stu-id="96cd3-111">Only the owner, or peer host, can register a secure peer name with the [PNRP Namespace Provider API](http://go.microsoft.com/fwlink?LinkID=92731).</span></span> <span data-ttu-id="96cd3-112">임의의 노드를 보안 되지 않은 소유권을 요구할 수 <xref:System.Net.PeerToPeer.PeerName>합니다.</span><span class="sxs-lookup"><span data-stu-id="96cd3-112">Any node can claim ownership to any unsecured <xref:System.Net.PeerToPeer.PeerName>.</span></span>  
  
 <span data-ttu-id="96cd3-113">**참고** 은 안전한를 사용 하 여 <xref:System.Net.PeerToPeer.PeerName> 네트워킹 응용 프로그램의 전반적인 보안을 보장 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="96cd3-113">**Note** Using a secured <xref:System.Net.PeerToPeer.PeerName> does not ensure the overall security of a networking application.</span></span> <span data-ttu-id="96cd3-114">응용 프로그램의 보안은 구현에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="96cd3-114">Security of the application is implementation-dependent.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)" />
    <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
    <altmember cref="P:System.Net.PeerToPeer.PeerName.IsSecured" />
  </Docs>
  <Members>
    <Member MemberName="Secured">
      <MemberSignature Language="C#" Value="Secured" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.PeerToPeer.PeerNameType Secured = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Net.PeerToPeer.PeerNameType.Secured" />
      <MemberSignature Language="VB.NET" Value="Secured" />
      <MemberSignature Language="C++ CLI" Value="Secured" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="96cd3-115">현재 사용자의 ID를 사용하여 보안된 <see cref="T:System.Net.PeerToPeer.PeerName" />을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="96cd3-115">Create a secured <see cref="T:System.Net.PeerToPeer.PeerName" /> using the identity of current user.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Unsecured">
      <MemberSignature Language="C#" Value="Unsecured" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.PeerToPeer.PeerNameType Unsecured = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Net.PeerToPeer.PeerNameType.Unsecured" />
      <MemberSignature Language="VB.NET" Value="Unsecured" />
      <MemberSignature Language="C++ CLI" Value="Unsecured" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="96cd3-116">현재 사용자의 ID를 사용하여 보안되지 않은 <see cref="T:System.Net.PeerToPeer.PeerName" />을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="96cd3-116">Create an unsecured <see cref="T:System.Net.PeerToPeer.PeerName" /> using the identity of current user.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>