<Type Name="PeerNameRegistration" FullName="System.Net.PeerToPeer.PeerNameRegistration">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9970347a507e1a50dbece7b9f46a71933a14be17" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53294761" /></Metadata><TypeSignature Language="C#" Value="public class PeerNameRegistration : IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable PeerNameRegistration extends System.Object implements class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameRegistration" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerNameRegistration&#xA;Implements IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerNameRegistration : IDisposable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type PeerNameRegistration = class&#xA;    interface IDisposable&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8da14-101"><see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 또는 클라우드 집합에 <see cref="T:System.Net.PeerToPeer.Cloud" />을 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-101">Registers a <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> in a <see cref="T:System.Net.PeerToPeer.Cloud" /> or set of clouds.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8da14-102">등록을 만듭니다 (또는 업데이트)와 연결 된 모든 정보는 <xref:System.Net.PeerToPeer.PeerName> 피어 클라우드 또는 클라우드에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-102">Registration creates (or updates) all the information that is associated with a <xref:System.Net.PeerToPeer.PeerName> in a peer cloud or clouds.</span></span>  
  
 <span data-ttu-id="8da14-103">여러 개 있을 수 있기 <xref:System.Net.PeerToPeer.PeerNameRegistration> 동일한 피어 이름에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-103">It is possible to have multiple <xref:System.Net.PeerToPeer.PeerNameRegistration> objects for the same peer name.</span></span> <span data-ttu-id="8da14-104">이러한 경우 피어 이름이 보호 되는 경우 각 인스턴스가 나타내는 <xref:System.Net.PeerToPeer.PeerNameRegistration> 다른 클라우드에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-104">In such a case, if the peer name is secured, each instance represents <xref:System.Net.PeerToPeer.PeerNameRegistration> in a different cloud.</span></span> <span data-ttu-id="8da14-105">그러나 피어 이름이 보안 되지 않는 경우 해당 등록할 수 있습니다 같은 클라우드에서 여러 번 다른 프로세스에서 각 등록 인지 제공.</span><span class="sxs-lookup"><span data-stu-id="8da14-105">However, if the peer name is not secured, it can be registered in the same cloud multiple times, providing that each registration is from a different process.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8da14-106"><see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-106">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8da14-107"><see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 클래스의 새로운 기본 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-107">Initializes a new default instance of the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8da14-108">형식의 새 기본 인스턴스를 반환 <xref:System.Net.PeerToPeer.PeerNameRegistration>합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-108">Returns a new default instance of type <xref:System.Net.PeerToPeer.PeerNameRegistration>.</span></span> <span data-ttu-id="8da14-109">생성 하는 동안 피어 이름 등록을 수행 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-109">It does not perform peer name registration during construction.</span></span>  
  
 <span data-ttu-id="8da14-110">이 생성자를 사용 하 여 개체를 인스턴스화한 후 호출자의 인스턴스를 호출 하기 전에 적절 한 필드 채워야 <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> 또는 <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-110">After instantiating an object with this constructor, the caller should populate the appropriate fields in the instance prior to calling <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> or <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerName name, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As PeerName, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration(System::Net::PeerToPeer::PeerName ^ name, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Net.PeerToPeer.PeerName * int -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (name, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="8da14-111">등록할 <see cref="T:System.Net.PeerToPeer.PeerName" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-111">The <see cref="T:System.Net.PeerToPeer.PeerName" /> object to register.</span></span></param>
        <param name="port"><span data-ttu-id="8da14-112">등록할 포트 번호를 지정하는 정수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-112">Integer value that specifies the port number to register.</span></span></param>
        <summary><span data-ttu-id="8da14-113">지정된 이름 및 포트 번호를 사용하여 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-113">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> class with the specified name and port number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8da14-114">모든 원본 주소 (ipv6, IPv4)를 등록 하는 데 사용할 수 있는 인스턴스를 만들고이 생성자를 호출 하 고 피어 현재 참여 중인 모든 클라우드에 대 한 제공 된 포트입니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-114">Calling this constructor creates an instance that will be used to register all source addresses (both IPv6and IPv4) and the provided port for all clouds in which the peer is currently participating.</span></span>  <span data-ttu-id="8da14-115">개체가 성공적으로 생성 되는 경우 지정 된 <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> 고 <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> 채워집니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-115">If the object is constructed successfully, the specified <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> and <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> are populated.</span></span>  
  
 <span data-ttu-id="8da14-116">피어 이름을 보안은 및에서 이전에 등록 된 경우는 <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> 피어가 현재 참여 하 고는 <xref:System.Net.PeerToPeer.PeerToPeerException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-116">If the peer name is secured and was previously registered in a <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> the peer is currently participating in, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="8da14-117">이 생성자만 만듭니다.는 <xref:System.Net.PeerToPeer.PeerNameRegistration> 인스턴스이거나, 등록을 수행 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-117">This constructor only creates a <xref:System.Net.PeerToPeer.PeerNameRegistration> instance; it does not perform the registration.</span></span> <span data-ttu-id="8da14-118">이 생성자를 사용 하 여 등록 개체를 인스턴스화하고 해당 필드에 입력을 한 후 응용 프로그램 호출 해야 <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> 실제 등록을 수행 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-118">After instantiating the registration object with this constructor and populating its fields, the application must call <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> to perform the actual registration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8da14-119"><paramref name="name" /> 매개 변수는 <see langword="null" />일 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-119">The <paramref name="name" /> parameter cannot be <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8da14-120">지정된 포트 번호가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="8da14-120">The specified port number is less than zero.</span></span>  <span data-ttu-id="8da14-121">포트 번호는 0보다 크거나 같고 65,535(0xFFFF)보다 작아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-121">Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="8da14-122">-   지정된 <see cref="T:System.Net.PeerToPeer.PeerName" />이 이 호스트에서 이미 등록된 경우</span><span class="sxs-lookup"><span data-stu-id="8da14-122">-   The <see cref="T:System.Net.PeerToPeer.PeerName" /> specified has already been registered from this host.</span></span>  
  
<span data-ttu-id="8da14-123">-   원격 피어가 제공된 <see cref="T:System.Net.PeerToPeer.PeerName" /> 개체에 대한 <see cref="P:System.Net.PeerToPeer.PeerName.Authority" />를 소유하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="8da14-123">-   The remote peer does not own the <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> for the supplied <see cref="T:System.Net.PeerToPeer.PeerName" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PeerNameRegistration (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PeerNameRegistration(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="8da14-124">이 인스턴스를 deserialize해야 하는 데이터를 보유하는 개체에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-124">Reference to the object that holds the data needed to deserialize this instance.</span></span></param>
        <param name="context"><span data-ttu-id="8da14-125">데이터를 deserialize하는 수단을 제공하는 컨텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-125">Context that provides the means for deserializing the data.</span></span> <span data-ttu-id="8da14-126">Serialize된 데이터의 소스라고도 합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-126">Also referred to as the source of the serialized data.</span></span></param>
        <summary><span data-ttu-id="8da14-127">새로운 serialize 가능 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 개체를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-127">Initializes a new serializable <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="N:System.Runtime.Serialization" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port, System.Net.PeerToPeer.Cloud cloud);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerName name, int32 port, class System.Net.PeerToPeer.Cloud cloud) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration(System::Net::PeerToPeer::PeerName ^ name, int port, System::Net::PeerToPeer::Cloud ^ cloud);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Net.PeerToPeer.PeerName * int * System.Net.PeerToPeer.Cloud -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (name, port, cloud)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="8da14-128">등록할 <see cref="T:System.Net.PeerToPeer.PeerName" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-128">The <see cref="T:System.Net.PeerToPeer.PeerName" /> object to register.</span></span></param>
        <param name="port"><span data-ttu-id="8da14-129">등록할 포트 번호를 지정하는 정수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-129">Integer value that specifies the port number to register.</span></span></param>
        <param name="cloud"><span data-ttu-id="8da14-130">피어 이름을 등록할 <see cref="T:System.Net.PeerToPeer.Cloud" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-130"><see cref="T:System.Net.PeerToPeer.Cloud" /> in which to register the peer name.</span></span></param>
        <summary><span data-ttu-id="8da14-131">지정된 피어 이름, 포트 번호 및 <see cref="T:System.Net.PeerToPeer.Cloud" />를 사용하여 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-131">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> class with the specified peer name, port number, and <see cref="T:System.Net.PeerToPeer.Cloud" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8da14-132">모든 원본 주소 (IPv4 및 IPv6 모두), 제공 된 포트 및 지정 된 등록에 사용할 인스턴스를 만들고이 생성자를 호출 <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-132">Calling this constructor creates an instance that will be used to register all source addresses (both IPv6 and IPv4), the provided port, and the specified <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.</span></span>  <span data-ttu-id="8da14-133">속성이 채워집니다 개체를 성공적으로 생성 하는 경우 지정 된 <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>, <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> 고 <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-133">If the object is constructed successfully, the properties are populated with the specified <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>, <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> and <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.</span></span>  
  
 <span data-ttu-id="8da14-134">클라우드 매개 변수가 `null`, 이름을 사용 하 여 등록 됩니다 합니다 <xref:System.Net.PeerToPeer.Cloud.Available> 기본값을 초기화 하는 바로 가기는 <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, 및 <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-134">If the cloud parameter is `null`, the name is registered using the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut, which initializes default values for the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span></span>  
  
 <span data-ttu-id="8da14-135">인스턴스화를 후는 <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> 메서드를 호출 하 여 등록 해야 합니다 <xref:System.Net.PeerToPeer.PeerName>합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-135">After instantiation, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> method must be called to register the <xref:System.Net.PeerToPeer.PeerName>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8da14-136"><paramref name="name" /> 매개 변수는 <see langword="null" />일 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-136">The <paramref name="name" /> parameter cannot be <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8da14-137">지정된 포트 번호가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="8da14-137">The specified port number is less than zero.</span></span>  <span data-ttu-id="8da14-138">포트 번호는 0보다 크거나 같고 65,535(0xFFFF)보다 작아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-138">Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="8da14-139">-   지정된 <see cref="T:System.Net.PeerToPeer.PeerName" />이 이 호스트에서 이미 등록된 경우</span><span class="sxs-lookup"><span data-stu-id="8da14-139">-   The <see cref="T:System.Net.PeerToPeer.PeerName" /> specified has already been registered from this host.</span></span>  
  
<span data-ttu-id="8da14-140">-   원격 피어가 제공된 <see cref="T:System.Net.PeerToPeer.PeerName" /> 개체에 대한 <see cref="P:System.Net.PeerToPeer.PeerName.Authority" />를 소유하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="8da14-140">-   The remote peer does not own the <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> for the supplied <see cref="T:System.Net.PeerToPeer.PeerName" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Cloud">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Cloud Cloud { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.Cloud Cloud" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />
      <MemberSignature Language="VB.NET" Value="Public Property Cloud As Cloud" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::Cloud ^ Cloud { System::Net::PeerToPeer::Cloud ^ get(); void set(System::Net::PeerToPeer::Cloud ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Cloud : System.Net.PeerToPeer.Cloud with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Cloud" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Cloud</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8da14-141">이 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> 개체를 등록할 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" />의 정보를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-141">Gets or sets information in a <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> into which this <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> object will be registered.</span></span></summary>
        <value><span data-ttu-id="8da14-142">이 등록이 정의되는 대상 피어 클라우드를 지정하는 <see cref="T:System.Net.PeerToPeer.Cloud" /> 형식의 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-142">An object of type <see cref="T:System.Net.PeerToPeer.Cloud" /> that specifies the peer cloud for which this registration is defined.</span></span> <span data-ttu-id="8da14-143">기본적으로 이 속성은 <see langword="null" />로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-143">This property is set to <see langword="null" /> by default.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public string Comment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Comment" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Comment" />
      <MemberSignature Language="VB.NET" Value="Public Property Comment As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Comment { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Comment : string with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Comment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8da14-144"><see cref="T:System.Net.PeerToPeer.PeerName" />에 등록할 <see cref="T:System.Net.PeerToPeer.Cloud" /> 개체에 대한 추가 정보를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-144">Gets or sets additional information about the <see cref="T:System.Net.PeerToPeer.PeerName" /> object that will be registered with the <see cref="T:System.Net.PeerToPeer.Cloud" />.</span></span></summary>
        <value><span data-ttu-id="8da14-145"><see cref="T:System.Net.PeerToPeer.PeerName" />와 연결할 <see cref="T:System.Net.PeerToPeer.Cloud" />에 대한 추가 정보를 포함하는 설명입니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-145">The comment that contains additional information about the <see cref="T:System.Net.PeerToPeer.PeerName" /> to associate with the <see cref="T:System.Net.PeerToPeer.Cloud" />.</span></span> <span data-ttu-id="8da14-146">기본적으로 이 속성은 <see langword="null" />로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-146">This property is set to <see langword="null" /> by default.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="8da14-147">지정된 문자열 값이 유니코드 문자 39자를 초과하는 경우</span><span class="sxs-lookup"><span data-stu-id="8da14-147">The specified string value is greater than 39 Unicode characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public byte[] Data { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Data" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Data" />
      <MemberSignature Language="VB.NET" Value="Public Property Data As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Data { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Data : byte[] with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8da14-148"><see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 개체에 대해 응용 프로그램에서 정의한 이진 데이터를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-148">Gets or sets application-defined binary data for the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></summary>
        <value><span data-ttu-id="8da14-149">항목과 연관된 이진 데이터를 보유하는 바이트의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-149">An array of bytes that holds the binary data associated with the entry.</span></span> <span data-ttu-id="8da14-150">기본적으로 이 속성은 <see langword="null" />로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-150">This property is set to <see langword="null" /> by default.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8da14-151">최대 <xref:System.Net.PeerToPeer.PeerNameRegistration.Data%2A> 제공할 수 있습니다는 4,096 바이트입니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-151">The maximum amount of <xref:System.Net.PeerToPeer.PeerNameRegistration.Data%2A> that can be supplied is 4,096 bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8da14-152">지정된 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Data" />가 4096바이트보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="8da14-152">The specified <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Data" /> is greater than 4096 bytes.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8da14-153"><see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 개체가 사용하는 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-153">Releases the resources used by the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8da14-154">피어를 벗어날 때를 <xref:System.Net.PeerToPeer.Cloud>, 클라우드에 더 이상 필요 하지는 <xref:System.Net.PeerToPeer.PeerNameRegistration> 피어와 연결 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-154">When a peer leaves a <xref:System.Net.PeerToPeer.Cloud>, the cloud no longer requires the <xref:System.Net.PeerToPeer.PeerNameRegistration> object associated with the peer.</span></span>  <span data-ttu-id="8da14-155">등록 개체를 중지 하거나 삭제 하는 여부는 클라우드는이 피어 또는 다른 피어를 등록 하려면 개체를 재사용 하는 여부에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-155">Whether the registration object is stopped or disposed is dependent upon whether the cloud will reuse the object to register this peer or another peer.</span></span> <span data-ttu-id="8da14-156">된 피어 호스트 통신 해야 등록 개체 내에서 다른 모든 끝점과 인 클라우드 내에서 해당 끝점을 등록을 중지 하거나이 개체의 삭제 하기 전에 발생 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-156">If there are any other endpoint(s) within the registration object with which the peer host expected to communicate, registering those endpoints within the cloud must occur before stopping or disposing of this object.</span></span>  
  
 <span data-ttu-id="8da14-157">자세한 피어를 등록 하는 클라우드를 필요로 하는 경우는 <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> 메서드를 사용 하는 것이 좋습니다; 반환을 통해 운영 체제에는 클라우드에서 메모리를 더 이상 필요한 경우를 <xref:System.Net.PeerToPeer.PeerNameRegistration.Dispose%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8da14-157">If the cloud expects to register more peers, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> method is recommended; when the cloud no longer needs the memory, it should be returned to the operating system via the <xref:System.Net.PeerToPeer.PeerNameRegistration.Dispose%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="peerNameRegistration.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8da14-158">해당 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 개체에서 사용하는 리소스를 모두 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-158">Releases all resources used by the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="8da14-159">항상 삭제 하기 전에 Dispose 메서드를 호출 합니다 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-159">lways call the Dispose method before destroying the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="peerNameRegistration.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="8da14-160">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-160"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="8da14-161">관리되지 않는 리소스를 해제하고, <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 개체에서 사용하는 관리되는 리소스를 선택적으로 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-161">Releases the unmanaged resources and optionally releases the managed resources used by the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="8da14-162">에 대 한 마지막 참조를 해제 하기 전에 항상 Dispose 메서드를 호출 합니다 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-162">Always call the Dispose method before releasing the last reference to the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="EndPointCollection">
      <MemberSignature Language="C#" Value="public System.Net.IPEndPointCollection EndPointCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPEndPointCollection EndPointCollection" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndPointCollection As IPEndPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPEndPointCollection ^ EndPointCollection { System::Net::IPEndPointCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndPointCollection : System.Net.IPEndPointCollection" Usage="System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPointCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8da14-163">연결된 피어 이름이 등록되는 네트워크 엔드포인트 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-163">Gets the collection of network endpoints for which the associated peer name is registered.</span></span></summary>
        <value><span data-ttu-id="8da14-164">연결된 피어 이름이 등록되는 네트워크 엔드포인트를 포함하는 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-164">An <see cref="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection" /> object that contains the network endpoints for which the associated peer name is registered.</span></span> <span data-ttu-id="8da14-165">명시적으로 지정한 경우 이외에는 모든 속성의 기본값은 참조 형식에 대해 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-165">Unless explicitly specified, the default value for all properties is <see langword="null" /> for reference types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8da14-166">에 <xref:System.Net> 네임 스페이스는 <xref:System.Net.IPEndPoint> 네트워크 끝점 IP 주소와 포트 번호를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-166">In the <xref:System.Net> namespace, an <xref:System.Net.IPEndPoint> represents a network endpoint as an IP address and a port number.</span></span>  <span data-ttu-id="8da14-167">PNRP를 각 끝점에 대 한 IP 주소 및 포트 값을 제공 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-167">For PNRP, an IP address and port value must be provided for each endpoint.</span></span>  <span data-ttu-id="8da14-168">제공 될 수 있는 끝점의 최대 수는 10입니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-168">The maximum number of endpoints that can be provided is ten.</span></span> <span data-ttu-id="8da14-169">이 매개 변수가 자동 주소 선택 되 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-169">Automatic address selection is used when this parameter is `null`.</span></span>  
  
 <span data-ttu-id="8da14-170">등록 메서드에 등록 하려면 주소를 자동으로 선택 하 되, 경우 메서드가 있는 피어 이름이 등록 된 주소를 확인할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-170">If a registration method is used that automatically selects the addresses to register, there is no method to determine theaddresses for which the peer name was registered.</span></span>  <span data-ttu-id="8da14-171">즉,는 <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> 속성 선택한 주소를 반영 하도록 업데이트 되지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-171">That is, the <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property will not be updated to reflect the addresses selected.</span></span>  
  
 <span data-ttu-id="8da14-172">둘 이상의 노드에 대 한 피어 이름을 등록 될 때 각 <xref:System.Net.PeerToPeer.PeerNameRegistration> 고유한 및 <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> 속성 각 등록 인스턴스에 정의 된 것과 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-172">When a peer name is registered for more than one node, each <xref:System.Net.PeerToPeer.PeerNameRegistration> is distinct and the <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property defined on each registration instance will be different.</span></span> <span data-ttu-id="8da14-173">또한 경우는 <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> 둘 이상의에 등록 됩니다 <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>각 등록 고유 하 고 끝점의 컬렉션은 일반적으로 인스턴스마다 다를 수.</span><span class="sxs-lookup"><span data-stu-id="8da14-173">Also, when a <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> is registered into more than one <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>, each registration is distinct and the collection of endpoints will usually be different for each instance.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="8da14-174">이 피어와 통신할 끝점 목록을 다르게 저장 되는이 피어 이름이 알려져 있으면 끝점 목록을 같지는 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-174">The list of endpoints with which this peer will communicate is not the same as the list of endpoints by which this peer name is known, which is stored differently.</span></span></para></block>
        <altmember cref="T:System.Net.IPEndPointCollection" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="peerNameRegistration.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="8da14-175"><see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 개체와 연결된 serialize된 데이터를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-175">Holds the serialized data associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></param>
        <param name="context"><span data-ttu-id="8da14-176"><see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 개체와 연결된 serialize된 스트림의 대상을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-176">Contains destination for the serialized stream associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></param>
        <summary><span data-ttu-id="8da14-177"><see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 인스턴스를 serialize하는 데 필요한 데이터로 serialization 정보 개체를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-177">Populates a serialization information object with the data needed to serialize the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRegistered">
      <MemberSignature Language="C#" Value="public bool IsRegistered ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsRegistered() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered" />
      <MemberSignature Language="VB.NET" Value="Public Function IsRegistered () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsRegistered();" />
      <MemberSignature Language="F#" Value="member this.IsRegistered : unit -&gt; bool" Usage="peerNameRegistration.IsRegistered " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8da14-178"><see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 속성에 지정된 피어 이름이 호스트의 특정 <see cref="T:System.Net.PeerToPeer.Cloud" />에 등록되어 있는지 여부를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-178">Gets or sets whether the peer name specified in the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property is registered with a specific <see cref="T:System.Net.PeerToPeer.Cloud" /> on a host.</span></span></summary>
        <returns><span data-ttu-id="8da14-179"><see langword="true" />이면 피어 이름이 피어 호스트의 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />에 등록되어 있고,</span><span class="sxs-lookup"><span data-stu-id="8da14-179">If <see langword="true" />, the peer name is registered with a <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> for the peer host.</span></span> <span data-ttu-id="8da14-180"><see langword="false" />이면 <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />를 사용하여 등록 프로세스를 시작할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-180">If <see langword="false" />, then the registration process can be started with <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8da14-181">등록하려는 개체가 이미 삭제된 경우</span><span class="sxs-lookup"><span data-stu-id="8da14-181">An object that has been disposed already cannot be registered.</span></span></exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameResolver" />
      </Docs>
    </Member>
    <Member MemberName="PeerName">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerName PeerName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.PeerName PeerName" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      <MemberSignature Language="VB.NET" Value="Public Property PeerName As PeerName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::PeerName ^ PeerName { System::Net::PeerToPeer::PeerName ^ get(); void set(System::Net::PeerToPeer::PeerName ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PeerName : System.Net.PeerToPeer.PeerName with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8da14-182">피어 클라우드에 등록할 피어 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-182">Gets or sets the peer name to register with a peer cloud.</span></span></summary>
        <value><span data-ttu-id="8da14-183">이 <see cref="T:System.Net.PeerToPeer.PeerName" /> 개체와 연결된 값을 포함하는 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 형식의 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-183">An object of type <see cref="T:System.Net.PeerToPeer.PeerName" /> that contains values associated with this <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span> <span data-ttu-id="8da14-184">명시적으로 지정한 경우 이외에는 모든 속성의 기본값은 참조 형식에 대해 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-184">Unless explicitly specified, the default value for all properties is <see langword="null" /> for reference types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8da14-185">둘 이상의 노드에서;에 대 한 피어 이름을 등록할 수 있습니다. 각 <xref:System.Net.PeerToPeer.PeerNameRegistration> 인스턴스가 고유 합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-185">A peer name can be registered for more than one node; each <xref:System.Net.PeerToPeer.PeerNameRegistration> instance is distinct.</span></span> <span data-ttu-id="8da14-186">합니다 <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> 각 해당 연결 된 속성 <xref:System.Net.PeerToPeer.PeerName> 인스턴스 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-186">The <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property associated with each corresponding <xref:System.Net.PeerToPeer.PeerName> instance is different.</span></span> <span data-ttu-id="8da14-187">또한 노드;에 연결 된 둘 이상의 클라우드를 위해 피어 이름을 등록할 수는 이러한 등록 각각 구분 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-187">Also, it is possible to register a peer name for more than one cloud that the node is connected to; each of these registrations is distinct.</span></span> <span data-ttu-id="8da14-188">피어 이름을 <xref:System.Net.IPEndPointCollection> 인스턴스 각각 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-188">The peer name's <xref:System.Net.IPEndPointCollection> will be different in each of these instances.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)" />
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Port" />
      <MemberSignature Language="VB.NET" Value="Public Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Port : int with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8da14-189"><see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 개체에 등록되는 피어에서 사용하는 [TCP/IP](https://go.microsoft.com/fwlink?LinkID=98458) 포트 번호를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-189">Gets or sets the [TCP/IP](https://go.microsoft.com/fwlink?LinkID=98458) port number used by the peer being registered into the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></summary>
        <value><span data-ttu-id="8da14-190"><see cref="T:System.Net.IPEndPoint" />의 TCP 포트 번호를 나타내는 정수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-190">An integer value indicating the TCP port number of the <see cref="T:System.Net.IPEndPoint" />.</span></span> <span data-ttu-id="8da14-191">명시적으로 지정하지 않을 경우 이 속성의 기본값은 0입니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-191">Unless explicitly specified, the default value for this property is zero (0).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8da14-192">기본 포트는 사용 되는 <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> 메서드가 없는 끝점을 지정 하는 경우에 합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-192">The default port is used by the <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> method only when no endpoints are specified.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8da14-193">지정된 포트 값이 0보다 작은 경우.</span><span class="sxs-lookup"><span data-stu-id="8da14-193">The specified port value is less than zero.</span></span>  <span data-ttu-id="8da14-194">포트 번호는 0보다 크거나 같고 65,535(0xFFFF)보다 작아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-194">Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="peerNameRegistration.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8da14-195"><see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />을 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />에 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-195">Registers the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> into the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />.</span></span> <span data-ttu-id="8da14-196"><see cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />을 지정하지 않으면 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Port" /> 속성으로 지정된 포트 값과 함께 자동 주소 선택이 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-196">If no <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" /> is specified, automatic address selection is used with the port value specified by the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Port" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8da14-197">에 지정 된 피어 이름을 등록 합니다 <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> 모든 소스 주소를 사용 하 여 속성 및 <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> 생성자에 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-197">The method registers the peer name specified in the <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> property with all source addresses and the <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> specified in the constructor.</span></span> <span data-ttu-id="8da14-198">기본 포트는 끝점이 지정 된 경우에이 메서드에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-198">The default port is used by this method only when no endpoints are specified.</span></span>  
  
 <span data-ttu-id="8da14-199">경우는 <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> 속성은 `null`,이 메서드는에 지정 된 피어 이름을 등록를 <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> 사용 하 여 속성을 <xref:System.Net.PeerToPeer.Cloud.Available> 필드에 대 한 기본값을 초기화 하는 <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, 및 <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span><span class="sxs-lookup"><span data-stu-id="8da14-199">If the <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> property is `null`, this method registers the peer name specified in the <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> property using the <xref:System.Net.PeerToPeer.Cloud.Available> field, which initializes default values for the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span></span>  
  
 <span data-ttu-id="8da14-200">후는 <xref:System.Net.PeerToPeer.PeerNameRegistration> 시작 된 다음 개체에는 <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> 메서드는 중지 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-200">After a <xref:System.Net.PeerToPeer.PeerNameRegistration> object has been started, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> method is used to stop it.</span></span>  
  
 <span data-ttu-id="8da14-201">등록을 업데이트 하는 <xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A> 메서드를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-201">To update a registration, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A> method must be used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8da14-202">다음 코드 예제는 <xref:System.Net.PeerToPeer.PeerName> 하 고 지정 된 메타 데이터와 함께 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-202">The following code example creates a <xref:System.Net.PeerToPeer.PeerName> and registers it along with the metadata specified.</span></span>  
  
 [!code-csharp[NCLPNRPRegisterPeerName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPRegisterPeerName/CS/RegisterPeerName.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8da14-203"><see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 속성은 <see langword="null" />로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-203">The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property is set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8da14-204">이전에 이 개체에 Dispose()가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="8da14-204">This object had Dispose() called on it previously.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="8da14-205">-   지정된 <see cref="T:System.Net.PeerToPeer.PeerName" />이 이미 등록된 경우</span><span class="sxs-lookup"><span data-stu-id="8da14-205">-   The <see cref="T:System.Net.PeerToPeer.PeerName" /> specified has already been registered.</span></span> <span data-ttu-id="8da14-206"><see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> 메서드는 등록을 업데이트하는 데 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-206">The <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> method must be used to update a registration.</span></span>  
  
<span data-ttu-id="8da14-207">-   원격 피어가 지정된 <see cref="T:System.Net.PeerToPeer.PeerName" />에 대한 <see cref="P:System.Net.PeerToPeer.PeerName.Authority" />를 소유하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="8da14-207">-   The remote peer does not own the <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> for the <see cref="T:System.Net.PeerToPeer.PeerName" /> specified.</span></span>  
  
<span data-ttu-id="8da14-208">-   <see cref="T:System.Net.PeerToPeer.PeerName" /> 또는 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.Data" /> 둘 다 지정되지 않은 경우. 하나 이상을 제공해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-208">-   Either the <see cref="T:System.Net.PeerToPeer.PeerName" /> or the <see cref="P:System.Net.PeerToPeer.PeerNameRecord.Data" /> is not specified; at least one needs to be provided.</span></span>  
  
<span data-ttu-id="8da14-209">-   메시지 또는 데이터 요소가 유효하지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="8da14-209">-   The message or data elements are invalid.</span></span> <span data-ttu-id="8da14-210">또는 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />이 설정되어 있지 않고 데이터 blob 또는 <see cref="T:System.Net.IPEndPoint" />가 지정되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="8da14-210">Or, <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" /> is not set and no data blob or <see cref="T:System.Net.IPEndPoint" /> is specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="peerNameRegistration.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8da14-211">등록된 모든 클라우드에서 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 속성에 지정된 피어 이름을 등록 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-211">Unregisters the peer name specified in the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property from all the clouds in which it was registered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8da14-212">등록 프로세스 중지 된 후 등록 개체의 상태 기본 생성자가 생성 되 고 있는 직후 상태와입니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-212">After the registration process has been stopped, the registration object's state is equal to the state directly after being constructed by the default constructor.</span></span> <span data-ttu-id="8da14-213">이 상태에서는 모든 속성은 값이 없는으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-213">In this state, all of its properties are assumed to have no value.</span></span> <span data-ttu-id="8da14-214"><xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> 메서드를 사용 하 여 다시 시작 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-214">The <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> method may be used to restart it.</span></span>  
  
 <span data-ttu-id="8da14-215">것 같은 피어 이름 등록 개체가 여러 개 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-215">It is possible to have multiple registration objects for the same peer name.</span></span>  <span data-ttu-id="8da14-216">이러한 경우 피어 이름이 보안을 유지 하 고 경우 각 인스턴스에 다른 PNRP 클라우드에 등록을 나타내는 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-216">In such a case, if the peer name is secured, each instance will represent a registration in a different PNRP cloud.</span></span>  <span data-ttu-id="8da14-217">그러나 피어 이름이 보안 되지 않는 경우 해당 등록할 수 있습니다 클라우드에서 여러 번.</span><span class="sxs-lookup"><span data-stu-id="8da14-217">However, if the peer name is not secured, it can be registered in the same cloud multiple times.</span></span>  
  
 <span data-ttu-id="8da14-218">이 인스턴스가 이미 중지 된 경우이 메서드를 호출 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-218">If this instance is already stopped, calling this method has no effect.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8da14-219"><see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 속성이 아직 등록되지 않은 경우.</span><span class="sxs-lookup"><span data-stu-id="8da14-219">The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property has not yet been registered.</span></span> <span data-ttu-id="8da14-220"><see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 개체가 빈 생성자를 사용하여 생성될 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-220">This occurs when a <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object is constructed using the empty constructor.</span></span> <span data-ttu-id="8da14-221"><see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 속성은 <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />를 호출하기 전에 이 인스턴스로 채워져야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-221">The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property must be populated in this instance prior to calling <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8da14-222">이전에 이 개체에 Dispose()가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="8da14-222">This object had Dispose() called on it previously.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="8da14-223"><see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 인스턴스와 연결된 serialize된 개체를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-223">Holds the serialized data associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> instance.</span></span></param>
        <param name="context"><span data-ttu-id="8da14-224"><see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 인스턴스와 연결된 serialize된 스트림의 대상을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-224">Contains the destination for the serialized stream associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> instance.</span></span></param>
        <summary><span data-ttu-id="8da14-225"><see cref="T:System.Runtime.Serialization.ISerializable" /> 인터페이스를 구현하고 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 인스턴스를 직렬화하는 데 필요한 데이터를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-225">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and returns the data needed to serialize the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />
      <MemberSignature Language="VB.NET" Value="Public Sub Update ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; unit" Usage="peerNameRegistration.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8da14-226">등록된 노드에 대한 <see cref="T:System.Net.PeerToPeer.Cloud" />를 특정 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />으로 업데이트합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-226">Updates the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> for a node registered with a specific <see cref="T:System.Net.PeerToPeer.Cloud" />.</span></span> <span data-ttu-id="8da14-227">속성에 지정된 정보를 사용하여 업데이트가 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-227">Update is performed using the information specified in the properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8da14-228">이 클라우드에 등록 된 모든 정보 <xref:System.Net.PeerToPeer.PeerName> 호출 하기 전에 완전히 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-228">All information registered in cloud(s) for this <xref:System.Net.PeerToPeer.PeerName> prior to the call is completely discarded.</span></span>  <span data-ttu-id="8da14-229">기존 등록을 사용 하 여 새 데이터를 결합 되지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-229">The new data is not combined with the existing registration.</span></span>  <span data-ttu-id="8da14-230">업데이트는 <xref:System.Net.PeerToPeer.PeerNameRegistration>, 먼저이 인스턴스에 대 한 속성을 업데이트 하 고 다음이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-230">To update a <xref:System.Net.PeerToPeer.PeerNameRegistration>, first update the properties on this instance and then call this method.</span></span>  
  
 <span data-ttu-id="8da14-231">후는 <xref:System.Net.PeerToPeer.PeerNameRecord> 등록 되는 <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> 속성을 업데이트할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-231">After a <xref:System.Net.PeerToPeer.PeerNameRecord> is registered, the <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> property cannot be updated.</span></span>  <span data-ttu-id="8da14-232">레코드의 다른 모든 필드를 업데이트할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-232">All other fields in the record may be updated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8da14-233"><see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 속성은 <see langword="null" />로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-233">The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property is set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8da14-234">-   <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 속성이 아직 등록되지 않은 경우.</span><span class="sxs-lookup"><span data-stu-id="8da14-234">-   The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property has not yet been registered.</span></span> <span data-ttu-id="8da14-235"><see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 속성에 지정된 피어 이름이 하나 이상의 클라우드에 등록될 때까지 <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> 메서드를 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-235">The <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> method cannot be called until the peer name specified in the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property is registered in one or more clouds.</span></span>  
  
<span data-ttu-id="8da14-236">-   <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 속성에 지정된 피어 이름이 해당 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />가 등록된 이후에 변경된 경우</span><span class="sxs-lookup"><span data-stu-id="8da14-236">-   The peer name specified in the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property has changed since the corresponding <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> was registered.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="8da14-237">삭제된 개체를 등록할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8da14-237">An object that has been disposed cannot be registered.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8da14-238"><see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 속성이 <see langword="null" />로 설정된 경우</span><span class="sxs-lookup"><span data-stu-id="8da14-238">A <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> property is set to <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UseAutoEndPointSelection">
      <MemberSignature Language="C#" Value="public bool UseAutoEndPointSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseAutoEndPointSelection" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property UseAutoEndPointSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseAutoEndPointSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseAutoEndPointSelection : bool with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8da14-239">피어 메시 또는 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />를 탐색할 때 엔드포인트 자동 선택 방법을 사용할지 여부를 지정하는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-239">Gets or sets a value that specifies whether to use automatic endpoint selection when traversing a peer mesh or <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />.</span></span></summary>
        <value><span data-ttu-id="8da14-240">엔드포인트 자동 선택 방법을 사용하면 <see langword="true" />이고, 다른 방법을 사용하여 엔드포인트를 결정하면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-240"><see langword="true" /> if automatic endpoint selection is to be used; <see langword="false" /> if some other method will be used to determine an endpoint.</span></span> <span data-ttu-id="8da14-241">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-241">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8da14-242">끝점 자동 선택 사용 되는 경우 (이 속성이 `true`)의 시작 하기 전에 지정 된 끝점 정보가 없는 <xref:System.Net.PeerToPeer.PeerNameRegistration>, 시스템 개별 끝점을 선택 하 고 모든 연결 된 피어 이름 게시 사용할 수 있습니다 클라우드입니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-242">When auto endpoint selection is used (this property is set to `true`) with no endpoint information specified prior to the start of a <xref:System.Net.PeerToPeer.PeerNameRegistration>, the system chooses individual endpoints and publishes them with the associated peer name into all available clouds.</span></span>  <span data-ttu-id="8da14-243">자동 선택 0 선택 하는 포트를 지정 하지 않으면 경우는 <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-243">If the port is not specified, auto selection chooses zero as the <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>.</span></span>  
  
 <span data-ttu-id="8da14-244">로 설정 하면 `false`, 위에서 설명한 자동 선택 수행 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-244">When set to `false`, auto selection as described above is not performed.</span></span>  <span data-ttu-id="8da14-245">이 데이터 blob와 함께 피어 이름 게시 하는 등록 프로세스를 통해 (지정 된 대로 <xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A> 속성).</span><span class="sxs-lookup"><span data-stu-id="8da14-245">This enables the registration process to publish a peer name along with a data blob (as specified by the <xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A> property).</span></span> <span data-ttu-id="8da14-246">끝점 이름에 연결 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-246">No endpoints are associated with the name.</span></span>  
  
 <span data-ttu-id="8da14-247">주소를 확인 하려면 메서드가 없는 경우 등록 메서드는 자동으로 등록 하려면 주소를 선택 하 되는 <xref:System.Net.PeerToPeer.PeerName> 개체 등록 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-247">If a registration method is used that automatically selects the addresses to register, there is no method to determine what addresses for which the <xref:System.Net.PeerToPeer.PeerName> object was registered.</span></span>  <span data-ttu-id="8da14-248">즉,는 <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> 속성 선택한 주소를 반영 하도록 업데이트 되지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-248">That is, the <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property will not be updated to reflect the addresses selected.</span></span>  
  
 <span data-ttu-id="8da14-249">피어 이름 등록 시작 된 후이 속성을 업데이트 하는 것은 효과가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8da14-249">Updating this property after peer name registration has started has no effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>