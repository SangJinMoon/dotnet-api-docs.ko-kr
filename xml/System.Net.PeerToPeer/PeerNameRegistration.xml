<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PeerNameRegistration.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57cd8457b2e09ced1cfe602c70df106251aec2f71.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7cd8457b2e09ced1cfe602c70df106251aec2f71</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.PeerToPeer.PeerNameRegistration">
          <source>Registers a <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> in a <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> or set of clouds.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> 또는 클라우드 집합에 <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>을 등록합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameRegistration">
          <source>Registration creates (or updates) all the information that is associated with a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> in a peer cloud or clouds.</source>
          <target state="translated">등록 (만들거나 업데이트)와 연결 된 모든 정보는 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> 피어 클라우드 또는 클라우드에 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameRegistration">
          <source>It is possible to have multiple <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> objects for the same peer name.</source>
          <target state="translated">여러 개 있을 수는 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> 같은 피어 이름에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameRegistration">
          <source>In such a case, if the peer name is secured, each instance represents <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> in a different cloud.</source>
          <target state="translated">이 경우 피어 이름이 보호 되는 경우 각 인스턴스가 나타내는 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> 다른 클라우드에서 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameRegistration">
          <source>However, if the peer name is not secured, it can be registered in the same cloud multiple times, providing that each registration is from a different process.</source>
          <target state="translated">그러나 피어 이름이 보호 하지 않으면 것으로 등록할 수 있습니다 동일한 클라우드 여러 번 각 등록이 다른 프로세스에서 제공 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.Net.PeerToPeer.PeerNameRegistration">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor">
          <source>Initializes a new default instance of the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> class.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> 클래스의 새로운 기본 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor">
          <source>Returns a new default instance of type <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph>.</source>
          <target state="translated">형식의 새 기본 인스턴스를 반환 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor">
          <source>It does not perform peer name registration during construction.</source>
          <target state="translated">생성 되는 동안 피어 이름 등록을 수행 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor">
          <source>After instantiating an object with this constructor, the caller should populate the appropriate fields in the instance prior to calling <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A&gt;</ph>.</source>
          <target state="translated">호출자에 게가 생성자는 개체를 인스턴스화한 후 호출 하기 전에 개체의 적절 한 필드를 채울지 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> object to register.</source>
          <target state="translated">등록할 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>Integer value that specifies the port number to register.</source>
          <target state="translated">등록할 포트 번호를 지정하는 정수 값입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> class with the specified name and port number.</source>
          <target state="translated">지정된 이름 및 포트 번호를 사용하여 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>Calling this constructor creates an instance that will be used to register all source addresses (both IPv6and IPv4) and the provided port for all clouds in which the peer is currently participating.</source>
          <target state="translated">모든 소스 주소 (ipv6, IPv4)을 등록 하는 인스턴스를 만듭니다이 생성자를 호출 하 고 피어 현재 참여 하는 모든 클라우드에 대 한 제공 된 포트입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>If the object is constructed successfully, the specified <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A&gt;</ph> are populated.</source>
          <target state="translated">개체가 성공적으로 생성 될 경우 지정 된 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A&gt;</ph> 채워집니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>If the peer name is secured and was previously registered in a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph> the peer is currently participating in, an <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerToPeerException&gt;</ph> is thrown.</source>
          <target state="translated">피어 이름을 보안 처리 되며에 이전에 등록 하는 경우는 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph> 피어는 현재 참여 하 고는 <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerToPeerException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>This constructor only creates a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> instance; it does not perform the registration.</source>
          <target state="translated">이 생성자만 만듭니다.는 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> 인스턴스이거나 등록을 수행 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>After instantiating the registration object with this constructor and populating its fields, the application must call <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> to perform the actual registration.</source>
          <target state="translated">이 생성자를 사용 하 여 등록 개체를 인스턴스화한 후 해당 필드를 채우는, 응용 프로그램 호출 해야 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> 실제 등록 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter cannot be <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> 매개 변수는 <ph id="ph2">&lt;see langword="null" /&gt;</ph>일 수 없습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>The specified port number is less than zero.</source>
          <target state="translated">지정된 포트 번호가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</source>
          <target state="translated">포트 번호는 0보다 크거나 같고 65,535(0xFFFF)보다 작아야 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> specified has already been registered from this host.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>이 이 호스트에서 이미 등록된 경우</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>The remote peer does not own the <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerName.Authority" /&gt;</ph> for the supplied <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> object.</source>
          <target state="translated">원격 피어가 제공된 <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> 개체에 대한 <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerName.Authority" /&gt;</ph>를 소유하지 않는 경우</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Reference to the object that holds the data needed to deserialize this instance.</source>
          <target state="translated">이 인스턴스를 deserialize해야 하는 데이터를 보유하는 개체에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Context that provides the means for deserializing the data.</source>
          <target state="translated">데이터를 deserialize하는 수단을 제공하는 컨텍스트입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Also referred to as the source of the serialized data.</source>
          <target state="translated">Serialize된 데이터의 소스라고도 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new serializable <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object.</source>
          <target state="translated">새로운 serialize 가능 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> 개체를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> object to register.</source>
          <target state="translated">등록할 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>Integer value that specifies the port number to register.</source>
          <target state="translated">등록할 포트 번호를 지정하는 정수 값입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> in which to register the peer name.</source>
          <target state="translated">피어 이름을 등록할 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> class with the specified peer name, port number, and <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>.</source>
          <target state="translated">지정된 피어 이름, 포트 번호 및 <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>를 사용하여 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>Calling this constructor creates an instance that will be used to register all source addresses (both IPv6 and IPv4), the provided port, and the specified <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph>.</source>
          <target state="translated">이 생성자를 호출 하는 모든 소스 주소 (IPv6 및 IPv4 둘 다), 제공 된 포트 및 지정 된 등록 하는 데 사용할 인스턴스를 만듭니다 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>If the object is constructed successfully, the properties are populated with the specified <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph>.</source>
          <target state="translated">속성이 채워져 있는지 개체를 성공적으로 생성 하는 경우 지정 된 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>If the cloud parameter is <ph id="ph1">`null`</ph>, the name is registered using the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> shortcut, which initializes default values for the <ph id="ph3">&lt;xref:System.Net.PeerToPeer.Cloud.Name%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.PeerToPeer.Cloud.Scope%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Net.PeerToPeer.Cloud.ScopeId%2A&gt;</ph>.</source>
          <target state="translated">클라우드 매개 변수가 <ph id="ph1">`null`</ph>, 이름을 사용 하 여 등록 되는 <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> 기본값에 대 한 초기화 하는 바로 가기는 <ph id="ph3">&lt;xref:System.Net.PeerToPeer.Cloud.Name%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.PeerToPeer.Cloud.Scope%2A&gt;</ph>, 및 <ph id="ph5">&lt;xref:System.Net.PeerToPeer.Cloud.ScopeId%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>After instantiation, the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> method must be called to register the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph>.</source>
          <target state="translated">인스턴스화를 후의 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> 등록 하기 위해 메서드를 호출 해야 합니다는 <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter cannot be <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> 매개 변수는 <ph id="ph2">&lt;see langword="null" /&gt;</ph>일 수 없습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>The specified port number is less than zero.</source>
          <target state="translated">지정된 포트 번호가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</source>
          <target state="translated">포트 번호는 0보다 크거나 같고 65,535(0xFFFF)보다 작아야 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> specified has already been registered from this host.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>이 이 호스트에서 이미 등록된 경우</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>The remote peer does not own the <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerName.Authority" /&gt;</ph> for the supplied <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> object.</source>
          <target state="translated">원격 피어가 제공된 <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> 개체에 대한 <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerName.Authority" /&gt;</ph>를 소유하지 않는 경우</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud">
          <source>Gets or sets information in a <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /&gt;</ph> into which this <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /&gt;</ph> object will be registered.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /&gt;</ph> 개체를 등록할 <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /&gt;</ph>의 정보를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud">
          <source>An object of type <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> that specifies the peer cloud for which this registration is defined.</source>
          <target state="translated">이 등록이 정의되는 대상 피어 클라우드를 지정하는 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> 형식의 개체입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud">
          <source>This property is set to <ph id="ph1">&lt;see langword="null" /&gt;</ph> by default.</source>
          <target state="translated">기본적으로 이 속성은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Comment">
          <source>Gets or sets additional information about the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> object that will be registered with the <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>에 등록할 <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> 개체에 대한 추가 정보를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Comment">
          <source>The comment that contains additional information about the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> to associate with the <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>와 연결할 <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>에 대한 추가 정보를 포함하는 설명입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Comment">
          <source>This property is set to <ph id="ph1">&lt;see langword="null" /&gt;</ph> by default.</source>
          <target state="translated">기본적으로 이 속성은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Comment">
          <source>The specified string value is greater than 39 Unicode characters.</source>
          <target state="translated">지정된 문자열 값이 유니코드 문자 39자를 초과하는 경우</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Data">
          <source>Gets or sets application-defined binary data for the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> 개체에 대해 응용 프로그램에서 정의한 이진 데이터를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Data">
          <source>An array of bytes that holds the binary data associated with the entry.</source>
          <target state="translated">항목과 연관된 이진 데이터를 보유하는 바이트의 배열입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Data">
          <source>This property is set to <ph id="ph1">&lt;see langword="null" /&gt;</ph> by default.</source>
          <target state="translated">기본적으로 이 속성은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Data">
          <source>The maximum amount of <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Data%2A&gt;</ph> that can be supplied is 4,096 bytes.</source>
          <target state="translated">최대한의 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Data%2A&gt;</ph> 제공 될 수 있습니다는 4, 096 바이트입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Data">
          <source>The specified <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Data" /&gt;</ph> is greater than 4096 bytes.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Data" /&gt;</ph>가 4096바이트보다 큰 경우</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="T:System.Net.PeerToPeer.PeerNameRegistration">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> 개체가 사용하는 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameRegistration">
          <source>When a peer leaves a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph>, the cloud no longer requires the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> object associated with the peer.</source>
          <target state="translated">피어를 벗어날 때는 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph>, 클라우드 더 이상 필요 하지는 <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> 피어와 연결 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameRegistration">
          <source>Whether the registration object is stopped or disposed is dependent upon whether the cloud will reuse the object to register this peer or another peer.</source>
          <target state="translated">등록 개체를 중지 하거나 삭제 여부 클라우드가이 피어 또는 다른 피어를 등록 하는 개체에는 다시 사용 여부에 따라 달라 집니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameRegistration">
          <source>If there are any other endpoint(s) within the registration object with which the peer host expected to communicate, registering those endpoints within the cloud must occur before stopping or disposing of this object.</source>
          <target state="translated">피어 호스트 예상 된 통신 하는 등록 개체 내에서 다른 끝점과 인 클라우드 내에서 이러한 끝점을 등록을 중지 하거나이 개체를 삭제 하기 전에 발생 해야 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameRegistration">
          <source>If the cloud expects to register more peers, the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A&gt;</ph> method is recommended; when the cloud no longer needs the memory, it should be returned to the operating system via the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Dispose%2A&gt;</ph> method.</source>
          <target state="translated">더 많은 피어를 등록 하는 클라우드 예상 하는 경우는 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A&gt;</ph> 메서드는 것이 좋지만 반환을 통해 운영 체제에 해야 클라우드 더 이상 필요 없는 메모리를 하는 경우는 <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Dispose%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object.</source>
          <target state="translated">해당 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> 개체에서 사용하는 리소스를 모두 해제합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose">
          <source>lways call the Dispose method before destroying the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object.</source>
          <target state="translated">삭제 하기 전에 Dispose 메서드를 호출 하는 항상은 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <ph id="ph1">&lt;see langword="True" /&gt;</ph>로 설정하고, 관리되지 않는 리소스만 해제하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources and optionally releases the managed resources used by the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object.</source>
          <target state="translated">관리되지 않는 리소스를 해제하고, <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> 개체에서 사용하는 관리되는 리소스를 선택적으로 해제합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)">
          <source>Always call the Dispose method before releasing the last reference to the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object.</source>
          <target state="translated">에 대 한 마지막 참조를 해제 하기 전에 항상 Dispose 메서드를 호출는 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>Gets the collection of network endpoints for which the associated peer name is registered.</source>
          <target state="translated">연결된 피어 이름이 등록되는 네트워크 끝점 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>An <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection" /&gt;</ph> object that contains the network endpoints for which the associated peer name is registered.</source>
          <target state="translated">연결된 피어 이름이 등록되는 네트워크 끝점을 포함하는 <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>Unless explicitly specified, the default value for all properties is <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">명시적으로 지정한 경우 이외에는 모든 속성의 기본값은 참조 형식에 대해 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>In the <ph id="ph1">&lt;xref:System.Net&gt;</ph> namespace, an <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph> represents a network endpoint as an IP address and a port number.</source>
          <target state="translated">에 <ph id="ph1">&lt;xref:System.Net&gt;</ph> 네임 스페이스는 <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph> 네트워크 끝점을 IP 주소와 포트 번호를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>For PNRP, an IP address and port value must be provided for each endpoint.</source>
          <target state="translated">PNRP에서 각 끝점에 대 한 IP 주소 및 포트 값을 제공 해야 합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>The maximum number of endpoints that can be provided is ten.</source>
          <target state="translated">제공 될 수 있는 끝점의 최대 수를은 10입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>Automatic address selection is used when this parameter is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">이 매개 변수가 자동 주소 선택을 사용 <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>If a registration method is used that automatically selects the addresses to register, there is no method to determine theaddresses for which the peer name was registered.</source>
          <target state="translated">에서는 여러 주소를 등록 하는 등록 방법을 사용 하는 경우 등록 된 피어 이름이 있는 대 한 주소를 확인할 수 방법은 없습니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>That is, the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A&gt;</ph> property will not be updated to reflect the addresses selected.</source>
          <target state="translated">즉,는 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A&gt;</ph> 속성 선택한 주소를 반영 하도록 업데이트 되지 것입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>When a peer name is registered for more than one node, each <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> is distinct and the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A&gt;</ph> property defined on each registration instance will be different.</source>
          <target state="translated">둘 이상의 노드에 대 한 피어 이름을 등록 하는 경우 각 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> 고유한 및 <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A&gt;</ph> 각 등록 항목에 대해 정의 된 속성과 달라 집니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>Also, when a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A&gt;</ph> is registered into more than one <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph>, each registration is distinct and the collection of endpoints will usually be different for each instance.</source>
          <target state="translated">또한,는 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A&gt;</ph> 하나 이상에 등록 되어 <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph>각 등록은 고유 하 고 끝점의 컬렉션은 일반적으로 각 인스턴스에 대해 다를 수 있습니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>The list of endpoints with which this peer will communicate is not the same as the list of endpoints by which this peer name is known, which is stored differently.</source>
          <target state="translated">이 피어와 통신할 끝점 목록이 다르게 저장 되는 기준인이 피어 이름이 알려져 있으면 끝점 목록이 같지는 않습니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Holds the serialized data associated with the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> 개체와 연결된 serialize된 데이터를 포함합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Contains destination for the serialized stream associated with the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> 개체와 연결된 serialize된 스트림의 대상을 포함합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Populates a serialization information object with the data needed to serialize the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> 인스턴스를 serialize하는 데 필요한 데이터로 serialization 정보 개체를 채웁니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered">
          <source>Gets or sets whether the peer name specified in the <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> property is registered with a specific <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> on a host.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> 속성에 지정된 피어 이름이 호스트의 특정 <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>에 등록되어 있는지 여부를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the peer name is registered with a <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /&gt;</ph> for the peer host.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>이면 피어 이름이 피어 호스트의 <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /&gt;</ph>에 등록되어 있고,</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, then the registration process can be started with <ph id="ph2">&lt;see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph>이면 <ph id="ph2">&lt;see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" /&gt;</ph>를 사용하여 등록 프로세스를 시작할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered">
          <source>An object that has been disposed already cannot be registered.</source>
          <target state="translated">등록하려는 개체가 이미 삭제된 경우</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName">
          <source>Gets or sets the peer name to register with a peer cloud.</source>
          <target state="translated">피어 클라우드에 등록할 피어 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName">
          <source>An object of type <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> that contains values associated with this <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> 개체와 연결된 값을 포함하는 <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> 형식의 개체입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName">
          <source>Unless explicitly specified, the default value for all properties is <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">명시적으로 지정한 경우 이외에는 모든 속성의 기본값은 참조 형식에 대해 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName">
          <source>A peer name can be registered for more than one node; each <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> instance is distinct.</source>
          <target state="translated">둘 이상의 노드에서;에 대 한 피어 이름을 등록할 수 있습니다. 각 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> 인스턴스는 고유 합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName">
          <source>The <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A&gt;</ph> property associated with each corresponding <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> instance is different.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A&gt;</ph> 해당와 연결 된 속성 <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> 인스턴스는 다릅니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName">
          <source>Also, it is possible to register a peer name for more than one cloud that the node is connected to; each of these registrations is distinct.</source>
          <target state="translated">노드;에 연결 된 둘 이상의 클라우드가 대 한 피어 이름을 등록할 수는 또한 이러한 등록의 각각은 고유 합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName">
          <source>The peer name's <ph id="ph1">&lt;xref:System.Net.IPEndPointCollection&gt;</ph> will be different in each of these instances.</source>
          <target state="translated">피어 이름을 <ph id="ph1">&lt;xref:System.Net.IPEndPointCollection&gt;</ph> 의 각이 인스턴스에서에서 다르게 됩니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Port">
          <source>Gets or sets the <bpt id="p1">[</bpt>TCP/IP<ept id="p1">](http://go.microsoft.com/fwlink?LinkID=98458)</ept> port number used by the peer being registered into the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> 개체에 등록되는 피어에서 사용하는 <bpt id="p1">[</bpt>TCP/IP<ept id="p1">](http://go.microsoft.com/fwlink?LinkID=98458)</ept> 포트 번호를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Port">
          <source>An integer value indicating the TCP port number of the <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph>의 TCP 포트 번호를 나타내는 정수 값입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Port">
          <source>Unless explicitly specified, the default value for this property is zero (0).</source>
          <target state="translated">명시적으로 지정하지 않을 경우 이 속성의 기본값은 0입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Port">
          <source>The default port is used by the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> method only when no endpoints are specified.</source>
          <target state="translated">기본 포트에서 사용 되는 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> 메서드가 없는 끝점을 지정 하는 경우에 합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Port">
          <source>The specified port value is less than zero.</source>
          <target state="translated">지정된 포트 값이 0보다 작은 경우.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Port">
          <source>Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</source>
          <target state="translated">포트 번호는 0보다 크거나 같고 65,535(0xFFFF)보다 작아야 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>Registers the <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> into the <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph>을 <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /&gt;</ph>에 등록합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>If no <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" /&gt;</ph> is specified, automatic address selection is used with the port value specified by the <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Port" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" /&gt;</ph>을 지정하지 않으면 <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Port" /&gt;</ph> 속성으로 지정된 포트 값과 함께 자동 주소 선택이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>The method registers the peer name specified in the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A&gt;</ph> property with all source addresses and the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A&gt;</ph> specified in the constructor.</source>
          <target state="translated">에 지정 된 피어 이름과 등록 하는 메서드는 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A&gt;</ph> 모든 소스 주소를 사용 하 여 속성 및 <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A&gt;</ph> 생성자에 지정 합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>The default port is used by this method only when no endpoints are specified.</source>
          <target state="translated">기본 포트는 끝점이 지정 된 경우에이 메서드에서 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>If the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph> property is <ph id="ph2">`null`</ph>, this method registers the peer name specified in the <ph id="ph3">&lt;xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A&gt;</ph> property using the <ph id="ph4">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> field, which initializes default values for the <ph id="ph5">&lt;xref:System.Net.PeerToPeer.Cloud.Name%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Net.PeerToPeer.Cloud.Scope%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Net.PeerToPeer.Cloud.ScopeId%2A&gt;</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph> 속성은 <ph id="ph2">`null`</ph>,이 메서드를 등록에 지정 된 피어 이름과 <ph id="ph3">&lt;xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A&gt;</ph> 사용 하 여 속성은 <ph id="ph4">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> 기본값에 대 한 초기화 하는 필드는 <ph id="ph5">&lt;xref:System.Net.PeerToPeer.Cloud.Name%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Net.PeerToPeer.Cloud.Scope%2A&gt;</ph>, 및 <ph id="ph7">&lt;xref:System.Net.PeerToPeer.Cloud.ScopeId%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>After a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> object has been started, the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A&gt;</ph> method is used to stop it.</source>
          <target state="translated">후는 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> 시작 개체는 <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A&gt;</ph> 메서드 중지 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>To update a registration, the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A&gt;</ph> method must be used.</source>
          <target state="translated">등록을 업데이트 하는 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A&gt;</ph> 메서드를 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> and registers it along with the metadata specified.</source>
          <target state="translated">다음 코드 예제에서는 한 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> 하 고 지정 된 메타 데이터와 함께 등록 합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> property is set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> 속성은 <ph id="ph2">&lt;see langword="null" /&gt;</ph>로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>This object had Dispose() called on it previously.</source>
          <target state="translated">이전에 이 개체에 Dispose()가 호출된 경우</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> specified has already been registered.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>이 이미 등록된 경우</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>The <ph id="ph1">&lt;see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /&gt;</ph> method must be used to update a registration.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /&gt;</ph> 메서드는 등록을 업데이트하는 데 사용해야 합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>The remote peer does not own the <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerName.Authority" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> specified.</source>
          <target state="translated">원격 피어가 지정된 <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>에 대한 <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerName.Authority" /&gt;</ph>를 소유하지 않는 경우</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>Either the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> or the <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRecord.Data" /&gt;</ph> is not specified; at least one needs to be provided.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRecord.Data" /&gt;</ph> 둘 다 지정되지 않은 경우. 하나 이상을 제공해야 합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>The message or data elements are invalid.</source>
          <target state="translated">메시지 또는 데이터 요소가 유효하지 않은 경우</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>Or, <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" /&gt;</ph> is not set and no data blob or <ph id="ph2">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> is specified.</source>
          <target state="translated">또는 <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" /&gt;</ph>이 설정되어 있지 않고 데이터 blob 또는 <ph id="ph2">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph>가 지정되지 않은 경우</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>Unregisters the peer name specified in the <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> property from all the clouds in which it was registered.</source>
          <target state="translated">등록된 모든 클라우드에서 <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> 속성에 지정된 피어 이름을 등록 해제합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>After the registration process has been stopped, the registration object's state is equal to the state directly after being constructed by the default constructor.</source>
          <target state="translated">등록 프로세스 중지 된 후 기본 생성자가 만든 직후 등록 개체의 상태는 상태와 같습니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>In this state, all of its properties are assumed to have no value.</source>
          <target state="translated">이 상태에서는 모든 속성은 값이 없는으로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>The <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> method may be used to restart it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> 메서드 하 여 다시 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>It is possible to have multiple registration objects for the same peer name.</source>
          <target state="translated">같은 피어 이름에 대 한 등록 개체가 여러 개 있을 수는.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>In such a case, if the peer name is secured, each instance will represent a registration in a different PNRP cloud.</source>
          <target state="translated">이 경우 피어 이름이 보호 되는 경우 각 인스턴스 등록을 나타냅니다 다른 PNRP 클라우드에 있습니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>However, if the peer name is not secured, it can be registered in the same cloud multiple times.</source>
          <target state="translated">그러나 피어 이름이 보호 하지 않으면 것으로 등록할 수 있습니다 동일한 클라우드 여러 번입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>If this instance is already stopped, calling this method has no effect.</source>
          <target state="translated">이 인스턴스는 이미 중지 되는 경우이 메서드를 호출 효과가 없습니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> property has not yet been registered.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> 속성이 아직 등록되지 않은 경우.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>This occurs when a <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object is constructed using the empty constructor.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> 개체가 빈 생성자를 사용하여 생성될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> property must be populated in this instance prior to calling <ph id="ph2">&lt;see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> 속성은 <ph id="ph2">&lt;see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" /&gt;</ph>를 호출하기 전에 이 인스턴스로 채워져야 합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>This object had Dispose() called on it previously.</source>
          <target state="translated">이전에 이 개체에 Dispose()가 호출된 경우</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Holds the serialized data associated with the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> 인스턴스와 연결된 serialize된 개체를 포함합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Contains the destination for the serialized stream associated with the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> 인스턴스와 연결된 serialize된 스트림의 대상을 포함합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> interface and returns the data needed to serialize the <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> 인터페이스를 구현하고 <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> 인스턴스를 직렬화하는 데 필요한 데이터를 반환합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>Updates the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> for a node registered with a specific <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>.</source>
          <target state="translated">등록된 노드에 대한 <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>를 특정 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph>으로 업데이트합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>Update is performed using the information specified in the properties.</source>
          <target state="translated">속성에 지정된 정보를 사용하여 업데이트가 수행됩니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>All information registered in cloud(s) for this <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> prior to the call is completely discarded.</source>
          <target state="translated">이 클라우드에 등록 된 모든 정보 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> 호출 전에 완전히 삭제 됩니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>The new data is not combined with the existing registration.</source>
          <target state="translated">새 데이터는 기존 등록과 함께 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>To update a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph>, first update the properties on this instance and then call this method.</source>
          <target state="translated">업데이트 하는 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph>, 먼저이 인스턴스에 대 한 속성을 업데이트 한 다음이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>After a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRecord&gt;</ph> is registered, the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A&gt;</ph> property cannot be updated.</source>
          <target state="translated">이후에 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRecord&gt;</ph> 등록 되 면는 <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A&gt;</ph> 속성을 업데이트할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>All other fields in the record may be updated.</source>
          <target state="translated">레코드의 다른 모든 필드를 업데이트할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> property is set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> 속성은 <ph id="ph2">&lt;see langword="null" /&gt;</ph>로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> property has not yet been registered.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> 속성이 아직 등록되지 않은 경우.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>The <ph id="ph1">&lt;see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /&gt;</ph> method cannot be called until the peer name specified in the <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> property is registered in one or more clouds.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> 속성에 지정된 피어 이름이 하나 이상의 클라우드에 등록될 때까지 <ph id="ph1">&lt;see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /&gt;</ph> 메서드를 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>The peer name specified in the <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> property has changed since the corresponding <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph> was registered.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> 속성에 지정된 피어 이름이 해당 <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph>가 등록된 이후에 변경된 경우</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>An object that has been disposed cannot be registered.</source>
          <target state="translated">삭제된 개체를 등록할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph> property is set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph> 속성이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>로 설정된 경우</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
          <source>Gets or sets a value that specifies whether to use automatic endpoint selection when traversing a peer mesh or <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /&gt;</ph>.</source>
          <target state="translated">피어 메시 또는 <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /&gt;</ph>를 탐색할 때 끝점 자동 선택 방법을 사용할지 여부를 지정하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> if automatic endpoint selection is to be used; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if some other method will be used to determine an endpoint.</source>
          <target state="translated">끝점 자동 선택 방법을 사용하면 <ph id="ph1">&lt;see langword="True" /&gt;</ph>이고, 다른 방법을 사용하여 끝점을 결정하면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
          <source>The default value is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
          <source>When auto endpoint selection is used (this property is set to <ph id="ph1">`true`</ph>) with no endpoint information specified prior to the start of a <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph>, the system chooses individual endpoints and publishes them with the associated peer name into all available clouds.</source>
          <target state="translated">끝점 자동 선택 사용 되는 경우 (이 속성이 <ph id="ph1">`true`</ph>)를 시작 하기 전에 지정 된 끝점 정보 없이 <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph>, 시스템 개별 끝점을 선택 하 고 모든 열로 된 연결 된 피어 이름 게시 사용할 수 클라우드입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
          <source>If the port is not specified, auto selection chooses zero as the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A&gt;</ph>.</source>
          <target state="translated">포트가 지정 되지 않은 경우 선택 0으로 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
          <source>When set to <ph id="ph1">`false`</ph>, auto selection as described above is not performed.</source>
          <target state="translated">로 설정 하면 <ph id="ph1">`false`</ph>, 자동 선택 위에 설명 된 대로 수행 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
          <source>This enables the registration process to publish a peer name along with a data blob (as specified by the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A&gt;</ph> property).</source>
          <target state="translated">이 데이터 blob와 함께 피어 이름 게시 하는 등록 프로세스를 통해 (에 지정 된 대로 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A&gt;</ph> 속성).</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
          <source>No endpoints are associated with the name.</source>
          <target state="translated">끝점 이름에 연결 됩니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
          <source>If a registration method is used that automatically selects the addresses to register, there is no method to determine what addresses for which the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> object was registered.</source>
          <target state="translated">에서는 여러 주소를 등록 하는 등록 방법을 사용 하는 경우 메서드가 없습니다 주소를 확인 하는 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> 개체가 등록 된 합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
          <source>That is, the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A&gt;</ph> property will not be updated to reflect the addresses selected.</source>
          <target state="translated">즉,는 <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A&gt;</ph> 속성 선택한 주소를 반영 하도록 업데이트 되지 것입니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
          <source>Updating this property after peer name registration has started has no effect.</source>
          <target state="translated">피어 이름 등록 시작 된 후이 속성을 업데이트 하는 것은 효과가 없습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>