<Type Name="IAuthorizationPolicy" FullName="System.IdentityModel.Policy.IAuthorizationPolicy">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a0a779c93bfb018502bb7ce64dfb7281ef2370c4" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36559419" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IAuthorizationPolicy : System.IdentityModel.Policy.IAuthorizationComponent" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAuthorizationPolicy implements class System.IdentityModel.Policy.IAuthorizationComponent" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Policy.IAuthorizationPolicy" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAuthorizationPolicy&#xA;Implements IAuthorizationComponent" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAuthorizationPolicy : System::IdentityModel::Policy::IAuthorizationComponent" />
  <TypeSignature Language="F#" Value="type IAuthorizationPolicy = interface&#xA;    interface IAuthorizationComponent" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IdentityModel.Policy.IAuthorizationComponent</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="11288-101">클레임 집합이 주어지는 경우 사용자에게 권한을 부여하기 위한 규칙 집합을 정의합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="11288-101">Defines a set of rules for authorizing a user, given a set of claims.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11288-102">한 클레임 집합을 다른 클레임 집합에 추가하거나 매핑하기 위한 <xref:System.IdentityModel.Policy.IAuthorizationPolicy> 인터페이스를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="11288-102">Implement the <xref:System.IdentityModel.Policy.IAuthorizationPolicy> interface to add or map one set of claims to another.</span></span> <span data-ttu-id="11288-103">권한 부여 정책에서는 클레임 집합을 검사하고 현재 집합에 따라 추가 클레임을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="11288-103">An authorization policy examines a set of claims and adds additional claims based on the current set.</span></span> <span data-ttu-id="11288-104">예를 들어, 권한 부여 정책에서는 생년월일이 포함된 클레임을 평가한 다음 사용자가 21살이 넘었음을 주장하는 클레임을 추가하고 Over21 클레임을 <xref:System.IdentityModel.Policy.EvaluationContext>에 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="11288-104">For example, an authorization policy might evaluate a claim that contains the date of birth and add a claim that asserts that the user is over 21 years old and add an Over21 claim to the <xref:System.IdentityModel.Policy.EvaluationContext>.</span></span>  
  
 <span data-ttu-id="11288-105"><xref:System.IdentityModel.Policy.IAuthorizationPolicy> 인터페이스를 구현하는 클래스는 사용자에게 권한을 부여하지 않지만 <xref:System.ServiceModel.ServiceAuthorizationManager> 클래스를 통해 사용자에게 권한을 부여할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="11288-105">Classes that implement the <xref:System.IdentityModel.Policy.IAuthorizationPolicy> interface do not authorize users, but they enable the <xref:System.ServiceModel.ServiceAuthorizationManager> class to do so.</span></span> <span data-ttu-id="11288-106"><xref:System.ServiceModel.ServiceAuthorizationManager>는 적용되는 각 권한 부여 정책에 대해 <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="11288-106">The <xref:System.ServiceModel.ServiceAuthorizationManager> calls the <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method for each authorization policy in effect.</span></span> <span data-ttu-id="11288-107"><xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> 메서드는 현재 컨텍스트를 기반으로 사용자에 대해 추가 클레임을 추가해야 할지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="11288-107">The <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method determines whether additional claims should be added for the user, based on the current context.</span></span> <span data-ttu-id="11288-108">권한 부여 정책의 <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> 메서드는 다른 권한 부여 정책에서 <xref:System.IdentityModel.Policy.EvaluationContext>에 클레임을 추가할 때 여러 번 호출될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="11288-108">An authorization policy's <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method may be called multiple times, as claims are added to the <xref:System.IdentityModel.Policy.EvaluationContext> by other authorization policies.</span></span> <span data-ttu-id="11288-109">적용되는 모든 권한 부여 정책이 완료되면 <xref:System.ServiceModel.ServiceAuthorizationManager> 클래스는 최종 클레임 집합을 기반으로 권한 부여 결정을 내립니다.</span><span class="sxs-lookup"><span data-stu-id="11288-109">When all authorization policies in effect are done, the <xref:System.ServiceModel.ServiceAuthorizationManager> class makes authorization decisions based upon the final set of claims.</span></span> <span data-ttu-id="11288-110">그런 다음 <xref:System.ServiceModel.ServiceAuthorizationManager> 클래스는 이러한 권한 부여 결정을 반영하는 변경 불가능한 클레임 집합이 포함된 <xref:System.IdentityModel.Policy.AuthorizationContext>를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="11288-110">The <xref:System.ServiceModel.ServiceAuthorizationManager> class then creates an <xref:System.IdentityModel.Policy.AuthorizationContext> that contains an immutable set of claims that reflects these authorization decisions.</span></span>  
  
   
  
## Examples  
 [!code-csharp[C_IAuthorizationPolicy#1](~/samples/snippets/csharp/VS_Snippets_CFX/c_iauthorizationpolicy/cs/service.cs#1)]
 [!code-vb[C_IAuthorizationPolicy#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_iauthorizationpolicy/vb/myauthorizationpolicy.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public bool Evaluate (System.IdentityModel.Policy.EvaluationContext evaluationContext, ref object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Evaluate(class System.IdentityModel.Policy.EvaluationContext evaluationContext, object&amp; state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate(System.IdentityModel.Policy.EvaluationContext,System.Object@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Evaluate(System::IdentityModel::Policy::EvaluationContext ^ evaluationContext, System::Object ^ % state);" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : System.IdentityModel.Policy.EvaluationContext *  -&gt; bool" Usage="iAuthorizationPolicy.Evaluate (evaluationContext, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evaluationContext" Type="System.IdentityModel.Policy.EvaluationContext" />
        <Parameter Name="state" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="evaluationContext">
          <span data-ttu-id="11288-111">권한 부여 정책에서 평가하는 클레임이 포함된 <see cref="T:System.IdentityModel.Policy.EvaluationContext" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11288-111">An <see cref="T:System.IdentityModel.Policy.EvaluationContext" /> that contains the claim set that the authorization policy evaluates.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="11288-112">이 권한 부여 정책에 대한 사용자 지정 상태를 나타내는 참조로 전달되는 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11288-112">A <see cref="T:System.Object" />, passed by reference that represents the custom state for this authorization policy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="11288-113">사용자가 이 권한 부여 정책에 대한 요구 사항을 충족하는지 여부를 평가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11288-113">Evaluates whether a user meets the requirements for this authorization policy.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="11288-114">다른 권한 부여 정책에서 추가 클레임을 <paramref name="evaluationContext" />에 추가하는 경우 이 권한 부여 정책에 대한 <see cref="M:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate(System.IdentityModel.Policy.EvaluationContext,System.Object@)" /> 메서드를 호출해야 하면 <see langword="false" />이고, 그렇지 않으면 이 권한 부여 정책에서 추가 평가를 요구하지 않음을 나타내는 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11288-114">
              <see langword="false" /> if the <see cref="M:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate(System.IdentityModel.Policy.EvaluationContext,System.Object@)" /> method for this authorization policy must be called if additional claims are added by other authorization policies to <paramref name="evaluationContext" />; otherwise, <see langword="true" /> to state no additional evaluation is required by this authorization policy.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="11288-115"><xref:System.IdentityModel.Policy.IAuthorizationPolicy> 인터페이스의 구현자는 다른 스레드에서 <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> 메서드가 여러 번 호출될 것을 예상해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="11288-115">Implementers of the <xref:System.IdentityModel.Policy.IAuthorizationPolicy> interface should expect the <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method to be called multiple times by different threads.</span></span>  
  
 <span data-ttu-id="11288-116"><xref:System.IdentityModel.Policy.IAuthorizationPolicy> 인터페이스의 구현자는 `state` 매개 변수를 사용하여 <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> 메서드 호출 간의 상태를 추적할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="11288-116">Implementers of the <xref:System.IdentityModel.Policy.IAuthorizationPolicy> interface can use the `state` parameter to track state between calls to the <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method.</span></span> <span data-ttu-id="11288-117">상태 개체가 지정된 <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> 메서드 호출 내에서 설정되어 있으면 동일한 개체 인스턴스가 현재 평가 프로세스에서 이후의 모든 <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> 메서드 호출에 각각 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="11288-117">If a state object is set inside a given call to the <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method, the same object instance is passed to each and every subsequent call to the <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method in the current evaluation process.</span></span>  
  
   
  
## Examples  
 [!code-csharp[C_IAuthorizationPolicy#2](~/samples/snippets/csharp/VS_Snippets_CFX/c_iauthorizationpolicy/cs/service.cs#2)]
 [!code-vb[C_IAuthorizationPolicy#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_iauthorizationpolicy/vb/myauthorizationpolicy.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Issuer">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Claims.ClaimSet Issuer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Claims.ClaimSet Issuer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Policy.IAuthorizationPolicy.Issuer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Issuer As ClaimSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Claims::ClaimSet ^ Issuer { System::IdentityModel::Claims::ClaimSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Issuer : System.IdentityModel.Claims.ClaimSet" Usage="System.IdentityModel.Policy.IAuthorizationPolicy.Issuer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Claims.ClaimSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="11288-118">권한 부여 정책의 발급자를 나타내는 클레임 집합을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11288-118">Gets a claim set that represents the issuer of the authorization policy.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="11288-119">권한 부여 정책의 발급자를 나타내는 <see cref="T:System.IdentityModel.Claims.ClaimSet" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11288-119">A <see cref="T:System.IdentityModel.Claims.ClaimSet" /> that represents the issuer of the authorization policy.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>