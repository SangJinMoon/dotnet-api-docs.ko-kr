<Type Name="XmlWriteMode" FullName="System.Data.XmlWriteMode">
  <TypeSignature Language="C#" Value="public enum XmlWriteMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed XmlWriteMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Data.XmlWriteMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum XmlWriteMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class XmlWriteMode" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="f4f03-101"><see cref="T:System.Data.DataSet" />에서 XML 데이터와 관계형 스키마를 쓰는 방법을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="f4f03-101">Specifies how to write XML data and a relational schema from a <see cref="T:System.Data.DataSet" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4f03-102">이 열거형의 멤버를 사용 하 여 설정 하는 경우는 `WriteMode` 의 매개 변수는 <xref:System.Data.DataSet.WriteXml%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f4f03-102">Use the members of this enumeration when setting the `WriteMode` parameter of the <xref:System.Data.DataSet.WriteXml%2A> method.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DiffGram">
      <MemberSignature Language="C#" Value="DiffGram" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlWriteMode DiffGram = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlWriteMode.DiffGram" />
      <MemberSignature Language="VB.NET" Value="DiffGram" />
      <MemberSignature Language="C++ CLI" Value="DiffGram" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlWriteMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="f4f03-103">원래 및 현재 값을 포함하여 전체 <see cref="T:System.Data.DataSet" />을 DiffGram으로 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="f4f03-103">Writes the entire <see cref="T:System.Data.DataSet" /> as a DiffGram, including original and current values.</span></span> <span data-ttu-id="f4f03-104">변경된 값만 포함하는 DiffGram을 생성하려면 <see cref="M:System.Data.DataSet.GetChanges" />를 호출한 다음 반환된 <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" />에서 <see cref="T:System.Data.DataSet" />을 DiffGram으로 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="f4f03-104">To generate a DiffGram containing only changed values, call <see cref="M:System.Data.DataSet.GetChanges" />, and then call <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> as a DiffGram on the returned <see cref="T:System.Data.DataSet" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="IgnoreSchema">
      <MemberSignature Language="C#" Value="IgnoreSchema" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlWriteMode IgnoreSchema = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlWriteMode.IgnoreSchema" />
      <MemberSignature Language="VB.NET" Value="IgnoreSchema" />
      <MemberSignature Language="C++ CLI" Value="IgnoreSchema" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlWriteMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="f4f03-105"><see cref="T:System.Data.DataSet" />의 현재 내용을 XSD 스키마 없이 XML 데이터로 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f4f03-105">Writes the current contents of the <see cref="T:System.Data.DataSet" /> as XML data, without an XSD schema.</span></span> <span data-ttu-id="f4f03-106"><see cref="T:System.Data.DataSet" />에 로드된 데이터가 없으면 아무 것도 쓰여지지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f4f03-106">If no data is loaded into the <see cref="T:System.Data.DataSet" />, nothing is written.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="WriteSchema">
      <MemberSignature Language="C#" Value="WriteSchema" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlWriteMode WriteSchema = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlWriteMode.WriteSchema" />
      <MemberSignature Language="VB.NET" Value="WriteSchema" />
      <MemberSignature Language="C++ CLI" Value="WriteSchema" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlWriteMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="f4f03-107">관계형 구조를 인라인 XSD 스키마로 사용하여 <see cref="T:System.Data.DataSet" />의 현재 내용을 XML 데이터로 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f4f03-107">Writes the current contents of the <see cref="T:System.Data.DataSet" /> as XML data with the relational structure as inline XSD schema.</span></span> <span data-ttu-id="f4f03-108"><see cref="T:System.Data.DataSet" />에 데이터가 없는 스키마만 있는 경우 인라인 스키마만 쓰여집니다.</span><span class="sxs-lookup"><span data-stu-id="f4f03-108">If the <see cref="T:System.Data.DataSet" /> has only a schema with no data, only the inline schema is written.</span></span> <span data-ttu-id="f4f03-109"><see cref="T:System.Data.DataSet" />에 현재 스키마가 없으면 아무 것도 쓰여지지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f4f03-109">If the <see cref="T:System.Data.DataSet" /> does not have a current schema, nothing is written.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>