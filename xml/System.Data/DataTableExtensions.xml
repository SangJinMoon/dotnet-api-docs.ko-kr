<Type Name="DataTableExtensions" FullName="System.Data.DataTableExtensions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="da8e76321bbea3bd20575bb12f343508a3e536f7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30399297" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class DataTableExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DataTableExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataTableExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module DataTableExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTableExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="e16d9-101">
        <see cref="T:System.Data.DataTable" /> 클래스에 대한 확장 메서드를 정의합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e16d9-101">Defines the extension methods to the <see cref="T:System.Data.DataTable" /> class.</span>
      </span>
      <span data-ttu-id="e16d9-102">
        <see cref="T:System.Data.DataTableExtensions" />는 정적 클래스입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e16d9-102">
          <see cref="T:System.Data.DataTableExtensions" /> is a static class.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AsDataView">
      <MemberSignature Language="C#" Value="public static System.Data.DataView AsDataView (this System.Data.DataTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.DataView AsDataView(class System.Data.DataTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsDataView (table As DataTable) As DataView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::DataView ^ AsDataView(System::Data::DataTable ^ table);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" RefType="this" />
      </Parameters>
      <Docs>
        <param name="table">
          <span data-ttu-id="e16d9-103">LINQ 사용 <see cref="T:System.Data.DataTable" />를 만드는 데 사용할 소스 <see cref="T:System.Data.DataView" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e16d9-103">The source <see cref="T:System.Data.DataTable" /> from which the LINQ-enabled <see cref="T:System.Data.DataView" /> is created.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e16d9-104">LINQ 사용 <see cref="T:System.Data.DataView" /> 개체를 만들어 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e16d9-104">Creates and returns a LINQ-enabled <see cref="T:System.Data.DataView" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e16d9-105">LINQ 사용 <see cref="T:System.Data.DataView" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e16d9-105">A LINQ-enabled <see cref="T:System.Data.DataView" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e16d9-106"><xref:System.Data.DataView> 에 대 한 데이터 바인딩 시나리오를 지원 하 [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] 에서 만들 수 있습니다 형식화 되거나 형식화 되지 않은 <xref:System.Data.DataTable>, 해당 테이블의 기본 보기를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-106"><xref:System.Data.DataView> enables data-binding scenarios for [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] and can be created from a typed or untyped <xref:System.Data.DataTable>, providing a default view of that table.</span></span> <span data-ttu-id="e16d9-107"><xref:System.Data.DataView>에서 만들어진 <xref:System.Data.DataTable>에 필터링 및 정렬을 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-107">Filtering and sorting can be set on the <xref:System.Data.DataView> after it has been created from a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="e16d9-108"><xref:System.Data.DataView> 와 같은 UI 컨트롤에 바인딩된 다음은 <xref:System.Windows.Forms.DataGrid> 또는 <xref:System.Windows.Forms.DataGridView>, 단순 데이터 바인딩 모델을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-108">The <xref:System.Data.DataView> is then bound to a UI control, such as a <xref:System.Windows.Forms.DataGrid> or a <xref:System.Windows.Forms.DataGridView>, providing a simple data binding model.</span></span>  
  
 <span data-ttu-id="e16d9-109">자세한 내용 및 예제에 대 한 참조 [DataView 개체 만들기](~/docs/framework/data/adonet/creating-a-dataview-object-linq-to-dataset.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-109">For more information and examples, see [Creating a DataView Object](~/docs/framework/data/adonet/creating-a-dataview-object-linq-to-dataset.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e16d9-110">다음 예제에서는 한 <xref:System.Data.DataView> SalesOrderDetail 테이블에서 데이터 원본으로 설정 하는 데는 <xref:System.Windows.Forms.BindingSource> 역할에 대 한 프록시를 하는 개체는 <xref:System.Windows.Forms.DataGridView> 제어:</span><span class="sxs-lookup"><span data-stu-id="e16d9-110">The following example creates a <xref:System.Data.DataView> from the SalesOrderDetail table and sets it as the data source of a <xref:System.Windows.Forms.BindingSource> object, which acts as a proxy for a <xref:System.Windows.Forms.DataGridView> control:</span></span>  
  
 [!code-csharp[DP DataView Samples#CreateLDVFromTable](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DP DataView Samples/CS/Form1.cs#createldvfromtable)]
 [!code-vb[DP DataView Samples#CreateLDVFromTable](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DP DataView Samples/VB/Form1.vb#createldvfromtable)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsDataView&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.DataView AsDataView&lt;T&gt; (this System.Data.EnumerableRowCollection&lt;T&gt; source) where T : System.Data.DataRow;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.DataView AsDataView&lt;(class System.Data.DataRow) T&gt;(class System.Data.EnumerableRowCollection`1&lt;!!T&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsDataView(Of T As DataRow) (source As EnumerableRowCollection(Of T)) As DataView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::DataRow[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::DataView ^ AsDataView(System::Data::EnumerableRowCollection&lt;T&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataView</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.DataRow</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="e16d9-111">소스 시퀀스의 개체 형식(일반적으로 <see cref="T:System.Data.DataRow" />)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e16d9-111">The type of objects in the source sequence, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="e16d9-112">LINQ 사용 <see cref="T:System.Data.DataView" />를 만드는 데 사용할 소스 [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] 쿼리입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e16d9-112">The source [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] query from which the LINQ-enabled <see cref="T:System.Data.DataView" /> is created.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e16d9-113">[!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] 쿼리를 나타내는 LINQ 사용 <see cref="T:System.Data.DataView" /> 개체를 만들어 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e16d9-113">Creates and returns a LINQ-enabled <see cref="T:System.Data.DataView" /> object representing the [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] query.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e16d9-114">LINQ 사용 <see cref="T:System.Data.DataView" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e16d9-114">A LINQ-enabled <see cref="T:System.Data.DataView" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e16d9-115"><xref:System.Data.DataView> 에 대 한 데이터 바인딩 시나리오를 사용 하면 [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] 에서 만들 수는 [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] 쿼리 합니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-115"><xref:System.Data.DataView> enables data binding scenarios for [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] and can be created from a [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] query.</span></span> <span data-ttu-id="e16d9-116"><xref:System.Data.DataView> 쿼리 자체를 나타내며 쿼리에 대 한 뷰가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-116">The <xref:System.Data.DataView> represents the query itself, and is not a view on top of the query.</span></span> <span data-ttu-id="e16d9-117">새로 만든 <xref:System.Data.DataView> 필터링 및 정렬 정보에서 만든 쿼리를 유추 합니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-117">The newly created <xref:System.Data.DataView> infers the filtering and sorting information from the query it is created from.</span></span> <span data-ttu-id="e16d9-118"><xref:System.Data.DataView> 와 같은 UI 컨트롤에 바인딩된 다음은 <xref:System.Windows.Forms.DataGrid> 또는 <xref:System.Windows.Forms.DataGridView>, 단순 데이터 바인딩 모델을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-118">The <xref:System.Data.DataView> is then bound to a UI control, such as a <xref:System.Windows.Forms.DataGrid> or a <xref:System.Windows.Forms.DataGridView>, providing a simple data-binding model.</span></span>  
  
 <span data-ttu-id="e16d9-119">매개 변수 `T` 입력된 매개 변수의 `source` 형식일 수만 있습니다 <xref:System.Data.DataRow> 에서 파생 된 유형 또는 <xref:System.Data.DataRow>합니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-119">The parameter `T` of the input parameter `source` can only be of type <xref:System.Data.DataRow> or a type derived from <xref:System.Data.DataRow>.</span></span>  
  
 <span data-ttu-id="e16d9-120">다음 쿼리 연산자만 사용할 수를 만드는 데 사용 하는 쿼리에서 <xref:System.Data.DataView>:</span><span class="sxs-lookup"><span data-stu-id="e16d9-120">The following query operators, only, are supported in a query used to create <xref:System.Data.DataView>:</span></span>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.Cast%2A>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.OrderByDescending%2A>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.Select%2A>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.ThenBy%2A>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.ThenByDescending%2A>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.Where%2A>  
  
 <span data-ttu-id="e16d9-121">자세한 내용 및 예제에 대 한 참조 [DataView 개체 만들기](~/docs/framework/data/adonet/creating-a-dataview-object-linq-to-dataset.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-121">For more information and examples, see [Creating a DataView Object](~/docs/framework/data/adonet/creating-a-dataview-object-linq-to-dataset.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e16d9-122">다음 예제에서는 한 <xref:System.Data.DataView> 온라인 주문 합계로 정렬 합니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-122">The following example creates a <xref:System.Data.DataView> of online orders ordered by total due:</span></span>  
  
 [!code-csharp[DP DataView Samples#CreateLDVFromQuery1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DP DataView Samples/CS/Form1.cs#createldvfromquery1)]
 [!code-vb[DP DataView Samples#CreateLDVFromQuery1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DP DataView Samples/VB/Form1.vb#createldvfromquery1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsEnumerable">
      <MemberSignature Language="C#" Value="public static System.Data.EnumerableRowCollection&lt;System.Data.DataRow&gt; AsEnumerable (this System.Data.DataTable source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.EnumerableRowCollection`1&lt;class System.Data.DataRow&gt; AsEnumerable(class System.Data.DataTable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsEnumerable (source As DataTable) As EnumerableRowCollection(Of DataRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::EnumerableRowCollection&lt;System::Data::DataRow ^&gt; ^ AsEnumerable(System::Data::DataTable ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EnumerableRowCollection&lt;System.Data.DataRow&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.DataTable" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="e16d9-123">열거 가능하게 만들 소스 <see cref="T:System.Data.DataTable" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e16d9-123">The source <see cref="T:System.Data.DataTable" /> to make enumerable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e16d9-124">
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> 개체를 반환하며, 제네릭 매개 변수 <paramref name="T" />는 <see cref="T:System.Data.DataRow" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e16d9-124">Returns an <see cref="T:System.Collections.Generic.IEnumerable`1" /> object, where the generic parameter <paramref name="T" /> is <see cref="T:System.Data.DataRow" />.</span>
          </span>
          <span data-ttu-id="e16d9-125">이 개체는 [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] 식 또는 메서드 쿼리에 사용될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e16d9-125">This object can be used in a [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] expression or method query.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e16d9-126">
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> 개체이며, 제네릭 매개 변수 <paramref name="T" />는 <see cref="T:System.Data.DataRow" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e16d9-126">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> object, where the generic parameter <paramref name="T" /> is <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)]<span data-ttu-id="e16d9-127"> 쿼리 작업을 구현 하는 데이터 원본에는 <xref:System.Collections.Generic.IEnumerable%601> 인터페이스 또는 <xref:System.Linq.IQueryable> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-127"> queries work on data sources that implement the <xref:System.Collections.Generic.IEnumerable%601> interface or the <xref:System.Linq.IQueryable> interface.</span></span>  <span data-ttu-id="e16d9-128"><xref:System.Data.DataTable> 클래스를 호출 해야 하므로 두 인터페이스 중 하나를 구현 하지 않습니다는 <xref:System.Data.DataTableExtensions.AsEnumerable%2A> 메서드를 사용 하는 <xref:System.Data.DataTable> 의 원본으로는 `From` 절은 [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] 쿼리 합니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-128">The <xref:System.Data.DataTable> class does not implement either interface, so you must call the <xref:System.Data.DataTableExtensions.AsEnumerable%2A> method to use the <xref:System.Data.DataTable> as a source in the `From` clause of a [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] query.</span></span> <span data-ttu-id="e16d9-129">가져올 수도 있습니다 사용자 지정, 도메인 특정 연산자와 같은 <xref:System.Data.DataTableExtensions.CopyToDataTable%2A>를 반환 하 여 프로그램 <xref:System.Collections.Generic.IEnumerable%601> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-129">You can also obtain custom, domain-specific operators, such as <xref:System.Data.DataTableExtensions.CopyToDataTable%2A>, by returning an <xref:System.Collections.Generic.IEnumerable%601> object.</span></span>  
  
 <span data-ttu-id="e16d9-130">반환 되는 열거 가능한 개체는 <xref:System.Data.DataTableExtensions.AsEnumerable%2A> 메서드에 영구적으로 바인딩된는 <xref:System.Data.DataTable> 생성 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-130">The enumerable object returned by the <xref:System.Data.DataTableExtensions.AsEnumerable%2A> method is permanently bound to the <xref:System.Data.DataTable> that produced it.</span></span> <span data-ttu-id="e16d9-131">여러 번 호출 된 <xref:System.Data.DataTableExtensions.AsEnumerable%2A> 메서드는 여러 개 반환 독립적인 쿼리 가능 개체가 모든 소스에 바인딩된 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-131">Multiple calls to the <xref:System.Data.DataTableExtensions.AsEnumerable%2A> method will return multiple, independent queryable objects that are all bound to the source <xref:System.Data.DataTable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e16d9-132">다음 샘플에는 `DisplayProducts` 메서드 라는 DataColumn를 포함 하는 DataTable 수신 `ProductName`, 추출는 `ProductName` 값을 다음 값을 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-132">In the following sample, the `DisplayProducts` method receives a DataTable that contains a DataColumn named `ProductName`, extracts the `ProductName` values and then prints the values.</span></span>  
  
 [!code-csharp[system.data.DataTableExtensions.AsEnumerable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.data.datatableextensions.asenumerable/cs/source.cs#1)]
 [!code-vb[system.data.DataTableExtensions.AsEnumerable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.data.datatableextensions.asenumerable/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e16d9-133">소스 <see cref="T:System.Data.DataTable" />이 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="e16d9-133">The source <see cref="T:System.Data.DataTable" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyToDataTable&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e16d9-134">지정된 입력 <see cref="T:System.Data.DataTable" /> 개체를 사용하여 <see cref="T:System.Data.DataRow" /> 개체의 복사본이 들어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e16d9-134">Returns a <see cref="T:System.Data.DataTable" /> that contains copies of the <see cref="T:System.Data.DataRow" /> objects, given an input <see cref="T:System.Collections.Generic.IEnumerable`1" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyToDataTable&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.DataTable CopyToDataTable&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; source) where T : System.Data.DataRow;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.DataTable CopyToDataTable&lt;(class System.Data.DataRow) T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CopyToDataTable(Of T As DataRow) (source As IEnumerable(Of T)) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::DataRow[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::DataTable ^ CopyToDataTable(System::Collections::Generic::IEnumerable&lt;T&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.DataRow</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="e16d9-135">소스 시퀀스의 개체 형식(일반적으로 <see cref="T:System.Data.DataRow" />)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e16d9-135">The type of objects in the source sequence, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="e16d9-136">소스 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 시퀀스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e16d9-136">The source <see cref="T:System.Collections.Generic.IEnumerable`1" /> sequence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e16d9-137">제네릭 매개 변수 <paramref name="T" />가 <see cref="T:System.Data.DataTable" />인 지정된 입력 <see cref="T:System.Data.DataRow" /> 개체를 사용하여 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 개체의 복사본이 들어 있는 <see cref="T:System.Data.DataRow" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e16d9-137">Returns a <see cref="T:System.Data.DataTable" /> that contains copies of the <see cref="T:System.Data.DataRow" /> objects, given an input <see cref="T:System.Collections.Generic.IEnumerable`1" /> object where the generic parameter <paramref name="T" /> is <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e16d9-138">
            <see cref="T:System.Data.DataTable" /> 개체 형식의 입력 시퀀스가 들어 있는 <see cref="T:System.Data.DataRow" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e16d9-138">A <see cref="T:System.Data.DataTable" /> that contains the input sequence as the type of <see cref="T:System.Data.DataRow" /> objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e16d9-139">매개 변수 `T` 입력된 매개 변수의 `source` 형식일 수만 있습니다 <xref:System.Data.DataRow> 에서 파생 된 유형 또는 <xref:System.Data.DataRow>합니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-139">The parameter `T` of the input parameter `source` can only be of type <xref:System.Data.DataRow> or a type derived from <xref:System.Data.DataRow>.</span></span>  
  
 <span data-ttu-id="e16d9-140">입력된 시퀀스 하나일 수 있습니다 <xref:System.Collections.Generic.IEnumerable%601> 를 통해 원본, 쿼리 또는 쿼리 뿐만 아니라는 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-140">The input sequence can be any <xref:System.Collections.Generic.IEnumerable%601> source, not only a query or a query over a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="e16d9-141">클라이언트 컴퓨터를 소스 시퀀스 쿼리인 경우이 연산자를 호출 합니다 강제로 즉시 실행을 참고 합니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-141">Note that if the source sequence is a query, calling this operator will force immediate execution.</span></span> <span data-ttu-id="e16d9-142">소스 시퀀스를 열거 하는 경우에 예외가 throw 될 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-142">Enumerating the source sequence can also cause exceptions to be thrown.</span></span>  
  
 <span data-ttu-id="e16d9-143">첫 번째 스키마를 기반으로 하는 대상 테이블의 스키마 <xref:System.Data.DataRow> 소스 시퀀스의 행입니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-143">The schema of the destination table is based on the schema of the first <xref:System.Data.DataRow> row in the source sequence.</span></span> <span data-ttu-id="e16d9-144">테이블 메타 데이터에서 추출 되는 <xref:System.Data.DataRow> 메타 데이터와 테이블의 열 값에서 값은 <xref:System.Data.DataRow>합니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-144">The table metadata is extracted from the <xref:System.Data.DataRow> metadata and the table values from the column values of the <xref:System.Data.DataRow>.</span></span> <span data-ttu-id="e16d9-145">형식화 된 <xref:System.Data.DataTable>, 형식은 유지 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-145">For a typed <xref:System.Data.DataTable>, types are not preserved.</span></span> <span data-ttu-id="e16d9-146">데이터 및 스키마가 전송 되 면 되지만 결과 출력 테이블의 행 수의 형식화 된 <xref:System.Data.DataRow> 유형입니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-146">The data and schema are transferred, but the resulting rows of the output table will not be of the typed <xref:System.Data.DataRow> type.</span></span> <span data-ttu-id="e16d9-147"><xref:System.Data.DataRow.RowState%2A> 및 <xref:System.Data.DataRow.RowError%2A> 속성 소스에서 복사 하는 동안 보존 되지 않습니다 <xref:System.Data.DataRow> 반환 된 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-147">The <xref:System.Data.DataRow.RowState%2A> and <xref:System.Data.DataRow.RowError%2A> properties are not preserved during the copy from the source <xref:System.Data.DataRow> to the returned <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="e16d9-148">경우는 **null** 참조 또는 nullable 형식 값이 **null** 소스에 <xref:System.Data.DataRow>,이 메서드는 대상에 값 대신 <xref:System.Data.DataTable> 값이 <xref:System.DBNull.Value>합니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-148">When a **null** reference or nullable type with a value of **null** is found in a source <xref:System.Data.DataRow>, this method replaces the value in the destination <xref:System.Data.DataTable> with a value of <xref:System.DBNull.Value>.</span></span>  
  
 <span data-ttu-id="e16d9-149">메서드에 의해 반환 되는 생성 된 테이블은 기본 테이블 이름을 가집니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-149">The generated table returned by the method has the default table name.</span></span> <span data-ttu-id="e16d9-150">이름을 지정 하는 경우는 <xref:System.Data.DataTable>에 연결는 <xref:System.Data.DataSet>, 하거나 다른 수행 <xref:System.Data.DataTable> 특정 작업 후 수행 해야 하므로 테이블이 만들어져 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-150">If you want to name the <xref:System.Data.DataTable>, attach it to a <xref:System.Data.DataSet>, or perform any other <xref:System.Data.DataTable> specific operation, you must do so after the table is created and returned.</span></span>  
  
 <span data-ttu-id="e16d9-151">자세한 내용은 참조 [쿼리는에서 DataTable 만들기](~/docs/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-151">For more information, see [Creating a DataTable From a Query](~/docs/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e16d9-152">다음 예제에서는 2001 년 8 월 8 일 이후 주문에 대 한 SalesOrderHeader 테이블을 쿼리하여 사용 하는 <xref:System.Data.DataTableExtensions.CopyToDataTable%2A> 만드는 메서드를 한 <xref:System.Data.DataTable> 해당 쿼리에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-152">The following example queries the SalesOrderHeader table for orders after August 8, 2001, and uses the <xref:System.Data.DataTableExtensions.CopyToDataTable%2A> method to create a <xref:System.Data.DataTable> from that query.</span></span> <span data-ttu-id="e16d9-153">그런 다음 <xref:System.Data.DataTable>이 <xref:System.Windows.Forms.BindingSource>의 프록시 역할을 수행하는 <xref:System.Windows.Forms.DataGridView>에 바인딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-153">The <xref:System.Data.DataTable> is then bound to a <xref:System.Windows.Forms.BindingSource>, which acts as proxy for a <xref:System.Windows.Forms.DataGridView>.</span></span>  
  
 [!code-csharp[DP LINQ to DataSet Examples#CopyToDataTable1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DP LINQ to DataSet Examples/CS/Program.cs#copytodatatable1)]
 [!code-vb[DP LINQ to DataSet Examples#CopyToDataTable1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DP LINQ to DataSet Examples/VB/Module1.vb#copytodatatable1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e16d9-154">소스 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 시퀀스가 <see langword="null" />이고 새 테이블을 만들 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="e16d9-154">The source <see cref="T:System.Collections.Generic.IEnumerable`1" /> sequence is <see langword="null" /> and a new table cannot be created.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e16d9-155">소스 시퀀스의 <see cref="T:System.Data.DataRow" /> 상태가 <see cref="F:System.Data.DataRowState.Deleted" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="e16d9-155">A <see cref="T:System.Data.DataRow" /> in the source sequence has a state of <see cref="F:System.Data.DataRowState.Deleted" />.</span>
          </span>
          <span data-ttu-id="e16d9-156">소스 시퀀스에 <see cref="T:System.Data.DataRow" /> 개체가 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="e16d9-156">The source sequence does not contain any <see cref="T:System.Data.DataRow" /> objects.</span>
          </span>
          <span data-ttu-id="e16d9-157">소스 시퀀스의 <see cref="T:System.Data.DataRow" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="e16d9-157">A <see cref="T:System.Data.DataRow" /> in the source sequence is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyToDataTable&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void CopyToDataTable&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; source, System.Data.DataTable table, System.Data.LoadOption options) where T : System.Data.DataRow;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyToDataTable&lt;(class System.Data.DataRow) T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; source, class System.Data.DataTable table, valuetype System.Data.LoadOption options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CopyToDataTable(Of T As DataRow) (source As IEnumerable(Of T), table As DataTable, options As LoadOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::DataRow[System::Runtime::CompilerServices::Extension]&#xA; static void CopyToDataTable(System::Collections::Generic::IEnumerable&lt;T&gt; ^ source, System::Data::DataTable ^ table, System::Data::LoadOption options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.DataRow</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
        <Parameter Name="table" Type="System.Data.DataTable" />
        <Parameter Name="options" Type="System.Data.LoadOption" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="e16d9-158">소스 시퀀스의 개체 형식(일반적으로 <see cref="T:System.Data.DataRow" />)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e16d9-158">The type of objects in the source sequence, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="e16d9-159">소스 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 시퀀스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e16d9-159">The source <see cref="T:System.Collections.Generic.IEnumerable`1" /> sequence.</span>
          </span>
        </param>
        <param name="table">
          <span data-ttu-id="e16d9-160">대상 <see cref="T:System.Data.DataTable" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e16d9-160">The destination <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="e16d9-161">
            <see cref="T:System.Data.LoadOption" /> 로드 옵션을 지정하는 <see cref="T:System.Data.DataTable" /> 열거형입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e16d9-161">A <see cref="T:System.Data.LoadOption" /> enumeration that specifies the <see cref="T:System.Data.DataTable" /> load options.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e16d9-162">제네릭 매개 변수 <paramref name="T" />가 <see cref="T:System.Data.DataRow" />인 지정된 입력 <see cref="T:System.Data.DataTable" /> 개체를 사용하여 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 개체를 지정된 <see cref="T:System.Data.DataRow" />에 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e16d9-162">Copies <see cref="T:System.Data.DataRow" /> objects to the specified <see cref="T:System.Data.DataTable" />, given an input <see cref="T:System.Collections.Generic.IEnumerable`1" /> object where the generic parameter <paramref name="T" /> is <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e16d9-163">매개 변수 `T` 입력된 매개 변수의 `source` 형식일 수만 있습니다 <xref:System.Data.DataRow>에서 파생 된 유형 또는 <xref:System.Data.DataRow>합니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-163">The parameter `T` of the input parameter `source` can only be of type <xref:System.Data.DataRow>, or a type derived from <xref:System.Data.DataRow>.</span></span>  
  
 <span data-ttu-id="e16d9-164">입력된 시퀀스 하나일 수 있습니다 <xref:System.Collections.Generic.IEnumerable%601> 소스에 쿼리 뿐만 아니라 통해는 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-164">The input sequence can be any <xref:System.Collections.Generic.IEnumerable%601> source, not only a query over a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="e16d9-165">클라이언트 컴퓨터를 소스 시퀀스 쿼리인 경우이 연산자를 호출 합니다 강제로 즉시 실행을 참고 합니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-165">Note that if the source sequence is a query, calling this operator will force immediate execution.</span></span> <span data-ttu-id="e16d9-166">소스 시퀀스를 열거 하는 경우에 예외가 throw 될 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-166">Enumerating the source sequence can also cause exceptions to be thrown.</span></span>  
  
 <span data-ttu-id="e16d9-167">첫 번째 스키마를 기반으로 하는 대상 테이블의 스키마 <xref:System.Data.DataRow> 소스 시퀀스의 행입니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-167">The schema of the destination table is based on the schema of the first <xref:System.Data.DataRow> row in the source sequence.</span></span> <span data-ttu-id="e16d9-168">테이블 메타 데이터에서 추출 되는 <xref:System.Data.DataRow> 메타 데이터와 테이블의 열 값에서 값은 <xref:System.Data.DataRow>합니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-168">The table metadata is extracted from the <xref:System.Data.DataRow> metadata and the table values from the column values of the <xref:System.Data.DataRow>.</span></span> <span data-ttu-id="e16d9-169">형식화 된 <xref:System.Data.DataTable>, 형식은 유지 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-169">For a typed <xref:System.Data.DataTable>, types are not preserved.</span></span> <span data-ttu-id="e16d9-170">데이터 및 스키마가 전송 되 면 되지만 결과 출력 테이블의 행 수의 형식화 된 <xref:System.Data.DataRow> 유형입니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-170">The data and schema are transferred, but the resulting rows of the output table will not be of the typed <xref:System.Data.DataRow> type.</span></span> <span data-ttu-id="e16d9-171"><xref:System.Data.DataRow.RowState%2A> 및 <xref:System.Data.DataRow.RowError%2A> 속성 소스에서 복사 하는 동안 보존 되지 않습니다 <xref:System.Data.DataRow> 반환 된 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-171">The <xref:System.Data.DataRow.RowState%2A> and <xref:System.Data.DataRow.RowError%2A> properties are not preserved during the copy from the source <xref:System.Data.DataRow> to the returned <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="e16d9-172">경우는 **null** 참조 또는 nullable 형식 값이 **null** 소스에 <xref:System.Data.DataRow>,이 메서드는 대상에 값 대신 <xref:System.Data.DataTable> 값이 <xref:System.DBNull.Value>합니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-172">When a **null** reference or nullable type with a value of **null** is found in a source <xref:System.Data.DataRow>, this method replaces the value in the destination <xref:System.Data.DataTable> with a value of <xref:System.DBNull.Value>.</span></span>  
  
 <span data-ttu-id="e16d9-173">메서드에 의해 반환 되는 생성 된 테이블은 기본 테이블 이름을 가집니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-173">The generated table returned by the method has the default table name.</span></span> <span data-ttu-id="e16d9-174">이름을 지정 하는 경우는 <xref:System.Data.DataTable>에 연결는 <xref:System.Data.DataSet>, 하거나 다른 수행 <xref:System.Data.DataTable> 특정 작업 후 수행 해야 하므로 테이블이 만들어져 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-174">If you want to name the <xref:System.Data.DataTable>, attach it to a <xref:System.Data.DataSet>, or perform any other <xref:System.Data.DataTable> specific operation, you must do so after the table is created and returned.</span></span>  
  
 <span data-ttu-id="e16d9-175">자세한 내용은 참조 [쿼리는에서 DataTable 만들기](~/docs/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-175">For more information, see [Creating a DataTable From a Query](~/docs/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e16d9-176">복사된 <see cref="T:System.Data.DataRow" /> 개체가 대상 <see cref="T:System.Data.DataTable" />의 스키마에 맞지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="e16d9-176">The copied <see cref="T:System.Data.DataRow" /> objects do not fit the schema of the destination <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e16d9-177">소스 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 시퀀스가 <see langword="null" />이거나 대상 <see cref="T:System.Data.DataTable" />이 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="e16d9-177">The source <see cref="T:System.Collections.Generic.IEnumerable`1" /> sequence is <see langword="null" /> or the destination <see cref="T:System.Data.DataTable" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e16d9-178">소스 시퀀스의 <see cref="T:System.Data.DataRow" /> 상태가 <see cref="F:System.Data.DataRowState.Deleted" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="e16d9-178">A <see cref="T:System.Data.DataRow" /> in the source sequence has a state of <see cref="F:System.Data.DataRowState.Deleted" />.</span>
          </span>
          <span data-ttu-id="e16d9-179">소스 시퀀스에 <see cref="T:System.Data.DataRow" /> 개체가 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="e16d9-179">The source sequence does not contain any <see cref="T:System.Data.DataRow" /> objects.</span>
          </span>
          <span data-ttu-id="e16d9-180">소스 시퀀스의 <see cref="T:System.Data.DataRow" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="e16d9-180">A <see cref="T:System.Data.DataRow" /> in the source sequence is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyToDataTable&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void CopyToDataTable&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; source, System.Data.DataTable table, System.Data.LoadOption options, System.Data.FillErrorEventHandler errorHandler) where T : System.Data.DataRow;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyToDataTable&lt;(class System.Data.DataRow) T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; source, class System.Data.DataTable table, valuetype System.Data.LoadOption options, class System.Data.FillErrorEventHandler errorHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CopyToDataTable(Of T As DataRow) (source As IEnumerable(Of T), table As DataTable, options As LoadOption, errorHandler As FillErrorEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::DataRow[System::Runtime::CompilerServices::Extension]&#xA; static void CopyToDataTable(System::Collections::Generic::IEnumerable&lt;T&gt; ^ source, System::Data::DataTable ^ table, System::Data::LoadOption options, System::Data::FillErrorEventHandler ^ errorHandler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.DataRow</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
        <Parameter Name="table" Type="System.Data.DataTable" />
        <Parameter Name="options" Type="System.Data.LoadOption" />
        <Parameter Name="errorHandler" Type="System.Data.FillErrorEventHandler" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="e16d9-181">소스 시퀀스의 개체 형식(일반적으로 <see cref="T:System.Data.DataRow" />)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e16d9-181">The type of objects in the source sequence, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="e16d9-182">소스 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 시퀀스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e16d9-182">The source <see cref="T:System.Collections.Generic.IEnumerable`1" /> sequence.</span>
          </span>
        </param>
        <param name="table">
          <span data-ttu-id="e16d9-183">대상 <see cref="T:System.Data.DataTable" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e16d9-183">The destination <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="e16d9-184">
            <see cref="T:System.Data.LoadOption" /> 로드 옵션을 지정하는 <see cref="T:System.Data.DataTable" /> 열거형입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e16d9-184">A <see cref="T:System.Data.LoadOption" /> enumeration that specifies the <see cref="T:System.Data.DataTable" /> load options.</span>
          </span>
        </param>
        <param name="errorHandler">
          <span data-ttu-id="e16d9-185">오류를 처리할 메서드를 나타내는 <see cref="T:System.Data.FillErrorEventHandler" /> 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e16d9-185">A <see cref="T:System.Data.FillErrorEventHandler" /> delegate that represents the method that will handle an error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e16d9-186">제네릭 매개 변수 <paramref name="T" />가 <see cref="T:System.Data.DataRow" />인 지정된 입력 <see cref="T:System.Data.DataTable" /> 개체를 사용하여 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 개체를 지정된 <see cref="T:System.Data.DataRow" />에 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e16d9-186">Copies <see cref="T:System.Data.DataRow" /> objects to the specified <see cref="T:System.Data.DataTable" />, given an input <see cref="T:System.Collections.Generic.IEnumerable`1" /> object where the generic parameter <paramref name="T" /> is <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e16d9-187">매개 변수 `T` 입력된 매개 변수의 `source` 형식일 수만 있습니다 <xref:System.Data.DataRow>에서 파생 된 유형 또는 <xref:System.Data.DataRow>합니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-187">The parameter `T` of the input parameter `source` can only be of type <xref:System.Data.DataRow>, or a type derived from <xref:System.Data.DataRow>.</span></span>  
  
 <span data-ttu-id="e16d9-188">입력된 시퀀스 하나일 수 있습니다 <xref:System.Collections.Generic.IEnumerable%601> 소스에 쿼리 뿐만 아니라 통해는 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-188">The input sequence can be any <xref:System.Collections.Generic.IEnumerable%601> source, not only a query over a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="e16d9-189">클라이언트 컴퓨터를 소스 시퀀스 쿼리인 경우이 연산자를 호출 합니다 강제로 즉시 실행을 참고 합니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-189">Note that if the source sequence is a query, calling this operator will force immediate execution.</span></span> <span data-ttu-id="e16d9-190">소스 시퀀스를 열거 하는 경우에 예외가 throw 될 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-190">Enumerating the source sequence can also cause exceptions to be thrown.</span></span>  
  
 <span data-ttu-id="e16d9-191">첫 번째 스키마를 기반으로 하는 대상 테이블의 스키마 <xref:System.Data.DataRow> 소스 시퀀스의 행입니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-191">The schema of the destination table is based on the schema of the first <xref:System.Data.DataRow> row in the source sequence.</span></span> <span data-ttu-id="e16d9-192">테이블 메타 데이터에서 추출 되는 <xref:System.Data.DataRow> 메타 데이터와 테이블의 열 값에서 값은 <xref:System.Data.DataRow>합니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-192">The table metadata is extracted from the <xref:System.Data.DataRow> metadata and the table values from the column values of the <xref:System.Data.DataRow>.</span></span> <span data-ttu-id="e16d9-193">형식화 된 <xref:System.Data.DataTable>, 형식은 유지 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-193">For a typed <xref:System.Data.DataTable>, types are not preserved.</span></span> <span data-ttu-id="e16d9-194">데이터 및 스키마가 전송 되 면 되지만 결과 출력 테이블의 행 수의 형식화 된 <xref:System.Data.DataRow> 유형입니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-194">The data and schema are transferred, but the resulting rows of the output table will not be of the typed <xref:System.Data.DataRow> type.</span></span> <span data-ttu-id="e16d9-195"><xref:System.Data.DataRow.RowState%2A> 및 <xref:System.Data.DataRow.RowError%2A> 속성 소스에서 복사 하는 동안 보존 되지 않습니다 <xref:System.Data.DataRow> 반환 된 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-195">The <xref:System.Data.DataRow.RowState%2A> and <xref:System.Data.DataRow.RowError%2A> properties are not preserved during the copy from the source <xref:System.Data.DataRow> to the returned <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="e16d9-196">경우는 **null** 참조 또는 nullable 형식 값이 **null** 소스에 <xref:System.Data.DataRow>,이 메서드는 대상에 값 대신 <xref:System.Data.DataTable> 값이 <xref:System.DBNull.Value>합니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-196">When a **null** reference or nullable type with a value of **null** is found in a source <xref:System.Data.DataRow>, this method replaces the value in the destination <xref:System.Data.DataTable> with a value of <xref:System.DBNull.Value>.</span></span>  
  
 <span data-ttu-id="e16d9-197">메서드에 의해 반환 되는 생성 된 테이블은 기본 테이블 이름을 가집니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-197">The generated table returned by the method has the default table name.</span></span> <span data-ttu-id="e16d9-198">이름을 지정 하는 경우는 <xref:System.Data.DataTable>에 연결는 <xref:System.Data.DataSet>, 하거나 다른 수행 <xref:System.Data.DataTable> 특정 작업 후 수행 해야 하므로 테이블이 만들어져 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-198">If you want to name the <xref:System.Data.DataTable>, attach it to a <xref:System.Data.DataSet>, or perform any other <xref:System.Data.DataTable> specific operation, you must do so after the table is created and returned.</span></span>  
  
 <span data-ttu-id="e16d9-199">제약 조건 예외가 같은 대상 테이블에 데이터 행의 복사본 중 예외가 throw 되는 경우는 `errorHandler` 대리자가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-199">If an exception is thrown during the copy of a data row into the target table, such as a constraint exception, the `errorHandler` delegate is called.</span></span> <span data-ttu-id="e16d9-200">A <xref:System.Data.FillErrorEventArgs> 에 전달 되는 `errorHandler` 다음 값으로 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-200">A <xref:System.Data.FillErrorEventArgs> is passed to the `errorHandler` delegate with the following values:</span></span>  
  
-   <span data-ttu-id="e16d9-201"><xref:System.Data.FillErrorEventArgs.Values%2A> 속성을 원본 데이터의 복사본이로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-201">The <xref:System.Data.FillErrorEventArgs.Values%2A> property is set to a copy of the source data.</span></span>  
  
-   <span data-ttu-id="e16d9-202"><xref:System.Data.FillErrorEventArgs.DataTable%2A> 대상 속성은 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-202">The <xref:System.Data.FillErrorEventArgs.DataTable%2A> property is set to the target <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="e16d9-203"><xref:System.Data.FillErrorEventArgs.Errors%2A> 속성이 예외가로 설정 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-203">The <xref:System.Data.FillErrorEventArgs.Errors%2A> property is set to the caught exception.</span></span>  
  
 <span data-ttu-id="e16d9-204"><xref:System.Data.FillErrorEventArgs.Continue%2A> 대리자 호출 반환 후 속성이 읽기입니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-204">The <xref:System.Data.FillErrorEventArgs.Continue%2A> property is read after the delegate call returns.</span></span> <span data-ttu-id="e16d9-205">경우는 <xref:System.Data.FillErrorEventArgs.Continue%2A> 속성은 `true`, 소스 시퀀스 계속 열거 하 고 데이터 테이블에 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-205">If the <xref:System.Data.FillErrorEventArgs.Continue%2A> property is `true`, the source sequence continues to be enumerated and loaded into the data table.</span></span> <span data-ttu-id="e16d9-206">경우는 <xref:System.Data.FillErrorEventArgs.Continue%2A> 속성은 `false`에서 원래 예외가 throw 되는 <xref:System.Data.DataTableExtensions.CopyToDataTable%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e16d9-206">If the <xref:System.Data.FillErrorEventArgs.Continue%2A> property is `false`, the original exception is thrown from the <xref:System.Data.DataTableExtensions.CopyToDataTable%2A> method.</span></span>  
  
 <span data-ttu-id="e16d9-207">자세한 내용은 참조 [쿼리는에서 DataTable 만들기](~/docs/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e16d9-207">For more information, see [Creating a DataTable From a Query](~/docs/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e16d9-208">복사된 <see cref="T:System.Data.DataRow" /> 개체가 대상 <see cref="T:System.Data.DataTable" />의 스키마에 맞지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="e16d9-208">The copied <see cref="T:System.Data.DataRow" /> objects do not fit the schema of the destination <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e16d9-209">소스 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 시퀀스가 <see langword="null" />이거나 대상 <see cref="T:System.Data.DataTable" />이 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="e16d9-209">The source <see cref="T:System.Collections.Generic.IEnumerable`1" /> sequence is <see langword="null" /> or the destination <see cref="T:System.Data.DataTable" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e16d9-210">소스 시퀀스의 <see cref="T:System.Data.DataRow" /> 상태가 <see cref="F:System.Data.DataRowState.Deleted" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="e16d9-210">A <see cref="T:System.Data.DataRow" /> in the source sequence has a state of <see cref="F:System.Data.DataRowState.Deleted" />.</span>
          </span>
          <span data-ttu-id="e16d9-211">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="e16d9-211">-or-</span>
          </span>
          <span data-ttu-id="e16d9-212">소스 시퀀스에 <see cref="T:System.Data.DataRow" /> 개체가 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="e16d9-212">The source sequence does not contain any <see cref="T:System.Data.DataRow" /> objects.</span>
          </span>
          <span data-ttu-id="e16d9-213">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="e16d9-213">-or-</span>
          </span>
          <span data-ttu-id="e16d9-214">소스 시퀀스의 <see cref="T:System.Data.DataRow" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="e16d9-214">A <see cref="T:System.Data.DataRow" /> in the source sequence is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>