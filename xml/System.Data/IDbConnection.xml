<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IDbConnection.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53d753bf756b1c9ff260331e0e6a843b31fd0e668.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3d753bf756b1c9ff260331e0e6a843b31fd0e668</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.IDbConnection">
          <source>Represents an open connection to a data source, and is implemented by .NET Framework data providers that access relational databases.</source>
          <target state="translated">데이터 소스에 대한 열린 연결을 나타내며 관계형 데이터베이스에 액세스하는 .NET Framework 데이터 공급자에 의해 구현됩니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbConnection">
          <source>The <ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> interface enables an inheriting class to implement a Connection class, which represents a unique session with a data source (for example, a network connection to a server).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> 고유 세션 데이터 원본 (예를 들어 서버에 네트워크 연결)을 나타내는 연결 클래스를 구현 하려면 상속 하는 클래스 인터페이스를 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbConnection">
          <source>For more information about Connection classes, see <bpt id="p1">[</bpt>Connecting to a Data Source<ept id="p1">](~/docs/framework/data/adonet/connecting-to-a-data-source.md)</ept>.</source>
          <target state="translated">연결 클래스에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>데이터 원본에 연결할<ept id="p1">](~/docs/framework/data/adonet/connecting-to-a-data-source.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbConnection">
          <source>An application does not create an instance of the <ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> interface directly, but creates an instance of a class that inherits <ph id="ph2">&lt;xref:System.Data.IDbConnection&gt;</ph>.</source>
          <target state="translated">응용 프로그램의 인스턴스를 만들지 않습니다는 <ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> 인터페이스를 직접 상속 하는 클래스의 인스턴스를 만들고 있지만 <ph id="ph2">&lt;xref:System.Data.IDbConnection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbConnection">
          <source>Classes that inherit <ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> must implement all inherited members, and typically define additional members to add provider-specific functionality.</source>
          <target state="translated">상속 된 클래스는 <ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> 상속 된 모든 멤버를 구현 하 고 일반적으로 공급자 특정 기능을 추가 하기 위한 추가 멤버를 정의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbConnection">
          <source>For example, the <ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> interface defines the <ph id="ph2">&lt;xref:System.Data.IDbConnection.ConnectionTimeout%2A&gt;</ph> property.</source>
          <target state="translated">예를 들어는 <ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> 인터페이스 정의 <ph id="ph2">&lt;xref:System.Data.IDbConnection.ConnectionTimeout%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbConnection">
          <source>In turn, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> class inherits this property, and also defines the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.PacketSize%2A&gt;</ph> property.</source>
          <target state="translated">차례로 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 이 속성을 상속 하 고 정의 하는 클래스는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.PacketSize%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbConnection">
          <source>The following example creates instances of the derived classes, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 파생된 클래스의 인스턴스를 만드는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbConnection">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> is opened and set as the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.Connection%2A&gt;</ph> for the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 열리고으로 설정 된 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.Connection%2A&gt;</ph> 에 대 한는 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbConnection">
          <source>The example then calls <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A&gt;</ph>, and closes the connection.</source>
          <target state="translated">이 예에서는 다음 호출 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A&gt;</ph>, 연결을 닫습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbConnection">
          <source>To accomplish this, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A&gt;</ph> is passed a connection string and a query string that is a Transact-SQL INSERT statement.</source>
          <target state="translated">이 수행 하는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A&gt;</ph> 연결 문자열과 쿼리 문자열은 TRANSACT-SQL INSERT 문을 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbConnection">
          <source>To promote consistency among .NET Framework data providers, name the inheriting class in the form <ph id="ph1">&lt;paramref name="PrvClassname" /&gt;</ph> where <ph id="ph2">&lt;paramref name="Prv" /&gt;</ph> is the uniform prefix given to all classes in a specific .NET Framework data provider namespace.</source>
          <target state="translated">.NET Framework 데이터 공급자 간의 일관성으로 승격 하려면 폼에서 상속 하는 클래스 이름을 <ph id="ph1">&lt;paramref name="PrvClassname" /&gt;</ph> 여기서 <ph id="ph2">&lt;paramref name="Prv" /&gt;</ph> 는 특정.NET Framework 데이터 공급자 네임 스페이스의 모든 클래스에 지정 된 일정 한 접두사입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbConnection">
          <source>For example, <ph id="ph1">&lt;paramref name="Sql" /&gt;</ph> is the prefix of the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> class in the <ph id="ph3">&lt;see langword="System.Data.SqlClient" /&gt;</ph> namespace.</source>
          <target state="translated">예를 들어 <ph id="ph1">&lt;paramref name="Sql" /&gt;</ph> 은의 접두사는 <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> 클래스에 <ph id="ph3">&lt;see langword="System.Data.SqlClient" /&gt;</ph> 네임 스페이스입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbConnection">
          <source>When you inherit from the <ph id="ph1">&lt;see cref="T:System.Data.IDbConnection" /&gt;</ph> interface, you should implement the following constructors:</source>
          <target state="translated">상속 하는 경우는 <ph id="ph1">&lt;see cref="T:System.Data.IDbConnection" /&gt;</ph> 인터페이스를 다음 생성자를 구현 해야 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbConnection">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Item</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 항목</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbConnection">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 설명</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbConnection">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> PrvConnection()</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> PrvConnection()</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbConnection">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Initializes a new instance of the PrvConnection class.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> PrvConnection 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbConnection">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> PrvConnection(string connectionString)</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> PrvConnection (connectionString 문자열)</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbConnection">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Initializes a new instance of the PrvConnection class when given a string containing the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 연결 문자열을 포함 하는 문자열을 지정 하는 경우 PrvConnection 클래스의 새 인스턴스를 초기화 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="T:System.Data.IDbConnection">
          <source>Begins a database transaction.</source>
          <target state="translated">데이터베이스 트랜잭션을 시작합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Data.IDbConnection.BeginTransaction">
          <source>Begins a database transaction.</source>
          <target state="translated">데이터베이스 트랜잭션을 시작합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Data.IDbConnection.BeginTransaction">
          <source>An object representing the new transaction.</source>
          <target state="translated">새 트랜잭션을 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDbConnection.BeginTransaction">
          <source>Once the transaction has completed, you must explicitly commit or roll back the transaction by using the <ph id="ph1">&lt;xref:System.Data.IDbTransaction.Commit%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.IDbTransaction.Rollback%2A&gt;</ph> methods.</source>
          <target state="translated">트랜잭션이 완료 되 면 명시적으로 커밋하거나를 사용 하 여 트랜잭션을 롤백하는 <ph id="ph1">&lt;xref:System.Data.IDbTransaction.Commit%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.IDbTransaction.Rollback%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.IsolationLevel" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IsolationLevel" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>Begins a database transaction with the specified <ph id="ph1">&lt;see cref="T:System.Data.IsolationLevel" /&gt;</ph> value.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Data.IsolationLevel" /&gt;</ph> 값을 사용하여 데이터베이스 트랜잭션을 시작합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>An object representing the new transaction.</source>
          <target state="translated">새 트랜잭션을 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>Once the transaction has completed, you must explicitly commit or roll back the transaction using the <ph id="ph1">&lt;xref:System.Data.IDbTransaction.Commit%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.IDbTransaction.Rollback%2A&gt;</ph> methods.</source>
          <target state="translated">트랜잭션이 완료 되 면 명시적으로 커밋하거나 사용 하 여 트랜잭션을 롤백하는 <ph id="ph1">&lt;xref:System.Data.IDbTransaction.Commit%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.IDbTransaction.Rollback%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Data.IDbConnection.ChangeDatabase(System.String)">
          <source>The name of the database to use in place of the current database.</source>
          <target state="translated">현재 데이터베이스 대신 사용할 데이터베이스의 이름입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Data.IDbConnection.ChangeDatabase(System.String)">
          <source>Changes the current database for an open <ph id="ph1">&lt;see langword="Connection" /&gt;</ph> object.</source>
          <target state="translated">열려 있는 <ph id="ph1">&lt;see langword="Connection" /&gt;</ph> 개체의 현재 데이터베이스를 변경합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Data.IDbConnection.Close">
          <source>Closes the connection to the database.</source>
          <target state="translated">데이터베이스에 대한 연결을 닫습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDbConnection.Close">
          <source>The <ph id="ph1">&lt;xref:System.Data.IDbConnection.Close%2A&gt;</ph> method rolls back any pending transactions.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.IDbConnection.Close%2A&gt;</ph> 메서드 보류 중인 트랜잭션을 모두 롤백합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDbConnection.Close">
          <source>It then releases the connection to the connection pool, or closes the connection if connection pooling is disabled.</source>
          <target state="translated">그런 다음 연결 풀에 대 한 연결을 해제 하거나 연결 풀링을 사용 하지 않도록 설정 하는 경우 연결을 닫습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDbConnection.Close">
          <source>An application can call <ph id="ph1">`Close`</ph> more than one time without generating an exception.</source>
          <target state="translated">응용 프로그램에서 호출할 수 <ph id="ph1">`Close`</ph> 예외를 생성 하지 않고 둘 이상의 시간입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Data.IDbConnection.ConnectionString">
          <source>Gets or sets the string used to open a database.</source>
          <target state="translated">데이터베이스를 여는 데 사용되는 문자열을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbConnection.ConnectionString">
          <source>A string containing connection settings.</source>
          <target state="translated">연결 설정이 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbConnection.ConnectionString">
          <source>The <ph id="ph1">`ConnectionString`</ph> property can be set only while the connection is closed.</source>
          <target state="translated"><ph id="ph1">`ConnectionString`</ph> 연결이 닫혀 있는 동안에 속성을 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbConnection.ConnectionString">
          <source>The following example creates an instance of a derived class, <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph>, sets its <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A&gt;</ph>, and displays its <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbConnection.State%2A&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 파생된 클래스의 인스턴스를 만들고 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph>, 설정 해당 <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A&gt;</ph>, 표시 하 고 해당 <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbConnection.State%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Data.IDbConnection.ConnectionTimeout">
          <source>Gets the time to wait while trying to establish a connection before terminating the attempt and generating an error.</source>
          <target state="translated">시도를 종료하고 오류를 생성하기 전에 연결하는 동안 대기할 시간을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbConnection.ConnectionTimeout">
          <source>The time (in seconds) to wait for a connection to open.</source>
          <target state="translated">연결이 열리기 전까지 대기할 시간(초)입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbConnection.ConnectionTimeout">
          <source>The default value is 15 seconds.</source>
          <target state="translated">기본값은 15초입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbConnection.ConnectionTimeout">
          <source>A value of 0 indicates no limit to the wait time, rather than no wait time, and should be avoided in a <ph id="ph1">&lt;xref:System.Data.IDbConnection.ConnectionString%2A&gt;</ph> because it would cause the connection attempt to wait indefinitely.</source>
          <target state="translated">값이 0이 아니라 대기 시간이 없는 대기 시간에 제한이 없음을 나타내며 피해 야는 <ph id="ph1">&lt;xref:System.Data.IDbConnection.ConnectionString%2A&gt;</ph> 연결 시도가 무한정 대기 하 게 되므로 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Data.IDbConnection.CreateCommand">
          <source>Creates and returns a Command object associated with the connection.</source>
          <target state="translated">연결과 관련된 Command 개체를 만들고 반환합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Data.IDbConnection.CreateCommand">
          <source>A Command object associated with the connection.</source>
          <target state="translated">연결과 관련된 Command 개체입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.Data.IDbConnection.Database">
          <source>Gets the name of the current database or the database to be used after a connection is opened.</source>
          <target state="translated">현재 데이터베이스 이름이나 연결이 열린 후 사용할 데이터베이스의 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbConnection.Database">
          <source>The name of the current database or the name of the database to be used once a connection is open.</source>
          <target state="translated">현재 데이터베이스 이름이나 연결이 열린 후 사용할 데이터베이스의 이름입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbConnection.Database">
          <source>The default value is an empty string.</source>
          <target state="translated">기본값은 빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbConnection.Database">
          <source>The <ph id="ph1">`Database`</ph> property can be dynamically updated by using the <ph id="ph2">&lt;xref:System.Data.IDbConnection.ChangeDatabase%2A&gt;</ph> method or by passing an SQL statement using one of the Execute methods.</source>
          <target state="translated"><ph id="ph1">`Database`</ph> 속성을 사용 하 여 동적으로 업데이트할 수는 <ph id="ph2">&lt;xref:System.Data.IDbConnection.ChangeDatabase%2A&gt;</ph> 메서드 또는 Execute 메서드 중 하나를 사용 하는 SQL 문을 전달 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbConnection.Database">
          <source>(Initially the database is set by means of the connection string.) If you change the current database using an SQL statement or the <ph id="ph1">`ChangeDatabase`</ph> method, an informational message is sent and then the property is updated.</source>
          <target state="translated">(처음 데이터베이스 설정 연결 문자열을 사용 하 여.) SQL 문을 사용 하 여 현재 데이터베이스를 변경 하면 또는 <ph id="ph1">`ChangeDatabase`</ph> 정보 메시지가 전송 되는 메서드와 다음 속성이 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Data.IDbConnection.Open">
          <source>Opens a database connection with the settings specified by the <ph id="ph1">&lt;see langword="ConnectionString" /&gt;</ph> property of the provider-specific Connection object.</source>
          <target state="translated">공급자별 Connection 개체의 <ph id="ph1">&lt;see langword="ConnectionString" /&gt;</ph> 속성으로 지정된 설정을 사용하여 데이터베이스 연결을 엽니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Data.IDbConnection.State">
          <source>Gets the current state of the connection.</source>
          <target state="translated">연결의 현재 상태를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbConnection.State">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.ConnectionState" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.ConnectionState" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbConnection.State">
          <source>The allowed state changes are:</source>
          <target state="translated">허용 되는 상태 변경이합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbConnection.State">
          <source>From <ph id="ph1">`Closed`</ph> to <ph id="ph2">`Open`</ph>, using the <ph id="ph3">`Open`</ph> method of the Connection object.</source>
          <target state="translated"><ph id="ph1">`Closed`</ph> 를 <ph id="ph2">`Open`</ph>를 사용 하 여는 <ph id="ph3">`Open`</ph> 연결 개체의 메서드.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbConnection.State">
          <source>From <ph id="ph1">`Open`</ph> to <ph id="ph2">`Closed`</ph>, using either the <ph id="ph3">`Close`</ph> method or the <ph id="ph4">`Dispose`</ph> method of the Connection object.</source>
          <target state="translated"><ph id="ph1">`Open`</ph> 를 <ph id="ph2">`Closed`</ph>, 하나를 사용 하는 <ph id="ph3">`Close`</ph> 메서드 또는 <ph id="ph4">`Dispose`</ph> 연결 개체의 메서드.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbConnection.State">
          <source>The following example creates an instance of a derived class, <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph>, sets its <ph id="ph2">&lt;xref:System.Data.IDbConnection.ConnectionString%2A&gt;</ph>, and displays its <ph id="ph3">&lt;xref:System.Data.IDbConnection.State%2A&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 파생된 클래스의 인스턴스를 만들고 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph>, 설정 해당 <ph id="ph2">&lt;xref:System.Data.IDbConnection.ConnectionString%2A&gt;</ph>, 표시 하 고 해당 <ph id="ph3">&lt;xref:System.Data.IDbConnection.State%2A&gt;</ph>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>