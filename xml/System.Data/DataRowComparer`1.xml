<Type Name="DataRowComparer&lt;TRow&gt;" FullName="System.Data.DataRowComparer&lt;TRow&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="db70940a62bde70aee75ee2847b26d522fb1f9d7" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39776801" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DataRowComparer&lt;TRow&gt; : System.Collections.Generic.IEqualityComparer&lt;TRow&gt; where TRow : DataRow" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataRowComparer`1&lt;(class System.Data.DataRow) TRow&gt; extends System.Object implements class System.Collections.Generic.IEqualityComparer`1&lt;!TRow&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataRowComparer`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataRowComparer(Of TRow)&#xA;Implements IEqualityComparer(Of TRow)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TRow&gt;&#xA; where TRow : DataRowpublic ref class DataRowComparer sealed : System::Collections::Generic::IEqualityComparer&lt;TRow&gt;" />
  <TypeSignature Language="F#" Value="type DataRowComparer&lt;'Row (requires 'Row :&gt; DataRow)&gt; = class&#xA;    interface IEqualityComparer&lt;'Row (requires 'Row :&gt; DataRow)&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TRow">
      <Constraints>
        <BaseTypeName>System.Data.DataRow</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEqualityComparer&lt;TRow&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TRow">
      <span data-ttu-id="eb17f-101">비교할 개체의 형식으로 일반적으로 <see cref="T:System.Data.DataRow" />입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eb17f-101">The type of objects to be compared, typically <see cref="T:System.Data.DataRow" />.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="eb17f-102">값 기반 비교를 사용하여 두 <see cref="T:System.Data.DataRow" /> 개체가 같은지 비교합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eb17f-102">Compares two <see cref="T:System.Data.DataRow" /> objects for equivalence by using value-based comparison.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb17f-103">이 클래스를 구현 합니다 <xref:System.Collections.Generic.IEqualityComparer%601> 인터페이스를 사용 하 여 의미 체계 값 기반 비교 <xref:System.Data.DataRow> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="eb17f-103">This class implements the <xref:System.Collections.Generic.IEqualityComparer%601> interface and uses value-based semantics to compare <xref:System.Data.DataRow> objects.</span></span> <span data-ttu-id="eb17f-104">때문에이 클래스는 필요한 일부 집합 기반 작업의 기본 구현 (같은 <xref:System.Linq.Enumerable.Distinct%2A>, <xref:System.Linq.Enumerable.Union%2A>, <xref:System.Linq.Enumerable.Intersect%2A>, 및 <xref:System.Linq.Enumerable.Except%2A>) 기반 의미 체계를 사용 하 여 비교할 <xref:System.Data.DataRow> 대신 개체 참조를 비교는 <xref:System.Data.DataRow> 개체 값입니다.</span><span class="sxs-lookup"><span data-stu-id="eb17f-104">This class is required because the default implementations of some set-based operations (such as <xref:System.Linq.Enumerable.Distinct%2A>, <xref:System.Linq.Enumerable.Union%2A>, <xref:System.Linq.Enumerable.Intersect%2A>, and <xref:System.Linq.Enumerable.Except%2A>) use reference-based semantics to compare <xref:System.Data.DataRow> object references, instead of comparing the <xref:System.Data.DataRow> object values.</span></span> <span data-ttu-id="eb17f-105">합니다 <xref:System.Data.DataRowComparer%601.Default%2A> 클래스를 사용 하 여 값을 비교 하는 <xref:System.Data.DataRow> 개체 및 개체 참조를 비교 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="eb17f-105">The <xref:System.Data.DataRowComparer%601.Default%2A> class is used to compare the values of the <xref:System.Data.DataRow> objects and does not compare the object references.</span></span>  
  
 <span data-ttu-id="eb17f-106">이 클래스는 직접 인스턴스화할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="eb17f-106">This class cannot be directly instantiated.</span></span> <span data-ttu-id="eb17f-107">대신 합니다 <xref:System.Data.DataRowComparer%601.Default%2A> 의 singleton 인스턴스를 반환할 속성을 사용 해야는 <xref:System.Data.DataRowComparer%601.Default%2A> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="eb17f-107">Instead, the <xref:System.Data.DataRowComparer%601.Default%2A> property must be used to return a singleton instance of the <xref:System.Data.DataRowComparer%601.Default%2A> class.</span></span>  
  
 <span data-ttu-id="eb17f-108">이 클래스는 상태 비저장입니다.</span><span class="sxs-lookup"><span data-stu-id="eb17f-108">This class is stateless.</span></span>  
  
 <span data-ttu-id="eb17f-109">이 클래스는 봉인 되어 있으며에서 파생 될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="eb17f-109">This class is sealed and cannot be derived from.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Data.DataRowComparer&lt;TRow&gt; Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Data.DataRowComparer`1&lt;!TRow&gt; Default" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRowComparer`1.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As DataRowComparer(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Data::DataRowComparer&lt;TRow&gt; ^ Default { System::Data::DataRowComparer&lt;TRow&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.Data.DataRowComparer&lt;'Row (requires 'Row :&gt; System.Data.DataRow)&gt;" Usage="System.Data.DataRowComparer&lt;'Row (requires 'Row :&gt; System.Data.DataRow)&gt;.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRowComparer&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb17f-110">
            <see cref="T:System.Data.DataRowComparer`1" />의 singleton 인스턴스를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb17f-110">Gets a singleton instance of <see cref="T:System.Data.DataRowComparer`1" />.</span>
          </span>
          <span data-ttu-id="eb17f-111">이 속성은 읽기 전용입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb17f-111">This property is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb17f-112">
            <see cref="T:System.Data.DataRowComparer`1" />의 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb17f-112">An instance of a <see cref="T:System.Data.DataRowComparer`1" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb17f-113">이 속성은 읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="eb17f-113">This property is read-only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (TRow leftRow, TRow rightRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(!TRow leftRow, !TRow rightRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowComparer`1.Equals(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (leftRow As TRow, rightRow As TRow) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(TRow leftRow, TRow rightRow);" />
      <MemberSignature Language="F#" Value="override this.Equals : 'Row * 'Row -&gt; bool" Usage="dataRowComparer.Equals (leftRow, rightRow)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leftRow" Type="TRow" />
        <Parameter Name="rightRow" Type="TRow" />
      </Parameters>
      <Docs>
        <param name="leftRow">
          <span data-ttu-id="eb17f-114">비교할 첫 번째 <see cref="T:System.Data.DataRow" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb17f-114">The first <see cref="T:System.Data.DataRow" /> object to compare.</span>
          </span>
        </param>
        <param name="rightRow">
          <span data-ttu-id="eb17f-115">비교할 두 번째 <see cref="T:System.Data.DataRow" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb17f-115">The second <see cref="T:System.Data.DataRow" /> object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb17f-116">열 단위 값 기반 비교를 사용하여 두 <see cref="T:System.Data.DataRow" /> 개체를 비교합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb17f-116">Compares two <see cref="T:System.Data.DataRow" /> objects by using a column-by-column, value-based comparison.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb17f-117">두 <see cref="T:System.Data.DataRow" /> 개체에 동일한 열 값으로 구성된 순서 있는 집합이 들어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb17f-117">
              <see langword="true" /> if the two <see cref="T:System.Data.DataRow" /> objects have ordered sets of column values that are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb17f-118">두 스키마 <xref:System.Data.DataRow> 개체 확인 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="eb17f-118">The schema of the two <xref:System.Data.DataRow> objects is not checked.</span></span> <span data-ttu-id="eb17f-119">모두 <xref:System.Data.DataRow> 개체 집합이 정확히 동일한 순서가 지정 된 열 값, 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="eb17f-119">If both <xref:System.Data.DataRow> objects have exactly the same ordered set of column values, they are considered equal.</span></span>  
  
 <span data-ttu-id="eb17f-120">현재 값만을 <xref:System.Data.DataRow> 개체를 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="eb17f-120">Only the current values of the <xref:System.Data.DataRow> objects are checked.</span></span> <span data-ttu-id="eb17f-121">상태는 <xref:System.Data.DataRow> 개체 확인 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="eb17f-121">The state of the <xref:System.Data.DataRow> objects is not checked.</span></span>  
  
 <span data-ttu-id="eb17f-122">합니다 <xref:System.Data.DataRowComparer`1.Equals*> 메서드는 값 기반 비교 구현 된 <xref:System.Collections.Generic.IEqualityComparer%601.Equals%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="eb17f-122">The <xref:System.Data.DataRowComparer`1.Equals*> method is the value-based comparison implementation of the <xref:System.Collections.Generic.IEqualityComparer%601.Equals%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eb17f-123">소스 <see cref="T:System.Data.DataRow" /> 개체 중 하나 또는 모두가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb17f-123">One or both of the source <see cref="T:System.Data.DataRow" /> objects are <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (TRow row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(!TRow row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowComparer`1.GetHashCode(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (row As TRow) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetHashCode(TRow row);" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : 'Row -&gt; int" Usage="dataRowComparer.GetHashCode row" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="TRow" />
      </Parameters>
      <Docs>
        <param name="row">
          <span data-ttu-id="eb17f-124">해시 코드를 계산할 <see cref="T:System.Data.DataRow" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb17f-124">The <see cref="T:System.Data.DataRow" /> to compute the hash code from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb17f-125">지정된 <see cref="T:System.Data.DataRow" /> 개체의 해시 코드를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb17f-125">Returns a hash code for the specified <see cref="T:System.Data.DataRow" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb17f-126">행의 해시 코드를 나타내는 <see cref="T:System.Int32" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb17f-126">An <see cref="T:System.Int32" /> value representing the hash code of the row.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb17f-127">합니다 <xref:System.Data.DataRowComparer%601.GetHashCode%2A> 메서드는 값 기반 비교 구현 된 <xref:System.Collections.Generic.IEqualityComparer%601.GetHashCode%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="eb17f-127">The <xref:System.Data.DataRowComparer%601.GetHashCode%2A> method is the value-based comparison implementation of the <xref:System.Collections.Generic.IEqualityComparer%601.GetHashCode%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="eb17f-128">소스 <see cref="T:System.Data.DataRow" /> 개체가 <see cref="T:System.Data.DataTable" />에 속하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb17f-128">The source <see cref="T:System.Data.DataRow" /> objects does not belong to a <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eb17f-129">소스 <see cref="T:System.Data.DataRow" /> 개체가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb17f-129">The source <see cref="T:System.Data.DataRow" /> objects is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>