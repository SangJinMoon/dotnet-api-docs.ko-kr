<Type Name="IDataReader" FullName="System.Data.IDataReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="19530b9c5982631504b5bf391eb258d094af3b11" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30398217" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDataReader : IDisposable, System.Data.IDataRecord" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataReader implements class System.Data.IDataRecord, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDataReader" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataReader&#xA;Implements IDataRecord, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataReader : IDisposable, System::Data::IDataRecord" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataRecord</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="362ee-101">데이터 소스에서 명령을 실행하여 얻은 결과 집합의 하나 이상의 앞으로만 이동 가능한 스트림을 읽는 방법을 제공하며 관계형 데이터베이스에 액세스하는 .NET Framework 데이터 공급자에 의해 구현됩니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="362ee-101">Provides a means of reading one or more forward-only streams of result sets obtained by executing a command at a data source, and is implemented by .NET Framework data providers that access relational databases.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="362ee-102"><xref:System.Data.IDataReader> 및 <xref:System.Data.IDataRecord> 인터페이스를 통해 상속 하는 클래스를 구현 하는 `DataReader` 결과 집합의 하나 이상의 앞 으로만 이동 가능한 스트림을 읽는 방법을 제공 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="362ee-102">The <xref:System.Data.IDataReader> and <xref:System.Data.IDataRecord> interfaces allow an inheriting class to implement a `DataReader` class, which provides a means of reading one or more forward-only streams of result sets.</span></span> <span data-ttu-id="362ee-103">에 대 한 자세한 내용은 `DataReader` 클래스 참조 [DataReader를 사용 하 여 데이터 검색](~/docs/framework/data/adonet/retrieving-data-using-a-datareader.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="362ee-103">For more information about `DataReader` classes, see [Retrieving Data Using a DataReader](~/docs/framework/data/adonet/retrieving-data-using-a-datareader.md).</span></span>  
  
 <span data-ttu-id="362ee-104">응용 프로그램의 인스턴스를 만들지 않습니다는 <xref:System.Data.IDataReader> 인터페이스를 직접 상속 하는 클래스의 인스턴스를 만들고 있지만 <xref:System.Data.IDataReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="362ee-104">An application does not create an instance of the <xref:System.Data.IDataReader> interface directly, but creates an instance of a class that inherits <xref:System.Data.IDataReader>.</span></span>  
  
 <span data-ttu-id="362ee-105">상속 된 클래스는 <xref:System.Data.IDataReader> 상속 된 멤버를 구현 해야 하며 일반적으로 공급자 특정 기능을 추가 하기 위한 추가 멤버를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="362ee-105">Classes that inherit <xref:System.Data.IDataReader> must implement the inherited members, and typically define additional members to add provider-specific functionality.</span></span>  
  
 <span data-ttu-id="362ee-106">변경 결과를 다른 집합을 처리 하거나 구현 하는 클래스의 사용자에 게 표시 될 수 있습니다 데이터를 읽는 동안 스레드는 `IDataReader`합니다.</span><span class="sxs-lookup"><span data-stu-id="362ee-106">Changes made to a result set by another process or thread while data is being read may be visible to the user of a class that implements an `IDataReader`.</span></span> <span data-ttu-id="362ee-107">그러나 정확한 동작은 공급자와 시간에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="362ee-107">However, the precise behavior is both provider and timing dependent.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="362ee-108">다음 예제에서는 파생된 클래스의 인스턴스를 만드는 <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>, 및 <xref:System.Data.SqlClient.SqlDataReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="362ee-108">The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>, and <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="362ee-109">이 예제에서는 콘솔에이 작성 하는 데이터를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="362ee-109">The example reads through the data, writing it out to the console.</span></span> <span data-ttu-id="362ee-110">마지막는 <xref:System.Data.SqlClient.SqlDataReader>, 하면 <xref:System.Data.SqlClient.SqlConnection>합니다.</span><span class="sxs-lookup"><span data-stu-id="362ee-110">Finally, the example closes the <xref:System.Data.SqlClient.SqlDataReader>, then the <xref:System.Data.SqlClient.SqlConnection>.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="362ee-111">.NET Framework 데이터 공급자 간의 일관성으로 승격 하려면 폼에서 상속 하는 클래스 이름을 <paramref name="Prv" /> where 명령을 <paramref name="Prv" /> 는 특정.NET Framework 데이터 공급자 네임 스페이스의 모든 클래스에 지정 된 일정 한 접두사입니다.</span>
        <span class="sxs-lookup">
          <span data-stu-id="362ee-111">To promote consistency among .NET Framework data providers, name the inheriting class in the form <paramref name="Prv" /> Command where <paramref name="Prv" /> is the uniform prefix given to all classes in a specific .NET Framework data provider namespace.</span>
        </span>
        <span data-ttu-id="362ee-112">예를 들어 <paramref name="Sql" /> 은의 접두사는 <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> 클래스에 <see langword="System.Data.SqlClient" /> 네임 스페이스입니다.</span>
        <span class="sxs-lookup">
          <span data-stu-id="362ee-112">For example, <paramref name="Sql" /> is the prefix of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class in the <see langword="System.Data.SqlClient" /> namespace.</span>
        </span>
        <span data-ttu-id="362ee-113">사용자의 인스턴스를 만들지 마십시오는 <see langword="DataReader" /> 클래스를 직접 합니다.</span>
        <span class="sxs-lookup">
          <span data-stu-id="362ee-113">Users do not create an instance of a <see langword="DataReader" /> class directly.</span>
        </span>
        <span data-ttu-id="362ee-114">가져오는 대신,는 <see langword="DataReader" /> 통해는 <see langword="ExecuteReader" /> 의 메서드는 <see langword="Command" /> 개체입니다.</span>
        <span class="sxs-lookup">
          <span data-stu-id="362ee-114">Instead, they obtain the <see langword="DataReader" /> instance through the <see langword="ExecuteReader" /> method of the <see langword="Command" /> object.</span>
        </span>
        <span data-ttu-id="362ee-115">따라서 표시 해야 <see langword="DataReader" /> 생성자는 내부로 합니다.</span>
        <span class="sxs-lookup">
          <span data-stu-id="362ee-115">Therefore, you should mark <see langword="DataReader" /> constructors as internal.</span>
        </span>
      </para>
    </block>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="362ee-116">
            <see cref="T:System.Data.IDataReader" /> 개체를 닫습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="362ee-116">Closes the <see cref="T:System.Data.IDataReader" /> Object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="362ee-117">명시적으로 호출 해야는 <xref:System.Data.IDataReader.Close%2A> 메서드를 사용 하 여 통해는 <xref:System.Data.IDataReader> 사용할 연결 된 <xref:System.Data.IDbConnection> 다른 용도로 합니다.</span><span class="sxs-lookup"><span data-stu-id="362ee-117">You must explicitly call the <xref:System.Data.IDataReader.Close%2A> method when you are through using the <xref:System.Data.IDataReader> to use the associated <xref:System.Data.IDbConnection> for any other purpose.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Depth { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="362ee-118">현재 행의 중첩 수준을 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="362ee-118">Gets a value indicating the depth of nesting for the current row.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="362ee-119">중첩 수준입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="362ee-119">The level of nesting.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="362ee-120">가장 바깥쪽 테이블의 중첩 수준은 0입니다.</span><span class="sxs-lookup"><span data-stu-id="362ee-120">The outermost table has a depth of zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="public System.Data.DataTable GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.DataTable GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataReader.GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSchemaTable () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ GetSchemaTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="362ee-121">
            <see cref="T:System.Data.DataTable" />의 열 메타데이터를 정의하는 <see cref="T:System.Data.IDataReader" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="362ee-121">Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata of the <see cref="T:System.Data.IDataReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="362ee-122">열 메타데이터를 정의하는 <see cref="T:System.Data.DataTable" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="362ee-122">A <see cref="T:System.Data.DataTable" /> that describes the column metadata.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="362ee-123">구현 <xref:System.Data.IDataReader.GetSchemaTable%2A> 다른.NET Framework 데이터 공급자는 OLE DB 공급자 계층을 사용 하지 않는 대 한.NET Framework Data Provider for OLE DB에 대 한 메서드 구현 하는 동안 OLE DB icolumnsrowset:: Getcolumnsrowset 메서드에 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="362ee-123">The implementation of <xref:System.Data.IDataReader.GetSchemaTable%2A> method for the .NET Framework Data Provider for OLE DB maps to the OLE DB IColumnsRowset::GetColumnsRowset method, while implementations for other .NET Framework data providers do not use an OLE DB provider layer.</span></span> <span data-ttu-id="362ee-124">순서를 <xref:System.Data.IDataReader.GetSchemaTable%2A> 반환 되는 DataReader 열 및 테이블의 각 열에 대 한 메타 데이터 반환 사용 하는 데이터 공급자에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="362ee-124">The order in which <xref:System.Data.IDataReader.GetSchemaTable%2A> returns metadata about each column in a table, and the DataReader columns that are returned, vary depending on which data provider you use.</span></span> <span data-ttu-id="362ee-125">다음 표에서 데이터 공급자와 멤버를 구현 하는 <xref:System.Data.IDataReader.GetSchemaTable%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="362ee-125">The following table lists data providers and members that implement <xref:System.Data.IDataReader.GetSchemaTable%2A>.</span></span>  
  
|<span data-ttu-id="362ee-126">데이터 공급자</span><span class="sxs-lookup"><span data-stu-id="362ee-126">Data Provider</span></span>|<span data-ttu-id="362ee-127">멤버</span><span class="sxs-lookup"><span data-stu-id="362ee-127">Member</span></span>|  
|-------------------|------------|  
|<span data-ttu-id="362ee-128">.NET data Provider for ODBC</span><span class="sxs-lookup"><span data-stu-id="362ee-128">.NET Data Provider for ODBC</span></span>|<span data-ttu-id="362ee-129"><xref:System.Data.Odbc.OdbcDataReader.GetSchemaTable%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="362ee-129"><xref:System.Data.Odbc.OdbcDataReader.GetSchemaTable%2A?displayProperty=nameWithType>.</span></span>|  
|<span data-ttu-id="362ee-130">.NET data Provider for OLE DB</span><span class="sxs-lookup"><span data-stu-id="362ee-130">.NET Data Provider for OLE DB</span></span>|<span data-ttu-id="362ee-131"><xref:System.Data.OleDb.OleDbDataReader.GetSchemaTable%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="362ee-131"><xref:System.Data.OleDb.OleDbDataReader.GetSchemaTable%2A?displayProperty=nameWithType>.</span></span>|  
|<span data-ttu-id="362ee-132">.NET data Provider for Oracle</span><span class="sxs-lookup"><span data-stu-id="362ee-132">.NET Data Provider for Oracle</span></span>|<span data-ttu-id="362ee-133"><xref:System.Data.OracleClient.OracleDataReader.GetSchemaTable%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="362ee-133"><xref:System.Data.OracleClient.OracleDataReader.GetSchemaTable%2A?displayProperty=nameWithType>.</span></span>|  
|<span data-ttu-id="362ee-134">.NET data Provider for SQL Server</span><span class="sxs-lookup"><span data-stu-id="362ee-134">.NET Data Provider for SQL Server</span></span>|<span data-ttu-id="362ee-135"><xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="362ee-135"><xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A?displayProperty=nameWithType>.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="362ee-136">
            <see cref="T:System.Data.IDataReader" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="362ee-136">The <see cref="T:System.Data.IDataReader" /> is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataReader.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsClosed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="362ee-137">데이터 판독기가 닫혀 있는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="362ee-137">Gets a value indicating whether the data reader is closed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="362ee-138">데이터 판독기가 닫혀 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="362ee-138">
              <see langword="true" /> if the data reader is closed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="362ee-139"><xref:System.Data.IDataReader.IsClosed%2A> 및 <xref:System.Data.IDataReader.RecordsAffected%2A> 후 호출할 수 있는 속성만 <xref:System.Data.IDataReader> 닫힙니다.</span><span class="sxs-lookup"><span data-stu-id="362ee-139"><xref:System.Data.IDataReader.IsClosed%2A> and <xref:System.Data.IDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.IDataReader> is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextResult">
      <MemberSignature Language="C#" Value="public bool NextResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool NextResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataReader.NextResult" />
      <MemberSignature Language="VB.NET" Value="Public Function NextResult () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool NextResult();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="362ee-140">일괄 처리 SQL 문의 결과를 읽을 때 데이터 판독기에서 다음 결과로 진행하도록 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="362ee-140">Advances the data reader to the next result, when reading the results of batch SQL statements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="362ee-141">행이 더 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="362ee-141">
              <see langword="true" /> if there are more rows; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="362ee-142">일괄 처리 SQL 문을 실행 하 여 가져올 수 있는 여러 결과 처리 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="362ee-142">Used to process multiple results, which can be obtained by executing batch SQL statements.</span></span>  
  
 <span data-ttu-id="362ee-143">기본적으로 데이터 판독기가 첫 번째 결과에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="362ee-143">By default, the data reader is positioned on the first result.</span></span>  
  
 [!code-csharp[IDataReader_NextResult#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/idatareader_nextresult/cs/source.cs#1)]
 [!code-vb[IDataReader_NextResult#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/idatareader_nextresult/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Read();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="362ee-144">
            <see cref="T:System.Data.IDataReader" />를 다음 레코드로 이동합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="362ee-144">Advances the <see cref="T:System.Data.IDataReader" /> to the next record.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="362ee-145">행이 더 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="362ee-145">
              <see langword="true" /> if there are more rows; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="362ee-146">기본 위치는 <xref:System.Data.IDataReader> 첫 번째 레코드 앞입니다.</span><span class="sxs-lookup"><span data-stu-id="362ee-146">The default position of the <xref:System.Data.IDataReader> is prior to the first record.</span></span> <span data-ttu-id="362ee-147">따라서 호출 해야 <xref:System.Data.IDataReader.Read%2A> 모든 데이터 액세스를 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="362ee-147">Therefore you must call <xref:System.Data.IDataReader.Read%2A> to begin accessing any data.</span></span>  
  
 <span data-ttu-id="362ee-148">관련 연결이 계속 제공 데이터 판독기를 사용 하는 동안는 <xref:System.Data.IDataReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="362ee-148">While the data reader is in use, the associated connection is busy serving the <xref:System.Data.IDataReader>.</span></span> <span data-ttu-id="362ee-149">이 때 까지는 <xref:System.Data.IDataReader.Close%2A> 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="362ee-149">This is the case until <xref:System.Data.IDataReader.Close%2A> is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="362ee-150">다음 예제에서는 세 가지 파생된 클래스의 인스턴스를 만드는 <xref:System.Data.OleDb.OleDbConnection>, <xref:System.Data.OleDb.OleDbCommand>, 및 <xref:System.Data.OleDb.OleDbDataReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="362ee-150">The following example creates instances of three derived classes <xref:System.Data.OleDb.OleDbConnection>, an <xref:System.Data.OleDb.OleDbCommand>, and an <xref:System.Data.OleDb.OleDbDataReader>.</span></span> <span data-ttu-id="362ee-151">이 예제에서는 콘솔에이 작성 하는 데이터를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="362ee-151">The example reads through the data, writing it out to the console.</span></span> <span data-ttu-id="362ee-152">마지막는 <xref:System.Data.OleDb.OleDbDataReader>, 하면 <xref:System.Data.OleDb.OleDbConnection>합니다.</span><span class="sxs-lookup"><span data-stu-id="362ee-152">Finally, the example closes the <xref:System.Data.OleDb.OleDbDataReader>, then the <xref:System.Data.OleDb.OleDbConnection>.</span></span>  
  
 [!code-csharp[Classic WebData IDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordsAffected">
      <MemberSignature Language="C#" Value="public int RecordsAffected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecordsAffected" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataReader.RecordsAffected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RecordsAffected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RecordsAffected { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="362ee-153">SQL 문을 실행하여 변경, 삽입 또는 삭제된 행 수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="362ee-153">Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="362ee-154">변경, 삽입 또는 삭제된 행 수입니다. 영향을 받은 행이 없거나 문이 실패하면 0이고, SELECT 문의 경우는 -1입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="362ee-154">The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="362ee-155"><xref:System.Data.IDataReader.RecordsAffected%2A> 모든 행을 닫을 때까지 속성이 설정 되지 않은 <xref:System.Data.IDataReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="362ee-155">The <xref:System.Data.IDataReader.RecordsAffected%2A> property is not set until all rows are read and you close the <xref:System.Data.IDataReader>.</span></span>  
  
 <span data-ttu-id="362ee-156"><xref:System.Data.IDataReader.IsClosed%2A> 및 <xref:System.Data.IDataReader.RecordsAffected%2A> 후 호출할 수 있는 속성만 <xref:System.Data.IDataReader> 닫힙니다.</span><span class="sxs-lookup"><span data-stu-id="362ee-156"><xref:System.Data.IDataReader.IsClosed%2A> and <xref:System.Data.IDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.IDataReader> is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>