<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IColumnMapping.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5629af1bb538f3bedaa470d235b649870d17dbfab.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">629af1bb538f3bedaa470d235b649870d17dbfab</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.IColumnMapping">
          <source>Associates a data source column with a <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> column, and is implemented by the <ph id="ph2">&lt;see cref="T:System.Data.Common.DataColumnMapping" /&gt;</ph> class, which is used in common by .NET Framework data providers.</source>
          <target state="translated">데이터 소스 열을 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 열과 연결하며, .NET Framework 데이터 공급자들이 공통적으로 사용하는 <ph id="ph2">&lt;see cref="T:System.Data.Common.DataColumnMapping" /&gt;</ph> 클래스에 의해 구현됩니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IColumnMapping">
          <source>The <ph id="ph1">&lt;xref:System.Data.IColumnMapping&gt;</ph> interface enables an inheriting class to implement a Column Mapping class, which associates a data source column with a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> column.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.IColumnMapping&gt;</ph> 인터페이스는 데이터 원본 열에 연결 하는 열 매핑 클래스를 구현 하려면 상속 하는 클래스를 사용 하는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> 열입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IColumnMapping">
          <source>For more information, see <bpt id="p1">[</bpt>DataAdapter DataTable and DataColumn Mappings<ept id="p1">](~/docs/framework/data/adonet/dataadapter-datatable-and-datacolumn-mappings.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>DataAdapter DataTable 및 DataColumn 매핑<ept id="p1">](~/docs/framework/data/adonet/dataadapter-datatable-and-datacolumn-mappings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IColumnMapping">
          <source>An application does not create an instance of the <ph id="ph1">&lt;xref:System.Data.IColumnMapping&gt;</ph> interface directly, but creates an instance of a class that inherits <ph id="ph2">&lt;xref:System.Data.IColumnMapping&gt;</ph>.</source>
          <target state="translated">응용 프로그램의 인스턴스를 만들지 않습니다는 <ph id="ph1">&lt;xref:System.Data.IColumnMapping&gt;</ph> 인터페이스를 직접 상속 하는 클래스의 인스턴스를 만들고 있지만 <ph id="ph2">&lt;xref:System.Data.IColumnMapping&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IColumnMapping">
          <source>Classes that inherit <ph id="ph1">&lt;xref:System.Data.IColumnMapping&gt;</ph> must implement all inherited members, and typically define additional members to add provider-specific functionality.</source>
          <target state="translated">상속 된 클래스는 <ph id="ph1">&lt;xref:System.Data.IColumnMapping&gt;</ph> 상속 된 모든 멤버를 구현 하 고 일반적으로 공급자 특정 기능을 추가 하기 위한 추가 멤버를 정의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IColumnMapping">
          <source>For example, the <ph id="ph1">&lt;xref:System.Data.IColumnMapping&gt;</ph> interface defines the <ph id="ph2">&lt;xref:System.Data.IColumnMapping.DataSetColumn%2A&gt;</ph> property.</source>
          <target state="translated">예를 들어는 <ph id="ph1">&lt;xref:System.Data.IColumnMapping&gt;</ph> 인터페이스 정의 <ph id="ph2">&lt;xref:System.Data.IColumnMapping.DataSetColumn%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IColumnMapping">
          <source>In turn, the <ph id="ph1">&lt;xref:System.Data.Common.DataColumnMapping&gt;</ph> class inherits this property, and also defines the <ph id="ph2">&lt;xref:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction%2A&gt;</ph> method.</source>
          <target state="translated">차례로 <ph id="ph1">&lt;xref:System.Data.Common.DataColumnMapping&gt;</ph> 이 속성을 상속 하 고 정의 하는 클래스는 <ph id="ph2">&lt;xref:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IColumnMapping">
          <source>The following example creates an instance of the derived class, <ph id="ph1">&lt;xref:System.Data.Common.DataColumnMapping&gt;</ph>, and adds it to a <ph id="ph2">&lt;xref:System.Data.Common.DataColumnMappingCollection&gt;</ph> collection.</source>
          <target state="translated">다음 예제에서는 파생된 클래스의 인스턴스를 만들고 <ph id="ph1">&lt;xref:System.Data.Common.DataColumnMapping&gt;</ph>에 추가 <ph id="ph2">&lt;xref:System.Data.Common.DataColumnMappingCollection&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IColumnMapping">
          <source>It then tells the user that the mapping was added to the collection and shows the parent for the mapping.</source>
          <target state="translated">그런 다음 매핑을 컬렉션에 추가 된 및 매핑에 대 한 부모 표시 사용자 지시 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IColumnMapping">
          <source>When you inherit from the <ph id="ph1">&lt;see cref="T:System.Data.IColumnMapping" /&gt;</ph> interface, you should implement the following constructors:</source>
          <target state="translated">상속 하는 경우는 <ph id="ph1">&lt;see cref="T:System.Data.IColumnMapping" /&gt;</ph> 인터페이스를 다음 생성자를 구현 해야 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IColumnMapping">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Item</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 항목</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IColumnMapping">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 설명</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IColumnMapping">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> ColumnMapping()</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> ColumnMapping()</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IColumnMapping">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Initializes a new instance of the ColumnMapping class.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> ColumnMapping 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IColumnMapping">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> ColumnMapping(string sourceColumn, string dataSetColumn)</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> ColumnMapping (문자열 sourceColumn, 문자열 dataSetColumn)</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IColumnMapping">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Initializes a new instance of the ColumnMapping class with a source with the specified source column name and <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> column name.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 지정한 원본 열 이름과 소스를 사용 하 여 ColumnMapping 클래스의 새 인스턴스를 초기화 하 고 <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 열 이름입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.Data.IColumnMapping.DataSetColumn">
          <source>Gets or sets the name of the column within the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to map to.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>에서 매핑할 열의 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IColumnMapping.DataSetColumn">
          <source>The name of the column within the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to map to.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>에서 매핑할 열의 이름입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IColumnMapping.DataSetColumn">
          <source>The name is not case sensitive.</source>
          <target state="translated">이름은 대/소문자를 구분하지 않습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IColumnMapping.DataSetColumn">
          <source>The following example creates an instance of the derived class, <ph id="ph1">&lt;xref:System.Data.Common.DataColumnMapping&gt;</ph>, and sets its properties.</source>
          <target state="translated">다음 예제에서는 파생된 클래스의 인스턴스를 만들고 <ph id="ph1">&lt;xref:System.Data.Common.DataColumnMapping&gt;</ph>, 해당 속성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Data.IColumnMapping.SourceColumn">
          <source>Gets or sets the name of the column within the data source to map from.</source>
          <target state="translated">데이터 소스에서 매핑할 열의 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.Data.IColumnMapping.SourceColumn">
          <source>The name is case-sensitive.</source>
          <target state="translated">이름은 대/소문자를 구분합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IColumnMapping.SourceColumn">
          <source>The case-sensitive name of the column in the data source.</source>
          <target state="translated">데이터 소스의 열 이름(대/소문자 구분)입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IColumnMapping.SourceColumn">
          <source>The following example creates an instance of the derived class, <ph id="ph1">&lt;xref:System.Data.Common.DataColumnMapping&gt;</ph>, and sets its properties.</source>
          <target state="translated">다음 예제에서는 파생된 클래스의 인스턴스를 만들고 <ph id="ph1">&lt;xref:System.Data.Common.DataColumnMapping&gt;</ph>, 해당 속성을 설정 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>