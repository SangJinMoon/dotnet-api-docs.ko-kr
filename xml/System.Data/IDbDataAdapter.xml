<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IDbDataAdapter.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d5ad4617b21404fdfc9af0b0272a505fd2fb4f37.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d5ad4617b21404fdfc9af0b0272a505fd2fb4f37</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.IDbDataAdapter">
          <source>Represents a set of command-related properties that are used to fill the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> and update a data source, and is implemented by .NET Framework data providers that access relational databases.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>을 채우고 데이터 소스를 업데이트하는 데 사용되며 관계 데이터베이스에 액세스하는 .NET Framework 데이터 공급자에 의해 구현되는 명령 관련 속성 집합을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbDataAdapter">
          <source>The <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interface inherits from the <ph id="ph2">&lt;xref:System.Data.IDataAdapter&gt;</ph> interface and allows an object to create a DataAdapter designed for use with a relational database.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> 인터페이스에서 상속 된 <ph id="ph2">&lt;xref:System.Data.IDataAdapter&gt;</ph> 인터페이스 및 개체가 관계형 데이터베이스와 함께 사용 하기 위한 DataAdapter를 만들 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbDataAdapter">
          <source>The <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interface and, optionally, the utility class, <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>, allow an inheriting class to implement a DataAdapter class, which represents the bridge between a data source and a <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> 인터페이스와 유틸리티 클래스는 필요에 따라 <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>, 데이터 소스 간의 브리지를 나타내는 DataAdapter 클래스를 구현 하려면 상속 클래스 및 <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbDataAdapter">
          <source>For more information about DataAdapter classes, see <bpt id="p1">[</bpt>Populating a DataSet from a DataAdapter<ept id="p1">](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md)</ept>.</source>
          <target state="translated">DataAdapter 클래스에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>DataAdapter에서 DataSet 채우기<ept id="p1">](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbDataAdapter">
          <source>For more information about implementing .NET Framework data providers, see <bpt id="p1">[</bpt>&amp;#91;<ph id="ph1">\&lt;</ph>topic://cpconimplementingnetdataprovider&gt;&amp;#93;<ept id="p1">](http://msdn.microsoft.com/library/a9fa1926-071b-4c6f-997d-a16bac633852)</ept>.</source>
          <target state="translated">.NET Framework 데이터 공급자를 구현 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt> &amp;#91; <ph id="ph1">\&lt;</ph>topic://cpconimplementingnetdataprovider &gt;&amp;#93;<ept id="p1">](http://msdn.microsoft.com/library/a9fa1926-071b-4c6f-997d-a16bac633852)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbDataAdapter">
          <source>An application does not create an instance of the <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interface directly, but creates an instance of a class that inherits <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">응용 프로그램의 인스턴스를 만들지 않습니다는 <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> 인터페이스를 직접 상속 하는 클래스의 인스턴스를 만들고 있지만 <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbDataAdapter">
          <source>Classes that inherit <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> must implement the inherited members, and typically define additional members to add provider-specific functionality.</source>
          <target state="translated">상속 된 클래스는 <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> 상속 된 멤버를 구현 해야 하며 일반적으로 공급자 특정 기능을 추가 하기 위한 추가 멤버를 정의 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbDataAdapter">
          <source>For example, the <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interface defines the <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> property, and the <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> interface defines a <ph id="ph4">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt;</ph> method that takes a <ph id="ph5">&lt;xref:System.Data.DataTable&gt;</ph> as a parameter.</source>
          <target state="translated">예를 들어는 <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> 인터페이스 정의 <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> 속성, 및 <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> 인터페이스 정의 <ph id="ph4">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt;</ph> 를 받는 메서드에 <ph id="ph5">&lt;xref:System.Data.DataTable&gt;</ph> 매개 변수로 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbDataAdapter">
          <source>In turn, the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> class inherits the <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> property and the <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method, and also defines two additional overloads of the <ph id="ph4">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> method that take an ADO Recordset object as a parameter.</source>
          <target state="translated">차례로 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> 클래스 상속는 <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> 속성 및 <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> 메서드를 정의 추가 두 오버 로드는 <ph id="ph4">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> ADO 레코드 집합 개체를 매개 변수로 메서드.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbDataAdapter">
          <source>The following example uses the derived classes, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>, to select records from a data source.</source>
          <target state="translated">다음 예제에서는 파생된 클래스를 사용 하 여 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>, 데이터 원본에서 레코드를 선택 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbDataAdapter">
          <source>The filled <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is then returned.</source>
          <target state="translated">채워진 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbDataAdapter">
          <source>To accomplish this, the method is passed an initialized <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, a connection string, and a query string that is a Transact-SQL SELECT statement.</source>
          <target state="translated">이를 위해 메서드를 전달 초기화 된 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, 연결 문자열 및 쿼리 문자열은 TRANSACT-SQL SELECT 문입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbDataAdapter">
          <source>To promote consistency among .NET Framework data providers, name the inheriting class in the form <ph id="ph1">&lt;paramref name="Prv" /&gt;</ph> DataAdapter where <ph id="ph2">&lt;paramref name="Prv" /&gt;</ph> is the uniform prefix given to all classes in a specific .NET Framework data provider namespace.</source>
          <target state="translated">.NET Framework 데이터 공급자 간의 일관성으로 승격 하려면 폼에서 상속 하는 클래스 이름을 <ph id="ph1">&lt;paramref name="Prv" /&gt;</ph> DataAdapter 여기서 <ph id="ph2">&lt;paramref name="Prv" /&gt;</ph> 는 특정.NET Framework 데이터 공급자 네임 스페이스의 모든 클래스에 지정 된 일정 한 접두사입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbDataAdapter">
          <source>For example, <ph id="ph1">&lt;paramref name="Sql" /&gt;</ph> is the prefix of the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph> class in the <ph id="ph3">&lt;see langword="System.Data.SqlClient" /&gt;</ph> namespace.</source>
          <target state="translated">예를 들어 <ph id="ph1">&lt;paramref name="Sql" /&gt;</ph> 은의 접두사는 <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph> 클래스에 <ph id="ph3">&lt;see langword="System.Data.SqlClient" /&gt;</ph> 네임 스페이스입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbDataAdapter">
          <source>When you inherit from the <ph id="ph1">&lt;see cref="T:System.Data.IDbDataAdapter" /&gt;</ph> interface, you should implement the following constructors:</source>
          <target state="translated">상속 하는 경우는 <ph id="ph1">&lt;see cref="T:System.Data.IDbDataAdapter" /&gt;</ph> 인터페이스를 다음 생성자를 구현 해야 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbDataAdapter">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Item</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 항목</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbDataAdapter">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 설명</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbDataAdapter">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> PrvDataAdapter()</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> PrvDataAdapter()</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbDataAdapter">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Initializes a new instance of the PrvDataAdapter class.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> PrvDataAdapter 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbDataAdapter">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> PrvDataAdapter(PrvCommand selectCommand)</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> PrvDataAdapter (PrvCommand selectCommand)</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbDataAdapter">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Initializes a new instance of the PrvDataAdapter class with the specified SQL SELECT statement.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 지정 된 SQL SELECT 문 사용 하 여 PrvDataAdapter 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbDataAdapter">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> PrvDataAdapter(string selectCommandText, string selectConnectionString)</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> PrvDataAdapter (문자열 selectCommandText, 문자열 selectConnectionString)</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbDataAdapter">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Initializes a new instance of the PrvDataAdapter class with an SQL SELECT statement and a connection string.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> SQL SELECT 문과 연결 문자열을 사용 하 여 PrvDataAdapter 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbDataAdapter">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> PrvDataAdapter(string selectCommandText, PrvConnection selectConnection)</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> PrvDataAdapter (문자열 selectCommandText, PrvConnection selectConnection)</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbDataAdapter">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Initializes a new instance of the PrvDataAdapter class with an SQL SELECT statement and a PrvConnection object.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> SQL SELECT 문과 PrvConnection 개체를 사용 하 여 PrvDataAdapter 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Data.IDbDataAdapter.DeleteCommand">
          <source>Gets or sets an SQL statement for deleting records from the data set.</source>
          <target state="translated">데이터 집합에서 레코드를 삭제하기 위한 SQL 문을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbDataAdapter.DeleteCommand">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> used during <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> to delete records in the data source for deleted rows in the data set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph>을 수행하는 동안 데이터 집합의 삭제된 행에 대한 데이터 소스에서 레코드를 삭제하는 데 사용되는 <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbDataAdapter.DeleteCommand">
          <source>During <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, if this property is not set and primary key information is present in the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.IDbDataAdapter.DeleteCommand%2A&gt;</ph> can be generated automatically if you set the <ph id="ph4">`SelectCommand`</ph> property of a .NET Framework data provider.</source>
          <target state="translated">동안 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>경우이 속성은 설정 되지 않으며 기본 키 정보에 있는지는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.IDbDataAdapter.DeleteCommand%2A&gt;</ph> 설정 하는 경우 자동으로 생성할 수는 <ph id="ph4">`SelectCommand`</ph> .NET Framework 데이터 공급자의 속성입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbDataAdapter.DeleteCommand">
          <source>Then, any additional commands that you do not set are generated by the CommandBuilder.</source>
          <target state="translated">그런 다음 설정 하지 않으면 모든 추가 명령이 CommandBuilder에 의해 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbDataAdapter.DeleteCommand">
          <source>This generation logic requires key column information to be present in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">이 생성 논리는 키 열에 대 한 정보가 필요는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbDataAdapter.DeleteCommand">
          <source>For more information see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>commandbuilder 생성 명령을<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbDataAdapter.DeleteCommand">
          <source>When <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.DeleteCommand%2A&gt;</ph> is assigned to a previously created <ph id="ph2">&lt;xref:System.Data.IDbCommand&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.IDbCommand&gt;</ph> is not cloned.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.DeleteCommand%2A&gt;</ph> 할당 되는 이전에 만든 <ph id="ph2">&lt;xref:System.Data.IDbCommand&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.IDbCommand&gt;</ph> 가 복제 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbDataAdapter.DeleteCommand">
          <source>The <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.DeleteCommand%2A&gt;</ph> maintains a reference to the previously created <ph id="ph2">&lt;xref:System.Data.IDbCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.DeleteCommand%2A&gt;</ph> 이전에 만든에 대 한 참조를 유지 관리 <ph id="ph2">&lt;xref:System.Data.IDbCommand&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbDataAdapter.DeleteCommand">
          <source>The following example creates an instance of the inherited <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> class, and sets the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A&gt;</ph> properties.</source>
          <target state="translated">다음 예제에서는 상속된 된 인스턴스를 만듭니다 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> 클래스 및 집합은 <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbDataAdapter.DeleteCommand">
          <source>It assumes you have already created an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> object.</source>
          <target state="translated">이미 만든 것으로 간주 한 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.Data.IDbDataAdapter.InsertCommand">
          <source>Gets or sets an SQL statement used to insert new records into the data source.</source>
          <target state="translated">데이터 소스에 새 레코드를 삽입하는 데 사용되는 SQL 문을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbDataAdapter.InsertCommand">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> used during <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> to insert records in the data source for new rows in the data set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph>을 수행하는 동안 데이터 집합의 새 행에 대한 데이터 소스에 레코드를 삽입하는 데 사용되는 <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbDataAdapter.InsertCommand">
          <source>During <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, if this property is not set and primary key information is present in the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.IDbDataAdapter.InsertCommand%2A&gt;</ph> can be generated automatically if you set the <ph id="ph4">`SelectCommand`</ph> property of a .NET Framework data provider.</source>
          <target state="translated">동안 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>경우이 속성은 설정 되지 않으며 기본 키 정보에 있는지는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.IDbDataAdapter.InsertCommand%2A&gt;</ph> 설정 하는 경우 자동으로 생성할 수는 <ph id="ph4">`SelectCommand`</ph> .NET Framework 데이터 공급자의 속성입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbDataAdapter.InsertCommand">
          <source>Then, any additional commands that you do not set are generated by the CommandBuilder.</source>
          <target state="translated">그런 다음 설정 하지 않으면 모든 추가 명령이 CommandBuilder에 의해 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbDataAdapter.InsertCommand">
          <source>This generation logic requires key column information to be present in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">이 생성 논리는 키 열에 대 한 정보가 필요는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbDataAdapter.InsertCommand">
          <source>For more information see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>commandbuilder 생성 명령을<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbDataAdapter.InsertCommand">
          <source>When <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.InsertCommand%2A&gt;</ph> is assigned to a previously created <ph id="ph2">&lt;xref:System.Data.IDbCommand&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.IDbCommand&gt;</ph> is not cloned.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.InsertCommand%2A&gt;</ph> 할당 되는 이전에 만든 <ph id="ph2">&lt;xref:System.Data.IDbCommand&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.IDbCommand&gt;</ph> 가 복제 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbDataAdapter.InsertCommand">
          <source>The <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.InsertCommand%2A&gt;</ph> maintains a reference to the previously created <ph id="ph2">&lt;xref:System.Data.IDbCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.InsertCommand%2A&gt;</ph> 이전에 만든에 대 한 참조를 유지 관리 <ph id="ph2">&lt;xref:System.Data.IDbCommand&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbDataAdapter.InsertCommand">
          <source>If execution of this command returns rows, these rows may be added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> depending on how you set the <ph id="ph2">&lt;xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.IDbCommand&gt;</ph> object.</source>
          <target state="translated">이 명령 실행 하 여 행이 반환 하는 경우 이러한 행에 추가할 수 있습니다는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 어떻게 설정 하느냐에 따라는 <ph id="ph2">&lt;xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Data.IDbCommand&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbDataAdapter.InsertCommand">
          <source>The following example creates an instance of the inherited <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> class, and sets the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;</ph> properties.</source>
          <target state="translated">다음 예제에서는 상속된 된 인스턴스를 만듭니다 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> 클래스 및 집합은 <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbDataAdapter.InsertCommand">
          <source>It assumes you have already created an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> object.</source>
          <target state="translated">이미 만든 것으로 간주 한 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Data.IDbDataAdapter.SelectCommand">
          <source>Gets or sets an SQL statement used to select records in the data source.</source>
          <target state="translated">데이터 소스에서 레코드를 선택하는 데 사용되는 SQL 문을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbDataAdapter.SelectCommand">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> that is used during <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> to select records from data source for placement in the data set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph>을 수행하는 동안 데이터 소스에서 데이터 집합에 배치할 레코드를 선택하는 데 사용되는 <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbDataAdapter.SelectCommand">
          <source>When <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> is assigned to a previously created <ph id="ph2">&lt;xref:System.Data.IDbCommand&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.IDbCommand&gt;</ph> is not cloned.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> 할당 되는 이전에 만든 <ph id="ph2">&lt;xref:System.Data.IDbCommand&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.IDbCommand&gt;</ph> 가 복제 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbDataAdapter.SelectCommand">
          <source>The <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> maintains a reference to the previously created <ph id="ph2">&lt;xref:System.Data.IDbCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> 이전에 만든에 대 한 참조를 유지 관리 <ph id="ph2">&lt;xref:System.Data.IDbCommand&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbDataAdapter.SelectCommand">
          <source>If the <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> does not return any rows, no tables are added to the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, and no exception is raised.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> 모든 행을 반환 하지 않는에 테이블이 추가 되는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, 예외가 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbDataAdapter.SelectCommand">
          <source>The following example creates an instance of the inherited <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> class, and sets the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;</ph> properties.</source>
          <target state="translated">다음 예제에서는 상속된 된 인스턴스를 만듭니다 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> 클래스 및 집합은 <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbDataAdapter.SelectCommand">
          <source>It assumes you have already created an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> object.</source>
          <target state="translated">이미 만든 것으로 간주 한 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Data.IDbDataAdapter.UpdateCommand">
          <source>Gets or sets an SQL statement used to update records in the data source.</source>
          <target state="translated">데이터 소스에서 레코드를 업데이트하는 데 사용되는 SQL 문을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbDataAdapter.UpdateCommand">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> used during <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> to update records in the data source for modified rows in the data set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph>을 수행하는 동안 데이터 집합의 수정된 행에 대한 데이터 소스에서 레코드를 업데이트하는 데 사용되는 <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbDataAdapter.UpdateCommand">
          <source>During <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, if this property is not set and primary key information is present in the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.IDbDataAdapter.UpdateCommand%2A&gt;</ph> can be generated automatically if you set the <ph id="ph4">`SelectCommand`</ph> property of a .NET Framework data provider.</source>
          <target state="translated">동안 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>경우이 속성은 설정 되지 않으며 기본 키 정보에 있는지는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.IDbDataAdapter.UpdateCommand%2A&gt;</ph> 설정 하는 경우 자동으로 생성할 수는 <ph id="ph4">`SelectCommand`</ph> .NET Framework 데이터 공급자의 속성입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbDataAdapter.UpdateCommand">
          <source>Then, any additional commands that you do not set are generated by the CommandBuilder.</source>
          <target state="translated">그런 다음 설정 하지 않으면 모든 추가 명령이 CommandBuilder에 의해 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbDataAdapter.UpdateCommand">
          <source>This generation logic requires key column information to be present in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">이 생성 논리는 키 열에 대 한 정보가 필요는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbDataAdapter.UpdateCommand">
          <source>For more information see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>commandbuilder 생성 명령을<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbDataAdapter.UpdateCommand">
          <source>When <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.UpdateCommand%2A&gt;</ph> is assigned to a previously created <ph id="ph2">&lt;xref:System.Data.IDbCommand&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.IDbCommand&gt;</ph> is not cloned.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.UpdateCommand%2A&gt;</ph> 할당 되는 이전에 만든 <ph id="ph2">&lt;xref:System.Data.IDbCommand&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.IDbCommand&gt;</ph> 가 복제 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbDataAdapter.UpdateCommand">
          <source>The <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.UpdateCommand%2A&gt;</ph> maintains a reference to the previously created <ph id="ph2">&lt;xref:System.Data.IDbCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.UpdateCommand%2A&gt;</ph> 이전에 만든에 대 한 참조를 유지 관리 <ph id="ph2">&lt;xref:System.Data.IDbCommand&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbDataAdapter.UpdateCommand">
          <source>If execution of this command returns rows, these rows are added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">에 이러한 행이 추가 행을 반환 하는이 명령 실행 하는 경우는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbDataAdapter.UpdateCommand">
          <source>The following example creates an instance of the inherited <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> class, and sets the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A&gt;</ph> properties.</source>
          <target state="translated">다음 예제에서는 상속된 된 인스턴스를 만듭니다 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> 클래스 및 집합은 <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbDataAdapter.UpdateCommand">
          <source>It assumes you have already created an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> object.</source>
          <target state="translated">이미 만든 것으로 간주 한 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> 개체입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>