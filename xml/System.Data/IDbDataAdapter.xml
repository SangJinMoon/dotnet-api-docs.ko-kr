<Type Name="IDbDataAdapter" FullName="System.Data.IDbDataAdapter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d3d3320f5641ca0cd337941446b509047e049423" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36745772" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDbDataAdapter : System.Data.IDataAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDbDataAdapter implements class System.Data.IDataAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDbDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDbDataAdapter&#xA;Implements IDataAdapter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDbDataAdapter : System::Data::IDataAdapter" />
  <TypeSignature Language="F#" Value="type IDbDataAdapter = interface&#xA;    interface IDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataAdapter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <see cref="T:System.Data.DataSet" />을 채우고 데이터 소스를 업데이트하는 데 사용되며 관계 데이터베이스에 액세스하는 .NET Framework 데이터 공급자에 의해 구현되는 명령 관련 속성 집합을 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.IDbDataAdapter> 인터페이스에서 상속 된 <xref:System.Data.IDataAdapter> 인터페이스 및 개체가 관계형 데이터베이스와 함께 사용 하기 위한 DataAdapter를 만들 수 있도록 합니다. <xref:System.Data.IDbDataAdapter> 인터페이스와 유틸리티 클래스는 필요에 따라 <xref:System.Data.Common.DbDataAdapter>, 데이터 소스 간의 브리지를 나타내는 DataAdapter 클래스를 구현 하려면 상속 클래스 및 <xref:System.Data.DataSet>합니다. DataAdapter 클래스에 대 한 자세한 내용은 참조 [DataAdapter에서 DataSet 채우기](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md)합니다. .NET Framework 데이터 공급자를 구현 하는 방법에 대 한 자세한 내용은 참조 [ &#91; \<topic://cpconimplementingnetdataprovider >&#93;](http://msdn.microsoft.com/library/a9fa1926-071b-4c6f-997d-a16bac633852)합니다.  
  
 응용 프로그램의 인스턴스를 만들지 않습니다는 <xref:System.Data.IDbDataAdapter> 인터페이스를 직접 상속 하는 클래스의 인스턴스를 만들고 있지만 <xref:System.Data.IDbDataAdapter> 및 <xref:System.Data.Common.DbDataAdapter>합니다.  
  
 상속 된 클래스는 <xref:System.Data.IDbDataAdapter> 상속 된 멤버를 구현 해야 하며 일반적으로 공급자 특정 기능을 추가 하기 위한 추가 멤버를 정의 합니다. 예를 들어는 <xref:System.Data.IDbDataAdapter> 인터페이스 정의 <xref:System.Data.IDbDataAdapter.SelectCommand%2A> 속성, 및 <xref:System.Data.Common.DbDataAdapter> 인터페이스 정의 <xref:System.Data.IDataAdapter.Fill%2A> 를 받는 메서드에 <xref:System.Data.DataTable> 매개 변수로 합니다. 차례로 <xref:System.Data.OleDb.OleDbDataAdapter> 클래스 상속는 <xref:System.Data.IDbDataAdapter.SelectCommand%2A> 속성 및 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 메서드를 정의 추가 두 오버 로드는 <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> ADO 레코드 집합 개체를 매개 변수로 메서드.  
  
   
  
## Examples  
 다음 예제에서는 파생된 클래스를 사용 하 여 <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlDataAdapter> 및 <xref:System.Data.SqlClient.SqlConnection>, 데이터 원본에서 레코드를 선택 합니다. 채워진 <xref:System.Data.DataSet> 반환 됩니다. 이를 위해 메서드를 전달 초기화 된 <xref:System.Data.DataSet>, 연결 문자열 및 쿼리 문자열은 TRANSACT-SQL SELECT 문입니다.  
  
 [!code-csharp[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>.NET Framework 데이터 공급자 간의 일관성으로 승격 하려면 폼에서 상속 하는 클래스 이름을 <paramref name="Prv" /> DataAdapter 여기서 <paramref name="Prv" /> 는 특정.NET Framework 데이터 공급자 네임 스페이스의 모든 클래스에 지정 된 일정 한 접두사입니다. 예를 들어 <paramref name="Sql" /> 은의 접두사는 <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> 클래스에 <see langword="System.Data.SqlClient" /> 네임 스페이스입니다.  상속 하는 경우는 <see cref="T:System.Data.IDbDataAdapter" /> 인터페이스를 다음 생성자를 구현 해야: <list type="table"><listheader><term> 항목 </term><description> 설명 </description></listheader><item><term> PrvDataAdapter() </term><description> PrvDataAdapter 클래스의 새 인스턴스를 초기화 합니다.  </description></item><item><term> PrvDataAdapter (PrvCommand selectCommand) </term><description> 지정 된 SQL SELECT 문 사용 하 여 PrvDataAdapter 클래스의 새 인스턴스를 초기화 합니다.  </description></item><item><term> (문자열 selectCommandText, 문자열 selectConnectionString) PrvDataAdapter </term><description> SQL SELECT 문 및 연결 문자열을 사용 하 여 PrvDataAdapter 클래스의 새 인스턴스를 초기화 합니다.  </description></item><item><term> (문자열 selectCommandText, PrvConnection selectConnection) PrvDataAdapter </term><description> 는 SQL SELECT 문과 PrvConnection 개체를 사용 하 여 PrvDataAdapter 클래스의 새 인스턴스를 초기화 합니다.  </description></item></list></para>
    </block>
  </Docs>
  <Members>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 집합에서 레코드를 삭제하기 위한 SQL 문을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Data.IDbCommand" />을 수행하는 동안 데이터 집합의 삭제된 행에 대한 데이터 소스에서 레코드를 삭제하는 데 사용되는 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 동안 <xref:System.Data.Common.DbDataAdapter.Update%2A>경우이 속성은 설정 되지 않으며 기본 키 정보에 있는지는 <xref:System.Data.DataSet>, <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> 설정 하는 경우 자동으로 생성할 수는 `SelectCommand` .NET Framework 데이터 공급자의 속성입니다. 그런 다음 설정 하지 않으면 모든 추가 명령이 CommandBuilder에 의해 생성 됩니다. 이 생성 논리는 키 열에 대 한 정보가 필요는 <xref:System.Data.DataSet>합니다. 자세한 내용은 참조 [commandbuilder 생성 명령을](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)합니다.  
  
 때 <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> 할당 되는 이전에 만든 <xref:System.Data.IDbCommand>, <xref:System.Data.IDbCommand> 가 복제 되지 않습니다. <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> 이전에 만든에 대 한 참조를 유지 관리 <xref:System.Data.IDbCommand> 개체입니다.  
  
   
  
## Examples  
 다음 예제에서는 상속된 된 인스턴스를 만듭니다 <xref:System.Data.OleDb.OleDbDataAdapter> 클래스 및 집합은 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> 및 <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> 속성입니다. 이미 만든 것으로 간주 한 <xref:System.Data.OleDb.OleDbConnection> 개체입니다.  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 소스에 새 레코드를 삽입하는 데 사용되는 SQL 문을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Data.IDbCommand" />을 수행하는 동안 데이터 집합의 새 행에 대한 데이터 소스에 레코드를 삽입하는 데 사용되는 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 동안 <xref:System.Data.Common.DbDataAdapter.Update%2A>경우이 속성은 설정 되지 않으며 기본 키 정보에 있는지는 <xref:System.Data.DataSet>, <xref:System.Data.IDbDataAdapter.InsertCommand%2A> 설정 하는 경우 자동으로 생성할 수는 `SelectCommand` .NET Framework 데이터 공급자의 속성입니다. 그런 다음 설정 하지 않으면 모든 추가 명령이 CommandBuilder에 의해 생성 됩니다. 이 생성 논리는 키 열에 대 한 정보가 필요는 <xref:System.Data.DataSet>합니다. 자세한 내용은 참조 [commandbuilder 생성 명령을](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)합니다.  
  
 때 <xref:System.Data.IDbDataAdapter.InsertCommand%2A> 할당 되는 이전에 만든 <xref:System.Data.IDbCommand>, <xref:System.Data.IDbCommand> 가 복제 되지 않습니다. <xref:System.Data.IDbDataAdapter.InsertCommand%2A> 이전에 만든에 대 한 참조를 유지 관리 <xref:System.Data.IDbCommand> 개체입니다.  
  
> [!NOTE]
>  이 명령 실행 하 여 행이 반환 하는 경우 이러한 행에 추가할 수 있습니다는 <xref:System.Data.DataSet> 어떻게 설정 하느냐에 따라는 <xref:System.Data.IDbCommand.UpdatedRowSource%2A> 의 속성은 <xref:System.Data.IDbCommand> 개체입니다.  
  
   
  
## Examples  
 다음 예제에서는 상속된 된 인스턴스를 만듭니다 <xref:System.Data.OleDb.OleDbDataAdapter> 클래스 및 집합은 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> 및 <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> 속성입니다. 이미 만든 것으로 간주 한 <xref:System.Data.OleDb.OleDbConnection> 개체입니다.  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 소스에서 레코드를 선택하는 데 사용되는 SQL 문을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Data.IDbCommand" />을 수행하는 동안 데이터 소스에서 데이터 집합에 배치할 레코드를 선택하는 데 사용되는 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때 <xref:System.Data.IDbDataAdapter.SelectCommand%2A> 할당 되는 이전에 만든 <xref:System.Data.IDbCommand>, <xref:System.Data.IDbCommand> 가 복제 되지 않습니다. <xref:System.Data.IDbDataAdapter.SelectCommand%2A> 이전에 만든에 대 한 참조를 유지 관리 <xref:System.Data.IDbCommand> 개체입니다.  
  
 경우는 <xref:System.Data.IDbDataAdapter.SelectCommand%2A> 모든 행을 반환 하지 않는에 테이블이 추가 되는 <xref:System.Data.DataSet>, 예외가 발생 하지 않습니다.  
  
   
  
## Examples  
 다음 예제에서는 상속된 된 인스턴스를 만듭니다 <xref:System.Data.OleDb.OleDbDataAdapter> 클래스 및 집합은 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> 및 <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> 속성입니다. 이미 만든 것으로 간주 한 <xref:System.Data.OleDb.OleDbConnection> 개체입니다.  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 소스에서 레코드를 업데이트하는 데 사용되는 SQL 문을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Data.IDbCommand" />을 수행하는 동안 데이터 집합의 수정된 행에 대한 데이터 소스에서 레코드를 업데이트하는 데 사용되는 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 동안 <xref:System.Data.Common.DbDataAdapter.Update%2A>경우이 속성은 설정 되지 않으며 기본 키 정보에 있는지는 <xref:System.Data.DataSet>, <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> 설정 하는 경우 자동으로 생성할 수는 `SelectCommand` .NET Framework 데이터 공급자의 속성입니다. 그런 다음 설정 하지 않으면 모든 추가 명령이 CommandBuilder에 의해 생성 됩니다. 이 생성 논리는 키 열에 대 한 정보가 필요는 <xref:System.Data.DataSet>합니다. 자세한 내용은 참조 [commandbuilder 생성 명령을](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)합니다.  
  
 때 <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> 할당 되는 이전에 만든 <xref:System.Data.IDbCommand>, <xref:System.Data.IDbCommand> 가 복제 되지 않습니다. <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> 이전에 만든에 대 한 참조를 유지 관리 <xref:System.Data.IDbCommand> 개체입니다.  
  
> [!NOTE]
>  에 이러한 행이 추가 행을 반환 하는이 명령 실행 하는 경우는 <xref:System.Data.DataSet>합니다.  
  
   
  
## Examples  
 다음 예제에서는 상속된 된 인스턴스를 만듭니다 <xref:System.Data.OleDb.OleDbDataAdapter> 클래스 및 집합은 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> 및 <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> 속성입니다. 이미 만든 것으로 간주 한 <xref:System.Data.OleDb.OleDbConnection> 개체입니다.  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>