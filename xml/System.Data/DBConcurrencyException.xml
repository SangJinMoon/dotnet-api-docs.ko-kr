<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DBConcurrencyException.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-567ae5a" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c5b04be-ac4f-4958-bcde-0afae05845523f46815dfffc12b40be7f8658173e67a63098570.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3f46815dfffc12b40be7f8658173e67a63098570</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3507e865a3613c00760f25ad1045aaa11bae4dd8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/23/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.DBConcurrencyException">
          <source>The exception that is thrown by the <ph id="ph1">&lt;see cref="T:System.Data.Common.DataAdapter" /&gt;</ph> during an insert, update, or delete operation if the number of rows affected equals zero.</source>
          <target state="translated">영향을 받는 행의 수가 0인 경우 삽입, 업데이트 또는 삭제 작업 동안 <ph id="ph1">&lt;see cref="T:System.Data.Common.DataAdapter" /&gt;</ph>에서 throw되는 예외입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DBConcurrencyException">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> examines the number of rows affected by the execution of each insert, update, or delete operation, and throws this exception if the number equals zero.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> 각 삽입, 업데이트 또는 삭제 작업을 실행 하 여 영향을 받는 행 수를 검사 하 고 수가 0 인 경우이 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DBConcurrencyException">
          <source>This exception is generally caused by a concurrency violation.</source>
          <target state="translated">이 예외는 일반적으로 동시성 위반이 발생 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Data.DBConcurrencyException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DBConcurrencyException.#ctor">
          <source>The default constructor initializes any fields to their default values.</source>
          <target state="translated">기본 생성자는 모든 필드를 기본값으로 초기화합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String)">
          <source>The text string describing the details of the exception.</source>
          <target state="translated">예외를 자세히 설명하는 텍스트 문자열입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
          <source>The text string describing the details of the exception.</source>
          <target state="translated">예외를 자세히 설명하는 텍스트 문자열입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
          <source>A reference to an inner exception.</source>
          <target state="translated">내부 예외에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
          <source>You can create a new exception that catches an earlier exception.</source>
          <target state="translated">이전 예외를 catch 하는 새 예외를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
          <source>The code that handles the second exception can use the additional information from the earlier exception, also called an inner exception, to examine the cause of the initial error.</source>
          <target state="translated">두 번째 예외를 처리 하는 코드 내부 예외가 라고도 하는 이전 예외에서 추가 정보를 사용 하 여 초기 오류를 검사 하 수 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])">
          <source>The error message that explains the reason for this exception.</source>
          <target state="translated">이 예외의 원인을 설명하는 오류 메시지입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])">
          <source>The exception that is the cause of the current exception, or a null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic) if no inner exception is specified.</source>
          <target state="translated">현재 예외를 발생시킨 예외이거나 내부 예외를 지정하지 않은 경우 null 참조(Visual Basic에서는 <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>)입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])">
          <source>An array containing the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects whose update failure generated this exception.</source>
          <target state="translated">업데이트에 실패하여 이 예외를 생성한 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 개체가 들어 있는 배열입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="T:System.Data.DBConcurrencyException">
          <source>Copies the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects whose update failure generated this exception to the specified array.</source>
          <target state="translated">업데이트에 실패하여 이 예외를 생성한 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 개체를 지정된 배열에 복사합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])">
          <source>The one-dimensional array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects to copy the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects into.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 개체를 복사할 대상인 <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 개체의 1차원 배열입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])">
          <source>Copies the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects whose update failure generated this exception, to the specified array of <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects.</source>
          <target state="translated">업데이트에 실패하여 이 예외를 생성한 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 개체를 지정된 <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 개체 배열에 복사합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])">
          <source>When performing batch updates with the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> set to <ph id="ph3">`true`</ph>, this exception is thrown if all row updates fail.</source>
          <target state="translated">일괄 업데이트를 수행할 때의 <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> 로 설정 <ph id="ph3">`true`</ph>, 모두 행 업데이트에 실패 하는 경우이 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])">
          <source>In this case, this <ph id="ph1">&lt;xref:System.Data.DBConcurrencyException&gt;</ph> contains <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> objects for all rows whose update failed, rather than just the one <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> object in <ph id="ph4">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph>, and the affected <ph id="ph5">&lt;xref:System.Data.DataRow&gt;</ph> objects can be retrieved by calling <ph id="ph6">&lt;xref:System.Data.DBConcurrencyException.CopyToRows%2A&gt;</ph>.</source>
          <target state="translated">이 경우이 <ph id="ph1">&lt;xref:System.Data.DBConcurrencyException&gt;</ph> 포함 <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> 변환기 업데이트에 실패 하는 모든 행에 대 한 개체 <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> 개체 <ph id="ph4">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph>, 영향을 받는 <ph id="ph5">&lt;xref:System.Data.DataRow&gt;</ph> 호출 하 여 개체를 검색할 수 <ph id="ph6">&lt;xref:System.Data.DBConcurrencyException.CopyToRows%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)">
          <source>The one-dimensional array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects to copy the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects into.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 개체를 복사할 대상인 <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 개체의 1차원 배열입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)">
          <source>The destination array index to start copying into.</source>
          <target state="translated">복사를 시작할 대상 배열 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)">
          <source>Copies the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects whose update failure generated this exception, to the specified array of <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects, starting at the specified destination array index.</source>
          <target state="translated">업데이트에 실패하여 이 예외를 생성한 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 개체를 지정된 <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 개체 배열의 지정된 대상 배열 인덱스에서 시작하는 위치에 복사합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)">
          <source>When performing batch updates with the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> set to <ph id="ph3">`true`</ph>, this exception is thrown if all row updates fail.</source>
          <target state="translated">일괄 업데이트를 수행할 때의 <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> 로 설정 <ph id="ph3">`true`</ph>, 모두 행 업데이트에 실패 하는 경우이 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)">
          <source>In this case, this <ph id="ph1">&lt;xref:System.Data.DBConcurrencyException&gt;</ph> contains <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> objects for all rows whose update failed, rather than just the one <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> object in <ph id="ph4">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph>, and the affected <ph id="ph5">&lt;xref:System.Data.DataRow&gt;</ph> objects can be retrieved by calling <ph id="ph6">&lt;xref:System.Data.DBConcurrencyException.CopyToRows%2A&gt;</ph>.</source>
          <target state="translated">이 경우이 <ph id="ph1">&lt;xref:System.Data.DBConcurrencyException&gt;</ph> 포함 <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> 변환기 업데이트에 실패 하는 모든 행에 대 한 개체 <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> 개체 <ph id="ph4">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph>, 영향을 받는 <ph id="ph5">&lt;xref:System.Data.DataRow&gt;</ph> 호출 하 여 개체를 검색할 수 <ph id="ph6">&lt;xref:System.Data.DBConcurrencyException.CopyToRows%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> that holds the serialized data associated with the <ph id="ph2">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>과 연결된 serialize된 개체가 들어 있는 <ph id="ph2">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that contains the source and destination of the serialized stream associated with the <ph id="ph2">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>과 연결된 serialize된 스트림의 소스와 대상이 들어 있는 <ph id="ph2">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Populates the aprcified serialization information object with the data needed to serialize the <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph>.</source>
          <target state="translated">지정된 serialization 정보 개체를 <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph>을 serialize하는 데 필요한 데이터로 채웁니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;paramref name="info" /&gt;</ph> parameter is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="info" /&gt;</ph>매개 변수가 null 참조(Visual Basic에서는 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>)인 경우</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.Data.DBConcurrencyException.Row">
          <source>Gets or sets the value of the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> that generated the <ph id="ph2">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>을 생성한 <ph id="ph2">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph>의 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DBConcurrencyException.Row">
          <source>The value of the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>의 값입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DBConcurrencyException.Row">
          <source>Use <ph id="ph1">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph> to retrieve the value of the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> row that generated the <ph id="ph3">&lt;xref:System.Data.DBConcurrencyException&gt;</ph>.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph> 의 값을 검색 하는 <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> 생성 되는 행의 <ph id="ph3">&lt;xref:System.Data.DBConcurrencyException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DBConcurrencyException.Row">
          <source>Setting the value of the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> has no effect.</source>
          <target state="translated">값으로 설정 된 <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> 영향을 주지 않습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DBConcurrencyException.Row">
          <source>When performing batch updates with the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> set to <ph id="ph3">`true`</ph>, this exception is thrown if all row updates fail.</source>
          <target state="translated">일괄 업데이트를 수행할 때의 <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> 로 설정 <ph id="ph3">`true`</ph>, 모두 행 업데이트에 실패 하는 경우이 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DBConcurrencyException.Row">
          <source>In this case, this <ph id="ph1">&lt;xref:System.Data.DBConcurrencyException&gt;</ph> contains <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> objects for all rows whose update failed, rather than just the one <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> object in <ph id="ph4">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph>, and the affected <ph id="ph5">&lt;xref:System.Data.DataRow&gt;</ph> objects can be retrieved by calling <ph id="ph6">&lt;xref:System.Data.DBConcurrencyException.CopyToRows%2A&gt;</ph>.</source>
          <target state="translated">이 경우이 <ph id="ph1">&lt;xref:System.Data.DBConcurrencyException&gt;</ph> 포함 <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> 변환기 업데이트에 실패 하는 모든 행에 대 한 개체 <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> 개체 <ph id="ph4">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph>, 영향을 받는 <ph id="ph5">&lt;xref:System.Data.DataRow&gt;</ph> 호출 하 여 개체를 검색할 수 <ph id="ph6">&lt;xref:System.Data.DBConcurrencyException.CopyToRows%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DBConcurrencyException.Row">
          <source>Serialization support does not exist for <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> objects.</source>
          <target state="translated">Serialization 지원에 대해 존재 하지 않는 <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DBConcurrencyException.Row">
          <source>Therefore, if you serialize a <ph id="ph1">&lt;xref:System.Data.DBConcurrencyException&gt;</ph> object, the value of the <ph id="ph2">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph> property in the serialized version of the object is set to a null value.</source>
          <target state="translated">따라서 serialize 하는 경우는 <ph id="ph1">&lt;xref:System.Data.DBConcurrencyException&gt;</ph> 값, 개체는 <ph id="ph2">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph> 개체의 serialize 된 버전에서 속성을 null 값으로 설정 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Data.DBConcurrencyException.RowCount">
          <source>Gets the number of rows whose update failed, generating this exception.</source>
          <target state="translated">업데이트에 실패하여 이 예외를 생성한 행의 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DBConcurrencyException.RowCount">
          <source>An integer containing a count of the number of rows whose update failed.</source>
          <target state="translated">업데이트에 실패한 행의 수가 들어 있는 정수입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>