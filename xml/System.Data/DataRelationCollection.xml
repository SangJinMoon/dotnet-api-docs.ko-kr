<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DataRelationCollection.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f9a4f928291a5de9ef26ef15e60ffc07f0353d6d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9a4f928291a5de9ef26ef15e60ffc07f0353d6d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.DataRelationCollection">
          <source>Represents the collection of <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> objects for this <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph>에 대한 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 개체의 컬렉션을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataRelationCollection">
          <source>A <ph id="ph1">&lt;xref:System.Data.DataRelationCollection&gt;</ph> object enables navigation between related parent/child <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Data.DataRelationCollection&gt;</ph> 개체를 사용 하면 관련 된 부모/자식 간의 탐색 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataRelationCollection">
          <source>You create a <ph id="ph1">&lt;xref:System.Data.DataRelationCollection&gt;</ph> object by defining it as a property of either the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> or the <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>, instead of by directly using a constructor.</source>
          <target state="translated">만들는 <ph id="ph1">&lt;xref:System.Data.DataRelationCollection&gt;</ph> 개체의 속성으로 정의 하 여는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>, 대신 직접 생성자를 사용 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataRelationCollection">
          <source>(Use the <ph id="ph1">&lt;xref:System.Data.DataSet.Relations%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, or the <ph id="ph3">&lt;xref:System.Data.DataTable.ParentRelations%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.)</source>
          <target state="translated">(사용 하 여는 <ph id="ph1">&lt;xref:System.Data.DataSet.Relations%2A&gt;</ph> 속성의는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, 또는 <ph id="ph3">&lt;xref:System.Data.DataTable.ParentRelations%2A&gt;</ph> 의 속성은 <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.)</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataRelationCollection">
          <source>To access the collection, use the <ph id="ph1">&lt;xref:System.Data.DataSet.Relations%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> object.</source>
          <target state="translated">컬렉션에 액세스 하려면 사용 하 여는 <ph id="ph1">&lt;xref:System.Data.DataSet.Relations%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataRelationCollection">
          <source>As soon as the collection exists you can manage the objects it contains by using methods such as <ph id="ph1">&lt;xref:System.Data.DataRelationCollection.Add%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.DataRelationCollection.Clear%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Data.DataRelationCollection.Remove%2A&gt;</ph>.</source>
          <target state="translated">와 같은 방법을 사용 하 여 포함 하는 개체를 관리할 수 있습니다 컬렉션에 존재 하는 즉시 <ph id="ph1">&lt;xref:System.Data.DataRelationCollection.Add%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.DataRelationCollection.Clear%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Data.DataRelationCollection.Remove%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataRelationCollection">
          <source>This type is safe for multithreaded read operations.</source>
          <target state="translated">이 형식은 다중 스레드 읽기 작업에 안전 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataRelationCollection">
          <source>You must synchronize any write operations.</source>
          <target state="translated">쓰기 작업을 동기화 해야 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DataRelationCollection" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataRelationCollection" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="T:System.Data.DataRelationCollection">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> to the <ph id="ph2">&lt;see cref="T:System.Data.DataRelationCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph>에 <ph id="ph2">&lt;see cref="T:System.Data.DataRelationCollection" /&gt;</ph>를 추가합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.Data.DataRelation)">
          <source>The <ph id="ph1">&lt;see langword="DataRelation" /&gt;</ph> to add to the collection.</source>
          <target state="translated">컬렉션에 추가할 <ph id="ph1">&lt;see langword="DataRelation" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.Data.DataRelation)">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> to the <ph id="ph2">&lt;see cref="T:System.Data.DataRelationCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph>에 <ph id="ph2">&lt;see cref="T:System.Data.DataRelationCollection" /&gt;</ph>를 추가합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRelationCollection.Add(System.Data.DataRelation)">
          <source>If the relation is successfully added to the collection, the <ph id="ph1">&lt;xref:System.Data.DataRelationCollection.CollectionChanged&gt;</ph> event occurs.</source>
          <target state="translated">관계를 컬렉션에 성공적으로 추가 되는 경우는 <ph id="ph1">&lt;xref:System.Data.DataRelationCollection.CollectionChanged&gt;</ph> 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRelationCollection.Add(System.Data.DataRelation)">
          <source>When a <ph id="ph1">&lt;xref:System.Data.DataRelation&gt;</ph> object is added to the collection, <ph id="ph2">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.UniqueConstraint&gt;</ph> objects are created by default if they do not already exist.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Data.DataRelation&gt;</ph> 개체가 컬렉션에 추가 된 <ph id="ph2">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Data.UniqueConstraint&gt;</ph> 개체가 존재 하지 않을 경우 기본적으로 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.Data.DataRelation)">
          <source>The <ph id="ph1">&lt;paramref name="relation" /&gt;</ph> parameter is a null value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="relation" /&gt;</ph> 매개 변수가 null 값인 경우</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.Data.DataRelation)">
          <source>The relation already belongs to this collection, or it belongs to another collection.</source>
          <target state="translated">관계가 이 컬렉션에 이미 속해 있거나 다른 컬렉션에 속한 경우</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.Data.DataRelation)">
          <source>The collection already has a relation with the specified name.</source>
          <target state="translated">지정된 이름의 관계가 컬렉션에 이미 있는 경우.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.Data.DataRelation)">
          <source>(The comparison is not case sensitive.)</source>
          <target state="translated">대/소문자를 구분하지 않고 비교합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.Data.DataRelation)">
          <source>The relation has entered an invalid state since it was created.</source>
          <target state="translated">관계를 만든 후 관계에 잘못된 상태를 입력한 경우</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)">
          <source>The parent column of the relation.</source>
          <target state="translated">이 관계의 부모 열입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)">
          <source>The child column of the relation.</source>
          <target state="translated">해당 관계의 자식 열입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> with a specified parent and child column, and adds it to the collection.</source>
          <target state="translated">지정된 부모 및 자식 열을 사용하여 <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph>을 만든 다음 이를 컬렉션에 추가합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)">
          <source>The created relation.</source>
          <target state="translated">만든 관계를 반환합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)">
          <source>When a <ph id="ph1">&lt;xref:System.Data.DataRelation&gt;</ph> object is added to the collection, <ph id="ph2">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.UniqueConstraint&gt;</ph> objects are created by default if they do not already exist.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Data.DataRelation&gt;</ph> 개체가 컬렉션에 추가 된 <ph id="ph2">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Data.UniqueConstraint&gt;</ph> 개체가 존재 하지 않을 경우 기본적으로 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])">
          <source>The parent columns of the relation.</source>
          <target state="translated">이 관계의 부모 열입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])">
          <source>The child columns of the relation.</source>
          <target state="translated">해당 관계의 자식 열입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> with the specified parent and child columns, and adds it to the collection.</source>
          <target state="translated">지정된 부모 및 자식 열을 사용하여 <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph>을 만든 다음 이를 컬렉션에 추가합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])">
          <source>The created relation.</source>
          <target state="translated">만든 관계를 반환합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])">
          <source>When a <ph id="ph1">&lt;xref:System.Data.DataRelation&gt;</ph> object is added to the collection, <ph id="ph2">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.UniqueConstraint&gt;</ph> objects are created by default if they do not already exist.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Data.DataRelation&gt;</ph> 개체가 컬렉션에 추가 된 <ph id="ph2">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Data.UniqueConstraint&gt;</ph> 개체가 존재 하지 않을 경우 기본적으로 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])">
          <source>The <ph id="ph1">&lt;paramref name="relation" /&gt;</ph> argument is a null value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="relation" /&gt;</ph> 인수가 null 값인 경우</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])">
          <source>The relation already belongs to this collection, or it belongs to another collection.</source>
          <target state="translated">관계가 이 컬렉션에 이미 속해 있거나 다른 컬렉션에 속한 경우</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])">
          <source>The collection already has a relation with the same name.</source>
          <target state="translated">컬렉션에 이름이 같은 관계가 이미 있는 경우.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])">
          <source>(The comparison is not case sensitive.)</source>
          <target state="translated">대/소문자를 구분하지 않고 비교합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])">
          <source>The relation has entered an invalid state since it was created.</source>
          <target state="translated">관계를 만든 후 관계에 잘못된 상태를 입력한 경우</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
          <source>The name of the relation.</source>
          <target state="translated">관계의 이름입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
          <source>The parent column of the relation.</source>
          <target state="translated">이 관계의 부모 열입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
          <source>The child column of the relation.</source>
          <target state="translated">해당 관계의 자식 열입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> with the specified name, and parent and child columns, and adds it to the collection.</source>
          <target state="translated">지정된 이름, 부모 및 자식 열을 사용하여 <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph>을 만든 다음 이를 컬렉션에 추가합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
          <source>The created relation.</source>
          <target state="translated">만든 관계를 반환합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
          <source>When a <ph id="ph1">&lt;xref:System.Data.DataRelation&gt;</ph> object is added to the collection, <ph id="ph2">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.UniqueConstraint&gt;</ph> objects are created by default if they do not already exist.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Data.DataRelation&gt;</ph> 개체가 컬렉션에 추가 된 <ph id="ph2">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Data.UniqueConstraint&gt;</ph> 개체가 존재 하지 않을 경우 기본적으로 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
          <source>The name of the <ph id="ph1">&lt;see langword="DataRelation" /&gt;</ph> to create.</source>
          <target state="translated">만들 <ph id="ph1">&lt;see langword="DataRelation" /&gt;</ph>의 이름입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
          <source>An array of parent <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> objects.</source>
          <target state="translated">부모 <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> 개체로 이루어진 배열입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
          <source>An array of child <ph id="ph1">&lt;see langword="DataColumn" /&gt;</ph> objects.</source>
          <target state="translated">자식 <ph id="ph1">&lt;see langword="DataColumn" /&gt;</ph> 개체로 이루어진 배열입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> with the specified name and arrays of parent and child columns, and adds it to the collection.</source>
          <target state="translated">지정된 이름과 부모 및 자식 열로 이루어진 배열을 가지는 <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph>을 만들어 컬렉션에 추가합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
          <source>The created <ph id="ph1">&lt;see langword="DataRelation" /&gt;</ph>.</source>
          <target state="translated">만든 <ph id="ph1">&lt;see langword="DataRelation" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
          <source>If the relation is successfully added to the collection, the <ph id="ph1">&lt;xref:System.Data.DataRelationCollection.CollectionChanged&gt;</ph> event occurs.</source>
          <target state="translated">관계를 컬렉션에 성공적으로 추가 되는 경우는 <ph id="ph1">&lt;xref:System.Data.DataRelationCollection.CollectionChanged&gt;</ph> 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
          <source>When a <ph id="ph1">&lt;xref:System.Data.DataRelation&gt;</ph> object is added to the collection, <ph id="ph2">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.UniqueConstraint&gt;</ph> objects are created by default if they do not already exist.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Data.DataRelation&gt;</ph> 개체가 컬렉션에 추가 된 <ph id="ph2">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Data.UniqueConstraint&gt;</ph> 개체가 존재 하지 않을 경우 기본적으로 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
          <source>The relation name is a null value.</source>
          <target state="translated">관계 이름이 null 값인 경우</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
          <source>The relation already belongs to this collection, or it belongs to another collection.</source>
          <target state="translated">관계가 이 컬렉션에 이미 속해 있거나 다른 컬렉션에 속한 경우</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
          <source>The collection already has a relation with the same name.</source>
          <target state="translated">컬렉션에 이름이 같은 관계가 이미 있는 경우.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
          <source>(The comparison is not case sensitive.)</source>
          <target state="translated">대/소문자를 구분하지 않고 비교합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
          <source>The relation has entered an invalid state since it was created.</source>
          <target state="translated">관계를 만든 후 관계에 잘못된 상태를 입력한 경우</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
          <source>The name of the relation.</source>
          <target state="translated">관계의 이름입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
          <source>The parent column of the relation.</source>
          <target state="translated">이 관계의 부모 열입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
          <source>The child column of the relation.</source>
          <target state="translated">해당 관계의 자식 열입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to create constraints; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">제약 조건을 만들려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
          <source>(The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>).</source>
          <target state="translated">여기에서 기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> with the specified name, parent and child columns, with optional constraints according to the value of the <ph id="ph2">&lt;paramref name="createConstraints" /&gt;</ph> parameter, and adds it to the collection.</source>
          <target state="translated">지정된 이름, 부모 및 자식 열, <ph id="ph2">&lt;paramref name="createConstraints" /&gt;</ph> 매개 변수의 값에 따른 추가 제약 조건을 사용하여 <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph>을 만든 다음 이를 컬렉션에 추가합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
          <source>The created relation.</source>
          <target state="translated">만든 관계를 반환합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
          <source>When a <ph id="ph1">&lt;xref:System.Data.DataRelation&gt;</ph> object is added to the collection, <ph id="ph2">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.UniqueConstraint&gt;</ph> objects are created by default if they do not already exist.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Data.DataRelation&gt;</ph> 개체가 컬렉션에 추가 된 <ph id="ph2">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Data.UniqueConstraint&gt;</ph> 개체가 존재 하지 않을 경우 기본적으로 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
          <source>To prevent this, you can set <ph id="ph1">`createConstraints`</ph> to false.</source>
          <target state="translated">이 방지 하려면 설정할 수 있습니다 <ph id="ph1">`createConstraints`</ph> 를 false입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
          <source>The name of the <ph id="ph1">&lt;see langword="DataRelation" /&gt;</ph> to create.</source>
          <target state="translated">만들 <ph id="ph1">&lt;see langword="DataRelation" /&gt;</ph>의 이름입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
          <source>An array of parent <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> objects.</source>
          <target state="translated">부모 <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> 개체로 이루어진 배열입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
          <source>An array of child <ph id="ph1">&lt;see langword="DataColumn" /&gt;</ph> objects.</source>
          <target state="translated">자식 <ph id="ph1">&lt;see langword="DataColumn" /&gt;</ph> 개체로 이루어진 배열입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to create a constraint; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">제약 조건을 만들려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> with the specified name, arrays of parent and child columns, and value specifying whether to create a constraint, and adds it to the collection.</source>
          <target state="translated">지정된 이름, 부모 및 자식 열로 이루어진 배열, 제약 조건을 만들지 여부를 지정하는 값을 가지는 <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph>을 만들어 컬렉션에 추가합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
          <source>The created relation.</source>
          <target state="translated">만든 관계를 반환합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
          <source>When a <ph id="ph1">&lt;xref:System.Data.DataRelation&gt;</ph> object is added to the collection, <ph id="ph2">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.UniqueConstraint&gt;</ph> objects are created by default if they do not already exist.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Data.DataRelation&gt;</ph> 개체가 컬렉션에 추가 된 <ph id="ph2">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Data.UniqueConstraint&gt;</ph> 개체가 존재 하지 않을 경우 기본적으로 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
          <source>The relation name is a null value.</source>
          <target state="translated">관계 이름이 null 값인 경우</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
          <source>The relation already belongs to this collection, or it belongs to another collection.</source>
          <target state="translated">관계가 이 컬렉션에 이미 속해 있거나 다른 컬렉션에 속한 경우</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
          <source>The collection already has a relation with the same name.</source>
          <target state="translated">컬렉션에 이름이 같은 관계가 이미 있는 경우.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
          <source>(The comparison is not case sensitive.)</source>
          <target state="translated">대/소문자를 구분하지 않고 비교합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
          <source>The relation has entered an invalid state since it was created.</source>
          <target state="translated">관계를 만든 후 관계에 잘못된 상태를 입력한 경우</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)">
          <source>The relation to check.</source>
          <target state="translated">확인할 관계입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)">
          <source>Performs verification on the table.</source>
          <target state="translated">테이블의 유효성을 확인합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)">
          <source>The relation is null.</source>
          <target state="translated">관계가 null인 경우</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)">
          <source>The relation already belongs to this collection, or it belongs to another collection.</source>
          <target state="translated">관계가 이 컬렉션에 이미 속해 있거나 다른 컬렉션에 속한 경우</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)">
          <source>The collection already has a relation with the same name.</source>
          <target state="translated">컬렉션에 이름이 같은 관계가 이미 있는 경우.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)">
          <source>(The comparison is not case sensitive.)</source>
          <target state="translated">대/소문자를 구분하지 않고 비교합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])">
          <source>The array of <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> objects to add to the collection.</source>
          <target state="translated">컬렉션에 추가할 <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])">
          <source>Copies the elements of the specified <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> array to the end of the collection.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> 배열의 요소를 컬렉션의 끝에 복사합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])">
          <source>If <ph id="ph1">&lt;xref:System.Data.DataSet.BeginInit%2A&gt;</ph> has been called, <ph id="ph2">`AddRange`</ph> does not add any objects to the collection until <ph id="ph3">&lt;xref:System.Data.DataSet.EndInit%2A&gt;</ph> is called.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Data.DataSet.BeginInit%2A&gt;</ph> 가 호출 된 <ph id="ph2">`AddRange`</ph> 될 때까지 컬렉션에 개체를 추가 하지 않는 <ph id="ph3">&lt;xref:System.Data.DataSet.EndInit%2A&gt;</ph> 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])">
          <source>At the time that <ph id="ph1">`EndInit`</ph> is called, the collection will be populated with the items specified in the most recent call to <ph id="ph2">`AddRange`</ph>.</source>
          <target state="translated">시간에는 <ph id="ph1">`EndInit`</ph> 은 호출 컬렉션 채워집니다 가장 최근 호출에 지정 된 항목이 <ph id="ph2">`AddRange`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])">
          <source>If <ph id="ph1">`AddRange`</ph> is called multiple times within a <ph id="ph2">`BeginInit`</ph><ph id="ph3"> / </ph><ph id="ph4">`EndInit`</ph> sequence, only those items specified in the most recent call to <ph id="ph5">`AddRange`</ph> are added.</source>
          <target state="translated">경우 <ph id="ph1">`AddRange`</ph> 내에서 여러 번 호출 되는 <ph id="ph2">`BeginInit`</ph> <ph id="ph3"> / </ph> <ph id="ph4">`EndInit`</ph> 시퀀스에 대 한 가장 최근 호출에 지정 된 항목만 <ph id="ph5">`AddRange`</ph> 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)">
          <source>The relation to perform the check against.</source>
          <target state="translated">확인할 관계입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)">
          <source>Verifies whether the specified <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> can be removed from the collection.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph>를 컬렉션에서 제거할 수 있는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> can be removed; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph>을 제거할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Clear">
          <source>Clears the collection of any relations.</source>
          <target state="translated">모든 관계의 컬렉션을 지웁니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="E:System.Data.DataRelationCollection.CollectionChanged">
          <source>Occurs when the collection has changed.</source>
          <target state="translated">컬렉션이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Contains(System.String)">
          <source>The name of the relation to find.</source>
          <target state="translated">찾을 관계의 이름입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Contains(System.String)">
          <source>Verifies whether a <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> with the specific name (case insensitive) exists in the collection.</source>
          <target state="translated">특정 이름(대/소문자 구분)의 <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph>이 컬렉션에 있는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Contains(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>, if a relation with the specified name exists; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">지정된 이름의 관계가 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>를 반환하고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)">
          <source>The array of <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> objects to copy the collection to.</source>
          <target state="translated">컬렉션을 복사할 대상인 <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)">
          <source>The index to start from.</source>
          <target state="translated">복사를 시작할 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)">
          <source>Copies the collection of <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> objects starting at the specified index.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> 개체의 컬렉션을 지정된 인덱스에서 시작하는 위치에 복사합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.GetDataSet">
          <source>This method supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">이 메서드는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.GetDataSet">
          <source>The referenced DataSet.</source>
          <target state="translated">참조된 DataSet입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="T:System.Data.DataRelationCollection">
          <source>Gets the index of the specified data relation.</source>
          <target state="translated">지정된 데이터 관계의 인덱스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)">
          <source>The relation to search for.</source>
          <target state="translated">검색할 관계입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)">
          <source>Gets the index of the specified <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> object.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> 개체의 인덱스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)">
          <source>The 0-based index of the relation, or -1 if the relation is not found in the collection.</source>
          <target state="translated">관계의 인덱스(0부터 시작)이거나, 컬렉션에 관계가 없으면 -1입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.IndexOf(System.String)">
          <source>The name of the relation to find.</source>
          <target state="translated">찾을 관계의 이름입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.IndexOf(System.String)">
          <source>Gets the index of the <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> specified by name.</source>
          <target state="translated">이름으로 지정된 <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph>의 인덱스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.IndexOf(System.String)">
          <source>The zero-based index of the relation with the specified name, or -1 if the relation does not exist in the collection.</source>
          <target state="translated">지정된 이름을 가진 관계의 인덱스(0부터 시작)이거나, 관계가 컬렉션에 없으면 -1입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="T:System.Data.DataRelationCollection">
          <source>Gets the specified <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> from the collection.</source>
          <target state="translated">컬렉션에서 지정된 <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph>을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="P:System.Data.DataRelationCollection.Item(System.Int32)">
          <source>The zero-based index to find.</source>
          <target state="translated">찾을 인덱스(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="P:System.Data.DataRelationCollection.Item(System.Int32)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> object at the specified index.</source>
          <target state="translated">지정된 인덱스의 <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataRelationCollection.Item(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph>, or a null value if the specified <ph id="ph2">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> does not exist.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph>이 있으면 <ph id="ph2">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph>이고, 그렇지 않으면 null 값입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="P:System.Data.DataRelationCollection.Item(System.Int32)">
          <source>The index value is greater than the number of items in the collection.</source>
          <target state="translated">인덱스 값이 컬렉션의 항목 수보다 큰 경우</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="P:System.Data.DataRelationCollection.Item(System.String)">
          <source>The name of the relation to find.</source>
          <target state="translated">찾을 관계의 이름입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="P:System.Data.DataRelationCollection.Item(System.String)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> object specified by name.</source>
          <target state="translated">이름으로 지정된 <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataRelationCollection.Item(System.String)">
          <source>The named <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph>, or a null value if the specified <ph id="ph2">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> does not exist.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph>이 있으면 명명된 <ph id="ph2">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph>이고, 그렇지 않으면 null 값입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.CollectionChangeEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.CollectionChangeEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Data.DataRelationCollection.CollectionChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Data.DataRelationCollection.CollectionChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">에 대 한 개요 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" /&gt;</ph> in an inheriting class, make sure that you call the <ph id="ph2">&lt;see cref="M:System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" /&gt;</ph> method for the base class.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" /&gt;</ph> 상속 하는 클래스, 호출 해야는 <ph id="ph2">&lt;see cref="M:System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" /&gt;</ph> 메서드는 기본 클래스입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.CollectionChangeEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.CollectionChangeEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Data.DataRelationCollection.CollectionChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Data.DataRelationCollection.CollectionChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">에 대 한 개요 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)" /&gt;</ph> in an inheriting class, make sure that you call the <ph id="ph2">&lt;see cref="M:System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)" /&gt;</ph> method for the base class.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)" /&gt;</ph> 상속 하는 클래스, 호출 해야는 <ph id="ph2">&lt;see cref="M:System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)" /&gt;</ph> 메서드는 기본 클래스입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="T:System.Data.DataRelationCollection">
          <source>Removes the specified relation from the collection.</source>
          <target state="translated">컬렉션에서 지정된 관계를 제거합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Remove(System.Data.DataRelation)">
          <source>The relation to remove.</source>
          <target state="translated">제거할 관계입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Remove(System.Data.DataRelation)">
          <source>Removes the specified relation from the collection.</source>
          <target state="translated">컬렉션에서 지정된 관계를 제거합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRelationCollection.Remove(System.Data.DataRelation)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataRelationCollection.CollectionChanged&gt;</ph> event is fired if the remove operation succeeds.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataRelationCollection.CollectionChanged&gt;</ph> 제거 작업에 성공 하면 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRelationCollection.Remove(System.Data.DataRelation)">
          <source>Note that removing the relation does not remove any associated constraint objects.</source>
          <target state="translated">참고 관계를 제거 합니다. 모든 연결 된 제약 조건 개체가 제거 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Remove(System.Data.DataRelation)">
          <source>The relation is a null value.</source>
          <target state="translated">관계가 null 값인 경우</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Remove(System.Data.DataRelation)">
          <source>The relation does not belong to the collection.</source>
          <target state="translated">관계가 컬렉션에 속하지 않는 경우</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Remove(System.String)">
          <source>The name of the relation to remove.</source>
          <target state="translated">제거할 관계의 이름입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Remove(System.String)">
          <source>Removes the relation with the specified name from the collection.</source>
          <target state="translated">컬렉션에서 지정된 이름의 관계를 제거합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRelationCollection.Remove(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataRelationCollection.CollectionChanged&gt;</ph> event is fired if the remove operation succeeds.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataRelationCollection.CollectionChanged&gt;</ph> 제거 작업에 성공 하면 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.Remove(System.String)">
          <source>The collection does not have a relation with the specified name.</source>
          <target state="translated">컬렉션에 지정된 이름의 관계가 없는 경우</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.RemoveAt(System.Int32)">
          <source>The index of the relation to remove.</source>
          <target state="translated">제거할 관계의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.RemoveAt(System.Int32)">
          <source>Removes the relation at the specified index from the collection.</source>
          <target state="translated">컬렉션에서 지정된 인덱스의 관계를 제거합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRelationCollection.RemoveAt(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataRelationCollection.CollectionChanged&gt;</ph> event is fired if the remove operation succeeds.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataRelationCollection.CollectionChanged&gt;</ph> 제거 작업에 성공 하면 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.RemoveAt(System.Int32)">
          <source>The collection does not have a relation at the specified index.</source>
          <target state="translated">지정된 인덱스의 관계가 컬렉션에 없는 경우</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)">
          <source>The <ph id="ph1">&lt;see langword="DataRelation" /&gt;</ph> object to verify.</source>
          <target state="translated">확인할 <ph id="ph1">&lt;see langword="DataRelation" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)">
          <source>Performs a verification on the specified <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> object.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> 개체에 대한 유효성을 확인합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)">
          <source>The collection does not have a relation at the specified index.</source>
          <target state="translated">지정된 인덱스의 관계가 컬렉션에 없는 경우</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)">
          <source>The specified relation does not belong to this collection, or it belongs to another collection.</source>
          <target state="translated">지정된 관계가 이 컬렉션에 속하지 않거나 다른 컬렉션에 속한 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>