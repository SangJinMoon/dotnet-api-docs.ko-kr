<Type Name="DataRelationCollection" FullName="System.Data.DataRelationCollection">
  <TypeSignature Language="C#" Value="public abstract class DataRelationCollection : System.Data.InternalDataCollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DataRelationCollection extends System.Data.InternalDataCollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataRelationCollection" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DataRelationCollection&#xA;Inherits InternalDataCollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataRelationCollection abstract : System::Data::InternalDataCollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.InternalDataCollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("CollectionChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Table")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataRelationCollectionEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e366c-101">이 <see cref="T:System.Data.DataRelation" />에 대한 <see cref="T:System.Data.DataSet" /> 개체의 컬렉션을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-101">Represents the collection of <see cref="T:System.Data.DataRelation" /> objects for this <see cref="T:System.Data.DataSet" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e366c-102">A <xref:System.Data.DataRelationCollection> 개체를 사용 하면 관련 된 부모/자식 간의 탐색 <xref:System.Data.DataTable> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-102">A <xref:System.Data.DataRelationCollection> object enables navigation between related parent/child <xref:System.Data.DataTable> objects.</span></span>  
  
 <span data-ttu-id="e366c-103">만들는 <xref:System.Data.DataRelationCollection> 개체의 속성으로 정의 하 여는 <xref:System.Data.DataSet> 또는 <xref:System.Data.DataTable>, 대신 직접 생성자를 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-103">You create a <xref:System.Data.DataRelationCollection> object by defining it as a property of either the <xref:System.Data.DataSet> or the <xref:System.Data.DataTable>, instead of by directly using a constructor.</span></span> <span data-ttu-id="e366c-104">(사용 하 여는 <xref:System.Data.DataSet.Relations%2A> 속성의는 <xref:System.Data.DataSet>, 또는 <xref:System.Data.DataTable.ParentRelations%2A> 의 속성은 <xref:System.Data.DataTable>.)</span><span class="sxs-lookup"><span data-stu-id="e366c-104">(Use the <xref:System.Data.DataSet.Relations%2A> property of the <xref:System.Data.DataSet>, or the <xref:System.Data.DataTable.ParentRelations%2A> property of the <xref:System.Data.DataTable>.)</span></span>  
  
 <span data-ttu-id="e366c-105">컬렉션에 액세스 하려면 사용 하 여는 <xref:System.Data.DataSet.Relations%2A> 의 속성은 <xref:System.Data.DataSet> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-105">To access the collection, use the <xref:System.Data.DataSet.Relations%2A> property of the <xref:System.Data.DataSet> object.</span></span>  
  
 <span data-ttu-id="e366c-106">와 같은 방법을 사용 하 여 포함 하는 개체를 관리할 수 있습니다 컬렉션에 존재 하는 즉시 <xref:System.Data.DataRelationCollection.Add%2A>, <xref:System.Data.DataRelationCollection.Clear%2A>, 및 <xref:System.Data.DataRelationCollection.Remove%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-106">As soon as the collection exists you can manage the objects it contains by using methods such as <xref:System.Data.DataRelationCollection.Add%2A>, <xref:System.Data.DataRelationCollection.Clear%2A>, and <xref:System.Data.DataRelationCollection.Remove%2A>.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="e366c-107">이 형식은 다중 스레드 읽기 작업에 안전 합니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-107">This type is safe for multithreaded read operations.</span></span> <span data-ttu-id="e366c-108">쓰기 작업을 동기화 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-108">You must synchronize any write operations.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataRelationCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelationCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DataRelationCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e366c-109"><see cref="T:System.Data.DataRelationCollection" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-109">Initializes a new instance of the <see cref="T:System.Data.DataRelationCollection" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e366c-110"><see cref="T:System.Data.DataRelation" />에 <see cref="T:System.Data.DataRelationCollection" />를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-110">Adds a <see cref="T:System.Data.DataRelation" /> to the <see cref="T:System.Data.DataRelationCollection" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelationCollection.Add(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (relation As DataRelation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Data::DataRelation ^ relation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation"><span data-ttu-id="e366c-111">컬렉션에 추가할 <see langword="DataRelation" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-111">The <see langword="DataRelation" /> to add to the collection.</span></span></param>
        <summary><span data-ttu-id="e366c-112"><see cref="T:System.Data.DataRelation" />에 <see cref="T:System.Data.DataRelationCollection" />를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-112">Adds a <see cref="T:System.Data.DataRelation" /> to the <see cref="T:System.Data.DataRelationCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e366c-113">관계를 컬렉션에 성공적으로 추가 되는 경우는 <xref:System.Data.DataRelationCollection.CollectionChanged> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-113">If the relation is successfully added to the collection, the <xref:System.Data.DataRelationCollection.CollectionChanged> event occurs.</span></span>  
  
 <span data-ttu-id="e366c-114">경우는 <xref:System.Data.DataRelation> 개체가 컬렉션에 추가 된 <xref:System.Data.ForeignKeyConstraint> 및 <xref:System.Data.UniqueConstraint> 개체가 존재 하지 않을 경우 기본적으로 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-114">When a <xref:System.Data.DataRelation> object is added to the collection, <xref:System.Data.ForeignKeyConstraint> and <xref:System.Data.UniqueConstraint> objects are created by default if they do not already exist.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e366c-115"><paramref name="relation" /> 매개 변수가 null 값인 경우</span><span class="sxs-lookup"><span data-stu-id="e366c-115">The <paramref name="relation" /> parameter is a null value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e366c-116">관계가 이 컬렉션에 이미 속해 있거나 다른 컬렉션에 속한 경우</span><span class="sxs-lookup"><span data-stu-id="e366c-116">The relation already belongs to this collection, or it belongs to another collection.</span></span></exception>
        <exception cref="T:System.Data.DuplicateNameException"><span data-ttu-id="e366c-117">지정된 이름의 관계가 컬렉션에 이미 있는 경우.</span><span class="sxs-lookup"><span data-stu-id="e366c-117">The collection already has a relation with the specified name.</span></span> <span data-ttu-id="e366c-118">대/소문자를 구분하지 않고 비교합니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-118">(The comparison is not case sensitive.)</span></span></exception>
        <exception cref="T:System.Data.InvalidConstraintException"><span data-ttu-id="e366c-119">관계를 만든 후 관계에 잘못된 상태를 입력한 경우</span><span class="sxs-lookup"><span data-stu-id="e366c-119">The relation has entered an invalid state since it was created.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Data.DataRelation Add (System.Data.DataColumn parentColumn, System.Data.DataColumn childColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.DataRelation Add(class System.Data.DataColumn parentColumn, class System.Data.DataColumn childColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (parentColumn As DataColumn, childColumn As DataColumn) As DataRelation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::DataRelation ^ Add(System::Data::DataColumn ^ parentColumn, System::Data::DataColumn ^ childColumn);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRelation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentColumn" Type="System.Data.DataColumn" />
        <Parameter Name="childColumn" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="parentColumn"><span data-ttu-id="e366c-120">이 관계의 부모 열입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-120">The parent column of the relation.</span></span></param>
        <param name="childColumn"><span data-ttu-id="e366c-121">해당 관계의 자식 열입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-121">The child column of the relation.</span></span></param>
        <summary><span data-ttu-id="e366c-122">지정된 부모 및 자식 열을 사용하여 <see cref="T:System.Data.DataRelation" />을 만든 다음 이를 컬렉션에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-122">Creates a <see cref="T:System.Data.DataRelation" /> with a specified parent and child column, and adds it to the collection.</span></span></summary>
        <returns><span data-ttu-id="e366c-123">만든 관계를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-123">The created relation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e366c-124">경우는 <xref:System.Data.DataRelation> 개체가 컬렉션에 추가 된 <xref:System.Data.ForeignKeyConstraint> 및 <xref:System.Data.UniqueConstraint> 개체가 존재 하지 않을 경우 기본적으로 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-124">When a <xref:System.Data.DataRelation> object is added to the collection, <xref:System.Data.ForeignKeyConstraint> and <xref:System.Data.UniqueConstraint> objects are created by default if they do not already exist.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Data.DataRelation Add (System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.DataRelation Add(class System.Data.DataColumn[] parentColumns, class System.Data.DataColumn[] childColumns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (parentColumns As DataColumn(), childColumns As DataColumn()) As DataRelation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::DataRelation ^ Add(cli::array &lt;System::Data::DataColumn ^&gt; ^ parentColumns, cli::array &lt;System::Data::DataColumn ^&gt; ^ childColumns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRelation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentColumns" Type="System.Data.DataColumn[]" />
        <Parameter Name="childColumns" Type="System.Data.DataColumn[]" />
      </Parameters>
      <Docs>
        <param name="parentColumns"><span data-ttu-id="e366c-125">이 관계의 부모 열입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-125">The parent columns of the relation.</span></span></param>
        <param name="childColumns"><span data-ttu-id="e366c-126">해당 관계의 자식 열입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-126">The child columns of the relation.</span></span></param>
        <summary><span data-ttu-id="e366c-127">지정된 부모 및 자식 열을 사용하여 <see cref="T:System.Data.DataRelation" />을 만든 다음 이를 컬렉션에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-127">Creates a <see cref="T:System.Data.DataRelation" /> with the specified parent and child columns, and adds it to the collection.</span></span></summary>
        <returns><span data-ttu-id="e366c-128">만든 관계를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-128">The created relation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e366c-129">경우는 <xref:System.Data.DataRelation> 개체가 컬렉션에 추가 된 <xref:System.Data.ForeignKeyConstraint> 및 <xref:System.Data.UniqueConstraint> 개체가 존재 하지 않을 경우 기본적으로 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-129">When a <xref:System.Data.DataRelation> object is added to the collection, <xref:System.Data.ForeignKeyConstraint> and <xref:System.Data.UniqueConstraint> objects are created by default if they do not already exist.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e366c-130"><paramref name="relation" /> 인수가 null 값인 경우</span><span class="sxs-lookup"><span data-stu-id="e366c-130">The <paramref name="relation" /> argument is a null value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e366c-131">관계가 이 컬렉션에 이미 속해 있거나 다른 컬렉션에 속한 경우</span><span class="sxs-lookup"><span data-stu-id="e366c-131">The relation already belongs to this collection, or it belongs to another collection.</span></span></exception>
        <exception cref="T:System.Data.DuplicateNameException"><span data-ttu-id="e366c-132">컬렉션에 이름이 같은 관계가 이미 있는 경우.</span><span class="sxs-lookup"><span data-stu-id="e366c-132">The collection already has a relation with the same name.</span></span> <span data-ttu-id="e366c-133">대/소문자를 구분하지 않고 비교합니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-133">(The comparison is not case sensitive.)</span></span></exception>
        <exception cref="T:System.Data.InvalidConstraintException"><span data-ttu-id="e366c-134">관계를 만든 후 관계에 잘못된 상태를 입력한 경우</span><span class="sxs-lookup"><span data-stu-id="e366c-134">The relation has entered an invalid state since it was created.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Data.DataRelation Add (string name, System.Data.DataColumn parentColumn, System.Data.DataColumn childColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.DataRelation Add(string name, class System.Data.DataColumn parentColumn, class System.Data.DataColumn childColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (name As String, parentColumn As DataColumn, childColumn As DataColumn) As DataRelation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::DataRelation ^ Add(System::String ^ name, System::Data::DataColumn ^ parentColumn, System::Data::DataColumn ^ childColumn);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRelation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="parentColumn" Type="System.Data.DataColumn" />
        <Parameter Name="childColumn" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e366c-135">관계의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-135">The name of the relation.</span></span></param>
        <param name="parentColumn"><span data-ttu-id="e366c-136">이 관계의 부모 열입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-136">The parent column of the relation.</span></span></param>
        <param name="childColumn"><span data-ttu-id="e366c-137">해당 관계의 자식 열입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-137">The child column of the relation.</span></span></param>
        <summary><span data-ttu-id="e366c-138">지정된 이름, 부모 및 자식 열을 사용하여 <see cref="T:System.Data.DataRelation" />을 만든 다음 이를 컬렉션에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-138">Creates a <see cref="T:System.Data.DataRelation" /> with the specified name, and parent and child columns, and adds it to the collection.</span></span></summary>
        <returns><span data-ttu-id="e366c-139">만든 관계를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-139">The created relation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e366c-140">경우는 <xref:System.Data.DataRelation> 개체가 컬렉션에 추가 된 <xref:System.Data.ForeignKeyConstraint> 및 <xref:System.Data.UniqueConstraint> 개체가 존재 하지 않을 경우 기본적으로 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-140">When a <xref:System.Data.DataRelation> object is added to the collection, <xref:System.Data.ForeignKeyConstraint> and <xref:System.Data.UniqueConstraint> objects are created by default if they do not already exist.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Data.DataRelation Add (string name, System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.DataRelation Add(string name, class System.Data.DataColumn[] parentColumns, class System.Data.DataColumn[] childColumns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (name As String, parentColumns As DataColumn(), childColumns As DataColumn()) As DataRelation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::DataRelation ^ Add(System::String ^ name, cli::array &lt;System::Data::DataColumn ^&gt; ^ parentColumns, cli::array &lt;System::Data::DataColumn ^&gt; ^ childColumns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRelation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="parentColumns" Type="System.Data.DataColumn[]" />
        <Parameter Name="childColumns" Type="System.Data.DataColumn[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e366c-141">만들 <see langword="DataRelation" />의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-141">The name of the <see langword="DataRelation" /> to create.</span></span></param>
        <param name="parentColumns"><span data-ttu-id="e366c-142">부모 <see cref="T:System.Data.DataColumn" /> 개체로 이루어진 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-142">An array of parent <see cref="T:System.Data.DataColumn" /> objects.</span></span></param>
        <param name="childColumns"><span data-ttu-id="e366c-143">자식 <see langword="DataColumn" /> 개체로 이루어진 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-143">An array of child <see langword="DataColumn" /> objects.</span></span></param>
        <summary><span data-ttu-id="e366c-144">지정된 이름과 부모 및 자식 열로 이루어진 배열을 가지는 <see cref="T:System.Data.DataRelation" />을 만들어 컬렉션에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-144">Creates a <see cref="T:System.Data.DataRelation" /> with the specified name and arrays of parent and child columns, and adds it to the collection.</span></span></summary>
        <returns><span data-ttu-id="e366c-145">만든 <see langword="DataRelation" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-145">The created <see langword="DataRelation" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e366c-146">관계를 컬렉션에 성공적으로 추가 되는 경우는 <xref:System.Data.DataRelationCollection.CollectionChanged> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-146">If the relation is successfully added to the collection, the <xref:System.Data.DataRelationCollection.CollectionChanged> event occurs.</span></span>  
  
 <span data-ttu-id="e366c-147">경우는 <xref:System.Data.DataRelation> 개체가 컬렉션에 추가 된 <xref:System.Data.ForeignKeyConstraint> 및 <xref:System.Data.UniqueConstraint> 개체가 존재 하지 않을 경우 기본적으로 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-147">When a <xref:System.Data.DataRelation> object is added to the collection, <xref:System.Data.ForeignKeyConstraint> and <xref:System.Data.UniqueConstraint> objects are created by default if they do not already exist.</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataRelationCollection.Add1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRelationCollection.Add1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRelationCollection.Add1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRelationCollection.Add1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e366c-148">관계 이름이 null 값인 경우</span><span class="sxs-lookup"><span data-stu-id="e366c-148">The relation name is a null value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e366c-149">관계가 이 컬렉션에 이미 속해 있거나 다른 컬렉션에 속한 경우</span><span class="sxs-lookup"><span data-stu-id="e366c-149">The relation already belongs to this collection, or it belongs to another collection.</span></span></exception>
        <exception cref="T:System.Data.DuplicateNameException"><span data-ttu-id="e366c-150">컬렉션에 이름이 같은 관계가 이미 있는 경우.</span><span class="sxs-lookup"><span data-stu-id="e366c-150">The collection already has a relation with the same name.</span></span> <span data-ttu-id="e366c-151">대/소문자를 구분하지 않고 비교합니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-151">(The comparison is not case sensitive.)</span></span></exception>
        <exception cref="T:System.Data.InvalidConstraintException"><span data-ttu-id="e366c-152">관계를 만든 후 관계에 잘못된 상태를 입력한 경우</span><span class="sxs-lookup"><span data-stu-id="e366c-152">The relation has entered an invalid state since it was created.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Data.DataRelation Add (string name, System.Data.DataColumn parentColumn, System.Data.DataColumn childColumn, bool createConstraints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.DataRelation Add(string name, class System.Data.DataColumn parentColumn, class System.Data.DataColumn childColumn, bool createConstraints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (name As String, parentColumn As DataColumn, childColumn As DataColumn, createConstraints As Boolean) As DataRelation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::DataRelation ^ Add(System::String ^ name, System::Data::DataColumn ^ parentColumn, System::Data::DataColumn ^ childColumn, bool createConstraints);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRelation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="parentColumn" Type="System.Data.DataColumn" />
        <Parameter Name="childColumn" Type="System.Data.DataColumn" />
        <Parameter Name="createConstraints" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e366c-153">관계의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-153">The name of the relation.</span></span></param>
        <param name="parentColumn"><span data-ttu-id="e366c-154">이 관계의 부모 열입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-154">The parent column of the relation.</span></span></param>
        <param name="childColumn"><span data-ttu-id="e366c-155">해당 관계의 자식 열입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-155">The child column of the relation.</span></span></param>
        <param name="createConstraints">
          <span data-ttu-id="e366c-156">제약 조건을 만들려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-156"><see langword="true" /> to create constraints; otherwise <see langword="false" />.</span></span> <span data-ttu-id="e366c-157">여기에서 기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-157">(The default is <see langword="true" />).</span></span></param>
        <summary><span data-ttu-id="e366c-158">지정된 이름, 부모 및 자식 열, <paramref name="createConstraints" /> 매개 변수의 값에 따른 추가 제약 조건을 사용하여 <see cref="T:System.Data.DataRelation" />을 만든 다음 이를 컬렉션에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-158">Creates a <see cref="T:System.Data.DataRelation" /> with the specified name, parent and child columns, with optional constraints according to the value of the <paramref name="createConstraints" /> parameter, and adds it to the collection.</span></span></summary>
        <returns><span data-ttu-id="e366c-159">만든 관계를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-159">The created relation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e366c-160">경우는 <xref:System.Data.DataRelation> 개체가 컬렉션에 추가 된 <xref:System.Data.ForeignKeyConstraint> 및 <xref:System.Data.UniqueConstraint> 개체가 존재 하지 않을 경우 기본적으로 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-160">When a <xref:System.Data.DataRelation> object is added to the collection, <xref:System.Data.ForeignKeyConstraint> and <xref:System.Data.UniqueConstraint> objects are created by default if they do not already exist.</span></span> <span data-ttu-id="e366c-161">이 방지 하려면 설정할 수 있습니다 `createConstraints` 를 false입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-161">To prevent this, you can set `createConstraints` to false.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Data.DataRelation Add (string name, System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns, bool createConstraints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.DataRelation Add(string name, class System.Data.DataColumn[] parentColumns, class System.Data.DataColumn[] childColumns, bool createConstraints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (name As String, parentColumns As DataColumn(), childColumns As DataColumn(), createConstraints As Boolean) As DataRelation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::DataRelation ^ Add(System::String ^ name, cli::array &lt;System::Data::DataColumn ^&gt; ^ parentColumns, cli::array &lt;System::Data::DataColumn ^&gt; ^ childColumns, bool createConstraints);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRelation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="parentColumns" Type="System.Data.DataColumn[]" />
        <Parameter Name="childColumns" Type="System.Data.DataColumn[]" />
        <Parameter Name="createConstraints" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e366c-162">만들 <see langword="DataRelation" />의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-162">The name of the <see langword="DataRelation" /> to create.</span></span></param>
        <param name="parentColumns"><span data-ttu-id="e366c-163">부모 <see cref="T:System.Data.DataColumn" /> 개체로 이루어진 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-163">An array of parent <see cref="T:System.Data.DataColumn" /> objects.</span></span></param>
        <param name="childColumns"><span data-ttu-id="e366c-164">자식 <see langword="DataColumn" /> 개체로 이루어진 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-164">An array of child <see langword="DataColumn" /> objects.</span></span></param>
        <param name="createConstraints">
          <span data-ttu-id="e366c-165">제약 조건을 만들려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-165"><see langword="true" /> to create a constraint; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e366c-166">지정된 이름, 부모 및 자식 열로 이루어진 배열, 제약 조건을 만들지 여부를 지정하는 값을 가지는 <see cref="T:System.Data.DataRelation" />을 만들어 컬렉션에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-166">Creates a <see cref="T:System.Data.DataRelation" /> with the specified name, arrays of parent and child columns, and value specifying whether to create a constraint, and adds it to the collection.</span></span></summary>
        <returns><span data-ttu-id="e366c-167">만든 관계를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-167">The created relation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e366c-168">경우는 <xref:System.Data.DataRelation> 개체가 컬렉션에 추가 된 <xref:System.Data.ForeignKeyConstraint> 및 <xref:System.Data.UniqueConstraint> 개체가 존재 하지 않을 경우 기본적으로 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-168">When a <xref:System.Data.DataRelation> object is added to the collection, <xref:System.Data.ForeignKeyConstraint> and <xref:System.Data.UniqueConstraint> objects are created by default if they do not already exist.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e366c-169">관계 이름이 null 값인 경우</span><span class="sxs-lookup"><span data-stu-id="e366c-169">The relation name is a null value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e366c-170">관계가 이 컬렉션에 이미 속해 있거나 다른 컬렉션에 속한 경우</span><span class="sxs-lookup"><span data-stu-id="e366c-170">The relation already belongs to this collection, or it belongs to another collection.</span></span></exception>
        <exception cref="T:System.Data.DuplicateNameException"><span data-ttu-id="e366c-171">컬렉션에 이름이 같은 관계가 이미 있는 경우.</span><span class="sxs-lookup"><span data-stu-id="e366c-171">The collection already has a relation with the same name.</span></span> <span data-ttu-id="e366c-172">대/소문자를 구분하지 않고 비교합니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-172">(The comparison is not case sensitive.)</span></span></exception>
        <exception cref="T:System.Data.InvalidConstraintException"><span data-ttu-id="e366c-173">관계를 만든 후 관계에 잘못된 상태를 입력한 경우</span><span class="sxs-lookup"><span data-stu-id="e366c-173">The relation has entered an invalid state since it was created.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddCore">
      <MemberSignature Language="C#" Value="protected virtual void AddCore (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddCore(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddCore (relation As DataRelation)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddCore(System::Data::DataRelation ^ relation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation"><span data-ttu-id="e366c-174">확인할 관계입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-174">The relation to check.</span></span></param>
        <summary><span data-ttu-id="e366c-175">테이블의 유효성을 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-175">Performs verification on the table.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e366c-176">관계가 null인 경우</span><span class="sxs-lookup"><span data-stu-id="e366c-176">The relation is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e366c-177">관계가 이 컬렉션에 이미 속해 있거나 다른 컬렉션에 속한 경우</span><span class="sxs-lookup"><span data-stu-id="e366c-177">The relation already belongs to this collection, or it belongs to another collection.</span></span></exception>
        <exception cref="T:System.Data.DuplicateNameException"><span data-ttu-id="e366c-178">컬렉션에 이름이 같은 관계가 이미 있는 경우.</span><span class="sxs-lookup"><span data-stu-id="e366c-178">The collection already has a relation with the same name.</span></span> <span data-ttu-id="e366c-179">대/소문자를 구분하지 않고 비교합니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-179">(The comparison is not case sensitive.)</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public virtual void AddRange (System.Data.DataRelation[] relations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRange(class System.Data.DataRelation[] relations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddRange (relations As DataRelation())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddRange(cli::array &lt;System::Data::DataRelation ^&gt; ^ relations);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relations" Type="System.Data.DataRelation[]" />
      </Parameters>
      <Docs>
        <param name="relations"><span data-ttu-id="e366c-180">컬렉션에 추가할 <see cref="T:System.Data.DataRelation" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-180">The array of <see cref="T:System.Data.DataRelation" /> objects to add to the collection.</span></span></param>
        <summary><span data-ttu-id="e366c-181">지정된 <see cref="T:System.Data.DataRelation" /> 배열의 요소를 컬렉션의 끝에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-181">Copies the elements of the specified <see cref="T:System.Data.DataRelation" /> array to the end of the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e366c-182">경우 <xref:System.Data.DataSet.BeginInit%2A> 가 호출 된 `AddRange` 될 때까지 컬렉션에 개체를 추가 하지 않는 <xref:System.Data.DataSet.EndInit%2A> 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-182">If <xref:System.Data.DataSet.BeginInit%2A> has been called, `AddRange` does not add any objects to the collection until <xref:System.Data.DataSet.EndInit%2A> is called.</span></span> <span data-ttu-id="e366c-183">시간에는 `EndInit` 은 호출 컬렉션 채워집니다 가장 최근 호출에 지정 된 항목이 `AddRange`합니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-183">At the time that `EndInit` is called, the collection will be populated with the items specified in the most recent call to `AddRange`.</span></span> <span data-ttu-id="e366c-184">경우 `AddRange` 내에서 여러 번 호출 되는 `BeginInit`  /  `EndInit` 시퀀스에 대 한 가장 최근 호출에 지정 된 항목만 `AddRange` 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-184">If `AddRange` is called multiple times within a `BeginInit` / `EndInit` sequence, only those items specified in the most recent call to `AddRange` are added.</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataRelationCollection.AddRange Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRelationCollection.AddRange Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRelationCollection.AddRange Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRelationCollection.AddRange Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRemove">
      <MemberSignature Language="C#" Value="public virtual bool CanRemove (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRemove(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanRemove (relation As DataRelation) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanRemove(System::Data::DataRelation ^ relation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation"><span data-ttu-id="e366c-185">확인할 관계입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-185">The relation to perform the check against.</span></span></param>
        <summary><span data-ttu-id="e366c-186">지정된 <see cref="T:System.Data.DataRelation" />를 컬렉션에서 제거할 수 있는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-186">Verifies whether the specified <see cref="T:System.Data.DataRelation" /> can be removed from the collection.</span></span></summary>
        <returns>
          <span data-ttu-id="e366c-187"><see cref="T:System.Data.DataRelation" />을 제거할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-187"><see langword="true" /> if the <see cref="T:System.Data.DataRelation" /> can be removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelationCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e366c-188">모든 관계의 컬렉션을 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-188">Clears the collection of any relations.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CollectionChangeEventHandler CollectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CollectionChangeEventHandler CollectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataRelationCollection.CollectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CollectionChanged As CollectionChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CollectionChangeEventHandler ^ CollectionChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CollectionChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e366c-189">컬렉션이 변경될 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-189">Occurs when the collection has changed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelationCollection.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e366c-190">찾을 관계의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-190">The name of the relation to find.</span></span></param>
        <summary><span data-ttu-id="e366c-191">특정 이름(대/소문자 구분)의 <see cref="T:System.Data.DataRelation" />이 컬렉션에 있는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-191">Verifies whether a <see cref="T:System.Data.DataRelation" /> with the specific name (case insensitive) exists in the collection.</span></span></summary>
        <returns>
          <span data-ttu-id="e366c-192">지정된 이름의 관계가 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-192"><see langword="true" />, if a relation with the specified name exists; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Data.DataRelation[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Data.DataRelation[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As DataRelation(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Data::DataRelation ^&gt; ^ array, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Data.DataRelation[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="e366c-193">컬렉션을 복사할 대상인 <see cref="T:System.Data.DataRelation" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-193">The array of <see cref="T:System.Data.DataRelation" /> objects to copy the collection to.</span></span></param>
        <param name="index"><span data-ttu-id="e366c-194">복사를 시작할 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-194">The index to start from.</span></span></param>
        <summary><span data-ttu-id="e366c-195"><see cref="T:System.Data.DataRelation" /> 개체의 컬렉션을 지정된 인덱스에서 시작하는 위치에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-195">Copies the collection of <see cref="T:System.Data.DataRelation" /> objects starting at the specified index.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataSet">
      <MemberSignature Language="C#" Value="protected abstract System.Data.DataSet GetDataSet ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataSet GetDataSet() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelationCollection.GetDataSet" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetDataSet () As DataSet" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Data::DataSet ^ GetDataSet();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataSet</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e366c-196">이 메서드는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-196">This method supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <returns><span data-ttu-id="e366c-197">참조된 DataSet입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-197">The referenced DataSet.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e366c-198">지정된 데이터 관계의 인덱스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-198">Gets the index of the specified data relation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (relation As DataRelation) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Data::DataRelation ^ relation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation"><span data-ttu-id="e366c-199">검색할 관계입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-199">The relation to search for.</span></span></param>
        <summary><span data-ttu-id="e366c-200">지정된 <see cref="T:System.Data.DataRelation" /> 개체의 인덱스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-200">Gets the index of the specified <see cref="T:System.Data.DataRelation" /> object.</span></span></summary>
        <returns><span data-ttu-id="e366c-201">관계의 인덱스(0부터 시작)이거나, 컬렉션에 관계가 없으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-201">The 0-based index of the relation, or -1 if the relation is not found in the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelationCollection.IndexOf(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (relationName As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ relationName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationName"><span data-ttu-id="e366c-202">찾을 관계의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-202">The name of the relation to find.</span></span></param>
        <summary><span data-ttu-id="e366c-203">이름으로 지정된 <see cref="T:System.Data.DataRelation" />의 인덱스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-203">Gets the index of the <see cref="T:System.Data.DataRelation" /> specified by name.</span></span></summary>
        <returns><span data-ttu-id="e366c-204">지정된 이름을 가진 관계의 인덱스(0부터 시작)이거나, 관계가 컬렉션에 없으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-204">The zero-based index of the relation with the specified name, or -1 if the relation does not exist in the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e366c-205">컬렉션에서 지정된 <see cref="T:System.Data.DataRelation" />을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-205">Gets the specified <see cref="T:System.Data.DataRelation" /> from the collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public abstract System.Data.DataRelation this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataRelation Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRelationCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public MustOverride ReadOnly Property Item(index As Integer) As DataRelation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::DataRelation ^ default[int] { System::Data::DataRelation ^ get(int index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRelation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="e366c-206">찾을 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-206">The zero-based index to find.</span></span></param>
        <summary><span data-ttu-id="e366c-207">지정된 인덱스의 <see cref="T:System.Data.DataRelation" /> 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-207">Gets the <see cref="T:System.Data.DataRelation" /> object at the specified index.</span></span></summary>
        <value><span data-ttu-id="e366c-208">지정된 <see cref="T:System.Data.DataRelation" />이 있으면 <see cref="T:System.Data.DataRelation" />이고, 그렇지 않으면 null 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-208">The <see cref="T:System.Data.DataRelation" />, or a null value if the specified <see cref="T:System.Data.DataRelation" /> does not exist.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="e366c-209">인덱스 값이 컬렉션의 항목 수보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="e366c-209">The index value is greater than the number of items in the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public abstract System.Data.DataRelation this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataRelation Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRelationCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public MustOverride ReadOnly Property Item(name As String) As DataRelation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::DataRelation ^ default[System::String ^] { System::Data::DataRelation ^ get(System::String ^ name); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRelation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e366c-210">찾을 관계의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-210">The name of the relation to find.</span></span></param>
        <summary><span data-ttu-id="e366c-211">이름으로 지정된 <see cref="T:System.Data.DataRelation" /> 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-211">Gets the <see cref="T:System.Data.DataRelation" /> object specified by name.</span></span></summary>
        <value><span data-ttu-id="e366c-212">지정된 <see cref="T:System.Data.DataRelation" />이 있으면 명명된 <see cref="T:System.Data.DataRelation" />이고, 그렇지 않으면 null 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-212">The named <see cref="T:System.Data.DataRelation" />, or a null value if the specified <see cref="T:System.Data.DataRelation" /> does not exist.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCollectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCollectionChanged (System.ComponentModel.CollectionChangeEventArgs ccevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCollectionChanged(class System.ComponentModel.CollectionChangeEventArgs ccevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCollectionChanged (ccevent As CollectionChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCollectionChanged(System::ComponentModel::CollectionChangeEventArgs ^ ccevent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ccevent" Type="System.ComponentModel.CollectionChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="ccevent"><span data-ttu-id="e366c-213">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-213">A <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="e366c-214"><see cref="E:System.Data.DataRelationCollection.CollectionChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-214">Raises the <see cref="E:System.Data.DataRelationCollection.CollectionChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e366c-215">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-215">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="e366c-216">에 대 한 개요 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-216">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="e366c-217">재정의 하는 경우 <see cref="M:System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" /> 상속 하는 클래스, 호출 해야는 <see cref="M:System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" /> 메서드는 기본 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-217">When overriding <see cref="M:System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" /> in an inheriting class, make sure that you call the <see cref="M:System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" /> method for the base class.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnCollectionChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnCollectionChanging (System.ComponentModel.CollectionChangeEventArgs ccevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCollectionChanging(class System.ComponentModel.CollectionChangeEventArgs ccevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCollectionChanging (ccevent As CollectionChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCollectionChanging(System::ComponentModel::CollectionChangeEventArgs ^ ccevent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ccevent" Type="System.ComponentModel.CollectionChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="ccevent"><span data-ttu-id="e366c-218">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-218">A <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="e366c-219"><see cref="E:System.Data.DataRelationCollection.CollectionChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-219">Raises the <see cref="E:System.Data.DataRelationCollection.CollectionChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e366c-220">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-220">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="e366c-221">에 대 한 개요 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-221">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="e366c-222">재정의 하는 경우 <see cref="M:System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)" /> 상속 하는 클래스, 호출 해야는 <see cref="M:System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)" /> 메서드는 기본 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-222">When overriding <see cref="M:System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)" /> in an inheriting class, make sure that you call the <see cref="M:System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)" /> method for the base class.</span></span></para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e366c-223">컬렉션에서 지정된 관계를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-223">Removes the specified relation from the collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelationCollection.Remove(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (relation As DataRelation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Data::DataRelation ^ relation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation"><span data-ttu-id="e366c-224">제거할 관계입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-224">The relation to remove.</span></span></param>
        <summary><span data-ttu-id="e366c-225">컬렉션에서 지정된 관계를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-225">Removes the specified relation from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e366c-226"><xref:System.Data.DataRelationCollection.CollectionChanged> 제거 작업에 성공 하면 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-226">The <xref:System.Data.DataRelationCollection.CollectionChanged> event is fired if the remove operation succeeds.</span></span> <span data-ttu-id="e366c-227">참고 관계를 제거 합니다. 모든 연결 된 제약 조건 개체가 제거 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-227">Note that removing the relation does not remove any associated constraint objects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e366c-228">관계가 null 값인 경우</span><span class="sxs-lookup"><span data-stu-id="e366c-228">The relation is a null value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e366c-229">관계가 컬렉션에 속하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="e366c-229">The relation does not belong to the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelationCollection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e366c-230">제거할 관계의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-230">The name of the relation to remove.</span></span></param>
        <summary><span data-ttu-id="e366c-231">컬렉션에서 지정된 이름의 관계를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-231">Removes the relation with the specified name from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e366c-232"><xref:System.Data.DataRelationCollection.CollectionChanged> 제거 작업에 성공 하면 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-232">The <xref:System.Data.DataRelationCollection.CollectionChanged> event is fired if the remove operation succeeds.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="e366c-233">컬렉션에 지정된 이름의 관계가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e366c-233">The collection does not have a relation with the specified name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelationCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="e366c-234">제거할 관계의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-234">The index of the relation to remove.</span></span></param>
        <summary><span data-ttu-id="e366c-235">컬렉션에서 지정된 인덱스의 관계를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-235">Removes the relation at the specified index from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e366c-236"><xref:System.Data.DataRelationCollection.CollectionChanged> 제거 작업에 성공 하면 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-236">The <xref:System.Data.DataRelationCollection.CollectionChanged> event is fired if the remove operation succeeds.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e366c-237">지정된 인덱스의 관계가 컬렉션에 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e366c-237">The collection does not have a relation at the specified index.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveCore">
      <MemberSignature Language="C#" Value="protected virtual void RemoveCore (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RemoveCore(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RemoveCore (relation As DataRelation)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RemoveCore(System::Data::DataRelation ^ relation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation"><span data-ttu-id="e366c-238">확인할 <see langword="DataRelation" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-238">The <see langword="DataRelation" /> object to verify.</span></span></param>
        <summary><span data-ttu-id="e366c-239">지정된 <see cref="T:System.Data.DataRelation" /> 개체에 대한 유효성을 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="e366c-239">Performs a verification on the specified <see cref="T:System.Data.DataRelation" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e366c-240">지정된 인덱스의 관계가 컬렉션에 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e366c-240">The collection does not have a relation at the specified index.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e366c-241">지정된 관계가 이 컬렉션에 속하지 않거나 다른 컬렉션에 속한 경우</span><span class="sxs-lookup"><span data-stu-id="e366c-241">The specified relation does not belong to this collection, or it belongs to another collection.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>