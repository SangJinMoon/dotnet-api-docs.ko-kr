<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlReadMode.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac597811cab6c042ede6671c6e12882e3b0cf2d49a5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">97811cab6c042ede6671c6e12882e3b0cf2d49a5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.XmlReadMode">
          <source>Specifies how to read XML data and a relational schema into a <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">XML 데이터와 관계형 스키마를 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>으로 읽어오는 방법을 지정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.XmlReadMode">
          <source>Use the members of this enumeration when setting the <ph id="ph1">`ReadMode`</ph> parameter of the <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> method.</source>
          <target state="translated">이 열거형의 멤버를 사용 하 여 설정 하는 경우는 <ph id="ph1">`ReadMode`</ph> 의 매개 변수는 <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.XmlReadMode">
          <source><ph id="ph1">`Auto`</ph> mode may be slower than setting <ph id="ph2">&lt;xref:System.Data.XmlReadMode&gt;</ph> to an explicit option.</source>
          <target state="translated"><ph id="ph1">`Auto`</ph> 모드 설정 보다 오래 걸릴 수 있습니다 <ph id="ph2">&lt;xref:System.Data.XmlReadMode&gt;</ph> 명시적 옵션입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="F:System.Data.XmlReadMode.Auto">
          <source>Default.</source>
          <target state="translated">기본.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.XmlReadMode.Auto">
          <source>Performs the most appropriate of these actions:</source>
          <target state="translated">이러한 작업의 적절 한 가장을 수행합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.XmlReadMode.Auto">
          <source>If the data is a DiffGram, sets <ph id="ph1">`XmlReadMode`</ph> to <ph id="ph2">`DiffGram`</ph>.</source>
          <target state="translated">데이터가 DiffGram 이면 설정 <ph id="ph1">`XmlReadMode`</ph> 를 <ph id="ph2">`DiffGram`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.XmlReadMode.Auto">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.XmlReadMode.Auto">
          <source>If the dataset already has a schema, or the document contains an in-line schema, sets <ph id="ph1">`XmlReadMode`</ph> to <ph id="ph2">`ReadSchema`</ph>.</source>
          <target state="translated">데이터 집합에 이미 스키마 또는 문서에 인라인 스키마를 하는 경우 설정 <ph id="ph1">`XmlReadMode`</ph> 를 <ph id="ph2">`ReadSchema`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.XmlReadMode.Auto">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.XmlReadMode.Auto">
          <source>If the dataset does not already have a schema and the document does not contain an in-line schema, sets <ph id="ph1">`XmlReadMode`</ph> to <ph id="ph2">`InferSchema`</ph>.</source>
          <target state="translated">데이터 집합에 아직 스키마 없는 경우 문서에 인라인 스키마가 없습니다. 설정 <ph id="ph1">`XmlReadMode`</ph> 를 <ph id="ph2">`InferSchema`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="F:System.Data.XmlReadMode.DiffGram">
          <source>Reads a DiffGram, applying changes from the DiffGram to the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">DiffGram을 읽고 DiffGram의 변경 내용을 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>에 적용합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="F:System.Data.XmlReadMode.DiffGram">
          <source>The semantics are identical to those of a <ph id="ph1">&lt;see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /&gt;</ph> operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /&gt;</ph> 작업과 의미론이 같습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="F:System.Data.XmlReadMode.DiffGram">
          <source>As with the <ph id="ph1">&lt;see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /&gt;</ph> operation, <ph id="ph2">&lt;see cref="P:System.Data.DataRow.RowState" /&gt;</ph> values are preserved.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /&gt;</ph> 작업에서처럼 <ph id="ph2">&lt;see cref="P:System.Data.DataRow.RowState" /&gt;</ph> 값이 유지됩니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="F:System.Data.XmlReadMode.DiffGram">
          <source>Input to <ph id="ph1">&lt;see cref="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)" /&gt;</ph> with DiffGrams should only be obtained using the output from <ph id="ph2">&lt;see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /&gt;</ph> as a DiffGram.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)" /&gt;</ph>의 출력을 DiffGram으로 사용해야 DiffGram을 사용한 <ph id="ph2">&lt;see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /&gt;</ph> 입력을 가져올 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.XmlReadMode.DiffGram">
          <source>The target <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> must have the same schema as the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> on which <ph id="ph3">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> as DiffGram is called.</source>
          <target state="translated">대상 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 와 동일한 스키마가 있어야 합니다.는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> 기반이 <ph id="ph3">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> DiffGram 이라고 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.XmlReadMode.DiffGram">
          <source>Otherwise the DiffGram merge operation fails, and an exception is thrown.</source>
          <target state="translated">DiffGram 병합 작업이 실패 하면 그렇지 않은 경우 및 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="F:System.Data.XmlReadMode.Fragment">
          <source>Reads XML fragments, such as those generated by executing FOR XML queries, against an instance of SQL Server.</source>
          <target state="translated">FOR XML 쿼리를 실행하여 생성된 것과 같은 XML 단편을 SQL Server의 인스턴스에 대해 읽습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="F:System.Data.XmlReadMode.Fragment">
          <source>When <ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph> is set to <ph id="ph2">&lt;see langword="Fragment" /&gt;</ph>, the default namespace is read as the inline schema.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph>를 <ph id="ph2">&lt;see langword="Fragment" /&gt;</ph>로 설정한 경우 기본 네임스페이스를 인라인 스키마로 읽습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="F:System.Data.XmlReadMode.IgnoreSchema">
          <source>Ignores any inline schema and reads data into the existing <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> schema.</source>
          <target state="translated">인라인 스키마를 무시하고 데이터를 기존 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 스키마로 읽어옵니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="F:System.Data.XmlReadMode.IgnoreSchema">
          <source>If any data does not match the existing schema, it is discarded (including data from differing namespaces defined for the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>).</source>
          <target state="translated">데이터가 기존 스키마와 일치하지 않으면 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>에 정의된 다른 네임스페이스의 데이터와 함께 삭제됩니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="F:System.Data.XmlReadMode.IgnoreSchema">
          <source>If the data is a DiffGram, <ph id="ph1">&lt;see langword="IgnoreSchema" /&gt;</ph> has the same functionality as <ph id="ph2">&lt;see langword="DiffGram" /&gt;</ph>.</source>
          <target state="translated">데이터가 DiffGram이면 <ph id="ph1">&lt;see langword="IgnoreSchema" /&gt;</ph>는 <ph id="ph2">&lt;see langword="DiffGram" /&gt;</ph>과 같은 기능을 가집니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="F:System.Data.XmlReadMode.InferSchema">
          <source>Ignores any inline schema, infers schema from the data and loads the data.</source>
          <target state="translated">인라인 스키마를 무시하고 데이터로부터 스키마를 유추한 다음 해당 데이터를 로드합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="F:System.Data.XmlReadMode.InferSchema">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> already contains a schema, the current schema is extended by adding new tables or adding columns to existing tables.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>에 스키마가 이미 있으면 새 테이블을 추가하거나 기존 테이블에 열을 추가하여 현재 스키마를 확장합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="F:System.Data.XmlReadMode.InferSchema">
          <source>An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.</source>
          <target state="translated">유추된 테이블이 이미 있지만 네임스페이스가 다르거나 유추된 열 중에 기존 열과 충돌하는 열이 있으면 예외가 throw됩니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="F:System.Data.XmlReadMode.InferTypedSchema">
          <source>Ignores any inline schema, infers a strongly typed schema from the data, and loads the data.</source>
          <target state="translated">모든 인라인 스키마를 무시하고 데이터로부터 강력한 형식의 스키마를 유추한 다음 해당 데이터를 로드합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="F:System.Data.XmlReadMode.InferTypedSchema">
          <source>If the type cannot be inferred from the data, it is interpreted as string data.</source>
          <target state="translated">데이터에서 형식을 유추할 수 없으면 이 형식은 문자열 데이터로 해석됩니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="F:System.Data.XmlReadMode.InferTypedSchema">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> already contains a schema, the current schema is extended, either by adding new tables or by adding columns to existing tables.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>에 이미 스키마가 있으면 새 테이블을 추가하거나 기존 테이블에 열을 추가하여 현재 스키마를 확장합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="F:System.Data.XmlReadMode.InferTypedSchema">
          <source>An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.</source>
          <target state="translated">유추된 테이블이 이미 있지만 네임스페이스가 다르거나 유추된 열 중에 기존 열과 충돌하는 열이 있으면 예외가 throw됩니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="F:System.Data.XmlReadMode.ReadSchema">
          <source>Reads any inline schema and loads the data.</source>
          <target state="translated">인라인 스키마를 읽고 데이터를 로드합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="F:System.Data.XmlReadMode.ReadSchema">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> already contains schema, new tables may be added to the schema, but an exception is thrown if any tables in the inline schema already exist in the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>에 스키마가 이미 있으면 스키마에 새 테이블을 추가할 수 있지만 인라인 스키마의 테이블이 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>에 이미 있으면 예외가 throw됩니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>