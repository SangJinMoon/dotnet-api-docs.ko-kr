<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DataRowCollection.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52f0ecafcb75acea3270a764c0d5c732549783e43.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2f0ecafcb75acea3270a764c0d5c732549783e43</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.DataRowCollection">
          <source>Represents a collection of rows for a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>에 대한 행 컬렉션을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataRowCollection">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataRowCollection&gt;</ph> is a major component of the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataRowCollection&gt;</ph> 의 주요 구성 요소는 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataRowCollection">
          <source>While the <ph id="ph1">&lt;xref:System.Data.DataColumnCollection&gt;</ph> defines the schema of the table, the <ph id="ph2">&lt;xref:System.Data.DataRowCollection&gt;</ph> contains the actual data for the table, where each <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> in the <ph id="ph4">&lt;xref:System.Data.DataRowCollection&gt;</ph> represents a single row.</source>
          <target state="translated">동안는 <ph id="ph1">&lt;xref:System.Data.DataColumnCollection&gt;</ph> 테이블의 스키마를 정의 <ph id="ph2">&lt;xref:System.Data.DataRowCollection&gt;</ph> 는 테이블에 대 한 실제 데이터가 여기서 각 <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> 에 <ph id="ph4">&lt;xref:System.Data.DataRowCollection&gt;</ph> 단일 행을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataRowCollection">
          <source>You can call the <ph id="ph1">&lt;xref:System.Data.DataRowCollection.Add%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataRowCollection.Remove%2A&gt;</ph> methods to insert and delete <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> objects from the <ph id="ph4">&lt;xref:System.Data.DataRowCollection&gt;</ph>.</source>
          <target state="translated">호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.Data.DataRowCollection.Add%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Data.DataRowCollection.Remove%2A&gt;</ph> 삽입 및 삭제 하는 메서드를 <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> 에서 개체는 <ph id="ph4">&lt;xref:System.Data.DataRowCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataRowCollection">
          <source>You can also call the <ph id="ph1">&lt;xref:System.Data.DataRowCollection.Find%2A&gt;</ph> method to search for <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> objects that contain specific values in primary key columns, and the <ph id="ph3">&lt;xref:System.Data.DataRowCollection.Contains%2A&gt;</ph> method to search character-based data for single words or phrases.</source>
          <target state="translated">호출할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Data.DataRowCollection.Find%2A&gt;</ph> 검색할 메서드의 <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> 기본 키 열에 있는 특정 값을 포함 하는 개체 및 <ph id="ph3">&lt;xref:System.Data.DataRowCollection.Contains%2A&gt;</ph> 메서드를 한 단어 또는 구를 문자 기반 데이터를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataRowCollection">
          <source>For other operations, such as sorting or filtering the <ph id="ph1">&lt;xref:System.Data.DataRowCollection&gt;</ph>, use methods on the <ph id="ph2">&lt;xref:System.Data.DataRowCollection&gt;</ph>’s associated <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">정렬 또는 필터링 등의 다른 작업에 대 한는 <ph id="ph1">&lt;xref:System.Data.DataRowCollection&gt;</ph>에서 메서드를 사용 하 여는 <ph id="ph2">&lt;xref:System.Data.DataRowCollection&gt;</ph>관련 <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataRowCollection">
          <source>The first example in this section prints the value of column 1 for every row in a <ph id="ph1">&lt;xref:System.Data.DataRowCollection&gt;</ph>.</source>
          <target state="translated">이 섹션의 첫 번째 예제에서 모든 행에 대해 열 1의 값을 출력 한 <ph id="ph1">&lt;xref:System.Data.DataRowCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataRowCollection">
          <source>The second example adds a new row created by using the <ph id="ph1">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> method to the <ph id="ph2">&lt;xref:System.Data.DataRowCollection&gt;</ph>.</source>
          <target state="translated">사용 하 여 만든 새 행을 추가 하는 두 번째 예제는 <ph id="ph1">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.Data.DataRowCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataRowCollection">
          <source>This type is safe for multithreaded read operations.</source>
          <target state="translated">이 형식은 다중 스레드 읽기 작업에 안전 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataRowCollection">
          <source>You must synchronize any write operations.</source>
          <target state="translated">쓰기 작업을 동기화 해야 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="T:System.Data.DataRowCollection">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> to the <ph id="ph2">&lt;see cref="T:System.Data.DataRowCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>에 <ph id="ph2">&lt;see cref="T:System.Data.DataRowCollection" /&gt;</ph>를 추가합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.Add(System.Data.DataRow)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> to add.</source>
          <target state="translated">추가할 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.Add(System.Data.DataRow)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> to the <ph id="ph2">&lt;see cref="T:System.Data.DataRowCollection" /&gt;</ph> object.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>를 <ph id="ph2">&lt;see cref="T:System.Data.DataRowCollection" /&gt;</ph> 개체에 추가합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.Add(System.Data.DataRow)">
          <source>To create a new <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>, you must use the <ph id="ph2">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> class.</source>
          <target state="translated">새로 만들려면 <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>를 사용 해야 합니다는 <ph id="ph2">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> 의 메서드는 <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.Add(System.Data.DataRow)">
          <source>When you use the <ph id="ph1">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> method, a new <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> object is returned using the schema of parent <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">사용 하는 경우는 <ph id="ph1">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> 메서드, 새 <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> 부모 스키마를 사용 하 여 개체를 반환 하는 <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.Add(System.Data.DataRow)">
          <source>After you create the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> object and set the values for each of its columns, use the <ph id="ph2">&lt;xref:System.Data.DataRowCollection.Add%2A&gt;</ph> method to add the object to the collection.</source>
          <target state="translated">만든 후는 <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> 개체 및의 각 열에 대 한 값을 설정 하 고, 사용 하 여는 <ph id="ph2">&lt;xref:System.Data.DataRowCollection.Add%2A&gt;</ph> 개체를 컬렉션에 추가 하는 메서드.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.Add(System.Data.DataRow)">
          <source>Generates an exception if the user generates an exception in the <ph id="ph1">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph> event.</source>
          <target state="translated">사용자에서 예외를 생성 하는 경우 예외가 생성의 <ph id="ph1">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.Add(System.Data.DataRow)">
          <source>If an exception occurs, the row is not added to the table.</source>
          <target state="translated">예외가 발생 하는 경우 테이블에 행 추가 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.Add(System.Data.DataRow)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.DataRowCollection.Add%2A&gt;</ph> method to add a new <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> to a <ph id="ph3">&lt;xref:System.Data.DataRowCollection&gt;</ph> object.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Data.DataRowCollection.Add%2A&gt;</ph> 새 메서드 <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> 에 <ph id="ph3">&lt;xref:System.Data.DataRowCollection&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.Add(System.Data.DataRow)">
          <source>The row is null.</source>
          <target state="translated">행이 null인 경우</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.Add(System.Data.DataRow)">
          <source>The row either belongs to another table or already belongs to this table.</source>
          <target state="translated">이 행이 다른 테이블에 속하거나 이 테이블에 이미 속해 있는 경우</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.Add(System.Data.DataRow)">
          <source>The addition invalidates a constraint.</source>
          <target state="translated">추가로 인해 제약 조건이 무효화되는경우</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.Add(System.Data.DataRow)">
          <source>The addition tries to put a null in a <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> where <ph id="ph2">&lt;see cref="P:System.Data.DataColumn.AllowDBNull" /&gt;</ph> is false.</source>
          <target state="translated">추가하는 동안 <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph>이 false인 <ph id="ph2">&lt;see cref="P:System.Data.DataColumn.AllowDBNull" /&gt;</ph>에 null을 삽입하려고 하는 경우</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.Add(System.Object[])">
          <source>The array of values that are used to create the new row.</source>
          <target state="translated">새 행을 만드는데 사용하는 값 배열입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.Add(System.Object[])">
          <source>Creates a row using specified values and adds it to the <ph id="ph1">&lt;see cref="T:System.Data.DataRowCollection" /&gt;</ph>.</source>
          <target state="translated">지정한 값을 사용하여 행을 만들고 그 행을 <ph id="ph1">&lt;see cref="T:System.Data.DataRowCollection" /&gt;</ph>에 추가합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.Add(System.Object[])">
          <source>None.</source>
          <target state="translated">없음</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.Add(System.Object[])">
          <source>If a <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> object has its <ph id="ph2">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph> set to True, null should be passed to get the default value for that column.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> 개체에 해당 <ph id="ph2">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph> True로 설정 된 null이 전달 되어야 해당 열에 대 한 기본 값을 가져올 수 있습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.Add(System.Object[])">
          <source>Exceptions can also occur if you generate an exception during either a <ph id="ph1">&lt;xref:System.Data.DataTable.ColumnChanging&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph> event.</source>
          <target state="translated">예외는 수행 하는 동안 예외를 생성 하는 경우에 발생할 수 있습니다는 <ph id="ph1">&lt;xref:System.Data.DataTable.ColumnChanging&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.Add(System.Object[])">
          <source>If an exception occurs, the row is not added to the table.</source>
          <target state="translated">예외가 발생 하는 경우 테이블에 행 추가 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.Add(System.Object[])">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.DataRowCollection.Add%2A&gt;</ph> method to create and add a new <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> object to a <ph id="ph3">&lt;xref:System.Data.DataRowCollection&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Data.DataRowCollection.Add%2A&gt;</ph> 메서드를 만들고 새 추가 <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> 개체는 <ph id="ph3">&lt;xref:System.Data.DataRowCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.Add(System.Object[])">
          <source>The array is larger than the number of columns in the table.</source>
          <target state="translated">배열이 테이블의 열 수보다 큰 경우</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.Add(System.Object[])">
          <source>A value does not match its respective column type.</source>
          <target state="translated">값이 해당 열 형식과 일치하지 않는 경우</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.Add(System.Object[])">
          <source>Adding the row invalidates a constraint.</source>
          <target state="translated">행을 추가하여 제약 조건을 무효화한 경우</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.Add(System.Object[])">
          <source>Trying to put a null in a column where <ph id="ph1">&lt;see cref="P:System.Data.DataColumn.AllowDBNull" /&gt;</ph> is false.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.DataColumn.AllowDBNull" /&gt;</ph>이 false인 열에 null을 설정하려고 한 경우</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.Clear">
          <source>Clears the collection of all rows.</source>
          <target state="translated">모든 행의 컬렉션을 지웁니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.Clear">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.ForeignKeyConstraint" /&gt;</ph> is enforced on the <ph id="ph2">&lt;see cref="T:System.Data.DataRowCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.ForeignKeyConstraint" /&gt;</ph>에 <ph id="ph2">&lt;see cref="T:System.Data.DataRowCollection" /&gt;</ph>가 적용되는 경우</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="T:System.Data.DataRowCollection">
          <source>Gets a value that indicates whether the primary key columns of any row in the collection contain the specified value.</source>
          <target state="translated">컬렉션에 있는 모든 행의 기본 키 열에 지정한 값이 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.Contains(System.Object)">
          <source>The value of the primary key to test for.</source>
          <target state="translated">테스트할 기본 키 값입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.Contains(System.Object)">
          <source>Gets a value that indicates whether the primary key of any row in the collection contains the specified value.</source>
          <target state="translated">컬렉션에 있는 모든 행의 기본 키에 지정한 값이 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.Contains(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the collection contains a <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> with the specified primary key value; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">지정한 기본 키 값이 있는 <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>가 컬렉션에 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.Contains(System.Object)">
          <source>To use the <ph id="ph1">&lt;xref:System.Data.DataRowCollection.Contains%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> object to which the <ph id="ph3">&lt;xref:System.Data.DataRowCollection&gt;</ph> object belongs to must have at least one column designated as a primary key column.</source>
          <target state="translated">사용 하는 <ph id="ph1">&lt;xref:System.Data.DataRowCollection.Contains%2A&gt;</ph> 메서드를는 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> 있는 개체를는 <ph id="ph3">&lt;xref:System.Data.DataRowCollection&gt;</ph> 개체가 속해 있어야 기본 키 열으로 지정 된 열이 하나 이상 있습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.Contains(System.Object)">
          <source>See the <ph id="ph1">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> property for more information about how to create a primary key column.</source>
          <target state="translated">참조는 <ph id="ph1">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> 기본 키 열을 만드는 방법에 대 한 자세한 내용은 속성입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.Contains(System.Object)">
          <source>As soon as you have determined that a row contains the specified value, you can use the <ph id="ph1">&lt;xref:System.Data.DataRowCollection.Find%2A&gt;</ph> method to return the specific <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> object that has the value.</source>
          <target state="translated">사용할 수는 행에 지정된 된 값이 포함 되어 있는지를 확인 한으로 <ph id="ph1">&lt;xref:System.Data.DataRowCollection.Find%2A&gt;</ph> 특정을 반환 하는 메서드 <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> 개체 값입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.Contains(System.Object)">
          <source>The following Visual Basic example uses the <ph id="ph1">&lt;xref:System.Data.DataRowCollection.Contains%2A&gt;</ph> method to determine whether a <ph id="ph2">&lt;xref:System.Data.DataRowCollection&gt;</ph> object contains a specific value.</source>
          <target state="translated">사용 하 여 다음 Visual Basic 예제는 <ph id="ph1">&lt;xref:System.Data.DataRowCollection.Contains%2A&gt;</ph> 결정 하는 메서드 여부는 <ph id="ph2">&lt;xref:System.Data.DataRowCollection&gt;</ph> 개체에 특정 값이 포함 되어 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.Contains(System.Object)">
          <source>The table does not have a primary key.</source>
          <target state="translated">이 테이블에 기본 키가 없는 경우</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.Contains(System.Object[])">
          <source>An array of primary key values to test for.</source>
          <target state="translated">테스트할 기본 키 값 배열입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.Contains(System.Object[])">
          <source>Gets a value that indicates whether the primary key columns of any row in the collection contain the values specified in the object array.</source>
          <target state="translated">컬렉션에 있는 모든 행의 기본 키 열에 개체 배열에 지정한 값이 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.Contains(System.Object[])">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Data.DataRowCollection" /&gt;</ph> contains a <ph id="ph3">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> with the specified key values; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">지정한 키 값이 있는 <ph id="ph2">&lt;see cref="T:System.Data.DataRowCollection" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>에 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.Contains(System.Object[])">
          <source>To use the <ph id="ph1">&lt;xref:System.Data.DataRowCollection.Contains%2A&gt;</ph> method with an array of values, the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> object to which the <ph id="ph3">&lt;xref:System.Data.DataRowCollection&gt;</ph> object belongs must have an array of columns designated as primary keys.</source>
          <target state="translated">사용 하는 <ph id="ph1">&lt;xref:System.Data.DataRowCollection.Contains%2A&gt;</ph> 값의 배열 사용 하 여 메서드는 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> 있는 개체를는 <ph id="ph3">&lt;xref:System.Data.DataRowCollection&gt;</ph> 개체가 속해 있어야 기본 키로 지정 된 열 세트가 있습니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.Contains(System.Object[])">
          <source>See the <ph id="ph1">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> property for more information about how to create an array of primary key columns.</source>
          <target state="translated">참조는 <ph id="ph1">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> 배열을의 기본 키 열을 만드는 방법에 대 한 자세한 내용은 속성입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.Contains(System.Object[])">
          <source>The number of array elements must correspond to the number of primary key columns in the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">배열 요소의 수에 기본 키 열 수와 일치 해야 합니다는 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.Contains(System.Object[])">
          <source>As soon as you have determined that a row contains the specified value, use the <ph id="ph1">&lt;xref:System.Data.DataRowCollection.Find%2A&gt;</ph> method to return the specific <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> object that has the value.</source>
          <target state="translated">사용 하 여 행에 지정된 된 값을 결정 했으면으로 <ph id="ph1">&lt;xref:System.Data.DataRowCollection.Find%2A&gt;</ph> 특정을 반환 하는 메서드 <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> 값이 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.Contains(System.Object[])">
          <source>The following Visual Basic example uses the <ph id="ph1">&lt;xref:System.Data.DataRowCollection.Contains%2A&gt;</ph> method to find a particular row in a <ph id="ph2">&lt;xref:System.Data.DataRowCollection&gt;</ph> object.</source>
          <target state="translated">사용 하 여 다음 Visual Basic 예제는 <ph id="ph1">&lt;xref:System.Data.DataRowCollection.Contains%2A&gt;</ph> 의 특정 행을 찾을 수 있는 메서드는 <ph id="ph2">&lt;xref:System.Data.DataRowCollection&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.Contains(System.Object[])">
          <source>The example creates an array of values, one element for each primary key in the table, and then passes the array to the method to return a <ph id="ph1">`true`</ph> or <ph id="ph2">`false`</ph>.</source>
          <target state="translated">이 예제에서는 하나의 요소인 테이블의 각 기본 키에 대 한 값의 배열을 만들고 다음을 반환 하는 메서드는 배열을 전달는 <ph id="ph1">`true`</ph> 또는 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.Contains(System.Object[])">
          <source>The table does not have a primary key.</source>
          <target state="translated">이 테이블에 기본 키가 없는 경우</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="T:System.Data.DataRowCollection">
          <source>Copies all the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects from the collection into the given array, starting at the given destination array index.</source>
          <target state="translated">컬렉션의 모든 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 개체를 지정된 배열의 지정된 대상 배열 인덱스에서 시작하는 위치에 복사합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from the <ph id="ph1">&lt;see langword="DataRowCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="DataRowCollection" /&gt;</ph>에서 복사한 요소의 대상인 1차원 배열입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.CopyTo(System.Array,System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">배열에는 0부터 시작하는 인덱스가 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in the array at which copying begins.</source>
          <target state="translated">복사를 시작할 배열의 인덱스(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.CopyTo(System.Array,System.Int32)">
          <source>Copies all the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects from the collection into the given array, starting at the given destination array index.</source>
          <target state="translated">컬렉션의 모든 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 개체를 지정된 배열의 지정된 대상 배열 인덱스에서 시작하는 위치에 복사합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.CopyTo(System.Data.DataRow[],System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from the <ph id="ph1">&lt;see langword="DataRowCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="DataRowCollection" /&gt;</ph>에서 복사한 요소의 대상인 1차원 배열입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.CopyTo(System.Data.DataRow[],System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">배열에는 0부터 시작하는 인덱스가 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.CopyTo(System.Data.DataRow[],System.Int32)">
          <source>The zero-based index in the array at which copying begins.</source>
          <target state="translated">복사를 시작할 배열의 인덱스(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.CopyTo(System.Data.DataRow[],System.Int32)">
          <source>Copies all the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects from the collection into the given array, starting at the given destination array index.</source>
          <target state="translated">컬렉션의 모든 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 개체를 지정된 배열의 지정된 대상 배열 인덱스에서 시작하는 위치에 복사합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.Data.DataRowCollection.Count">
          <source>Gets the total number of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects in this collection.</source>
          <target state="translated">이 컬렉션에 있는 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 개체의 총 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataRowCollection.Count">
          <source>The total number of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects in this collection.</source>
          <target state="translated">이 컬렉션에 있는 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 개체의 총 수입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="T:System.Data.DataRowCollection">
          <source>Gets a specified <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> using the <ph id="ph2">&lt;see cref="P:System.Data.DataTable.PrimaryKey" /&gt;</ph> index (performance should be an O(log n) operation).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 인덱스를 사용해 지정된 <ph id="ph2">&lt;see cref="P:System.Data.DataTable.PrimaryKey" /&gt;</ph>를 가져옵니다 (성능은 O(log n) 연산이어야 합니다).</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.Find(System.Object)">
          <source>The primary key value of the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> to find.</source>
          <target state="translated">찾을 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>의 기본 키 값입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.Find(System.Object)">
          <source>Gets the row specified by the primary key value.</source>
          <target state="translated">기본 키 값으로 지정한 행을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.Find(System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> that contains the primary key value specified; otherwise a null value if the primary key value does not exist in the <ph id="ph2">&lt;see cref="T:System.Data.DataRowCollection" /&gt;</ph>.</source>
          <target state="translated">지정한 기본 키 값이 있는 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>이거나, 기본 키가 <ph id="ph2">&lt;see cref="T:System.Data.DataRowCollection" /&gt;</ph>에 없으면 null 값입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.Find(System.Object)">
          <source>To use the <ph id="ph1">`Find`</ph> method, the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> object to which the <ph id="ph3">&lt;xref:System.Data.DataRowCollection&gt;</ph> object belongs must have at least one column designated as a primary key column.</source>
          <target state="translated">사용 하는 <ph id="ph1">`Find`</ph> 메서드를는 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> 있는 개체를는 <ph id="ph3">&lt;xref:System.Data.DataRowCollection&gt;</ph> 개체가 속해 있어야 기본 키 열으로 지정 된 열이 하나 이상 있습니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.Find(System.Object)">
          <source>See the <ph id="ph1">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> property for more information about how to create a primary key column.</source>
          <target state="translated">참조는 <ph id="ph1">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> 기본 키 열을 만드는 방법에 대 한 자세한 내용은 속성입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.Find(System.Object)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.DataRowCollection.Find%2A&gt;</ph> method to find the primary key value "2" in a collection of <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> objects.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Data.DataRowCollection.Find%2A&gt;</ph> 메서드를 기본 키 값 "2"에서 컬렉션의 <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.Find(System.Object)">
          <source>The method returns the specific <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> object letting you change its values, as needed.</source>
          <target state="translated">메서드는 특정 반환 <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> 개체의 값을 변경 하면 필요에 따라 합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.Find(System.Object)">
          <source>The table does not have a primary key.</source>
          <target state="translated">이 테이블에 기본 키가 없는 경우</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.Find(System.Object[])">
          <source>An array of primary key values to find.</source>
          <target state="translated">찾을 기본 키 값 배열입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.Find(System.Object[])">
          <source>The type of the array is <ph id="ph1">&lt;see langword="Object" /&gt;</ph>.</source>
          <target state="translated">이 배열의 형식은 <ph id="ph1">&lt;see langword="Object" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.Find(System.Object[])">
          <source>Gets the row that contains the specified primary key values.</source>
          <target state="translated">지정한 기본 키 값이 있는 행을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.Find(System.Object[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> object that contains the primary key values specified; otherwise a null value if the primary key value does not exist in the <ph id="ph2">&lt;see cref="T:System.Data.DataRowCollection" /&gt;</ph>.</source>
          <target state="translated">지정한 기본 키 값이 있는 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 개체이거나, 기본 키 값이 <ph id="ph2">&lt;see cref="T:System.Data.DataRowCollection" /&gt;</ph>에 없으면 null 값입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.Find(System.Object[])">
          <source>To use the <ph id="ph1">&lt;xref:System.Data.DataRowCollection.Find%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> object to which the <ph id="ph3">&lt;xref:System.Data.DataRowCollection&gt;</ph> object belongs must have at least one column designated as a primary key column.</source>
          <target state="translated">사용 하는 <ph id="ph1">&lt;xref:System.Data.DataRowCollection.Find%2A&gt;</ph> 메서드를는 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> 있는 개체를는 <ph id="ph3">&lt;xref:System.Data.DataRowCollection&gt;</ph> 개체가 속해 있어야 기본 키 열으로 지정 된 열이 하나 이상 있습니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.Find(System.Object[])">
          <source>When two or more rows have the same primary key value, then the first row found is returned.</source>
          <target state="translated">두 개 이상의 행이 동일한 기본 키 값을가지고 때 찾은 첫 번째 행이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.Find(System.Object[])">
          <source>This occurs when <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> is set to false.</source>
          <target state="translated">이 문제가 발생 하면 <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> 가 false로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.Find(System.Object[])">
          <source>See the <ph id="ph1">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> property for more information about how to create a <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> column, or an array of <ph id="ph3">&lt;xref:System.Data.DataColumn&gt;</ph> objects when the table has more than one primary key.</source>
          <target state="translated">참조는 <ph id="ph1">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> 를 만드는 방법에 대 한 자세한 내용은 <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> 열 또는 배열을 <ph id="ph3">&lt;xref:System.Data.DataColumn&gt;</ph> 테이블에 둘 이상의 기본 키 개체입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.Find(System.Object[])">
          <source>The following example uses the values of an array to find a specific row in a collection of <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> objects.</source>
          <target state="translated">다음 예제에서는 배열 값을 사용 하 여 컬렉션의 특정 행을 찾기 위해 <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.Find(System.Object[])">
          <source>The method assumes that a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> exists with three primary key columns.</source>
          <target state="translated">메서드를 가정 하는 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> 세 개의 기본 키 열으로 존재 합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.Find(System.Object[])">
          <source>After creating an array of the values, the code uses the <ph id="ph1">&lt;xref:System.Data.DataRowCollection.Find%2A&gt;</ph> method with the array to get the particular object that you want.</source>
          <target state="translated">코드에서는 값의 배열의 만든 후 다음을 사용 합니다.는 <ph id="ph1">&lt;xref:System.Data.DataRowCollection.Find%2A&gt;</ph> 메서드를 원하는 특정 개체를 가져올 배열입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.Find(System.Object[])">
          <source>No row corresponds to that index value.</source>
          <target state="translated">그 인덱스 값에 일치하는 행이 없는 경우</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.Find(System.Object[])">
          <source>The table does not have a primary key.</source>
          <target state="translated">이 테이블에 기본 키가 없는 경우</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.GetEnumerator">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> for this collection.</source>
          <target state="translated">이 컬렉션의 <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph>를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> for this collection.</source>
          <target state="translated">이 컬렉션의 <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.IndexOf(System.Data.DataRow)">
          <source>The <ph id="ph1">&lt;see langword="DataRow" /&gt;</ph> to search for.</source>
          <target state="translated">검색할 <ph id="ph1">&lt;see langword="DataRow" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.IndexOf(System.Data.DataRow)">
          <source>Gets the index of the specified <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> object.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 개체의 인덱스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.IndexOf(System.Data.DataRow)">
          <source>The zero-based index of the row, or -1 if the row is not found in the collection.</source>
          <target state="translated">행의 인덱스(0부터 시작)이거나, 행이 컬렉션에 없으면 -1입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.InsertAt(System.Data.DataRow,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> to add.</source>
          <target state="translated">추가할 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.InsertAt(System.Data.DataRow,System.Int32)">
          <source>The (zero-based) location in the collection where you want to add the <ph id="ph1">&lt;see langword="DataRow" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="DataRow" /&gt;</ph>를 추가하려는 컬렉션에 있는 0에서 시작하는 위치입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.InsertAt(System.Data.DataRow,System.Int32)">
          <source>Inserts a new row into the collection at the specified location.</source>
          <target state="translated">컬렉션의 지정한 위치에 새 행을 삽입합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.InsertAt(System.Data.DataRow,System.Int32)">
          <source>The location specified by <ph id="ph1">&lt;xref:System.Data.DataRowCollection.InsertAt%2A&gt;</ph> is reflected by the order of rows in the <ph id="ph2">&lt;xref:System.Data.DataRowCollection&gt;</ph> only.</source>
          <target state="translated">지정 된 위치 <ph id="ph1">&lt;xref:System.Data.DataRowCollection.InsertAt%2A&gt;</ph> 의 행 순서에 따라서만 반영 되는 <ph id="ph2">&lt;xref:System.Data.DataRowCollection&gt;</ph> 만 합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.InsertAt(System.Data.DataRow,System.Int32)">
          <source>If more than one row is returned in a <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> array, the inserted row may not be returned in the location specified by <ph id="ph2">&lt;xref:System.Data.DataRowCollection.InsertAt%2A&gt;</ph>.</source>
          <target state="translated">에 둘 이상의 행이 반환 되는 <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> 배열에 삽입된 된 행에서 지정 된 위치에 반환 될 수 <ph id="ph2">&lt;xref:System.Data.DataRowCollection.InsertAt%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.InsertAt(System.Data.DataRow,System.Int32)">
          <source>For example, the <ph id="ph1">&lt;xref:System.Data.DataTable.Rows%2A&gt;</ph> property returns the row in the specified insert position.</source>
          <target state="translated">예를 들어는 <ph id="ph1">&lt;xref:System.Data.DataTable.Rows%2A&gt;</ph> 속성 삽입 지정 된 위치에 행을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.InsertAt(System.Data.DataRow,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Data.DataTable.Select%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataRow.GetChildRows%2A&gt;</ph> may not.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.Select%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Data.DataRow.GetChildRows%2A&gt;</ph> 하지 않을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.InsertAt(System.Data.DataRow,System.Int32)">
          <source>When you write the contents of the <ph id="ph1">&lt;xref:System.Data.DataRowCollection&gt;</ph> as XML, for example, <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph>, the rows are written according to the order specified by the <ph id="ph3">&lt;xref:System.Data.DataRowCollection&gt;</ph>.</source>
          <target state="translated">콘텐츠를 작성 하는 경우는 <ph id="ph1">&lt;xref:System.Data.DataRowCollection&gt;</ph> xml의 예를 들어 <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph>, 행이 지정 된 순서에 따라 작성 됩니다는 <ph id="ph3">&lt;xref:System.Data.DataRowCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.InsertAt(System.Data.DataRow,System.Int32)">
          <source>If the value specified for the <ph id="ph1">`pos`</ph> parameter is greater than the number of rows in the collection, the new row is added to the end.</source>
          <target state="translated">에 대 한 지정 된 값은 <ph id="ph1">`pos`</ph> 매개 변수가 컬렉션의 행 수보다 크면 새 행의 끝에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="P:System.Data.DataRowCollection.Item(System.Int32)">
          <source>The zero-based index of the row to return.</source>
          <target state="translated">반환할 행의 인덱스(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="P:System.Data.DataRowCollection.Item(System.Int32)">
          <source>Gets the row at the specified index.</source>
          <target state="translated">지정된 인덱스의 행을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataRowCollection.Item(System.Int32)">
          <source>The specified <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataRowCollection.Item(System.Int32)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataRowCollection.Contains%2A&gt;</ph> method to determine whether a specific value exists in the key column of a row.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Data.DataRowCollection.Contains%2A&gt;</ph> 메서드는 행의 키 열에 특정 값이 있는지 여부를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataRowCollection.Item(System.Int32)">
          <source>The following example prints the value of column 1 of each row in a <ph id="ph1">&lt;xref:System.Data.DataRowCollection&gt;</ph>.</source>
          <target state="translated">다음 예제에서 각 행의 열 1의 값을 출력 한 <ph id="ph1">&lt;xref:System.Data.DataRowCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="P:System.Data.DataRowCollection.Item(System.Int32)">
          <source>The index value is greater than the number of items in the collection.</source>
          <target state="translated">인덱스 값이 컬렉션의 항목 수보다 큰 경우</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> to remove.</source>
          <target state="translated">제거할 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)">
          <source>Removes the specified <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> from the collection.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>를 컬렉션에서 제거합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)">
          <source>When a row is removed, all data in that row is lost.</source>
          <target state="translated">행이 제거 되는 행의 모든 데이터가 손실 됩니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)">
          <source>You can also call the <ph id="ph1">&lt;xref:System.Data.DataRow.Delete%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> class to just mark a row for removal.</source>
          <target state="translated">호출할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Data.DataRow.Delete%2A&gt;</ph> 의 메서드는 <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> 에게만 클래스 제거에 대 한 행을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)">
          <source>Calling <ph id="ph1">`Remove`</ph> is the same as calling <ph id="ph2">&lt;xref:System.Data.DataRow.Delete%2A&gt;</ph> and then calling <ph id="ph3">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph>.</source>
          <target state="translated">호출 <ph id="ph1">`Remove`</ph> 호출할 때와 동일 하 게 <ph id="ph2">&lt;xref:System.Data.DataRow.Delete%2A&gt;</ph> 호출한 다음 <ph id="ph3">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)">
          <source><ph id="ph1">&lt;xref:System.Data.DataRowCollection.Remove%2A&gt;</ph> should not be called in a foreach loop while iterating through a <ph id="ph2">&lt;xref:System.Data.DataRowCollection&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataRowCollection.Remove%2A&gt;</ph> 통해 반복 하는 동안 foreach 루프에서 호출 하지 않아야는 <ph id="ph2">&lt;xref:System.Data.DataRowCollection&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)">
          <source><ph id="ph1">&lt;xref:System.Data.DataRowCollection.Remove%2A&gt;</ph> modifies the state of the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataRowCollection.Remove%2A&gt;</ph> 컬렉션의 상태를 수정합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Data.DataRowCollection.Clear%2A&gt;</ph> method to remove all members of the collection at one time.</source>
          <target state="translated">사용할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Data.DataRowCollection.Clear%2A&gt;</ph> 메서드를 한 번에 컬렉션의 모든 구성원을 제거 합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.DataRowCollection.Remove%2A&gt;</ph> method to delete a found row in a <ph id="ph2">&lt;xref:System.Data.DataRowCollection&gt;</ph> object.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Data.DataRowCollection.Remove%2A&gt;</ph> 에서 찾은 행을 삭제 하는 메서드는 <ph id="ph2">&lt;xref:System.Data.DataRowCollection&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)">
          <source>The example first uses the <ph id="ph1">&lt;xref:System.Data.DataRowCollection.Contains%2A&gt;</ph> method to determine whether the rows collection contains a row.</source>
          <target state="translated">이 예제에서는 먼저 사용 하 여는 <ph id="ph1">&lt;xref:System.Data.DataRowCollection.Contains%2A&gt;</ph> 행 컬렉션에는 행이 포함 되어 있는지 확인 하는 메서드.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)">
          <source>If it does, the <ph id="ph1">&lt;xref:System.Data.DataRowCollection.Find%2A&gt;</ph> method is used to find the specific row, and the <ph id="ph2">&lt;xref:System.Data.DataRowCollection.Remove%2A&gt;</ph> method is then used to remove the row.</source>
          <target state="translated">그렇지 않으면는 <ph id="ph1">&lt;xref:System.Data.DataRowCollection.Find%2A&gt;</ph> 메서드는 특정 행을 찾는 데 및 <ph id="ph2">&lt;xref:System.Data.DataRowCollection.Remove%2A&gt;</ph> 메서드는 다음 행을 제거 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.RemoveAt(System.Int32)">
          <source>The index of the row to remove.</source>
          <target state="translated">제거할 행의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowCollection.RemoveAt(System.Int32)">
          <source>Removes the row at the specified index from the collection.</source>
          <target state="translated">컬렉션에서 지정된 인덱스의 행을 제거합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.RemoveAt(System.Int32)">
          <source>When a row is removed, all data in that row is lost.</source>
          <target state="translated">행이 제거 되는 행의 모든 데이터가 손실 됩니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.RemoveAt(System.Int32)">
          <source>You can also call the <ph id="ph1">&lt;xref:System.Data.DataRow.Delete%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> class to just mark a row for removal.</source>
          <target state="translated">호출할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Data.DataRow.Delete%2A&gt;</ph> 의 메서드는 <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> 에게만 클래스 제거에 대 한 행을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.RemoveAt(System.Int32)">
          <source>Calling <ph id="ph1">`RemoveAt`</ph> is the same as calling <ph id="ph2">&lt;xref:System.Data.DataRow.Delete%2A&gt;</ph> and then calling <ph id="ph3">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph>.</source>
          <target state="translated">호출 <ph id="ph1">`RemoveAt`</ph> 호출할 때와 동일 하 게 <ph id="ph2">&lt;xref:System.Data.DataRow.Delete%2A&gt;</ph> 호출한 다음 <ph id="ph3">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.RemoveAt(System.Int32)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.DataRowCollection.Clear%2A&gt;</ph> method to remove all members of the collection at one time.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Data.DataRowCollection.Clear%2A&gt;</ph> 메서드를 한 번에 컬렉션의 모든 구성원을 제거 합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowCollection.RemoveAt(System.Int32)">
          <source>The following example removes the last row in a <ph id="ph1">&lt;xref:System.Data.DataRowCollection&gt;</ph> by calling the <ph id="ph2">&lt;xref:System.Data.DataRowCollection.RemoveAt%2A&gt;</ph> method.</source>
          <target state="translated">마지막 행을 제거 하는 다음 예제는 <ph id="ph1">&lt;xref:System.Data.DataRowCollection&gt;</ph> 호출 하 여는 <ph id="ph2">&lt;xref:System.Data.DataRowCollection.RemoveAt%2A&gt;</ph> 메서드.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>