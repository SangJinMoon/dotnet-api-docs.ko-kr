<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="UniqueConstraint.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5efac26f39b4df088e626ddec0419dba7c8778382.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">efac26f39b4df088e626ddec0419dba7c8778382</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.UniqueConstraint">
          <source>Represents a restriction on a set of columns in which all values must be unique.</source>
          <target state="translated">모든 값이 고유해야 하는 열 집합에 대한 제한을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.UniqueConstraint">
          <source>The <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> is enforced on a single column (or columns) to ensure that a primary key value is unique.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> 기본 키 값을 고유한 지 확인 하는 단일 열 (또는 열)에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.UniqueConstraint">
          <source>Constraints are not enforced unless the <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">경우가 아니면 제약 조건이 적용 되지 않습니다는 <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> 속성이 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.UniqueConstraint">
          <source>When the a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is merged with a second <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, constraints are not enforced until all merges are completed.</source>
          <target state="translated">때는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 병합 되어 두 번째 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, 제약 조건에는 모든 병합이 완료 될 때까지 적용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.UniqueConstraint">
          <source>The following example adds a <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> to a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> and sets the <ph id="ph3">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> property to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">다음 예제에서는 추가 <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> 설정 하 고는 <ph id="ph3">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> 속성을 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.UniqueConstraint">
          <source>This type is suitable for multithreaded read operations.</source>
          <target state="translated">이 형식은 다중 스레드 읽기 작업에 적합 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.UniqueConstraint">
          <source>You must synchronize any write operations.</source>
          <target state="translated">쓰기 작업을 동기화 해야 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.Data.UniqueConstraint">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.UniqueConstraint" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.UniqueConstraint" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> to constrain.</source>
          <target state="translated">제한할 <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.UniqueConstraint" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Data.UniqueConstraint" /&gt;</ph>를 사용하여 <ph id="ph2">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn)">
          <source>The following example creates a new <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> and assigns it to the <ph id="ph2">&lt;xref:System.Data.DataRelation.ParentKeyConstraint%2A&gt;</ph> property of a <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 새 <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> 에 할당 된 <ph id="ph2">&lt;xref:System.Data.DataRelation.ParentKeyConstraint%2A&gt;</ph> 속성의는 <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[])">
          <source>The array of <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> objects to constrain.</source>
          <target state="translated">제한할 <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.UniqueConstraint" /&gt;</ph> class with the given array of <ph id="ph2">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.UniqueConstraint" /&gt;</ph> 개체의 지정된 배열을 사용하여 <ph id="ph2">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> to constrain.</source>
          <target state="translated">제한할 <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to indicate that the constraint is a primary key; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">제약 조건이 기본 키이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.UniqueConstraint" /&gt;</ph> class with the <ph id="ph2">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> to constrain, and a value specifying whether the constraint is a primary key.</source>
          <target state="translated">제한할 <ph id="ph1">&lt;see cref="T:System.Data.UniqueConstraint" /&gt;</ph>과 제약 조건이 기본 키인지 여부를 나타내는 값을 사용하여 <ph id="ph2">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[],System.Boolean)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> objects to constrain.</source>
          <target state="translated">제한할 <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[],System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to indicate that the constraint is a primary key; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">제약 조건이 기본 키이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[],System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.UniqueConstraint" /&gt;</ph> class with an array of <ph id="ph2">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> objects to constrain, and a value specifying whether the constraint is a primary key.</source>
          <target state="translated">제한할 <ph id="ph1">&lt;see cref="T:System.Data.UniqueConstraint" /&gt;</ph> 개체의 배열과 제약 조건이 기본 키인지 여부를 나타내는 값을 사용하여 <ph id="ph2">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn)">
          <source>The name of the constraint.</source>
          <target state="translated">제약 조건의 이름입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> to constrain.</source>
          <target state="translated">제한할 <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.UniqueConstraint" /&gt;</ph> class with the specified name and <ph id="ph2">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph>.</source>
          <target state="translated">지정된 이름과 <ph id="ph1">&lt;see cref="T:System.Data.UniqueConstraint" /&gt;</ph>을 사용하여 <ph id="ph2">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn)">
          <source>The following example creates a new <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> and assigns it to the <ph id="ph2">&lt;xref:System.Data.DataRelation.ParentKeyConstraint%2A&gt;</ph> property of a <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 새 <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> 에 할당 된 <ph id="ph2">&lt;xref:System.Data.DataRelation.ParentKeyConstraint%2A&gt;</ph> 속성의는 <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[])">
          <source>The name of the constraint.</source>
          <target state="translated">제약 조건의 이름입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[])">
          <source>The array of <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> objects to constrain.</source>
          <target state="translated">제한할 <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.UniqueConstraint" /&gt;</ph> class with the specified name and array of <ph id="ph2">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.UniqueConstraint" /&gt;</ph> 개체의 지정된 이름과 배열을 사용하여 <ph id="ph2">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[])">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> with two columns, and adds a new <ph id="ph2">&lt;xref:System.Data.UniqueConstraint&gt;</ph> to the <ph id="ph3">&lt;xref:System.Data.ConstraintCollection&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> 두 개의 열이 있는 새 추가 <ph id="ph2">&lt;xref:System.Data.UniqueConstraint&gt;</ph> 에 <ph id="ph3">&lt;xref:System.Data.ConstraintCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn,System.Boolean)">
          <source>The name of the constraint.</source>
          <target state="translated">제약 조건의 이름입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> to constrain.</source>
          <target state="translated">제한할 <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to indicate that the constraint is a primary key; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">제약 조건이 기본 키이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.UniqueConstraint" /&gt;</ph> class with the specified name, the <ph id="ph2">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> to constrain, and a value specifying whether the constraint is a primary key.</source>
          <target state="translated">지정된 이름, 제한할 <ph id="ph1">&lt;see cref="T:System.Data.UniqueConstraint" /&gt;</ph> 및 제약 조건이 기본 키인지 여부를 나타내는 값을 사용하여 <ph id="ph2">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[],System.Boolean)">
          <source>The name of the constraint.</source>
          <target state="translated">제약 조건의 이름입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[],System.Boolean)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> objects to constrain.</source>
          <target state="translated">제한할 <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[],System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to indicate that the constraint is a primary key; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">제약 조건이 기본 키이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[],System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.UniqueConstraint" /&gt;</ph> class with the specified name, an array of <ph id="ph2">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> objects to constrain, and a value specifying whether the constraint is a primary key.</source>
          <target state="translated">지정된 이름, 제한할 <ph id="ph1">&lt;see cref="T:System.Data.UniqueConstraint" /&gt;</ph> 개체의 배열 및 제약 조건이 기본 키인지 여부를 나타내는 값을 사용하여 <ph id="ph2">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Data.UniqueConstraint.#ctor(System.String,System.String[],System.Boolean)">
          <source>The name of the constraint.</source>
          <target state="translated">제약 조건의 이름입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Data.UniqueConstraint.#ctor(System.String,System.String[],System.Boolean)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> objects to constrain.</source>
          <target state="translated">제한할 <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Data.UniqueConstraint.#ctor(System.String,System.String[],System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to indicate that the constraint is a primary key; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">제약 조건이 기본 키이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Data.UniqueConstraint.#ctor(System.String,System.String[],System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.UniqueConstraint" /&gt;</ph> class with the specified name, an array of <ph id="ph2">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> objects to constrain, and a value specifying whether the constraint is a primary key.</source>
          <target state="translated">지정된 이름, 제한할 <ph id="ph1">&lt;see cref="T:System.Data.UniqueConstraint" /&gt;</ph> 개체의 배열 및 제약 조건이 기본 키인지 여부를 나타내는 값을 사용하여 <ph id="ph2">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.UniqueConstraint.#ctor(System.String,System.String[],System.Boolean)">
          <source>This constructor is provided for design time support in the Visual Studio .NET environment.</source>
          <target state="translated">이 생성자는 Visual Studio.NET 환경에서 디자인 타임 지원을 위해 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.UniqueConstraint.#ctor(System.String,System.String[],System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> objects created by using this constructor must then be added to the collection via <ph id="ph2">&lt;xref:System.Data.ConstraintCollection.AddRange%2A&gt;</ph>.</source>
          <target state="translated">이 생성자를 사용하여 만든 <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> 개체는 <ph id="ph2">&lt;xref:System.Data.ConstraintCollection.AddRange%2A&gt;</ph>를 통해 컬렉션에 추가해야 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.UniqueConstraint.#ctor(System.String,System.String[],System.Boolean)">
          <source>Columns with the specified names must exist at the time the method is called, or if <ph id="ph1">&lt;xref:System.Data.DataTable.BeginInit%2A&gt;</ph> has been called prior to calling this constructor, the columns with the specified names must exist at the time that <ph id="ph2">&lt;xref:System.Data.DataTable.EndInit%2A&gt;</ph> is called.</source>
          <target state="translated">지정 된 이름 가진 열이 메서드는 시점에 존재 해야 합니다 또는 <ph id="ph1">&lt;xref:System.Data.DataTable.BeginInit%2A&gt;</ph> 이 생성자에 지정 된 이름 가진 열이 시점에 존재 해야 하는 호출 하기 전에 호출 된 있는 <ph id="ph2">&lt;xref:System.Data.DataTable.EndInit%2A&gt;</ph> 라고 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Data.UniqueConstraint.Columns">
          <source>Gets the array of columns that this constraint affects.</source>
          <target state="translated">이 제약 조건의 영향을 받는 열로 이루어진 배열을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.UniqueConstraint.Columns">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.UniqueConstraint.Columns">
          <source>The following example returns the <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> objects that the <ph id="ph2">&lt;xref:System.Data.UniqueConstraint&gt;</ph> constrains.</source>
          <target state="translated">다음 예제에서는 반환 된 <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> 개체는 <ph id="ph2">&lt;xref:System.Data.UniqueConstraint&gt;</ph> 제한 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Data.UniqueConstraint.Equals(System.Object)">
          <source>The object to which this <ph id="ph1">&lt;see cref="T:System.Data.UniqueConstraint" /&gt;</ph> is compared.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.UniqueConstraint" /&gt;</ph>와 비교할 개체입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Data.UniqueConstraint.Equals(System.Object)">
          <source>Compares this constraint to a second to determine if both are identical.</source>
          <target state="translated">이 제약 조건을 둘째 제약 조건과 비교하여 두 제약 조건이 같은지 확인합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Data.UniqueConstraint.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>, if the contraints are equal; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">제약 조건이 같으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>를 반환하고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.UniqueConstraint.Equals(System.Object)">
          <source>Two constraints are equal if they constrain the same columns.</source>
          <target state="translated">동일한 열을 제한 하는 경우에 두 가지 제약 조건이 같습니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.UniqueConstraint.Equals(System.Object)">
          <source>The following example compares two UiqueConstraint objects.</source>
          <target state="translated">다음 예제에서는 두 UiqueConstraint 개체를 비교 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Data.UniqueConstraint.GetHashCode">
          <source>Gets the hash code of this instance of the <ph id="ph1">&lt;see cref="T:System.Data.UniqueConstraint" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.UniqueConstraint" /&gt;</ph> 개체의 이 인스턴스의 해시 코드를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Data.UniqueConstraint.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">부호 있는 32비트 정수 해시 코드입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="P:System.Data.UniqueConstraint.IsPrimaryKey">
          <source>Gets a value indicating whether or not the constraint is on a primary key.</source>
          <target state="translated">제약 조건이 기본 키에 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.UniqueConstraint.IsPrimaryKey">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>, if the constraint is on a primary key; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">제약 조건이 기본 키에 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.UniqueConstraint.IsPrimaryKey">
          <source>A table usually includes a primary key that ensures every row is unique.</source>
          <target state="translated">테이블에는 일반적으로 모든 행이 고유 하면 되는 기본 키 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.UniqueConstraint.IsPrimaryKey">
          <source>In some tables, the primary key may be made up of more than one column.</source>
          <target state="translated">일부 테이블에 기본 키의 하나 이상의 열 구성 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.UniqueConstraint.IsPrimaryKey">
          <source>For example, a primary key for a table containing names might be made up of both the first and last names as well.</source>
          <target state="translated">예를 들어 이름이 포함 된 테이블에 대 한 기본 키는 첫 번째 및 마지막 이름이 모두도의 구성 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.UniqueConstraint.IsPrimaryKey">
          <source>To create a primary key with more than one column, set the Columns property to an array of DataColumn objects.</source>
          <target state="translated">둘 이상의 열을 사용 하 여 기본 키를 만들려면 DataColumn 개체의 배열에 열 속성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.UniqueConstraint.IsPrimaryKey">
          <source>The following example checks the <ph id="ph1">&lt;xref:System.Data.UniqueConstraint.IsPrimaryKey%2A&gt;</ph> property.</source>
          <target state="translated">다음 예제에서는 검사는 <ph id="ph1">&lt;xref:System.Data.UniqueConstraint.IsPrimaryKey%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="P:System.Data.UniqueConstraint.Table">
          <source>Gets the table to which this constraint belongs.</source>
          <target state="translated">이 제약 조건이 속한 테이블을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.UniqueConstraint.Table">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to which the constraint belongs.</source>
          <target state="translated">제약 조건이 속한 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.UniqueConstraint.Table">
          <source>The following example returns a <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> object's <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 반환 된 <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> 개체의 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>