<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IDataAdapter.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54877f267408f77d2e2104534ad5ebe7e397b5b13.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4877f267408f77d2e2104534ad5ebe7e397b5b13</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.IDataAdapter">
          <source>Allows an object to implement a DataAdapter, and represents a set of methods and mapping action-related properties that are used to fill and update a <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> and update a data source.</source>
          <target state="translated">개체가 DataAdapter를 구현하도록 하며, <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>을 채우거나 업데이트하고 데이터 소스를 업데이트하는 데 사용되는 매핑 동작 관련 속성 및 메서드 집합을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Data.IDataAdapter">
          <source><ph id="ph1">&lt;see cref="T:System.Data.IDbDataAdapter" /&gt;</ph> instances are for data sources that are (or resemble) relational databases with textual commands (like Transact-SQL), while <ph id="ph2">&lt;see cref="T:System.Data.IDataAdapter" /&gt;</ph> instances could can use any type of data source.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDbDataAdapter" /&gt;</ph> 인스턴스는 텍스트 명령(예: Transact-SQL)을 사용하는 관계형 데이터베이스 또는 그와 유사한 데이터 소스용이며, <ph id="ph2">&lt;see cref="T:System.Data.IDataAdapter" /&gt;</ph> 인스턴스는 임의 형식의 데이터 소스를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataAdapter">
          <source>The <ph id="ph1">&lt;xref:System.Data.IDataAdapter&gt;</ph> interface allows an inheriting class to implement a DataAdapter class, which represents the bridge between a data source and a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.IDataAdapter&gt;</ph> 인터페이스에서는 상속 하는 클래스는 데이터 원본 간의 브리지를 나타내는 데이터 어댑터 클래스를 구현 하 고 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataAdapter">
          <source>For more information about DataAdapter classes, see <bpt id="p1">[</bpt>Populating a DataSet from a DataAdapter<ept id="p1">](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md)</ept>.</source>
          <target state="translated">DataAdapter 클래스에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>DataAdapter에서 DataSet 채우기<ept id="p1">](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataAdapter">
          <source>An application does not create an instance of the <ph id="ph1">&lt;xref:System.Data.IDataAdapter&gt;</ph> interface directly, but implements an instance of a class that inherits <ph id="ph2">&lt;xref:System.Data.IDataAdapter&gt;</ph>.</source>
          <target state="translated">응용 프로그램의 인스턴스를 만들지 않습니다는 <ph id="ph1">&lt;xref:System.Data.IDataAdapter&gt;</ph> 인터페이스를 직접 상속 하는 클래스의 인스턴스를 구현 하지만 <ph id="ph2">&lt;xref:System.Data.IDataAdapter&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataAdapter">
          <source>Classes that inherit <ph id="ph1">&lt;xref:System.Data.IDataAdapter&gt;</ph> must implement the inherited members, and they typically define additional members to add provider-specific functionality.</source>
          <target state="translated">상속 된 클래스는 <ph id="ph1">&lt;xref:System.Data.IDataAdapter&gt;</ph> 상속 된 멤버를 구현 하 고 일반적으로 공급자 특정 기능을 추가 하기 위한 추가 멤버를 정의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataAdapter">
          <source>For example, the <ph id="ph1">&lt;xref:System.Data.IDataAdapter&gt;</ph> interface defines a <ph id="ph2">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt;</ph> method that takes a <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> as a parameter.</source>
          <target state="translated">예를 들어는 <ph id="ph1">&lt;xref:System.Data.IDataAdapter&gt;</ph> 인터페이스 정의 <ph id="ph2">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt;</ph> 를 받는 메서드에 <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> 매개 변수로 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataAdapter">
          <source>In turn, the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> class inherits the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method and also defines two additional overloads of the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> method that take an ADO Recordset object as a parameter.</source>
          <target state="translated">차례로 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> 클래스 상속는 <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> 메서드 정의의 두 추가 오버 로드는 <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> ADO 레코드 집합 개체를 매개 변수로 메서드.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataAdapter">
          <source>The following example uses the derived classes, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>, and <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>, to select records from a database.</source>
          <target state="translated">다음 예제에서는 파생된 클래스를 사용 하 여 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>, 데이터베이스에서 레코드를 선택 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataAdapter">
          <source>The filled <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is then returned.</source>
          <target state="translated">채워진 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataAdapter">
          <source>To do this, the method is passed an initialized <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, a connection string, and a query string that is a Transact-SQL SELECT statement.</source>
          <target state="translated">이 위해 메서드를 전달 초기화 된 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, 연결 문자열 및 쿼리 문자열은 TRANSACT-SQL SELECT 문입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataAdapter">
          <source>To promote consistency among .NET Framework data providers, name the inheriting class in the form <ph id="ph1">&lt;paramref name="Prv" /&gt;</ph> DataAdapter where <ph id="ph2">&lt;paramref name="Prv" /&gt;</ph> is the uniform prefix given to all classes in a specific .NET Framework data provider namespace.</source>
          <target state="translated">.NET Framework 데이터 공급자 간의 일관성으로 승격 하려면 폼에서 상속 하는 클래스 이름을 <ph id="ph1">&lt;paramref name="Prv" /&gt;</ph> DataAdapter 여기서 <ph id="ph2">&lt;paramref name="Prv" /&gt;</ph> 는 특정.NET Framework 데이터 공급자 네임 스페이스의 모든 클래스에 지정 된 일정 한 접두사입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataAdapter">
          <source>For example, <ph id="ph1">&lt;paramref name="Sql" /&gt;</ph> is the prefix of the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph> class in the <ph id="ph3">&lt;see langword="System.Data.SqlClient" /&gt;</ph> namespace.</source>
          <target state="translated">예를 들어 <ph id="ph1">&lt;paramref name="Sql" /&gt;</ph> 은의 접두사는 <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph> 클래스에 <ph id="ph3">&lt;see langword="System.Data.SqlClient" /&gt;</ph> 네임 스페이스입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataAdapter">
          <source>When you inherit from the <ph id="ph1">&lt;see cref="T:System.Data.IDataAdapter" /&gt;</ph> interface, you should implement the following constructors:</source>
          <target state="translated">상속 하는 경우는 <ph id="ph1">&lt;see cref="T:System.Data.IDataAdapter" /&gt;</ph> 인터페이스를 다음 생성자를 구현 해야 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataAdapter">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Item</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 항목</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataAdapter">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 설명</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataAdapter">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> PrvDataAdapter()</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> PrvDataAdapter()</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataAdapter">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Initializes a new instance of the PrvDataAdapter class.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> PrvDataAdapter 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataAdapter">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> PrvDataAdapter(PrvCommand selectCommand)</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> PrvDataAdapter (PrvCommand selectCommand)</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataAdapter">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Initializes a new instance of the PrvDataAdapter class by using the specified SQL SELECT statement.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 지정 된 SQL SELECT 문을 사용 하 여 PrvDataAdapter 클래스의 새 인스턴스를 초기화 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataAdapter">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> PrvDataAdapter(string selectCommandText, string selectConnectionString)</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> PrvDataAdapter (문자열 selectCommandText, 문자열 selectConnectionString)</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataAdapter">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Initializes a new instance of the PrvDataAdapter class by using an SQL SELECT statement and a connection string.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> SQL SELECT 문과 연결 문자열을 사용 하 여 PrvDataAdapter 클래스의 새 인스턴스를 초기화 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataAdapter">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> PrvDataAdapter(string selectCommandText, PrvConnection selectConnection)</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> PrvDataAdapter (문자열 selectCommandText, PrvConnection selectConnection)</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataAdapter">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Initializes a new instance of the PrvDataAdapter class by using an SQL SELECT statement and a PrvConnection object.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> SQL SELECT 문과 PrvConnection 개체를 사용 하 여 PrvDataAdapter 클래스의 새 인스턴스를 초기화 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to fill with records and, if necessary, schema.</source>
          <target state="translated">레코드와 스키마(필요한 경우)로 채울 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>Adds or updates rows in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to match those in the data source using the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> name, and creates a <ph id="ph3">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> named "Table".</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 이름을 사용하여 데이터 소스의 행과 일치하도록 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>의 행을 추가하거나 업데이트하고 "Table"이라는 이름의 <ph id="ph3">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>The number of rows successfully added to or refreshed in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>에 성공적으로 추가했거나 새로 고친 행의 수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>This does not include rows affected by statements that do not return rows.</source>
          <target state="translated">여기에는 행을 반환하지 않는 문의 영향을 받는 행은 포함되지 않습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source><ph id="ph1">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt;</ph> retrieves rows from the data source using the SELECT statement specified by an associated <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt;</ph> 연결 된 지정 된 SELECT 문에서 사용 하 여 데이터 원본에서 행을 검색 <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>The connection object associated with the SELECT statement must be valid, but it does not need to be open.</source>
          <target state="translated">SELECT 문은 연결 된 연결 개체는 유효 해야 합니다. 하지만 열려 있이 필요는 없습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>If the connection is closed before <ph id="ph1">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt;</ph> is called, it is opened to retrieve data, then closed.</source>
          <target state="translated">하기 전에 연결이 닫히거나 경우 <ph id="ph1">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt;</ph> 은 호출은 열 데이터를 검색 하려면 다음 종료 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>If the connection is open before <ph id="ph1">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt;</ph> is called, it remains open.</source>
          <target state="translated">연결 하기 전에 열려 있으면 <ph id="ph1">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt;</ph> 는 호출을 열린 상태로 유지 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt;</ph> operation then adds the rows to destination <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects in the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>, creating the <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> objects if they do not already exist.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt;</ph> 대상에 행을 추가 하는 작업을 다음 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> 개체에 <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>만들기는 <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> 경우 이미 없는 개체.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>When creating <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objects, the <ph id="ph2">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt;</ph> operation usually creates only column name metadata.</source>
          <target state="translated">만들 때 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> 개체는 <ph id="ph2">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt;</ph> 작업은 일반적으로 열 이름 메타 데이터만 만듭니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>However, if the <ph id="ph1">&lt;xref:System.Data.IDataAdapter.MissingSchemaAction%2A&gt;</ph> property is set to <ph id="ph2">`AddWithKey`</ph>, appropriate primary keys and constraints are also created.</source>
          <target state="translated">그러나 경우는 <ph id="ph1">&lt;xref:System.Data.IDataAdapter.MissingSchemaAction%2A&gt;</ph> 속성이 <ph id="ph2">`AddWithKey`</ph>, 적절 한 기본 키와 제약 조건도 만들어집니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>If the <ph id="ph1">`SelectCommand`</ph> returns the results of an OUTER JOIN, the <ph id="ph2">`DataAdapter`</ph> does not set a <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> value for the resulting <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`SelectCommand`</ph>가 OUTER JOIN의 결과를 반환하면 <ph id="ph2">`DataAdapter`</ph>는 결과 <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph>에 대해 <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> 값을 설정하지 않습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</source>
          <target state="translated">중복 행을 올바르게 확인할 수 있도록 기본 키를 명시적으로 정의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>For more information, see <bpt id="p1">[</bpt>Defining Primary Keys<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>기본 키 정의<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.IDataAdapter&gt;</ph> encounters duplicate columns while populating a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, it generates names for the successive columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Data.IDataAdapter&gt;</ph> 중복 열을 채우는 동안 발생 한 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, 패턴 "columnname1", "columnname2", "columnname3" 및 등을 사용 하 여 연속 열에 대 한 이름을 생성 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>If the incoming data contains unnamed columns, they are put in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">배치 되는 들어오는 데이터에 명명 되지 않은 열이 포함 된 경우는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> "column1", "Column2" 등에 따라 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>When multiple result sets are added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, each result set is put in a separate table.</source>
          <target state="translated">여러 결과 집합에 추가 될 때는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, 각 결과 집합은 별도 테이블에 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</source>
          <target state="translated">추가 결과 집합이 지정한 테이블 이름 (예: "Table", "Table1", "Table2" 및 등)에 정수 계열 값을 추가 하 여 이름이 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>Applications should use caution when using column and table names to ensure that conflicts with these naming patterns do not occur.</source>
          <target state="translated">응용 프로그램은 열 및 테이블 이름을 사용 하 여 이러한 명명 패턴과 충돌이 발생 하지 않도록 주의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>When the SELECT statement that is used to populate the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> returns multiple results, such as a batch SQL statement, if one of the results contains an error, all successive results are skipped and not added to the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">때 채우는 데 사용 되는 SELECT 문에 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 여러 결과 반환 SQL 문 한 일괄 처리와 같은 결과 중 하나에 오류가 포함 되어 있는 경우 모든 후속 결과 건너뛰고에 추가 되지 않습니다는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt;</ph> method multiple times on the same <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt;</ph> 메서드가 여러 번 같은 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>If a primary key exists, incoming rows are merged with matching rows that already exist.</source>
          <target state="translated">기본 키가 있는 경우 이미 존재 하는 일치 하는 행과 들어오는 행이 병합 됩니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>If no primary key exists, incoming rows are appended to the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">들어오는 행에 추가 된 기본 키가 없으면는 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>When handling batch SQL statements that return multiple results, the implementation of <ph id="ph1">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.IDataAdapter.FillSchema%2A&gt;</ph> for a .NET Framework data provider retrieves schema information for only the first result.</source>
          <target state="translated">구현 하는 여러 결과 반환 하는 SQL 문을 일괄 처리할 때 <ph id="ph1">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Data.IDataAdapter.FillSchema%2A&gt;</ph> .NET Framework 데이터에 대 한 공급자만 첫 번째 결과 대 한 스키마 정보를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to be filled with the schema from the data source.</source>
          <target state="translated">데이터 소스에서 스키마로 채울 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> named "Table" to the specified <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> and configures the schema to match that in the data source based on the specified <ph id="ph3">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>에 "Table"이라는 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>을 추가하고 지정된 <ph id="ph3">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph>을 기반으로 데이터 소스의 스키마와 일치하도록 스키마를 구성합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> objects that contain schema information returned from the data source.</source>
          <target state="translated">데이터 소스에서 반환된 스키마 정보가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>The <ph id="ph1">&lt;xref:System.Data.IDataAdapter.FillSchema%2A&gt;</ph> method retrieves the schema from the data source using the <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.IDataAdapter.FillSchema%2A&gt;</ph> 사용 하 여 데이터 원본에서 스키마를 검색 하는 메서드는 <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>The connection object associated with the <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> must be valid, but it does not need to be open.</source>
          <target state="translated">와 연결 된 연결 개체는 <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> 유효 해야 하지만 열려 있이 필요는 없습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If the connection is closed before <ph id="ph1">&lt;xref:System.Data.IDataAdapter.FillSchema%2A&gt;</ph> is called, it is opened to retrieve data, then closed.</source>
          <target state="translated">하기 전에 연결이 닫히거나 경우 <ph id="ph1">&lt;xref:System.Data.IDataAdapter.FillSchema%2A&gt;</ph> 은 호출은 열 데이터를 검색 하려면 다음 종료 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If the connection is open before <ph id="ph1">&lt;xref:System.Data.IDataAdapter.FillSchema%2A&gt;</ph> is called, it remains open.</source>
          <target state="translated">연결 하기 전에 열려 있으면 <ph id="ph1">&lt;xref:System.Data.IDataAdapter.FillSchema%2A&gt;</ph> 는 호출을 열린 상태로 유지 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>A <ph id="ph1">&lt;xref:System.Data.IDataAdapter.FillSchema%2A&gt;</ph> operation adds a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> to the destination <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Data.IDataAdapter.FillSchema%2A&gt;</ph> 작업 추가 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> 대상 <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>It then adds columns to the <ph id="ph1">&lt;xref:System.Data.DataColumnCollection&gt;</ph> of the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> and configures the following <ph id="ph3">&lt;xref:System.Data.DataColumn&gt;</ph> properties if they exist at the data source:</source>
          <target state="translated">그런 다음 열을 추가 <ph id="ph1">&lt;xref:System.Data.DataColumnCollection&gt;</ph> 의 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> 하 고 다음 구성 <ph id="ph3">&lt;xref:System.Data.DataColumn&gt;</ph> 속성 데이터 원본에 존재 하는 경우:</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source><ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>You must set <ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt;</ph> separately.</source>
          <target state="translated">설정 해야 <ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt;</ph> 별도로 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source><ph id="ph1">&lt;xref:System.Data.IDataAdapter.FillSchema%2A&gt;</ph> also configures the <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataTable.Constraints%2A&gt;</ph> properties according to the following rules:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.IDataAdapter.FillSchema%2A&gt;</ph> 또한 구성 된 <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Data.DataTable.Constraints%2A&gt;</ph> 다음 규칙에 따라 속성:</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If one or more primary key columns are returned by the <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>, they are used as the primary key columns for the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">하나 이상의 기본 키 열에서 반환 되는 경우는 <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>에 대 한 기본 키 열으로 사용 되는 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if all the unique columns are non-nullable.</source>
          <target state="translated">기본 키 열이 반환 되지 고유 열이 표시 되지만 고유한 모든 열이 nullable이 아닌 경우 고유 열 기본 키로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If any of the columns are nullable, a <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> is added to the <ph id="ph2">&lt;xref:System.Data.ConstraintCollection&gt;</ph>, but the <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> property is not set.</source>
          <target state="translated">열이 null을 허용 하는 경우는 <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> 에 추가 됩니다는 <ph id="ph2">&lt;xref:System.Data.ConstraintCollection&gt;</ph>, 하지만 <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> 속성이 설정 되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">기본 키 열과 고유 열이 모두 반환 되는 기본 키 열에 대 한 기본 키 열으로 사용 됩니다는 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>Note that primary keys and unique constraints are added to the <ph id="ph1">&lt;xref:System.Data.ConstraintCollection&gt;</ph> according to the previous rules, but other constraint types are not added.</source>
          <target state="translated">기본 키와 unique 제약 조건에 추가 된 <ph id="ph1">&lt;xref:System.Data.ConstraintCollection&gt;</ph> 이전 규칙 하지만 다른 제약 조건에 따라 형식이 추가 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</source>
          <target state="translated">고유 클러스터형 인덱스가 하나 이상의 SQL Server 테이블의 열에 정의 된 및 기본 키 제약 조건을 별도의 열 집합에 정의 되어 클러스터형된 인덱스에 있는 열의 이름이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</source>
          <target state="translated">기본 키 열 이름으로를 반환 하려면 기본 키 인덱스의 이름을 지정 하는 SELECT 문을 사용 하 여 쿼리 힌트를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>For more information about how to specify query hints, see <bpt id="p1">[</bpt>Query Hint (Transact-SQL)<ept id="p1">](http://msdn.microsoft.com/library/ms181714.aspx)</ept>.</source>
          <target state="translated">쿼리 힌트를 지정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>쿼리 힌트 (TRANSACT-SQL)<ept id="p1">](http://msdn.microsoft.com/library/ms181714.aspx)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.IDataAdapter&gt;</ph> encounters duplicate columns while populating a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, it generates names for the successive columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Data.IDataAdapter&gt;</ph> 중복 열을 채우는 동안 발생 한 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, 패턴 "columnname1", "columnname2", "columnname3" 및 등을 사용 하 여 연속 열에 대 한 이름을 생성 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If the incoming data contains unnamed columns, they are put in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">배치 되는 들어오는 데이터에 명명 되지 않은 열이 포함 된 경우는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> "column1", "Column2" 등에 따라 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>When multiple result sets are added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, each result set is put in a separate table.</source>
          <target state="translated">여러 결과 집합에 추가 될 때는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, 각 결과 집합은 별도 테이블에 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</source>
          <target state="translated">추가 결과 집합이 지정한 테이블 이름 (예: "Table", "Table1", "Table2" 및 등)에 정수 계열 값을 추가 하 여 이름이 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>Applications should use caution when using column and table names to ensure that conflicts with these naming patterns do not occur.</source>
          <target state="translated">응용 프로그램은 열 및 테이블 이름을 사용 하 여 이러한 명명 패턴과 충돌이 발생 하지 않도록 주의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source><ph id="ph1">&lt;xref:System.Data.IDataAdapter.FillSchema%2A&gt;</ph> returns no rows.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.IDataAdapter.FillSchema%2A&gt;</ph> 행을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt;</ph> method to add rows to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt;</ph> 에 행을 추가 하는 메서드는 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Data.IDataAdapter.GetFillParameters">
          <source>Gets the parameters set by the user when executing an SQL SELECT statement.</source>
          <target state="translated">SQL SELECT 문을 실행할 때 사용자가 설정한 매개 변수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Data.IDataAdapter.GetFillParameters">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.IDataParameter" /&gt;</ph> objects that contains the parameters set by the user.</source>
          <target state="translated">사용자가 설정한 매개 변수를 포함하는 <ph id="ph1">&lt;see cref="T:System.Data.IDataParameter" /&gt;</ph> 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="P:System.Data.IDataAdapter.MissingMappingAction">
          <source>Indicates or specifies whether unmapped source tables or columns are passed with their source names in order to be filtered or to raise an error.</source>
          <target state="translated">매핑되지 않은 소스 테이블과 열 중에서 필터링하거나 오류를 발생시키기 위해 소스 이름과 함께 전달할 항목을 나타내거나 지정합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDataAdapter.MissingMappingAction">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.MissingMappingAction" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.MissingMappingAction" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDataAdapter.MissingMappingAction">
          <source>The default is <ph id="ph1">&lt;see langword="Passthrough" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="Passthrough" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDataAdapter.MissingMappingAction">
          <source>The <ph id="ph1">&lt;xref:System.Data.IDataAdapter.TableMappings%2A&gt;</ph> property provides the master mapping between the returned records and the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.IDataAdapter.TableMappings%2A&gt;</ph> 속성은 반환 되는 레코드 사이 마스터 매핑을 제공 및 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="P:System.Data.IDataAdapter.MissingMappingAction">
          <source>The value set is not one of the <ph id="ph1">&lt;see cref="T:System.Data.MissingMappingAction" /&gt;</ph> values.</source>
          <target state="translated">설정된 값이 <ph id="ph1">&lt;see cref="T:System.Data.MissingMappingAction" /&gt;</ph> 값 중 하나가 아닌 경우</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="P:System.Data.IDataAdapter.MissingSchemaAction">
          <source>Indicates or specifies whether missing source tables, columns, and their relationships are added to the dataset schema, ignored, or cause an error to be raised.</source>
          <target state="translated">누락된 소스 테이블, 열 및 그 관계를 데이터 집합 스키마에 추가할지 무시할지 또는 오류를 발생시킬지를 나타내거나 지정합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDataAdapter.MissingSchemaAction">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.MissingSchemaAction" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.MissingSchemaAction" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDataAdapter.MissingSchemaAction">
          <source>The default is <ph id="ph1">&lt;see langword="Add" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="Add" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="P:System.Data.IDataAdapter.MissingSchemaAction">
          <source>The value set is not one of the <ph id="ph1">&lt;see cref="T:System.Data.MissingSchemaAction" /&gt;</ph> values.</source>
          <target state="translated">설정된 값이 <ph id="ph1">&lt;see cref="T:System.Data.MissingSchemaAction" /&gt;</ph> 값 중 하나가 아닌 경우</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="P:System.Data.IDataAdapter.TableMappings">
          <source>Indicates how a source table is mapped to a dataset table.</source>
          <target state="translated">소스 테이블이 데이터 집합 테이블에 매핑되는 방식을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDataAdapter.TableMappings">
          <source>A collection that provides the master mapping between the returned records and the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">반환된 레코드와 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 간의 마스터 매핑을 제공하는 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDataAdapter.TableMappings">
          <source>The default value is an empty collection.</source>
          <target state="translated">기본값은 빈 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDataAdapter.TableMappings">
          <source>The <ph id="ph1">&lt;xref:System.Data.IDataAdapter&gt;</ph> uses only the mappings for the source table named "Table".</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.IDataAdapter&gt;</ph> "Table" 이라는 원본 테이블에 대 한 매핑을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDataAdapter.TableMappings">
          <source>All SELECT, INSERT, DELETE, and UPDATE statements returning data must do so using consistent column naming.</source>
          <target state="translated">모든 SELECT, INSERT, DELETE 및 UPDATE 문의 데이터를 반환 연결 해야를 사용 하 여 일관 된 열 이름을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDataAdapter.TableMappings">
          <source>The column names returned in the records must be unique, otherwise columns with duplicate names overwrite previous data.</source>
          <target state="translated">레코드에 반환 된 열 이름은 고유 해야, 그렇지 않은 경우 열 이름이 중복 된 이전 데이터를 덮어쓰게 됩니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDataAdapter.TableMappings">
          <source>On <ph id="ph1">&lt;xref:System.Data.IDataAdapter.Update%2A&gt;</ph>, only the table mapped to the source table named "Table" will have its changes reconciled.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.IDataAdapter.Update%2A&gt;</ph>"Table" 이라는 원본 테이블에 매핑되는 테이블이 포함할 조정 하는 변경 내용을 필요 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> used to update the data source.</source>
          <target state="translated">데이터 소스를 업데이트하는 데 사용된 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> from a <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> named "Table".</source>
          <target state="translated">"Table"이라는 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>의 지정된 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>에서 삽입, 업데이트 또는 삭제된 각 행에 대해 각각 INSERT, UPDATE 또는 DELETE 문을 호출합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>The number of rows successfully updated from the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>에서 성공적으로 업데이트된 행의 수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>When an application calls the <ph id="ph1">&lt;xref:System.Data.IDataAdapter.Update%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Data.IDataAdapter&gt;</ph> examines the <ph id="ph3">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">응용 프로그램 호출 하는 경우는 <ph id="ph1">&lt;xref:System.Data.IDataAdapter.Update%2A&gt;</ph> 메서드를는 <ph id="ph2">&lt;xref:System.Data.IDataAdapter&gt;</ph> 검사 하는 <ph id="ph3">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> 속성을 반복적으로 에구성된인덱스순서에따라각행에대한필요한INSERT,UPDATE또는DELETE문을실행하고<ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>For example, <ph id="ph1">&lt;xref:System.Data.IDataAdapter.Update%2A&gt;</ph> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, because of the ordering of the rows in the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">예를 들어 <ph id="ph1">&lt;xref:System.Data.IDataAdapter.Update%2A&gt;</ph> 의 행 순서 때문에 그 다음 INSERT 문이 DELETE 문의 한 다음 다른 DELETE 문이 실행 될 수 있습니다는 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>Be aware that these statements are not performed as a batch process; each row is updated individually.</source>
          <target state="translated">이러한 문은 일괄 처리 프로세스로 수행 되지 않습니다 수 각 행은 개별적으로 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>An application can call the <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method if you must control the sequence of statement types (for example, INSERTs before UPDATEs).</source>
          <target state="translated">응용 프로그램에서 호출할 수는 <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> 메서드 (예를 들어 업데이트 하기 전에 삽입) 명령문의 시퀀스를 제어 해야 하는 경우.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>For more information, see <bpt id="p1">[</bpt>Updating Data Sources with DataAdapters<ept id="p1">](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Dataadapter로 데이터 원본 업데이트<ept id="p1">](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>If INSERT, UPDATE, or DELETE statements have not been specified, the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph> method generates an exception.</source>
          <target state="translated">경우 INSERT, UPDATE 또는 DELETE 문이 지정 되지 않았습니다는 <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph> 메서드 예외를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>However, you can create a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> object to automatically generate SQL statements for single-table updates if you set the <ph id="ph3">`SelectCommand`</ph> property of a .NET Framework data provider.</source>
          <target state="translated">만들 수 있습니다는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> 설정 하는 경우 단일 테이블 업데이트에 대 한 SQL 문을 자동으로 생성 하는 개체는 <ph id="ph3">`SelectCommand`</ph> .NET Framework 데이터 공급자의 속성입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>Then, any additional SQL statements that you do not set are generated by the CommandBuilder.</source>
          <target state="translated">그런 다음 설정 하지 않는 추가적인 모든 SQL 문은 CommandBuilder에 의해 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>This generation logic requires key column information to be present in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">이 생성 논리는 키 열에 대 한 정보가 필요는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>For more information see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>commandbuilder 생성 명령을<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph> method retrieves rows from the table listed in the first mapping before performing an update.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph> 메서드는 업데이트를 수행 하기 전에 첫 번째 매핑에 나열 된 테이블에서 행을 검색 합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph> then updates the row using the value of the <ph id="ph2">&lt;xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph> 의 값을 사용 하 여 행을 업데이트 한 다음는 <ph id="ph2">&lt;xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>Any additional rows returned are ignored.</source>
          <target state="translated">반환 된 추가 행은 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>After any data is loaded back into the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> event is raised, allowing the user to inspect the reconciled <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> row and any output parameters returned by the command.</source>
          <target state="translated">모든 데이터에 다시 로드 되는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> 이벤트가 발생 하는 조정 된 검사 <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> 행 및 모든 출력 매개 변수는 명령에서 반환 된 합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>After a row updates successfully, the changes to that row are accepted.</source>
          <target state="translated">행이 성공적으로 업데이트 한 후 해당 행에 변경 내용은 허용 됩니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>When using <ph id="ph1">&lt;xref:System.Data.IDataAdapter.Update%2A&gt;</ph>, the order of execution is as follows:</source>
          <target state="translated">사용 하는 경우 <ph id="ph1">&lt;xref:System.Data.IDataAdapter.Update%2A&gt;</ph>, 실행의 순서는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>The values in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> are moved to the parameter values.</source>
          <target state="translated">값은 <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> 매개 변수 값으로 이동 됩니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph> event is raised.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph> 이벤트가 발생합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>The command executes.</source>
          <target state="translated">명령을 실행합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>If the command is set to <ph id="ph1">`FirstReturnedRecord`</ph>, then the first returned result is put in the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
          <target state="translated">명령으로 설정 되어 있으면 <ph id="ph1">`FirstReturnedRecord`</ph>, 첫 번째 반환 결과에 저장 됩니다는 <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>If there are output parameters, they are put in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
          <target state="translated">에 배치 됩니다 출력 매개 변수가 있는 경우는 <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> event is raised.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> 이벤트가 발생합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source><ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph>가 호출된 경우</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>Each command associated with the <ph id="ph1">&lt;xref:System.Data.IDataAdapter&gt;</ph> usually has a parameter collection associated with it.</source>
          <target state="translated">와 연결 된 각 명령에서 <ph id="ph1">&lt;xref:System.Data.IDataAdapter&gt;</ph> 은 일반적으로 관련 된 매개 변수 컬렉션을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>Parameters are mapped to the current row through the <ph id="ph1">`SourceColumn`</ph> and <ph id="ph2">`SourceVersion`</ph> properties of a .NET Framework data provider's <ph id="ph3">`Parameter`</ph> class.</source>
          <target state="translated">매개 변수를 통해 현재 행에 매핑됩니다.는 <ph id="ph1">`SourceColumn`</ph> 및 <ph id="ph2">`SourceVersion`</ph> .NET Framework 데이터 공급자의 속성 <ph id="ph3">`Parameter`</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source><ph id="ph1">`SourceColumn`</ph> refers to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> column that the <ph id="ph3">&lt;xref:System.Data.IDataAdapter&gt;</ph> references to obtain parameter values for the current row.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph> 참조 하는 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> 열 하는 <ph id="ph3">&lt;xref:System.Data.IDataAdapter&gt;</ph> 현재 행에 대 한 매개 변수 값을 가져오기에 대 한 참조입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source><ph id="ph1">`SourceColumn`</ph> refers to the unmapped column name before any table mappings have been applied.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph> 테이블 매핑이 적용 되기 전에 매핑되지 않은 열 이름을 참조 합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>If <ph id="ph1">`SourceColumn`</ph> refers to a nonexistent column, the action taken depends on one of the following <ph id="ph2">&lt;xref:System.Data.MissingMappingAction&gt;</ph> values.</source>
          <target state="translated">경우 <ph id="ph1">`SourceColumn`</ph> 참조 존재 하지 않는 열에는 다음 중 하나에 따라 다른 동작이 수행 <ph id="ph2">&lt;xref:System.Data.MissingMappingAction&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>Enumeration Value</source>
          <target state="translated">열거 값</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>Action Taken</source>
          <target state="translated">수행 작업</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>Use the source column names and table names in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> if no mapping is present.</source>
          <target state="translated">원본 열 이름 및 테이블 이름을 사용 하 여는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 매핑이 없는 경우.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>A <ph id="ph1">&lt;xref:System.SystemException&gt;</ph> is generated.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.SystemException&gt;</ph> 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>When the mappings are explicitly set, a missing mapping for an input parameter is usually caused by an error.</source>
          <target state="translated">매핑을 명시적으로 설정에 대 한 입력된 매개 변수 매핑이 없을 오류가 일반적으로 때문일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>A <ph id="ph1">&lt;xref:System.SystemException&gt;</ph> is generated.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.SystemException&gt;</ph> 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>The <ph id="ph1">`SourceColumn`</ph> property is also used to map the value for output or input/output parameters back to the <ph id="ph2">`DataSet`</ph>.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph> 속성은 또한 출력에 대 한 값에 매핑할 사용 입/출력 매개 변수를 또는 <ph id="ph2">`DataSet`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>An exception is generated if it refers to a nonexistent column.</source>
          <target state="translated">존재 하지 않는 열을 참조 하는 경우 예외가 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>The <ph id="ph1">`SourceVersion`</ph> property of a .NET Framework data provider's <ph id="ph2">`Parameter`</ph> class determines whether to use the <ph id="ph3">`Original`</ph>, <ph id="ph4">`Current`</ph>, or <ph id="ph5">`Proposed`</ph> version of the column value.</source>
          <target state="translated"><ph id="ph1">`SourceVersion`</ph> .NET Framework 데이터 공급자의 속성 <ph id="ph2">`Parameter`</ph> 클래스 사용 여부를 결정은 <ph id="ph3">`Original`</ph>, <ph id="ph4">`Current`</ph>, 또는 <ph id="ph5">`Proposed`</ph> 열 값의 버전입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>This capability is frequently used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</source>
          <target state="translated">이 기능은 낙관적 동시성 위반을 확인 하는 UPDATE 문의 WHERE 절에 원래 값을 포함 하려면 자주 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</source>
          <target state="translated">행을 업데이트 하는 동안 오류가 발생 하는 경우 예외가 throw 되 고 업데이트의 실행이 중단.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>To continue the update operation without generating exceptions when an error is encountered, set the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> property to <ph id="ph2">`true`</ph> before calling <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>.</source>
          <target state="translated">설정 오류가 발생 하는 경우 예외를 생성 하지 않고 업데이트 작업을 계속 하려면는 <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> 속성을 <ph id="ph2">`true`</ph> 호출 하기 전에 <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>You may also respond to errors on a per-row basis within the <ph id="ph1">`RowUpdated`</ph> event of a DataAdapter.</source>
          <target state="translated">내에서 각 행 마다 별로 오류를 선택할 수 있습니다는 <ph id="ph1">`RowUpdated`</ph> DataAdapter의 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>To continue the update operation without generating an exception within the <ph id="ph1">`RowUpdated`</ph> event, set the <ph id="ph2">&lt;xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.Common.RowUpdatedEventArgs&gt;</ph> to <ph id="ph4">&lt;xref:System.Data.UpdateStatus.Continue&gt;</ph>.</source>
          <target state="translated">내에서 예외를 생성 하지 않고 업데이트 작업을 계속 하려면는 <ph id="ph1">`RowUpdated`</ph> 이벤트를 설정는 <ph id="ph2">&lt;xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Data.Common.RowUpdatedEventArgs&gt;</ph> 를 <ph id="ph4">&lt;xref:System.Data.UpdateStatus.Continue&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>The following example uses the derived class, <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, to <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph> the data source.</source>
          <target state="translated">다음 예제에서는 파생된 클래스를 사용 하 여 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>을 <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph> 데이터 원본입니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>This example assumes that you have created an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> and a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">이 예에서는 만들었다고 가정는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</source>
          <target state="translated">INSERT, UPDATE 또는 DELETE 문을 실행한 결과 영향을 받은 레코드가 없는 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>