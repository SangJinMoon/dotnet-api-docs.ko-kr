<Type Name="DataRow" FullName="System.Data.DataRow">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3a1ebaf276e9456fa08b213088c22df0f3afc38e" />
    <Meta Name="ms.sourcegitcommit" Value="ad09e88f48ca55b181e8d272cfc3742eadc3f939" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/08/2018" />
    <Meta Name="ms.locfileid" Value="35231140" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataRow" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataRow extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataRow" />
  <TypeSignature Language="VB.NET" Value="Public Class DataRow" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataRow" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Data.DataTable" />의 데이터 행을 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataRow> 및 <xref:System.Data.DataColumn> 개체의 기본 구성 요소는 한 <xref:System.Data.DataTable>합니다. 사용 하 여는 <xref:System.Data.DataRow> 속성 개체 및 검색 및 평가; 및 삽입, 삭제 및의 값을 업데이트 하는 메서드는 <xref:System.Data.DataTable>합니다. <xref:System.Data.DataRowCollection> 실제 나타냅니다 <xref:System.Data.DataRow> 개체에 <xref:System.Data.DataTable>, 및 <xref:System.Data.DataColumnCollection> 포함는 <xref:System.Data.DataColumn> 의 스키마를 설명 하는 개체는 <xref:System.Data.DataTable>합니다. 오버 로드 된를 사용 하 여 <xref:System.Data.DataRow.Item%2A> 속성의 값을 설정 하거나 반환 하는 <xref:System.Data.DataColumn>합니다.  
  
 사용 하 여는 <xref:System.Data.DataRow.HasVersion%2A> 및 <xref:System.Data.DataRow.IsNull%2A> 특정 행 값의 상태를 확인 하는 속성 및 <xref:System.Data.DataRow.RowState*> 부모에 상대적인 행의 상태를 확인 하는 속성 <xref:System.Data.DataTable>합니다.  
  
 새로 만들려면 <xref:System.Data.DataRow>를 사용 하 여는 <xref:System.Data.DataTable.NewRow%2A> 의 메서드는 <xref:System.Data.DataTable> 개체입니다. 새 만든 후 <xref:System.Data.DataRow>를 사용 하 여는 <xref:System.Data.DataRowCollection.Add%2A> 새 추가 하는 방법을 <xref:System.Data.DataRow> 에 <xref:System.Data.DataRowCollection>합니다. 마지막으로 호출 된 <xref:System.Data.DataRow.AcceptChanges%2A> 의 메서드는 <xref:System.Data.DataTable> 추가 확인 하는 개체입니다. 데이터를 추가 하는 방법에 대 한 자세한 내용은 <xref:System.Data.DataTable>, 참조 [DataTable에 데이터 추가](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-data-to-a-datatable.md)합니다.  
  
 삭제할 수 있습니다는 <xref:System.Data.DataRow> 에서 <xref:System.Data.DataRowCollection> 호출 하 여는 <xref:System.Data.DataRowCollection.Remove%2A> 의 메서드는 <xref:System.Data.DataRowCollection>, 호출 하 여는 <xref:System.Data.DataRow.Delete%2A> 의 메서드는 <xref:System.Data.DataRow> 개체입니다. <xref:System.Data.DataRowCollection.Remove%2A> 메서드 컬렉션에서 행을 제거 합니다. 반면, <xref:System.Data.DataRow.Delete%2A> 표시는 <xref:System.Data.DataRow> 제거 합니다. 호출 하면 행이 실제로 삭제 발생 <xref:System.Data.DataRow.AcceptChanges%2A> 메서드. 호출 하 여 <xref:System.Data.DataRow.Delete%2A>을 실제로 삭제 하기 전에 제거를 위해 표시 된 행을 프로그래밍 방식으로 확인할 수 있습니다. 자세한 내용은 참조 [DataRow 삭제](~/docs/framework/data/adonet/dataset-datatable-dataview/datarow-deletion.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 새 <xref:System.Data.DataRow> 호출 하 여는 <xref:System.Data.DataTable.NewRow%2A> 의 메서드는 <xref:System.Data.DataTable> 개체입니다.  
  
 [!code-csharp[Classic WebData DataRow Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>이 형식은 다중 스레드 읽기 작업에 안전 합니다. 쓰기 작업을 동기화 해야 합니다.</threadsafe>
    <altmember cref="M:System.Data.DataRow.AcceptChanges" />
    <altmember cref="M:System.Data.DataRowCollection.Add(System.Data.DataRow)" />
    <altmember cref="T:System.Data.DataColumnCollection" />
    <altmember cref="T:System.Data.DataColumn" />
    <altmember cref="T:System.Data.DataRowView" />
    <altmember cref="T:System.Data.DataTable" />
    <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
    <altmember cref="M:System.Data.DataRow.IsNull(System.Int32)" />
    <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
    <altmember cref="M:System.Data.DataTable.NewRow" />
    <altmember cref="T:System.Data.DataRowCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal DataRow (System.Data.DataRowBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(class System.Data.DataRowBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.#ctor(System.Data.DataRowBuilder)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (builder As DataRowBuilder)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; DataRow(System::Data::DataRowBuilder ^ builder);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Data.DataRowBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">작성기입니다</param>
        <summary>DataRow의 새 인스턴스를 초기화합니다. 작성기에서 행을 생성합니다. 내부 전용입니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptChanges">
      <MemberSignature Language="C#" Value="public void AcceptChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AcceptChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.AcceptChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub AcceptChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AcceptChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="M:System.Data.DataRow.AcceptChanges" />가 마지막으로 호출된 이후 이 행에서 변경된 내용을 모두 커밋합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출할 때 <xref:System.Data.DataRow.AcceptChanges%2A>, <xref:System.Data.DataRow.EndEdit%2A> 암시적으로 메서드는 편집을 끝냅니다. 경우는 <xref:System.Data.DataRow.RowState*> Added 또는 Modified 인가 행의는 <xref:System.Data.DataRow.RowState*> 되 변경 안 됨. 경우는 <xref:System.Data.DataRow.RowState*> 된 삭제 된 행이 제거 됩니다.  
  
 자세한 내용은 <xref:System.Data.DataRow.BeginEdit%2A> 메서드를 참조하세요.  
  
 <xref:System.Data.DataTable> 클래스에는 <xref:System.Data.DataTable.AcceptChanges%2A> 메서드는 전체 테이블의 변경에 영향을 줍니다. 자세한 내용 및 적용 하거나 개별 데이터 행의 변경 내용을 취소 하는 방법을 보여 주는 코드 예제는 참조 [AcceptChanges 및 RejectChanges](~/docs/framework/data/adonet/dataset-datatable-dataview/acceptchanges-and-rejectchanges.md)합니다.  
  
   
  
## Examples  
 다음 예에서는 먼저 새 만듭니다 <xref:System.Data.DataTable> 하나의 열이 있는 단일 만듭니다 <xref:System.Data.DataRow>합니다. 로 <xref:System.Data.DataRow> 은 생성, 추가, 수정 및 삭제 하 고, 해당 <xref:System.Data.DataRow.RowState*> 인쇄 됩니다.  
  
 [!code-csharp[Classic WebData DataRow.AcceptChanges Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.AcceptChanges Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.AcceptChanges Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.AcceptChanges Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.RowNotInTableException">행이 테이블에 속하지 않는 경우</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="T:System.Data.DataViewRowState" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginEdit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Data.DataRow" /> 개체에 대한 편집 작업을 시작합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Data.DataRow.BeginEdit%2A> 메서드를 한 <xref:System.Data.DataRow> 편집 모드에 있습니다. 이 모드에서는 이벤트 일시 중단 되어, 유효성 검사 규칙을 트리거하지 않고 둘 이상의 행을 변경할 수 있도록 합니다. 예를 들어 총 금액에 대 한 열 값을 직불에 대 한 값 인지 확인 하 고 행의 열을 신용 해야 하는 경우 사용자는 값을 커밋하고 하려고 할 때까지 행 값의 유효성 검사를 일시 중단 하는 편집 모드에 각 행을 넣을 수 있습니다.  
  
 <xref:System.Data.DataRow.BeginEdit%2A> 메서드는 사용자는 데이터 바인딩된 컨트롤의 값을 변경할 때 암시적으로 호출 됩니다는 <xref:System.Data.DataRow.EndEdit%2A> 메서드는 암시적으로 호출 하는 경우는 <xref:System.Data.DataTable.AcceptChanges%2A> 에 대 한 메서드는 <xref:System.Data.DataTable> 개체입니다. 이 편집 모드에서의 <xref:System.Data.DataRow> 제안 된 값을 원래 및 새으로 저장 합니다. 따라서으로 <xref:System.Data.DataRow.EndEdit%2A> 하나를 전달 하 여 원본 또는 제안 된 버전을 검색할 수 있습니다, 메서드가 호출 되지 않은 `DataRowVersion.Original` 또는 `DataRowVersion.Proposed` 에 대 한는 `version` 의 매개 변수는 <xref:System.Data.DataRow.Item%2A> 속성입니다. 호출 하 여이 시점에서 편집을 취소할 수도 있습니다는 <xref:System.Data.DataRow.CancelEdit%2A> 메서드.  
  
 행 포함 된 원본 또는 제안 된 값을 보려면 호출에서 <xref:System.Data.DataRow.HasVersion%2A> 메서드.  
  
> [!NOTE]
>  <xref:System.Data.DataRow.BeginEdit%2A> 메서드 일시적으로 중단 <xref:System.Data.DataTable.RowChanging> 이벤트, 되지만 `delete` 작업 하지 않습니다.  
  
   
  
## Examples  
 이 예에서는 간단한 만듭니다 <xref:System.Data.DataTable> 하나로 <xref:System.Data.DataColumn> 및 5 <xref:System.Data.DataRow> 개체 및 <xref:System.Data.UniqueConstraint>합니다. A <xref:System.Data.DataTable.RowChanged> 행의 값이 변경 되는 경우를 모니터링할 이벤트 처리기도 추가 됩니다. 호출 후 <xref:System.Data.DataRow.BeginEdit%2A> 기존 행에는 제약 조건 및 이벤트 일시적으로 해제 되 고 원래와 제안 된 값을 출력 합니다. <xref:System.Data.DataRow.BeginEdit%2A> 이 다시 실행 하는 두 개의 행과 동일한 값을 설정 합니다. 때 <xref:System.Data.DataRow.EndEdit%2A> 호출 되는 <xref:System.Data.UniqueConstraint> 동일한 값에 적용 됩니다.  
  
 [!code-csharp[Classic WebData DataRow.BeginEdit Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.BeginEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.InRowChangingEventException">
          <see cref="E:System.Data.DataTable.RowChanging" /> 이벤트 내부에서 메서드를 호출한 경우</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">삭제된 행에서 메서드를 호출한 경우</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>행의 현재 편집을 취소합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 자세한 내용은 <xref:System.Data.DataRow.BeginEdit%2A> 메서드를 참조하세요.  
  
   
  
## Examples  
 다음 예제에서는 하나의 열에의 마지막 행의 값을 편집는 <xref:System.Windows.Forms.DataGrid> 제어 합니다. 이 예제에서는 사용은 <xref:System.Data.DataRow.BeginEdit%2A>, <xref:System.Data.DataRow.EndEdit%2A>, 메서드를 열의 값을 편집 하 여 행의 변경 내용을 커밋합니다.  
  
 [!code-csharp[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.InRowChangingEventException">
          <see cref="E:System.Data.DataTable.RowChanging" /> 이벤트 내부에서 메서드를 호출한 경우</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="T:System.Data.DataViewRowState" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <Member MemberName="ClearErrors">
      <MemberSignature Language="C#" Value="public void ClearErrors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearErrors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.ClearErrors" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearErrors ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearErrors();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>행의 오류를 지웁니다. 여기에는 <see cref="P:System.Data.DataRow.RowError" /> 및 <see cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />와 함께 설정된 오류가 포함됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여 <xref:System.Data.DataRow.SetColumnError%2A> 및 <xref:System.Data.DataRow.GetColumnError%2A> 설정 하 고 개별 열에 대 한 오류를 반환 합니다.  
  
 설정의 <xref:System.Data.DataRow.RowError%2A> 속성을 전체 행에 적용 되는 오류를 설정 합니다.  
  
 Columns 컬렉션에 대 한 오류가 있는지 확인 하려면는 <xref:System.Data.DataRow.HasErrors%2A> 메서드. 따라서 사용할 수는 <xref:System.Data.DataRow.GetColumnsInError%2A> 오류가 있는 모든 열을 검색 하는 메서드입니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.DataRow.HasErrors%2A> 오류 찾는 합니다. 행에 오류가 있는 경우는 <xref:System.Data.DataRow.GetColumnsInError%2A> 메서드 확인 될 수 있는 오류와 함께 열의 배열을 반환 합니다. <xref:System.Data.DataRow.ClearErrors%2A> 다음 메서드는 모든 오류를 지웁니다.  
  
 [!code-csharp[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataRow.GetColumnError(System.Int32)" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Data.DataRow" />를 삭제합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Data.DataRow.RowState*> 행의 추가 <xref:System.Data.DataRow.RowState*> 됩니다 `Detached` 호출 하는 경우 테이블에서 행이 제거 되 고 <xref:System.Data.DataRow.AcceptChanges%2A>합니다.  
  
 <xref:System.Data.DataRow.RowState*> 됩니다 `Deleted` 를 사용 하 여는 <xref:System.Data.DataRow.Delete%2A> 기존 메서드 <xref:System.Data.DataRow>합니다. 그대로 `Deleted` 호출할 때까지 <xref:System.Data.DataRow.AcceptChanges%2A>합니다. 이번에 <xref:System.Data.DataRow> 테이블에서 제거 합니다.  
  
 <xref:System.Data.DataRow.Delete%2A> 통해 반복 하는 동안 foreach 루프에서 호출 하지 않아야는 <xref:System.Data.DataRowCollection> 개체입니다. <xref:System.Data.DataRow.Delete%2A> 컬렉션의 상태를 수정합니다.  
  
 호출 하 여 삭제 된 행 삭제를 취소 수 <xref:System.Data.DataRow.RejectChanges%2A>합니다.  
  
> [!NOTE]
>  <xref:System.Data.DataRow.BeginEdit%2A> 메서드 일시적으로 중단 <xref:System.Data.DataTable.RowChanging> 이벤트, 하지만 삭제 작업은 하지 않습니다.  
  
   
  
## Examples  
 다음 예제에서는 간단한 <xref:System.Data.DataTable> 10 개의 행과 두 개의 열입니다. 여러 삭제 한 후 <xref:System.Data.DataRow> 포함 된 항목의 <xref:System.Data.DataRow.Delete%2A> 행 중 하나는 메서드를 호출 하 여 삭제를 취소 <xref:System.Data.DataRow.RejectChanges%2A>합니다.  
  
 [!code-csharp[Classic WebData DataRow.Delete Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.Delete Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <see cref="T:System.Data.DataRow" />가 이미 삭제된 경우</exception>
        <altmember cref="T:System.Data.DataRowState" />
        <altmember cref="T:System.Data.DataViewRowState" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <Member MemberName="EndEdit">
      <MemberSignature Language="C#" Value="public void EndEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.EndEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndEdit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>행에서 수행 중인 편집을 끝냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 속성을 설정에서 예외가 발생 하는 경우 예외가 생성 됩니다는 <xref:System.Data.DataTable.RowChanging> 이벤트입니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.DataRow.EndEdit%2A> 편집 되는 발생 하는 <xref:System.Data.DataRow> 값이 유효성 검사 함수는 true를 반환 합니다.  
  
 [!code-csharp[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.InRowChangingEventException">
          <see cref="E:System.Data.DataTable.RowChanging" /> 이벤트 내부에서 메서드를 호출한 경우</exception>
        <exception cref="T:System.Data.ConstraintException">제약 조건을 위반하여 편집한 경우</exception>
        <exception cref="T:System.Data.ReadOnlyException">행이 테이블에 속해 있으며 편집 중에 읽기 전용 열의 값을 변경하려고 한 경우</exception>
        <exception cref="T:System.Data.NoNullAllowedException">편집 중에 <see cref="P:System.Data.DataColumn.AllowDBNull" />이 false인 열에 null 값을 지정하려고 한 경우</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="P:System.Data.DataColumn.AllowDBNull" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildRows">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Data.DataRow" />의 자식 행을 가져옵니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relation As DataRelation) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::Data::DataRelation ^ relation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation">사용할 <see cref="T:System.Data.DataRelation" />입니다.</param>
        <summary>지정된 <see cref="T:System.Data.DataRow" />을 사용하여 이 <see cref="T:System.Data.DataRelation" />의 자식 행을 가져옵니다.</summary>
        <returns>
          <see cref="T:System.Data.DataRow" /> 개체로 이루어진 배열 또는 길이가 0인 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTable> 의 컬렉션도 포함 <xref:System.Data.DataRelation> 에서 반환 되는 개체는 <xref:System.Data.DataTable.ChildRelations%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.DataRow.GetChildRows%2A> 자식 반환할 <xref:System.Data.DataRow> 모든 자식에 대 한 개체 <xref:System.Data.DataRelation> 에 <xref:System.Data.DataTable>합니다. 행에 있는 각 열의 값이 출력 합니다.  
  
 [!code-csharp[Classic WebData DataRow.GetChildRows2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetChildRows2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">관계와 행이 같은 테이블에 속하지 않는 경우</exception>
        <exception cref="T:System.ArgumentNullException">관계가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.Data.RowNotInTableException">행이 테이블에 속하지 않는 경우</exception>
        <exception cref="T:System.Data.VersionNotFoundException">행에 이 버전의 데이터가 없는 경우</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relationName As String) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::String ^ relationName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationName">사용할 <see cref="P:System.Data.DataRelation.RelationName" />의 <see cref="T:System.Data.DataRelation" />입니다.</param>
        <summary>
          <see cref="T:System.Data.DataRow" />의 지정된 <see cref="P:System.Data.DataRelation.RelationName" />을 사용하여 <see cref="T:System.Data.DataRelation" />의 자식 행을 가져옵니다.</summary>
        <returns>
          <see cref="T:System.Data.DataRow" /> 개체로 이루어진 배열 또는 길이가 0인 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTable> 의 컬렉션도 포함 <xref:System.Data.DataRelation> 에서 반환 되는 개체는 <xref:System.Data.DataTable.ChildRelations%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">관계와 행이 같은 테이블에 속하지 않는 경우</exception>
        <exception cref="T:System.Data.RowNotInTableException">행이 테이블에 속하지 않는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(class System.Data.DataRelation relation, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relation As DataRelation, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::Data::DataRelation ^ relation, System::Data::DataRowVersion version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relation">사용할 <see cref="T:System.Data.DataRelation" />입니다.</param>
        <param name="version">가져올 데이터의 버전을 지정하는 <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다. 가능한 값은 <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> 및 <see langword="Proposed" />입니다.</param>
        <summary>지정된 <see cref="T:System.Data.DataRow" />과 <see cref="T:System.Data.DataRelation" />을 사용하여 <see cref="T:System.Data.DataRowVersion" />의 자식 행을 가져옵니다.</summary>
        <returns>
          <see cref="T:System.Data.DataRow" /> 개체의 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTable> 의 컬렉션도 포함 <xref:System.Data.DataRelation> 에서 반환 되는 개체는 <xref:System.Data.DataTable.ChildRelations%2A> 속성입니다.  
  
 사용 하 여는 <xref:System.Data.DataRow.HasVersion%2A> 속성을 확인 여부는 <xref:System.Data.DataRowVersion> 존재 한다고 합니다.  
  
 경우 <xref:System.Data.DataRowVersion.Default> 사용 되는 버전에 따라 다릅니다. 지정 된 된 <xref:System.Data.DataRow.RowState*> 되는 행의 `GetChildRows` 가 호출 됩니다. 경우 되는 행 `GetChildRows` 호출에 `RowState` 의 `Modified`, `New`, 또는 `Unchanged`, <xref:System.Data.DataRowVersion.Current> 행의 버전은 현재 버전의 값이 일치 하는 관련된 자식 행 인출을 사용 합니다. 경우 되는 행 `GetChildRows` 호출에 `RowState` 의 `Deleted`, <xref:System.Data.DataRowVersion.Original> 행의 버전은 원래 버전의 값이 일치 하는 관련된 자식 행 인출을 사용 합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.DataRow.GetChildRows%2A> 자식 반환할 <xref:System.Data.DataRow> 모든 자식에 대 한 개체 <xref:System.Data.DataRelation> 에 <xref:System.Data.DataTable>합니다. 지정된 된 버전 행에 있는 각 열의 값 다음 인쇄 됩니다.  
  
 [!code-csharp[Classic WebData DataRow.GetChildRows3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetChildRows3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">관계와 행이 같은 테이블에 속하지 않는 경우</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relation" />이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.Data.RowNotInTableException">행이 테이블에 속하지 않는 경우</exception>
        <exception cref="T:System.Data.VersionNotFoundException">행에 요청한 <see cref="T:System.Data.DataRowVersion" />이 없는 경우</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="T:System.Data.DataRowVersion" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (string relationName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(string relationName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relationName As String, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::String ^ relationName, System::Data::DataRowVersion version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relationName">사용할 <see cref="P:System.Data.DataRelation.RelationName" />의 <see cref="T:System.Data.DataRelation" />입니다.</param>
        <param name="version">가져올 데이터의 버전을 지정하는 <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다. 가능한 값은 <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> 및 <see langword="Proposed" />입니다.</param>
        <summary>
          <see cref="T:System.Data.DataRow" />의 지정된 <see cref="P:System.Data.DataRelation.RelationName" />과 <see cref="T:System.Data.DataRelation" />을 사용하여 <see cref="T:System.Data.DataRowVersion" />의 자식 행을 가져옵니다.</summary>
        <returns>
          <see cref="T:System.Data.DataRow" /> 개체로 이루어진 배열 또는 길이가 0인 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTable> 의 컬렉션도 포함 <xref:System.Data.DataRelation> 에서 반환 되는 개체는 <xref:System.Data.DataTable.ChildRelations%2A> 속성입니다.  
  
 사용 하 여는 <xref:System.Data.DataRow.HasVersion%2A> 속성을 확인 여부는 <xref:System.Data.DataRowVersion> 존재 한다고 합니다.  
  
 경우 <xref:System.Data.DataRowVersion.Default> 사용 되는 버전에 따라 다릅니다. 지정 된 된 <xref:System.Data.DataRow.RowState*> 되는 행의 `GetChildRows` 가 호출 됩니다. 경우 되는 행 `GetChildRows` 호출에 `RowState` 의 `Modified`, `New`, 또는 `Unchanged`, <xref:System.Data.DataRowVersion.Current> 행의 버전은 현재 버전의 값이 일치 하는 관련된 자식 행 인출을 사용 합니다. 경우 되는 행 `GetChildRows` 호출에 `RowState` 의 `Deleted`, <xref:System.Data.DataRowVersion.Original> 행의 버전은 원래 버전의 값이 일치 하는 관련된 자식 행 인출을 사용 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">관계와 행이 같은 테이블에 속하지 않는 경우</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relation" />이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.Data.RowNotInTableException">행이 테이블에 속하지 않는 경우</exception>
        <exception cref="T:System.Data.VersionNotFoundException">행에 요청한 <see cref="T:System.Data.DataRowVersion" />이 없는 경우</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetColumnError">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>열에 대한 오류 설명을 가져옵니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetColumnError(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnError(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnError (column As DataColumn) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetColumnError(System::Data::DataColumn ^ column);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">
          <see cref="T:System.Data.DataColumn" />
        </param>
        <summary>지정된 <see cref="T:System.Data.DataColumn" />의 오류 설명을 가져옵니다.</summary>
        <returns>오류 설명 텍스트를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Data.DataRow.SetColumnError%2A> 메서드 열 오류를 설정 합니다.  
  
 Columns 컬렉션에 대 한 오류가 있는지 확인 하려면는 <xref:System.Data.DataRow.HasErrors%2A> 메서드. 따라서 사용할 수는 <xref:System.Data.DataRow.GetColumnsInError%2A> 오류가 있는 모든 열을 검색 하는 메서드입니다. 또는 <xref:System.Data.DataTable.GetErrors%2A> 의 메서드는 <xref:System.Data.DataTable> 오류가 있는 모든 행을 반환 합니다.  
  
 사용 하 여 columns 컬렉션에 대 한 모든 오류를 지우려면는 <xref:System.Data.DataRow.ClearErrors%2A> 메서드.  
  
   
  
## Examples  
 다음 예제에서는 지정 된 오류 설명을 <xref:System.Data.DataRow>합니다.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="M:System.Data.DataTable.GetErrors" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetColumnError(int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnError(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnError (columnIndex As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetColumnError(int columnIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">열의 인덱스(0부터 시작)입니다.</param>
        <summary>지정된 인덱스를 가진 열의 오류 설명을 가져옵니다.</summary>
        <returns>오류 설명 텍스트를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Data.DataRow.SetColumnError%2A> 메서드 열 오류를 설정 합니다.  
  
 Columns 컬렉션에 대 한 오류가 있는지 확인 하려면는 <xref:System.Data.DataRow.HasErrors%2A> 메서드. 따라서 사용할 수는 <xref:System.Data.DataRow.GetColumnsInError%2A> 오류가 있는 모든 열을 검색 하는 메서드입니다.  
  
 사용 하 여 columns 컬렉션에 대 한 모든 오류를 지우려면는 <xref:System.Data.DataRow.ClearErrors%2A> 메서드.  
  
   
  
## Examples  
 다음 예제에서는 지정 된 오류 설명을 <xref:System.Data.DataRow>합니다.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <paramref name="columnIndex" /> 인수가 범위를 벗어난 경우</exception>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetColumnError(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnError(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnError (columnName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetColumnError(System::String ^ columnName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">열 이름입니다.</param>
        <summary>지정된 이름을 가진 열의 오류 설명을 가져옵니다.</summary>
        <returns>오류 설명 텍스트를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Data.DataRow.SetColumnError%2A> 메서드 열 오류를 설정 합니다.  
  
 Columns 컬렉션에 대 한 오류가 있는지 확인 하려면는 <xref:System.Data.DataRow.HasErrors%2A> 메서드. 따라서 사용할 수는 <xref:System.Data.DataRow.GetColumnsInError%2A> 오류가 있는 모든 열을 검색 하는 메서드입니다.  
  
 사용 하 여 columns 컬렉션에 대 한 모든 오류를 지우려면는 <xref:System.Data.DataRow.ClearErrors%2A> 메서드.  
  
   
  
## Examples  
 다음 예제에서는 지정 된 오류 설명을 <xref:System.Data.DataRow>합니다.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnsInError">
      <MemberSignature Language="C#" Value="public System.Data.DataColumn[] GetColumnsInError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataColumn[] GetColumnsInError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnsInError" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnsInError () As DataColumn()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataColumn ^&gt; ^ GetColumnsInError();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>오류가 있는 열로 이루어진 배열을 가져옵니다.</summary>
        <returns>오류가 있는 <see cref="T:System.Data.DataColumn" /> 개체로 이루어진 배열을 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataRow.GetColumnsInError%2A> 의 수를 줄일 수 있습니다 <xref:System.Data.DataColumn> 오류가 있는 열만 반환 하 여 오류에 대 한 처리 해야 하는 개체입니다. 개별 열에 오류를 설정할 수 있습니다는 <xref:System.Data.DataRow.SetColumnError%2A> 메서드. 처리의 수를 더 줄이려면를 검사 한는 <xref:System.Data.DataRow.HasErrors%2A> 속성의는 <xref:System.Data.DataRow> 을 확인 하려면 클래스 여부는 <xref:System.Data.DataRow> 호출 하기 전에 오류가 <xref:System.Data.DataRow.GetColumnsInError%2A>합니다.  
  
 사용 된 <xref:System.Data.DataRow.ClearErrors%2A> 메서드는 행에 대 한 모든 오류를 지웁니다. 여기에는 <xref:System.Data.DataRow.RowError%2A>가 포함됩니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.DataRow.HasErrors%2A> 오류 찾는 합니다. 행에 오류가 있는 경우는 <xref:System.Data.DataRow.GetColumnsInError%2A> 메서드 확인 될 수 있는 오류와 함께 열의 배열을 반환 합니다. <xref:System.Data.DataRow.ClearErrors%2A> 다음 메서드는 모든 오류를 지웁니다.  
  
 [!code-csharp[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="M:System.Data.DataRow.GetColumnError(System.Int32)" />
        <altmember cref="M:System.Data.DataTable.GetErrors" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetParentRow">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Data.DataRow" />의 부모 행을 가져옵니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relation As DataRelation) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::Data::DataRelation ^ relation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation">사용할 <see cref="T:System.Data.DataRelation" />입니다.</param>
        <summary>지정된 <see cref="T:System.Data.DataRow" />을 사용하여 <see cref="T:System.Data.DataRelation" />의 부모 행을 가져옵니다.</summary>
        <returns>현재 행의 부모 <see cref="T:System.Data.DataRow" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 <xref:System.Data.DataSet>, 컬렉션의 모든 부모 <xref:System.Data.DataRelation> 반환한 데이터 집합에 대 한 개체는 <xref:System.Data.DataRow.GetParentRows%2A> 메서드.  
  
 <xref:System.Data.DataTable> 의 컬렉션도 포함 <xref:System.Data.DataRelation> 에서 반환 된 개체는 <xref:System.Data.DataTable.ParentRelations%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.DataRow.GetParentRow%2A> 자식 반환할 <xref:System.Data.DataRow> 모든 자식에 대 한 개체 <xref:System.Data.DataRelation> 에 <xref:System.Data.DataTable>합니다. 행에 있는 각 열의 값이 출력 합니다.  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relation" />이 <see cref="T:System.Data.DataTable" />에 속하지 않는 경우  행이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.Data.DataException">자식 행에 여러 부모가 있습니다.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">이 행이 <see cref="T:System.Data.DataRelation" /> 개체의 자식 테이블에 속하지 않는 경우</exception>
        <exception cref="T:System.Data.RowNotInTableException">행이 테이블에 속하지 않는 경우</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relationName As String) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::String ^ relationName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationName">
          <see cref="P:System.Data.DataRelation.RelationName" />의 <see cref="T:System.Data.DataRelation" /></param>
        <summary>
          <see cref="T:System.Data.DataRow" />의 지정된 <see cref="P:System.Data.DataRelation.RelationName" />을 사용하여 <see cref="T:System.Data.DataRelation" />의 부모 행을 가져옵니다.</summary>
        <returns>현재 행의 부모 <see cref="T:System.Data.DataRow" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 <xref:System.Data.DataSet>, 컬렉션의 모든 부모 <xref:System.Data.DataRelation> 반환한 데이터 집합에 대 한 개체는 <xref:System.Data.DataRow.GetParentRows%2A> 메서드.  
  
 <xref:System.Data.DataTable> 의 컬렉션도 포함 <xref:System.Data.DataRelation> 에서 반환 된 개체는 <xref:System.Data.DataTable.ParentRelations%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.DataRow.GetParentRow%2A> 각 부모 행에서 값을 인쇄 하려면 <xref:System.Data.DataRow> 에 <xref:System.Data.DataTable>합니다.  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">관계와 행이 같은 테이블에 속하지 않는 경우</exception>
        <exception cref="T:System.Data.DataException">자식 행에 여러 부모가 있습니다.</exception>
        <exception cref="T:System.Data.RowNotInTableException">행이 테이블에 속하지 않는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(class System.Data.DataRelation relation, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relation As DataRelation, version As DataRowVersion) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::Data::DataRelation ^ relation, System::Data::DataRowVersion version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relation">사용할 <see cref="T:System.Data.DataRelation" />입니다.</param>
        <param name="version">가져올 데이터의 버전을 지정하는 <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다.</param>
        <summary>지정된 <see cref="T:System.Data.DataRow" />과 <see cref="T:System.Data.DataRelation" />을 사용하여 <see cref="T:System.Data.DataRowVersion" />의 부모 행을 가져옵니다.</summary>
        <returns>현재 행의 부모 <see cref="T:System.Data.DataRow" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 <xref:System.Data.DataSet>, 컬렉션의 모든 부모 <xref:System.Data.DataRelation> 반환한 데이터 집합에 대 한 개체는 <xref:System.Data.DataRow.GetParentRows%2A> 메서드.  
  
 <xref:System.Data.DataTable> 의 컬렉션도 포함 <xref:System.Data.DataRelation> 에서 반환 된 개체는 <xref:System.Data.DataTable.ParentRelations%2A> 속성입니다.  
  
 사용 하 여는 <xref:System.Data.DataRow.HasVersion%2A> 속성을 확인 여부는 <xref:System.Data.DataRowVersion> 존재 한다고 합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.DataRow.GetParentRow%2A> 자식 반환할 <xref:System.Data.DataRow> 모든 자식에 대 한 개체 <xref:System.Data.DataRelation> 에 <xref:System.Data.DataTable>합니다. 행에 있는 각 열의 값이 출력 합니다.  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">행이 <see langword="null" />인 경우  <paramref name="relation" />이 이 테이블의 부모 관계에 속하지 않는 경우</exception>
        <exception cref="T:System.Data.DataException">자식 행에 여러 부모가 있습니다.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">관계의 자식 테이블이 행이 속한 테이블이 아닌 경우</exception>
        <exception cref="T:System.Data.RowNotInTableException">행이 테이블에 속하지 않는 경우</exception>
        <exception cref="T:System.Data.VersionNotFoundException">행에 이 버전의 데이터가 없는 경우</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="T:System.Data.DataRowVersion" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (string relationName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(string relationName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relationName As String, version As DataRowVersion) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::String ^ relationName, System::Data::DataRowVersion version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relationName">
          <see cref="P:System.Data.DataRelation.RelationName" />의 <see cref="T:System.Data.DataRelation" /></param>
        <param name="version">
          <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다.</param>
        <summary>
          <see cref="T:System.Data.DataRow" />의 지정된 <see cref="P:System.Data.DataRelation.RelationName" />과 <see cref="T:System.Data.DataRelation" />을 사용하여 <see cref="T:System.Data.DataRowVersion" />의 부모 행을 가져옵니다.</summary>
        <returns>현재 행의 부모 <see cref="T:System.Data.DataRow" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 <xref:System.Data.DataSet>, 컬렉션의 모든 부모 <xref:System.Data.DataRelation> 반환한 데이터 집합에 대 한 개체는 <xref:System.Data.DataRow.GetParentRows%2A> 메서드.  
  
 <xref:System.Data.DataTable> 의 컬렉션도 포함 <xref:System.Data.DataRelation> 에서 반환 된 개체는 <xref:System.Data.DataTable.ParentRelations%2A> 속성입니다.  
  
 사용 하 여는 <xref:System.Data.DataRow.HasVersion%2A> 속성을 확인 여부는 <xref:System.Data.DataRowVersion> 존재 한다고 합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.DataRow.GetParentRow%2A> 각 부모 행에서 값을 인쇄 하려면 <xref:System.Data.DataRow> 에 <xref:System.Data.DataTable>합니다.  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">관계와 행이 같은 테이블에 속하지 않는 경우</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relation" />이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.Data.DataException">자식 행에 여러 부모가 있습니다.</exception>
        <exception cref="T:System.Data.RowNotInTableException">행이 테이블에 속하지 않는 경우</exception>
        <exception cref="T:System.Data.VersionNotFoundException">행에 요청한 <see cref="T:System.Data.DataRowVersion" />이 없는 경우</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetParentRows">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Data.DataRow" />의 부모 행을 가져옵니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relation As DataRelation) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::Data::DataRelation ^ relation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation">사용할 <see cref="T:System.Data.DataRelation" />입니다.</param>
        <summary>지정된 <see cref="T:System.Data.DataRow" />을 사용하여 <see cref="T:System.Data.DataRelation" />의 부모 행을 가져옵니다.</summary>
        <returns>
          <see cref="T:System.Data.DataRow" /> 개체로 이루어진 배열 또는 길이가 0인 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 <xref:System.Data.DataSet>, 컬렉션의 모든 부모 <xref:System.Data.DataRelation> 반환한 데이터 집합에 대 한 개체는 <xref:System.Data.DataRow.GetParentRows%2A> 메서드.  
  
 <xref:System.Data.DataTable> 의 컬렉션도 포함 <xref:System.Data.DataRelation> 에서 반환 된 개체는 <xref:System.Data.DataTable.ParentRelations%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.DataRow.GetParentRows%2A> 자식 반환할 <xref:System.Data.DataRow> 모든 자식에 대 한 개체 <xref:System.Data.DataRelation> 에 <xref:System.Data.DataTable>합니다. 행에 있는 각 열의 값이 출력 합니다.  
  
 [!code-vb[Classic WebData DataRow.GetParentRows2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRows2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="T:System.Data.DataRelation" />이 이 행의 <see cref="T:System.Data.DataSet" />에 속하지 않는 경우</exception>
        <exception cref="T:System.ArgumentNullException">행이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.Data.InvalidConstraintException">관계의 자식 테이블이 행이 속한 테이블이 아닌 경우</exception>
        <exception cref="T:System.Data.RowNotInTableException">행이 <see cref="T:System.Data.DataTable" />에 속하지 않는 경우</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relationName As String) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::String ^ relationName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationName">
          <see cref="P:System.Data.DataRelation.RelationName" />의 <see cref="T:System.Data.DataRelation" /></param>
        <summary>
          <see cref="T:System.Data.DataRow" />의 지정된 <see cref="P:System.Data.DataRelation.RelationName" />을 사용하여 <see cref="T:System.Data.DataRelation" />의 부모 행을 가져옵니다.</summary>
        <returns>
          <see cref="T:System.Data.DataRow" /> 개체로 이루어진 배열 또는 길이가 0인 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 <xref:System.Data.DataSet>, 컬렉션의 모든 부모 <xref:System.Data.DataRelation> 반환한 데이터 집합에 대 한 개체는 <xref:System.Data.DataRow.GetParentRows%2A> 메서드.  
  
 <xref:System.Data.DataTable> 의 컬렉션도 포함 <xref:System.Data.DataRelation> 에서 반환 된 개체는 <xref:System.Data.DataTable.ParentRelations%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">관계와 행이 같은 테이블에 속하지 않는 경우</exception>
        <exception cref="T:System.Data.RowNotInTableException">행이 테이블에 속하지 않는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(class System.Data.DataRelation relation, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relation As DataRelation, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::Data::DataRelation ^ relation, System::Data::DataRowVersion version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relation">사용할 <see cref="T:System.Data.DataRelation" />입니다.</param>
        <param name="version">가져올 데이터의 버전을 지정하는 <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다.</param>
        <summary>지정된 <see cref="T:System.Data.DataRow" />과 <see cref="T:System.Data.DataRelation" />을 사용하여 <see cref="T:System.Data.DataRowVersion" />의 부모 행을 가져옵니다.</summary>
        <returns>
          <see cref="T:System.Data.DataRow" /> 개체로 이루어진 배열 또는 길이가 0인 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 <xref:System.Data.DataSet>, 컬렉션의 모든 부모 <xref:System.Data.DataRelation> 반환한 데이터 집합에 대 한 개체는 <xref:System.Data.DataRow.GetParentRows%2A> 메서드.  
  
 <xref:System.Data.DataTable> 의 컬렉션도 포함 <xref:System.Data.DataRelation> 에서 반환 된 개체는 <xref:System.Data.DataTable.ParentRelations%2A> 속성입니다.  
  
 사용 하 여는 <xref:System.Data.DataRow.HasVersion%2A> 속성을 확인 여부는 <xref:System.Data.DataRowVersion> 존재 한다고 합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.DataRow.GetParentRows%2A> 자식 반환할 <xref:System.Data.DataRow> 모든 자식에 대 한 개체 <xref:System.Data.DataRelation> 에 <xref:System.Data.DataTable>합니다. 행에 있는 각 열의 값이 출력 합니다.  
  
 [!code-vb[Classic WebData DataRow.GetParentRows3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRows3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="T:System.Data.DataRelation" />이 이 행의 <see cref="T:System.Data.DataSet" />에 속하지 않는 경우</exception>
        <exception cref="T:System.ArgumentNullException">행이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.Data.InvalidConstraintException">관계의 자식 테이블이 행이 속한 테이블이 아닌 경우</exception>
        <exception cref="T:System.Data.RowNotInTableException">행이 <see cref="T:System.Data.DataTable" />에 속하지 않는 경우</exception>
        <exception cref="T:System.Data.VersionNotFoundException">행에 요청한 <see cref="T:System.Data.DataRowVersion" />이 없는 경우</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (string relationName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(string relationName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relationName As String, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::String ^ relationName, System::Data::DataRowVersion version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relationName">
          <see cref="P:System.Data.DataRelation.RelationName" />의 <see cref="T:System.Data.DataRelation" /></param>
        <param name="version">가져올 데이터의 버전을 지정하는 <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다. 가능한 값은 <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> 및 <see langword="Proposed" />입니다.</param>
        <summary>
          <see cref="T:System.Data.DataRow" />의 지정된 <see cref="P:System.Data.DataRelation.RelationName" />과 <see cref="T:System.Data.DataRelation" />을 사용하여 <see cref="T:System.Data.DataRowVersion" />의 부모 행을 가져옵니다.</summary>
        <returns>
          <see cref="T:System.Data.DataRow" /> 개체로 이루어진 배열 또는 길이가 0인 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 <xref:System.Data.DataSet>, 컬렉션의 모든 부모 <xref:System.Data.DataRelation> 반환한 데이터 집합에 대 한 개체는 <xref:System.Data.DataRow.GetParentRows%2A> 메서드.  
  
 <xref:System.Data.DataTable> 의 컬렉션도 포함 <xref:System.Data.DataRelation> 에서 반환 된 개체는 <xref:System.Data.DataTable.ParentRelations%2A> 속성입니다.  
  
 사용 하 여는 <xref:System.Data.DataRow.HasVersion%2A> 속성을 확인 여부는 <xref:System.Data.DataRowVersion> 존재 한다고 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">관계와 행이 같은 테이블에 속하지 않는 경우</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relation" />이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.Data.RowNotInTableException">행이 테이블에 속하지 않는 경우</exception>
        <exception cref="T:System.Data.VersionNotFoundException">행에 요청한 <see cref="T:System.Data.DataRowVersion" />이 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="HasErrors">
      <MemberSignature Language="C#" Value="public bool HasErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasErrors" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.HasErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasErrors { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행에 오류가 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>컬렉션에 오류가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HasErrors` 반환 `true` 있는 경우 <xref:System.Data.DataColumn> 행의 개체에 오류가 있으면 또는 경우에는 <xref:System.Data.DataRow.RowError%2A> 속성의는 <xref:System.Data.DataRow> 은 빈 문자열이 아닙니다.  
  
 데이터 유효성을 검사할 때 오류가 발생 한 행의 모든 열에 설정할 수 있습니다. 이런 열에 표시 되는 <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> 제어 하 고, 열이 오류에는 사용자에 게 알리기 위해 빨간색 느낌표가으로 표시 됩니다.  
  
 사용 하 여 <xref:System.Data.DataRow.SetColumnError%2A> 오류가 모든 열에 설정할 수 있습니다.  
  
 사용 하 여는 <xref:System.Data.DataRow.GetColumnError%2A> 및 `GetColumnsInError` 오류와 함께 열을 반환 하는 방법입니다.  
  
 <xref:System.Data.DataRow.ClearErrors%2A> 메서드는 행에 대 한 오류를 모두 지웁니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.DataRow.HasErrors%2A> 오류 찾는 합니다. 행에 오류가 있는 경우는 <xref:System.Data.DataRow.GetColumnsInError%2A> 메서드 확인 될 수 있는 오류와 함께 열의 배열을 반환 합니다. <xref:System.Data.DataRow.ClearErrors%2A> 다음 메서드는 모든 오류를 지웁니다.  
  
 [!code-csharp[Classic WebData DataRow.HasErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.HasErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.HasErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.HasErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataRow.GetColumnError(System.Int32)" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasVersion">
      <MemberSignature Language="C#" Value="public bool HasVersion (System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasVersion(valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasVersion (version As DataRowVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasVersion(System::Data::DataRowVersion version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="version">행 버전을 지정하는 <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다.</param>
        <summary>지정된 버전이 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <returns>버전이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 자세한 내용은 <xref:System.Data.DataRow.BeginEdit%2A> 메서드를 참조하세요.  
  
   
  
## Examples  
 사용 하 여 다음 예제는 <xref:System.Data.DataRow.HasVersion%2A> 메서드를 열의 현재 값 및 제안 된 값을 동일한 지 여부를 확인 합니다. 이 경우 편집이 취소 됩니다. 그렇지 않은 경우는 <xref:System.Data.DataRow.AcceptChanges%2A> 메서드는 편집을 끝냅니다.  
  
 [!code-vb[Classic WebData DataRow.HasVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.HasVersion Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsNull">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 열에 null 값이 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (column As DataColumn) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(System::Data::DataColumn ^ column);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">
          <see cref="T:System.Data.DataColumn" />
        </param>
        <summary>지정된 <see cref="T:System.Data.DataColumn" />에 null 값이 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <returns>열에 null 값이 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예의 각 테이블의 각 행의 열을 출력 한 <xref:System.Data.DataSet>합니다. 행을 null 값으로 설정 값이 출력 되지 않습니다.  
  
 [!code-vb[Classic WebData DataRow.IsNull2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (columnIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(int columnIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">열의 인덱스(0부터 시작)입니다.</param>
        <summary>지정된 인덱스의 열에 null 값이 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <returns>열에 null 값이 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 null 값으로 열 값을 변경 하 고 다음 사용 하 여는 <xref:System.Data.DataRow.IsNull%2A> 메서드 값이 null 인지 여부를 확인 합니다.  
  
 [!code-vb[Classic WebData DataRow.IsNull Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (columnName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(System::String ^ columnName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">열 이름입니다.</param>
        <summary>명명된 열에 null 값이 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <returns>열에 null 값이 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 null 값으로 열 값을 변경 하 고 다음 사용 하 여는 <xref:System.Data.DataRow.IsNull%2A> 메서드 값이 null 인지 여부를 확인 합니다.  
  
 [!code-vb[Classic WebData DataRow.IsNull1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (System.Data.DataColumn column, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(class System.Data.DataColumn column, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (column As DataColumn, version As DataRowVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(System::Data::DataColumn ^ column, System::Data::DataRowVersion version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="column">
          <see cref="T:System.Data.DataColumn" />
        </param>
        <param name="version">행 버전을 지정하는 <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다. 가능한 값은 <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> 및 <see langword="Proposed" />입니다.</param>
        <summary>지정된 <see cref="T:System.Data.DataColumn" />과 <see cref="T:System.Data.DataRowVersion" />에 null 값이 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <returns>열에 null 값이 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 열에 저장된 데이터를 가져오거나 설정합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[System.Data.DataColumn column] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(class System.Data.DataColumn)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(column As DataColumn) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Data::DataColumn ^] { System::Object ^ get(System::Data::DataColumn ^ column); void set(System::Data::DataColumn ^ column, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">데이터가 들어 있는 <see cref="T:System.Data.DataColumn" />입니다.</param>
        <summary>지정된 <see cref="T:System.Data.DataColumn" />에 저장된 데이터를 가져오거나 설정합니다.</summary>
        <value>데이터가 포함된 <see cref="T:System.Object" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 속성을 설정에서 예외가 발생 하는 경우 예외가 생성 됩니다는 <xref:System.Data.DataTable.ColumnChanging> 이벤트입니다.  
  
 직접 편집 인 경우 참조 <xref:System.Data.DataRow.EndEdit%2A> 생성 될 수 있는 예외에 대 한 합니다.  
  
   
  
## Examples  
 다음 예에서는의 사용을 보여는 <xref:System.Data.DataRow.Item%2A> 속성을 가져오고 특정 열 인덱스의 값을 설정 합니다. 첫 번째 예제에서 사용자가 클릭 하는 행의 첫 번째 열의 값을 가져옵니다는 <xref:System.Windows.Forms.DataGrid> 제어 합니다. 두 번째 메서드에 대 한 인수로 전달 되는 값을 설정 합니다.  
  
 [!code-vb[Classic WebData DataRow.this2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">열이 이 테이블에 속하지 않는 경우</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="column" />가 null인 경우</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">삭제된 행에 값을 설정하려고 한 경우</exception>
        <exception cref="T:System.InvalidCastException">값과 열의 데이터 형식이 일치하지 않는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int columnIndex] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(columnIndex As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int columnIndex); void set(int columnIndex, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">열의 인덱스(0부터 시작)입니다.</param>
        <summary>지정된 인덱스를 가진 열에 저장된 데이터를 가져오거나 설정합니다.</summary>
        <value>데이터가 포함된 <see cref="T:System.Object" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 속성을 설정에서 예외가 발생 하는 경우 예외가 생성 됩니다는 <xref:System.Data.DataTable.ColumnChanging> 이벤트입니다.  
  
 편집 하는 경우 참조 <xref:System.Data.DataRow.EndEdit%2A> 생성 될 수 있는 예외에 대 한 합니다.  
  
   
  
## Examples  
 다음 예에서는의 사용을 보여는 <xref:System.Data.DataRow.Item%2A> 속성을 가져오고 특정 열 인덱스의 값을 설정 합니다. 첫 번째 예제에서 사용자가 클릭 하는 행의 첫 번째 열의 값을 가져옵니다는 <xref:System.Windows.Forms.DataGrid> 제어 합니다.  
  
 [!code-csharp[Classic WebData DataRow.this Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">삭제된 행에 값을 설정하려고 하는 경우</exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <paramref name="columnIndex" /> 인수가 범위를 벗어난 경우</exception>
        <exception cref="T:System.InvalidCastException">값과 새 값의 <see cref="T:System.Type" /> 설정이 <see cref="P:System.Data.DataColumn.DataType" />과 일치하지 않는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string columnName] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(columnName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ columnName); void set(System::String ^ columnName, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">열 이름입니다.</param>
        <summary>지정된 이름을 가진 열에 저장된 데이터를 가져오거나 설정합니다.</summary>
        <value>데이터가 포함된 <see cref="T:System.Object" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 속성을 설정에서 예외가 발생 하는 경우 예외가 생성 됩니다는 <xref:System.Data.DataTable.ColumnChanging> 이벤트입니다.  
  
 직접 편집 인 경우 참조 <xref:System.Data.DataRow.EndEdit%2A> 생성 될 수 있는 예외에 대 한 합니다.  
  
   
  
## Examples  
 다음 예에서는의 사용을 보여는 <xref:System.Data.DataRow.Item%2A> 속성을 가져오고 특정 열 인덱스의 값을 설정 합니다. 첫 번째 예제에서 사용자가 클릭 하는 행의 첫 번째 열의 값을 가져옵니다는 <xref:System.Windows.Forms.DataGrid> 제어 합니다. 두 번째 메서드에 대 한 인수로 전달 되는 값을 설정 합니다.  
  
 [!code-csharp[Classic WebData DataRow.this1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="columnName" />에서 지정한 열을 찾을 수 없는 경우</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">삭제된 행에 값을 설정하려고 하는 경우</exception>
        <exception cref="T:System.InvalidCastException">설정한 값에 대해 해당 <see cref="T:System.Type" />이 <see cref="P:System.Data.DataColumn.DataType" />과 일치하지 않는 경우</exception>
        <exception cref="T:System.Data.NoNullAllowedException">
          <see cref="P:System.Data.DataColumn.AllowDBNull" />이 <see langword="false" />로 설정된 열에 null 값을 삽입하려고 할 때 발생합니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[System.Data.DataColumn column, System.Data.DataRowVersion version] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(class System.Data.DataColumn, valuetype System.Data.DataRowVersion)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(column As DataColumn, version As DataRowVersion) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Data::DataColumn ^, System::Data::DataRowVersion] { System::Object ^ get(System::Data::DataColumn ^ column, System::Data::DataRowVersion version); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="column">열에 대한 정보가 들어 있는 <see cref="T:System.Data.DataColumn" />입니다.</param>
        <param name="version">원하는 행 버전을 지정하는 <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다. 가능한 값은 <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> 및 <see langword="Proposed" />입니다.</param>
        <summary>지정된 <see cref="T:System.Data.DataColumn" />에 저장된 특정 버전의 데이터를 가져옵니다.</summary>
        <value>데이터가 포함된 <see cref="T:System.Object" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `version` 와 혼동 해서는 안는 <xref:System.Data.DataRow.RowState*> 속성입니다. `version` 인수는 열의 원래 값과 비교 하 여 열에 포함 된 데이터의 상태를 설명 합니다.  
  
 속성을 설정에서 예외가 발생 하는 경우 예외가 생성 됩니다는 <xref:System.Data.DataTable.ColumnChanging> 이벤트입니다.  
  
 직접 편집 인 경우 참조 <xref:System.Data.DataRow.EndEdit%2A> 생성 될 수 있는 예외에 대 한 합니다.  
  
   
  
## Examples  
 다음 예제에서 클릭된 된 셀의 현재 값을 가져옵니다는 <xref:System.Windows.Forms.DataGrid> 제어 합니다.  
  
 [!code-csharp[Classic WebData DataRow.this5 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this5 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this5 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this5 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">열이 테이블에 속하지 않는 경우</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="column" /> 인수에 null이 포함된 경우</exception>
        <exception cref="T:System.Data.VersionNotFoundException">행에 이 버전의 데이터가 없는 경우</exception>
        <altmember cref="T:System.Data.DataRowVersion" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int columnIndex, System.Data.DataRowVersion version] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32, valuetype System.Data.DataRowVersion)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(columnIndex As Integer, version As DataRowVersion) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int, System::Data::DataRowVersion] { System::Object ^ get(int columnIndex, System::Data::DataRowVersion version); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="columnIndex">열의 인덱스(0부터 시작)입니다.</param>
        <param name="version">원하는 행 버전을 지정하는 <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다. 가능한 값은 <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> 및 <see langword="Proposed" />입니다.</param>
        <summary>검색할 데이터의 지정된 버전 및 인덱스를 가진 열에 저장된 데이터를 가져옵니다.</summary>
        <value>데이터가 포함된 <see cref="T:System.Object" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 수만 만들거나 호출한 후 행을 업데이트 합니다.는 <xref:System.Data.DataRow.BeginEdit%2A> 메서드; 마찬가지로 <xref:System.Data.DataRow.EndEdit%2A> 편집을 커밋하려면 메서드를 호출 해야 합니다. 호출한 후의 <xref:System.Data.DataRow.EndEdit%2A> 메서드를 호출 하기 전에 및는 <xref:System.Data.DataRow.AcceptChanges%2A> 메서드를 내부 표현 및 새 원래 제안 된 값이 저장 됩니다. 따라서 호출 하기 전에 <xref:System.Data.DataRow.AcceptChanges%2A>를 사용할 수 있습니다는 `version` 인수는 열 값의 버전을 해야 하거나 지정할 수는 `DataRowVersion.Original` 또는 `DataRowVersion.Proposed`합니다. 그러나 가능한 한 즉시 호출 하는 <xref:System.Data.DataRow.AcceptChanges%2A> 메서드, 버전 열로 되돌아갑니다 `DataRowVersion.Original`합니다. 행이 새를 전달할 수도 있습니다 `DataRowVersion.Default` 열의 기본 값을 검색 하는 매개 변수에 대 한 합니다. 전달 하는 경우 `DataRowVersion.Current`, 속성은 현재 반환 값을 해당 버전 무엇이 든 될 수 있습니다.  
  
> [!NOTE]
>  <xref:System.Data.DataRow.BeginEdit%2A> 메서드는 데이터 바인딩된 컨트롤의 값을 변경 하거나 때 암시적으로 호출 됩니다는 <xref:System.Data.DataRow> 개체에 추가 <xref:System.Data.DataRowCollection>; <xref:System.Data.DataRow.EndEdit%2A> 메서드는 암시적으로 다음 메서드를 호출 하는 경우:는 <xref:System.Data.DataRow.AcceptChanges%2A> 메서드는 <xref:System.Data.DataRow> 개체는 <xref:System.Data.DataTable.AcceptChanges%2A> 의 메서드는 <xref:System.Data.DataTable> 개체 또는 <xref:System.Data.DataRow.CancelEdit%2A> 메서드.  
  
 반면,는 <xref:System.Data.DataRowVersion> 열거형 `Current` 후 데이터의 버전을 반환는 <xref:System.Data.DataRow.EndEdit%2A> 메서드가 호출 되었습니다.  
  
 `version` 인수와 일치 하지 않습니다는 <xref:System.Data.DataRow.RowState*> 속성입니다. `version` 인수는 열의 원래 값과 비교 하 여 열에 포함 된 데이터의 상태를 설명 합니다. <xref:System.Data.DataRow.RowState*> 부모에 상대적인 전체 행의 상태를 설명 하는 속성 <xref:System.Data.DataTable>합니다.  
  
 속성을 설정에서 예외가 발생 하는 경우 예외가 생성 됩니다는 <xref:System.Data.DataTable.ColumnChanging> 이벤트입니다.  
  
 직접 편집 인 경우 참조 <xref:System.Data.DataRow.EndEdit%2A> 생성 될 수 있는 예외에 대 한 합니다.  
  
   
  
## Examples  
 다음 예제에서는 통해 열의 현재 값을 가져옵니다는 <xref:System.Data.DataRow.Item%2A> 의 속성은 <xref:System.Data.DataRow> 개체입니다.  
  
 [!code-vb[Classic WebData DataRow.this3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <paramref name="columnIndex" /> 인수가 범위를 벗어난 경우</exception>
        <exception cref="T:System.InvalidCastException">값과 열의 데이터 형식이 일치하지 않는 경우</exception>
        <exception cref="T:System.Data.VersionNotFoundException">행에 이 버전의 데이터가 없는 경우</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">삭제된 행에 값을 설정하려고 한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string columnName, System.Data.DataRowVersion version] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string, valuetype System.Data.DataRowVersion)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(columnName As String, version As DataRowVersion) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^, System::Data::DataRowVersion] { System::Object ^ get(System::String ^ columnName, System::Data::DataRowVersion version); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="columnName">열 이름입니다.</param>
        <param name="version">원하는 행 버전을 지정하는 <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다. 가능한 값은 <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> 및 <see langword="Proposed" />입니다.</param>
        <summary>명명된 열에 저장된 특정 버전의 데이터를 가져옵니다.</summary>
        <value>데이터가 포함된 <see cref="T:System.Object" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 버전와 일치 하지 않습니다는 <xref:System.Data.DataRow.RowState*> 속성입니다. `version` 인수는 열의 원래 값과 비교 하 여 열에 포함 된 데이터의 상태를 설명 합니다. <xref:System.Data.DataRow.RowState*> 부모에 상대적인 전체 행의 상태를 설명 하는 속성 <xref:System.Data.DataTable>합니다.  
  
 속성을 설정에서 예외가 발생 하는 경우 예외가 생성 됩니다는 <xref:System.Data.DataTable.ColumnChanging> 이벤트입니다.  
  
 직접 편집 인 경우 참조 <xref:System.Data.DataRow.EndEdit%2A> 생성 될 수 있는 예외에 대 한 합니다.  
  
   
  
## Examples  
 다음 예제에서는의 클릭된 된 셀에 현재 버전의 데이터를 가져옵니다는 <xref:System.Windows.Forms.DataGrid> 제어 합니다.  
  
 [!code-csharp[Classic WebData DataRow.this4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="columnName" />에서 지정한 열을 찾을 수 없는 경우</exception>
        <exception cref="T:System.InvalidCastException">값과 열의 데이터 형식이 일치하지 않는 경우</exception>
        <exception cref="T:System.Data.VersionNotFoundException">행에 이 버전의 데이터가 없는 경우</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">행이 삭제된 경우</exception>
        <altmember cref="T:System.Data.DataRowVersion" />
      </Docs>
    </Member>
    <Member MemberName="ItemArray">
      <MemberSignature Language="C#" Value="public object[] ItemArray { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object[] ItemArray" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.ItemArray" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemArray As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Object ^&gt; ^ ItemArray { cli::array &lt;System::Object ^&gt; ^ get(); void set(cli::array &lt;System::Object ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>배열을 통해 이 행의 모든 값을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Object" /> 형식의 배열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 설정 하거나 배열을 통해이 행에 대 한 값을 가져오는 사용할 수 있습니다. 값을 설정 하려면이 속성을 사용 하는 경우 배열에 같은 크기와 열 컬렉션에 있는 순서가 있어야 합니다. 전달 `null` 에 <xref:System.Data.DataRow.ItemArray%2A> 값이 지정 않았음을 나타냅니다.  
  
 사용자의 예외를 생성할 수 있습니다는 <xref:System.Data.DataTable.ColumnChanging> 이벤트 또는 <xref:System.Data.DataTable.RowChanging> 이벤트입니다.  
  
   
  
## Examples  
 다음 예제에서는 가져오고 사용 하 여 값을 설정 하는 방법을 보여는 <xref:System.Data.DataRow.ItemArray%2A> 속성입니다.  
  
 [!code-csharp[Classic WebData DataRow.ItemArray Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ItemArray Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.ItemArray Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ItemArray Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">배열이 테이블의 열 수보다 큰 경우</exception>
        <exception cref="T:System.InvalidCastException">배열의 값이 해당 <see cref="P:System.Data.DataColumn.DataType" />의 <see cref="T:System.Data.DataColumn" />과 일치하지 않는 경우</exception>
        <exception cref="T:System.Data.ConstraintException">제약 조건을 위반하여 편집한 경우</exception>
        <exception cref="T:System.Data.ReadOnlyException">편집 중에 읽기 전용 열의 값을 변경하려고 한 경우</exception>
        <exception cref="T:System.Data.NoNullAllowedException">편집 중에 <see cref="P:System.Data.DataColumn.AllowDBNull" /> 개체의 <see cref="T:System.Data.DataColumn" />이 <see langword="false" />인 열에 null 값을 지정하려고 한 경우</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">행이 삭제된 경우</exception>
        <altmember cref="M:System.Data.DataRow.AcceptChanges" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="T:System.Data.DataColumn" />
      </Docs>
    </Member>
    <Member MemberName="RejectChanges">
      <MemberSignature Language="C#" Value="public void RejectChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RejectChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.RejectChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub RejectChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RejectChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="M:System.Data.DataRow.AcceptChanges" />를 마지막으로 호출한 이후에 수행된 행의 모든 변경 내용을 취소합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출 하는 경우는 <xref:System.Data.DataRow.RejectChanges%2A> 메서드는 <xref:System.Data.DataRow.CancelEdit%2A> 암시적으로 메서드는 편집을 취소 합니다. 경우 <xref:System.Data.DataRow.RowState*> 삭제 하거나 수정 하 고, 행의 이전 값으로 되돌아갑니다 및 <xref:System.Data.DataRow.RowState*> 변경 됩니다. 경우는 <xref:System.Data.DataRow.RowState*> 추가 되 면 해당 행은 제거 합니다.  
  
   
  
## Examples  
 다음 예제에서는 간단한 <xref:System.Data.DataTable> 10 행과 열을 2입니다. 여러 후 <xref:System.Data.DataRow> 와 항목은 삭제는 <xref:System.Data.DataRow.Delete%2A> 행 중 하나는 메서드를 호출 하 여 삭제를 취소 <xref:System.Data.DataRow.RejectChanges%2A>합니다.  
  
 [!code-csharp[Classic WebData DataRow.Delete Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.Delete Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.RowNotInTableException">행이 테이블에 속하지 않는 경우</exception>
        <altmember cref="M:System.Data.DataRow.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.IsNull(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RowError">
      <MemberSignature Language="C#" Value="public string RowError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RowError" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.RowError" />
      <MemberSignature Language="VB.NET" Value="Public Property RowError As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RowError { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행에 대한 사용자 지정 오류 설명을 가져오거나 설정합니다.</summary>
        <value>오류를 설명하는 텍스트입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Data.DataRow.HasErrors%2A> 을 결정 하는 속성 여부는 <xref:System.Data.DataRow> 오류가 포함 되어 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 10 개의 행에 표시 된 테이블에 대 한 오류 텍스트는 <xref:System.Windows.Forms.DataGrid> 제어 합니다.  
  
 [!code-csharp[Classic WebData DataRow.RowError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.RowError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.RowError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.RowError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
        <altmember cref="P:System.Data.DataSet.HasErrors" />
      </Docs>
    </Member>
    <Member MemberName="RowState">
      <MemberSignature Language="C#" Value="public System.Data.DataRowState RowState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataRowState RowState" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.RowState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowState As DataRowState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataRowState RowState { System::Data::DataRowState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Data.DataRowCollection" />과의 관계와 관련하여 행의 현재 상태를 가져옵니다.</summary>
        <value>
          <see cref="T:System.Data.DataRowState" /> 값 중 하나입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 값은 <xref:System.Data.DataRow.RowState*> 두 가지 요인에 따라 달라 집니다: 행에서 수행 된 작업의 종류를 사용할지 여부와 <xref:System.Data.DataRow.AcceptChanges%2A> 호출 되었습니다.는 <xref:System.Data.DataRow>합니다.  
  
   
  
## Examples  
 다음 예에서는 먼저 새 만듭니다 <xref:System.Data.DataTable> 하나의 열이 있는 단일 만듭니다 <xref:System.Data.DataRow>합니다. 로 <xref:System.Data.DataRow> 은 생성, 추가, 수정 및 삭제 하 고, 해당 <xref:System.Data.DataRow.RowState*> 인쇄 됩니다.  
  
 [!code-csharp[Classic WebData DataRow.RowState Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.RowState Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.RowState Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.RowState Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRowCollection.Add(System.Data.DataRow)" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="T:System.Data.DataRowView" />
        <altmember cref="M:System.Data.DataRow.Delete" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataTable.NewRow" />
        <altmember cref="M:System.Data.DataRow.SetAdded" />
        <altmember cref="M:System.Data.DataRow.SetModified" />
      </Docs>
    </Member>
    <Member MemberName="SetAdded">
      <MemberSignature Language="C#" Value="public void SetAdded ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAdded() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetAdded" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAdded ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAdded();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Data.DataRow.RowState" />의 <see cref="T:System.Data.DataRow" />를 <see langword="Added" />로 변경합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataRow.RowState*>의 <xref:System.Data.DataRow>를 `Added`로 변경합니다. 현재 행 중 하나에 없는 경우는 `Unchanged` 또는 `Added` 상태 이면 throw는 <xref:System.InvalidOperationException> 메시지와 함께 하 `SetAdded` 에 대해서만 호출할 수는 `DataRow` 인스턴스는 `RowState` 은 `Unchanged`합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.SetModified" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetColumnError">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>열에 대한 오류 설명을 설정합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (System.Data.DataColumn column, string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnError(class System.Data.DataColumn column, string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColumnError (column As DataColumn, error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumnError(System::Data::DataColumn ^ column, System::String ^ error);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="column">오류 설명을 설정할 <see cref="T:System.Data.DataColumn" />입니다.</param>
        <param name="error">오류 설명입니다.</param>
        <summary>
          <see cref="T:System.Data.DataColumn" />으로 지정된 열에 대한 오류 설명을 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여 오류 설명을 검사 하는 <xref:System.Data.DataRow.GetColumnError%2A> 메서드.  
  
 Columns 컬렉션에 대 한 오류가 있는지 확인 하려면는 <xref:System.Data.DataRow.HasErrors%2A> 속성입니다. 따라서 사용할 수는 <xref:System.Data.DataRow.GetColumnsInError%2A> 오류가 있는 모든 열을 검색 하는 메서드입니다.  
  
 경우 `null` 으로 전달 된 빈 문자열 또는 `error` 매개 변수는 <xref:System.Data.DataRow> 오류가 설정 되지 않은 것 처럼 동작 및 <xref:System.Data.DataRow.HasErrors%2A> 속성은 false를 반환 합니다.  
  
 전체 행에 대 한 사용자 지정 오류 설명을 설정 하려면는 <xref:System.Data.DataRow.RowError%2A> 속성입니다.  
  
 Columns 컬렉션에 대 한 오류가 있는지 확인 하려면는 <xref:System.Data.DataRow.HasErrors%2A> 메서드.  
  
 사용 하 여 columns 컬렉션에 대 한 모든 오류를 지우려면는 <xref:System.Data.DataRow.ClearErrors%2A> 메서드.  
  
   
  
## Examples  
 다음 예제에서는 지정 된 오류 설명을 <xref:System.Data.DataRow>합니다.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (int columnIndex, string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnError(int32 columnIndex, string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColumnError (columnIndex As Integer, error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumnError(int columnIndex, System::String ^ error);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnIndex">열의 인덱스(0부터 시작)입니다.</param>
        <param name="error">오류 설명입니다.</param>
        <summary>지정된 인덱스를 가진 열에 대한 오류 설명을 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지정 된 열에 사용자 지정 오류 설명을 설정 하는 메서드를 사용 됩니다. 사용할 수는 <xref:System.Windows.Forms.ErrorProvider> 오류의 텍스트를 표시 하는 컨트롤입니다.  
  
 사용 하 여 오류 설명을 검사 하는 <xref:System.Data.DataRow.GetColumnError%2A> 메서드.  
  
 Columns 컬렉션에 대 한 오류가 있는지 확인 하려면는 <xref:System.Data.DataRow.HasErrors%2A> 속성입니다. 따라서 사용할 수는 <xref:System.Data.DataRow.GetColumnsInError%2A> 오류가 있는 모든 열을 검색 하는 메서드입니다.  
  
 경우 `null` 으로 전달 된 빈 문자열 또는 `error` 매개 변수는 <xref:System.Data.DataRow> 오류가 설정 되지 않은 것 처럼 동작 및 <xref:System.Data.DataRow.HasErrors%2A> 속성은 false를 반환 합니다.  
  
 전체 행에 대 한 사용자 지정 오류 설명을 설정 하려면는 <xref:System.Data.DataRow.RowError%2A> 속성입니다.  
  
 사용 하 여 columns 컬렉션에 대 한 모든 오류를 지우려면는 <xref:System.Data.DataRow.ClearErrors%2A> 메서드.  
  
 전체 행에 적용 되는 오류 텍스트를 설정 하려면 설정는 <xref:System.Data.DataRow.RowError%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서는 지정 된 오류 설명을 <xref:System.Data.DataRow>합니다.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <paramref name="columnIndex" /> 인수가 범위를 벗어난 경우</exception>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (string columnName, string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnError(string columnName, string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetColumnError(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColumnError (columnName As String, error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumnError(System::String ^ columnName, System::String ^ error);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">열 이름입니다.</param>
        <param name="error">오류 설명입니다.</param>
        <summary>지정된 이름을 가진 열에 대한 오류 설명을 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 열 이름으로 설정 된는 <xref:System.Data.DataColumn.ColumnName%2A> 의 속성은 <xref:System.Data.DataColumn> 클래스입니다.  
  
 사용 하 여 오류 설명을 검사 하는 <xref:System.Data.DataRow.GetColumnError%2A> 메서드.  
  
 Columns 컬렉션에 대 한 오류가 있는지 확인 하려면는 <xref:System.Data.DataRow.HasErrors%2A> 속성입니다. 따라서 사용할 수는 <xref:System.Data.DataRow.GetColumnsInError%2A> 오류가 있는 모든 열을 검색 하는 메서드입니다.  
  
 경우 `null` 으로 전달 된 빈 문자열 또는 `error` 매개 변수는 <xref:System.Data.DataRow> 오류가 설정 되지 않은 것 처럼 동작 및 <xref:System.Data.DataRow.HasErrors%2A> 속성은 false를 반환 합니다.  
  
 전체 행에 대 한 사용자 지정 오류 설명을 설정 하려면는 <xref:System.Data.DataRow.RowError%2A> 속성입니다.  
  
 Columns 컬렉션에 대 한 오류가 있는지 확인 하려면는 <xref:System.Data.DataRow.HasErrors%2A> 메서드.  
  
 사용 하 여 columns 컬렉션에 대 한 모든 오류를 지우려면는 <xref:System.Data.DataRow.ClearErrors%2A> 메서드.  
  
   
  
## Examples  
 다음 예제에서는 지정 된 오류 설명을 <xref:System.Data.DataRow>합니다.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="SetModified">
      <MemberSignature Language="C#" Value="public void SetModified ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetModified() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetModified" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetModified ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetModified();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Data.DataRow.RowState" />의 <see cref="T:System.Data.DataRow" />를 <see langword="Modified" />로 변경합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataRow.RowState*>의 <xref:System.Data.DataRow>를 `Modified`로 변경합니다. 현재 행 중 하나에 없는 경우는 `Unchanged` 또는 `Added` 상태 이면 throw는 <xref:System.InvalidOperationException> 메시지와 함께 하 `SetModified` 에 대해서만 호출할 수는 `DataRow` 인스턴스는 `RowState` 은 `Unchanged`합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.SetAdded" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <Member MemberName="SetNull">
      <MemberSignature Language="C#" Value="protected void SetNull (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNull(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetNull(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetNull (column As DataColumn)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetNull(System::Data::DataColumn ^ column);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">
          <see cref="T:System.Data.DataColumn" />
        </param>
        <summary>지정된 <see cref="T:System.Data.DataColumn" />의 값을 null 값으로 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Data.DataRow.IsNull%2A> 메서드를 열에 null 값이 포함 되어 있는지 확인 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetParentRow">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Data.DataRow" />의 부모 행을 설정합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetParentRow">
      <MemberSignature Language="C#" Value="public void SetParentRow (System.Data.DataRow parentRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParentRow(class System.Data.DataRow parentRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetParentRow(System.Data.DataRow)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParentRow (parentRow As DataRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParentRow(System::Data::DataRow ^ parentRow);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentRow" Type="System.Data.DataRow" />
      </Parameters>
      <Docs>
        <param name="parentRow">새 부모 <see cref="T:System.Data.DataRow" />입니다.</param>
        <summary>지정된 새 부모 <see cref="T:System.Data.DataRow" />를 가지는 <see cref="T:System.Data.DataRow" />의 부모 행을 설정합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetParentRow">
      <MemberSignature Language="C#" Value="public void SetParentRow (System.Data.DataRow parentRow, System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParentRow(class System.Data.DataRow parentRow, class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParentRow (parentRow As DataRow, relation As DataRelation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParentRow(System::Data::DataRow ^ parentRow, System::Data::DataRelation ^ relation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentRow" Type="System.Data.DataRow" />
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="parentRow">새 부모 <see cref="T:System.Data.DataRow" />입니다.</param>
        <param name="relation">사용할 관계 <see cref="T:System.Data.DataRelation" />입니다.</param>
        <summary>지정된 새 부모 <see cref="T:System.Data.DataRow" />와 <see cref="T:System.Data.DataRow" />을 가지는 <see cref="T:System.Data.DataRelation" />의 부모 행을 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 특정 자식 행의 부모 행을 설정합니다.  
  
 [!code-vb[Classic WebData DataRow.SetParentRow1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetParentRow1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.RowNotInTableException">행 중의 하나가 테이블에 속하지 않는 경우</exception>
        <exception cref="T:System.ArgumentNullException">행 중 하나가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException">관계가 <see cref="T:System.Data.DataRelationCollection" /> 개체의 <see cref="T:System.Data.DataSet" />에 속하지 않은 경우</exception>
        <exception cref="T:System.Data.InvalidConstraintException">관계의 자식 <see cref="T:System.Data.DataTable" />이 이 행이 속한 테이블이 아닌 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public System.Data.DataTable Table { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataTable Table" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Table" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Table As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataTable ^ Table { System::Data::DataTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 행에 스키마가 있는 <see cref="T:System.Data.DataTable" />을 가져옵니다.</summary>
        <value>이 행이 속한 <see cref="T:System.Data.DataTable" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Data.DataRow> 반드시 행의 테이블 컬렉션에 속하지 않습니다. 이 문제는 발생 때는 <xref:System.Data.DataRow> 생성 되었지만에 추가 되지 않은 <xref:System.Data.DataRowCollection>합니다. 경우는 <xref:System.Data.DataRow.RowState*> 속성에서 반환 `DataRowState.Detached`, 행이 모든 컬렉션에 없습니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.DataRow.Table%2A> 의 columns 컬렉션에 대 한 참조를 반환 하는 <xref:System.Data.DataTable>합니다.  
  
 [!code-csharp[Classic WebData DataRow.Table Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Table Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.Table Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Table Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="T:System.Data.DataTable" />
      </Docs>
    </Member>
  </Members>
</Type>