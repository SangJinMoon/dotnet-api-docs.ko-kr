<Type Name="CommandType" FullName="System.Data.CommandType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="314be29f92a4c5bb09cd9d291bc00baca941811c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30387777" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum CommandType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CommandType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Data.CommandType" />
  <TypeSignature Language="VB.NET" Value="Public Enum CommandType" />
  <TypeSignature Language="C++ CLI" Value="public enum class CommandType" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <span data-ttu-id="0099b-101">명령 문자열을 해석하는 방법을 지정합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0099b-101">Specifies how a command string is interpreted.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0099b-102">때는 <xref:System.Data.CommandType> StoredProcedure 속성이 <xref:System.Data.IDbCommand.CommandText%2A> 속성에 설정할 저장된 프로시저의 이름에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0099b-102">When the <xref:System.Data.CommandType> property is set to StoredProcedure, the <xref:System.Data.IDbCommand.CommandText%2A> property should be set to the name of the stored procedure to be accessed.</span></span> <span data-ttu-id="0099b-103">사용자는 이스케이프 문자 구문을 사용 하거나 명명 된 지정된 된 테이블에 특수 문자가 포함 되어 있으면 해당 문자를 포함 해야 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0099b-103">The user may be required to use escape character syntax or include qualifying characters if any of the specified tables named contain any special characters.</span></span> <span data-ttu-id="0099b-104">명령 개체의 Execute 메서드 중 하나를 호출 하면 모든 행 및 열 이름이 지정 된 테이블 또는 테이블 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0099b-104">All rows and columns of the named table or tables will be returned when you call one of the Execute methods of a Command object.</span></span>  
  
 <span data-ttu-id="0099b-105">경우는 <xref:System.Data.CommandType> TableDirect, 속성이 <xref:System.Data.IDbCommand.CommandText%2A> 속성 테이블의 이름으로 액세스할 수를 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0099b-105">When the <xref:System.Data.CommandType> property is set to TableDirect, the <xref:System.Data.IDbCommand.CommandText%2A> property should be set to the name of the table to be accessed.</span></span> <span data-ttu-id="0099b-106">사용자는 이스케이프 문자 구문을 사용 하거나 명명 된 테이블에 특수 문자가 포함 되어 있으면 해당 문자를 포함 해야 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0099b-106">The user may be required to use escape character syntax or include qualifying characters if any of the tables named contain any special characters.</span></span> <span data-ttu-id="0099b-107">Execute 메서드 중 하나를 호출 하면 모든 행과 명명된 된 테이블의 열 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0099b-107">All rows and columns of the named table will be returned when you call one of the Execute methods.</span></span>  
  
 <span data-ttu-id="0099b-108">여러 테이블에 액세스 하려면 공백이 나 액세스할 테이블의 이름이 포함 된 패딩이 없는 쉼표로 구분 된 목록을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0099b-108">In order to access multiple tables, use a comma delimited list, without spaces or padding, containing the names of the tables to access.</span></span> <span data-ttu-id="0099b-109">경우는 `CommandText` 속성 여러 테이블의 이름이 지정된 된 테이블의 조인 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0099b-109">When the `CommandText` property names multiple tables, a join of the specified tables is returned.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0099b-110">`TableDirect` 에서만 지원.NET Framework Data Provider for OLE DB 합니다.</span><span class="sxs-lookup"><span data-stu-id="0099b-110">`TableDirect` is only supported by the .NET Framework Data Provider for OLE DB.</span></span> <span data-ttu-id="0099b-111">여러 테이블 액세스는 경우 지원 <xref:System.Data.CommandType.TableDirect> 로 설정 된 `TableDirect`합니다.</span><span class="sxs-lookup"><span data-stu-id="0099b-111">Multiple table access is not supported when <xref:System.Data.CommandType.TableDirect> is set to `TableDirect`.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="StoredProcedure">
      <MemberSignature Language="C#" Value="StoredProcedure" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.CommandType StoredProcedure = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Data.CommandType.StoredProcedure" />
      <MemberSignature Language="VB.NET" Value="StoredProcedure" />
      <MemberSignature Language="C++ CLI" Value="StoredProcedure" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandType</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0099b-112">저장 프로시저의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0099b-112">The name of a stored procedure.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="TableDirect">
      <MemberSignature Language="C#" Value="TableDirect" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.CommandType TableDirect = int32(512)" />
      <MemberSignature Language="DocId" Value="F:System.Data.CommandType.TableDirect" />
      <MemberSignature Language="VB.NET" Value="TableDirect" />
      <MemberSignature Language="C++ CLI" Value="TableDirect" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandType</ReturnType>
      </ReturnValue>
      <MemberValue>512</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0099b-113">테이블의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0099b-113">The name of a table.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="Text" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.CommandType Text = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Data.CommandType.Text" />
      <MemberSignature Language="VB.NET" Value="Text" />
      <MemberSignature Language="C++ CLI" Value="Text" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0099b-114">SQL 텍스트 명령입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0099b-114">An SQL text command.</span>
          </span>
          <span data-ttu-id="0099b-115">(기본값)</span>
          <span class="sxs-lookup">
            <span data-stu-id="0099b-115">(Default.)</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>