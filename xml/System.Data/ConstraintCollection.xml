<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ConstraintCollection.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac532afeb70327b5ac7218829de95ce74f7d33d9370.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">32afeb70327b5ac7218829de95ce74f7d33d9370</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.ConstraintCollection">
          <source>Represents a collection of constraints for a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>에 대한 제약 조건 컬렉션을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.ConstraintCollection">
          <source>The <ph id="ph1">&lt;xref:System.Data.ConstraintCollection&gt;</ph> is accessed through the <ph id="ph2">&lt;xref:System.Data.DataTable.Constraints%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.ConstraintCollection&gt;</ph> 통해 액세스 되는 <ph id="ph2">&lt;xref:System.Data.DataTable.Constraints%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.ConstraintCollection">
          <source>The <ph id="ph1">&lt;xref:System.Data.ConstraintCollection&gt;</ph> can contain both <ph id="ph2">&lt;xref:System.Data.UniqueConstraint&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> objects for the <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.ConstraintCollection&gt;</ph> 둘 다 포함 될 수 있습니다 <ph id="ph2">&lt;xref:System.Data.UniqueConstraint&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> 에 대 한 개체는 <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.ConstraintCollection">
          <source>A <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> object makes sure that data in a specific column is always unique to preserve the data integrity.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> 개체를 사용 하면 특정 열에서 데이터를 데이터 무결성을 유지 하기 위해 고유한 항상 유지 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.ConstraintCollection">
          <source>The <ph id="ph1">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> determines what will occur in related tables when data in the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> is either updated or deleted.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> 관련에서 수행 될 작업을 결정 합니다. 테이블의 데이터는 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> 업데이트 되거나 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.ConstraintCollection">
          <source>For example, if a row is deleted, the <ph id="ph1">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> will determine whether the related rows are also deleted (a cascade), or some other course of action.</source>
          <target state="translated">예를 들어, 행이 삭제 되는 <ph id="ph1">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> 결정 합니다 (cascade) 여부 관련된 행 들도 함께 삭제 또는 다른 작업 과정입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.ConstraintCollection">
          <source>When you add a <ph id="ph1">&lt;xref:System.Data.DataRelation&gt;</ph> that creates a relationship between two tables to a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, both a <ph id="ph3">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> and a <ph id="ph4">&lt;xref:System.Data.UniqueConstraint&gt;</ph> are created automatically.</source>
          <target state="translated">추가 하는 경우는 <ph id="ph1">&lt;xref:System.Data.DataRelation&gt;</ph> 두 테이블 사이의 관계를 만드는 한 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>모두는 <ph id="ph3">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Data.UniqueConstraint&gt;</ph> 자동으로 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.ConstraintCollection">
          <source>The <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> is applied to the primary key column in the parent <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, and the constraint is added to that table's <ph id="ph3">&lt;xref:System.Data.ConstraintCollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> 부모의 기본 키 열에 적용 되 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, 해당 테이블에는 제약 조건이 추가 되 고 <ph id="ph3">&lt;xref:System.Data.ConstraintCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.ConstraintCollection">
          <source>The <ph id="ph1">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> is applied to the primary key column and the foreign key column, and the constraint is added to the child table's <ph id="ph2">&lt;xref:System.Data.ConstraintCollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> 기본 키 열과 외래 키 열에 적용 하 고 제약 조건을 자식 테이블에 추가 됩니다 <ph id="ph2">&lt;xref:System.Data.ConstraintCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.ConstraintCollection">
          <source>The <ph id="ph1">&lt;xref:System.Data.ConstraintCollection&gt;</ph> uses standard collection methods such as <ph id="ph2">&lt;xref:System.Data.ConstraintCollection.Add%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.ConstraintCollection.Clear%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Data.ConstraintCollection.Remove%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.ConstraintCollection&gt;</ph> 와 같은 표준 컬렉션 메서드를 사용 하 여 <ph id="ph2">&lt;xref:System.Data.ConstraintCollection.Add%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.ConstraintCollection.Clear%2A&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Data.ConstraintCollection.Remove%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.ConstraintCollection">
          <source>In addition, the <ph id="ph1">&lt;xref:System.Data.ConstraintCollection.Contains%2A&gt;</ph> method can be used to look for the existence of a particular constraint in the collection.</source>
          <target state="translated">또한는 <ph id="ph1">&lt;xref:System.Data.ConstraintCollection.Contains%2A&gt;</ph> 메서드는 컬렉션에 특정 제약 조건이 있는지 여부를 찾는 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.ConstraintCollection">
          <source>A <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> is created when a <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> with its <ph id="ph3">&lt;xref:System.Data.DataColumn.Unique%2A&gt;</ph> property set to <ph id="ph4">`true`</ph> is added to a <ph id="ph5">&lt;xref:System.Data.DataTable&gt;</ph> object's <ph id="ph6">&lt;xref:System.Data.DataColumnCollection&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> 때 만들어집니다는 <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> 와 해당 <ph id="ph3">&lt;xref:System.Data.DataColumn.Unique%2A&gt;</ph> 속성이로 설정 <ph id="ph4">`true`</ph> 에 추가 되는 <ph id="ph5">&lt;xref:System.Data.DataTable&gt;</ph> 개체의 <ph id="ph6">&lt;xref:System.Data.DataColumnCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.ConstraintCollection">
          <source>A <ph id="ph1">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> is created when a <ph id="ph2">&lt;xref:System.Data.DataRelation&gt;</ph> is added to a <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> object's <ph id="ph4">&lt;xref:System.Data.DataRelationCollection&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> 때 작성 되는 <ph id="ph2">&lt;xref:System.Data.DataRelation&gt;</ph> 에 추가 되는 <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> 개체의 <ph id="ph4">&lt;xref:System.Data.DataRelationCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.ConstraintCollection">
          <source>The first example creates a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, and adds a <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> (with its <ph id="ph3">&lt;xref:System.Data.DataColumn.Unique%2A&gt;</ph> property set to <ph id="ph4">`true`</ph>) to the <ph id="ph5">&lt;xref:System.Data.DataColumnCollection&gt;</ph>.</source>
          <target state="translated">첫 번째 예제에서는 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, 추가 <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> (으로 해당 <ph id="ph3">&lt;xref:System.Data.DataColumn.Unique%2A&gt;</ph> 속성이로 설정 <ph id="ph4">`true`</ph>)에 <ph id="ph5">&lt;xref:System.Data.DataColumnCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.ConstraintCollection">
          <source>The second example creates a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, two <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects, four columns, and a <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph>.</source>
          <target state="translated">두 번째 예에서는 만듭니다는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, 두 개의 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> 개체, 네 개의 열 및 <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.ConstraintCollection">
          <source>The count of constraints is then printed to show that a <ph id="ph1">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> and a <ph id="ph2">&lt;xref:System.Data.UniqueConstraint&gt;</ph> are created when a <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph> is added to the <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> object's <ph id="ph5">&lt;xref:System.Data.DataRelationCollection.%23ctor%2A&gt;</ph>.</source>
          <target state="translated">제약 조건의 수는 다음 출력 하는 <ph id="ph1">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Data.UniqueConstraint&gt;</ph> 될 때 생성 되는 <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph> 에 추가 되는 <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> 개체의 <ph id="ph5">&lt;xref:System.Data.DataRelationCollection.%23ctor%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.ConstraintCollection">
          <source>This type is safe for multithreaded read operations.</source>
          <target state="translated">이 형식은 다중 스레드 읽기 작업에 안전 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.ConstraintCollection">
          <source>You must synchronize any write operations.</source>
          <target state="translated">쓰기 작업을 동기화 해야 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="T:System.Data.ConstraintCollection">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph> object to the collection.</source>
          <target state="translated">컬렉션에 <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph> 개체를 추가합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Add(System.Data.Constraint)">
          <source>The <ph id="ph1">&lt;see langword="Constraint" /&gt;</ph> to add.</source>
          <target state="translated">추가할 <ph id="ph1">&lt;see langword="Constraint" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Add(System.Data.Constraint)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph> object to the collection.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph> 개체를 컬렉션에 추가합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.ConstraintCollection.Add(System.Data.Constraint)">
          <source>If the collection is successfully changed by adding or removing constraints, the <ph id="ph1">&lt;xref:System.Data.ConstraintCollection.CollectionChanged&gt;</ph> event occurs.</source>
          <target state="translated">컬렉션에 추가 하거나 제거할 제약 조건, 성공적으로 변경 되는 <ph id="ph1">&lt;xref:System.Data.ConstraintCollection.CollectionChanged&gt;</ph> 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.ConstraintCollection.Add(System.Data.Constraint)">
          <source>The following example adds a <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> to the <ph id="ph2">&lt;xref:System.Data.ConstraintCollection&gt;</ph> of a <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 추가 <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Data.ConstraintCollection&gt;</ph> 의 <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Add(System.Data.Constraint)">
          <source>The <ph id="ph1">&lt;paramref name="constraint" /&gt;</ph> argument is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="constraint" /&gt;</ph> 인수가 null입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Add(System.Data.Constraint)">
          <source>The constraint already belongs to this collection, or belongs to another collection.</source>
          <target state="translated">제약 조건이 이미 이 컬렉션에 속해 있거나 다른 컬렉션에 속해 있는 경우</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Add(System.Data.Constraint)">
          <source>The collection already has a constraint with the same name.</source>
          <target state="translated">컬렉션에 이미 같은 이름의 제약 조건이 있는 경우</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Add(System.Data.Constraint)">
          <source>(The comparison is not case-sensitive.)</source>
          <target state="translated">(대/소문자를 구분하지 않고 비교합니다.)</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)">
          <source>The name of the <ph id="ph1">&lt;see langword="UniqueConstraint" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="UniqueConstraint" /&gt;</ph>의 이름입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> to which the constraint applies.</source>
          <target state="translated">제약 조건이 적용되는 <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)">
          <source>Specifies whether the column should be the primary key.</source>
          <target state="translated">열이 기본 키인지 여부를 지정합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the column will be a primary key column.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>이면 기본 키 열이 됩니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)">
          <source>Constructs a new <ph id="ph1">&lt;see cref="T:System.Data.UniqueConstraint" /&gt;</ph> with the specified name, <ph id="ph2">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph>, and value that indicates whether the column is a primary key, and adds it to the collection.</source>
          <target state="translated">지정된 이름, <ph id="ph1">&lt;see cref="T:System.Data.UniqueConstraint" /&gt;</ph> 및 해당 열이 기본 키인지 여부를 나타내는 값이 있는 새 <ph id="ph2">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph>를 생성하여 컬렉션에 추가합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)">
          <source>A new <ph id="ph1">&lt;see langword="UniqueConstraint" /&gt;</ph>.</source>
          <target state="translated">새 <ph id="ph1">&lt;see langword="UniqueConstraint" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.ConstraintCollection.CollectionChanged&gt;</ph> event occurs if the constraint is added successfully.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.ConstraintCollection.CollectionChanged&gt;</ph> 이벤트 제약 조건을 성공적으로 추가 되는 경우에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.ConstraintCollection.Add%2A&gt;</ph> method to create and add a new <ph id="ph2">&lt;xref:System.Data.UniqueConstraint&gt;</ph> to a <ph id="ph3">&lt;xref:System.Data.ConstraintCollection&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Data.ConstraintCollection.Add%2A&gt;</ph> 메서드를 만들고 새 추가 <ph id="ph2">&lt;xref:System.Data.UniqueConstraint&gt;</ph> 에 <ph id="ph3">&lt;xref:System.Data.ConstraintCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)">
          <source>The constraint already belongs to this collection.</source>
          <target state="translated">제약 조건이 이미 이 컬렉션에 속해 있는 경우</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)">
          <source>-Or-</source>
          <target state="translated">-또는-</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)">
          <source>The constraint belongs to another collection.</source>
          <target state="translated">제약 조건이 다른 컬렉션에 속한 경우</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)">
          <source>The collection already has a constraint with the specified name.</source>
          <target state="translated">컬렉션에 지정된 이름의 제약 조건이 이미 있는 경우.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)">
          <source>(The comparison is not case-sensitive.)</source>
          <target state="translated">(대/소문자를 구분하지 않고 비교합니다.)</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
          <source>The name of the <ph id="ph1">&lt;see cref="T:System.Data.ForeignKeyConstraint" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.ForeignKeyConstraint" /&gt;</ph>의 이름입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
          <source>The primary key, or parent, <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph>.</source>
          <target state="translated">기본 키 또는 부모 <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
          <source>The foreign key, or child, <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph>.</source>
          <target state="translated">외래 키 또는 자식 <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
          <source>Constructs a new <ph id="ph1">&lt;see cref="T:System.Data.ForeignKeyConstraint" /&gt;</ph> with the specified name, parent column, and child column, and adds the constraint to the collection.</source>
          <target state="translated">지정된 이름, 부모 열 및 자식 열을 사용하여 새 <ph id="ph1">&lt;see cref="T:System.Data.ForeignKeyConstraint" /&gt;</ph>를 만들어 컬렉션에 추가합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
          <source>A new <ph id="ph1">&lt;see langword="ForeignKeyConstraint" /&gt;</ph>.</source>
          <target state="translated">새 <ph id="ph1">&lt;see langword="ForeignKeyConstraint" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
          <source>The <ph id="ph1">&lt;xref:System.Data.ConstraintCollection.CollectionChanged&gt;</ph> event occurs if the constraint is added successfully.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.ConstraintCollection.CollectionChanged&gt;</ph> 이벤트 제약 조건을 성공적으로 추가 되는 경우에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
          <source>The following example adds a new <ph id="ph1">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> to the <ph id="ph2">&lt;xref:System.Data.ConstraintCollection&gt;</ph> of a <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 새 <ph id="ph1">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Data.ConstraintCollection&gt;</ph> 의 <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)">
          <source>The name of the <ph id="ph1">&lt;see cref="T:System.Data.UniqueConstraint" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.UniqueConstraint" /&gt;</ph>의 이름입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> objects to which the constraint applies.</source>
          <target state="translated">제약 조건이 적용되는 <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)">
          <source>Specifies whether the column should be the primary key.</source>
          <target state="translated">열이 기본 키인지 여부를 지정합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the column will be a primary key column.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>이면 기본 키 열이 됩니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)">
          <source>Constructs a new <ph id="ph1">&lt;see cref="T:System.Data.UniqueConstraint" /&gt;</ph> with the specified name, array of <ph id="ph2">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> objects, and value that indicates whether the column is a primary key, and adds it to the collection.</source>
          <target state="translated">지정된 이름, <ph id="ph1">&lt;see cref="T:System.Data.UniqueConstraint" /&gt;</ph> 개체의 배열 및 열이 기본 키인지 여부를 나타내는 값이 있는 새 <ph id="ph2">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph>를 생성하여 컬렉션에 추가합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)">
          <source>A new <ph id="ph1">&lt;see langword="UniqueConstraint" /&gt;</ph>.</source>
          <target state="translated">새 <ph id="ph1">&lt;see langword="UniqueConstraint" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.ConstraintCollection.CollectionChanged&gt;</ph> event occurs if the constraint is added successfully.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.ConstraintCollection.CollectionChanged&gt;</ph> 이벤트 제약 조건을 성공적으로 추가 되는 경우에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)">
          <source>The following example creates an array of <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> objects that are used to create a new <ph id="ph2">&lt;xref:System.Data.UniqueConstraint&gt;</ph> in a specific <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 배열을 <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> 새 만드는 데 사용 되는 개체 <ph id="ph2">&lt;xref:System.Data.UniqueConstraint&gt;</ph> 특정에서 <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)">
          <source>The constraint already belongs to this collection.</source>
          <target state="translated">제약 조건이 이미 이 컬렉션에 속해 있는 경우</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)">
          <source>-Or-</source>
          <target state="translated">-또는-</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)">
          <source>The constraint belongs to another collection.</source>
          <target state="translated">제약 조건이 다른 컬렉션에 속한 경우</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)">
          <source>The collection already has a constraint with the specified name.</source>
          <target state="translated">컬렉션에 지정된 이름의 제약 조건이 이미 있는 경우.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)">
          <source>(The comparison is not case-sensitive.)</source>
          <target state="translated">(대/소문자를 구분하지 않고 비교합니다.)</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
          <source>The name of the <ph id="ph1">&lt;see cref="T:System.Data.ForeignKeyConstraint" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.ForeignKeyConstraint" /&gt;</ph>의 이름입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> objects that are the primary key, or parent, columns.</source>
          <target state="translated">기본 키 열 또는 부모 열인 <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> objects that are the foreign key, or child, columns.</source>
          <target state="translated">외래 키 열 또는 자식 열인 <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
          <source>Constructs a new <ph id="ph1">&lt;see cref="T:System.Data.ForeignKeyConstraint" /&gt;</ph>, with the specified arrays of parent columns and child columns, and adds the constraint to the collection.</source>
          <target state="translated">부모 열과 자식 열의 지정된 배열을 사용하여 새 <ph id="ph1">&lt;see cref="T:System.Data.ForeignKeyConstraint" /&gt;</ph>를 만들어 컬렉션에 추가합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
          <source>A new <ph id="ph1">&lt;see langword="ForeignKeyConstraint" /&gt;</ph>.</source>
          <target state="translated">새 <ph id="ph1">&lt;see langword="ForeignKeyConstraint" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
          <source>The <ph id="ph1">&lt;xref:System.Data.ConstraintCollection.CollectionChanged&gt;</ph> event occurs if the constraint is added successfully.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.ConstraintCollection.CollectionChanged&gt;</ph> 이벤트 제약 조건을 성공적으로 추가 되는 경우에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
          <source>The following example creates two arrays of <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> objects, and then creates two <ph id="ph2">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> relationships between two tables in a dataset.</source>
          <target state="translated">다음 예제에서는 두 배열을 <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> 개체, 및에서는 두 개의 <ph id="ph2">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> 데이터 집합에서 두 테이블 간의 관계입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.ConstraintCollection" /&gt;</ph> objects to add to the collection.</source>
          <target state="translated">컬렉션에 추가할 <ph id="ph1">&lt;see cref="T:System.Data.ConstraintCollection" /&gt;</ph> 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])">
          <source>Copies the elements of the specified <ph id="ph1">&lt;see cref="T:System.Data.ConstraintCollection" /&gt;</ph> array to the end of the collection.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Data.ConstraintCollection" /&gt;</ph> 배열의 요소를 컬렉션의 끝에 복사합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])">
          <source>If <ph id="ph1">&lt;xref:System.Data.DataTable.BeginInit%2A&gt;</ph> has been called, <ph id="ph2">`AddRange`</ph> does not add any objects to the collection until <ph id="ph3">&lt;xref:System.Data.DataTable.EndInit%2A&gt;</ph> is called.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Data.DataTable.BeginInit%2A&gt;</ph> 가 호출 된 <ph id="ph2">`AddRange`</ph> 될 때까지 컬렉션에 개체를 추가 하지 않는 <ph id="ph3">&lt;xref:System.Data.DataTable.EndInit%2A&gt;</ph> 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])">
          <source>At the time that <ph id="ph1">`EndInit`</ph> is called, the collection will be populated with the items specified in the most recent call to <ph id="ph2">`AddRange`</ph>.</source>
          <target state="translated">시간에는 <ph id="ph1">`EndInit`</ph> 은 호출 컬렉션 채워집니다 가장 최근 호출에 지정 된 항목이 <ph id="ph2">`AddRange`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])">
          <source>If <ph id="ph1">`AddRange`</ph> is called multiple times within a <ph id="ph2">`BeginInit`</ph><ph id="ph3"> / </ph><ph id="ph4">`EndInit`</ph> sequence, only those items specified in the most recent call to <ph id="ph5">`AddRange`</ph> are added.</source>
          <target state="translated">경우 <ph id="ph1">`AddRange`</ph> 내에서 여러 번 호출 되는 <ph id="ph2">`BeginInit`</ph> <ph id="ph3"> / </ph> <ph id="ph4">`EndInit`</ph> 시퀀스에 대 한 가장 최근 호출에 지정 된 항목만 <ph id="ph5">`AddRange`</ph> 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])">
          <source>The following example creates primary and foreign key constraints, and adds them to the <ph id="ph1">&lt;xref:System.Data.ConstraintCollection&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 기본 및 외래 키 제약 조건을 만들고에 추가 된 <ph id="ph1">&lt;xref:System.Data.ConstraintCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph> to be tested for removal from the collection.</source>
          <target state="translated">컬렉션에서 제거할 수 있는지 테스트할 <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)">
          <source>Indicates whether a <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph> can be removed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph>를 제거할 수 있는지 나타냅니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Data.Constraint" /&gt;</ph> can be removed from collection; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Data.Constraint" /&gt;</ph>를 컬렉션에서 제거할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)">
          <source>The default behavior whenever a <ph id="ph1">&lt;xref:System.Data.DataRelation&gt;</ph> is added to a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, is to add a <ph id="ph3">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> to the parent table and a <ph id="ph4">&lt;xref:System.Data.UniqueConstraint&gt;</ph> to the child table.</source>
          <target state="translated">기본 동작 때마다는 <ph id="ph1">&lt;xref:System.Data.DataRelation&gt;</ph> 에 추가 되는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, 추가 하는 것는 <ph id="ph3">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> 부모 테이블에 및 <ph id="ph4">&lt;xref:System.Data.UniqueConstraint&gt;</ph> 자식 테이블에 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)">
          <source>The <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> is applied to the primary key column of the parent table, and the <ph id="ph2">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> is applied to the foreign key column of the child table.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> 부모 테이블의 기본 키 열에 적용 되 고 <ph id="ph2">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> 자식 테이블의 외래 키 열에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)">
          <source>Because trying to remove the <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> before removing the <ph id="ph2">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> causes an exception to be thrown, you should always use the <ph id="ph3">&lt;xref:System.Data.ConstraintCollection.CanRemove%2A&gt;</ph> method before calling Remove, to make sure that the <ph id="ph4">&lt;xref:System.Data.UniqueConstraint&gt;</ph> can be removed.</source>
          <target state="translated">제거 하 려 하기 때문에 <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> 제거 하기 전에 <ph id="ph2">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> 하면 예외가 throw 되 게를 항상 사용 해야는 <ph id="ph3">&lt;xref:System.Data.ConstraintCollection.CanRemove%2A&gt;</ph> 있는지 확인 하기에 Remove를 호출 하기 전에 메서드는 <ph id="ph4">&lt;xref:System.Data.UniqueConstraint&gt;</ph> 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.ConstraintCollection.CanRemove%2A&gt;</ph> method to determine whether a <ph id="ph2">&lt;xref:System.Data.Constraint&gt;</ph> can be removed, before trying to remove it.</source>
          <target state="translated">사용 하 여 다음 예제는 <ph id="ph1">&lt;xref:System.Data.ConstraintCollection.CanRemove%2A&gt;</ph> 확인할 수 있는 방법은 여부는 <ph id="ph2">&lt;xref:System.Data.Constraint&gt;</ph> 를 제거 하기 전에 제거 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Clear">
          <source>Clears the collection of any <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph> 개체의 컬렉션을 지웁니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.ConstraintCollection.Clear">
          <source>The <ph id="ph1">&lt;xref:System.Data.ConstraintCollection.CollectionChanged&gt;</ph> event occurs if this action is successful.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.ConstraintCollection.CollectionChanged&gt;</ph> 이벤트는이 작업은 성공 하는 경우 발생 합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.ConstraintCollection.Clear">
          <source>The following example clears all constraints from the <ph id="ph1">&lt;xref:System.Data.ConstraintCollection&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 지웁니다에서 제약 조건을 모두는 <ph id="ph1">&lt;xref:System.Data.ConstraintCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="E:System.Data.ConstraintCollection.CollectionChanged">
          <source>Occurs whenever the <ph id="ph1">&lt;see cref="T:System.Data.ConstraintCollection" /&gt;</ph> is changed because of <ph id="ph2">&lt;see cref="T:System.Data.Constraint" /&gt;</ph> objects being added or removed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.ConstraintCollection" /&gt;</ph> 개체가 추가되거나 제거되어 <ph id="ph2">&lt;see cref="T:System.Data.Constraint" /&gt;</ph>이 변경될 때마다 발생합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.ConstraintCollection.CollectionChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.ConstraintCollection.CollectionChanged">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Data.ConstraintCollection.CollectionChanged&gt;</ph> event.</source>
          <target state="translated">다음 예제에서는 사용 하 여 <ph id="ph1">&lt;xref:System.Data.ConstraintCollection.CollectionChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Contains(System.String)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Data.Constraint.ConstraintName" /&gt;</ph> of the constraint.</source>
          <target state="translated">제약 조건의 <ph id="ph1">&lt;see cref="P:System.Data.Constraint.ConstraintName" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Contains(System.String)">
          <source>Indicates whether the <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph> object specified by name exists in the collection.</source>
          <target state="translated">이름으로 지정된 <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph>개체가 컬렉션에 있는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Contains(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the collection contains the specified constraint; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">컬렉션에 지정한 제약 조건이 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.ConstraintCollection.Contains(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.ConstraintCollection.Contains%2A&gt;</ph> method to determine whether the specified <ph id="ph2">&lt;xref:System.Data.Constraint&gt;</ph> exists before trying to remove it from the collection.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Data.ConstraintCollection.Contains%2A&gt;</ph> 확인할 수 있는지 여부를 지정 된 <ph id="ph2">&lt;xref:System.Data.Constraint&gt;</ph> 컬렉션에서 제거 하기 전에 존재 합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.ConstraintCollection.Contains(System.String)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Data.ConstraintCollection.CanRemove%2A&gt;</ph> method to determine whether a <ph id="ph2">&lt;xref:System.Data.Constraint&gt;</ph> can be removed.</source>
          <target state="translated">사용할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Data.ConstraintCollection.CanRemove%2A&gt;</ph> 확인할 수 있는지 여부를 <ph id="ph2">&lt;xref:System.Data.Constraint&gt;</ph> 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.ConstraintCollection.Contains(System.String)">
          <source>The following example determines whether the specified <ph id="ph1">&lt;xref:System.Data.Constraint&gt;</ph> exists in the <ph id="ph2">&lt;xref:System.Data.ConstraintCollection&gt;</ph> before its deletion.</source>
          <target state="translated">다음 예제에서는 확인 여부를 지정 된 <ph id="ph1">&lt;xref:System.Data.Constraint&gt;</ph> 에 존재는 <ph id="ph2">&lt;xref:System.Data.ConstraintCollection&gt;</ph> 해당 삭제 하기 전에.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.CopyTo(System.Data.Constraint[],System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the values copied from the collection.</source>
          <target state="translated">컬렉션에서 복사된 값의 대상인 1차원 <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.CopyTo(System.Data.Constraint[],System.Int32)">
          <source>The index of the array at which to start inserting.</source>
          <target state="translated">삽입을 시작할 배열의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.CopyTo(System.Data.Constraint[],System.Int32)">
          <source>Copies the collection objects to a one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> instance starting at the specified index.</source>
          <target state="translated">지정한 인덱스에서 시작하는 1차원 <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> 인스턴스에 컬렉션 개체를 복사합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="T:System.Data.ConstraintCollection">
          <source>Gets the index of the specified <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph>의 인덱스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph> to search for.</source>
          <target state="translated">검색할 <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)">
          <source>Gets the index of the specified <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph>의 인덱스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)">
          <source>The zero-based index of the <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph> if it is in the collection; otherwise, -1.</source>
          <target state="translated">항목이 컬렉션에 있으면 <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph>의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.ConstraintCollection.IndexOf%2A&gt;</ph> method to return an index to be used with either the <ph id="ph2">&lt;xref:System.Data.ConstraintCollection.Contains%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Data.ConstraintCollection.Remove%2A&gt;</ph> method.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Data.ConstraintCollection.IndexOf%2A&gt;</ph> 중 하나에서 사용 되는 인덱스를 반환 하는 메서드는 <ph id="ph2">&lt;xref:System.Data.ConstraintCollection.Contains%2A&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Data.ConstraintCollection.Remove%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.ConstraintCollection.IndexOf%2A&gt;</ph> method to return the index of a <ph id="ph2">&lt;xref:System.Data.Constraint&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Data.ConstraintCollection.IndexOf%2A&gt;</ph> 의 인덱스를 반환 하는 메서드는 <ph id="ph2">&lt;xref:System.Data.Constraint&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)">
          <source>The index is passed to the <ph id="ph1">&lt;xref:System.Data.ConstraintCollection.Contains%2A&gt;</ph> method, before it is removed, to determine whether the collection contains the constraint.</source>
          <target state="translated">인덱스에 전달 되는 <ph id="ph1">&lt;xref:System.Data.ConstraintCollection.Contains%2A&gt;</ph> 메서드를 제거 하기 전에, 컬렉션에 제약 조건을 확인 하려면.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.IndexOf(System.String)">
          <source>The name of the <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph>의 이름입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.IndexOf(System.String)">
          <source>Gets the index of the <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph> specified by name.</source>
          <target state="translated">이름으로 지정된 <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph>의 인덱스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.IndexOf(System.String)">
          <source>The index of the <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph> if it is in the collection; otherwise, -1.</source>
          <target state="translated">인덱스가 컬렉션에 있으면 <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph>의 인덱스이고, 그렇지 않으면 -1입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.ConstraintCollection.IndexOf(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.ConstraintCollection.IndexOf%2A&gt;</ph> method to return an index to be used with either the <ph id="ph2">&lt;xref:System.Data.ConstraintCollection.Contains%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Data.ConstraintCollection.Remove%2A&gt;</ph> method.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Data.ConstraintCollection.IndexOf%2A&gt;</ph> 중 하나에서 사용 되는 인덱스를 반환 하는 메서드는 <ph id="ph2">&lt;xref:System.Data.ConstraintCollection.Contains%2A&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Data.ConstraintCollection.Remove%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.ConstraintCollection.IndexOf(System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.ConstraintCollection.IndexOf%2A&gt;</ph> method to return the index of a <ph id="ph2">&lt;xref:System.Data.Constraint&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Data.ConstraintCollection.IndexOf%2A&gt;</ph> 의 인덱스를 반환 하는 메서드는 <ph id="ph2">&lt;xref:System.Data.Constraint&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.ConstraintCollection.IndexOf(System.String)">
          <source>The index is passed to the <ph id="ph1">&lt;xref:System.Data.ConstraintCollection.Contains%2A&gt;</ph> method to determine whether the collection contains the constraint, before removing it.</source>
          <target state="translated">인덱스에 전달 되는 <ph id="ph1">&lt;xref:System.Data.ConstraintCollection.Contains%2A&gt;</ph> 메서드를 제거 하기 전에 컬렉션에 제약 조건이 포함 되어 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="T:System.Data.ConstraintCollection">
          <source>Gets the specified <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph> from the collection.</source>
          <target state="translated">컬렉션에서 지정된 <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph>을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="P:System.Data.ConstraintCollection.Item(System.Int32)">
          <source>The index of the constraint to return.</source>
          <target state="translated">반환할 제약 조건의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="P:System.Data.ConstraintCollection.Item(System.Int32)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph> from the collection at the specified index.</source>
          <target state="translated">컬렉션에서 지정된 인덱스의 <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph>을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.ConstraintCollection.Item(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph> at the specified index.</source>
          <target state="translated">지정된 인덱스의 <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.ConstraintCollection.Item(System.Int32)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.ConstraintCollection.Contains%2A&gt;</ph> method to test for the existence of a specific constraint.</source>
          <target state="translated">사용 된 <ph id="ph1">&lt;xref:System.Data.ConstraintCollection.Contains%2A&gt;</ph> 메서드는 특정 제약 조건의 존재 여부를 테스트 합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.ConstraintCollection.Item(System.Int32)">
          <source>The following example gets each <ph id="ph1">&lt;xref:System.Data.Constraint&gt;</ph> from the <ph id="ph2">&lt;xref:System.Data.ConstraintCollection&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 각 <ph id="ph1">&lt;xref:System.Data.Constraint&gt;</ph> 에서 <ph id="ph2">&lt;xref:System.Data.ConstraintCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="P:System.Data.ConstraintCollection.Item(System.Int32)">
          <source>The index value is greater than the number of items in the collection.</source>
          <target state="translated">인덱스 값이 컬렉션의 항목 수보다 큰 경우</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="P:System.Data.ConstraintCollection.Item(System.String)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Data.Constraint.ConstraintName" /&gt;</ph> of the constraint to return.</source>
          <target state="translated">반환할 제약 조건의 <ph id="ph1">&lt;see cref="P:System.Data.Constraint.ConstraintName" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="P:System.Data.ConstraintCollection.Item(System.String)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph> from the collection with the specified name.</source>
          <target state="translated">컬렉션에서 지정된 이름을 가진 <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph>을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.ConstraintCollection.Item(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph> with the specified name; otherwise a null value if the <ph id="ph2">&lt;see cref="T:System.Data.Constraint" /&gt;</ph> does not exist.</source>
          <target state="translated">지정된 이름을 가진 <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph>이고, <ph id="ph2">&lt;see cref="T:System.Data.Constraint" /&gt;</ph>가 없는 경우 null 값입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.ConstraintCollection.Item(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.ConstraintCollection.Contains%2A&gt;</ph> method to test for the existence of a specific constraint.</source>
          <target state="translated">사용 된 <ph id="ph1">&lt;xref:System.Data.ConstraintCollection.Contains%2A&gt;</ph> 메서드는 특정 제약 조건의 존재 여부를 테스트 합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.ConstraintCollection.Item(System.String)">
          <source>The following example gets the named <ph id="ph1">&lt;xref:System.Data.Constraint&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 명명 된 가져옵니다 <ph id="ph1">&lt;xref:System.Data.Constraint&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="T:System.Data.ConstraintCollection">
          <source>Removes a <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph> from the <ph id="ph2">&lt;see cref="T:System.Data.ConstraintCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph>에서 <ph id="ph2">&lt;see cref="T:System.Data.ConstraintCollection" /&gt;</ph> 개체를 제거합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph> to remove.</source>
          <target state="translated">제거할 <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)">
          <source>Removes the specified <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph> from the collection.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph>를 컬렉션에서 제거합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)">
          <source>Before using the <ph id="ph1">`Remove`</ph> method, you can use the <ph id="ph2">&lt;xref:System.Data.ConstraintCollection.Contains%2A&gt;</ph> method to determine whether the collection contains the target <ph id="ph3">&lt;xref:System.Data.Constraint&gt;</ph>, and the <ph id="ph4">&lt;xref:System.Data.ConstraintCollection.CanRemove%2A&gt;</ph> method to determine whether a <ph id="ph5">&lt;xref:System.Data.Constraint&gt;</ph> can be removed.</source>
          <target state="translated">사용 하기 전에 <ph id="ph1">`Remove`</ph> 사용 수를 <ph id="ph2">&lt;xref:System.Data.ConstraintCollection.Contains%2A&gt;</ph> 대상 컬렉션에 포함 되어 있는지 여부를 확인 하 <ph id="ph3">&lt;xref:System.Data.Constraint&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Data.ConstraintCollection.CanRemove%2A&gt;</ph> 확인 하 여부는 <ph id="ph5">&lt;xref:System.Data.Constraint&gt;</ph> 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)">
          <source>The <ph id="ph1">&lt;xref:System.Data.ConstraintCollection.CollectionChanged&gt;</ph> event occurs if the constraint is successfully removed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.ConstraintCollection.CollectionChanged&gt;</ph> 이벤트 제약 조건이 성공적으로 제거 하는 경우에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)">
          <source>The <ph id="ph1">&lt;paramref name="constraint" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="constraint" /&gt;</ph> 인수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)">
          <source>The constraint does not belong to the collection.</source>
          <target state="translated">제약 조건이 컬렉션에 속하지 않는 경우</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Remove(System.String)">
          <source>The name of the <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph> to remove.</source>
          <target state="translated">제거할 <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph>의 이름입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.Remove(System.String)">
          <source>Removes the <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph> object specified by name from the collection.</source>
          <target state="translated">컬렉션에서 이름으로 지정된 <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph> 개체를 제거합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.ConstraintCollection.Remove(System.String)">
          <source>Before using the <ph id="ph1">`Remove`</ph> method, you can use the <ph id="ph2">&lt;xref:System.Data.ConstraintCollection.Contains%2A&gt;</ph> method to determine whether the collection contains the target <ph id="ph3">&lt;xref:System.Data.Constraint&gt;</ph>, and the <ph id="ph4">&lt;xref:System.Data.ConstraintCollection.CanRemove%2A&gt;</ph> method to determine whether a <ph id="ph5">&lt;xref:System.Data.Constraint&gt;</ph> can be removed.</source>
          <target state="translated">사용 하기 전에 <ph id="ph1">`Remove`</ph> 사용 수를 <ph id="ph2">&lt;xref:System.Data.ConstraintCollection.Contains%2A&gt;</ph> 대상 컬렉션에 포함 되어 있는지 여부를 확인 하 <ph id="ph3">&lt;xref:System.Data.Constraint&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Data.ConstraintCollection.CanRemove%2A&gt;</ph> 확인 하 여부는 <ph id="ph5">&lt;xref:System.Data.Constraint&gt;</ph> 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.ConstraintCollection.Remove(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.ConstraintCollection.CollectionChanged&gt;</ph> event occurs if the constraint is successfully removed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.ConstraintCollection.CollectionChanged&gt;</ph> 이벤트 제약 조건이 성공적으로 제거 하는 경우에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.ConstraintCollection.Remove(System.String)">
          <source>The following example removes a <ph id="ph1">&lt;xref:System.Data.Constraint&gt;</ph> from a <ph id="ph2">&lt;xref:System.Data.ConstraintCollection&gt;</ph> after testing for its presence with the <ph id="ph3">&lt;xref:System.Data.ConstraintCollection.Contains%2A&gt;</ph> method, and whether it can be removed with the <ph id="ph4">&lt;xref:System.Data.ConstraintCollection.CanRemove%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 제거는 <ph id="ph1">&lt;xref:System.Data.Constraint&gt;</ph> 에서 <ph id="ph2">&lt;xref:System.Data.ConstraintCollection&gt;</ph> 와 존재에 대 한 테스트 한 후에 <ph id="ph3">&lt;xref:System.Data.ConstraintCollection.Contains%2A&gt;</ph> 메서드를으로 제거할 수 있는지 여부는 <ph id="ph4">&lt;xref:System.Data.ConstraintCollection.CanRemove%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.RemoveAt(System.Int32)">
          <source>The index of the <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph> to remove.</source>
          <target state="translated">제거할 <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph>의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.RemoveAt(System.Int32)">
          <source>Removes the <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph> object at the specified index from the collection.</source>
          <target state="translated">컬렉션에서 지정된 인덱스의 <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph> 개체를 제거합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.ConstraintCollection.RemoveAt(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Data.ConstraintCollection.IndexOf%2A&gt;</ph> method returns the index of a specific <ph id="ph2">&lt;xref:System.Data.Constraint&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.ConstraintCollection.IndexOf%2A&gt;</ph> 메서드는 특정 인덱스를 반환 <ph id="ph2">&lt;xref:System.Data.Constraint&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.ConstraintCollection.RemoveAt(System.Int32)">
          <source>Before using the <ph id="ph1">`RemoveAt`</ph> method, you can use the <ph id="ph2">&lt;xref:System.Data.ConstraintCollection.Contains%2A&gt;</ph> method to determine whether the collection contains the target <ph id="ph3">&lt;xref:System.Data.Constraint&gt;</ph>, and the <ph id="ph4">&lt;xref:System.Data.ConstraintCollection.CanRemove%2A&gt;</ph> method to determine whether a <ph id="ph5">&lt;xref:System.Data.Constraint&gt;</ph> can be removed.</source>
          <target state="translated">사용 하기 전에 <ph id="ph1">`RemoveAt`</ph> 사용 수를 <ph id="ph2">&lt;xref:System.Data.ConstraintCollection.Contains%2A&gt;</ph> 대상 컬렉션에 포함 되어 있는지 여부를 확인 하 <ph id="ph3">&lt;xref:System.Data.Constraint&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Data.ConstraintCollection.CanRemove%2A&gt;</ph> 확인 하 여부는 <ph id="ph5">&lt;xref:System.Data.Constraint&gt;</ph> 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.ConstraintCollection.RemoveAt(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Data.ConstraintCollection.CollectionChanged&gt;</ph> event occurs if the constraint is successfully removed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.ConstraintCollection.CollectionChanged&gt;</ph> 이벤트 제약 조건이 성공적으로 제거 하는 경우에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.ConstraintCollection.RemoveAt(System.Int32)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.ConstraintCollection.IndexOf%2A&gt;</ph> method together with the <ph id="ph2">&lt;xref:System.Data.ConstraintCollection.RemoveAt%2A&gt;</ph> method to remove a constraint from the <ph id="ph3">&lt;xref:System.Data.ConstraintCollection&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Data.ConstraintCollection.IndexOf%2A&gt;</ph> 와 함께 메서드는 <ph id="ph2">&lt;xref:System.Data.ConstraintCollection.RemoveAt%2A&gt;</ph> 에서 제약 조건을 제거 하는 메서드는 <ph id="ph3">&lt;xref:System.Data.ConstraintCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Data.ConstraintCollection.RemoveAt(System.Int32)">
          <source>The collection does not have a constraint at this index.</source>
          <target state="translated">컬렉션에 이 인덱스의 제약 조건이 없는 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>