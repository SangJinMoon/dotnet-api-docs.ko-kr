<Type Name="ConstraintCollection" FullName="System.Data.ConstraintCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="32afeb70327b5ac7218829de95ce74f7d33d9370" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30399537" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ConstraintCollection : System.Data.InternalDataCollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ConstraintCollection extends System.Data.InternalDataCollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Data.ConstraintCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ConstraintCollection&#xA;Inherits InternalDataCollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConstraintCollection sealed : System::Data::InternalDataCollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.InternalDataCollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("CollectionChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.ConstraintsCollectionEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:System.Data.DataTable" />에 대한 제약 조건 컬렉션을 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.ConstraintCollection> 통해 액세스 되는 <xref:System.Data.DataTable.Constraints%2A?displayProperty=nameWithType> 속성입니다.  
  
 <xref:System.Data.ConstraintCollection> 둘 다 포함 될 수 있습니다 <xref:System.Data.UniqueConstraint> 및 <xref:System.Data.ForeignKeyConstraint> 에 대 한 개체는 <xref:System.Data.DataTable>합니다. A <xref:System.Data.UniqueConstraint> 개체를 사용 하면 특정 열에서 데이터를 데이터 무결성을 유지 하기 위해 고유한 항상 유지 합니다. <xref:System.Data.ForeignKeyConstraint> 관련에서 수행 될 작업을 결정 합니다. 테이블의 데이터는 <xref:System.Data.DataTable> 업데이트 되거나 삭제 합니다. 예를 들어, 행이 삭제 되는 <xref:System.Data.ForeignKeyConstraint> 결정 합니다 (cascade) 여부 관련된 행 들도 함께 삭제 또는 다른 작업 과정입니다.  
  
> [!NOTE]
>  추가 하는 경우는 <xref:System.Data.DataRelation> 두 테이블 사이의 관계를 만드는 한 <xref:System.Data.DataSet>모두는 <xref:System.Data.ForeignKeyConstraint> 및 <xref:System.Data.UniqueConstraint> 자동으로 생성 됩니다. <xref:System.Data.UniqueConstraint> 부모의 기본 키 열에 적용 되 <xref:System.Data.DataTable>, 해당 테이블에는 제약 조건이 추가 되 고 <xref:System.Data.ConstraintCollection>합니다. <xref:System.Data.ForeignKeyConstraint> 기본 키 열과 외래 키 열에 적용 하 고 제약 조건을 자식 테이블에 추가 됩니다 <xref:System.Data.ConstraintCollection>합니다.  
  
 <xref:System.Data.ConstraintCollection> 와 같은 표준 컬렉션 메서드를 사용 하 여 <xref:System.Data.ConstraintCollection.Add%2A>, <xref:System.Data.ConstraintCollection.Clear%2A>, 및 <xref:System.Data.ConstraintCollection.Remove%2A>합니다. 또한는 <xref:System.Data.ConstraintCollection.Contains%2A> 메서드는 컬렉션에 특정 제약 조건이 있는지 여부를 찾는 데 사용할 수 있습니다.  
  
 A <xref:System.Data.UniqueConstraint> 때 만들어집니다는 <xref:System.Data.DataColumn> 와 해당 <xref:System.Data.DataColumn.Unique%2A> 속성이로 설정 `true` 에 추가 되는 <xref:System.Data.DataTable> 개체의 <xref:System.Data.DataColumnCollection>합니다.  
  
 A <xref:System.Data.ForeignKeyConstraint> 때 작성 되는 <xref:System.Data.DataRelation> 에 추가 되는 <xref:System.Data.DataSet> 개체의 <xref:System.Data.DataRelationCollection>합니다.  
  
   
  
## Examples  
 첫 번째 예제에서는 <xref:System.Data.DataTable>, 추가 <xref:System.Data.DataColumn> (으로 해당 <xref:System.Data.DataColumn.Unique%2A> 속성이로 설정 `true`)에 <xref:System.Data.DataColumnCollection>합니다. 두 번째 예에서는 만듭니다는 <xref:System.Data.DataSet>, 두 개의 <xref:System.Data.DataTable> 개체, 네 개의 열 및 <xref:System.Data.DataRelation>합니다. 제약 조건의 수는 다음 출력 하는 <xref:System.Data.ForeignKeyConstraint> 및 <xref:System.Data.UniqueConstraint> 될 때 생성 되는 <xref:System.Data.DataRelation> 에 추가 되는 <xref:System.Data.DataSet> 개체의 <xref:System.Data.DataRelationCollection.%23ctor%2A>합니다.  
  
 [!code-csharp[Classic WebData ConstraintCollection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>이 형식은 다중 스레드 읽기 작업에 안전 합니다. 쓰기 작업을 동기화 해야 합니다.</threadsafe>
    <altmember cref="T:System.Data.ForeignKeyConstraint" />
    <altmember cref="T:System.Data.UniqueConstraint" />
    <altmember cref="T:System.Data.DataRelation" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>컬렉션에 <see cref="T:System.Data.Constraint" /> 개체를 추가합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Data.Constraint constraint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Data.Constraint constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.Add(System.Data.Constraint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Data::Constraint ^ constraint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Data.Constraint" />
      </Parameters>
      <Docs>
        <param name="constraint">추가할 <see langword="Constraint" />입니다.</param>
        <summary>지정된 <see cref="T:System.Data.Constraint" /> 개체를 컬렉션에 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 컬렉션에 추가 하거나 제거할 제약 조건, 성공적으로 변경 되는 <xref:System.Data.ConstraintCollection.CollectionChanged> 이벤트가 발생 합니다.  
  
   
  
## Examples  
 다음 예제에서는 추가 <xref:System.Data.UniqueConstraint> 에 <xref:System.Data.ConstraintCollection> 의 <xref:System.Data.DataTable>합니다.  
  
 [!code-csharp[Classic WebData ConstraintCollection.Add Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Add Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="constraint" /> 인수가 null입니다.</exception>
        <exception cref="T:System.ArgumentException">제약 조건이 이미 이 컬렉션에 속해 있거나 다른 컬렉션에 속해 있는 경우</exception>
        <exception cref="T:System.Data.DuplicateNameException">컬렉션에 이미 같은 이름의 제약 조건이 있는 경우 (대/소문자를 구분하지 않고 비교합니다.)</exception>
        <altmember cref="T:System.Data.UniqueConstraint" />
        <altmember cref="T:System.Data.ForeignKeyConstraint" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Data.Constraint Add (string name, System.Data.DataColumn column, bool primaryKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Constraint Add(string name, class System.Data.DataColumn column, bool primaryKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (name As String, column As DataColumn, primaryKey As Boolean) As Constraint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Constraint ^ Add(System::String ^ name, System::Data::DataColumn ^ column, bool primaryKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Constraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="primaryKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <see langword="UniqueConstraint" />의 이름입니다.</param>
        <param name="column">제약 조건이 적용되는 <see cref="T:System.Data.DataColumn" />입니다.</param>
        <param name="primaryKey">열이 기본 키인지 여부를 지정합니다. <see langword="true" />이면 기본 키 열이 됩니다.</param>
        <summary>지정된 이름, <see cref="T:System.Data.UniqueConstraint" /> 및 해당 열이 기본 키인지 여부를 나타내는 값이 있는 새 <see cref="T:System.Data.DataColumn" />를 생성하여 컬렉션에 추가합니다.</summary>
        <returns>새 <see langword="UniqueConstraint" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.ConstraintCollection.CollectionChanged> 이벤트 제약 조건을 성공적으로 추가 되는 경우에 발생 합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.ConstraintCollection.Add%2A> 메서드를 만들고 새 추가 <xref:System.Data.UniqueConstraint> 에 <xref:System.Data.ConstraintCollection>합니다.  
  
 [!code-csharp[Classic WebData ConstraintCollection.Add2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Add2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.Add2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Add2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">제약 조건이 이미 이 컬렉션에 속해 있는 경우  
  
 -또는-  
  
 제약 조건이 다른 컬렉션에 속한 경우</exception>
        <exception cref="T:System.Data.DuplicateNameException">컬렉션에 지정된 이름의 제약 조건이 이미 있는 경우. (대/소문자를 구분하지 않고 비교합니다.)</exception>
        <altmember cref="T:System.Data.UniqueConstraint" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Data.Constraint Add (string name, System.Data.DataColumn primaryKeyColumn, System.Data.DataColumn foreignKeyColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Constraint Add(string name, class System.Data.DataColumn primaryKeyColumn, class System.Data.DataColumn foreignKeyColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (name As String, primaryKeyColumn As DataColumn, foreignKeyColumn As DataColumn) As Constraint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Constraint ^ Add(System::String ^ name, System::Data::DataColumn ^ primaryKeyColumn, System::Data::DataColumn ^ foreignKeyColumn);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Constraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="primaryKeyColumn" Type="System.Data.DataColumn" />
        <Parameter Name="foreignKeyColumn" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="name">
          <see cref="T:System.Data.ForeignKeyConstraint" />의 이름입니다.</param>
        <param name="primaryKeyColumn">기본 키 또는 부모 <see cref="T:System.Data.DataColumn" />입니다.</param>
        <param name="foreignKeyColumn">외래 키 또는 자식 <see cref="T:System.Data.DataColumn" />입니다.</param>
        <summary>지정된 이름, 부모 열 및 자식 열을 사용하여 새 <see cref="T:System.Data.ForeignKeyConstraint" />를 만들어 컬렉션에 추가합니다.</summary>
        <returns>새 <see langword="ForeignKeyConstraint" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.ConstraintCollection.CollectionChanged> 이벤트 제약 조건을 성공적으로 추가 되는 경우에 발생 합니다.  
  
   
  
## Examples  
 다음 예제에서는 새 <xref:System.Data.ForeignKeyConstraint> 에 <xref:System.Data.ConstraintCollection> 의 <xref:System.Data.DataTable>합니다.  
  
 [!code-csharp[Classic WebData ConstraintCollection.Add3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Add3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.Add3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Add3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Data.Constraint Add (string name, System.Data.DataColumn[] columns, bool primaryKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Constraint Add(string name, class System.Data.DataColumn[] columns, bool primaryKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (name As String, columns As DataColumn(), primaryKey As Boolean) As Constraint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Constraint ^ Add(System::String ^ name, cli::array &lt;System::Data::DataColumn ^&gt; ^ columns, bool primaryKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Constraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="columns" Type="System.Data.DataColumn[]" />
        <Parameter Name="primaryKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <see cref="T:System.Data.UniqueConstraint" />의 이름입니다.</param>
        <param name="columns">제약 조건이 적용되는 <see cref="T:System.Data.DataColumn" /> 개체의 배열입니다.</param>
        <param name="primaryKey">열이 기본 키인지 여부를 지정합니다. <see langword="true" />이면 기본 키 열이 됩니다.</param>
        <summary>지정된 이름, <see cref="T:System.Data.UniqueConstraint" /> 개체의 배열 및 열이 기본 키인지 여부를 나타내는 값이 있는 새 <see cref="T:System.Data.DataColumn" />를 생성하여 컬렉션에 추가합니다.</summary>
        <returns>새 <see langword="UniqueConstraint" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.ConstraintCollection.CollectionChanged> 이벤트 제약 조건을 성공적으로 추가 되는 경우에 발생 합니다.  
  
   
  
## Examples  
 다음 예제에서는 배열을 <xref:System.Data.DataColumn> 새 만드는 데 사용 되는 개체 <xref:System.Data.UniqueConstraint> 특정에서 <xref:System.Data.DataTable>합니다.  
  
 [!code-csharp[Classic WebData ConstraintCollection.Add1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Add1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.Add1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Add1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">제약 조건이 이미 이 컬렉션에 속해 있는 경우  
  
 -또는-  
  
 제약 조건이 다른 컬렉션에 속한 경우</exception>
        <exception cref="T:System.Data.DuplicateNameException">컬렉션에 지정된 이름의 제약 조건이 이미 있는 경우. (대/소문자를 구분하지 않고 비교합니다.)</exception>
        <altmember cref="T:System.Data.UniqueConstraint" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Data.Constraint Add (string name, System.Data.DataColumn[] primaryKeyColumns, System.Data.DataColumn[] foreignKeyColumns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Constraint Add(string name, class System.Data.DataColumn[] primaryKeyColumns, class System.Data.DataColumn[] foreignKeyColumns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (name As String, primaryKeyColumns As DataColumn(), foreignKeyColumns As DataColumn()) As Constraint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Constraint ^ Add(System::String ^ name, cli::array &lt;System::Data::DataColumn ^&gt; ^ primaryKeyColumns, cli::array &lt;System::Data::DataColumn ^&gt; ^ foreignKeyColumns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Constraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="primaryKeyColumns" Type="System.Data.DataColumn[]" />
        <Parameter Name="foreignKeyColumns" Type="System.Data.DataColumn[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <see cref="T:System.Data.ForeignKeyConstraint" />의 이름입니다.</param>
        <param name="primaryKeyColumns">기본 키 열 또는 부모 열인 <see cref="T:System.Data.DataColumn" /> 개체의 배열입니다.</param>
        <param name="foreignKeyColumns">외래 키 열 또는 자식 열인 <see cref="T:System.Data.DataColumn" /> 개체의 배열입니다.</param>
        <summary>부모 열과 자식 열의 지정된 배열을 사용하여 새 <see cref="T:System.Data.ForeignKeyConstraint" />를 만들어 컬렉션에 추가합니다.</summary>
        <returns>새 <see langword="ForeignKeyConstraint" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.ConstraintCollection.CollectionChanged> 이벤트 제약 조건을 성공적으로 추가 되는 경우에 발생 합니다.  
  
   
  
## Examples  
 다음 예제에서는 두 배열을 <xref:System.Data.DataColumn> 개체, 및에서는 두 개의 <xref:System.Data.ForeignKeyConstraint> 데이터 집합에서 두 테이블 간의 관계입니다.  
  
 [!code-csharp[Classic WebData ConstraintCollection.Add4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Add4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.Add4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Add4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Data.Constraint[] constraints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Data.Constraint[] constraints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (constraints As Constraint())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Data::Constraint ^&gt; ^ constraints);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraints" Type="System.Data.Constraint[]" />
      </Parameters>
      <Docs>
        <param name="constraints">컬렉션에 추가할 <see cref="T:System.Data.ConstraintCollection" /> 개체의 배열입니다.</param>
        <summary>지정된 <see cref="T:System.Data.ConstraintCollection" /> 배열의 요소를 컬렉션의 끝에 복사합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우 <xref:System.Data.DataTable.BeginInit%2A> 가 호출 된 `AddRange` 될 때까지 컬렉션에 개체를 추가 하지 않는 <xref:System.Data.DataTable.EndInit%2A> 호출 됩니다. 시간에는 `EndInit` 은 호출 컬렉션 채워집니다 가장 최근 호출에 지정 된 항목이 `AddRange`합니다. 경우 `AddRange` 내에서 여러 번 호출 되는 `BeginInit`  /  `EndInit` 시퀀스에 대 한 가장 최근 호출에 지정 된 항목만 `AddRange` 추가 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 기본 및 외래 키 제약 조건을 만들고에 추가 된 <xref:System.Data.ConstraintCollection>합니다.  
  
 [!code-csharp[Classic WebData ConstraintCollection.AddRange Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.AddRange Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.AddRange Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.AddRange Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRemove">
      <MemberSignature Language="C#" Value="public bool CanRemove (System.Data.Constraint constraint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanRemove(class System.Data.Constraint constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanRemove(System::Data::Constraint ^ constraint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Data.Constraint" />
      </Parameters>
      <Docs>
        <param name="constraint">컬렉션에서 제거할 수 있는지 테스트할 <see cref="T:System.Data.Constraint" />입니다.</param>
        <summary>
          <see cref="T:System.Data.Constraint" />를 제거할 수 있는지 나타냅니다.</summary>
        <returns>
          <see cref="T:System.Data.Constraint" />를 컬렉션에서 제거할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 동작 때마다는 <xref:System.Data.DataRelation> 에 추가 되는 <xref:System.Data.DataSet>, 추가 하는 것는 <xref:System.Data.ForeignKeyConstraint> 부모 테이블에 및 <xref:System.Data.UniqueConstraint> 자식 테이블에 합니다. <xref:System.Data.UniqueConstraint> 부모 테이블의 기본 키 열에 적용 되 고 <xref:System.Data.ForeignKeyConstraint> 자식 테이블의 외래 키 열에 적용 됩니다. 제거 하 려 하기 때문에 <xref:System.Data.UniqueConstraint> 제거 하기 전에 <xref:System.Data.ForeignKeyConstraint> 하면 예외가 throw 되 게를 항상 사용 해야는 <xref:System.Data.ConstraintCollection.CanRemove%2A> 있는지 확인 하기에 Remove를 호출 하기 전에 메서드는 <xref:System.Data.UniqueConstraint> 제거할 수 있습니다.  
  
   
  
## Examples  
 사용 하 여 다음 예제는 <xref:System.Data.ConstraintCollection.CanRemove%2A> 확인할 수 있는 방법은 여부는 <xref:System.Data.Constraint> 를 제거 하기 전에 제거 합니다.  
  
 [!code-csharp[Classic WebData ConstraintCollection.CanRemove Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.CanRemove Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.CanRemove Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.CanRemove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Data.Constraint" /> 개체의 컬렉션을 지웁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.ConstraintCollection.CollectionChanged> 이벤트는이 작업은 성공 하는 경우 발생 합니다.  
  
   
  
## Examples  
 다음 예제에서는 지웁니다에서 제약 조건을 모두는 <xref:System.Data.ConstraintCollection>합니다.  
  
 [!code-csharp[Classic WebData ConstraintCollection.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CollectionChangeEventHandler CollectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CollectionChangeEventHandler CollectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Data.ConstraintCollection.CollectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CollectionChanged As CollectionChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CollectionChangeEventHandler ^ CollectionChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CollectionChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Data.ConstraintCollection" /> 개체가 추가되거나 제거되어 <see cref="T:System.Data.Constraint" />이 변경될 때마다 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하 여 <xref:System.Data.ConstraintCollection.CollectionChanged> 이벤트입니다.  
  
 [!code-csharp[Classic WebData ConstraintCollection.CollectionChanged Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.CollectionChanged Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.CollectionChanged Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.CollectionChanged Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">제약 조건의 <see cref="P:System.Data.Constraint.ConstraintName" />입니다.</param>
        <summary>이름으로 지정된 <see cref="T:System.Data.Constraint" />개체가 컬렉션에 있는지 여부를 나타냅니다.</summary>
        <returns>
          컬렉션에 지정한 제약 조건이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Data.ConstraintCollection.Contains%2A> 확인할 수 있는지 여부를 지정 된 <xref:System.Data.Constraint> 컬렉션에서 제거 하기 전에 존재 합니다. 사용할 수도 있습니다는 <xref:System.Data.ConstraintCollection.CanRemove%2A> 확인할 수 있는지 여부를 <xref:System.Data.Constraint> 제거할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 확인 여부를 지정 된 <xref:System.Data.Constraint> 에 존재는 <xref:System.Data.ConstraintCollection> 해당 삭제 하기 전에.  
  
 [!code-csharp[Classic WebData ConstraintCollection.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Data.Constraint[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Data.Constraint[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.CopyTo(System.Data.Constraint[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As Constraint(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Data::Constraint ^&gt; ^ array, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Data.Constraint[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">컬렉션에서 복사된 값의 대상인 1차원 <see cref="T:System.Array" />입니다.</param>
        <param name="index">삽입을 시작할 배열의 인덱스입니다.</param>
        <summary>지정한 인덱스에서 시작하는 1차원 <see cref="T:System.Array" /> 인스턴스에 컬렉션 개체를 복사합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 <see cref="T:System.Data.Constraint" />의 인덱스를 가져옵니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Data.Constraint constraint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Data.Constraint constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Data::Constraint ^ constraint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Data.Constraint" />
      </Parameters>
      <Docs>
        <param name="constraint">검색할 <see cref="T:System.Data.Constraint" />입니다.</param>
        <summary>지정된 <see cref="T:System.Data.Constraint" />의 인덱스를 가져옵니다.</summary>
        <returns>항목이 컬렉션에 있으면 <see cref="T:System.Data.Constraint" />의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Data.ConstraintCollection.IndexOf%2A> 중 하나에서 사용 되는 인덱스를 반환 하는 메서드는 <xref:System.Data.ConstraintCollection.Contains%2A> 또는 <xref:System.Data.ConstraintCollection.Remove%2A> 메서드.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.ConstraintCollection.IndexOf%2A> 의 인덱스를 반환 하는 메서드는 <xref:System.Data.Constraint>합니다. 인덱스에 전달 되는 <xref:System.Data.ConstraintCollection.Contains%2A> 메서드를 제거 하기 전에, 컬렉션에 제약 조건을 확인 하려면.  
  
 [!code-csharp[Classic WebData ConstraintCollection.IndexOf1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.IndexOf1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.IndexOf1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.IndexOf1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.ConstraintCollection.Contains(System.String)" />
        <altmember cref="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)" />
        <altmember cref="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (string constraintName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(string constraintName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.IndexOf(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (constraintName As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::String ^ constraintName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraintName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="constraintName">
          <see cref="T:System.Data.Constraint" />의 이름입니다.</param>
        <summary>이름으로 지정된 <see cref="T:System.Data.Constraint" />의 인덱스를 가져옵니다.</summary>
        <returns>인덱스가 컬렉션에 있으면 <see cref="T:System.Data.Constraint" />의 인덱스이고, 그렇지 않으면 -1입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Data.ConstraintCollection.IndexOf%2A> 중 하나에서 사용 되는 인덱스를 반환 하는 메서드는 <xref:System.Data.ConstraintCollection.Contains%2A> 또는 <xref:System.Data.ConstraintCollection.Remove%2A> 메서드.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.ConstraintCollection.IndexOf%2A> 의 인덱스를 반환 하는 메서드는 <xref:System.Data.Constraint>합니다. 인덱스에 전달 되는 <xref:System.Data.ConstraintCollection.Contains%2A> 메서드를 제거 하기 전에 컬렉션에 제약 조건이 포함 되어 있는지 확인 합니다.  
  
 [!code-csharp[Classic WebData ConstraintCollection.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.ConstraintCollection.Contains(System.String)" />
        <altmember cref="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)" />
        <altmember cref="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>컬렉션에서 지정된 <see cref="T:System.Data.Constraint" />을 가져옵니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Data.Constraint this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Constraint Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.ConstraintCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As Constraint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Constraint ^ default[int] { System::Data::Constraint ^ get(int index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Constraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">반환할 제약 조건의 인덱스입니다.</param>
        <summary>컬렉션에서 지정된 인덱스의 <see cref="T:System.Data.Constraint" />을 가져옵니다.</summary>
        <value>지정된 인덱스의 <see cref="T:System.Data.Constraint" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Data.ConstraintCollection.Contains%2A> 메서드는 특정 제약 조건의 존재 여부를 테스트 합니다.  
  
   
  
## Examples  
 다음 예제에서는 각 <xref:System.Data.Constraint> 에서 <xref:System.Data.ConstraintCollection>합니다.  
  
 [!code-csharp[Classic WebData ConstraintCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.this Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">인덱스 값이 컬렉션의 항목 수보다 큰 경우</exception>
        <altmember cref="M:System.Data.ConstraintCollection.Contains(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Data.Constraint this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Constraint Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.ConstraintCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(name As String) As Constraint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Constraint ^ default[System::String ^] { System::Data::Constraint ^ get(System::String ^ name); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Constraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">반환할 제약 조건의 <see cref="P:System.Data.Constraint.ConstraintName" />입니다.</param>
        <summary>컬렉션에서 지정된 이름을 가진 <see cref="T:System.Data.Constraint" />을 가져옵니다.</summary>
        <value>지정된 이름을 가진 <see cref="T:System.Data.Constraint" />이고, <see cref="T:System.Data.Constraint" />가 없는 경우 null 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Data.ConstraintCollection.Contains%2A> 메서드는 특정 제약 조건의 존재 여부를 테스트 합니다.  
  
   
  
## Examples  
 다음 예제에서는 명명 된 가져옵니다 <xref:System.Data.Constraint>합니다.  
  
 [!code-csharp[Classic WebData ConstraintCollection.this1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.this1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.this1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.this1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="protected override System.Collections.ArrayList List { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList List" />
      <MemberSignature Language="DocId" Value="P:System.Data.ConstraintCollection.List" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property List As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Collections::ArrayList ^ List { System::Collections::ArrayList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Data.Constraint" />에서 <see cref="T:System.Data.ConstraintCollection" /> 개체를 제거합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Data.Constraint constraint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Data.Constraint constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Data::Constraint ^ constraint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Data.Constraint" />
      </Parameters>
      <Docs>
        <param name="constraint">제거할 <see cref="T:System.Data.Constraint" />입니다.</param>
        <summary>지정된 <see cref="T:System.Data.Constraint" />를 컬렉션에서 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하기 전에 `Remove` 사용 수를 <xref:System.Data.ConstraintCollection.Contains%2A> 대상 컬렉션에 포함 되어 있는지 여부를 확인 하 <xref:System.Data.Constraint>, 및 <xref:System.Data.ConstraintCollection.CanRemove%2A> 확인 하 여부는 <xref:System.Data.Constraint> 제거할 수 있습니다.  
  
 <xref:System.Data.ConstraintCollection.CollectionChanged> 이벤트 제약 조건이 성공적으로 제거 하는 경우에 발생 합니다.  
  
   
  
## Examples  
 [!code-csharp[Classic WebData ConstraintCollection.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="constraint" /> 인수가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException">제약 조건이 컬렉션에 속하지 않는 경우</exception>
        <altmember cref="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)" />
        <altmember cref="M:System.Data.ConstraintCollection.Contains(System.String)" />
        <altmember cref="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">제거할 <see cref="T:System.Data.Constraint" />의 이름입니다.</param>
        <summary>컬렉션에서 이름으로 지정된 <see cref="T:System.Data.Constraint" /> 개체를 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하기 전에 `Remove` 사용 수를 <xref:System.Data.ConstraintCollection.Contains%2A> 대상 컬렉션에 포함 되어 있는지 여부를 확인 하 <xref:System.Data.Constraint>, 및 <xref:System.Data.ConstraintCollection.CanRemove%2A> 확인 하 여부는 <xref:System.Data.Constraint> 제거할 수 있습니다.  
  
 <xref:System.Data.ConstraintCollection.CollectionChanged> 이벤트 제약 조건이 성공적으로 제거 하는 경우에 발생 합니다.  
  
   
  
## Examples  
 다음 예제에서는 제거는 <xref:System.Data.Constraint> 에서 <xref:System.Data.ConstraintCollection> 와 존재에 대 한 테스트 한 후에 <xref:System.Data.ConstraintCollection.Contains%2A> 메서드를으로 제거할 수 있는지 여부는 <xref:System.Data.ConstraintCollection.CanRemove%2A> 메서드.  
  
 [!code-csharp[Classic WebData ConstraintCollection.Remove1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Remove1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.Remove1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Remove1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)" />
        <altmember cref="M:System.Data.ConstraintCollection.Contains(System.String)" />
        <altmember cref="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">제거할 <see cref="T:System.Data.Constraint" />의 인덱스입니다.</param>
        <summary>컬렉션에서 지정된 인덱스의 <see cref="T:System.Data.Constraint" /> 개체를 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.ConstraintCollection.IndexOf%2A> 메서드는 특정 인덱스를 반환 <xref:System.Data.Constraint>합니다.  
  
 사용 하기 전에 `RemoveAt` 사용 수를 <xref:System.Data.ConstraintCollection.Contains%2A> 대상 컬렉션에 포함 되어 있는지 여부를 확인 하 <xref:System.Data.Constraint>, 및 <xref:System.Data.ConstraintCollection.CanRemove%2A> 확인 하 여부는 <xref:System.Data.Constraint> 제거할 수 있습니다.  
  
 <xref:System.Data.ConstraintCollection.CollectionChanged> 이벤트 제약 조건이 성공적으로 제거 하는 경우에 발생 합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.ConstraintCollection.IndexOf%2A> 와 함께 메서드는 <xref:System.Data.ConstraintCollection.RemoveAt%2A> 에서 제약 조건을 제거 하는 메서드는 <xref:System.Data.ConstraintCollection>합니다.  
  
 [!code-csharp[Classic WebData ConstraintCollection.RemoveAt Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.RemoveAt Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.RemoveAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.RemoveAt Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">컬렉션에 이 인덱스의 제약 조건이 없는 경우</exception>
        <altmember cref="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)" />
        <altmember cref="M:System.Data.ConstraintCollection.Contains(System.String)" />
        <altmember cref="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)" />
      </Docs>
    </Member>
  </Members>
</Type>