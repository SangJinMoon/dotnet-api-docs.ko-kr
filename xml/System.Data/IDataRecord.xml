<Type Name="IDataRecord" FullName="System.Data.IDataRecord">
  <TypeSignature Language="C#" Value="public interface IDataRecord" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataRecord" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDataRecord" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataRecord" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataRecord" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e496d-101"><see langword="DataReader" />의 각 행 내 열 값에 액세스할 수 있도록 하고 관계형 데이터베이스에 액세스하는 .NET Framework 데이터 공급자에 의해 구현됩니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-101">Provides access to the column values within each row for a <see langword="DataReader" />, and is implemented by .NET Framework data providers that access relational databases.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e496d-102"><xref:System.Data.IDataReader> 및 <xref:System.Data.IDataRecord> 인터페이스를 통해 상속 하는 클래스를 구현 하는 `DataReader` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-102">The <xref:System.Data.IDataReader> and <xref:System.Data.IDataRecord> interfaces enable an inheriting class to implement a `DataReader` class.</span></span> <span data-ttu-id="e496d-103">이 결과 집합의 하나 이상의 앞 으로만 이동 가능한 스트림을 읽을 수가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-103">This provides a way of reading one or more forward-only streams of result sets.</span></span> <span data-ttu-id="e496d-104">에 대 한 자세한 내용은 `DataReader` 클래스 참조 [DataReader를 사용 하 여 데이터 검색](~/docs/framework/data/adonet/retrieving-data-using-a-datareader.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-104">For more information about `DataReader` classes, see [Retrieving Data Using a DataReader](~/docs/framework/data/adonet/retrieving-data-using-a-datareader.md).</span></span>  
  
 <span data-ttu-id="e496d-105">응용 프로그램의 인스턴스를 만들지 않습니다는 <xref:System.Data.IDataRecord> 인터페이스를 직접 상속 하는 클래스의 인스턴스를 만들고 있지만 <xref:System.Data.IDataRecord>합니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-105">An application does not create an instance of the <xref:System.Data.IDataRecord> interface directly, but creates an instance of a class that inherits <xref:System.Data.IDataRecord>.</span></span> <span data-ttu-id="e496d-106">일반적으로 이렇게 하면 가져옴으로써는 `DataReader` 통해는 `ExecuteReader` 의 메서드는 `Command` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-106">Typically, you do this by obtaining a `DataReader` through the `ExecuteReader` method of the `Command` object.</span></span>  
  
 <span data-ttu-id="e496d-107">상속 된 클래스는 <xref:System.Data.IDataRecord> 상속 된 모든 멤버를 구현 하 고 일반적으로 공급자 특정 기능을 추가 하기 위한 추가 멤버를 정의 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-107">Classes that inherit <xref:System.Data.IDataRecord> must implement all inherited members, and typically define additional members to add provider-specific functionality.</span></span>  
  
 <span data-ttu-id="e496d-108">구현 하는 공급자는 `DataReader` 공용 언어 런타임 (CLR) 형식에서 데이터를 노출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-108">Providers implementing a `DataReader` are required to expose data in common language runtime (CLR) types.</span></span> <span data-ttu-id="e496d-109">형식 강제 변환이 CLR에 없는 일부 형식에 대해 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-109">Type coercion is defined for some types not included in the CLR.</span></span> <span data-ttu-id="e496d-110">이러한 값은 CLR 형식 준수 하는 대체 형식으로 서 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-110">These values may be accessed as alternative types that comply with CLR types.</span></span> <span data-ttu-id="e496d-111">예를 들어, 다음 표에서 CLR 형식 괄호 안에 있는 대체 형식으로 OLE DB 데이터 형식 간의 매핑을 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-111">As an example, the following table lists suggested mappings from OLE DB data types to CLR types, with alternative types in parentheses.</span></span>  
  
|<span data-ttu-id="e496d-112">OLE DB 형식</span><span class="sxs-lookup"><span data-stu-id="e496d-112">OLE DB type</span></span>|<span data-ttu-id="e496d-113">CLR 형식</span><span class="sxs-lookup"><span data-stu-id="e496d-113">CLR type</span></span>|  
|-----------------|--------------|  
|<span data-ttu-id="e496d-114">DBTYPE_BOOL</span><span class="sxs-lookup"><span data-stu-id="e496d-114">DBTYPE_BOOL</span></span>|<span data-ttu-id="e496d-115">Int16</span><span class="sxs-lookup"><span data-stu-id="e496d-115">Int16</span></span>|  
|<span data-ttu-id="e496d-116">DBTYPE_BSTR</span><span class="sxs-lookup"><span data-stu-id="e496d-116">DBTYPE_BSTR</span></span>|<span data-ttu-id="e496d-117">string</span><span class="sxs-lookup"><span data-stu-id="e496d-117">string</span></span>|  
|<span data-ttu-id="e496d-118">DBTYPE_BYTES</span><span class="sxs-lookup"><span data-stu-id="e496d-118">DBTYPE_BYTES</span></span>|<span data-ttu-id="e496d-119">byte[]</span><span class="sxs-lookup"><span data-stu-id="e496d-119">byte[]</span></span>|  
|<span data-ttu-id="e496d-120">DBTYPE_CY</span><span class="sxs-lookup"><span data-stu-id="e496d-120">DBTYPE_CY</span></span>|<span data-ttu-id="e496d-121">Decimal</span><span class="sxs-lookup"><span data-stu-id="e496d-121">Decimal</span></span>|  
|<span data-ttu-id="e496d-122">DBTYPE_DATE</span><span class="sxs-lookup"><span data-stu-id="e496d-122">DBTYPE_DATE</span></span>|<span data-ttu-id="e496d-123">DateTime</span><span class="sxs-lookup"><span data-stu-id="e496d-123">DateTime</span></span>|  
|<span data-ttu-id="e496d-124">DBTYPE_DBDATE</span><span class="sxs-lookup"><span data-stu-id="e496d-124">DBTYPE_DBDATE</span></span>|<span data-ttu-id="e496d-125">DateTime</span><span class="sxs-lookup"><span data-stu-id="e496d-125">DateTime</span></span>|  
|<span data-ttu-id="e496d-126">DBTYPE_DBTIME</span><span class="sxs-lookup"><span data-stu-id="e496d-126">DBTYPE_DBTIME</span></span>|<span data-ttu-id="e496d-127">DateTime</span><span class="sxs-lookup"><span data-stu-id="e496d-127">DateTime</span></span>|  
|<span data-ttu-id="e496d-128">DBTYPE_DBTIMESTAMP</span><span class="sxs-lookup"><span data-stu-id="e496d-128">DBTYPE_DBTIMESTAMP</span></span>|<span data-ttu-id="e496d-129">DateTime</span><span class="sxs-lookup"><span data-stu-id="e496d-129">DateTime</span></span>|  
|<span data-ttu-id="e496d-130">DBTYPE_DECIMAL</span><span class="sxs-lookup"><span data-stu-id="e496d-130">DBTYPE_DECIMAL</span></span>|<span data-ttu-id="e496d-131">Decimal</span><span class="sxs-lookup"><span data-stu-id="e496d-131">Decimal</span></span>|  
|<span data-ttu-id="e496d-132">DBTYPE_EMPTY</span><span class="sxs-lookup"><span data-stu-id="e496d-132">DBTYPE_EMPTY</span></span>|<span data-ttu-id="e496d-133">null</span><span class="sxs-lookup"><span data-stu-id="e496d-133">null</span></span>|  
|<span data-ttu-id="e496d-134">DBTYPE_ERROR</span><span class="sxs-lookup"><span data-stu-id="e496d-134">DBTYPE_ERROR</span></span>|<span data-ttu-id="e496d-135">ExternalException</span><span class="sxs-lookup"><span data-stu-id="e496d-135">ExternalException</span></span>|  
|<span data-ttu-id="e496d-136">DBTYPE_FILETIME</span><span class="sxs-lookup"><span data-stu-id="e496d-136">DBTYPE_FILETIME</span></span>|<span data-ttu-id="e496d-137">DateTime</span><span class="sxs-lookup"><span data-stu-id="e496d-137">DateTime</span></span>|  
|<span data-ttu-id="e496d-138">DBTYPE_GUID</span><span class="sxs-lookup"><span data-stu-id="e496d-138">DBTYPE_GUID</span></span>|<span data-ttu-id="e496d-139">Guid</span><span class="sxs-lookup"><span data-stu-id="e496d-139">Guid</span></span>|  
|<span data-ttu-id="e496d-140">DBTYPE_HCHAPTER</span><span class="sxs-lookup"><span data-stu-id="e496d-140">DBTYPE_HCHAPTER</span></span>|<span data-ttu-id="e496d-141">지원되지 않음</span><span class="sxs-lookup"><span data-stu-id="e496d-141">not supported</span></span>|  
|<span data-ttu-id="e496d-142">DBTYPE_I1</span><span class="sxs-lookup"><span data-stu-id="e496d-142">DBTYPE_I1</span></span>|<span data-ttu-id="e496d-143">SByte</span><span class="sxs-lookup"><span data-stu-id="e496d-143">SByte</span></span>|  
|<span data-ttu-id="e496d-144">DBTYPE_I2</span><span class="sxs-lookup"><span data-stu-id="e496d-144">DBTYPE_I2</span></span>|<span data-ttu-id="e496d-145">Int16</span><span class="sxs-lookup"><span data-stu-id="e496d-145">Int16</span></span>|  
|<span data-ttu-id="e496d-146">DBTYPE_I4</span><span class="sxs-lookup"><span data-stu-id="e496d-146">DBTYPE_I4</span></span>|<span data-ttu-id="e496d-147">Int32</span><span class="sxs-lookup"><span data-stu-id="e496d-147">Int32</span></span>|  
|<span data-ttu-id="e496d-148">DBTYPE_I8</span><span class="sxs-lookup"><span data-stu-id="e496d-148">DBTYPE_I8</span></span>|<span data-ttu-id="e496d-149">Int64</span><span class="sxs-lookup"><span data-stu-id="e496d-149">Int64</span></span>|  
|<span data-ttu-id="e496d-150">DBTYPE_IDISPATCH</span><span class="sxs-lookup"><span data-stu-id="e496d-150">DBTYPE_IDISPATCH</span></span>|<span data-ttu-id="e496d-151">object</span><span class="sxs-lookup"><span data-stu-id="e496d-151">object</span></span>|  
|<span data-ttu-id="e496d-152">DBTYPE_IUNKNOWN</span><span class="sxs-lookup"><span data-stu-id="e496d-152">DBTYPE_IUNKNOWN</span></span>|<span data-ttu-id="e496d-153">object</span><span class="sxs-lookup"><span data-stu-id="e496d-153">object</span></span>|  
|<span data-ttu-id="e496d-154">DBTYPE_NULL</span><span class="sxs-lookup"><span data-stu-id="e496d-154">DBTYPE_NULL</span></span>|<span data-ttu-id="e496d-155">DBNull.Value</span><span class="sxs-lookup"><span data-stu-id="e496d-155">DBNull.Value</span></span>|  
|<span data-ttu-id="e496d-156">DBTYPE_NUMERIC</span><span class="sxs-lookup"><span data-stu-id="e496d-156">DBTYPE_NUMERIC</span></span>|<span data-ttu-id="e496d-157">Decimal</span><span class="sxs-lookup"><span data-stu-id="e496d-157">Decimal</span></span>|  
|<span data-ttu-id="e496d-158">DBTYPE_PROPVARIANT</span><span class="sxs-lookup"><span data-stu-id="e496d-158">DBTYPE_PROPVARIANT</span></span>|<span data-ttu-id="e496d-159">object</span><span class="sxs-lookup"><span data-stu-id="e496d-159">object</span></span>|  
|<span data-ttu-id="e496d-160">DBTYPE_R4</span><span class="sxs-lookup"><span data-stu-id="e496d-160">DBTYPE_R4</span></span>|<span data-ttu-id="e496d-161">Single</span><span class="sxs-lookup"><span data-stu-id="e496d-161">Single</span></span>|  
|<span data-ttu-id="e496d-162">DBTYPE_R8</span><span class="sxs-lookup"><span data-stu-id="e496d-162">DBTYPE_R8</span></span>|<span data-ttu-id="e496d-163">Double</span><span class="sxs-lookup"><span data-stu-id="e496d-163">Double</span></span>|  
|<span data-ttu-id="e496d-164">DBTYPE_STR</span><span class="sxs-lookup"><span data-stu-id="e496d-164">DBTYPE_STR</span></span>|<span data-ttu-id="e496d-165">string</span><span class="sxs-lookup"><span data-stu-id="e496d-165">string</span></span>|  
|<span data-ttu-id="e496d-166">DBTYPE_UDT</span><span class="sxs-lookup"><span data-stu-id="e496d-166">DBTYPE_UDT</span></span>|<span data-ttu-id="e496d-167">지원되지 않음</span><span class="sxs-lookup"><span data-stu-id="e496d-167">not supported</span></span>|  
|<span data-ttu-id="e496d-168">DBTYPE_UI1</span><span class="sxs-lookup"><span data-stu-id="e496d-168">DBTYPE_UI1</span></span>|<span data-ttu-id="e496d-169">바이트 (Int16)</span><span class="sxs-lookup"><span data-stu-id="e496d-169">byte (Int16)</span></span>|  
|<span data-ttu-id="e496d-170">DBTYPE_UI2</span><span class="sxs-lookup"><span data-stu-id="e496d-170">DBTYPE_UI2</span></span>|<span data-ttu-id="e496d-171">UInt16 (Int32)</span><span class="sxs-lookup"><span data-stu-id="e496d-171">UInt16 (Int32)</span></span>|  
|<span data-ttu-id="e496d-172">DBTYPE_UI4</span><span class="sxs-lookup"><span data-stu-id="e496d-172">DBTYPE_UI4</span></span>|<span data-ttu-id="e496d-173">UInt32 (입니다 Int64)</span><span class="sxs-lookup"><span data-stu-id="e496d-173">UInt32 (Int64)</span></span>|  
|<span data-ttu-id="e496d-174">DBTYPE_UI8</span><span class="sxs-lookup"><span data-stu-id="e496d-174">DBTYPE_UI8</span></span>|<span data-ttu-id="e496d-175">UInt64 (10 진수)</span><span class="sxs-lookup"><span data-stu-id="e496d-175">UInt64 (Decimal)</span></span>|  
|<span data-ttu-id="e496d-176">DBTYPE_VARIANT</span><span class="sxs-lookup"><span data-stu-id="e496d-176">DBTYPE_VARIANT</span></span>|<span data-ttu-id="e496d-177">object</span><span class="sxs-lookup"><span data-stu-id="e496d-177">object</span></span>|  
|<span data-ttu-id="e496d-178">DBTYPE_VARNUMERIC</span><span class="sxs-lookup"><span data-stu-id="e496d-178">DBTYPE_VARNUMERIC</span></span>|<span data-ttu-id="e496d-179">지원되지 않음</span><span class="sxs-lookup"><span data-stu-id="e496d-179">not supported</span></span>|  
|<span data-ttu-id="e496d-180">DBTYPE_WSTR</span><span class="sxs-lookup"><span data-stu-id="e496d-180">DBTYPE_WSTR</span></span>|<span data-ttu-id="e496d-181">string</span><span class="sxs-lookup"><span data-stu-id="e496d-181">string</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e496d-182">다음 예제에서는 파생된 클래스의 인스턴스를 만드는 <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>, 및 <xref:System.Data.SqlClient.SqlDataReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-182">The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>, and <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="e496d-183">이 예제에서는 콘솔에이 작성 하는 데이터를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-183">The example reads through the data, writing it out to the console.</span></span> <span data-ttu-id="e496d-184">마지막는 <xref:System.Data.SqlClient.SqlDataReader>, 한 다음은 <xref:System.Data.SqlClient.SqlConnection>합니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-184">Finally, the example closes the <xref:System.Data.SqlClient.SqlDataReader>, and then the <xref:System.Data.SqlClient.SqlConnection>.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FieldCount">
      <MemberSignature Language="C#" Value="public int FieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataRecord.FieldCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FieldCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e496d-185">현재 행의 열 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-185">Gets the number of columns in the current row.</span></span></summary>
        <value><span data-ttu-id="e496d-186">올바른 레코드 집합에 배치되지 않으면 0이고, 배치되면 현재 레코드의 열 수입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-186">When not positioned in a valid recordset, 0; otherwise, the number of columns in the current record.</span></span> <span data-ttu-id="e496d-187">기본값은 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-187">The default is -1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e496d-188">행을 반환 하지 않는 쿼리를 실행 한 후 (예를 들어를 사용 하는 <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> 메서드), <xref:System.Data.IDataRecord.FieldCount%2A> -1을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-188">After executing a query that does not return rows (for example, using the <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> method), <xref:System.Data.IDataRecord.FieldCount%2A> returns -1.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public bool GetBoolean (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetBoolean(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataRecord.GetBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBoolean (i As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetBoolean(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="e496d-189">열 서수(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-189">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="e496d-190">지정된 열의 값에 해당하는 Boolean 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-190">Gets the value of the specified column as a Boolean.</span></span></summary>
        <returns><span data-ttu-id="e496d-191">열의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-191">The value of the column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e496d-192">변환이 수행 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-192">No conversions are performed.</span></span> <span data-ttu-id="e496d-193">따라서 검색 된 데이터 이미 부울 이어야 합니다. 그렇지 않으면 예외가 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-193">Therefore, the data retrieved must already be a Boolean; otherwise an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="e496d-194">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="e496d-194">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public byte GetByte (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8 GetByte(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataRecord.GetByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetByte (i As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Byte GetByte(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="e496d-195">열 서수(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-195">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="e496d-196">지정된 열의 부호 없는 8비트 정수 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-196">Gets the 8-bit unsigned integer value of the specified column.</span></span></summary>
        <returns><span data-ttu-id="e496d-197">지정된 열의 부호 없는 8비트 정수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-197">The 8-bit unsigned integer value of the specified column.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="e496d-198">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="e496d-198">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public long GetBytes (int i, long fieldOffset, byte[] buffer, int bufferoffset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetBytes(int32 i, int64 fieldOffset, unsigned int8[] buffer, int32 bufferoffset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBytes (i As Integer, fieldOffset As Long, buffer As Byte(), bufferoffset As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long GetBytes(int i, long fieldOffset, cli::array &lt;System::Byte&gt; ^ buffer, int bufferoffset, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="fieldOffset" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="bufferoffset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="e496d-199">열 서수(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-199">The zero-based column ordinal.</span></span></param>
        <param name="fieldOffset"><span data-ttu-id="e496d-200">읽기 작업을 시작할 필드 내의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-200">The index within the field from which to start the read operation.</span></span></param>
        <param name="buffer"><span data-ttu-id="e496d-201">바이트 스트림을 읽을 버퍼입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-201">The buffer into which to read the stream of bytes.</span></span></param>
        <param name="bufferoffset"><span data-ttu-id="e496d-202">읽기 작업을 시작할 <c>버퍼</c>에 대한 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-202">The index for <c>buffer</c> to start the read operation.</span></span></param>
        <param name="length"><span data-ttu-id="e496d-203">읽을 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-203">The number of bytes to read.</span></span></param>
        <summary><span data-ttu-id="e496d-204">지정된 버퍼 오프셋에서 시작하여 지정된 열 오프셋의 바이트 스트림을 배열로 버퍼에 읽어옵니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-204">Reads a stream of bytes from the specified column offset into the buffer as an array, starting at the given buffer offset.</span></span></summary>
        <returns><span data-ttu-id="e496d-205">읽은 실제 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-205">The actual number of bytes read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e496d-206"><xref:System.Data.IDataRecord.GetBytes%2A> 필드에 사용 가능한 바이트 수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-206"><xref:System.Data.IDataRecord.GetBytes%2A> returns the number of available bytes in the field.</span></span> <span data-ttu-id="e496d-207">자주이 필드의 길이 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-207">Frequently this is the exact length of the field.</span></span> <span data-ttu-id="e496d-208">그러나 반환 된 숫자 보다 작을 수도 있습니다는 필드의 길이 경우 `GetBytes` 바이트를 얻는 필드에서 이미 사용 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-208">However, the number returned may be less than the true length of the field if `GetBytes` has already been used to obtain bytes from the field.</span></span>  
  
 <span data-ttu-id="e496d-209">버퍼를 전달 하는 경우 `null`, <xref:System.Data.IDataRecord.GetBytes%2A> 행의 길이 바이트 단위로 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-209">If you pass a buffer that is `null`, <xref:System.Data.IDataRecord.GetBytes%2A> returns the length of the row in bytes.</span></span>  
  
 <span data-ttu-id="e496d-210">변환이 수행 되지 않습니다. 따라서 검색 된 데이터에는 바이트 배열 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-210">No conversions are performed; therefore the data retrieved must already be a byte array.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="e496d-211">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="e496d-211">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public char GetChar (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetChar(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataRecord.GetChar(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChar (i As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; char GetChar(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="e496d-212">열 서수(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-212">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="e496d-213">지정된 열의 값에 해당하는 문자 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-213">Gets the character value of the specified column.</span></span></summary>
        <returns><span data-ttu-id="e496d-214">지정된 열의 값에 해당하는 문자 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-214">The character value of the specified column.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="e496d-215">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="e496d-215">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public long GetChars (int i, long fieldoffset, char[] buffer, int bufferoffset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetChars(int32 i, int64 fieldoffset, char[] buffer, int32 bufferoffset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChars (i As Integer, fieldoffset As Long, buffer As Char(), bufferoffset As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long GetChars(int i, long fieldoffset, cli::array &lt;char&gt; ^ buffer, int bufferoffset, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="fieldoffset" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="bufferoffset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="e496d-216">열 서수(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-216">The zero-based column ordinal.</span></span></param>
        <param name="fieldoffset"><span data-ttu-id="e496d-217">읽기 작업을 시작할 행 내의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-217">The index within the row from which to start the read operation.</span></span></param>
        <param name="buffer"><span data-ttu-id="e496d-218">바이트 스트림을 읽을 버퍼입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-218">The buffer into which to read the stream of bytes.</span></span></param>
        <param name="bufferoffset"><span data-ttu-id="e496d-219">읽기 작업을 시작할 <c>버퍼</c>에 대한 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-219">The index for <c>buffer</c> to start the read operation.</span></span></param>
        <param name="length"><span data-ttu-id="e496d-220">읽을 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-220">The number of bytes to read.</span></span></param>
        <summary><span data-ttu-id="e496d-221">지정된 버퍼 오프셋에서 시작하여 지정된 열 오프셋의 문자 스트림을 배열로 버퍼에 읽어옵니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-221">Reads a stream of characters from the specified column offset into the buffer as an array, starting at the given buffer offset.</span></span></summary>
        <returns><span data-ttu-id="e496d-222">읽은 실제 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-222">The actual number of characters read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e496d-223"><xref:System.Data.IDataRecord.GetChars%2A> 필드에 사용할 수 있는 문자 수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-223"><xref:System.Data.IDataRecord.GetChars%2A> returns the number of available characters in the field.</span></span> <span data-ttu-id="e496d-224">자주이 필드의 길이 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-224">Frequently this is the exact length of the field.</span></span> <span data-ttu-id="e496d-225">그러나 반환 된 숫자 보다 작을 수도 있습니다는 필드의 길이 해당 하는 경우 `GetChars` 문자를 가져올 필드에서 이미 사용 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-225">However, the number returned may be less than the exact length of the field if `GetChars` has already been used to obtain characters from the field.</span></span>  
  
 <span data-ttu-id="e496d-226">버퍼를 전달 하는 경우 `null`, `GetChars` 필드의 길이 문자 단위로 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-226">If you pass a buffer that is `null`, `GetChars` returns the length of the field in characters.</span></span>  
  
 <span data-ttu-id="e496d-227">변환이 수행 되지 않습니다. 따라서 검색 된 데이터는 문자 배열 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-227">No conversions are performed; therefore the data retrieved must already be a character array.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="e496d-228">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="e496d-228">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public System.Data.IDataReader GetData (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.IDataReader GetData(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataRecord.GetData(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (i As Integer) As IDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::IDataReader ^ GetData(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="e496d-229">찾을 필드의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-229">The index of the field to find.</span></span></param>
        <summary><span data-ttu-id="e496d-230">지정된 열 서수에 대해 <see cref="T:System.Data.IDataReader" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-230">Returns an <see cref="T:System.Data.IDataReader" /> for the specified column ordinal.</span></span></summary>
        <returns><span data-ttu-id="e496d-231">지정된 열 서수에 대한 <see cref="T:System.Data.IDataReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-231">The <see cref="T:System.Data.IDataReader" /> for the specified column ordinal.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="e496d-232">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="e496d-232">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataTypeName">
      <MemberSignature Language="C#" Value="public string GetDataTypeName (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetDataTypeName(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataRecord.GetDataTypeName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataTypeName (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetDataTypeName(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="e496d-233">찾을 필드의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-233">The index of the field to find.</span></span></param>
        <summary><span data-ttu-id="e496d-234">지정된 필드에 대한 데이터 형식 정보를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-234">Gets the data type information for the specified field.</span></span></summary>
        <returns><span data-ttu-id="e496d-235">지정된 필드에 대한 데이터 형식 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-235">The data type information for the specified field.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e496d-236">데이터 형식 정보에서 반환 된 형식 정보에서 다를 수 있습니다 `GetFieldType`, 특히 여기서 기본 데이터 형식은 매핑되지 않는 한 해당 언어에서 지 원하는 런타임 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-236">The data type information can differ from the type information returned by `GetFieldType`, especially where the underlying data types do not map one for one to the runtime types supported by the language.</span></span> <span data-ttu-id="e496d-237">(예를 들어 `DataTypeName` 있습니다 "integer" 일 동안 `Type.Name` "Int32" 일 수 있습니다.)</span><span class="sxs-lookup"><span data-stu-id="e496d-237">(for example, `DataTypeName` may be "integer", while `Type.Name` may be "Int32".)</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="e496d-238">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="e496d-238">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDateTime">
      <MemberSignature Language="C#" Value="public DateTime GetDateTime (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime GetDateTime(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataRecord.GetDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDateTime (i As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime GetDateTime(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="e496d-239">찾을 필드의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-239">The index of the field to find.</span></span></param>
        <summary><span data-ttu-id="e496d-240">지정된 필드의 날짜 및 시간 데이터 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-240">Gets the date and time data value of the specified field.</span></span></summary>
        <returns><span data-ttu-id="e496d-241">지정된 필드의 날짜 및 시간 데이터 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-241">The date and time data value of the specified field.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="e496d-242">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="e496d-242">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecimal">
      <MemberSignature Language="C#" Value="public decimal GetDecimal (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Decimal GetDecimal(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataRecord.GetDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDecimal (i As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Decimal GetDecimal(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="e496d-243">찾을 필드의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-243">The index of the field to find.</span></span></param>
        <summary><span data-ttu-id="e496d-244">지정된 필드의 고정 위치 숫자 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-244">Gets the fixed-position numeric value of the specified field.</span></span></summary>
        <returns><span data-ttu-id="e496d-245">지정된 필드의 고정 위치 숫자 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-245">The fixed-position numeric value of the specified field.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="e496d-246">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="e496d-246">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public double GetDouble (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 GetDouble(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataRecord.GetDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDouble (i As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetDouble(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="e496d-247">찾을 필드의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-247">The index of the field to find.</span></span></param>
        <summary><span data-ttu-id="e496d-248">지정된 필드의 배정밀도 부동 소수점 숫자를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-248">Gets the double-precision floating point number of the specified field.</span></span></summary>
        <returns><span data-ttu-id="e496d-249">지정된 필드의 배정밀도 부동 소수점 숫자입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-249">The double-precision floating point number of the specified field.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="e496d-250">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="e496d-250">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFieldType">
      <MemberSignature Language="C#" Value="public Type GetFieldType (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetFieldType(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataRecord.GetFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFieldType (i As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetFieldType(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="e496d-251">찾을 필드의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-251">The index of the field to find.</span></span></param>
        <summary><span data-ttu-id="e496d-252"><see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" />에서 반환되는 <see cref="T:System.Object" /> 형식에 해당하는 <see cref="T:System.Type" /> 정보를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-252">Gets the <see cref="T:System.Type" /> information corresponding to the type of <see cref="T:System.Object" /> that would be returned from <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" />.</span></span></summary>
        <returns><span data-ttu-id="e496d-253"><see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" />에서 반환되는 <see cref="T:System.Object" /> 형식에 해당하는 <see cref="T:System.Type" /> 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-253">The <see cref="T:System.Type" /> information corresponding to the type of <see cref="T:System.Object" /> that would be returned from <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e496d-254">이 정보를 호출 하는 강력한 형식의 접근자를 지정 하 여 성능을 향상 시키기 위해 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-254">This information can be used to increase performance by indicating the strongly-typed accessor to call.</span></span> <span data-ttu-id="e496d-255">(사용 하 여 예를 들어 `GetInt32` 는 약 10 배를 사용 하 여 보다 빠르게 `GetValue`.)</span><span class="sxs-lookup"><span data-stu-id="e496d-255">(for example, using `GetInt32` is roughly ten times faster than using `GetValue`.)</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="e496d-256">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="e496d-256">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public float GetFloat (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 GetFloat(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataRecord.GetFloat(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFloat (i As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; float GetFloat(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="e496d-257">찾을 필드의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-257">The index of the field to find.</span></span></param>
        <summary><span data-ttu-id="e496d-258">지정된 필드의 단정밀도 부동 소수점 숫자를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-258">Gets the single-precision floating point number of the specified field.</span></span></summary>
        <returns><span data-ttu-id="e496d-259">지정된 필드의 단정밀도 부동 소수점 숫자입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-259">The single-precision floating point number of the specified field.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="e496d-260">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="e496d-260">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public Guid GetGuid (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Guid GetGuid(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataRecord.GetGuid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGuid (i As Integer) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Guid GetGuid(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="e496d-261">찾을 필드의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-261">The index of the field to find.</span></span></param>
        <summary><span data-ttu-id="e496d-262">지정된 필드의 GUID 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-262">Returns the GUID value of the specified field.</span></span></summary>
        <returns><span data-ttu-id="e496d-263">지정된 필드의 GUID 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-263">The GUID value of the specified field.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="e496d-264">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="e496d-264">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt16">
      <MemberSignature Language="C#" Value="public short GetInt16 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int16 GetInt16(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataRecord.GetInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInt16 (i As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; short GetInt16(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="e496d-265">찾을 필드의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-265">The index of the field to find.</span></span></param>
        <summary><span data-ttu-id="e496d-266">지정된 필드의 부호 있는 16비트 정수 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-266">Gets the 16-bit signed integer value of the specified field.</span></span></summary>
        <returns><span data-ttu-id="e496d-267">지정된 필드의 부호 있는 16비트 정수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-267">The 16-bit signed integer value of the specified field.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="e496d-268">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="e496d-268">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public int GetInt32 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetInt32(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataRecord.GetInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInt32 (i As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetInt32(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="e496d-269">찾을 필드의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-269">The index of the field to find.</span></span></param>
        <summary><span data-ttu-id="e496d-270">지정된 필드의 부호 있는 32비트 정수 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-270">Gets the 32-bit signed integer value of the specified field.</span></span></summary>
        <returns><span data-ttu-id="e496d-271">지정된 필드의 부호 있는 32비트 정수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-271">The 32-bit signed integer value of the specified field.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="e496d-272">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="e496d-272">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt64">
      <MemberSignature Language="C#" Value="public long GetInt64 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetInt64(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataRecord.GetInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInt64 (i As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long GetInt64(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="e496d-273">찾을 필드의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-273">The index of the field to find.</span></span></param>
        <summary><span data-ttu-id="e496d-274">지정된 필드의 부호 있는 64비트 정수 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-274">Gets the 64-bit signed integer value of the specified field.</span></span></summary>
        <returns><span data-ttu-id="e496d-275">지정된 필드의 부호 있는 64비트 정수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-275">The 64-bit signed integer value of the specified field.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="e496d-276">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="e496d-276">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public string GetName (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetName(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataRecord.GetName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetName (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetName(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="e496d-277">찾을 필드의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-277">The index of the field to find.</span></span></param>
        <summary><span data-ttu-id="e496d-278">찾을 필드의 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-278">Gets the name for the field to find.</span></span></summary>
        <returns><span data-ttu-id="e496d-279">필드의 이름이거나 반환할 값이 없는 경우 빈 문자열("")입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-279">The name of the field or the empty string (""), if there is no value to return.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="e496d-280">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="e496d-280">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetOrdinal">
      <MemberSignature Language="C#" Value="public int GetOrdinal (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetOrdinal(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataRecord.GetOrdinal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrdinal (name As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetOrdinal(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e496d-281">찾을 필드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-281">The name of the field to find.</span></span></param>
        <summary><span data-ttu-id="e496d-282">명명된 필드의 인덱스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-282">Return the index of the named field.</span></span></summary>
        <returns><span data-ttu-id="e496d-283">명명된 필드의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-283">The index of the named field.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e496d-284">`GetOrdinal` 대/소문자 구분 조회를 먼저 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-284">`GetOrdinal` performs a case-sensitive lookup first.</span></span> <span data-ttu-id="e496d-285">실패 한 경우에 두 번째 대/소문자 구분 검색이 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-285">If it fails, a second case-insensitive search is made.</span></span> <span data-ttu-id="e496d-286">`GetOrdinal` 가 되지 일본어가 나 너비 구분 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-286">`GetOrdinal` is kana-width insensitive.</span></span> <span data-ttu-id="e496d-287">지정된 된 필드의 인덱스 없으면는 `IndexOutOfRangeException` throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-287">If the index of the named field is not found, an `IndexOutOfRangeException` is thrown.</span></span>  
  
 <span data-ttu-id="e496d-288">서 수 기반 조회가 명명 된 조회 보다 효율적 이므로, 것이 없습니다 효율적 호출 `GetOrdinal` 루프 내에서.</span><span class="sxs-lookup"><span data-stu-id="e496d-288">Because ordinal-based lookups are more efficient than named lookups, it is inefficient to call `GetOrdinal` within a loop.</span></span> <span data-ttu-id="e496d-289">호출 하 여 시간 절약 `GetOrdinal` 을 한 번 루프 내에서 사용할 정수 변수에 결과 할당 합니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-289">Save time by calling `GetOrdinal` one time and assigning the results to an integer variable for use within the loop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e496d-290">다음 예제에서는 상속 된 사용 하는 방법을 <xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e496d-290">The following example demonstrates how to use the inherited <xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData OdbcDataReader.GetOrdinal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcDataReader.GetOrdinal/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcDataReader.GetOrdinal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcDataReader.GetOrdinal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public string GetString (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetString(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataRecord.GetString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetString (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetString(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="e496d-291">찾을 필드의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-291">The index of the field to find.</span></span></param>
        <summary><span data-ttu-id="e496d-292">지정된 필드의 문자열 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-292">Gets the string value of the specified field.</span></span></summary>
        <returns><span data-ttu-id="e496d-293">지정된 필드의 문자열 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-293">The string value of the specified field.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="e496d-294">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="e496d-294">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataRecord.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="e496d-295">찾을 필드의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-295">The index of the field to find.</span></span></param>
        <summary><span data-ttu-id="e496d-296">지정된 필드의 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-296">Return the value of the specified field.</span></span></summary>
        <returns><span data-ttu-id="e496d-297">반환될 때 필드 값을 포함할 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-297">The <see cref="T:System.Object" /> which will contain the field value upon return.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="e496d-298">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="e496d-298">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public int GetValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataRecord.GetValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="e496d-299">특성 필드를 복사할 <see cref="T:System.Object" />의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-299">An array of <see cref="T:System.Object" /> to copy the attribute fields into.</span></span></param>
        <summary><span data-ttu-id="e496d-300">현재 레코드의 열 값으로 개체의 배열을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-300">Populates an array of objects with the column values of the current record.</span></span></summary>
        <returns><span data-ttu-id="e496d-301">배열에 포함된 <see cref="T:System.Object" /> 인스턴스의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-301">The number of instances of <see cref="T:System.Object" /> in the array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e496d-302">대부분의 응용 프로그램의 <xref:System.Data.IDataRecord.GetValues%2A> 메서드 각 열을 개별적으로 검색 하는 대신 모든 열을 검색 하는 효율적인 방법을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-302">For most applications, the <xref:System.Data.IDataRecord.GetValues%2A> method provides an efficient means for retrieving all columns, instead of retrieving each column individually.</span></span>  
  
 <span data-ttu-id="e496d-303">전달할 수는 <xref:System.Object> 보다 적은 수의 결과 행에 포함 된 열에 포함 된 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-303">You can pass an <xref:System.Object> array that contains fewer than the number of columns that are contained in the resulting row.</span></span> <span data-ttu-id="e496d-304">데이터의 양만 <xref:System.Object> 배열 저장 배열에 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-304">Only the amount of data the <xref:System.Object> array holds is copied to the array.</span></span> <span data-ttu-id="e496d-305">전달할 수도 있습니다는 <xref:System.Object> 배열 길이가 결과 행에 포함 된 열 수를 초과 합니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-305">You can also pass an <xref:System.Object> array whose length is more than the number of columns that are contained in the resulting row.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public bool IsDBNull (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDBNull(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataRecord.IsDBNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDBNull (i As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDBNull(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="e496d-306">찾을 필드의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-306">The index of the field to find.</span></span></param>
        <summary><span data-ttu-id="e496d-307">지정된 필드가 null로 설정되었는지 여부를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-307">Return whether the specified field is set to null.</span></span></summary>
        <returns>
          <span data-ttu-id="e496d-308">지정된 필드가 null로 설정되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-308"><see langword="true" /> if the specified field is set to null; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e496d-309">형식화 된 get 메서드를 호출 하기 전에 null 열 값 있는지 확인 하려면이 메서드를 호출 (예를 들어 <xref:System.Data.SqlClient.SqlDataReader.GetByte%2A>, <xref:System.Data.SqlClient.SqlDataReader.GetChar%2A>등)에 오류가 발생 하지 않도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-309">Call this method to see if there are null column values before calling the typed get methods (for example, <xref:System.Data.SqlClient.SqlDataReader.GetByte%2A>, <xref:System.Data.SqlClient.SqlDataReader.GetChar%2A>, and so on) to avoid raising an error.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="e496d-310">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="e496d-310">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e496d-311">지정된 열을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-311">Gets the specified column.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int i] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataRecord.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int i); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="e496d-312">가져올 열의 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-312">The zero-based index of the column to get.</span></span></param>
        <summary><span data-ttu-id="e496d-313">지정된 인덱스에 있는 열을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-313">Gets the column located at the specified index.</span></span></summary>
        <value><span data-ttu-id="e496d-314"><see cref="T:System.Object" />의 지정된 인덱스 위치에 있는 열입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-314">The column located at the specified index as an <see cref="T:System.Object" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="e496d-315">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="e496d-315">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataRecord.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e496d-316">찾을 열의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-316">The name of the column to find.</span></span></param>
        <summary><span data-ttu-id="e496d-317">지정된 이름을 가진 열을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-317">Gets the column with the specified name.</span></span></summary>
        <value><span data-ttu-id="e496d-318"><see cref="T:System.Object" />로 지정된 이름을 갖는 열입니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-318">The column with the specified name as an <see cref="T:System.Object" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e496d-319">대/소문자 구분 조회를 먼저 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-319">A case-sensitive lookup is performed first.</span></span> <span data-ttu-id="e496d-320">실패 한 경우에 두 번째 대/소문자 구분 검색이 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-320">If it fails, a second case-insensitive search is made.</span></span>  
  
 <span data-ttu-id="e496d-321">이 메서드는 일본어가 나 너비 구분 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e496d-321">This method is kana-width insensitive.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="e496d-322">지정된 이름의 열을 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e496d-322">No column with the specified name was found.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>