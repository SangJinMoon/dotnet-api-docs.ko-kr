<Type Name="DataColumn" FullName="System.Data.DataColumn">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c319d3c600dc2e2da64f51a76ba9219295794b79" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataColumn : System.ComponentModel.MarshalByValueComponent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataColumn extends System.ComponentModel.MarshalByValueComponent" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataColumn" />
  <TypeSignature Language="VB.NET" Value="Public Class DataColumn&#xA;Inherits MarshalByValueComponent" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataColumn : System::ComponentModel::MarshalByValueComponent" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.MarshalByValueComponent</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("ColumnName")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataColumnEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="5305c-101">
        <see cref="T:System.Data.DataTable" />에 있는 열의 스키마를 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5305c-101">Represents the schema of a column in a <see cref="T:System.Data.DataTable" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5305c-102"><xref:System.Data.DataColumn> 의 스키마를 만들기 위한 기본 빌딩 블록은 한 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-102">The <xref:System.Data.DataColumn> is the fundamental building block for creating the schema of a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="5305c-103">하나 이상의 추가 하 여 스키마를 빌드합니다 <xref:System.Data.DataColumn> 개체는 <xref:System.Data.DataColumnCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-103">You build the schema by adding one or more <xref:System.Data.DataColumn> objects to the <xref:System.Data.DataColumnCollection>.</span></span> <span data-ttu-id="5305c-104">자세한 내용은 참조 [DataTable에 열 추가](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-104">For more information, see [Adding Columns to a DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable.md).</span></span>  
  
 <span data-ttu-id="5305c-105">각 <xref:System.Data.DataColumn> 에 <xref:System.Data.DataColumn.DataType%2A> 속성 데이터의 종류를 결정 하는 <xref:System.Data.DataColumn> 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-105">Each <xref:System.Data.DataColumn> has a <xref:System.Data.DataColumn.DataType%2A> property that determines the kind of data the <xref:System.Data.DataColumn> contains.</span></span> <span data-ttu-id="5305c-106">예를 들어 데이터 형식을 문자열, 정수 또는 10 진수를 제한할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-106">For example, you can restrict the data type to integers, or strings, or decimals.</span></span> <span data-ttu-id="5305c-107">때문에 특성에 포함 된 데이터는 <xref:System.Data.DataTable> 병합 일반적으로 다시 원래 데이터 원본에 데이터 원본에서 데이터 형식을 일치 시켜야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-107">Because data that is contained by the <xref:System.Data.DataTable> is typically merged back into its original data source, you must match the data types to those in the data source.</span></span> <span data-ttu-id="5305c-108">자세한 내용은 참조 [ADO.NET에서 데이터 형식 매핑을](~/docs/framework/data/adonet/data-type-mappings-in-ado-net.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-108">For more information, see [Data Type Mappings in ADO.NET](~/docs/framework/data/adonet/data-type-mappings-in-ado-net.md).</span></span>  
  
 <span data-ttu-id="5305c-109">와 같은 <xref:System.Data.DataColumn.AllowDBNull%2A>, <xref:System.Data.DataColumn.Unique%2A>, 및 <xref:System.Data.DataColumn.ReadOnly%2A> 항목 및 업데이트 함으로써 데이터 무결성 보장 하기 위해 데이터를 제한 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-109">Properties such as <xref:System.Data.DataColumn.AllowDBNull%2A>, <xref:System.Data.DataColumn.Unique%2A>, and <xref:System.Data.DataColumn.ReadOnly%2A> put restrictions on the entry and updating of data, thereby helping to guarantee data integrity.</span></span> <span data-ttu-id="5305c-110">사용할 수도 있습니다는 <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, 및 <xref:System.Data.DataColumn.AutoIncrementStep%2A> 자동 데이터 생성을 제어 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-110">You can also use the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties to control automatic data generation.</span></span> <span data-ttu-id="5305c-111">에 대 한 자세한 내용은 <xref:System.Data.DataColumn.AutoIncrement%2A> 열 참조 [AutoIncrement 열 만들기](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-autoincrement-columns.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-111">For more information about <xref:System.Data.DataColumn.AutoIncrement%2A> columns, see [Creating AutoIncrement Columns](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-autoincrement-columns.md).</span></span> <span data-ttu-id="5305c-112">자세한 내용은 참조 [기본 키 정의](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-112">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
 <span data-ttu-id="5305c-113">에 있는 값이 있는지 확인 수는 <xref:System.Data.DataColumn> 는 만들어 고유는 <xref:System.Data.UniqueConstraint> 추가 하는 <xref:System.Data.ConstraintCollection> 의 <xref:System.Data.DataTable> 입니다는 <xref:System.Data.DataColumn> 속한 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-113">You can also make sure that values in a <xref:System.Data.DataColumn> are unique by creating a <xref:System.Data.UniqueConstraint> and adding it to the <xref:System.Data.ConstraintCollection> of the <xref:System.Data.DataTable> to which the <xref:System.Data.DataColumn> belongs.</span></span> <span data-ttu-id="5305c-114">자세한 내용은 참조 [DataTable 제약 조건](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-114">For more information, see [DataTable Constraints](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md).</span></span>  
  
 <span data-ttu-id="5305c-115">간의 관계를 만들려면 <xref:System.Data.DataColumn> 개체를 만듭니다는 <xref:System.Data.DataRelation> 개체에 추가 하는 <xref:System.Data.DataRelationCollection> 의 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-115">To create a relation between <xref:System.Data.DataColumn> objects, create a <xref:System.Data.DataRelation> object and add it to the <xref:System.Data.DataRelationCollection> of a <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="5305c-116">사용할 수 있습니다는 <xref:System.Data.DataColumn.Expression%2A> 의 속성에서 <xref:System.Data.DataColumn> 집계 열을 만들거나 열에 값을 계산 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-116">You can use the <xref:System.Data.DataColumn.Expression%2A> property of the <xref:System.Data.DataColumn> object to calculate the values in a column, or create an aggregate column.</span></span> <span data-ttu-id="5305c-117">자세한 내용은 참조 [식 열 만들기](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-expression-columns.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-117">For more information, see [Creating Expression Columns](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-expression-columns.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5305c-118">다음 예제에서는 한 <xref:System.Data.DataTable> 여러 <xref:System.Data.DataColumn> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-118">The following example creates a <xref:System.Data.DataTable> with several <xref:System.Data.DataColumn> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="5305c-119">이 형식은 다중 스레드 읽기 작업에 안전 합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5305c-119">This type is safe for multithreaded read operations.</span>
      </span>
      <span data-ttu-id="5305c-120">쓰기 작업을 동기화 해야 합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5305c-120">You must synchronize any write operations.</span>
      </span>
    </threadsafe>
    <altmember cref="M:System.Data.DataColumnCollection.Add(System.Data.DataColumn)" />
    <altmember cref="T:System.Data.DataColumnCollection" />
    <altmember cref="P:System.Data.DataTable.Constraints" />
    <altmember cref="T:System.Data.ConstraintCollection" />
    <altmember cref="T:System.Windows.Forms.DataGrid" />
    <altmember cref="T:System.Data.DataRow" />
    <altmember cref="T:System.Data.DataTable" />
    <altmember cref="T:System.Data.DataSet" />
    <altmember cref="M:System.Data.DataTable.NewRow" />
    <altmember cref="T:System.Data.DataRowCollection" />
    <altmember cref="T:System.Data.UniqueConstraint" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5305c-121">
            <see cref="T:System.Data.DataColumn" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-121">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5305c-122">
            <see cref="T:System.Data.DataColumn" /> 클래스의 새 인스턴스를 형식 문자열로 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-122">Initializes a new instance of a <see cref="T:System.Data.DataColumn" /> class as type string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5305c-123">를 만들 때 한 <xref:System.Data.DataColumn> 개체에 기본값이 없으면 <xref:System.Data.DataColumn.ColumnName%2A> 또는 <xref:System.Data.DataColumn.Caption%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-123">When created, a <xref:System.Data.DataColumn> object has no default <xref:System.Data.DataColumn.ColumnName%2A> or <xref:System.Data.DataColumn.Caption%2A>.</span></span> <span data-ttu-id="5305c-124">에 추가 하는 경우는 <xref:System.Data.DataColumnCollection>, 이름에 할당 되지 않은 경우 ("Column1", "Column2" 등)는 기본 이름이 생성 됩니다는 <xref:System.Data.DataColumn.ColumnName%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-124">When you add it to a <xref:System.Data.DataColumnCollection>, a default name ("Column1", "Column2", and so on) will be generated if a name has not been assigned to the <xref:System.Data.DataColumn.ColumnName%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5305c-125">다음 예제에서는 새 <xref:System.Data.DataColumn>만들고 다양 한 속성을 설정한 다음에 추가 <xref:System.Data.DataColumnCollection> 에 대 한는 <xref:System.Data.DataTable> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-125">The following example creates a new <xref:System.Data.DataColumn>, sets various properties, and adds it to a <xref:System.Data.DataColumnCollection> for the <xref:System.Data.DataTable> object.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">
          <span data-ttu-id="5305c-126">만들 열의 이름을 나타내는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-126">A string that represents the name of the column to be created.</span>
          </span>
          <span data-ttu-id="5305c-127">이 속성 값이 <see langword="null" /> 또는 빈 문자열("")로 설정되면 열 컬렉션에 추가될 때 기본 이름이 지정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-127">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5305c-128">지정된 열 이름을 사용하여 <see cref="T:System.Data.DataColumn" /> 클래스의 새 인스턴스를 형식 문자열로 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-128">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class, as type string, using the specified column name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5305c-129">기본적으로 열에 특정 이름이 됩니다는 <xref:System.Data.DataColumn.Caption%2A> 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-129">By default, the name specific to a column becomes the <xref:System.Data.DataColumn.Caption%2A> property value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5305c-130">다음 예제에서는 새 <xref:System.Data.DataColumn> 를 지정 된 <xref:System.Data.DataColumn.ColumnName%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-130">The following example creates a new <xref:System.Data.DataColumn> with a specified <xref:System.Data.DataColumn.ColumnName%2A>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName, Type dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName, class System.Type dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnName As String, dataType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName, Type ^ dataType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="dataType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="columnName">
          <span data-ttu-id="5305c-131">만들 열의 이름을 나타내는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-131">A string that represents the name of the column to be created.</span>
          </span>
          <span data-ttu-id="5305c-132">이 속성 값이 <see langword="null" /> 또는 빈 문자열("")로 설정되면 열 컬렉션에 추가될 때 기본 이름이 지정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-132">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span>
          </span>
        </param>
        <param name="dataType">
          <span data-ttu-id="5305c-133">지원되는 <see cref="P:System.Data.DataColumn.DataType" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-133">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5305c-134">지정된 열 이름과 데이터 형식을 사용하여 <see cref="T:System.Data.DataColumn" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-134">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified column name and data type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5305c-135">다음 예제에서는 새 <xref:System.Data.DataColumn> 를 지정 된 <xref:System.Data.DataColumn.ColumnName%2A> 및 <xref:System.Data.DataColumn.DataType%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-135">The following example creates a new <xref:System.Data.DataColumn> with a specified <xref:System.Data.DataColumn.ColumnName%2A> and <xref:System.Data.DataColumn.DataType%2A>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5305c-136">
            <paramref name="dataType" />이 지정되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-136">No <paramref name="dataType" /> was specified.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName, Type dataType, string expr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName, class System.Type dataType, string expr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnName As String, dataType As Type, expr As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName, Type ^ dataType, System::String ^ expr);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="dataType" Type="System.Type" />
        <Parameter Name="expr" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">
          <span data-ttu-id="5305c-137">만들 열의 이름을 나타내는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-137">A string that represents the name of the column to be created.</span>
          </span>
          <span data-ttu-id="5305c-138">이 속성 값이 <see langword="null" /> 또는 빈 문자열("")로 설정되면 열 컬렉션에 추가될 때 기본 이름이 지정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-138">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span>
          </span>
        </param>
        <param name="dataType">
          <span data-ttu-id="5305c-139">지원되는 <see cref="P:System.Data.DataColumn.DataType" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-139">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span>
          </span>
        </param>
        <param name="expr">
          <span data-ttu-id="5305c-140">이 열을 만드는 데 사용되는 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-140">The expression used to create this column.</span>
          </span>
          <span data-ttu-id="5305c-141">자세한 내용은 <see cref="P:System.Data.DataColumn.Expression" /> 속성을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-141">For more information, see the <see cref="P:System.Data.DataColumn.Expression" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5305c-142">지정된 이름, 데이터 형식 및 식을 사용하여 <see cref="T:System.Data.DataColumn" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-142">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified name, data type, and expression.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5305c-143">다음 예에서는 계산된 열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-143">The following example creates a computed column.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5305c-144">
            <paramref name="dataType" />이 지정되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-144">No <paramref name="dataType" /> was specified.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName, Type dataType, string expr, System.Data.MappingType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName, class System.Type dataType, string expr, valuetype System.Data.MappingType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String,System.Data.MappingType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName, Type ^ dataType, System::String ^ expr, System::Data::MappingType type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="dataType" Type="System.Type" />
        <Parameter Name="expr" Type="System.String" />
        <Parameter Name="type" Type="System.Data.MappingType" />
      </Parameters>
      <Docs>
        <param name="columnName">
          <span data-ttu-id="5305c-145">만들 열의 이름을 나타내는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-145">A string that represents the name of the column to be created.</span>
          </span>
          <span data-ttu-id="5305c-146">이 속성 값이 <see langword="null" /> 또는 빈 문자열("")로 설정되면 열 컬렉션에 추가될 때 기본 이름이 지정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-146">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span>
          </span>
        </param>
        <param name="dataType">
          <span data-ttu-id="5305c-147">지원되는 <see cref="P:System.Data.DataColumn.DataType" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-147">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span>
          </span>
        </param>
        <param name="expr">
          <span data-ttu-id="5305c-148">이 열을 만드는 데 사용되는 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-148">The expression used to create this column.</span>
          </span>
          <span data-ttu-id="5305c-149">자세한 내용은 <see cref="P:System.Data.DataColumn.Expression" /> 속성을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-149">For more information, see the <see cref="P:System.Data.DataColumn.Expression" /> property.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="5305c-150">
            <see cref="T:System.Data.MappingType" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-150">One of the <see cref="T:System.Data.MappingType" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5305c-151">열이 특성 열인지 여부를 결정하는 값, 지정된 이름, 데이터 형식 및 식을 사용하여 <see cref="T:System.Data.DataColumn" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-151">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified name, data type, expression, and value that determines whether the column is an attribute.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5305c-152">`type` 인수 집합은 <xref:System.Data.DataColumn.ColumnMapping%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-152">The `type` argument sets the <xref:System.Data.DataColumn.ColumnMapping%2A> property.</span></span> <span data-ttu-id="5305c-153">속성은 지정 방법을 <xref:System.Data.DataColumn> 때 매핑되는 <xref:System.Data.DataSet> XML 문서로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-153">The property specifies how a <xref:System.Data.DataColumn> is mapped when a <xref:System.Data.DataSet> is transformed into an XML document.</span></span> <span data-ttu-id="5305c-154">예를 들어 열 이름이 "fName" 및 포함 된 값이 "Bob" 및 `type` 로 설정 된 `MappingType.Attribute`, XML 요소는 다음과 같은 것:</span><span class="sxs-lookup"><span data-stu-id="5305c-154">For example, if the column is named "fName," and the value it contains is "Bob," and `type` is set to `MappingType.Attribute`, the XML element would be as follows:</span></span>  
  
 <span data-ttu-id="5305c-155">\<Name fName = 'Bob'/></span><span class="sxs-lookup"><span data-stu-id="5305c-155">\<Name fName = 'Bob'/></span></span>  
  
 <span data-ttu-id="5305c-156">열 요소 또는 특성에 매핑되는 방법에 대 한 자세한 내용은 참조는 <xref:System.Data.DataColumn.ColumnMapping%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-156">For more information about how columns are mapped to elements or attributes, see the <xref:System.Data.DataColumn.ColumnMapping%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5305c-157">다음 예에서는 계산된 열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-157">The following example constructs a computed column.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5305c-158">
            <paramref name="dataType" />이 지정되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-158">No <paramref name="dataType" /> was specified.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.ColumnMapping" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
      </Docs>
    </Member>
    <Member MemberName="AllowDBNull">
      <MemberSignature Language="C#" Value="public bool AllowDBNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDBNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AllowDBNull" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDBNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDBNull { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5305c-159">테이블에 속해 있는 행의 이 열에 null 값이 허용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-159">Gets or sets a value that indicates whether null values are allowed in this column for rows that belong to the table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5305c-160">null 값이 허용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-160">
              <see langword="true" /> if null values values are allowed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="5305c-161">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-161">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5305c-162">다음 예제에서는 새 <xref:System.Data.DataColumn> 설정 하 고 해당 <xref:System.Data.DataColumn.AllowDBNull%2A> 속성을 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-162">The following example creates a new <xref:System.Data.DataColumn> and sets its <xref:System.Data.DataColumn.AllowDBNull%2A> property to `true`.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AllowDBNull Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AllowDBNull Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AllowDBNull Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AllowDBNull Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.Unique" />
      </Docs>
    </Member>
    <Member MemberName="AutoIncrement">
      <MemberSignature Language="C#" Value="public bool AutoIncrement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoIncrement" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AutoIncrement" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoIncrement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoIncrement { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5305c-163">테이블에 추가되는 새 행의 열 값이 자동으로 증가되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-163">Gets or sets a value that indicates whether the column automatically increments the value of the column for new rows added to the table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5305c-164">열 값이 자동으로 증가되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-164">
              <see langword="true" /> if the value of the column increments automatically; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="5305c-165">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-165">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5305c-166">없으면이 열 형식은 Int16, Int32 또는 i n t 64이이 속성이 설정 된 경우는 <xref:System.Data.DataColumn.DataType%2A> 속성 Int32 강제 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-166">If the type of this column is not Int16, Int32, or Int64 when this property is set, the <xref:System.Data.DataColumn.DataType%2A> property is coerced to Int32.</span></span> <span data-ttu-id="5305c-167">계산된 열이 있는 경우 예외가 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-167">An exception is generated if this is a computed column.</span></span> <span data-ttu-id="5305c-168"><xref:System.Data.DataColumn.Expression%2A> 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-168">The <xref:System.Data.DataColumn.Expression%2A> property is set.</span></span> <span data-ttu-id="5305c-169">증가 한 값은 columns 컬렉션에 추가 될 때이 열에 대 한 행의 값은 기본값을 사용 하는 경우에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-169">The incremented value is used only if the row's value for this column, when added to the columns collection, is equal to the default value.</span></span>  
  
 <span data-ttu-id="5305c-170">사용 하 여 새 행을 만들 수 있습니다는 <xref:System.Data.DataRow.ItemArray%2A> 의 속성은 <xref:System.Data.DataRow> 클래스 및 값의 배열에 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-170">You can create a new row using the <xref:System.Data.DataRow.ItemArray%2A> property of the <xref:System.Data.DataRow> class and passing in an array of values.</span></span> <span data-ttu-id="5305c-171">이 지정 된 열에 대 한 잠재적인 문제를 해당 <xref:System.Data.DataColumn.AutoIncrement%2A> 로 설정 `true`이므로 해당 값이 자동으로 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-171">This is a potential problem for a column with its <xref:System.Data.DataColumn.AutoIncrement%2A> set to `true`, because its value is generated automatically.</span></span> <span data-ttu-id="5305c-172">사용 하는 <xref:System.Data.DataRow.ItemArray%2A> 속성, 현재 위치 `null` 배열에 있는 열의 위치에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-172">To use the <xref:System.Data.DataRow.ItemArray%2A> property, place `null` in the column's position in the array.</span></span> <span data-ttu-id="5305c-173">자세한 내용은 참조는 <xref:System.Data.DataRow.ItemArray%2A> 의 속성은 <xref:System.Data.DataRow> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-173">For more information, see the <xref:System.Data.DataRow.ItemArray%2A> property of the <xref:System.Data.DataRow> class.</span></span>  
  
 <span data-ttu-id="5305c-174">열 형식이 <xref:System.Data.SqlTypes.SqlInt16> 또는 <xref:System.Data.SqlTypes.SqlInt32>, <xref:System.Data.DataColumn.AutoIncrement%2A> 작동 하지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-174">If the type of the column is <xref:System.Data.SqlTypes.SqlInt16> or <xref:System.Data.SqlTypes.SqlInt32>, <xref:System.Data.DataColumn.AutoIncrement%2A> will not work.</span></span> <span data-ttu-id="5305c-175">Int16 또는 i n t 32를 대신 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-175">Use Int16 or Int32 instead.</span></span>  
  
 <span data-ttu-id="5305c-176">열 형식이 <xref:System.Data.SqlTypes.SqlInt64> 또는 <xref:System.Data.SqlTypes.SqlDecimal>, <xref:System.Data.DataColumn.AutoIncrement%2A> 은 부분적 으로만 작동 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-176">If the type of the column is <xref:System.Data.SqlTypes.SqlInt64> or <xref:System.Data.SqlTypes.SqlDecimal>, <xref:System.Data.DataColumn.AutoIncrement%2A> will only partially work.</span></span> <span data-ttu-id="5305c-177">Int64 또는 10 진수를 대신 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-177">Use Int64 or Decimal instead.</span></span>  
  
 <span data-ttu-id="5305c-178">경우는 <xref:System.Data.DataColumn.AutoIncrementStep%2A> 값 현재 값에 추가 되는 오버플로 검사 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-178">When the <xref:System.Data.DataColumn.AutoIncrementStep%2A> value is added to the current value, the overflow check is suppressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5305c-179">다음 예에서는 <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, 및 <xref:System.Data.DataColumn.AutoIncrementStep%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-179">The following example sets the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5305c-180">열이 계산 열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-180">The column is a computed column.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.AutoIncrementSeed" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrementStep" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
        <altmember cref="M:System.Data.DataTable.NewRow" />
      </Docs>
    </Member>
    <Member MemberName="AutoIncrementSeed">
      <MemberSignature Language="C#" Value="public long AutoIncrementSeed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 AutoIncrementSeed" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AutoIncrementSeed" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoIncrementSeed As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long AutoIncrementSeed { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5305c-181">
            <see cref="P:System.Data.DataColumn.AutoIncrement" /> 속성이 <see langword="true" />로 설정된 열의 시작 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-181">Gets or sets the starting value for a column that has its <see cref="P:System.Data.DataColumn.AutoIncrement" /> property set to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="5305c-182">기본값은 0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-182">The default is 0.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5305c-183">
            <see cref="P:System.Data.DataColumn.AutoIncrement" />의 시작 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-183">The starting value for the <see cref="P:System.Data.DataColumn.AutoIncrement" /> feature.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5305c-184">다음 예에서는 <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, 및 <xref:System.Data.DataColumn.AutoIncrementStep%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-184">The following example sets the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrementStep" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
      </Docs>
    </Member>
    <Member MemberName="AutoIncrementStep">
      <MemberSignature Language="C#" Value="public long AutoIncrementStep { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 AutoIncrementStep" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AutoIncrementStep" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoIncrementStep As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long AutoIncrementStep { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5305c-185">
            <see cref="P:System.Data.DataColumn.AutoIncrement" /> 속성이 <see langword="true" />로 설정된 열에 사용되는 증분을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-185">Gets or sets the increment used by a column with its <see cref="P:System.Data.DataColumn.AutoIncrement" /> property set to <see langword="true" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5305c-186">열 값이 자동으로 증가되는 정도를 나타내는 숫자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-186">The number by which the value of the column is automatically incremented.</span>
          </span>
          <span data-ttu-id="5305c-187">기본값은 1입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-187">The default is 1.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5305c-188">다음 예에서는 <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, 및 <xref:System.Data.DataColumn.AutoIncrementStep%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-188">The following example sets the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5305c-189">설정된 값이 0인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-189">The value set is zero.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrementSeed" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5305c-190">열의 캡션을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-190">Gets or sets the caption for the column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5305c-191">열의 캡션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-191">The caption of the column.</span>
          </span>
          <span data-ttu-id="5305c-192">설정하지 않은 경우 <see cref="P:System.Data.DataColumn.ColumnName" /> 값이 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-192">If not set, returns the <see cref="P:System.Data.DataColumn.ColumnName" /> value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5305c-193">사용할 수는 <xref:System.Data.DataColumn.Caption%2A> 속성에 대 한 설명 또는 친숙 한 이름을 표시 하는 <xref:System.Data.DataColumn>합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-193">You can use the <xref:System.Data.DataColumn.Caption%2A> property to display a descriptive or friendly name for a <xref:System.Data.DataColumn>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5305c-194">다음 예제에서는 새 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-194">The following example creates a new <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="5305c-195">그런 다음 세 개의 추가 <xref:System.Data.DataColumn> 개체를 한 <xref:System.Data.DataColumnCollection> 설정는 <xref:System.Data.DataColumn.Caption%2A> 각 속성 <xref:System.Data.DataColumn>합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-195">It then adds three <xref:System.Data.DataColumn> objects to a <xref:System.Data.DataColumnCollection> and sets the <xref:System.Data.DataColumn.Caption%2A> property for each <xref:System.Data.DataColumn>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Caption Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Caption Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Caption Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Caption Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
      </Docs>
    </Member>
    <Member MemberName="CheckNotAllowNull">
      <MemberSignature Language="C#" Value="protected internal void CheckNotAllowNull ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void CheckNotAllowNull() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.CheckNotAllowNull" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub CheckNotAllowNull ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void CheckNotAllowNull();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5305c-196">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-196">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckUnique">
      <MemberSignature Language="C#" Value="protected void CheckUnique ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckUnique() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.CheckUnique" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CheckUnique ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CheckUnique();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5305c-197">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-197">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnMapping">
      <MemberSignature Language="C#" Value="public virtual System.Data.MappingType ColumnMapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.MappingType ColumnMapping" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ColumnMapping" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ColumnMapping As MappingType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::MappingType ColumnMapping { System::Data::MappingType get(); void set(System::Data::MappingType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.MappingType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5305c-198">열의 <see cref="T:System.Data.MappingType" />을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-198">Gets or sets the <see cref="T:System.Data.MappingType" /> of the column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5305c-199">
            <see cref="T:System.Data.MappingType" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-199">One of the <see cref="T:System.Data.MappingType" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5305c-200"><xref:System.Data.DataColumn.ColumnMapping%2A> 속성 결정 방법을 <xref:System.Data.DataColumn> 때 매핑되는 <xref:System.Data.DataSet> 사용 하 여 XML 문서 저장는 <xref:System.Data.DataSet.WriteXml%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5305c-200">The <xref:System.Data.DataColumn.ColumnMapping%2A> property determines how a <xref:System.Data.DataColumn> is mapped when a <xref:System.Data.DataSet> is saved as an XML document using the <xref:System.Data.DataSet.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="5305c-201">예를 들어 경우는 <xref:System.Data.DataColumn> "customerID" 라는 및 해당 <xref:System.Data.DataColumn.ColumnMapping%2A> 속성이로 설정 되어 `MappingType.Element`, 열 값에는 다음과 같은 XML 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-201">For example, if a <xref:System.Data.DataColumn> is named "customerID," and its <xref:System.Data.DataColumn.ColumnMapping%2A> property is set to `MappingType.Element`, the column value will produce the following XML:</span></span>  
  
```  
<Customers>  
 <customerID>ALFKI</customerID>  
......  
 </Customers>  
 <Orders>  
 <OrderID>12345</OrderID>  
 <customerID>ALFKI</customerID>  
......  
 </Orders>  
```  
  
 <span data-ttu-id="5305c-202">그러나 같은 열에 매핑된 경우 `MappingType.Attribute`, 다음 XML이 생성:</span><span class="sxs-lookup"><span data-stu-id="5305c-202">However, if the same column is mapped to `MappingType.Attribute`, the following XML is produced:</span></span>  
  
```  
<Customers customerID="ALFKI"........more attributes.....>  
 <Order orderID="1234"....more attributes..../>  
 <Order orderID="1234"....more attributes..../>  
...... More orders for this customer  
 </Customers>  
```  
  
 <span data-ttu-id="5305c-203">사용 하 여는 <xref:System.Data.DataColumn.%23ctor%2A> 생성자를 포함 하는 `type` 모두 지정 하는 방법에 대 한 인수는 <xref:System.Data.DataColumn> 경우 매핑된 해당 <xref:System.Data.DataSet> XML 문서를 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-203">Use the <xref:System.Data.DataColumn.%23ctor%2A> constructor that contains the `type` argument to specificy how the <xref:System.Data.DataColumn> is mapped when its <xref:System.Data.DataSet> is transformed to an XML document.</span></span>  
  
 <span data-ttu-id="5305c-204"><xref:System.Data.DataColumn.ColumnMapping%2A> 속성은 생성자 인수에 해당 `type`합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-204">The <xref:System.Data.DataColumn.ColumnMapping%2A> property corresponds to the constructor argument `type`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5305c-205">다음 예에서는 <xref:System.Data.DataColumn.ColumnMapping%2A> 형식 속성을 새 <xref:System.Data.DataColumn>합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-205">The following example sets the <xref:System.Data.DataColumn.ColumnMapping%2A> type property of new <xref:System.Data.DataColumn>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ColumnMapping Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnMapping Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ColumnMapping Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnMapping Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnName">
      <MemberSignature Language="C#" Value="public string ColumnName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ColumnName" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ColumnName" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ColumnName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5305c-206">
            <see cref="T:System.Data.DataColumnCollection" />의 열 이름을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-206">Gets or sets the name of the column in the <see cref="T:System.Data.DataColumnCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5305c-207">열 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-207">The name of the column.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5305c-208">경우는 <xref:System.Data.DataColumn> 는 no가 만들어지면 <xref:System.Data.DataColumn.ColumnName%2A> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-208">When a <xref:System.Data.DataColumn> is created, it has no <xref:System.Data.DataColumn.ColumnName%2A> value.</span></span> <span data-ttu-id="5305c-209">그러나 때는 <xref:System.Data.DataColumn> 에 추가 되는 <xref:System.Data.DataColumnCollection> 에 대 한는 <xref:System.Data.DataTable> 개체 ("Column1", "Column2" 등)는 기본 이름이 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-209">However, when the <xref:System.Data.DataColumn> is added to a <xref:System.Data.DataColumnCollection> for a <xref:System.Data.DataTable> object, it is given a default name ("Column1", "Column2", and so on).</span></span>  
  
 <span data-ttu-id="5305c-210">기본적으로는 <xref:System.Data.DataColumn.Caption%2A> 값으로 설정 됩니다는 <xref:System.Data.DataColumn.ColumnName%2A> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-210">By default, the <xref:System.Data.DataColumn.Caption%2A> value is set to the <xref:System.Data.DataColumn.ColumnName%2A> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5305c-211">다음 예에서는 가져옵니다는 <xref:System.Data.DataColumn.ColumnName%2A> 모든 테이블에 있는 모든 열에 대해 한 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-211">The following examples gets the <xref:System.Data.DataColumn.ColumnName%2A> for every column in every table in a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="5305c-212">이 예제를 만드는 방법도 보여 줍니다는 <xref:System.Data.DataColumn> 를 새 <xref:System.Data.DataColumn.ColumnName%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-212">The example also shows how to create a <xref:System.Data.DataColumn> with a new <xref:System.Data.DataColumn.ColumnName%2A>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ColumnName Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ColumnName Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5305c-213">속성이 <see langword="null" /> 또는 빈 문자열로 설정되어 있고 열이 컬렉션에 속한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-213">The property is set to <see langword="null" /> or an empty string and the column belongs to a collection.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DuplicateNameException">
          <span data-ttu-id="5305c-214">이름이 같은 열이 컬렉션에 이미 있는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-214">A column with the same name already exists in the collection.</span>
          </span>
          <span data-ttu-id="5305c-215">대/소문자를 구분하지 않고 이름을 비교합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-215">The name comparison is not case sensitive.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.Caption" />
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public Type DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DataType" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DataType { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.ColumnTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5305c-216">열에 저장된 데이터 형식을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-216">Gets or sets the type of data stored in the column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5305c-217">열 데이터 형식을 나타내는 <see cref="T:System.Type" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-217">A <see cref="T:System.Type" /> object that represents the column data type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5305c-218">설정의 <xref:System.Data.DataColumn.DataType%2A> 값은 반드시 올바로 만들고 및 데이터 원본의 데이터를에서 업데이트 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-218">Setting the <xref:System.Data.DataColumn.DataType%2A> value is very important to guaranteeing the correct creation and updating of data in a data source.</span></span>  
  
 <span data-ttu-id="5305c-219"><xref:System.Data.DataColumn.DataType%2A> 속성은 다음과 같은 기본.NET Framework 데이터 형식을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-219">The <xref:System.Data.DataColumn.DataType%2A> property supports the following base .NET Framework data types:</span></span>  
  
-   <xref:System.Boolean>  
  
-   <xref:System.Byte>  
  
-   <xref:System.Char>  
  
-   <xref:System.DateTime>  
  
-   <xref:System.Decimal>  
  
-   <xref:System.Double>  
  
-   <xref:System.Guid>  
  
-   <xref:System.Int16>  
  
-   <xref:System.Int32>  
  
-   <xref:System.Int64>  
  
-   <xref:System.SByte>  
  
-   <xref:System.Single>  
  
-   <xref:System.String>  
  
-   <xref:System.TimeSpan>  
  
-   <xref:System.UInt16>  
  
-   <xref:System.UInt32>  
  
-   <xref:System.UInt64>  
  
 <span data-ttu-id="5305c-220">다음 배열 형식을:</span><span class="sxs-lookup"><span data-stu-id="5305c-220">as well as the following array type:</span></span>  
  
-   `Byte[]`  
  
 <span data-ttu-id="5305c-221">데이터를 저장 하기 시작 된 열 뒤에이 속성을 변경 하는 경우 예외가 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-221">An exception is generated when changing this property after the column has begun storing data.</span></span>  
  
 <span data-ttu-id="5305c-222">경우 <xref:System.Data.DataColumn.AutoIncrement%2A> 로 설정 된 `true` 설정 하기 전에 <xref:System.Data.DataColumn.DataType%2A> 속성을 유형을 제외 하 고 정수 형식으로 설정 하려고, 예외가 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-222">If <xref:System.Data.DataColumn.AutoIncrement%2A> is set to `true` before setting the <xref:System.Data.DataColumn.DataType%2A> property, and you try to set the type to anything except an integer type, an exception is generated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5305c-223">데이터 형식의 열 `Byte[]` 이므로, 기본.NET Framework 데이터 형식과 달리, 참조 데이터 형식의 특정 한 경우에는 특별 한 처리를 필요로 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-223">A column of data type `Byte[]` requires special treatment in certain cases since, unlike the base .NET Framework data types, it is a reference data type.</span></span> <span data-ttu-id="5305c-224">데이터 형식의 열 `Byte[]` 로 사용 되는 <xref:System.Data.DataTable.PrimaryKey%2A>로 <xref:System.Data.DataView.Sort%2A> 또는 <xref:System.Data.DataView.RowFilter%2A> 에 대 한 키는 <xref:System.Data.DataView>, 열 값을 변경한 할당 해야는 `Byte[]` 별도로 인스턴스화된 열값`Byte[]` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-224">If a column of data type `Byte[]` is used as a <xref:System.Data.DataTable.PrimaryKey%2A>, or as a <xref:System.Data.DataView.Sort%2A> or <xref:System.Data.DataView.RowFilter%2A> key for a <xref:System.Data.DataView>, any change to the column value must involve assigning the `Byte[]` column value to a separately instantiated `Byte[]` object.</span></span> <span data-ttu-id="5305c-225">이 할당 정렬, 필터링 및 기본 키 작업에 의해 사용 되는 내부 인덱스의 업데이트를 트리거하도록 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-225">This assignment is required to trigger the update of the internal indexes used by sorting, filtering, and primary key operations.</span></span> <span data-ttu-id="5305c-226">다음 예제에서 이를 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-226">This is illustrated by the following example:</span></span>  
  
```  
byte[] columnValue = (byte[])myDataTable.Rows[0][0];  
byte[] newValue = (byte[])columnValue.Clone();  
newValue[1] = 2;  
myDataTable.Rows[0][0] = newValue;  
```  
  
> [!NOTE]
>  <span data-ttu-id="5305c-227">기본.NET Framework 데이터 형식 이외의 다른 데이터 형식의 열을 정의할 수 있지만 및 `Byte[]`, 이러한 열은 다음과 같은 사용 제한에 따라 사용자 정의 형식으로 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-227">Although it is possible to define a column as data type other than the base .NET Framework data types and `Byte[]`, such a column will be treated as a user-defined type, subject to the following usage restrictions.</span></span> <span data-ttu-id="5305c-228">(사용자 정의 형식에 대 한 자세한 내용은 참조 하십시오. [만들기 및 사용자 형식](http://msdn.microsoft.com/library/ec0266d2-7e5b-47e4-938a-85ac9d04fa40).)</span><span class="sxs-lookup"><span data-stu-id="5305c-228">(For more information on user-defined types, see [Creating and Using User-Defined Types](http://msdn.microsoft.com/library/ec0266d2-7e5b-47e4-938a-85ac9d04fa40).)</span></span>  
  
-   <span data-ttu-id="5305c-229">열에 포함 될 수 없습니다는 <xref:System.Data.DataView.RowFilter%2A> 또는 <xref:System.Data.DataTable.Select%2A> 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-229">The column cannot be part of a <xref:System.Data.DataView.RowFilter%2A> or <xref:System.Data.DataTable.Select%2A> expression.</span></span>  
  
-   <span data-ttu-id="5305c-230">열으로 사용 되는 경우는 <xref:System.Data.DataTable.PrimaryKey%2A>로 <xref:System.Data.DataView.Sort%2A> 또는 <xref:System.Data.DataView>를 변경할 수 없는 필드로 처리 해야 합니다; 테이블에 추가 되 면 열 데이터를 변경 하지 않아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-230">If the column is used as a <xref:System.Data.DataTable.PrimaryKey%2A>, or as a <xref:System.Data.DataView.Sort%2A> or for a <xref:System.Data.DataView>, it must be treated as an immutable field; the column data must not be changed once it has been added to the table.</span></span>  
  
-   <span data-ttu-id="5305c-231">해당 <xref:System.Data.DataColumn.ColumnMapping%2A> 로 설정할 수 있습니다 `MappingType.Element`합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-231">Its <xref:System.Data.DataColumn.ColumnMapping%2A> can be only set to `MappingType.Element`.</span></span>  
  
-   <span data-ttu-id="5305c-232">열의 데이터 형식이 있어야 구현으로 표시 해야 하는 클래스는 <xref:System.SerializableAttribute>, 필요한 경우 구현 하는 경우는 <xref:System.Runtime.Serialization.ISerializable> 또는 <xref:System.Xml.Serialization.IXmlSerializable> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-232">The class that implements the column’s data type must be must be marked with the <xref:System.SerializableAttribute>, and if necessary implement the <xref:System.Runtime.Serialization.ISerializable> or <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span>  
  
-   <span data-ttu-id="5305c-233">변경 내용 추적에 대 한 지원은 제한 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-233">Support for change tracking is limited.</span></span> <span data-ttu-id="5305c-234">활용 하는 <xref:System.Data.DataTable> 클래스의 변경 내용 추적 메커니즘을 열의 데이터 형식을 구현 하는 클래스를 구현는 <xref:System.ComponentModel.IChangeTracking> 인터페이스, 또는 알리는 하는 것에 대 한 책임은 <xref:System.Data.DataRow> 열 값이 된 경우 호출 하거나 수정 <xref:System.Data.DataRow.SetModified%2A> 행 또는 열 값 개체를 개별적으로 인스턴스화된 열 값 개체를 할당 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-234">To utilize the <xref:System.Data.DataTable> class’s change tracking mechanism, the class that implements the column’s data type must either implement the <xref:System.ComponentModel.IChangeTracking> interface, or take over the responsibility for informing the <xref:System.Data.DataRow> when the column value has been modified, either by calling <xref:System.Data.DataRow.SetModified%2A> on the row or by assigning the column value object to a separately instantiated column value object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5305c-235">에 여러 데이터 형식의 열을 추가 하는 다음 예제는 <xref:System.Data.DataTable>, 다음 테이블에 하나의 행을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-235">The following example adds columns of several data types to a <xref:System.Data.DataTable>, and then adds one row to the table.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataType Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataType Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataType Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5305c-236">열에 저장된 데이터가 이미 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-236">The column already has data stored.</span>
          </span>
        </exception>
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Type.GetType" />
      </Docs>
    </Member>
    <Member MemberName="DateTimeMode">
      <MemberSignature Language="C#" Value="public System.Data.DataSetDateTime DateTimeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataSetDateTime DateTimeMode" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.DateTimeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DateTimeMode As DataSetDateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataSetDateTime DateTimeMode { System::Data::DataSetDateTime get(); void set(System::Data::DataSetDateTime value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataSetDateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5305c-237">열의 <see langword="DateTimeMode" />를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-237">Gets or sets the <see langword="DateTimeMode" /> for the column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5305c-238">지정된 열의 <see cref="T:System.Data.DataSetDateTime" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-238">The <see cref="T:System.Data.DataSetDateTime" /> for the specified column.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5305c-239"><xref:System.Data.DataColumn.DateTimeMode%2A> 행에 추가 된 후에 수정할 수 없습니다는 <xref:System.Data.DataColumn>에서 수정 하는 제외 하 고 <xref:System.Data.DataSetDateTime.Unspecified> 및 <xref:System.Data.DataSetDateTime.UnspecifiedLocal> 또는 그 반대입니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-239">The <xref:System.Data.DataColumn.DateTimeMode%2A> cannot be modified after rows are added to a <xref:System.Data.DataColumn>, except for modifying from <xref:System.Data.DataSetDateTime.Unspecified> and <xref:System.Data.DataSetDateTime.UnspecifiedLocal> or vice-versa.</span></span> <span data-ttu-id="5305c-240">수정 `UnspecifiedLocal` 를 `Unspecified` 있으며 반대의 이러한 두 옵션 간의 차이점 serialization 중에 하 고 저장소는 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-240">The modification from `UnspecifiedLocal` to `Unspecified` and vice-versa is allowed as the difference between these two options is only during serialization and does not affect the storage.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultValue">
      <MemberSignature Language="C#" Value="public object DefaultValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.DefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.DefaultValueTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5305c-241">새 행을 만들 때 열의 기본값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-241">Gets or sets the default value for the column when you are creating new rows.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5305c-242">열의 <see cref="P:System.Data.DataColumn.DataType" />에 적합한 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-242">A value appropriate to the column's <see cref="P:System.Data.DataColumn.DataType" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5305c-243">기본값은 열에 자동으로 할당 된 값 때는 <xref:System.Data.DataRow> 만들어집니다 (예를 들어 날짜와 시간을 <xref:System.Data.DataRow> 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-243">A default value is the value that is automatically assigned to the column when a <xref:System.Data.DataRow> is created (for example, the date and time when the <xref:System.Data.DataRow> was created.</span></span>  
  
 <span data-ttu-id="5305c-244">때 <xref:System.Data.DataColumn.AutoIncrement%2A> 로 설정 된 true 이면 있을 수 있습니다 기본값이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-244">When <xref:System.Data.DataColumn.AutoIncrement%2A> is set to true, there can be no default value.</span></span>  
  
 <span data-ttu-id="5305c-245">사용 하 여 새 행을 만들 수 있습니다는 <xref:System.Data.DataRow.ItemArray%2A> 의 속성은 <xref:System.Data.DataRow> 클래스와 값의 배열을 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-245">You can create a new row using the <xref:System.Data.DataRow.ItemArray%2A> property of the <xref:System.Data.DataRow> class and passing the method an array of values.</span></span> <span data-ttu-id="5305c-246">해당 값이 자동으로 생성 하기 때문에 이것이 기본값은 열에 대 한 잠재적인 문제입니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-246">This is a potential problem for a column with a default value because its value is generated automatically.</span></span> <span data-ttu-id="5305c-247">사용 하는 <xref:System.Data.DataRow.ItemArray%2A> 속성 이러한 열이 있는 배치 `null` 배열에 있는 열의 위치에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-247">To use the <xref:System.Data.DataRow.ItemArray%2A> property with such a column, place `null` in the column's position in the array.</span></span> <span data-ttu-id="5305c-248">자세한 내용은 <xref:System.Data.DataRow.ItemArray%2A> 속성을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="5305c-248">For more information, see the <xref:System.Data.DataRow.ItemArray%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5305c-249">다음 예제에서는 여러 가지 <xref:System.Data.DataColumn> 각 열에 기본값 개체를 다른 데이터 형식의 적절 한 설정입니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-249">The following example creates several <xref:System.Data.DataColumn> objects that have different data types, and sets appropriate default values to each column.</span></span>  
  
 [!code-vb[Classic WebData DataColumn.DefaultValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DefaultValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="5305c-250">행을 추가할 때 기본값이 열 데이터 형식의 인스턴스가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-250">When you are adding a row, the default value is not an instance of the column's data type.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="T:System.Data.UniqueConstraint" />
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public string Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Expression" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Expression" />
      <MemberSignature Language="VB.NET" Value="Public Property Expression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Expression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5305c-251">행을 필터링하거나 열의 값을 계산하거나 집계 열을 만드는 데 사용되는 식을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-251">Gets or sets the expression used to filter rows, calculate the values in a column, or create an aggregate column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5305c-252">열의 값을 계산하거나 집계 열을 만드는 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-252">An expression to calculate the value of a column, or create an aggregate column.</span>
          </span>
          <span data-ttu-id="5305c-253">식의 반환 형식은 열의 <see cref="P:System.Data.DataColumn.DataType" />에 의해 결정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-253">The return type of an expression is determined by the <see cref="P:System.Data.DataColumn.DataType" /> of the column.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5305c-254">용도 중 하나는 <xref:System.Data.DataColumn.Expression%2A> 속성은 계산된 열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-254">One use of the <xref:System.Data.DataColumn.Expression%2A> property is to create calculated columns.</span></span> <span data-ttu-id="5305c-255">예를 들어 세금 값을 계산 하려면 단가 곱한 특정 지역의 세율 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-255">For example, to calculate a tax value, the unit price is multiplied by a tax rate of a specific region.</span></span> <span data-ttu-id="5305c-256">세율 영역 마다 다르므로 수 없기 단일 세율; 열에 배치할 수 있습니다. 대신 사용 하 여 값을 계산 되는 <xref:System.Data.DataColumn.Expression%2A> 속성을 다음 섹션에는 Visual Basic 코드에 표시 된 대로:</span><span class="sxs-lookup"><span data-stu-id="5305c-256">Because tax rates vary from region to region, it would be impossible to put a single tax rate in a column; instead, the value is calculated using the <xref:System.Data.DataColumn.Expression%2A> property, as shown in the Visual Basic code in the following section:</span></span>  
  
 <span data-ttu-id="5305c-257">DataSet1.Tables("Products").Columns("tax").Expression = "UnitPrice \* 0.086"</span><span class="sxs-lookup"><span data-stu-id="5305c-257">DataSet1.Tables("Products").Columns("tax").Expression = "UnitPrice \* 0.086"</span></span>  
  
 <span data-ttu-id="5305c-258">두 번째 용도 집계 열을 만드는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-258">A second use is to create an aggregate column.</span></span> <span data-ttu-id="5305c-259">계산된 된 값과 마찬가지로 집계에 있는 행의 전체 집합 기반 연산을 수행는 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-259">Similar to a calculated value, an aggregate performs an operation based on the complete set of rows in the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="5305c-260">집합에 반환 되는 행 수를 계산 하는 간단한 예는 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-260">A simple example is to count the number of rows returned in the set.</span></span> <span data-ttu-id="5305c-261">이 방법은 사용 하는 것이 Visual Basic 코드에서와 같이 특정 한 영업 사원별으로 완료 된 트랜잭션의 수를 계산 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-261">This is the method you would use to count the number of transactions completed by a particular salesperson, as shown in this Visual Basic code:</span></span>  
  
```  
DataSet1.Tables("Orders").Columns("OrderCount").Expression = "Count(OrderID)"  
```  
  
## <a name="expression-syntax"></a><span data-ttu-id="5305c-262">식 구문</span><span class="sxs-lookup"><span data-stu-id="5305c-262">Expression Syntax</span></span>  
 <span data-ttu-id="5305c-263">식을 만들 때 사용 된 <xref:System.Data.DataColumn.ColumnName%2A> 열을 참조 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-263">When you create an expression, use the <xref:System.Data.DataColumn.ColumnName%2A> property to refer to columns.</span></span> <span data-ttu-id="5305c-264">예를 들어 경우는 <xref:System.Data.DataColumn.ColumnName%2A> 식이 다음과 같을 수는 하나 이상의 열 다른 "Quantity" 및 "UnitPrice"에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-264">For example, if the <xref:System.Data.DataColumn.ColumnName%2A> for one column is "UnitPrice", and another "Quantity", the expression would be as follows:</span></span>  
  
 <span data-ttu-id="5305c-265">"UnitPrice \* Quantity"</span><span class="sxs-lookup"><span data-stu-id="5305c-265">"UnitPrice \* Quantity"</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5305c-266">식에 사용 되는 열을 해당 열에 종속 되도록 식 이라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-266">If a column is used in an expression, then the expression is said to have a dependency on that column.</span></span> <span data-ttu-id="5305c-267">종속 열 변경 되거나 제거 된 경우 예외가 throw 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-267">If a dependent column is renamed or removed, no exception is thrown.</span></span> <span data-ttu-id="5305c-268">현재 중단 된 식 열에 액세스할 때 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-268">An exception will be thrown when the now-broken expression column is accessed.</span></span>  
  
 <span data-ttu-id="5305c-269">필터에 대 한 식을 만들 때 작은따옴표를 사용 하 여 문자열을 묶습니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-269">When you create an expression for a filter, enclose strings with single quotation marks:</span></span>  
  
 <span data-ttu-id="5305c-270">"LastName = 'Jones'"</span><span class="sxs-lookup"><span data-stu-id="5305c-270">"LastName = 'Jones'"</span></span>  
  
 <span data-ttu-id="5305c-271">열 이름 영숫자가 아닌 문자가 포함 된 또는 숫자로 시작 하거나 중 하 나와 일치 사례는 다음과 같은 예약어를 경우 다음 단락에 설명 된 대로 특별 한 처리가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-271">If a column name contains any non-alphanumeric characters or starts with a digit or matches (case-insensitively) any of the following reserved words, it requires special handling, as described in the following paragraphs.</span></span>  
  
 <span data-ttu-id="5305c-272">그리고</span><span class="sxs-lookup"><span data-stu-id="5305c-272">And</span></span>  
  
 <span data-ttu-id="5305c-273">사이</span><span class="sxs-lookup"><span data-stu-id="5305c-273">Between</span></span>  
  
 <span data-ttu-id="5305c-274">자식</span><span class="sxs-lookup"><span data-stu-id="5305c-274">Child</span></span>  
  
 <span data-ttu-id="5305c-275">False</span><span class="sxs-lookup"><span data-stu-id="5305c-275">False</span></span>  
  
 <span data-ttu-id="5305c-276">입력</span><span class="sxs-lookup"><span data-stu-id="5305c-276">In</span></span>  
  
 <span data-ttu-id="5305c-277">예</span><span class="sxs-lookup"><span data-stu-id="5305c-277">Is</span></span>  
  
 <span data-ttu-id="5305c-278">Like</span><span class="sxs-lookup"><span data-stu-id="5305c-278">Like</span></span>  
  
 <span data-ttu-id="5305c-279">Not</span><span class="sxs-lookup"><span data-stu-id="5305c-279">Not</span></span>  
  
 <span data-ttu-id="5305c-280">Null</span><span class="sxs-lookup"><span data-stu-id="5305c-280">Null</span></span>  
  
 <span data-ttu-id="5305c-281">또는</span><span class="sxs-lookup"><span data-stu-id="5305c-281">Or</span></span>  
  
 <span data-ttu-id="5305c-282">부모</span><span class="sxs-lookup"><span data-stu-id="5305c-282">Parent</span></span>  
  
 <span data-ttu-id="5305c-283">True</span><span class="sxs-lookup"><span data-stu-id="5305c-283">True</span></span>  
  
 <span data-ttu-id="5305c-284">어느 대괄호로 묶어야 합니다 열 이름을 위의 조건 중 하나를 충족 하는 경우 또는 "'" 따옴표 (억음 악센트 기호).</span><span class="sxs-lookup"><span data-stu-id="5305c-284">If a column name satisfies one of the above conditions, it must be wrapped in either square brackets or the "\`" (grave accent) quotes.</span></span> <span data-ttu-id="5305c-285">예를 들어 식에서 "열 #" 라는 열을 사용 하려면 사용자는 #으로 작성 중 하나가 "[열]":</span><span class="sxs-lookup"><span data-stu-id="5305c-285">For example, to use a column named "Column#" in an expression, you would write either "[Column#]":</span></span>  
  
 <span data-ttu-id="5305c-286">총 \* [열 #]</span><span class="sxs-lookup"><span data-stu-id="5305c-286">Total \* [Column#]</span></span>  
  
 <span data-ttu-id="5305c-287">또는 "\`열 #'":</span><span class="sxs-lookup"><span data-stu-id="5305c-287">or "\`Column#`":</span></span>  
  
 <span data-ttu-id="5305c-288">총 \* \`열 #'</span><span class="sxs-lookup"><span data-stu-id="5305c-288">Total \* \`Column#\`</span></span>  
  
 <span data-ttu-id="5305c-289">열 이름을 대괄호로 다음 어떤 포함 되어 있으면 ']' 및 '\\' 문자 (그러나 다른 문자 하지)에 백슬래시와이 붙여 이스케이프 되어야 합니다 ("\\") 문자.</span><span class="sxs-lookup"><span data-stu-id="5305c-289">If the column name is enclosed in square brackets then any ']' and '\\' characters (but not any other characters) in it must be escaped by prepending them with the backslash ("\\") character.</span></span> <span data-ttu-id="5305c-290">열 이름은 억음 악센트 문자에 포함 되어 있으면에 억음 악센트 문자 하지 포함 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-290">If the column name is enclosed in grave accent characters then it must not contain any grave accent characters in it.</span></span> <span data-ttu-id="5305c-291">예를 들어 라는 열 "열\\"를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-291">For example, a column named "Column[]\\" would be written:</span></span>  
  
 <span data-ttu-id="5305c-292">Total \* [Column[\\]\\\\]</span><span class="sxs-lookup"><span data-stu-id="5305c-292">Total \* [Column[\\]\\\\]</span></span>  
  
 <span data-ttu-id="5305c-293">또는</span><span class="sxs-lookup"><span data-stu-id="5305c-293">or</span></span>  
  
 <span data-ttu-id="5305c-294">총 \* \`열\\`</span><span class="sxs-lookup"><span data-stu-id="5305c-294">Total \* \`Column[]\\`</span></span>  
  
## <a name="user-defined-values"></a><span data-ttu-id="5305c-295">사용자 정의 값</span><span class="sxs-lookup"><span data-stu-id="5305c-295">User-Defined Values</span></span>  
 <span data-ttu-id="5305c-296">사용자 정의 값 열 값과 비교 하기 위해 식 내에서 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-296">User-defined values may be used within expressions to be compared with column values.</span></span> <span data-ttu-id="5305c-297">문자열 값을 작은따옴표로 묶어야 합니다 (및 각 작은따옴표 문자는 문자열 값에 다른 작은따옴표 문자 앞에 추가 하 여 이스케이프) 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-297">String values should be enclosed within single quotation marks (and each single quotation character in a string value has to be escaped by prepending it with another single quotation character).</span></span> <span data-ttu-id="5305c-298">파운드 기호 (#) 또는 데이터 공급자에 따라 단일 따옴표 (') 내에서 날짜 값 포함 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-298">Date values should be enclosed within pound signs (#) or single quotes (') based on the data provider.</span></span> <span data-ttu-id="5305c-299">과학적 표기법 및 10 진수 숫자 값에 대 한 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-299">Decimals and scientific notation are permissible for numeric values.</span></span> <span data-ttu-id="5305c-300">예:</span><span class="sxs-lookup"><span data-stu-id="5305c-300">For example:</span></span>  
  
 <span data-ttu-id="5305c-301">"FirstName = 'John'"</span><span class="sxs-lookup"><span data-stu-id="5305c-301">"FirstName = 'John'"</span></span>  
  
 <span data-ttu-id="5305c-302">"가격 < 50.00 ="</span><span class="sxs-lookup"><span data-stu-id="5305c-302">"Price <= 50.00"</span></span>  
  
 <span data-ttu-id="5305c-303">"Birthdate < #1/31/82#"</span><span class="sxs-lookup"><span data-stu-id="5305c-303">"Birthdate < #1/31/82#"</span></span>  
  
 <span data-ttu-id="5305c-304">포함 된 열에 대 한 열거 값을 정수 데이터 형식으로 값을 캐스팅 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-304">For columns that contain enumeration values, cast the value to an integer data type.</span></span> <span data-ttu-id="5305c-305">예:</span><span class="sxs-lookup"><span data-stu-id="5305c-305">For example:</span></span>  
  
 <span data-ttu-id="5305c-306">"EnumColumn = 5"</span><span class="sxs-lookup"><span data-stu-id="5305c-306">"EnumColumn = 5"</span></span>  
  
## <a name="parsing-literal-expressions"></a><span data-ttu-id="5305c-307">리터럴 식 구문 분석</span><span class="sxs-lookup"><span data-stu-id="5305c-307">Parsing Literal Expressions</span></span>  
 <span data-ttu-id="5305c-308">고정 문화권 로캘에서 모든 리터럴 식은 표시 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-308">All literal expressions must be expressed in the invariant culture locale.</span></span> <span data-ttu-id="5305c-309">때 `DataSet` 구문 분석 하 고 리터럴 식을 변환 항상 고정 문화권의 경우 현재 문화권이 아닌을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-309">When `DataSet` parses and converts literal expressions, it always uses the invariant culture, not the current culture.</span></span>  
  
 <span data-ttu-id="5305c-310">문자열 리터럴은 작은따옴표 값 주위에 있는 경우 식별 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-310">String literals are identified when there are single quotes surrounding the value.</span></span> <span data-ttu-id="5305c-311">예:</span><span class="sxs-lookup"><span data-stu-id="5305c-311">For example:</span></span>  
  
 <span data-ttu-id="5305c-312">'John'</span><span class="sxs-lookup"><span data-stu-id="5305c-312">'John'</span></span>  
  
 <span data-ttu-id="5305c-313">`Boolean` 리터럴은 true와 false입니다. 식에서 따옴표로 묶이지 않은 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-313">`Boolean` literals are true and false; they are not quoted in expressions.</span></span>  
  
 <span data-ttu-id="5305c-314">`Integer` 리터럴 [+-]? [0-9] +으로 처리 `System.Int32`, `System.Int64` 또는 `System.Double`합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-314">`Integer` literals [+-]?[0-9]+ are treated as `System.Int32`, `System.Int64` or `System.Double`.</span></span> <span data-ttu-id="5305c-315">`System.Double` 크기에 따라 숫자 정밀도 떨어질 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-315">`System.Double` can lose precision depending on how large the number is.</span></span> <span data-ttu-id="5305c-316">예를 들어, 리터럴 숫자가 2147483650, `DataSet` 는 먼저 숫자도 구문 분석 하려고 한 `Int32`합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-316">For example, if the number in the literal is 2147483650, `DataSet` will first attempt to parse the number as an `Int32`.</span></span> <span data-ttu-id="5305c-317">이 수 너무 크기 때문에 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-317">This will not succeed because the number is too large.</span></span> <span data-ttu-id="5305c-318">이 경우 `DataSet` 는 숫자도 구문 분석 하는 `Int64`는 성공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-318">In this case `DataSet` will parse the number as an `Int64`, which will succeed.</span></span> <span data-ttu-id="5305c-319">Int64의 최 댓 값 보다 큰 숫자 리터럴이 `DataSet` 사용 하 여 리터럴을 구문 분석 됩니다 `Double`합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-319">If the literal was a number larger than the maximum value of an Int64, `DataSet` will parse the literal using `Double`.</span></span>  
  
 <span data-ttu-id="5305c-320">실제 리터럴 4.42372 e 같은 과학적 표기법을 사용 하 여-30을 사용 하 여 구문 분석 `System.Double`합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-320">Real literals using scientific notation, such as 4.42372E-30, are parsed using `System.Double`.</span></span>  
  
 <span data-ttu-id="5305c-321">실제 리터럴은 과학적 표기법으로는 없지만 소수 부분이 처리 됩니다 `System.Decimal`합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-321">Real literals without scientific notation, but with a decimal point, are treated as `System.Decimal`.</span></span> <span data-ttu-id="5305c-322">지 원하는 최대값 또는 최소값 값을 초과 하는 경우 `System.Decimal`,으로 구문 분석 됩니다는 `System.Double`합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-322">If the number exceeds the maximum or minimum values supported by `System.Decimal`, then it is parsed as a `System.Double`.</span></span> <span data-ttu-id="5305c-323">예:</span><span class="sxs-lookup"><span data-stu-id="5305c-323">For example:</span></span>  
  
 <span data-ttu-id="5305c-324">142526.144524 변환할 수는 `Decimal`합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-324">142526.144524 will be converted to a `Decimal`.</span></span>  
  
 <span data-ttu-id="5305c-325">345262.78036719560925667로 취급 됩니다는 `Double`합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-325">345262.78036719560925667 will be treated as a `Double`.</span></span>  
  
## <a name="operators"></a><span data-ttu-id="5305c-326">연산자</span><span class="sxs-lookup"><span data-stu-id="5305c-326">Operators</span></span>  
 <span data-ttu-id="5305c-327">부울 AND, OR 및 NOT 연산자를 사용 하 여 연결 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-327">Concatenation is allowed using Boolean AND, OR, and NOT operators.</span></span> <span data-ttu-id="5305c-328">절을 그룹화 하려면 괄호를 사용할 수 있으며 우선 순위를 강제로 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-328">You can use parentheses to group clauses and force precedence.</span></span> <span data-ttu-id="5305c-329">AND 연산자는 다른 연산자 보다 우선 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-329">The AND operator has precedence over other operators.</span></span> <span data-ttu-id="5305c-330">예:</span><span class="sxs-lookup"><span data-stu-id="5305c-330">For example:</span></span>  
  
 <span data-ttu-id="5305c-331">(LastName = 'Smith' OR LastName = 'Jones') AND FirstName = 'John'</span><span class="sxs-lookup"><span data-stu-id="5305c-331">(LastName = 'Smith' OR LastName = 'Jones') AND FirstName = 'John'</span></span>  
  
 <span data-ttu-id="5305c-332">비교 식을 만들 때 다음과 같은 연산자를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-332">When you create comparison expressions, the following operators are allowed:</span></span>  
  
 \<  
  
 >  
  
 \<=  
  
 >=  
  
 <>  
  
 =  
  
 <span data-ttu-id="5305c-333">IN</span><span class="sxs-lookup"><span data-stu-id="5305c-333">IN</span></span>  
  
 <span data-ttu-id="5305c-334">LIKE</span><span class="sxs-lookup"><span data-stu-id="5305c-334">LIKE</span></span>  
  
 <span data-ttu-id="5305c-335">또한 다음과 같은 산술 연산자는 식에서 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-335">The following arithmetic operators are also supported in expressions:</span></span>  
  
 <span data-ttu-id="5305c-336">\+ (더하기)</span><span class="sxs-lookup"><span data-stu-id="5305c-336">\+ (addition)</span></span>  
  
 <span data-ttu-id="5305c-337">\-(빼기)</span><span class="sxs-lookup"><span data-stu-id="5305c-337">\- (subtraction)</span></span>  
  
 <span data-ttu-id="5305c-338">\* (곱하기)</span><span class="sxs-lookup"><span data-stu-id="5305c-338">\* (multiplication)</span></span>  
  
 <span data-ttu-id="5305c-339">/ (나누기)</span><span class="sxs-lookup"><span data-stu-id="5305c-339">/ (division)</span></span>  
  
 <span data-ttu-id="5305c-340">% (계수)</span><span class="sxs-lookup"><span data-stu-id="5305c-340">% (modulus)</span></span>  
  
## <a name="string-operators"></a><span data-ttu-id="5305c-341">문자열 연산자</span><span class="sxs-lookup"><span data-stu-id="5305c-341">String Operators</span></span>  
 <span data-ttu-id="5305c-342">문자열을 연결 하려면 사용 된 + 문자가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-342">To concatenate a string, use the + character.</span></span> <span data-ttu-id="5305c-343">값은 <xref:System.Data.DataSet.CaseSensitive%2A> 속성은 <xref:System.Data.DataSet> 클래스 문자열 비교는 대/소문자 구분 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-343">The value of the <xref:System.Data.DataSet.CaseSensitive%2A> property of the <xref:System.Data.DataSet> class determines whether string comparisons are case-sensitive.</span></span> <span data-ttu-id="5305c-344">그러나으로 해당 값을 재정의할 수는 <xref:System.Data.DataTable.CaseSensitive%2A> 의 속성은 <xref:System.Data.DataTable> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-344">However, you can override that value with the <xref:System.Data.DataTable.CaseSensitive%2A> property of the <xref:System.Data.DataTable> class.</span></span>  
  
## <a name="wildcard-characters"></a><span data-ttu-id="5305c-345">와일드카드 문자</span><span class="sxs-lookup"><span data-stu-id="5305c-345">Wildcard Characters</span></span>  
 <span data-ttu-id="5305c-346">둘 다의 \* 와일드 카드 문자는 LIKE 비교에 대 한 % 같은 의미로 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-346">Both the \* and % can be used interchangeably for wildcard characters in a LIKE comparison.</span></span> <span data-ttu-id="5305c-347">LIKE 절에서 문자열을 포함 하는 경우는 \* 또는 %, 해당 문자를 대괄호 ()에 포함 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-347">If the string in a LIKE clause contains a \* or %, those characters should be enclosed in brackets ([]).</span></span> <span data-ttu-id="5305c-348">대괄호가 절에 있으면 각 대괄호 문자 (예: [[] 또는 []])에 대괄호로 묶어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-348">If a bracket is in the clause, each bracket character should be enclosed in brackets (for example [[] or []]).</span></span> <span data-ttu-id="5305c-349">시작 및 패턴의 끝에 또는 패턴의 끝에 또는 패턴의 시작 부분에 와일드 카드는 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-349">A wildcard is allowed at the start and end of a pattern, or at the end of a pattern, or at the start of a pattern.</span></span> <span data-ttu-id="5305c-350">예:</span><span class="sxs-lookup"><span data-stu-id="5305c-350">For example:</span></span>  
  
 <span data-ttu-id="5305c-351">"ItemName 같이 ' * 제품\*'"</span><span class="sxs-lookup"><span data-stu-id="5305c-351">"ItemName LIKE '*product\*'"</span></span>  
  
 <span data-ttu-id="5305c-352">"ItemName 같이 ' \* 제품 '"</span><span class="sxs-lookup"><span data-stu-id="5305c-352">"ItemName LIKE '\*product'"</span></span>  
  
 <span data-ttu-id="5305c-353">"ItemName 같은 ' 제품 \*'"</span><span class="sxs-lookup"><span data-stu-id="5305c-353">"ItemName LIKE 'product\*'"</span></span>  
  
 <span data-ttu-id="5305c-354">와일드 카드 문자는 문자열을 포함할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-354">Wildcard characters are not allowed in the middle of a string.</span></span> <span data-ttu-id="5305c-355">예를 들어 ' te \* xt' 허용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-355">For example, 'te\*xt' is not allowed.</span></span>  
  
## <a name="parentchild-relation-referencing"></a><span data-ttu-id="5305c-356">부모/자식 관계 참조</span><span class="sxs-lookup"><span data-stu-id="5305c-356">Parent/Child Relation Referencing</span></span>  
 <span data-ttu-id="5305c-357">열 이름 앞에 추가 하 여 부모 테이블 식에서 참조할 수 있습니다 `Parent`합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-357">A parent table may be referenced in an expression by prepending the column name with `Parent`.</span></span> <span data-ttu-id="5305c-358">예를 들어는 `Parent.Price` 부모 테이블의 열 이름이 참조 `Price`합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-358">For example, the `Parent.Price` references the parent table's column named `Price`.</span></span>  
  
 <span data-ttu-id="5305c-359">자식에 둘 이상의 부모 행을 Parent(RelationName)를 사용 합니다. 열 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-359">When a child has more than one parent row, use Parent(RelationName).ColumnName.</span></span> <span data-ttu-id="5305c-360">예를 들어 Parent(RelationName) 합니다. 가격 price는 관계를 통해 부모 테이블의 열을 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-360">For example, the Parent(RelationName).Price references the parent table’s column named Price via the relation.</span></span>  
  
 <span data-ttu-id="5305c-361">열 이름 앞에 추가 하 여 식에서 자식 테이블의 열을 참조할 수 있습니다 `Child`합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-361">A column in a child table may be referenced in an expression by prepending the column name with `Child`.</span></span> <span data-ttu-id="5305c-362">그러나 자식 관계에서 여러 행을 반환할 수 때문에 자식 열에 대 한 참조는 집계 함수에 포함 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-362">However, because child relationships may return multiple rows, you must include the reference to the child column in an aggregate function.</span></span> <span data-ttu-id="5305c-363">예를 들어 `Sum(Child.Price)` 라는 열의 합계를 반환 합니다 `Price` 자식 테이블에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-363">For example, `Sum(Child.Price)` would return the sum of the column named `Price` in the child table.</span></span>  
  
 <span data-ttu-id="5305c-364">구문은 테이블에 있는 경우 둘 이상의 자식,: `Child(RelationName)`합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-364">If a table has more than one child, the syntax is: `Child(RelationName)`.</span></span> <span data-ttu-id="5305c-365">예를 들어, 테이블에 있는 경우 두 개의 자식 테이블을 명명 된 `Customers` 및 `Orders`, 및 <xref:System.Data.DataRelation> 개체의 이름은 `Customers2Orders`, 참조는 다음과 같이 수:</span><span class="sxs-lookup"><span data-stu-id="5305c-365">For example, if a table has two child tables named `Customers` and `Orders`, and the <xref:System.Data.DataRelation> object is named `Customers2Orders`, the reference would be as follows:</span></span>  
  
 <span data-ttu-id="5305c-366">Avg(Child(Customers2Orders).Quantity)</span><span class="sxs-lookup"><span data-stu-id="5305c-366">Avg(Child(Customers2Orders).Quantity)</span></span>  
  
## <a name="aggregates"></a><span data-ttu-id="5305c-367">집합체</span><span class="sxs-lookup"><span data-stu-id="5305c-367">Aggregates</span></span>  
 <span data-ttu-id="5305c-368">다음과 같은 집계 형식이 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-368">The following aggregate types are supported:</span></span>  
  
 <span data-ttu-id="5305c-369">Sum (Sum)</span><span class="sxs-lookup"><span data-stu-id="5305c-369">Sum (Sum)</span></span>  
  
 <span data-ttu-id="5305c-370">Avg (평균)</span><span class="sxs-lookup"><span data-stu-id="5305c-370">Avg (Average)</span></span>  
  
 <span data-ttu-id="5305c-371">Min (최소)</span><span class="sxs-lookup"><span data-stu-id="5305c-371">Min (Minimum)</span></span>  
  
 <span data-ttu-id="5305c-372">Max (최대)</span><span class="sxs-lookup"><span data-stu-id="5305c-372">Max (Maximum)</span></span>  
  
 <span data-ttu-id="5305c-373">Count (개수)</span><span class="sxs-lookup"><span data-stu-id="5305c-373">Count (Count)</span></span>  
  
 <span data-ttu-id="5305c-374">StDev (통계적 표준 편차)</span><span class="sxs-lookup"><span data-stu-id="5305c-374">StDev (Statistical standard deviation)</span></span>  
  
 <span data-ttu-id="5305c-375">Var (통계적 분산)입니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-375">Var (Statistical variance).</span></span>  
  
 <span data-ttu-id="5305c-376">집계는 일반적으로 관계를 따라 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-376">Aggregates are ordinarily performed along relationships.</span></span> <span data-ttu-id="5305c-377">부모/자식 관계 참조 앞에서 설명한에 설명 된 대로 앞에서 나열 된 함수 및 자식 테이블의 열 중 하나를 사용 하 여 집계 식을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-377">Create an aggregate expression by using one of the functions listed earlier and a child table column as detailed in Parent/Child Relation Referencing that was discussed earlier.</span></span> <span data-ttu-id="5305c-378">예:</span><span class="sxs-lookup"><span data-stu-id="5305c-378">For example:</span></span>  
  
 <span data-ttu-id="5305c-379">Avg(Child.Price)</span><span class="sxs-lookup"><span data-stu-id="5305c-379">Avg(Child.Price)</span></span>  
  
 <span data-ttu-id="5305c-380">Avg(Child(Orders2Details).Price)</span><span class="sxs-lookup"><span data-stu-id="5305c-380">Avg(Child(Orders2Details).Price)</span></span>  
  
 <span data-ttu-id="5305c-381">단일 테이블에서 집계를 수행할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-381">An aggregate can also be performed on a single table.</span></span> <span data-ttu-id="5305c-382">예를 들어 숫자 값의 요약 열에 라는 "Price" 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-382">For example, to create a summary of figures in a column named "Price":</span></span>  
  
 <span data-ttu-id="5305c-383">Sum(Price)</span><span class="sxs-lookup"><span data-stu-id="5305c-383">Sum(Price)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5305c-384">단일 테이블을 사용 하 여 집계를 만들 경우 group by 기능 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-384">If you use a single table to create an aggregate, there would be no group-by functionality.</span></span> <span data-ttu-id="5305c-385">대신, 모든 행의 열에 동일한 값이 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-385">Instead, all rows would display the same value in the column.</span></span>  
  
 <span data-ttu-id="5305c-386">테이블에 행이 없는 경우 집계 함수 반환 됩니다 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-386">If a table has no rows, the aggregate functions will return `null`.</span></span>  
  
 <span data-ttu-id="5305c-387">데이터 형식을 검사 하 여 항상 확인할 수 있습니다는 <xref:System.Data.DataColumn.DataType%2A> 의 열 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-387">Data types can always be determined by examining the <xref:System.Data.DataColumn.DataType%2A> property of a column.</span></span> <span data-ttu-id="5305c-388">다음 섹션에 표시 된 Convert 함수를 사용 하 여 데이터 형식을 변환할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-388">You can also convert data types using the Convert function, shown in the following section.</span></span>  
  
 <span data-ttu-id="5305c-389">집계는 단일 열만 적용할 수 있습니다 및 집계 내 다른 식이 없는 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-389">An aggregate can only be applied to a single column and no other expressions can be used inside the aggregate.</span></span>  
  
## <a name="functions"></a><span data-ttu-id="5305c-390">함수</span><span class="sxs-lookup"><span data-stu-id="5305c-390">Functions</span></span>  
 <span data-ttu-id="5305c-391">다음 함수 에서도 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-391">The following functions are also supported:</span></span>  
  
 `CONVERT`  
  
|||  
|-|-|  
|<span data-ttu-id="5305c-392">설명</span><span class="sxs-lookup"><span data-stu-id="5305c-392">Description</span></span>|<span data-ttu-id="5305c-393">특정 식에서 지정 된.NET Framework 형식으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-393">Converts particular expression to a specified .NET Framework Type.</span></span>|  
|<span data-ttu-id="5305c-394">구문</span><span class="sxs-lookup"><span data-stu-id="5305c-394">Syntax</span></span>|<span data-ttu-id="5305c-395">Convert(`expression`, `type`)</span><span class="sxs-lookup"><span data-stu-id="5305c-395">Convert(`expression`, `type`)</span></span>|  
|<span data-ttu-id="5305c-396">인수</span><span class="sxs-lookup"><span data-stu-id="5305c-396">Arguments</span></span>|<span data-ttu-id="5305c-397">`expression` --변환할 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-397">`expression` -- The expression to convert.</span></span><br /><br /> <span data-ttu-id="5305c-398">`type` -.NET Framework 형식을 값 변환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-398">`type` -- The .NET Framework type to which the value will be converted.</span></span>|  
  
 <span data-ttu-id="5305c-399">Example: myDataColumn.Expression="Convert(total, 'System.Int32')"</span><span class="sxs-lookup"><span data-stu-id="5305c-399">Example: myDataColumn.Expression="Convert(total, 'System.Int32')"</span></span>  
  
 <span data-ttu-id="5305c-400">모든 변환에는 다음과 같은 예외를 사용 하 여 유효: `Boolean` 에서 강제 변환할 수 있는 `Byte`, `SByte`, `Int16`, `Int32`, `Int64`, `UInt16`, `UInt32`, `UInt64`, `String` 및 자체입니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-400">All conversions are valid with the following exceptions: `Boolean` can be coerced to and from `Byte`, `SByte`, `Int16`, `Int32`, `Int64`, `UInt16`, `UInt32`, `UInt64`, `String` and itself only.</span></span> <span data-ttu-id="5305c-401">`Char` 강제 변환할 수 있는 `Int32`, `UInt32`, `String`, 및 자체입니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-401">`Char` can be coerced to and from `Int32`, `UInt32`, `String`, and itself only.</span></span> <span data-ttu-id="5305c-402">`DateTime` 강제 변환할 수 있는 `String` 및 자체입니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-402">`DateTime` can be coerced to and from `String` and itself only.</span></span> <span data-ttu-id="5305c-403">`TimeSpan` 강제 변환할 수 있는 `String` 및 자체입니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-403">`TimeSpan` can be coerced to and from `String` and itself only.</span></span>  
  
 `LEN`  
  
|||  
|-|-|  
|<span data-ttu-id="5305c-404">설명</span><span class="sxs-lookup"><span data-stu-id="5305c-404">Description</span></span>|<span data-ttu-id="5305c-405">문자열의 길이 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-405">Gets the length of a string</span></span>|  
|<span data-ttu-id="5305c-406">구문</span><span class="sxs-lookup"><span data-stu-id="5305c-406">Syntax</span></span>|<span data-ttu-id="5305c-407">LEN(`expression`)</span><span class="sxs-lookup"><span data-stu-id="5305c-407">LEN(`expression`)</span></span>|  
|<span data-ttu-id="5305c-408">인수</span><span class="sxs-lookup"><span data-stu-id="5305c-408">Arguments</span></span>|<span data-ttu-id="5305c-409">`expression` --계산할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-409">`expression` -- The string to be evaluated.</span></span>|  
  
 <span data-ttu-id="5305c-410">예: myDataColumn.Expression="Len(ItemName)"</span><span class="sxs-lookup"><span data-stu-id="5305c-410">Example: myDataColumn.Expression="Len(ItemName)"</span></span>  
  
 `ISNULL`  
  
|||  
|-|-|  
|<span data-ttu-id="5305c-411">설명</span><span class="sxs-lookup"><span data-stu-id="5305c-411">Description</span></span>|<span data-ttu-id="5305c-412">확인 된 식 또는 대체 값 식과 반환을 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-412">Checks an expression and either returns the checked expression or a replacement value.</span></span>|  
|<span data-ttu-id="5305c-413">구문</span><span class="sxs-lookup"><span data-stu-id="5305c-413">Syntax</span></span>|<span data-ttu-id="5305c-414">ISNULL(`expression`, `replacementvalue`)</span><span class="sxs-lookup"><span data-stu-id="5305c-414">ISNULL(`expression`, `replacementvalue`)</span></span>|  
|<span data-ttu-id="5305c-415">인수</span><span class="sxs-lookup"><span data-stu-id="5305c-415">Arguments</span></span>|<span data-ttu-id="5305c-416">`expression` --확인할 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-416">`expression` -- The expression to check.</span></span><br /><br /> <span data-ttu-id="5305c-417">`replacementvalue` --식은 경우 `null`, `replacementvalue` 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-417">`replacementvalue` -- If expression is `null`, `replacementvalue` is returned.</span></span>|  
  
 <span data-ttu-id="5305c-418">Example: myDataColumn.Expression="IsNull(price, -1)"</span><span class="sxs-lookup"><span data-stu-id="5305c-418">Example: myDataColumn.Expression="IsNull(price, -1)"</span></span>  
  
 `IIF`  
  
|||  
|-|-|  
|<span data-ttu-id="5305c-419">설명</span><span class="sxs-lookup"><span data-stu-id="5305c-419">Description</span></span>|<span data-ttu-id="5305c-420">논리 식의 결과 따라 두 값 중 하나를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-420">Gets one of two values depending on the result of a logical expression.</span></span>|  
|<span data-ttu-id="5305c-421">구문</span><span class="sxs-lookup"><span data-stu-id="5305c-421">Syntax</span></span>|<span data-ttu-id="5305c-422">IIF(`expr`, `truepart`, `falsepart`)</span><span class="sxs-lookup"><span data-stu-id="5305c-422">IIF(`expr`, `truepart`, `falsepart`)</span></span>|  
|<span data-ttu-id="5305c-423">인수</span><span class="sxs-lookup"><span data-stu-id="5305c-423">Arguments</span></span>|<span data-ttu-id="5305c-424">`expr` --계산할 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-424">`expr` -- The expression to evaluate.</span></span><br /><br /> <span data-ttu-id="5305c-425">`truepart` -식이 true 인 경우 반환할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-425">`truepart` -- The value to return if the expression is true.</span></span><br /><br /> <span data-ttu-id="5305c-426">`falsepart` -식이 false를 반환할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-426">`falsepart` -- The value to return if the expression is false.</span></span>|  
  
 <span data-ttu-id="5305c-427">Example: myDataColumn.Expression = "IIF(total>1000, 'expensive', 'dear')</span><span class="sxs-lookup"><span data-stu-id="5305c-427">Example: myDataColumn.Expression = "IIF(total>1000, 'expensive', 'dear')</span></span>  
  
 `TRIM`  
  
|||  
|-|-|  
|<span data-ttu-id="5305c-428">설명</span><span class="sxs-lookup"><span data-stu-id="5305c-428">Description</span></span>|<span data-ttu-id="5305c-429">제거 모든 선행 및 후행 공백 문자 \r, \n, \t, ' '</span><span class="sxs-lookup"><span data-stu-id="5305c-429">Removes all leading and trailing blank characters like \r, \n, \t, ' '</span></span>|  
|<span data-ttu-id="5305c-430">구문</span><span class="sxs-lookup"><span data-stu-id="5305c-430">Syntax</span></span>|<span data-ttu-id="5305c-431">TRIM(`expression`)</span><span class="sxs-lookup"><span data-stu-id="5305c-431">TRIM(`expression`)</span></span>|  
|<span data-ttu-id="5305c-432">인수</span><span class="sxs-lookup"><span data-stu-id="5305c-432">Arguments</span></span>|<span data-ttu-id="5305c-433">`expression` --Trim을 식.</span><span class="sxs-lookup"><span data-stu-id="5305c-433">`expression` -- The expression to trim.</span></span>|  
  
 `SUBSTRING`  
  
|||  
|-|-|  
|<span data-ttu-id="5305c-434">설명</span><span class="sxs-lookup"><span data-stu-id="5305c-434">Description</span></span>|<span data-ttu-id="5305c-435">문자열에 지정된 된 위치 에서부터 지정 된 길이의 문자열을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-435">Gets a sub-string of a specified length, starting at a specified point in the string.</span></span>|  
|<span data-ttu-id="5305c-436">구문</span><span class="sxs-lookup"><span data-stu-id="5305c-436">Syntax</span></span>|<span data-ttu-id="5305c-437">SUBSTRING(`expression`, `start`, `length`)</span><span class="sxs-lookup"><span data-stu-id="5305c-437">SUBSTRING(`expression`, `start`, `length`)</span></span>|  
|<span data-ttu-id="5305c-438">인수</span><span class="sxs-lookup"><span data-stu-id="5305c-438">Arguments</span></span>|<span data-ttu-id="5305c-439">`expression` 부분 문자열에 대 한--소스 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-439">`expression` -- The source string for the substring.</span></span><br /><br /> <span data-ttu-id="5305c-440">`start` --부분 문자열의 시작 위치를 지정 하는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-440">`start` -- Integer that specifies where the substring starts.</span></span><br /><br /> <span data-ttu-id="5305c-441">`length` --부분 문자열의 길이 지정 하는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-441">`length` -- Integer that specifies the length of the substring.</span></span>|  
  
 <span data-ttu-id="5305c-442">예: myDataColumn.Expression = "SUBSTRING (phone, 7, 8)"</span><span class="sxs-lookup"><span data-stu-id="5305c-442">Example: myDataColumn.Expression = "SUBSTRING(phone, 7, 8)"</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5305c-443">다시 설정할 수 있습니다는 <xref:System.Data.DataColumn.Expression%2A> null 값 이나 빈 문자열을 할당 하 여 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-443">You can reset the <xref:System.Data.DataColumn.Expression%2A> property by assigning it a null value or empty string.</span></span> <span data-ttu-id="5305c-444">모든 이전에 채워진된 행 후의 기본 값에 할당 된 기본 값을 식 열에 설정 된 <xref:System.Data.DataColumn.Expression%2A> 속성이 다시 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-444">If a default value is set on the expression column, all previously filled rows are assigned the default value after the <xref:System.Data.DataColumn.Expression%2A> property is reset.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5305c-445">다음 예제에서는 세 개의 열에는 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-445">The following example creates three columns in a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="5305c-446">두 번째 및 세 번째 열 식이 포함 됩니다. 가변 세율을 사용 하는 세금을 계산 하는 두 번째 하 고 세 번째는 첫 번째 열의 값으로 계산 결과 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-446">The second and third columns contain expressions; the second calculates tax using a variable tax rate, and the third adds the result of the calculation to the value of the first column.</span></span> <span data-ttu-id="5305c-447">결과 테이블에 표시 됩니다는 <xref:System.Windows.Forms.DataGrid> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-447">The resulting table is displayed in a <xref:System.Windows.Forms.DataGrid> control.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Expression Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Expression Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Expression Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Expression Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5305c-448">
            <see cref="P:System.Data.DataColumn.AutoIncrement" /> 또는 <see cref="P:System.Data.DataColumn.Unique" /> 속성이 <see langword="true" />로 설정되어 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-448">The <see cref="P:System.Data.DataColumn.AutoIncrement" /> or <see cref="P:System.Data.DataColumn.Unique" /> property is set to <see langword="true" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="5305c-449">CONVERT 함수를 사용하는 동안 식은 문자열로 계산되지만 문자열에 형식 매개 변수로 변환될 수 있는 표현이 포함되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-449">When you are using the CONVERT function, the expression evaluates to a string, but the string does not contain a representation that can be converted to the type parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="5305c-450">CONVERT 함수를 사용하는 동안 요청된 캐스팅을 수행할 수 없는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-450">When you are using the CONVERT function, the requested cast is not possible.</span>
          </span>
          <span data-ttu-id="5305c-451">가능한 캐스팅에 대한 자세한 내용은 다음 섹션에서 변환 함수를 참조하십시오.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-451">See the Conversion function in the following section for detailed information about possible casts.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5305c-452">SUBSTRING 함수를 사용하는 동안 시작 인수가 범위를 벗어난 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-452">When you use the SUBSTRING function, the start argument is out of range.</span>
          </span>
          <span data-ttu-id="5305c-453">-또는-</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-453">-Or-</span>
          </span>
          <span data-ttu-id="5305c-454">SUBSTRING 함수를 사용하는 동안 길이 인수가 범위를 벗어난 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-454">When you use the SUBSTRING function, the length argument is out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.Exception">
          <span data-ttu-id="5305c-455">LEN 또는 TRIM 함수를 사용하는 동안 식이 문자열로 계산되지 않는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-455">When you use the LEN function or the TRIM function, the expression does not evaluate to a string.</span>
          </span>
          <span data-ttu-id="5305c-456">여기에는 <see cref="T:System.Char" />로 계산되는 식이 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-456">This includes expressions that evaluate to <see cref="T:System.Char" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExtendedProperties">
      <MemberSignature Language="C#" Value="public System.Data.PropertyCollection ExtendedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.PropertyCollection ExtendedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ExtendedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtendedProperties As PropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::PropertyCollection ^ ExtendedProperties { System::Data::PropertyCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.PropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5305c-457">
            <see cref="T:System.Data.DataColumn" />과 관련된 사용자 지정 사용자 정보 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-457">Gets the collection of custom user information associated with a <see cref="T:System.Data.DataColumn" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5305c-458">사용자 지정 정보의 <see cref="T:System.Data.PropertyCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-458">A <see cref="T:System.Data.PropertyCollection" /> of custom information.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5305c-459"><xref:System.Data.DataColumn.ExtendedProperties%2A> 속성을 사용 하면 개체를 사용 하 여 사용자 지정 정보를 저장할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-459">The <xref:System.Data.DataColumn.ExtendedProperties%2A> property lets you store custom information with the object.</span></span> <span data-ttu-id="5305c-460">예를 들어 데이터를 새로 고쳐야 할 시간을 저장할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-460">For example, you may store a time when the data should be refreshed.</span></span>  
  
 <span data-ttu-id="5305c-461">확장된 속성 형식 이어야 합니다 <xref:System.String>합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-461">Extended properties must be of type <xref:System.String>.</span></span> <span data-ttu-id="5305c-462">형식이 아닌 속성 <xref:System.String> 유지 되지 않습니다는 <xref:System.Data.DataColumn> XML로 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-462">Properties that are not of type <xref:System.String> are not persisted when the <xref:System.Data.DataColumn> is written as XML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5305c-463">다음 예제에서는 사용자 지정 속성을 추가 <xref:System.Data.PropertyCollection> 에서 반환 되는 <xref:System.Data.DataColumn.ExtendedProperties%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-463">The following example adds a custom property to the <xref:System.Data.PropertyCollection> returned by the <xref:System.Data.DataColumn.ExtendedProperties%2A> property.</span></span> <span data-ttu-id="5305c-464">두 번째 예에서는 사용자 지정 속성을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-464">The second example retrieves the custom property.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ExtendedProperties Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ExtendedProperties Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ExtendedProperties Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ExtendedProperties Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.PropertyCollection" />
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5305c-465">텍스트 열의 최대 길이를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-465">Gets or sets the maximum length of a text column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5305c-466">열의 최대 길이(문자 수)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-466">The maximum length of the column in characters.</span>
          </span>
          <span data-ttu-id="5305c-467">열에 최대 길이가 없으면 값은 ?1(기본값)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-467">If the column has no maximum length, the value is –1 (default).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5305c-468"><xref:System.Data.DataColumn.MaxLength%2A> 텍스트가 아닌 열에 대 한 속성은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-468">The <xref:System.Data.DataColumn.MaxLength%2A> property is ignored for non-text columns.</span></span> <span data-ttu-id="5305c-469">A <xref:System.ArgumentException> 할당 하는 경우 예외가 발생 <xref:System.Data.DataColumn.MaxLength%2A> 문자열이 아닌 열에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-469">A <xref:System.ArgumentException> exception is raised if you assign <xref:System.Data.DataColumn.MaxLength%2A> to a non-string column.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5305c-470">
            <see cref="T:System.Data.DataColumn" />의 네임스페이스를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-470">Gets or sets the namespace of the <see cref="T:System.Data.DataColumn" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5305c-471">
            <see cref="T:System.Data.DataColumn" />의 네임스페이스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-471">The namespace of the <see cref="T:System.Data.DataColumn" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5305c-472"><xref:System.Data.DataColumn.Namespace%2A> 에 문서를 읽고 XML을 쓸 때 속성은 사용는 <xref:System.Data.DataTable> 에 <xref:System.Data.DataSet> 를 사용 하는 <xref:System.Data.DataSet.ReadXml%2A>, <xref:System.Data.DataSet.WriteXml%2A>, <xref:System.Data.DataSet.ReadXmlSchema%2A>, 또는 <xref:System.Data.DataSet.WriteXmlSchema%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5305c-472">The <xref:System.Data.DataColumn.Namespace%2A> property is used when reading and writing an XML document into a <xref:System.Data.DataTable> in the <xref:System.Data.DataSet> using the <xref:System.Data.DataSet.ReadXml%2A>, <xref:System.Data.DataSet.WriteXml%2A>, <xref:System.Data.DataSet.ReadXmlSchema%2A>, or <xref:System.Data.DataSet.WriteXmlSchema%2A> methods.</span></span>  
  
 <span data-ttu-id="5305c-473">XML 문서의 네임 스페이스 XML 특성 및 요소를 읽을 때 범위를 지정 하는 데 사용 되는 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-473">The namespace of an XML document is used to scope XML attributes and elements when read into a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="5305c-474">예를 들어 한 <xref:System.Data.DataSet> 스키마가 포함 된 "myCompany" 네임 스페이스를 포함 문서에서 읽은 데이터를 읽을 하려고 및 (으로 <xref:System.Data.DataSet.ReadXml%2A> 메서드) "theirCompany" 네임 스페이스를 포함 하는 문서에서</span><span class="sxs-lookup"><span data-stu-id="5305c-474">For example, a <xref:System.Data.DataSet> contains a schema read from a document that has the namespace "myCompany," and an attempt is made to read data (with the <xref:System.Data.DataSet.ReadXml%2A> method) from a document that has the namespace "theirCompany."</span></span> <span data-ttu-id="5305c-475">기존 스키마에 해당 하지 않는 모든 데이터는 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-475">Any data that does not correspond to the existing schema will be ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5305c-476">네임스페이스에 데이터가 이미 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-476">The namespace already has data.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanging (System.ComponentModel.PropertyChangedEventArgs pcevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanging(class System.ComponentModel.PropertyChangedEventArgs pcevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanging (pcevent As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanging(System::ComponentModel::PropertyChangedEventArgs ^ pcevent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcevent" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="pcevent">
          <span data-ttu-id="5305c-477">매개 변수 참조입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-477">Parameter reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5305c-478">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-478">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ordinal">
      <MemberSignature Language="C#" Value="public int Ordinal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Ordinal" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Ordinal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Ordinal As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Ordinal { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5305c-479">
            <see cref="T:System.Data.DataColumnCollection" /> 컬렉션에서 0부터 시작하는 열의 위치를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-479">Gets the (zero-based) position of the column in the <see cref="T:System.Data.DataColumnCollection" /> collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5305c-480">열 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-480">The position of the column.</span>
          </span>
          <span data-ttu-id="5305c-481">열이 컬렉션의 멤버가 아니면 -1을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-481">Gets -1 if the column is not a member of a collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5305c-482">다음 예에서는 열의 열 서 수, 이름과 데이터 형식을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-482">The following example returns the column name, ordinal, and data type of a column.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Ordinal Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Ordinal Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Ordinal Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Ordinal Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public string Prefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Prefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5305c-483">
            <see cref="T:System.Data.DataTable" /> 네임스페이스의 별칭인 XML 접두사를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-483">Gets or sets an XML prefix that aliases the namespace of the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5305c-484">
            <see cref="T:System.Data.DataTable" /> 네임스페이스의 XML 접두사입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-484">The XML prefix for the <see cref="T:System.Data.DataTable" /> namespace.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5305c-485"><xref:System.Data.DataTable.Prefix%2A> 에 대 한 네임 스페이스에 속하는 요소를 식별 하는 XML 문서 전체에서 사용 되는 <xref:System.Data.DataSet> 개체 (의해 설정 된 <xref:System.Data.DataSet.Namespace%2A> 속성).</span><span class="sxs-lookup"><span data-stu-id="5305c-485">The <xref:System.Data.DataTable.Prefix%2A> is used throughout an XML document to identify elements which belong to the namespace for a <xref:System.Data.DataSet> object (as set by the <xref:System.Data.DataSet.Namespace%2A> property).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePropertyChanging">
      <MemberSignature Language="C#" Value="protected internal void RaisePropertyChanging (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void RaisePropertyChanging(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.RaisePropertyChanging(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub RaisePropertyChanging (name As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void RaisePropertyChanging(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="5305c-486">매개 변수 참조입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-486">Parameter reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5305c-487">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-487">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5305c-488">테이블에 행을 추가한 후 열을 변경할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-488">Gets or sets a value that indicates whether the column allows for changes as soon as a row has been added to the table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5305c-489">열이 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-489">
              <see langword="true" /> if the column is read only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="5305c-490">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-490">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5305c-491">다음 예제에서는 한 <xref:System.Data.DataColumn> 설정 하 고 해당 <xref:System.Data.DataColumn.ReadOnly%2A> 속성 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-491">The following example creates a <xref:System.Data.DataColumn> and sets its <xref:System.Data.DataColumn.ReadOnly%2A> property `true`.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ReadOnly Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ReadOnly Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ReadOnly Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ReadOnly Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5305c-492">속성이 계산 열에서 <see langword="false" />로 설정된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-492">The property is set to <see langword="false" /> on a computed column.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.Unique" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
      </Docs>
    </Member>
    <Member MemberName="SetOrdinal">
      <MemberSignature Language="C#" Value="public void SetOrdinal (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOrdinal(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.SetOrdinal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOrdinal (ordinal As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOrdinal(int ordinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="5305c-493">지정된 서수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-493">The specified ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5305c-494">
            <see cref="T:System.Data.DataColumn" />의 서수나 위치를 지정된 서수나 위치로 변경합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-494">Changes the ordinal or position of the <see cref="T:System.Data.DataColumn" /> to the specified ordinal or position.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5305c-495"><xref:System.Data.DataColumn>의 서수나 위치를 지정된 서수나 위치로 변경합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-495">Changes the ordinal or position of the <xref:System.Data.DataColumn> to the specified ordinal or position.</span></span> <span data-ttu-id="5305c-496">경우 서 수는 0 보다 작거나 열-1 (마지막으로 열의 서 수를 보다 큼)의 기존 번호 보다 큰 다음 잘못 된 <xref:System.ArgumentException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-496">If ordinal is less than 0 or greater than the existing number of columns – 1 (greater than the ordinal of the last column) then an Invalid <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="5305c-497">열의 서 수를 변경 하면 열 열의 컬렉션에서 새 위치로 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-497">When you change a column’s ordinal, the column is moved to the new position in the collection of columns.</span></span> <span data-ttu-id="5305c-498">열의 새 서 수를 조정 하는 이전 및 새 서 수 사이 모든 열 번호가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-498">Any columns between the previous and new ordinal will be renumbered, to adjust for a column's new ordinal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public System.Data.DataTable Table { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataTable Table" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Table" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Table As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataTable ^ Table { System::Data::DataTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5305c-499">열이 속한 <see cref="T:System.Data.DataTable" />을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-499">Gets the <see cref="T:System.Data.DataTable" /> to which the column belongs to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5305c-500">
            <see cref="T:System.Data.DataTable" />이 속한 <see cref="T:System.Data.DataColumn" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-500">The <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataColumn" /> belongs to.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5305c-501">부모 테이블을 반환 하는 다음 예제는 <xref:System.Data.DataColumn> 를 통해 해당 <xref:System.Data.DataColumn.Table%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-501">The following example returns the parent table of a <xref:System.Data.DataColumn> through its <xref:System.Data.DataColumn.Table%2A> property.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Table Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Table Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Table Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Table Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataTable" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5305c-502">열의 <see cref="P:System.Data.DataColumn.Expression" />이 있으면 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-502">Gets the <see cref="P:System.Data.DataColumn.Expression" /> of the column, if one exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5305c-503">속성이 설정되어 있으면 <see cref="P:System.Data.DataColumn.Expression" /> 값을 반환하고, 그렇지 않으면 <see cref="P:System.Data.DataColumn.ColumnName" /> 속성을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-503">The <see cref="P:System.Data.DataColumn.Expression" /> value, if the property is set; otherwise, the <see cref="P:System.Data.DataColumn.ColumnName" /> property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5305c-504">다음 예제에서는 <xref:System.Data.DataColumn.ToString%2A> 의 컬렉션의 각 멤버의 기본 문자열을 반환 하는 속성 <xref:System.Data.DataColumn> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-504">The following example uses the <xref:System.Data.DataColumn.ToString%2A> property to return the default string of each member of a collection of <xref:System.Data.DataColumn> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ToString Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ToString Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ToString Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ToString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
      </Docs>
    </Member>
    <Member MemberName="Unique">
      <MemberSignature Language="C#" Value="public bool Unique { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Unique" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Unique" />
      <MemberSignature Language="VB.NET" Value="Public Property Unique As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Unique { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5305c-505">열의 각 행에 있는 값이 고유해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-505">Gets or sets a value that indicates whether the values in each row of the column must be unique.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5305c-506">값이 고유해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-506">
              <see langword="true" /> if the value must be unique; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="5305c-507">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-507">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5305c-508">이 속성이 false에서 true로 변경 되는 즉시 값이 고유한 지 확인 하려면이 열에 대해 unique 제약 조건을 만들어질 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-508">As soon as this property is changed from false to true, a unique constraint will be created on this column to make sure that values are unique.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5305c-509">다음 예제에서는 새 <xref:System.Data.DataColumn>, 해당 속성을 설정 하 고 테이블의 열 컬렉션에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="5305c-509">The following example creates new <xref:System.Data.DataColumn>, sets its properties, and adds it to a table's columns collection.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Unique Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Unique Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Unique Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Unique Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5305c-510">열이 계산 열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5305c-510">The column is a calculated column.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.AllowDBNull" />
        <altmember cref="T:System.Data.UniqueConstraint" />
        <altmember cref="P:System.Data.DataTable.Constraints" />
      </Docs>
    </Member>
  </Members>
</Type>