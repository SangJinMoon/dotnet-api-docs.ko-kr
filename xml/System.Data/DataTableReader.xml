<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DataTableReader.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58b05c6536b55f3b3e8b451bd60aecebed5db7c3e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8b05c6536b55f3b3e8b451bd60aecebed5db7c3e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.DataTableReader">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> obtains the contents of one or more <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> objects in the form of one or more read-only, forward-only result sets.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>는 하나 이상의 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 개체 내용을 하나 이상의 앞으로만 이동 가능한 읽기 전용 결과 집합 형태로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTableReader">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> works much like any other data reader, such as the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>, except that the <ph id="ph3">&lt;xref:System.Data.DataTableReader&gt;</ph> provides for iterating over rows in a <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> 같은 다른 데이터 판독기 처럼 작동 하는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>한다는 점을 제외 하는 <ph id="ph3">&lt;xref:System.Data.DataTableReader&gt;</ph> 의 행을 반복 하기 위한 제공는 <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTableReader">
          <source>In other words, it provides for iterating over rows in a cache.</source>
          <target state="translated">즉, 캐시의 행을 반복 하는 것입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTableReader">
          <source>The cached data can be modified while the <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> is active, and the reader automatically maintains its position.</source>
          <target state="translated">캐시 된 데이터를 수정할 수 동안는 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> 가 활성 상태 이면 판독기의 위치를 자동으로 유지 관리 하 고 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTableReader">
          <source>When you create a <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, the resulting <ph id="ph3">&lt;xref:System.Data.DataTableReader&gt;</ph> object contains one result set with the same data as the <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> from which it was created, except for any rows that have been marked as deleted.</source>
          <target state="translated">만들 때 한 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> 에서 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, 결과 <ph id="ph3">&lt;xref:System.Data.DataTableReader&gt;</ph> 개체에 결과와 동일한 데이터 집합 하나가 포함 되어는 <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> 가 만들어진, 삭제 된 것으로 표시 된 모든 행을 제외한에서 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTableReader">
          <source>The columns appear in the same order as in the original <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">열이 원본에서와 동일한 순서로 표시 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTableReader">
          <source>The structure of the returned result is identical in schema and data to the original <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">반환된 된 결과의 구조는 원래 스키마와 데이터의 동일 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTableReader">
          <source>A <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> that was created by calling the <ph id="ph2">&lt;xref:System.Data.DataSet.CreateDataReader*&gt;</ph> method of a <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> object contains multiple result sets if the <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> contains more than one table.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> 호출 하 여 만든는 <ph id="ph2">&lt;xref:System.Data.DataSet.CreateDataReader*&gt;</ph> 의 메서드는 <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> 경우 여러 개의 결과 집합이 포함 하는 개체는 <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> 둘 이상의 테이블을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTableReader">
          <source>The results are in the same sequence as the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objects in the <ph id="ph2">&lt;xref:System.Data.DataTableCollection&gt;</ph> of the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> object.</source>
          <target state="translated">결과과 동일한 시퀀스로 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> 개체에 <ph id="ph2">&lt;xref:System.Data.DataTableCollection&gt;</ph> 의 <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTableReader">
          <source>The returned result set contains only the current version of each <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>; rows that are marked for deletion are skipped.</source>
          <target state="translated">반환된 된 결과 집합의 현재 버전의 각각 포함 <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>; 삭제 하도록 표시 된 행은 건너뜁니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTableReader">
          <source>The <ph id="ph1">`DataTableReader`</ph> provides a stable iterator; that is, the contents of the <ph id="ph2">`DataTableReader`</ph> are not invalidated if the size of the underlying collection is modified during iteration.</source>
          <target state="translated"><ph id="ph1">`DataTableReader`</ph> 안정적인 제공 반복기, 즉의 콘텐츠는 <ph id="ph2">`DataTableReader`</ph> 반복 하는 동안 기본 컬렉션의 크기를 수정 하는 경우 무효화 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTableReader">
          <source>For example, if one or more rows in the <ph id="ph1">&lt;xref:System.Data.DataTable.Rows%2A&gt;</ph> collection are deleted or removed during iteration, the current position within the <ph id="ph2">`DataTableReader`</ph> is maintained appropriately and it does not invalidate the iterator.</source>
          <target state="translated">예를 들어 하나 이상의 대 한에 행이 <ph id="ph1">&lt;xref:System.Data.DataTable.Rows%2A&gt;</ph> 컬렉션을 삭제 하거나 반복 내에서 현재 위치 하는 동안 제거할는 <ph id="ph2">`DataTableReader`</ph> 적절 하 게 유지 됩니다 및 반복기를 무효화 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.Data.DataTableReader">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.#ctor(System.Data.DataTable)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> from which the new <ph id="ph2">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> obtains its result set.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>가 결과 집합을 가져오는 <ph id="ph2">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.#ctor(System.Data.DataTable)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> class by using data from the supplied <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">제공된 <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>의 데이터를 사용하여 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])">
          <source>The array of <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> objects that supplies the results for the new <ph id="ph2">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> object.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 개체의 결과를 제공하는 <ph id="ph2">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> class using the supplied array of <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> 개체의 제공된 배열을 사용하여 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])">
          <source>If you must create a <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> based on all or a subset of the tables within a specific <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, call the <ph id="ph3">`DataSet`</ph>'s <ph id="ph4">&lt;xref:System.Data.DataSet.CreateDataReader*&gt;</ph> method.</source>
          <target state="translated">만들어야 하는 경우는 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> 전체 또는 특정 내에서 테이블의 하위 집합에 따라 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, 호출 된 <ph id="ph3">`DataSet`</ph>의 <ph id="ph4">&lt;xref:System.Data.DataSet.CreateDataReader*&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])">
          <source>If you want to create a new <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> instance based on a group of <ph id="ph2">`DataTable`</ph> instances that are not otherwise related, use this constructor.</source>
          <target state="translated">새 하려면 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> 인스턴스 그룹을 기반으로 <ph id="ph2">`DataTable`</ph> 이 생성자를 사용 하는 다른 방법으로 서로 연관 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])">
          <source>You can also take advantage of this constructor to rearrange the ordering of the <ph id="ph1">`DataTables`</ph> within the <ph id="ph2">`DataTableReader`</ph>, if their ordering within their source <ph id="ph3">`DataSet`</ph> does not meet your needs.</source>
          <target state="translated">순서를 다시 정렬 하려면이 생성자의 이용할 수도 수 있습니다는 <ph id="ph1">`DataTables`</ph> 내는 <ph id="ph2">`DataTableReader`</ph>경우, 기본적으로 소스 내에서 나타나는 순서 <ph id="ph3">`DataSet`</ph> 요구를 충족 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])">
          <source>In the following example, the TestConstructor method creates two <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instances.</source>
          <target state="translated">다음 예제에서는 TestConstructor 메서드에서는 두 개의 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])">
          <source>In order to demonstrate this constructor for the <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> class, the sample creates a new <ph id="ph2">`DataTableReader`</ph> based on an array that contains the two <ph id="ph3">`DataTables`</ph>, and performs a simple operation, printing the contents from the first few columns to the console window.</source>
          <target state="translated">이 생성자에 대 한 설명 하기 위해는 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> 클래스, 예제에서는 새 <ph id="ph2">`DataTableReader`</ph> 두를 포함 하는 배열에 따라 <ph id="ph3">`DataTables`</ph>를 콘솔에 처음 몇 개의 열에서 내용을 인쇄 하는 간단한 작업을 수행 하 고 창입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])">
          <source>In order to test this application, create a new Console application, and paste the sample code into the newly created file.</source>
          <target state="translated">이 응용 프로그램을 테스트 하려면 새 콘솔 응용 프로그램을 만들고 새로 만든된 파일에는 샘플 코드를 붙여 넣습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])">
          <source>The Console window displays the following results:</source>
          <target state="translated">콘솔 창에는 다음과 같은 결과가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.Close">
          <source>Closes the current <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>를 닫습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.Close">
          <source>Calling <ph id="ph1">`Close()`</ph> on a closed <ph id="ph2">`DataTableReader`</ph> object does not raise an error.</source>
          <target state="translated">호출 <ph id="ph1">`Close()`</ph> 닫힌에 <ph id="ph2">`DataTableReader`</ph> 개체에서 오류가 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Data.DataTableReader.Depth">
          <source>The depth of nesting for the current row of the <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>의 현재 행에 대한 중첩 수준입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.Depth">
          <source>The depth of nesting for the current row; always zero.</source>
          <target state="translated">현재 행의 중첩 수준이며 항상 0입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.Depth">
          <source><ph id="ph1">`DataTableReader`</ph> does not support nesting.</source>
          <target state="translated"><ph id="ph1">`DataTableReader`</ph> 중첩을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.Depth">
          <source>The <ph id="ph1">`Depth`</ph> property always returns zero.</source>
          <target state="translated"><ph id="ph1">`Depth`</ph> 속성은 항상 0을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Data.DataTableReader.FieldCount">
          <source>Returns the number of columns in the current row.</source>
          <target state="translated">현재 행에 있는 열의 수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.FieldCount">
          <source>When not positioned in a valid result set, 0; otherwise the number of columns in the current row.</source>
          <target state="translated">유효한 결과 집합에 배치되지 않으면 0이고, 그렇지 않으면 현재 행에 있는 열의 수입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.Data.DataTableReader.FieldCount">
          <source>An attempt was made to retrieve the field count in a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>.</source>
          <target state="translated">닫힌 <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>의 필드 수를 검색하려고 한 경우</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetBoolean(System.Int32)">
          <source>The zero-based column ordinal.</source>
          <target state="translated">열 서수(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetBoolean(System.Int32)">
          <source>Gets the value of the specified column as a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>으로 지정된 열 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetBoolean(System.Int32)">
          <source>The value of the specified column.</source>
          <target state="translated">지정된 열의 값입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetBoolean(System.Int32)">
          <source>No conversions are performed; therefore the data retrieved must either already be a Boolean or coercible to a Boolean, or an exception is generated.</source>
          <target state="translated">변환이 수행 되지 않습니다. 따라서 검색 된 데이터가 이미 Boolean 또는 부울,으로 강제 변환 또는 예외가 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetBoolean(System.Int32)">
          <source>Call <ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph> to see if there are null values before calling this method.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph> 이 메서드를 호출 하기 전에 null 값이 있는 경우 볼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetBoolean(System.Int32)">
          <source>The following example displays the contents of the column numbered 2 within the passed-in <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>.</source>
          <target state="translated">다음 예에서는 전달 된 기능 내 2 번 열의 내용을 표시 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetBoolean(System.Int32)">
          <source>If the value the column within a particular row is null, the code displays the text <ph id="ph1">\&lt;</ph>NULL&gt;.</source>
          <target state="translated">코드의 텍스트 표시 값에 특정 행 내의 열이 null 이면 <ph id="ph1">\&lt;</ph>NULL &gt; 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetBoolean(System.Int32)">
          <source>If the data within the column is not the correct type, the example displays an error message for each row.</source>
          <target state="translated">열 내의 데이터가 올바른 형식이 없으면이 예제에서는 각 행에 대 한 오류 메시지를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetBoolean(System.Int32)">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">전달된 인덱스가 0에서 <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 사이의 범위에 속하지 않는 경우</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetBoolean(System.Int32)">
          <source>An attempt was made to retrieve data from a deleted row.</source>
          <target state="translated">삭제된 행에서 데이터를 검색하려고 한 경우</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetBoolean(System.Int32)">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>.</source>
          <target state="translated">닫힌 <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>의 열을 읽거나 액세스하려고 한 경우</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetBoolean(System.Int32)">
          <source>The specified column does not contain a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>.</source>
          <target state="translated">지정된 열에 <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>이 없는 경우</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetByte(System.Int32)">
          <source>The zero-based column ordinal.</source>
          <target state="translated">열 서수(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetByte(System.Int32)">
          <source>Gets the value of the specified column as a byte.</source>
          <target state="translated">지정된 열의 값에 해당하는 바이트 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetByte(System.Int32)">
          <source>The value of the specified column.</source>
          <target state="translated">지정된 열의 값입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetByte(System.Int32)">
          <source>No conversions are performed; therefore the data retrieved must already be a byte or coercible to a byte.</source>
          <target state="translated">변환이 수행 되지 않습니다. 따라서 검색 된 데이터가 이미 있어야 바이트 또는 byte로 강제 변환 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetByte(System.Int32)">
          <source>Call <ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph> to see if there are null values before calling this method.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph> 이 메서드를 호출 하기 전에 null 값이 있는 경우 볼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetByte(System.Int32)">
          <source>The following example displays the contents of the column numbered 2 within the passed-in <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>.</source>
          <target state="translated">다음 예에서는 전달 된 기능 내 2 번 열의 내용을 표시 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetByte(System.Int32)">
          <source>If the value the column within a particular row is null, the code displays the text <ph id="ph1">\&lt;</ph>NULL&gt;.</source>
          <target state="translated">코드의 텍스트 표시 값에 특정 행 내의 열이 null 이면 <ph id="ph1">\&lt;</ph>NULL &gt; 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetByte(System.Int32)">
          <source>If the data within the column is not of the correct type, the example displays an error message for each row.</source>
          <target state="translated">열 내의 데이터는 올바른 유형이 없는 경우이 예제에서는 각 행에 대 한 오류 메시지를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetByte(System.Int32)">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">전달된 인덱스가 0에서 <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 사이의 범위에 속하지 않는 경우</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetByte(System.Int32)">
          <source>An attempt was made to retrieve data from a deleted row.</source>
          <target state="translated">삭제된 행에서 데이터를 검색하려고 한 경우</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetByte(System.Int32)">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see langword="DataTableReader" /&gt;</ph>.</source>
          <target state="translated">닫힌 <ph id="ph1">&lt;see langword="DataTableReader" /&gt;</ph>의 열을 읽거나 액세스하려고 한 경우</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetByte(System.Int32)">
          <source>The specified column does not contain a byte.</source>
          <target state="translated">지정된 열에 바이트가 없는 경우</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
          <source>The zero-based column ordinal.</source>
          <target state="translated">열 서수(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
          <source>The index within the field from which to start the read operation.</source>
          <target state="translated">읽기 작업을 시작할 필드 내의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
          <source>The buffer into which to read the stream of bytes.</source>
          <target state="translated">바이트 스트림을 읽을 버퍼입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
          <source>The index within the buffer at which to start placing the data.</source>
          <target state="translated">데이터 배치를 시작할 버퍼 내에 있는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
          <source>The maximum length to copy into the buffer.</source>
          <target state="translated">버퍼로 복사할 최대 길이입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
          <source>Reads a stream of bytes starting at the specified column offset into the buffer as an array starting at the specified buffer offset.</source>
          <target state="translated">지정된 열 오프셋에서 시작되는 바이트 스트림을 지정된 버퍼 오프셋에서 시작하는 배열로 버퍼에 읽어 들입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
          <source>The actual number of bytes read.</source>
          <target state="translated">읽은 실제 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">`GetBytes`</ph> returns the number of available bytes in the field.</source>
          <target state="translated"><ph id="ph1">`GetBytes`</ph> 필드에 사용 가능한 바이트 수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
          <source>Most of the time this is the exact length of the field.</source>
          <target state="translated">대부분의 경우 이것은 필드의 길이입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
          <source>However, the number returned may be less than the true length of the field if <ph id="ph1">`GetBytes`</ph> has already been used to obtain bytes from the field.</source>
          <target state="translated">그러나 반환 된 숫자 보다 작을 수도 있습니다는 필드의 길이 경우 <ph id="ph1">`GetBytes`</ph> 바이트를 얻는 필드에서 이미 사용 되었습니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
          <source>This may be the case, for example, when the <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> is reading a large data structure into a buffer</source>
          <target state="translated">수도 있는 경우 예를 들어는 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> 대형 데이터 구조를 버퍼에 읽고</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
          <source>If you pass a buffer that is <ph id="ph1">`null`</ph> (<ph id="ph2">`Nothing`</ph> in Visual Basic), <ph id="ph3">`GetBytes`</ph> returns the length of the entire field in bytes, not the remaining size based on the buffer offset parameter.</source>
          <target state="translated">버퍼를 전달 하는 경우 <ph id="ph1">`null`</ph> (<ph id="ph2">`Nothing`</ph> Visual basic에서), <ph id="ph3">`GetBytes`</ph> 버퍼 오프셋된 매개 변수에 따라 나머지 크기가 아니라를 바이트 단위로 전체 필드의 길이 반환 합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
          <source>No conversions are performed; therefore the data retrieved must already be a byte array or coercible to a byte array.</source>
          <target state="translated">변환이 수행 되지 않습니다. 따라서 검색 된 데이터가 이미 여야 바이트 배열 또는 바이트 배열에 강제 변환 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> based on data in the AdventureWorks sample database, and saves each image retrieved to a separate file in the C:\ folder.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> C:\ 폴더에 별도 파일을 검색 한 각 이미지 저장 고 AdventureWorks 예제 데이터베이스에서 데이터를 기반으로 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
          <source>In order to test this application, create a new Console application, reference the System.Drawing.dll assembly, and paste the sample code into the newly created file.</source>
          <target state="translated">이 응용 프로그램을 테스트 하려면 새 콘솔 응용 프로그램 만들기, System.Drawing.dll 어셈블리를 참조 하 고 새로 생성된 된 파일에는 샘플 코드를 붙여 넣습니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">전달된 인덱스가 0에서 <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 사이의 범위에 속하지 않는 경우</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
          <source>An attempt was made to retrieve data from a deleted row.</source>
          <target state="translated">삭제된 행에서 데이터를 검색하려고 한 경우</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see langword="DataTableReader" /&gt;</ph>.</source>
          <target state="translated">닫힌 <ph id="ph1">&lt;see langword="DataTableReader" /&gt;</ph>의 열을 읽거나 액세스하려고 한 경우</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
          <source>The specified column does not contain a byte array.</source>
          <target state="translated">지정된 열에 바이트 배열이 없는 경우</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetChar(System.Int32)">
          <source>The zero-based column ordinal.</source>
          <target state="translated">열 서수(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetChar(System.Int32)">
          <source>Gets the value of the specified column as a character.</source>
          <target state="translated">지정된 열의 값을 문자로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetChar(System.Int32)">
          <source>The value of the column.</source>
          <target state="translated">열의 값입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetChar(System.Int32)">
          <source>No conversions are performed; therefore the data retrieved must already be a character or coercible to a character.</source>
          <target state="translated">변환이 수행 되지 않습니다. 따라서 검색 된 데이터가 이미 있어야 문자 또는 문자도 강제 변환 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetChar(System.Int32)">
          <source>Call <ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph> to see if there are null values before calling this method.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph> 이 메서드를 호출 하기 전에 null 값이 있는 경우 볼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetChar(System.Int32)">
          <source>The following example displays the contents of the column numbered 2 within the passed-in DataTableReader.</source>
          <target state="translated">다음 예에서는 전달 된 DataTableReader 내에서 2 번 열의 내용을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetChar(System.Int32)">
          <source>If the value the column within a particular row is null, the code displays the text <ph id="ph1">\&lt;</ph>NULL&gt;.</source>
          <target state="translated">코드의 텍스트 표시 값에 특정 행 내의 열이 null 이면 <ph id="ph1">\&lt;</ph>NULL &gt; 합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetChar(System.Int32)">
          <source>If the data within the column is not of the correct type, the example displays an error message for each row.</source>
          <target state="translated">열 내의 데이터는 올바른 유형이 없는 경우이 예제에서는 각 행에 대 한 오류 메시지를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetChar(System.Int32)">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">전달된 인덱스가 0에서 <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 사이의 범위에 속하지 않는 경우</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetChar(System.Int32)">
          <source>An attempt was made to retrieve data from a deleted row.</source>
          <target state="translated">삭제된 행에서 데이터를 검색하려고 한 경우</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetChar(System.Int32)">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see langword="DataTableReader" /&gt;</ph>.</source>
          <target state="translated">닫힌 <ph id="ph1">&lt;see langword="DataTableReader" /&gt;</ph>의 열을 읽거나 액세스하려고 한 경우</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetChar(System.Int32)">
          <source>The specified field does not contain a character.</source>
          <target state="translated">지정된 필드에 문자가 없는 경우</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source>The zero-based column ordinal.</source>
          <target state="translated">열 서수(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source>The index within the field from which to start the read operation.</source>
          <target state="translated">읽기 작업을 시작할 필드 내의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source>The buffer into which to read the stream of chars.</source>
          <target state="translated">문자 스트림을 읽어올 버퍼입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source>The index within the buffer at which to start placing the data.</source>
          <target state="translated">데이터 배치를 시작할 버퍼 내에 있는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source>The maximum length to copy into the buffer.</source>
          <target state="translated">버퍼로 복사할 최대 길이입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source>Returns the value of the specified column as a character array.</source>
          <target state="translated">지정된 열의 값에 해당하는 문자 배열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source>The actual number of characters read.</source>
          <target state="translated">읽은 실제 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">`GetChars`</ph> returns the number of available characters in the field.</source>
          <target state="translated"><ph id="ph1">`GetChars`</ph> 필드에 사용할 수 있는 문자 수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source>Most of the time this is the exact length of the field.</source>
          <target state="translated">대부분의 경우 이것은 필드의 길이입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source>However, the number returned may be less than the true length of the field if <ph id="ph1">`GetChars`</ph> has already been used to obtain characters from the field.</source>
          <target state="translated">그러나 반환 된 숫자 보다 작을 수도 있습니다는 필드의 길이 경우 <ph id="ph1">`GetChars`</ph> 문자를 가져올 필드에서 이미 사용 되었습니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source>The actual number of characters read can be less than the requested length, if the end of the field is reached.</source>
          <target state="translated">실제 읽은 문자 수는 필드의 끝에 도달할 경우 요청 된 길이 보다 작을 수 수 있습니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source>If you pass a buffer that is null (<ph id="ph1">`Nothing`</ph> in Visual Basic), <ph id="ph2">`GetChars`</ph> returns the length of the entire field in characters, not the remaining size based on the buffer offset parameter.</source>
          <target state="translated">버퍼는 null을 전달 하는 경우 (<ph id="ph1">`Nothing`</ph> Visual basic에서), <ph id="ph2">`GetChars`</ph> 문자 버퍼 오프셋된 매개 변수에 따라 나머지 크기가 아니라 전체 필드의 길이 반환 합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source>No conversions are performed; therefore the data to be retrieved must already be a character array or coercible to a character array.</source>
          <target state="translated">변환이 수행 되지 않습니다. 따라서 데이터를 검색할 수 있어야는 문자 배열 또는 문자 배열의으로 강제 변환 합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">`GetChars`</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">`GetChars`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">`TestGetChars`</ph> method expects to be passed a <ph id="ph2">`DataTableReader`</ph> filled with two columns of data: a file name in the first column, and an array of characters in the second.</source>
          <target state="translated"><ph id="ph1">`TestGetChars`</ph> 메서드에 전달할 필요는 <ph id="ph2">`DataTableReader`</ph> 데이터의 두 열으로: 첫 번째 열과 두 번째에서 문자의 배열에 파일 이름입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source>In addition, <ph id="ph1">`TestGetChars`</ph> lets you specify the buffer size to be used as it reads the data from the character array in the <ph id="ph2">`DataTableReader`</ph>.</source>
          <target state="translated">또한 <ph id="ph1">`TestGetChars`</ph> 에서 문자 배열에서 데이터를 읽을 때 사용할 버퍼 크기를 지정할 수 있습니다는 <ph id="ph2">`DataTableReader`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">`TestGetChars`</ph> creates a file corresponding to each row of data in the <ph id="ph2">`DataTableReader`</ph>, using the supplied data in the first column of the <ph id="ph3">`DataTableReader`</ph> as the file name.</source>
          <target state="translated"><ph id="ph1">`TestGetChars`</ph> 데이터의 각 행에 해당 하는 파일을 만듭니다는 <ph id="ph2">`DataTableReader`</ph>의 첫 번째 열에 제공 된 데이터를 사용 하는 <ph id="ph3">`DataTableReader`</ph> 파일 이름으로 합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source>This procedure demonstrates the use of the <ph id="ph1">`GetChars`</ph> method reading data that was stored in the <ph id="ph2">`DataTable`</ph> as a character array.</source>
          <target state="translated">이 절차의 사용법을 보여줍니다는 <ph id="ph1">`GetChars`</ph> 에 저장 된 데이터를 읽는 메서드는 <ph id="ph2">`DataTable`</ph> 문자 배열입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source>Any other type of data causes the <ph id="ph1">`GetChars`</ph> method to throw an <ph id="ph2">`InvalidCastException`</ph>.</source>
          <target state="translated">다른 유형의 데이터를 사용 하면은 <ph id="ph1">`GetChars`</ph> throw 하는 메서드는 <ph id="ph2">`InvalidCastException`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">전달된 인덱스가 0에서 <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 사이의 범위에 속하지 않는 경우</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source>An attempt was made to retrieve data from a deleted row.</source>
          <target state="translated">삭제된 행에서 데이터를 검색하려고 한 경우</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see langword="DataTableReader" /&gt;</ph>.</source>
          <target state="translated">닫힌 <ph id="ph1">&lt;see langword="DataTableReader" /&gt;</ph>의 열을 읽거나 액세스하려고 한 경우</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source>The specified column does not contain a character array.</source>
          <target state="translated">지정된 열에 문자 배열이 없는 경우</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)">
          <source>The zero-based column ordinal.</source>
          <target state="translated">열 서수(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)">
          <source>Gets a string representing the data type of the specified column.</source>
          <target state="translated">지정된 열의 데이터 형식을 나타내는 문자열을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)">
          <source>A string representing the column's data type.</source>
          <target state="translated">열의 데이터 형식을 나타내는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTableReader.GetDataTypeName%2A&gt;</ph> method always returns the type of the underlying <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> instead of a provider-specific type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTableReader.GetDataTypeName%2A&gt;</ph> 메서드는 항상 기본 유형을 반환 <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> 공급자별 형식이 아닌 합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)">
          <source>The following console application displays a list of fields and their type names from a simple <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>:</source>
          <target state="translated">다음 콘솔 응용 프로그램의 필드 및 단순 형식 이름 목록이 표시 됩니다. <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)">
          <source>The Console window displays the following results:</source>
          <target state="translated">콘솔 창에는 다음과 같은 결과가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">전달된 인덱스가 0에서 <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 사이의 범위에 속하지 않는 경우</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>.</source>
          <target state="translated">닫힌 <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>의 열을 읽거나 액세스하려고 한 경우</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDateTime(System.Int32)">
          <source>The zero-based column ordinal.</source>
          <target state="translated">열 서수(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDateTime(System.Int32)">
          <source>Gets the value of the specified column as a <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> object.</source>
          <target state="translated">지정된 열의 값에 해당하는 <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDateTime(System.Int32)">
          <source>The value of the specified column.</source>
          <target state="translated">지정된 열의 값입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetDateTime(System.Int32)">
          <source>No conversions are performed; therefore the data retrieved must already be a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> or coercible to a <ph id="ph2">`DataTime`</ph>.</source>
          <target state="translated">변환이 수행 되지 않습니다. 따라서 검색 된 데이터가 이미 해야는 <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> 으로 강제 변환 또는 <ph id="ph2">`DataTime`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetDateTime(System.Int32)">
          <source>Call <ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph> to see if there are null values before calling this method.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph> 이 메서드를 호출 하기 전에 null 값이 있는 경우 볼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetDateTime(System.Int32)">
          <source>The following example displays the contents of the column numbered 2 within the passed-in <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>.</source>
          <target state="translated">다음 예에서는 전달 된 기능 내 2 번 열의 내용을 표시 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetDateTime(System.Int32)">
          <source>If the value the column within a particular row is null, the code displays the text <ph id="ph1">\&lt;</ph>NULL&gt;.</source>
          <target state="translated">코드의 텍스트 표시 값에 특정 행 내의 열이 null 이면 <ph id="ph1">\&lt;</ph>NULL &gt; 합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetDateTime(System.Int32)">
          <source>If the data within the column is not of the correct type, the example displays an error message for each row.</source>
          <target state="translated">열 내의 데이터는 올바른 유형이 없는 경우이 예제에서는 각 행에 대 한 오류 메시지를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDateTime(System.Int32)">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">전달된 인덱스가 0에서 <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 사이의 범위에 속하지 않는 경우</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDateTime(System.Int32)">
          <source>An attempt was made to retrieve data from a deleted row.</source>
          <target state="translated">삭제된 행에서 데이터를 검색하려고 한 경우</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDateTime(System.Int32)">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see langword="DataTableReader" /&gt;</ph>.</source>
          <target state="translated">닫힌 <ph id="ph1">&lt;see langword="DataTableReader" /&gt;</ph>의 열을 읽거나 액세스하려고 한 경우</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDateTime(System.Int32)">
          <source>The specified column does not contain a DateTime value.</source>
          <target state="translated">지정된 열에 DateTime 값이 없는 경우</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDecimal(System.Int32)">
          <source>The zero-based column ordinal.</source>
          <target state="translated">열 서수(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDecimal(System.Int32)">
          <source>Gets the value of the specified column as a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>으로 지정된 열 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDecimal(System.Int32)">
          <source>The value of the specified column.</source>
          <target state="translated">지정된 열의 값입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetDecimal(System.Int32)">
          <source>No conversions are performed; therefore the data retrieved must already be a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> or coercible to a <ph id="ph2">`Decimal`</ph>.</source>
          <target state="translated">변환이 수행 되지 않습니다. 따라서 검색 된 데이터가 이미 해야는 <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> 으로 강제 변환 또는 <ph id="ph2">`Decimal`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetDecimal(System.Int32)">
          <source>Call <ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph> to see if there are null values before calling this method.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph> 이 메서드를 호출 하기 전에 null 값이 있는 경우 볼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetDecimal(System.Int32)">
          <source>The following example displays the contents of the column numbered 2 within the passed-in <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>.</source>
          <target state="translated">다음 예에서는 전달 된 기능 내 2 번 열의 내용을 표시 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetDecimal(System.Int32)">
          <source>If the value the column within a particular row is null, the code displays the text <ph id="ph1">\&lt;</ph>NULL&gt;.</source>
          <target state="translated">코드의 텍스트 표시 값에 특정 행 내의 열이 null 이면 <ph id="ph1">\&lt;</ph>NULL &gt; 합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetDecimal(System.Int32)">
          <source>If the data within the column is not of the correct type, the example displays an error message for each row.</source>
          <target state="translated">열 내의 데이터는 올바른 유형이 없는 경우이 예제에서는 각 행에 대 한 오류 메시지를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDecimal(System.Int32)">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">전달된 인덱스가 0에서 <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 사이의 범위에 속하지 않는 경우</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDecimal(System.Int32)">
          <source>An attempt was made to retrieve data from a deleted row.</source>
          <target state="translated">삭제된 행에서 데이터를 검색하려고 한 경우</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDecimal(System.Int32)">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see langword="DataTableReader" /&gt;</ph>.</source>
          <target state="translated">닫힌 <ph id="ph1">&lt;see langword="DataTableReader" /&gt;</ph>의 열을 읽거나 액세스하려고 한 경우</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDecimal(System.Int32)">
          <source>The specified column does not contain a <ph id="ph1">&lt;see langword="Decimal" /&gt;</ph> value.</source>
          <target state="translated">지정된 열에 <ph id="ph1">&lt;see langword="Decimal" /&gt;</ph> 값이 없는 경우</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDouble(System.Int32)">
          <source>The zero-based ordinal of the column.</source>
          <target state="translated">열의 0부터 시작하는 서수입니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDouble(System.Int32)">
          <source>Gets the value of the column as a double-precision floating point number.</source>
          <target state="translated">열의 값을 배정밀도 부동 소수점 숫자로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDouble(System.Int32)">
          <source>The value of the specified column.</source>
          <target state="translated">지정된 열의 값입니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetDouble(System.Int32)">
          <source>No conversions are performed; therefore the data retrieved must already be a double-precision floating point number or must be coercible to a double-precision floating point number.</source>
          <target state="translated">변환이 수행 되지 않습니다. 따라서 검색 되는 데이터 이미는 배정밀도 부동 소수점 숫자 이거나을 배정밀도 부동 소수점 숫자로 강제 변환할 수 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetDouble(System.Int32)">
          <source>Call <ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph> to see if there are null values before calling this method.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph> 이 메서드를 호출 하기 전에 null 값이 있는 경우 볼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetDouble(System.Int32)">
          <source>The following example displays the contents of the column numbered 2 within the passed-in <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>.</source>
          <target state="translated">다음 예에서는 전달 된 기능 내 2 번 열의 내용을 표시 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetDouble(System.Int32)">
          <source>If the value the column within a particular row is null, the code displays the text <ph id="ph1">\&lt;</ph>NULL&gt;.</source>
          <target state="translated">코드의 텍스트 표시 값에 특정 행 내의 열이 null 이면 <ph id="ph1">\&lt;</ph>NULL &gt; 합니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetDouble(System.Int32)">
          <source>If the data within the column is not of the correct type, the example displays an error message for each row.</source>
          <target state="translated">열 내의 데이터는 올바른 유형이 없는 경우이 예제에서는 각 행에 대 한 오류 메시지를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDouble(System.Int32)">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">전달된 인덱스가 0에서 <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 사이의 범위에 속하지 않는 경우</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDouble(System.Int32)">
          <source>An attempt was made to retrieve data from a deleted row.</source>
          <target state="translated">삭제된 행에서 데이터를 검색하려고 한 경우</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDouble(System.Int32)">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see langword="DataTableReader" /&gt;</ph>.</source>
          <target state="translated">닫힌 <ph id="ph1">&lt;see langword="DataTableReader" /&gt;</ph>의 열을 읽거나 액세스하려고 한 경우</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDouble(System.Int32)">
          <source>The specified column does not contain a double-precision floating point number.</source>
          <target state="translated">지정된 열에 배정밀도 부동 소수점 숫자가 없는 경우</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetEnumerator">
          <source>Returns an enumerator that can be used to iterate through the item collection.</source>
          <target state="translated">항목 컬렉션 전체에서 반복하는 데 사용할 수 있는 열거자를 반환합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> object that represents the item collection.</source>
          <target state="translated">항목 컬렉션을 나타내는 <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetEnumerator">
          <source>Enumerators only allow for reading the data in the <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>.</source>
          <target state="translated">열거자의 데이터 읽기에 대 한 허용 된 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetEnumerator">
          <source>Enumerators cannot be used to modify the underlying collection.</source>
          <target state="translated">내부 컬렉션을 수정 하 여 열거자를 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetEnumerator">
          <source>At first, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">처음에 열거자는 컬렉션의 첫 번째 요소 앞에 배치 됩니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetEnumerator">
          <source>At this position, calling <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> throws an exception.</source>
          <target state="translated">이 위치에서, 호출 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">`MoveNext`</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">`Current`</ph>.</source>
          <target state="translated">따라서 <ph id="ph1">`MoveNext`</ph>의 값을 읽기 전에 <ph id="ph2">`Current`</ph>를 호출하여 열거자를 해당 컬렉션의 첫 번째 요소로 보내야 합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetEnumerator">
          <source><ph id="ph1">`Current`</ph> returns a <ph id="ph2">&lt;xref:System.Data.Common.DbDataRecord&gt;</ph>, and returns the same object until either <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">`Current`</ph> 반환 된 <ph id="ph2">&lt;xref:System.Data.Common.DbDataRecord&gt;</ph>, 될 때까지 동일한 개체를 반환 하 고 <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 라고 합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetEnumerator">
          <source><ph id="ph1">`MoveNext`</ph> sets <ph id="ph2">`Current`</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">`MoveNext`</ph>는 <ph id="ph2">`Current`</ph>를 다음 요소로 설정합니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetEnumerator">
          <source>After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling <ph id="ph1">`MoveNext`</ph> returns false.</source>
          <target state="translated">컬렉션의 끝이 전달 된 후 열거자는 컬렉션의 마지막 요소 뒤에 배치 하 고 호출 되 <ph id="ph1">`MoveNext`</ph> false를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetEnumerator">
          <source>If the last call to <ph id="ph1">`MoveNext`</ph> returned <ph id="ph2">`false`</ph>, calling <ph id="ph3">`Current`</ph> throws an exception.</source>
          <target state="translated">마지막으로 호출 하는 경우 <ph id="ph1">`MoveNext`</ph> 반환 <ph id="ph2">`false`</ph>호출, <ph id="ph3">`Current`</ph> 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetEnumerator">
          <source>In addition, because the <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> provides forward-only access to its data, calling the <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> method of the IEnumerator throws a <ph id="ph3">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">또한 때문에 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> 호출 해당 데이터에 대 한 정방향 전용 액세스를 제공는 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 는 r의 메서드에서 throw 된 <ph id="ph3">&lt;xref:System.NotSupportedException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> provides a stable enumerator.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> 안정적인 열거자를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetEnumerator">
          <source>This means that even if row deletions or additions occur within the underlying data, the enumerator returned by a call to <ph id="ph1">&lt;xref:System.Data.DataTableReader.GetEnumerator%2A&gt;</ph> is still valid.</source>
          <target state="translated">즉, 기본 데이터 내에서 발생 하는 행 삭제 또는 추가 하는 경우에에 대 한 호출에서 반환 된 열거자 <ph id="ph1">&lt;xref:System.Data.DataTableReader.GetEnumerator%2A&gt;</ph> 여전히 유효 합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetEnumerator">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Data.DataTableReader.GetEnumerator%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Data.DataTableReader.GetEnumerator%2A&gt;</ph> 메서드를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetEnumerator">
          <source>This includes the behavior of the enumerator when rows are deleted from the underlying <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> while the enumerator is active.</source>
          <target state="translated">열거자의 동작은 내부에서 행을 삭제 하는 경우가이 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> 열거자를 활성화 합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetEnumerator">
          <source>The procedure displays the following text in the Console window:</source>
          <target state="translated">콘솔 창에 다음 텍스트를 표시 하는 프로시저:</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetEnumerator">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>.</source>
          <target state="translated">닫힌 <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>의 열을 읽거나 액세스하려고 한 경우</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetFieldType(System.Int32)">
          <source>The zero-based column ordinal.</source>
          <target state="translated">열 서수(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetFieldType(System.Int32)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that is the data type of the object.</source>
          <target state="translated">개체의 데이터 형식인 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetFieldType(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that is the data type of the object.</source>
          <target state="translated">개체의 데이터 형식인 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetFieldType(System.Int32)">
          <source>Call the following procedure, passing in a <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> instance in order to display a list of all the fields and the full name for each type in the Console window.</source>
          <target state="translated">호출에 전달 합니다. 다음 절차는 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> 콘솔 창에 있는 모든 필드 및 각 형식에 대 한 전체 이름 목록을 표시 하기 위해 인스턴스.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetFieldType(System.Int32)">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">전달된 인덱스가 0에서 <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 사이의 범위에 속하지 않는 경우</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetFieldType(System.Int32)">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> .</source>
          <target state="translated">닫힌 <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>의 열을 읽거나 액세스하려고 합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetFloat(System.Int32)">
          <source>The zero-based column ordinal.</source>
          <target state="translated">열 서수(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetFloat(System.Int32)">
          <source>Gets the value of the specified column as a single-precision floating point number.</source>
          <target state="translated">지정된 열의 값에 해당하는 단정밀도 부동 소수점 숫자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetFloat(System.Int32)">
          <source>The value of the column.</source>
          <target state="translated">열의 값입니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetFloat(System.Int32)">
          <source>No conversions are performed; therefore the data retrieved must already be a single-precision floating point number or must be coercible to a single-precision floating point number.</source>
          <target state="translated">변환이 수행 되지 않습니다. 따라서 검색 된 데이터 이미는 단 정밀도 부동 소수점 숫자 이거나를 단 정밀도 부동 소수점 숫자로 강제 변환할 수 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetFloat(System.Int32)">
          <source>Call <ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph> to see if there are null values before calling this method.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph> 이 메서드를 호출 하기 전에 null 값이 있는 경우 볼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetFloat(System.Int32)">
          <source>The following example displays the contents of the column numbered 2 within the passed-in <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>.</source>
          <target state="translated">다음 예에서는 전달 된 기능 내 2 번 열의 내용을 표시 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetFloat(System.Int32)">
          <source>If the value the column within a particular row is null, the code displays the text <ph id="ph1">\&lt;</ph>NULL&gt;.</source>
          <target state="translated">코드의 텍스트 표시 값에 특정 행 내의 열이 null 이면 <ph id="ph1">\&lt;</ph>NULL &gt; 합니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetFloat(System.Int32)">
          <source>If the data within the column is not of the correct type, the example displays an error message for each row.</source>
          <target state="translated">열 내의 데이터는 올바른 유형이 없는 경우이 예제에서는 각 행에 대 한 오류 메시지를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetFloat(System.Int32)">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">전달된 인덱스가 0에서 <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 사이의 범위에 속하지 않는 경우</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetFloat(System.Int32)">
          <source>An attempt was made to retrieve data from a deleted row.</source>
          <target state="translated">삭제된 행에서 데이터를 검색하려고 한 경우</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetFloat(System.Int32)">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>.</source>
          <target state="translated">닫힌 <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>의 열을 읽거나 액세스하려고 한 경우</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetFloat(System.Int32)">
          <source>The specified column does not contain a single-precision floating point number.</source>
          <target state="translated">지정된 열에 단정밀도 부동 소수점 숫자가 없는 경우</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetGuid(System.Int32)">
          <source>The zero-based column ordinal.</source>
          <target state="translated">열 서수(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetGuid(System.Int32)">
          <source>Gets the value of the specified column as a globally-unique identifier (GUID).</source>
          <target state="translated">지정된 열의 값에 해당하는 GUID(Globally Unique ID)를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetGuid(System.Int32)">
          <source>The value of the specified column.</source>
          <target state="translated">지정된 열의 값입니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetGuid(System.Int32)">
          <source>No conversions are performed; therefore the data retrieved must already be a <ph id="ph1">&lt;xref:System.Guid&gt;</ph> or coercible to a <ph id="ph2">`Guid`</ph>.</source>
          <target state="translated">변환이 수행 되지 않습니다. 따라서 검색 된 데이터가 이미 해야는 <ph id="ph1">&lt;xref:System.Guid&gt;</ph> 으로 강제 변환 또는 <ph id="ph2">`Guid`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetGuid(System.Int32)">
          <source>Call <ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph> to see if there are null values before calling this method.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph> 이 메서드를 호출 하기 전에 null 값이 있는 경우 볼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetGuid(System.Int32)">
          <source>The following example displays the contents of the column numbered 2 within the passed-in DataTableReader.</source>
          <target state="translated">다음 예에서는 전달 된 DataTableReader 내에서 2 번 열의 내용을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetGuid(System.Int32)">
          <source>If the value the column within a particular row is null, the code displays the text <ph id="ph1">\&lt;</ph>NULL&gt;.</source>
          <target state="translated">코드의 텍스트 표시 값에 특정 행 내의 열이 null 이면 <ph id="ph1">\&lt;</ph>NULL &gt; 합니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetGuid(System.Int32)">
          <source>If the data within the column is not of the correct type, the example displays an error message for each row.</source>
          <target state="translated">열 내의 데이터는 올바른 유형이 없는 경우이 예제에서는 각 행에 대 한 오류 메시지를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetGuid(System.Int32)">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">전달된 인덱스가 0에서 <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 사이의 범위에 속하지 않는 경우</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetGuid(System.Int32)">
          <source>An attempt was made to retrieve data from a deleted row.</source>
          <target state="translated">삭제된 행에서 데이터를 검색하려고 한 경우</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetGuid(System.Int32)">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>.</source>
          <target state="translated">닫힌 <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>의 열을 읽거나 액세스하려고 한 경우</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetGuid(System.Int32)">
          <source>The specified column does not contain a GUID.</source>
          <target state="translated">지정된 열에 GUID가 없는 경우</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetInt16(System.Int32)">
          <source>The zero-based column ordinal</source>
          <target state="translated">열 서수(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetInt16(System.Int32)">
          <source>Gets the value of the specified column as a 16-bit signed integer.</source>
          <target state="translated">지정된 열의 값을 16비트 부호 있는 정수로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetInt16(System.Int32)">
          <source>The value of the specified column.</source>
          <target state="translated">지정된 열의 값입니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetInt16(System.Int32)">
          <source>No conversions are performed; therefore, the data retrieved must already be an <ph id="ph1">&lt;xref:System.Int16&gt;</ph> or coercible to an <ph id="ph2">`Int16`</ph>.</source>
          <target state="translated">변환이 수행 되지 않습니다. 따라서 검색 된 데이터가 이미 해야 프로그램 <ph id="ph1">&lt;xref:System.Int16&gt;</ph> 으로 강제 변환 또는 <ph id="ph2">`Int16`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetInt16(System.Int32)">
          <source>Call <ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph> to see if there are null values before calling this method.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph> 이 메서드를 호출 하기 전에 null 값이 있는 경우 볼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetInt16(System.Int32)">
          <source>The following example displays the contents of the column numbered 2 within the passed-in <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>.</source>
          <target state="translated">다음 예에서는 전달 된 기능 내 2 번 열의 내용을 표시 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetInt16(System.Int32)">
          <source>If the value the column within a particular row is null, the code displays the text <ph id="ph1">\&lt;</ph>NULL&gt;.</source>
          <target state="translated">코드의 텍스트 표시 값에 특정 행 내의 열이 null 이면 <ph id="ph1">\&lt;</ph>NULL &gt; 합니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetInt16(System.Int32)">
          <source>If the data within the column is not of the correct type, the example displays an error message for each row.</source>
          <target state="translated">열 내의 데이터는 올바른 유형이 없는 경우이 예제에서는 각 행에 대 한 오류 메시지를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetInt16(System.Int32)">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">전달된 인덱스가 0에서 <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 사이의 범위에 속하지 않는 경우</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetInt16(System.Int32)">
          <source>An attempt was made to retrieve data from a deleted row.</source>
          <target state="translated">삭제된 행에서 데이터를 검색하려고 한 경우</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetInt16(System.Int32)">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>.</source>
          <target state="translated">닫힌 <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>의 열을 읽거나 액세스하려고 한 경우</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetInt16(System.Int32)">
          <source>The specified column does not contain a 16-bit signed integer.</source>
          <target state="translated">지정된 열에 16비트 부호 있는 정수가 없는 경우</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetInt32(System.Int32)">
          <source>The zero-based column ordinal</source>
          <target state="translated">열 서수(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetInt32(System.Int32)">
          <source>Gets the value of the specified column as a 32-bit signed integer.</source>
          <target state="translated">지정된 열의 값에 해당하는 32비트 부호 있는 정수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetInt32(System.Int32)">
          <source>The value of the specified column.</source>
          <target state="translated">지정된 열의 값입니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetInt32(System.Int32)">
          <source>No conversions are performed; therefore, the data retrieved must already be an <ph id="ph1">&lt;xref:System.Int32&gt;</ph> or coercible to an <ph id="ph2">`Int32`</ph>.</source>
          <target state="translated">변환이 수행 되지 않습니다. 따라서 검색 된 데이터가 이미 해야 프로그램 <ph id="ph1">&lt;xref:System.Int32&gt;</ph> 으로 강제 변환 또는 <ph id="ph2">`Int32`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetInt32(System.Int32)">
          <source>Call <ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph> to see if there are null values before calling this method.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph> 이 메서드를 호출 하기 전에 null 값이 있는 경우 볼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetInt32(System.Int32)">
          <source>The following example displays the contents of the column numbered 2 within the passed-in <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>.</source>
          <target state="translated">다음 예에서는 전달 된 기능 내 2 번 열의 내용을 표시 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetInt32(System.Int32)">
          <source>If the value the column within a particular row is null, the code displays the text <ph id="ph1">\&lt;</ph>NULL&gt;.</source>
          <target state="translated">코드의 텍스트 표시 값에 특정 행 내의 열이 null 이면 <ph id="ph1">\&lt;</ph>NULL &gt; 합니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetInt32(System.Int32)">
          <source>If the data within the column is not of the correct type, the example displays an error message for each row.</source>
          <target state="translated">열 내의 데이터는 올바른 유형이 없는 경우이 예제에서는 각 행에 대 한 오류 메시지를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetInt32(System.Int32)">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">전달된 인덱스가 0에서 <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 사이의 범위에 속하지 않는 경우</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetInt32(System.Int32)">
          <source>An attempt was made to retrieve data from a deleted row.</source>
          <target state="translated">삭제된 행에서 데이터를 검색하려고 한 경우</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetInt32(System.Int32)">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> .</source>
          <target state="translated">닫힌 <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>의 열을 읽거나 액세스하려고 합니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetInt32(System.Int32)">
          <source>The specified column does not contain a 32-bit signed integer value.</source>
          <target state="translated">지정된 열에 32비트 부호 있는 정수 값이 없는 경우</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetInt64(System.Int32)">
          <source>The zero-based column ordinal</source>
          <target state="translated">열 서수(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetInt64(System.Int32)">
          <source>Gets the value of the specified column as a 64-bit signed integer.</source>
          <target state="translated">지정된 열의 값에 해당하는 64비트 부호 있는 정수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetInt64(System.Int32)">
          <source>The value of the specified column.</source>
          <target state="translated">지정된 열의 값입니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetInt64(System.Int32)">
          <source>No conversions are performed; therefore, the data retrieved must already be an <ph id="ph1">&lt;xref:System.Int64&gt;</ph> or coercible to an <ph id="ph2">`Int64`</ph>.</source>
          <target state="translated">변환이 수행 되지 않습니다. 따라서 검색 된 데이터가 이미 해야 프로그램 <ph id="ph1">&lt;xref:System.Int64&gt;</ph> 으로 강제 변환 또는 <ph id="ph2">`Int64`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetInt64(System.Int32)">
          <source>Call <ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph> to see if there are null values before calling this method.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph> 이 메서드를 호출 하기 전에 null 값이 있는 경우 볼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetInt64(System.Int32)">
          <source>The following example displays the contents of the column numbered 2 within the passed-in <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>.</source>
          <target state="translated">다음 예에서는 전달 된 기능 내 2 번 열의 내용을 표시 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetInt64(System.Int32)">
          <source>If the value the column within a particular row is null, the code displays the text <ph id="ph1">\&lt;</ph>NULL&gt;.</source>
          <target state="translated">코드의 텍스트 표시 값에 특정 행 내의 열이 null 이면 <ph id="ph1">\&lt;</ph>NULL &gt; 합니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetInt64(System.Int32)">
          <source>If the data within the column is not of the correct type, the example displays an error message for each row.</source>
          <target state="translated">열 내의 데이터는 올바른 유형이 없는 경우이 예제에서는 각 행에 대 한 오류 메시지를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetInt64(System.Int32)">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">전달된 인덱스가 0에서 <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 사이의 범위에 속하지 않는 경우</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetInt64(System.Int32)">
          <source>An attempt was made to retrieve data from a deleted row.</source>
          <target state="translated">삭제된 행에서 데이터를 검색하려고 한 경우</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetInt64(System.Int32)">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> .</source>
          <target state="translated">닫힌 <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>의 열을 읽거나 액세스하려고 합니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetInt64(System.Int32)">
          <source>The specified column does not contain a 64-bit signed integer value.</source>
          <target state="translated">지정된 열에 64비트 부호 있는 정수 값이 없습니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetName(System.Int32)">
          <source>The zero-based column ordinal</source>
          <target state="translated">열 서수(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetName(System.Int32)">
          <source>Gets the value of the specified column as a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>으로 지정된 열 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetName(System.Int32)">
          <source>The name of the specified column.</source>
          <target state="translated">지정된 열의 이름입니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetName(System.Int32)">
          <source>The <ph id="ph1">`GetName`</ph> and <ph id="ph2">&lt;xref:System.Data.DataTableReader.GetOrdinal%2A&gt;</ph> methods provide inverse functionality.</source>
          <target state="translated"><ph id="ph1">`GetName`</ph> 및 <ph id="ph2">&lt;xref:System.Data.DataTableReader.GetOrdinal%2A&gt;</ph> 메서드 역 기능을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetName(System.Int32)">
          <source>That is, calling <ph id="ph1">`GetOrdinal`</ph> on the return value of calling <ph id="ph2">`GetName`</ph> should return the original parameter passed to <ph id="ph3">`GetName`</ph>; the same applies to calling the procedures in the opposite order.</source>
          <target state="translated">보류 중인 <ph id="ph1">`GetOrdinal`</ph> 호출의 반환 값에 <ph id="ph2">`GetName`</ph> 에 전달 된 원래 매개 변수를 반환 해야 <ph id="ph3">`GetName`</ph>; 반대 순서로 프로시저를 호출 하 여 마찬가지입니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetName(System.Int32)">
          <source>The following simple example includes a procedure that lists the names of all the columns within the specified <ph id="ph1">`DataTableReader`</ph>, and the column's ordinal position, to the Console window.</source>
          <target state="translated">지정 된 모든 열 이름을 나열 하는 프로시저를 포함 하는 다음의 간단한 예제 <ph id="ph1">`DataTableReader`</ph>, 및를 콘솔 창 열의 서 수 위치입니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetName(System.Int32)">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">전달된 인덱스가 0에서 <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 사이의 범위에 속하지 않는 경우</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetName(System.Int32)">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>.</source>
          <target state="translated">닫힌 <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>의 열을 읽거나 액세스하려고 한 경우</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetOrdinal(System.String)">
          <source>The name of the column.</source>
          <target state="translated">열 이름입니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetOrdinal(System.String)">
          <source>Gets the column ordinal, given the name of the column.</source>
          <target state="translated">열 이름이 지정된 경우 열 서수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetOrdinal(System.String)">
          <source>The zero-based column ordinal.</source>
          <target state="translated">열 서수(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetOrdinal(System.String)">
          <source>Because most of the methods provided by the <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> class must be provided with an ordinal column number, you can use the <ph id="ph2">`GetOrdinal`</ph> method to retrieve the column number, given the name of the column.</source>
          <target state="translated">대부분의 메서드를 제공 하므로 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> 클래스는 서 수 열 번호를 사용 하면 제공 해야 합니다.는 <ph id="ph2">`GetOrdinal`</ph> 열 이름이 지정 된 열 번호를 검색 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetOrdinal(System.String)">
          <source><ph id="ph1">`GetOrdinal`</ph> performs a case-sensitive lookup first.</source>
          <target state="translated"><ph id="ph1">`GetOrdinal`</ph> 대/소문자 구분 조회를 먼저 수행합니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetOrdinal(System.String)">
          <source>If it fails, a second case-insensitive search is made.</source>
          <target state="translated">실패 한 경우에 두 번째 대/소문자 구분 검색이 수행 됩니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetOrdinal(System.String)">
          <source>If the column number is not found an <ph id="ph1">`IndexOutOfRangeException`</ph> is thrown.</source>
          <target state="translated">열 번호를 찾을 수 없는 경우는 <ph id="ph1">`IndexOutOfRangeException`</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetOrdinal(System.String)">
          <source><ph id="ph1">`GetOrdinal`</ph> is kana-width insensitive.</source>
          <target state="translated"><ph id="ph1">`GetOrdinal`</ph> 가 되지 일본어가 나 너비 구분 됩니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetOrdinal(System.String)">
          <source>Because ordinal-based lookups are more efficient than named lookups, it is inefficient to call <ph id="ph1">`GetOrdinal`</ph> within a loop.</source>
          <target state="translated">서 수 기반 조회가 명명 된 조회 보다 효율적 이므로, 것이 없습니다 효율적 호출 <ph id="ph1">`GetOrdinal`</ph> 루프 내에서.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetOrdinal(System.String)">
          <source>Save time by calling <ph id="ph1">`GetOrdinal`</ph> one time and assigning the results to an integer variable for use within the loop</source>
          <target state="translated">호출 하 여 시간 절약 <ph id="ph1">`GetOrdinal`</ph> 루프 내에서 사용할 정수 변수에 결과 할당 하 고 한 번</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetOrdinal(System.String)">
          <source>If you have only a column name, in which case the column name is user supplied, and you must retrieve information from the column, you can use a procedure like the following to extract the required information.</source>
          <target state="translated">열 이름만 설정한 경우이 경우 열 이름을 사용자가 제공 하며 열에서 정보를 검색 해야, 다음과 같은 프로시저를 사용 하 여 필요한 정보를 추출 하 합니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetOrdinal(System.String)">
          <source>In this example, the procedure accepts a column name and returns the data that is contained within that column for the current row in the <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> :</source>
          <target state="translated">이 예제에서는 절차 열 이름을 허용 하 고 현재 행에 대 한 해당 열에 포함 된 데이터를 반환 된 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> :</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetOrdinal(System.String)">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>.</source>
          <target state="translated">닫힌 <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>의 열을 읽거나 액세스하려고 한 경우</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetOrdinal(System.String)">
          <source>The name specified is not a valid column name.</source>
          <target state="translated">지정된 이름이 올바른 열 이름이 아닌 경우</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)">
          <source>The zero-based column ordinal.</source>
          <target state="translated">열 서수(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)">
          <source>Gets the type of the specified column in provider-specific format.</source>
          <target state="translated">지정된 열의 형식을 공급자별 형식으로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that is the data type of the object.</source>
          <target state="translated">개체의 데이터 형식인 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)">
          <source>Because the <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> always returns the type stored within the underlying <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph>, the value returned by calling the <ph id="ph3">&lt;xref:System.Data.DataTableReader.GetProviderSpecificFieldType%2A&gt;</ph> method always returns the same type as the type stored within the <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> 항상 내부에 저장 된 형식을 반환 합니다 <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph>를 호출 하 여 반환 되는 값의 <ph id="ph3">&lt;xref:System.Data.DataTableReader.GetProviderSpecificFieldType%2A&gt;</ph> 메서드는 항상 동일한 형식 내에 저장 된 형식으로 반환는 <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)">
          <source>When you work with the <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> class, calling the <ph id="ph2">&lt;xref:System.Data.DataTableReader.GetProviderSpecificFieldType%2A&gt;</ph> method returns the same type as calling the <ph id="ph3">&lt;xref:System.Type.GetType%2A&gt;</ph> method.</source>
          <target state="translated">작업을 할 때는 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> 클래스를 호출 하는 <ph id="ph2">&lt;xref:System.Data.DataTableReader.GetProviderSpecificFieldType%2A&gt;</ph> 메서드에서 호출할 때와 동일한 형식이 반환는 <ph id="ph3">&lt;xref:System.Type.GetType%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">전달된 인덱스가 0에서 <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 사이의 범위에 속하지 않는 경우</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>.</source>
          <target state="translated">닫힌 <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>의 열을 읽거나 액세스하려고 한 경우</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)">
          <source>The zero-based number of the column whose value is retrieved.</source>
          <target state="translated">값을 검색하는 열의 번호(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)">
          <source>Gets the value of the specified column in provider-specific format.</source>
          <target state="translated">지정된 열의 값을 공급자별 형식으로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)">
          <source>The value of the specified column in provider-specific format.</source>
          <target state="translated">지정된 열의 값이며 공급자별 형식으로 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)">
          <source>Because the <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> always returns the type stored within the underlying <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph>, the value returned by calling the <ph id="ph3">&lt;xref:System.Data.DataTableReader.GetProviderSpecificValue%2A&gt;</ph> method always returns data of the same type as the data stored within the <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> 항상 내부에 저장 된 형식을 반환 합니다 <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph>를 호출 하 여 반환 되는 값의 <ph id="ph3">&lt;xref:System.Data.DataTableReader.GetProviderSpecificValue%2A&gt;</ph> 메서드 내에 저장 된 데이터와 같은 유형의 데이터는 항상 반환는 <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)">
          <source>When you work with the <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> class, calling the <ph id="ph2">&lt;xref:System.Data.DataTableReader.GetProviderSpecificValue%2A&gt;</ph> method returns the same value and type as calling the <ph id="ph3">&lt;xref:System.Data.DataTableReader.GetValue%2A&gt;</ph> method.</source>
          <target state="translated">작업을 할 때는 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> 클래스를 호출 하는 <ph id="ph2">&lt;xref:System.Data.DataTableReader.GetProviderSpecificValue%2A&gt;</ph> 메서드 반환 값을 호출할 때와 입력 동일한는 <ph id="ph3">&lt;xref:System.Data.DataTableReader.GetValue%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">전달된 인덱스가 0에서 <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 사이의 범위에 속하지 않는 경우</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)">
          <source>An attempt was made to retrieve data from a deleted row.</source>
          <target state="translated">삭제된 행에서 데이터를 검색하려고 한 경우</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph></source>
          <target state="translated">닫힌 <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>의 열을 읽거나 액세스하려고 한 경우</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])">
          <source>An array of objects to be filled in with type information for the columns in the <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>의 열에 대한 형식 정보로 채워질 개체 배열입니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])">
          <source>Fills the supplied array with provider-specific type information for all the columns in the <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>의 모든 열에 대한 공급자별 형식 정보를 제공된 배열에 채웁니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])">
          <source>The number of column values copied into the array.</source>
          <target state="translated">배열에 복사된 열 값의 개수입니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])">
          <source>Because the <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> always returns the data of the type stored within the underlying <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph>, the values returned by calling the <ph id="ph3">&lt;xref:System.Data.DataTableReader.GetProviderSpecificValues%2A&gt;</ph> method is always of the same types as the data stored within the <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> 항상 내부에 저장 된 형식의 데이터를 반환 <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph>를 호출 하 여 반환 되는 값의 <ph id="ph3">&lt;xref:System.Data.DataTableReader.GetProviderSpecificValues%2A&gt;</ph> 내에 저장 된 데이터와 같은 종류의 메서드는 항상는 <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])">
          <source>When you work with the <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> class, calling the <ph id="ph2">&lt;xref:System.Data.DataTableReader.GetProviderSpecificValues%2A&gt;</ph> method returns the same values and types as calling the <ph id="ph3">&lt;xref:System.Data.DataTableReader.GetValues%2A&gt;</ph> method.</source>
          <target state="translated">작업을 할 때는 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> 클래스를 호출 하는 <ph id="ph2">&lt;xref:System.Data.DataTableReader.GetProviderSpecificValues%2A&gt;</ph> 메서드를 호출할 때와 동일한 값과 형식을 반환는 <ph id="ph3">&lt;xref:System.Data.DataTableReader.GetValues%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])">
          <source>An attempt was made to retrieve data from a deleted row.</source>
          <target state="translated">삭제된 행에서 데이터를 검색하려고 한 경우</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>.</source>
          <target state="translated">닫힌 <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>의 열을 읽거나 액세스하려고 한 경우</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> that describes the column metadata of the <ph id="ph2">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>의 열 메타데이터를 정의하는 <ph id="ph2">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> that describes the column metadata.</source>
          <target state="translated">열 메타데이터를 정의하는 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The GetSchemaTable method returns metadata about each column in the following order:</source>
          <target state="translated">GetSchemaTable 메서드는 다음 순서 대로 각 열에 대 한 메타 데이터를 반환합니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>DataReader column</source>
          <target state="translated">DataReader 열</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>ColumnName</source>
          <target state="translated">열 이름</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The name of the column as it appears in the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">에 열의 나타나는지는 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>ColumnOrdinal</source>
          <target state="translated">ColumnOrdinal</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The ordinal of the column</source>
          <target state="translated">열의 서 수</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>ColumnSize</source>
          <target state="translated">ColumnSize</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>-1 if the <ph id="ph1">&lt;xref:System.Data.Common.SchemaTableColumn.ColumnSize&gt;</ph> (or <ph id="ph2">&lt;xref:System.Data.DataColumn.MaxLength%2A&gt;</ph>) property of the <ph id="ph3">&lt;xref:System.Data.DataColumn&gt;</ph> cannot be determined or is not relevant; otherwise, 0 or a positive integer that contains the <ph id="ph4">`MaxLength`</ph> value.</source>
          <target state="translated">-없으면 1는 <ph id="ph1">&lt;xref:System.Data.Common.SchemaTableColumn.ColumnSize&gt;</ph> (또는 <ph id="ph2">&lt;xref:System.Data.DataColumn.MaxLength%2A&gt;</ph>)의 속성은 <ph id="ph3">&lt;xref:System.Data.DataColumn&gt;</ph> 확인할 수 없거나 관련 고, 그렇지 않으면 0 또는 양의 정수를 포함 하는 <ph id="ph4">`MaxLength`</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>NumericPrecision</source>
          <target state="translated">NumericPrecision</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>If the column type is a numeric type, this is the maximum precision of the column.</source>
          <target state="translated">열 형식이 숫자 형식인 경우 열의 최대 전체 자릿수입니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>If the column type is not a numeric data type, this is a null value.</source>
          <target state="translated">열 형식을 숫자 데이터 형식이 없으면 null 값입니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>NumericScale</source>
          <target state="translated">NumericScale</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>If column data type has a scale component, return the number of digits to the right of the decimal point.</source>
          <target state="translated">열 데이터 형식에는 크기 조정 구성 요소를 경우 소수점 오른쪽 자릿수를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>Otherwise, return a null value.</source>
          <target state="translated">그렇지 않은 경우 null 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>DataType</source>
          <target state="translated">데이터 형식</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The underlying type of the column.</source>
          <target state="translated">내부 형식 열입니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>ProviderType</source>
          <target state="translated">ProviderType</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The indicator of the column's data type.</source>
          <target state="translated">표시기는 열의 데이터 형식입니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>If the data type of the column varies from row to row, this value is <ph id="ph1">&lt;xref:System.Object&gt;</ph>.</source>
          <target state="translated">열의 데이터 형식을 행은 다양 한 경우이 값은 <ph id="ph1">&lt;xref:System.Object&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>This column cannot contain a null value.</source>
          <target state="translated">이 열에 null 값을 포함할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>IsLong</source>
          <target state="translated">IsLong</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source><ph id="ph1">`true`</ph> if the data type of the column is <ph id="ph2">&lt;xref:System.String&gt;</ph> and its <ph id="ph3">&lt;xref:System.Data.DataColumn.MaxLength%2A&gt;</ph> property is -1.</source>
          <target state="translated"><ph id="ph1">`true`</ph> 열의 데이터 형식이 <ph id="ph2">&lt;xref:System.String&gt;</ph> 및 해당 <ph id="ph3">&lt;xref:System.Data.DataColumn.MaxLength%2A&gt;</ph> 속성이-1입니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>Otherwise, <ph id="ph1">`false`</ph>.</source>
          <target state="translated">그렇지 않으면 <ph id="ph1">`false`</ph>입니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>AllowDBNull</source>
          <target state="translated">AllowDBNull</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source><ph id="ph1">`true`</ph> if the AllowDbNull constraint is set to true for the column; otherwise, <ph id="ph2">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`true`</ph> AllowDbNull 제약 조건이 설정 된 경우 열에 대 한 true로 그렇지 않으면 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>IsReadOnly</source>
          <target state="translated">IsReadOnly</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source><ph id="ph1">`true`</ph> if the column cannot be modified; otherwise <ph id="ph2">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`true`</ph> 열을 수정할 수 없습니다. 그렇지 않으면 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>IsRowVersion</source>
          <target state="translated">IsRowVersion</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source><ph id="ph1">`false`</ph>, for every column.</source>
          <target state="translated"><ph id="ph1">`false`</ph>모든 열에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>IsUnique</source>
          <target state="translated">IsUnique</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source><ph id="ph1">`true`</ph>: No two rows in the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> can have the same value in this column.</source>
          <target state="translated"><ph id="ph1">`true`</ph>: 각 행에서의 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> 이 열에 동일한 값을 가질 수 있습니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source><ph id="ph1">`IsUnique`</ph> is guaranteed to be true if the column represents a key by itself or if there is a constraint of type UNIQUE that applies only to this column.</source>
          <target state="translated"><ph id="ph1">`IsUnique`</ph> 단독으로 표시 되거나이 열에만 적용 되는 UNIQUE 유형의 제약 조건이 있는 경우 해당 열이 키를 나타내는 경우 true로 보장 됩니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source><ph id="ph1">`false`</ph>: The column can contain duplicate values in the <ph id="ph2">`DataTable`</ph>.</source>
          <target state="translated"><ph id="ph1">`false`</ph>:이 열에 중복 된 값 수는 <ph id="ph2">`DataTable`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The default of this column is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">이 열의 기본값은 <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>IsKey</source>
          <target state="translated">IsKey</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source><ph id="ph1">`true`</ph>: The column is one of a set of columns that, taken together, uniquely identify the row in the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`true`</ph>:이 열은 열 집합 중 하나는에 있는 행을 고유 하 게 식별 전체적으로 볼 때는 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The set of columns with <ph id="ph1">`IsKey`</ph> set to <ph id="ph2">`true`</ph> must uniquely identify a row in the <ph id="ph3">`DataTable`</ph>.</source>
          <target state="translated">열 집합 <ph id="ph1">`IsKey`</ph> 로 설정 <ph id="ph2">`true`</ph> 의 행을 고유 하 게 식별 해야 합니다는 <ph id="ph3">`DataTable`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>There is no requirement that this set of columns is a minimal set of columns.</source>
          <target state="translated">이 열 집합이 열의 최소 집합 임을 않아도가 됩니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>This set of columns may be generated from a <ph id="ph1">`DataTable`</ph> primary key, a unique constraint or a unique index.</source>
          <target state="translated">이 열 집합에서 생성 될 수 있습니다는 <ph id="ph1">`DataTable`</ph> 기본 키나 unique 제약 조건을 고유 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source><ph id="ph1">`false`</ph>: The column is not required to uniquely identify the row.</source>
          <target state="translated"><ph id="ph1">`false`</ph>:이 열은 행을 식별할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>This value is <ph id="ph1">`true`</ph> if the column participates in a single or composite primary key.</source>
          <target state="translated">이 값은 <ph id="ph1">`true`</ph> 열이 단일 또는 복합 기본 키에 참여 하는 경우.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>Otherwise, its value is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">그렇지 않으면 해당 값은 <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>IsAutoIncrement</source>
          <target state="translated">IsAutoIncrement</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source><ph id="ph1">`true`</ph>: The column assigns values to new rows in fixed increments.</source>
          <target state="translated"><ph id="ph1">`true`</ph>:이 열을 고정 된 증가분의 새 행에 값을 할당합니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source><ph id="ph1">`false`</ph>: The column does not assign values to new rows in fixed increments.</source>
          <target state="translated"><ph id="ph1">`false`</ph>:이 열은 고정 된 증가분의 새 행에 값을 할당 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The default of this column is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">이 열의 기본값은 <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>BaseCatalogName</source>
          <target state="translated">BaseCatalogName</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The name of the catalog in the data store that contains the column.</source>
          <target state="translated">열이 포함 된 데이터 저장소에 있는 카탈로그의 이름입니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source><ph id="ph1">`Null`</ph> if the base catalog name cannot be determined.</source>
          <target state="translated"><ph id="ph1">`Null`</ph> 기본 카탈로그 이름을 확인할 수 없습니다 하는 경우.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The default value for this column is a <ph id="ph1">`null`</ph> value.</source>
          <target state="translated">이 열에 대 한 기본값은 한 <ph id="ph1">`null`</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>BaseSchemaName</source>
          <target state="translated">BaseSchemaName</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>This value is always <ph id="ph1">`Null`</ph>.</source>
          <target state="translated">이 값은 항상 <ph id="ph1">`Null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>BaseTableName</source>
          <target state="translated">BaseTableName</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The name of the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>의 이름입니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>BaseColumnName</source>
          <target state="translated">BaseColumnName</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The name of the column in the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">에 있는 열의 이름은 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>AutoIncrementSeed</source>
          <target state="translated">AutoIncrementSeed</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The value of the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>'s <ph id="ph2">&lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt;</ph> property.</source>
          <target state="translated">값은 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>의 <ph id="ph2">&lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>AutoIncrementStep</source>
          <target state="translated">AutoIncrementStep</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The value of the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>'s <ph id="ph2">&lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;</ph> property.</source>
          <target state="translated">값은 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>의 <ph id="ph2">&lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>DefaultValue</source>
          <target state="translated">DefaultValue</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The value of the <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph>'s <ph id="ph2">&lt;xref:System.Data.DataColumn.DefaultValue%2A&gt;</ph> property.</source>
          <target state="translated">값은 <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph>의 <ph id="ph2">&lt;xref:System.Data.DataColumn.DefaultValue%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>Expression</source>
          <target state="translated">식</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The expression string, if the current column is an expression column and all columns used in the expression belong to the same <ph id="ph1">`T:System.Data.DataTable`</ph> that contains the expression column; otherwise <ph id="ph2">`null`</ph>.</source>
          <target state="translated">식 문자열의 현재 열이 식 열 및 식에 사용 되는 모든 열이 동일 하 게 속할 경우 <ph id="ph1">`T:System.Data.DataTable`</ph> 식 열을 포함 하 고, 그렇지 않으면 <ph id="ph2">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>ColumnMapping</source>
          <target state="translated">ColumnMapping</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The <ph id="ph1">&lt;xref:System.Data.MappingType&gt;</ph> value associated with the <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.MappingType&gt;</ph> 와 연결 된 값은 <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The type can be one of <ph id="ph1">`Attribute`</ph>, <ph id="ph2">`Element`</ph>, <ph id="ph3">`Hidden`</ph>, or <ph id="ph4">`SimpleContent`</ph>.</source>
          <target state="translated">형식 중 하나일 수 있습니다 <ph id="ph1">`Attribute`</ph>, <ph id="ph2">`Element`</ph>, <ph id="ph3">`Hidden`</ph>, 또는 <ph id="ph4">`SimpleContent`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The default value is <ph id="ph1">`Element`</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">`Element`</ph>입니다.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>BaseTableNamespace</source>
          <target state="translated">BaseTableNamespace</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The value of the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>'s <ph id="ph2">&lt;xref:System.Data.DataTable.Namespace%2A&gt;</ph> property.</source>
          <target state="translated">값은 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>의 <ph id="ph2">&lt;xref:System.Data.DataTable.Namespace%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>BaseColumnNamespace</source>
          <target state="translated">BaseColumnNamespace</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The value of the <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph>'s <ph id="ph2">&lt;xref:System.Data.DataColumn.Namespace%2A&gt;</ph> property.</source>
          <target state="translated">값은 <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph>의 <ph id="ph2">&lt;xref:System.Data.DataColumn.Namespace%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The following console application example retrieves schema information about the specified column.</source>
          <target state="translated">다음 콘솔 응용 프로그램 예제에서는 지정된 된 열에 대 한 스키마 정보를 검색합니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>Pass the <ph id="ph1">`DisplaySchemaTableInfo`</ph> procedure a <ph id="ph2">&lt;xref:System.Data.DataTableReader&gt;</ph> and an integer representing the ordinal position of a column within the <ph id="ph3">`DataTableReader`</ph>, and the procedure outputs schema information to the console window.</source>
          <target state="translated">전달 된 <ph id="ph1">`DisplaySchemaTableInfo`</ph> 프로시저는 <ph id="ph2">&lt;xref:System.Data.DataTableReader&gt;</ph> 및 내에서 열의 서 수 위치를 나타내는 정수는 <ph id="ph3">`DataTableReader`</ph>와 프로시저 스키마 정보를 콘솔 창 출력 합니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetString(System.Int32)">
          <source>The zero-based column ordinal</source>
          <target state="translated">열 서수(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetString(System.Int32)">
          <source>Gets the value of the specified column as a string.</source>
          <target state="translated">지정된 열의 값을 문자열로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetString(System.Int32)">
          <source>The value of the specified column.</source>
          <target state="translated">지정된 열의 값입니다.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetString(System.Int32)">
          <source>Call <ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph> to see if there are null values before calling this method.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph> 이 메서드를 호출 하기 전에 null 값이 있는 경우 볼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetString(System.Int32)">
          <source>The following example displays the contents of the column numbered 2 within the passed-in <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>.</source>
          <target state="translated">다음 예에서는 전달 된 기능 내 2 번 열의 내용을 표시 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetString(System.Int32)">
          <source>If the value the column within a particular row is null, the code displays the text <ph id="ph1">\&lt;</ph>NULL&gt;.</source>
          <target state="translated">코드의 텍스트 표시 값에 특정 행 내의 열이 null 이면 <ph id="ph1">\&lt;</ph>NULL &gt; 합니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetString(System.Int32)">
          <source>If the data within the column of the correct type, the example displays an error message for each row.</source>
          <target state="translated">올바른 형식의 예제에서는 열 내의 데이터는 각 행에 대 한 오류 메시지를 표시 하는 경우 합니다.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetString(System.Int32)">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">전달된 인덱스가 0에서 <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 사이의 범위에 속하지 않는 경우</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetString(System.Int32)">
          <source>An attempt was made to retrieve data from a deleted row.</source>
          <target state="translated">삭제된 행에서 데이터를 검색하려고 한 경우</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetString(System.Int32)">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>.</source>
          <target state="translated">닫힌 <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>의 열을 읽거나 액세스하려고 한 경우</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetString(System.Int32)">
          <source>The specified column does not contain a string.</source>
          <target state="translated">지정된 열에 문자열이 없는 경우</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetValue(System.Int32)">
          <source>The zero-based column ordinal</source>
          <target state="translated">열 서수(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetValue(System.Int32)">
          <source>Gets the value of the specified column in its native format.</source>
          <target state="translated">지정된 열의 값을 네이티브 형식으로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetValue(System.Int32)">
          <source>The value of the specified column.</source>
          <target state="translated">지정된 열의 값입니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetValue(System.Int32)">
          <source>This method returns <ph id="ph1">&lt;see langword="DBNull" /&gt;</ph> for null columns.</source>
          <target state="translated">이 메서드는 null 열에 대해 <ph id="ph1">&lt;see langword="DBNull" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetValue(System.Int32)">
          <source>Although you can call <ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph> to see if there are null values before calling this method, you do not have to do this.</source>
          <target state="translated">호출할 수 있지만 <ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph> 를 보려면이 메서드를 호출 하기 전에 null 값이 없는 경우이 작업을 수행할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetValue(System.Int32)">
          <source>The following example iterates through all the columns within the current row in a <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>, displaying the contents of each column and the column name.</source>
          <target state="translated">다음 예에서는 현재 행에 있는 모든 열의 반복는 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>, 각 열 및 열 이름을의 내용을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetValue(System.Int32)">
          <source>Generally, if your intent is to work with all the columns within a row retrieved by a <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>, consider using the <ph id="ph2">&lt;xref:System.Data.DataTableReader.GetValues%2A&gt;</ph> method instead, because it is more efficient.</source>
          <target state="translated">일반적으로 의도 의해 검색 된 행 내에서 모든 열으로 작업 하는 경우는 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>를 사용 하는 것이 좋습니다는 <ph id="ph2">&lt;xref:System.Data.DataTableReader.GetValues%2A&gt;</ph> 메서드 대신 더 효율적 이므로 합니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetValue(System.Int32)">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">전달된 인덱스가 0에서 <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 사이의 범위에 속하지 않는 경우</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetValue(System.Int32)">
          <source>An attempt was made to retrieve data from a deleted row.</source>
          <target state="translated">삭제된 행에서 데이터를 검색하려고 한 경우</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetValue(System.Int32)">
          <source>An attempt was made to read or access columns in a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> .</source>
          <target state="translated">닫힌 <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>의 열을 읽거나 액세스하려고 합니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetValues(System.Object[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> into which to copy the column values from the <ph id="ph2">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>로부터 열 값을 복사해 올 <ph id="ph2">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>의 배열입니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetValues(System.Object[])">
          <source>Populates an array of objects with the column values of the current row.</source>
          <target state="translated">현재 행의 열 값으로 개체 배열을 채웁니다.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetValues(System.Object[])">
          <source>The number of column values copied into the array.</source>
          <target state="translated">배열에 복사된 열 값의 개수입니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetValues(System.Object[])">
          <source>For most applications, this method provides an efficient means for retrieving all columns, instead of retrieving each column individually.</source>
          <target state="translated">이 메서드는 대부분의 응용 프로그램에 대 한 각 열을 개별적으로 검색 하는 대신 모든 열을 검색 하는 효율적인 방법을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetValues(System.Object[])">
          <source>If your intent is to retrieve all the column values from a row within the <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>, the <ph id="ph2">`GetValues`</ph> method provides the most efficient solution.</source>
          <target state="translated">원래의 도와 내에서 행에서 모든 열 값을 검색 하는 경우는 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>, <ph id="ph2">`GetValues`</ph> 메서드는 가장 효율적인 솔루션을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetValues(System.Object[])">
          <source>You can pass an <ph id="ph1">&lt;xref:System.Object&gt;</ph> array that contains fewer than the number of columns that are contained in the resulting row.</source>
          <target state="translated">전달할 수는 <ph id="ph1">&lt;xref:System.Object&gt;</ph> 보다 적은 수의 결과 행에 포함 된 열에 포함 된 배열입니다.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetValues(System.Object[])">
          <source>Only the amount of data the <ph id="ph1">`Object`</ph> array can hold is copied to the array.</source>
          <target state="translated">데이터의 양만 <ph id="ph1">`Object`</ph> 배열의 배열에 복사 보유할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetValues(System.Object[])">
          <source>You can also pass an <ph id="ph1">`Object`</ph> array whose length is more than the number of columns that are contained in the resulting row, in which case the additional array elements remains unchanged by the method call.</source>
          <target state="translated">전달할 수도 있습니다는 <ph id="ph1">`Object`</ph> 추가 배열 요소 상태를 유지 하는 경우 메서드 호출에 의해 변경 않는 결과 행에 포함 된 열의 개수 이상의 길이가 배열입니다.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetValues(System.Object[])">
          <source>This method places <ph id="ph1">`DBNull`</ph> in the output array for null columns.</source>
          <target state="translated">이 메서드는 배치 <ph id="ph1">`DBNull`</ph> null 열에 대 한 출력 배열에 있습니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetValues(System.Object[])">
          <source>The following example demonstrates using an array that is the correct size, to read all values from the current row in the supplied <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 제공 된의 현재 행의 모든 값을 읽을 올바른 크기 배열을 사용 하 여 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetValues(System.Object[])">
          <source>In addition, the sample demonstrates using a fixed-sized array that could be either smaller or larger than the number of available columns.</source>
          <target state="translated">또한 샘플 더 작은 나 사용 가능한 열 개수 보다 클 수는 고정 크기 배열을 사용 하 여 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetValues(System.Object[])">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">전달된 인덱스가 0에서 <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 사이의 범위에 속하지 않는 경우</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetValues(System.Object[])">
          <source>An attempt was made to retrieve data from a deleted row.</source>
          <target state="translated">삭제된 행에서 데이터를 검색하려고 한 경우</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetValues(System.Object[])">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> .</source>
          <target state="translated">닫힌 <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>의 열을 읽거나 액세스하려고 합니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="P:System.Data.DataTableReader.HasRows">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> contains one or more rows.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>에 하나 이상의 행이 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.HasRows">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> contains one or more rows; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>에 행이 하나 이상 포함되어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.HasRows">
          <source>The <ph id="ph1">`HasRows`</ph> property returns information about the current result set.</source>
          <target state="translated"><ph id="ph1">`HasRows`</ph> 속성 현재 결과 집합에 대 한 정보를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.HasRows">
          <source>If the <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> contains multiple result sets, you can examine the value of the <ph id="ph2">`HasRows`</ph> property immediately after you call the <ph id="ph3">&lt;xref:System.Data.DataTableReader.NextResult%2A&gt;</ph> method in order to determine whether the new result set contains rows.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> 여러 결과 포함 집합의 값을 검사할 수 있습니다는 <ph id="ph2">`HasRows`</ph> 호출한 후에 즉시 속성은 <ph id="ph3">&lt;xref:System.Data.DataTableReader.NextResult%2A&gt;</ph> 새 결과 집합에 행이 포함 되어 있는지 확인 하기 위해 메서드.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.HasRows">
          <source>Use the <ph id="ph1">`HasRows`</ph> property to avoid the requirement to call the <ph id="ph2">&lt;xref:System.Data.DataTableReader.Read%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Data.DataTableReader&gt;</ph> if there are no rows within the current result set.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">`HasRows`</ph> 호출을 방지 하기 위해 속성은 <ph id="ph2">&lt;xref:System.Data.DataTableReader.Read%2A&gt;</ph> 의 메서드는 <ph id="ph3">&lt;xref:System.Data.DataTableReader&gt;</ph> 현재 결과 집합 내에서 행이 없는 경우.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.HasRows">
          <source>The following example fills two <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instances with data.</source>
          <target state="translated">다음 예제에서는 두 개의 채웁니다 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> 인스턴스 데이터를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.HasRows">
          <source>The first <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> contains one row, and the second contains no rows.</source>
          <target state="translated">첫 번째 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> 하나의 행을 포함 하며 두 번째 행이 없는 포함 합니다.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.HasRows">
          <source>The example then creates a <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> that contains both <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects, and calls the PrintData method to display the contents of each, checking the value of the <ph id="ph3">&lt;xref:System.Data.DataTableReader.HasRows%2A&gt;</ph> property of each before it makes the call to PrintData.</source>
          <target state="translated">만듭니다는 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> 모두 포함 된 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> 개체, 및의 값을 확인 하는 각각의 내용을 표시 하려면 PrintData 메서드를 호출 하는 <ph id="ph3">&lt;xref:System.Data.DataTableReader.HasRows%2A&gt;</ph> PrintData 호출 하기 전에 각각의 속성입니다.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="P:System.Data.DataTableReader.HasRows">
          <source>An attempt was made to retrieve information about a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>.</source>
          <target state="translated">닫힌 <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>에 대한 정보를 검색하려고 한 경우</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="P:System.Data.DataTableReader.IsClosed">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>가 닫혀 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.IsClosed">
          <source>Returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> is closed; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>가 닫혔으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>를 반환하고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.IsClosed">
          <source><ph id="ph1">&lt;xref:System.Data.DataTableReader.Close%2A&gt;</ph> is the only method and <ph id="ph2">`IsClosed`</ph> and <ph id="ph3">&lt;xref:System.Data.DataTableReader.RecordsAffected%2A&gt;</ph> are the only properties that can be accessed after the <ph id="ph4">&lt;xref:System.Data.DataTableReader&gt;</ph> has been closed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTableReader.Close%2A&gt;</ph> 유일한 방법은 및 <ph id="ph2">`IsClosed`</ph> 및 <ph id="ph3">&lt;xref:System.Data.DataTableReader.RecordsAffected%2A&gt;</ph> 후 액세스할 수 있는 속성만 <ph id="ph4">&lt;xref:System.Data.DataTableReader&gt;</ph> 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.IsDBNull(System.Int32)">
          <source>The zero-based column ordinal</source>
          <target state="translated">열 서수(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.IsDBNull(System.Int32)">
          <source>Gets a value that indicates whether the column contains non-existent or missing values.</source>
          <target state="translated">열의 값이 존재하지 않거나 누락되었는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.IsDBNull(System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified column value is equivalent to <ph id="ph2">&lt;see cref="T:System.DBNull" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">지정된 열 값이 <ph id="ph2">&lt;see cref="T:System.DBNull" /&gt;</ph>과 같으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.IsDBNull(System.Int32)">
          <source>Call this method to see if there are null column values before calling the typed get methods (for example, <ph id="ph1">&lt;xref:System.Data.DataTableReader.GetByte%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.DataTableReader.GetChar%2A&gt;</ph>, and so on) to avoid raising an error.</source>
          <target state="translated">형식화 된 get 메서드를 호출 하기 전에 null 열 값 있는지 확인 하려면이 메서드를 호출 (예를 들어 <ph id="ph1">&lt;xref:System.Data.DataTableReader.GetByte%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.DataTableReader.GetChar%2A&gt;</ph>등)에 오류가 발생 하지 않도록 합니다.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.IsDBNull(System.Int32)">
          <source>The following example displays the contents of the column numbered 2 within the passed-in <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>.</source>
          <target state="translated">다음 예에서는 전달 된 기능 내 2 번 열의 내용을 표시 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.IsDBNull(System.Int32)">
          <source>If the value the column within a particular row is null, the code displays the text <ph id="ph1">\&lt;</ph>NULL&gt;.</source>
          <target state="translated">코드의 텍스트 표시 값에 특정 행 내의 열이 null 이면 <ph id="ph1">\&lt;</ph>NULL &gt; 합니다.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.IsDBNull(System.Int32)">
          <source>If the data within the column of the correct type, the example displays an error message for each row.</source>
          <target state="translated">올바른 형식의 예제에서는 열 내의 데이터는 각 행에 대 한 오류 메시지를 표시 하는 경우 합니다.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.IsDBNull(System.Int32)">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">전달된 인덱스가 0에서 <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 사이의 범위에 속하지 않는 경우</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.IsDBNull(System.Int32)">
          <source>An attempt was made to retrieve data from a deleted row.</source>
          <target state="translated">삭제된 행에서 데이터를 검색하려고 한 경우</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.IsDBNull(System.Int32)">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> .</source>
          <target state="translated">닫힌 <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>의 열을 읽거나 액세스하려고 합니다.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="T:System.Data.DataTableReader">
          <source>Gets the value of the specified column in its native format.</source>
          <target state="translated">지정된 열의 값을 네이티브 형식으로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="P:System.Data.DataTableReader.Item(System.Int32)">
          <source>The zero-based column ordinal.</source>
          <target state="translated">열 서수(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="P:System.Data.DataTableReader.Item(System.Int32)">
          <source>Gets the value of the specified column in its native format given the column ordinal.</source>
          <target state="translated">열 서수가 지정된 경우, 지정된 열의 값을 네이티브 형식으로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.Item(System.Int32)">
          <source>The value of the specified column in its native format.</source>
          <target state="translated">지정된 열의 네이티브 형식 값입니다.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.Item(System.Int32)">
          <source>This overload for <ph id="ph1">&lt;xref:System.Data.DataTableReader.Item%2A&gt;</ph> behaves identically to the <ph id="ph2">&lt;xref:System.Data.DataTableReader.GetValue%2A&gt;</ph> method.</source>
          <target state="translated">이 오버 로드에 대 한 <ph id="ph1">&lt;xref:System.Data.DataTableReader.Item%2A&gt;</ph> 동일 하 게 동작의 <ph id="ph2">&lt;xref:System.Data.DataTableReader.GetValue%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.Item(System.Int32)">
          <source>The following example displays the contents of all the columns, in all the rows from the supplied <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 제공 된 모든 행에 있는 모든 열의 콘텐츠를 표시 합니다. <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.Item(System.Int32)">
          <source>The code uses the <ph id="ph1">&lt;xref:System.Data.DataTableReader.Item%2A&gt;</ph> method (the indexer, in Microsoft C#) to retrieve the value that is contained in each column.</source>
          <target state="translated">코드를 사용 하 여는 <ph id="ph1">&lt;xref:System.Data.DataTableReader.Item%2A&gt;</ph> 메서드 (인덱서에서는 Microsoft C#) 각 열에 포함 된 값을 검색 합니다.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="P:System.Data.DataTableReader.Item(System.Int32)">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">전달된 인덱스가 0에서 <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 사이의 범위에 속하지 않는 경우</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="P:System.Data.DataTableReader.Item(System.String)">
          <source>The name of the column.</source>
          <target state="translated">열 이름입니다.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="P:System.Data.DataTableReader.Item(System.String)">
          <source>Gets the value of the specified column in its native format given the column name.</source>
          <target state="translated">열 이름이 지정된 경우, 지정된 열의 값을 네이티브 형식으로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.Item(System.String)">
          <source>The value of the specified column in its native format.</source>
          <target state="translated">지정된 열의 네이티브 형식 값입니다.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.Item(System.String)">
          <source>A case-sensitive lookup is performed first.</source>
          <target state="translated">대/소문자 구분 조회를 먼저 수행 됩니다.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.Item(System.String)">
          <source>If it fails, a second case-insensitive search is made.</source>
          <target state="translated">실패 한 경우에 두 번째 대/소문자 구분 검색이 수행 됩니다.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.Item(System.String)">
          <source>This method is kana-width insensitive.</source>
          <target state="translated">이 메서드는 일본어가 나 너비 구분 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.Item(System.String)">
          <source>This overloaded version of <ph id="ph1">&lt;xref:System.Data.DataTableReader.Item%2A&gt;</ph> corresponds to calling the <ph id="ph2">&lt;xref:System.Data.DataTableReader.GetOrdinal%2A&gt;</ph> method, and then subsequently calling the <ph id="ph3">&lt;xref:System.Data.DataTableReader.GetValue%2A&gt;</ph> method.</source>
          <target state="translated">이 오버 로드 된 버전의 <ph id="ph1">&lt;xref:System.Data.DataTableReader.Item%2A&gt;</ph> 호출에 해당 하는 <ph id="ph2">&lt;xref:System.Data.DataTableReader.GetOrdinal%2A&gt;</ph> 메서드를 호출한 다음는 <ph id="ph3">&lt;xref:System.Data.DataTableReader.GetValue%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.Item(System.String)">
          <source>Given a <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> and a column name, the GetValueByName procedure returns the value of the specified column.</source>
          <target state="translated">지정 된 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> 열 이름을 GetValueByName 프로시저는 지정 된 열의 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.Item(System.String)">
          <source>Before calling this procedure, you must create a new <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> instance and call its Read method at least one time to position the row pointer on a row of data.</source>
          <target state="translated">이 프로시저를 호출 하기 전에 새 만들어야 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> 인스턴스 및 데이터의 행에 대 한 행 포인터를 한 번 이상 읽기 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="P:System.Data.DataTableReader.Item(System.String)">
          <source>The name specified is not a valid column name.</source>
          <target state="translated">지정된 이름이 올바른 열 이름이 아닌 경우</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="P:System.Data.DataTableReader.Item(System.String)">
          <source>An attempt was made to retrieve data from a deleted row.</source>
          <target state="translated">삭제된 행에서 데이터를 검색하려고 한 경우</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="P:System.Data.DataTableReader.Item(System.String)">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>.</source>
          <target state="translated">닫힌 <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>의 열을 읽거나 액세스하려고 한 경우</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.NextResult">
          <source>Advances the <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> to the next result set, if any.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>를 다음 결과 집합(있을 경우)으로 이동합니다.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.NextResult">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if there was another result set; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">다른 결과 집합이 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.NextResult">
          <source>Used to process multiple results that can be generated by creating a <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> over a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> that contains two or more tables, or an array that contains two or more <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> instances.</source>
          <target state="translated">만들어 생성 될 수 있는 여러 개의 결과 처리 하는 데는 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> 통해는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> 두 개 이상의 테이블 또는 두 개 이상이 포함 된 배열을 포함 하는 <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.NextResult">
          <source>A new <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> is positioned on the first result.</source>
          <target state="translated">새 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> 첫 번째 결과에 배치 됩니다.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.NextResult">
          <source>In the following example, the TestConstructor method creates two <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instances.</source>
          <target state="translated">다음 예제에서는 TestConstructor 메서드에서는 두 개의 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.NextResult">
          <source>In order to demonstrate this constructor for the <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> class, the sample creates a new <ph id="ph2">`DataTableReader`</ph> based on an array that contains the two <ph id="ph3">`DataTables`</ph>, and performs a simple operation, printing the contents from the first few columns to the console window.</source>
          <target state="translated">이 생성자에 대 한 설명 하기 위해는 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> 클래스, 예제에서는 새 <ph id="ph2">`DataTableReader`</ph> 두를 포함 하는 배열에 따라 <ph id="ph3">`DataTables`</ph>를 콘솔에 처음 몇 개의 열에서 내용을 인쇄 하는 간단한 작업을 수행 하 고 창입니다.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.NextResult">
          <source>In order to test this application, create a new Console application, and paste the sample code into the newly created file.</source>
          <target state="translated">이 응용 프로그램을 테스트 하려면 새 콘솔 응용 프로그램을 만들고 새로 만든된 파일에는 샘플 코드를 붙여 넣습니다.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.NextResult">
          <source>The Console window displays the following results:</source>
          <target state="translated">콘솔 창에는 다음과 같은 결과가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.NextResult">
          <source>An attempt was made to navigate within a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>.</source>
          <target state="translated">닫힌 <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> 내의 정보를 탐색하려고 한 경우</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.Read">
          <source>Advances the <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> to the next record.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>를 다음 레코드로 이동합니다.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.Read">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if there was another row to read; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">읽을 행이 더 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.Read">
          <source>The default position of the <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> is before the first record.</source>
          <target state="translated">기본 위치는 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> 첫 번째 레코드 앞입니다.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.Read">
          <source>Therefore, you must call <ph id="ph1">`Read`</ph> to start accessing any data.</source>
          <target state="translated">따라서 호출 해야 <ph id="ph1">`Read`</ph> 데이터에 액세스를 시작 합니다.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.Read">
          <source>The PrintColumns procedure loops through all the rows in the <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>, displaying the contents of each column in the Console window.</source>
          <target state="translated">PrintColumns 프로시저의 모든 행을 반복 하는 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>, 콘솔 창에서 각 열의 내용을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.Read">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> .</source>
          <target state="translated">닫힌 <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>의 열을 읽거나 액세스하려고 합니다.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="P:System.Data.DataTableReader.RecordsAffected">
          <source>Gets the number of rows inserted, changed, or deleted by execution of the SQL statement.</source>
          <target state="translated">SQL 문을 실행하여 삽입, 변경 또는 삭제된 열의 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.RecordsAffected">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> does not support this property and always returns 0.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>는 이 속성을 지원하지 않으며 항상 0을 반환합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>