<Type Name="CommandBehavior" FullName="System.Data.CommandBehavior">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4fb141d08702477118f3091614694b70053003c4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30389077" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum CommandBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CommandBehavior extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Data.CommandBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Enum CommandBehavior" />
  <TypeSignature Language="C++ CLI" Value="public enum class CommandBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>쿼리 결과와 이것이 데이터베이스에 미치는 영향에 대한 설명을 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.CommandBehavior> 값에서 사용 되는 <xref:System.Data.IDbCommand.ExecuteReader%2A> 메서드 <xref:System.Data.IDbCommand> 여기에서 파생 된 클래스입니다.  
  
 이러한 값의 비트 조합으로 사용할 수 있습니다.  
  
 <xref:System.Data.CommandBehavior> 정의 하는 데 사용 하는 경우 무시 됩니다는 <xref:System.Data.Sql.SqlNotificationRequest> 또는 <xref:System.Data.SqlClient.SqlDependency> 따라서 사용할 수 없습니다. 필요 없는 생성자를 사용 하는 `CommandBehavior` 이 두 가지 경우에서 매개 변수입니다.  
  
> [!NOTE]
>  SequentialAccess를 사용 하 여 큰 값 및 이진 데이터를 검색 합니다. 그렇지 않은 경우는 <xref:System.OutOfMemoryException> 발생할 수 있습니다 및 연결이 닫힙니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CloseConnection">
      <MemberSignature Language="C#" Value="CloseConnection" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.CommandBehavior CloseConnection = int32(32)" />
      <MemberSignature Language="DocId" Value="F:System.Data.CommandBehavior.CloseConnection" />
      <MemberSignature Language="VB.NET" Value="CloseConnection" />
      <MemberSignature Language="C++ CLI" Value="CloseConnection" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>명령을 실행하면 관련 <see langword="Connection" /> 개체는 관련 <see langword="DataReader" /> 개체가 닫힐 때 함께 닫힙니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="Default" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.CommandBehavior Default = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Data.CommandBehavior.Default" />
      <MemberSignature Language="VB.NET" Value="Default" />
      <MemberSignature Language="C++ CLI" Value="Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>쿼리는 여러 결과 집합을 반환할 수 있습니다. 쿼리를 실행하면 데이터베이스 상태에 영향을 미칠 수 있습니다. <see langword="Default" />는 <see cref="T:System.Data.CommandBehavior" /> 플래그를 설정하지 않으므로 <see langword="ExecuteReader(CommandBehavior.Default)" /> 호출과  <see langword="ExecuteReader()" /> 호출은 기능적으로 동일합니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="KeyInfo">
      <MemberSignature Language="C#" Value="KeyInfo" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.CommandBehavior KeyInfo = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Data.CommandBehavior.KeyInfo" />
      <MemberSignature Language="VB.NET" Value="KeyInfo" />
      <MemberSignature Language="C++ CLI" Value="KeyInfo" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>쿼리는 열과 기본 키 정보를 반환하며</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 명령 실행을 위해 KeyInfo를 사용 하면 공급자는 별도 결과 집합에 기존 기본 키 열 및 타임 스탬프 열 추가 됩니다.  
  
 KeyInfo를 사용할 때.NET Framework Data Provider for SQL Server SET FMTONLY OFF 및 SET NO_BROWSETABLE ON을 사용 하 여 실행 중인 문 앞에 옵니다. 사용자는 의도하지 않은 결과, 즉 SET FMTONLY ON 문을 사용하는 데 문제가 발생할 수 있다는 사실을 염두에 두어야 합니다. 자세한 내용은 SQL Server 온라인 설명서를 참조하십시오.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaOnly">
      <MemberSignature Language="C#" Value="SchemaOnly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.CommandBehavior SchemaOnly = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Data.CommandBehavior.SchemaOnly" />
      <MemberSignature Language="VB.NET" Value="SchemaOnly" />
      <MemberSignature Language="C++ CLI" Value="SchemaOnly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>쿼리에서 열 정보만 반환합니다. <see cref="F:System.Data.CommandBehavior.SchemaOnly" />를 사용할 때 .NET Framework Data Provider for SQL Server에서는 실행되는 문 앞에 SET FMTONLY ON을 배치합니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="SequentialAccess">
      <MemberSignature Language="C#" Value="SequentialAccess" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.CommandBehavior SequentialAccess = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Data.CommandBehavior.SequentialAccess" />
      <MemberSignature Language="VB.NET" Value="SequentialAccess" />
      <MemberSignature Language="C++ CLI" Value="SequentialAccess" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>
          <see langword="DataReader" />에서 대형 이진 값을 갖는 열이 포함된 행을 처리하는 방법을 제공합니다. 전체 행을 로드하지 않고 <see langword="SequentialAccess" />를 사용하여 <see langword="DataReader" />에서 데이터를 스트림으로 로드할 수 있습니다. 그런 다음 <see langword="GetBytes" /> 또는 <see langword="GetChars" /> 메서드를 사용하여 읽기 작업을 시작할 바이트 위치와 반환될 데이터의 제한된 버퍼 크기를 지정할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지정 하는 경우 `SequentialAccess`, 각 열을 읽이 필요 하지 않지만 반환 되는 열에서 읽을 해야 합니다. 더 이상 또는 해당 위치 앞에서 데이터를 읽을 수에서 반환 되는 데이터 스트림의 위치 이전 내용을 모두 읽은 `DataReader`합니다. 사용 하는 경우는 <xref:System.Data.OleDb.OleDbDataReader>, 것을 지나서 읽는 될 때까지 현재 열 값을 다시 읽을 수 있습니다. 사용 하는 경우는 <xref:System.Data.SqlClient.SqlDataReader>, 열 값을 한 번만 읽을 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SingleResult">
      <MemberSignature Language="C#" Value="SingleResult" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.CommandBehavior SingleResult = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Data.CommandBehavior.SingleResult" />
      <MemberSignature Language="VB.NET" Value="SingleResult" />
      <MemberSignature Language="C++ CLI" Value="SingleResult" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>쿼리는 단일 결과 집합을 반환합니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="SingleRow">
      <MemberSignature Language="C#" Value="SingleRow" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.CommandBehavior SingleRow = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Data.CommandBehavior.SingleRow" />
      <MemberSignature Language="VB.NET" Value="SingleRow" />
      <MemberSignature Language="C++ CLI" Value="SingleRow" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>쿼리가 첫 번째 결과 집합의 단일 행을 반환해야 합니다. 쿼리를 실행하면 데이터베이스 상태에 영향을 미칠 수 있습니다. 일부 .NET Framework 데이터 공급자에서는 이 정보를 사용하여 명령의 성능을 최적화할 수도 있습니다. <see cref="F:System.Data.CommandBehavior.SingleRow" /> 개체의 <see cref="M:System.Data.OleDb.OleDbCommand.ExecuteReader" /> 메서드를 사용하여 <see cref="T:System.Data.OleDb.OleDbCommand" />를 지정할 때 .NET Framework Data Provider for OLE DB에서는 OLE DB <see langword="IRow" /> 인터페이스가 사용 가능하면 이 인터페이스를 사용하여 바인딩을 수행하고, 그렇지 않으면 <see langword="IRowset" /> 인터페이스를 사용합니다. SQL 문이 단일 행만 반환해야 하는 경우 <see cref="F:System.Data.CommandBehavior.SingleRow" />를 지정하여 응용 프로그램의 성능을 향상시킬 수도 있습니다. 여러 결과 집합을 반환해야 하는 쿼리를 실행할 경우 <see langword="SingleRow" />를 지정할 수 있습니다.  이 경우 여러 결과 집합 SQL 쿼리와 단일 행이 둘 다 지정되어 있으면 반환된 결과에 첫 번째 결과 집합의 첫 번째 행만 포함됩니다. 쿼리의 나머지 결과 집합은 반환되지 않습니다.</summary>
      </Docs>
    </Member>
  </Members>
</Type>