<Type Name="CommandBehavior" FullName="System.Data.CommandBehavior">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ecafcffee262be0da6a0ba3294a734b31f27645b" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52224182" /></Metadata><TypeSignature Language="C#" Value="public enum CommandBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CommandBehavior extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Data.CommandBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Enum CommandBehavior" />
  <TypeSignature Language="C++ CLI" Value="public enum class CommandBehavior" />
  <TypeSignature Language="F#" Value="type CommandBehavior = " />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>쿼리 결과와 이것이 데이터베이스에 미치는 영향에 대한 설명을 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Data.CommandBehavior> 값을 사용 합니다 <xref:System.Data.IDbCommand.ExecuteReader%2A> 메서드의 <xref:System.Data.IDbCommand> 에서 파생 된 클래스입니다.  
  
 이러한 값의 비트 조합으로 사용할 수 있습니다.  
  
 <xref:System.Data.CommandBehavior> 정의 하는 데 사용 하는 경우 무시 됩니다는 <xref:System.Data.Sql.SqlNotificationRequest> 또는 <xref:System.Data.SqlClient.SqlDependency> 따라서 사용할 수 없습니다. 필요 없는 생성자를 사용 하 여는 `CommandBehavior` 두 경우에서 매개 변수입니다.  
  
> [!NOTE]
>  SequentialAccess를 사용 하 여 큰 값 및 이진 데이터를 검색 합니다. 그렇지 않은 경우는 <xref:System.OutOfMemoryException> 발생할 수 있으며 연결이 닫힙니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CloseConnection">
      <MemberSignature Language="C#" Value="CloseConnection" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.CommandBehavior CloseConnection = int32(32)" />
      <MemberSignature Language="DocId" Value="F:System.Data.CommandBehavior.CloseConnection" />
      <MemberSignature Language="VB.NET" Value="CloseConnection" />
      <MemberSignature Language="C++ CLI" Value="CloseConnection" />
      <MemberSignature Language="F#" Value="CloseConnection = 32" Usage="System.Data.CommandBehavior.CloseConnection" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>명령이 실행 되는 경우, 연결 된 <see langword="Connection" /> 개체를 닫을 때 연결 된 <see langword="DataReader" /> 개체가 닫혀 있습니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="Default" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.CommandBehavior Default = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Data.CommandBehavior.Default" />
      <MemberSignature Language="VB.NET" Value="Default" />
      <MemberSignature Language="C++ CLI" Value="Default" />
      <MemberSignature Language="F#" Value="Default = 0" Usage="System.Data.CommandBehavior.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>쿼리가 여러 결과 집합을 반환할 수 있습니다. 쿼리를 실행할 데이터베이스 상태에 영향을 줄 수 있습니다. <see langword="Default" /> 설정 하지 <see cref="T:System.Data.CommandBehavior" /> 플래그를 호출 하므로 <see langword="ExecuteReader(CommandBehavior.Default)" /> 호출 하는 기능적 <see langword="ExecuteReader()" />합니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="KeyInfo">
      <MemberSignature Language="C#" Value="KeyInfo" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.CommandBehavior KeyInfo = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Data.CommandBehavior.KeyInfo" />
      <MemberSignature Language="VB.NET" Value="KeyInfo" />
      <MemberSignature Language="C++ CLI" Value="KeyInfo" />
      <MemberSignature Language="F#" Value="KeyInfo = 4" Usage="System.Data.CommandBehavior.KeyInfo" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>쿼리에서 열 및 기본 키 정보를 반환합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 KeyInfo 명령 실행에 사용 된 경우 공급자는 추가 결과 집합에 기존 기본 키 열 및 타임 스탬프 열 추가 됩니다.  
  
 KeyInfo를 사용할 때.NET Framework Data Provider for SQL Server SET FMTONLY OFF 및 SET NO_BROWSETABLE ON을 사용 하 여 실행 중인 문이 앞에 옵니다. 사용자는 SET FMTONLY ON 문 사용 하의 잠재적인 부작용을 알고 있어야 합니다. 자세한 내용은 [SET FMTONLY(Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)를 참조하세요.
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaOnly">
      <MemberSignature Language="C#" Value="SchemaOnly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.CommandBehavior SchemaOnly = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Data.CommandBehavior.SchemaOnly" />
      <MemberSignature Language="VB.NET" Value="SchemaOnly" />
      <MemberSignature Language="C++ CLI" Value="SchemaOnly" />
      <MemberSignature Language="F#" Value="SchemaOnly = 2" Usage="System.Data.CommandBehavior.SchemaOnly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>쿼리에서 열 정보만을 반환합니다. 사용 하는 경우 <see cref="F:System.Data.CommandBehavior.SchemaOnly" />,.NET Framework Data Provider for SQL Server SET FMTONLY ON을 사용 하 여 실행 중인 문이 앞에 옵니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="SequentialAccess">
      <MemberSignature Language="C#" Value="SequentialAccess" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.CommandBehavior SequentialAccess = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Data.CommandBehavior.SequentialAccess" />
      <MemberSignature Language="VB.NET" Value="SequentialAccess" />
      <MemberSignature Language="C++ CLI" Value="SequentialAccess" />
      <MemberSignature Language="F#" Value="SequentialAccess = 16" Usage="System.Data.CommandBehavior.SequentialAccess" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>에 대 한 방법을 제공 합니다 <see langword="DataReader" /> 큰 이진 값을 갖는 열이 포함 된 행을 처리 하 합니다. 전체 행을 로드 하지 않고 <see langword="SequentialAccess" /> 사용 하도록 설정 된 <see langword="DataReader" /> 스트림으로 데이터를 로드 합니다. 사용할 수는 <see langword="GetBytes" /> 또는 <see langword="GetChars" /> 읽기 작업 및 반환 되는 데이터에 대 한 제한 된 버퍼 크기를 시작할 바이트 위치를 지정 하는 방법입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지정 하는 경우 `SequentialAccess`, 각 열을 읽이 필요는 없지만, 반환 되는 순서 대로 열에서 읽을 수 해야 합니다. 더 이상 해당 위치 데이터를 읽을 수를 이전에 반환 되는 데이터 스트림의 위치를 읽은 후는 `DataReader`합니다. 사용 하는 경우는 <xref:System.Data.OleDb.OleDbDataReader>,이 지나서 읽는 될 때까지 현재 열 값을 다시 읽을 수 있습니다. 사용 하는 경우는 <xref:System.Data.SqlClient.SqlDataReader>, 열 값을 한 번만 읽을 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SingleResult">
      <MemberSignature Language="C#" Value="SingleResult" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.CommandBehavior SingleResult = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Data.CommandBehavior.SingleResult" />
      <MemberSignature Language="VB.NET" Value="SingleResult" />
      <MemberSignature Language="C++ CLI" Value="SingleResult" />
      <MemberSignature Language="F#" Value="SingleResult = 1" Usage="System.Data.CommandBehavior.SingleResult" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>쿼리는 단일 결과 집합을 반환합니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="SingleRow">
      <MemberSignature Language="C#" Value="SingleRow" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.CommandBehavior SingleRow = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Data.CommandBehavior.SingleRow" />
      <MemberSignature Language="VB.NET" Value="SingleRow" />
      <MemberSignature Language="C++ CLI" Value="SingleRow" />
      <MemberSignature Language="F#" Value="SingleRow = 8" Usage="System.Data.CommandBehavior.SingleRow" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>쿼리는 첫 번째 결과 집합의 단일 행을 반환 해야 합니다. 쿼리를 실행할 데이터베이스 상태에 영향을 줄 수 있습니다. 일부.NET Framework 데이터 공급자 수 있지만에이 정보를 사용 하 여 명령의 성능을 최적화 하기 위해 필요는 없습니다. 지정 하는 경우 <see cref="F:System.Data.CommandBehavior.SingleRow" /> 사용 하 여 합니다 <see cref="M:System.Data.OleDb.OleDbCommand.ExecuteReader" /> 메서드는 <see cref="T:System.Data.OleDb.OleDbCommand" /> 개체를 OLE DB를 사용 하 여 바인딩을 수행 하는.NET Framework Data Provider for OLE DB <see langword="IRow" /> 가능 하다 면 인터페이스입니다. 그렇지는 <see langword="IRowset" /> 인터페이스입니다. SQL 문에 단일 행만 반환 해야 하는 경우 <see cref="F:System.Data.CommandBehavior.SingleRow" /> 응용 프로그램 성능을 향상할 수도 있습니다. 지정 하는 것이 불가능 <see langword="SingleRow" /> 여러 결과 집합을 반환 하는 쿼리를 실행할 때.  이런 경우 위치 모두 다중 결과 집합 SQL 쿼리 및 단일 행을 지정 하면 반환 되는 결과 첫 번째 결과 집합의 첫 번째 행만 포함 됩니다. 쿼리의 나머지 결과 집합 반환 되지 않습니다.</summary>
      </Docs>
    </Member>
  </Members>
</Type>