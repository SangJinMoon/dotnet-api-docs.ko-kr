<Type Name="EnumerableRowCollectionExtensions" FullName="System.Data.EnumerableRowCollectionExtensions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6f0feaf1628a5917a6f467830f7d671c199bcc5f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36678172" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class EnumerableRowCollectionExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EnumerableRowCollectionExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.EnumerableRowCollectionExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module EnumerableRowCollectionExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class EnumerableRowCollectionExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type EnumerableRowCollectionExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="cedd5-101">데이터 행 컬렉션 클래스의 확장 메서드가 들어 있습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cedd5-101">Contains the extension methods for the data row collection classes.</span>
      </span>
      <span data-ttu-id="cedd5-102">이 API는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cedd5-102">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cedd5-103"><xref:System.Data.EnumerableRowCollectionExtensions> 클래스를 정의 하는 정적 확장 메서드가 포함 되어는 <xref:System.Data.EnumerableRowCollectionExtensions.Cast%2A> 메서드 및에 대 한 표준 쿼리 연산자는 <xref:System.Data.EnumerableRowCollection%601> 및 <xref:System.Data.OrderedEnumerableRowCollection%601> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="cedd5-103">The <xref:System.Data.EnumerableRowCollectionExtensions> class contains static extension methods that define the <xref:System.Data.EnumerableRowCollectionExtensions.Cast%2A> method and standard query operations for the <xref:System.Data.EnumerableRowCollection%601> and <xref:System.Data.OrderedEnumerableRowCollection%601> classes.</span></span>  
  
 <span data-ttu-id="cedd5-104">이 클래스는 상속 될 수 없습니다 하며 인스턴스화할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="cedd5-104">This class cannot be inherited and cannot be instantiated.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.EnumerableRowCollection`1" />
    <altmember cref="T:System.Data.OrderedEnumerableRowCollection`1" />
  </Docs>
  <Members>
    <Member MemberName="Cast&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.EnumerableRowCollection&lt;TResult&gt; Cast&lt;TResult&gt; (this System.Data.EnumerableRowCollection source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.EnumerableRowCollection`1&lt;!!TResult&gt; Cast&lt;TResult&gt;(class System.Data.EnumerableRowCollection source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Cast(Of TResult) (source As EnumerableRowCollection) As EnumerableRowCollection(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::EnumerableRowCollection&lt;TResult&gt; ^ Cast(System::Data::EnumerableRowCollection ^ source);" />
      <MemberSignature Language="F#" Value="static member Cast : System.Data.EnumerableRowCollection -&gt; System.Data.EnumerableRowCollection&lt;'Result&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.Cast source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EnumerableRowCollection&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="cedd5-105">소스의 요소를 변환할 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-105">The type to convert the elements of source to.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="cedd5-106">변환할 요소가 들어 있는 <see cref="T:System.Data.EnumerableRowCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-106">The <see cref="T:System.Data.EnumerableRowCollection" /> that contains the elements to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cedd5-107">
            <see cref="T:System.Data.EnumerableRowCollection" />의 요소를 지정된 형식으로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-107">Converts the elements of an <see cref="T:System.Data.EnumerableRowCollection" /> to the specified type.</span>
          </span>
          <span data-ttu-id="cedd5-108">이 API는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-108">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cedd5-109">지정된 형식으로 변환되는 소스 시퀀스의 각 요소가 들어 있는 <see cref="T:System.Data.EnumerableRowCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-109">An <see cref="T:System.Data.EnumerableRowCollection" /> that contains each element of the source sequence converted to the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cedd5-110">이 메서드는 지연 된 실행을 사용 하 여 구현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cedd5-110">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="cedd5-111">즉시 반환 값은 작업을 수행 하는 데 필요한 모든 정보를 저장 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cedd5-111">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="cedd5-112">이 방법으로 나타내는 쿼리는 개체를 호출 하거나 열거 될 때까지 실행 되지 않습니다는 `GetEnumerator` 메서드를 사용 하 여 직접 또는 `foreach` Visual C# 또는 `For Each` Visual Basic의 합니다.</span><span class="sxs-lookup"><span data-stu-id="cedd5-112">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cedd5-113">
            <paramref name="source" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-113">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="cedd5-114">시퀀스의 요소를 <paramref name="TResult" /> 형식으로 캐스팅할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-114">An element in the sequence cannot be cast to type <paramref name="TResult" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Data.EnumerableRowCollection" />
        <altmember cref="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderBy&lt;TRow,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cedd5-115">
            <see cref="T:System.Data.EnumerableRowCollection" />의 행을 오름차순으로 정렬합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-115">Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order.</span>
          </span>
          <span data-ttu-id="cedd5-116">이 API는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-116">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderBy&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; OrderBy&lt;TRow,TKey&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; OrderBy&lt;TRow, TKey&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy(Of TRow, TKey) (source As EnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ OrderBy(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member OrderBy : System.Data.EnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.OrderBy (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="cedd5-117">행 요소 형식의 <c>소스</c>, 일반적으로 <see cref="T:System.Data.DataRow" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-117">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="cedd5-118">반환 된 키의 형식 <c>keySelector</c>합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-118">The type of the key returned by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="cedd5-119">순서를 지정할 <see cref="T:System.Data.EnumerableRowCollection" /> 요소가 들어 있는 <see cref="T:System.Data.DataRow" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-119">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="cedd5-120">요소에서 키를 추출하는 함수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-120">A function to extract a key from an element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cedd5-121">
            <see cref="T:System.Data.EnumerableRowCollection" />의 행을 지정된 키에 따라 오름차순으로 정렬합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-121">Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order according to the specified key.</span>
          </span>
          <span data-ttu-id="cedd5-122">이 API는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-122">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cedd5-123">요소가 지정된 키에 따라 정렬된 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-123">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cedd5-124">이 메서드는 지연 된 실행을 사용 하 여 구현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cedd5-124">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="cedd5-125">즉시 반환 값은 작업을 수행 하는 데 필요한 모든 정보를 저장 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cedd5-125">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="cedd5-126">이 방법으로 나타내는 쿼리는 개체를 호출 하거나 열거 될 때까지 실행 되지 않습니다는 `GetEnumerator` 메서드를 사용 하 여 직접 또는 `foreach` Visual C# 또는 `For Each` Visual Basic의 합니다.</span><span class="sxs-lookup"><span data-stu-id="cedd5-126">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.ThenBy" />
        <altmember cref="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </Docs>
    </Member>
    <Member MemberName="OrderBy&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; OrderBy&lt;TRow,TKey&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; OrderBy&lt;TRow, TKey&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy(Of TRow, TKey) (source As EnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey), comparer As IComparer(Of TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ OrderBy(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member OrderBy : System.Data.EnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.OrderBy (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="cedd5-127">행 요소 형식의 <c>소스</c>, 일반적으로 <see cref="T:System.Data.DataRow" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-127">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="cedd5-128">반환 된 키의 형식 <c>keySelector</c>합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-128">The type of the key returned by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="cedd5-129">순서를 지정할 <see cref="T:System.Data.EnumerableRowCollection" /> 요소가 들어 있는 <see cref="T:System.Data.DataRow" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-129">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="cedd5-130">요소에서 키를 추출하는 함수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-130">A function to extract a key from an element.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="cedd5-131">키를 비교할 <see cref="T:System.Collections.Generic.IComparer`1" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-131">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cedd5-132">
            <see cref="T:System.Data.EnumerableRowCollection" />의 행을 지정된 키 및 비교자에 따라 오름차순으로 정렬합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-132">Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order according to the specified key and comparer.</span>
          </span>
          <span data-ttu-id="cedd5-133">이 API는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-133">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cedd5-134">요소가 지정된 키 및 비교자에 따라 정렬된 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-134">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key and comparer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cedd5-135">이 메서드는 지연 된 실행을 사용 하 여 구현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cedd5-135">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="cedd5-136">즉시 반환 값은 작업을 수행 하는 데 필요한 모든 정보를 저장 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cedd5-136">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="cedd5-137">이 방법으로 나타내는 쿼리는 개체를 호출 하거나 열거 될 때까지 실행 되지 않습니다는 `GetEnumerator` 메서드를 사용 하 여 직접 또는 `foreach` Visual C# 또는 `For Each` Visual Basic의 합니다.</span><span class="sxs-lookup"><span data-stu-id="cedd5-137">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.ThenBy" />
        <altmember cref="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderByDescending&lt;TRow,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cedd5-138">
            <see cref="T:System.Data.EnumerableRowCollection" />의 행을 내림차순으로 정렬합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-138">Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order.</span>
          </span>
          <span data-ttu-id="cedd5-139">이 API는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-139">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderByDescending&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; OrderByDescending&lt;TRow,TKey&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; OrderByDescending&lt;TRow, TKey&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending(Of TRow, TKey) (source As EnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ OrderByDescending(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member OrderByDescending : System.Data.EnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.OrderByDescending (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="cedd5-140">행 요소 형식의 <c>소스</c>, 일반적으로 <see cref="T:System.Data.DataRow" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-140">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="cedd5-141">반환 된 키의 형식 <c>keySelector</c>합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-141">The type of the key returned by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="cedd5-142">순서를 지정할 <see cref="T:System.Data.EnumerableRowCollection" /> 요소가 들어 있는 <see cref="T:System.Data.DataRow" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-142">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="cedd5-143">요소에서 키를 추출하는 함수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-143">A function to extract a key from an element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cedd5-144">
            <see cref="T:System.Data.EnumerableRowCollection" />의 행을 지정된 키에 따라 내림차순으로 정렬합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-144">Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order according to the specified key.</span>
          </span>
          <span data-ttu-id="cedd5-145">이 API는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-145">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cedd5-146">요소가 지정된 키에 따라 정렬된 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-146">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cedd5-147">이 메서드는 지연 된 실행을 사용 하 여 구현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cedd5-147">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="cedd5-148">즉시 반환 값은 작업을 수행 하는 데 필요한 모든 정보를 저장 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cedd5-148">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="cedd5-149">이 방법으로 나타내는 쿼리는 개체를 호출 하거나 열거 될 때까지 실행 되지 않습니다는 `GetEnumerator` 메서드를 사용 하 여 직접 또는 `foreach` Visual C# 또는 `For Each` Visual Basic의 합니다.</span><span class="sxs-lookup"><span data-stu-id="cedd5-149">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.ThenByDescending" />
        <altmember cref="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
      </Docs>
    </Member>
    <Member MemberName="OrderByDescending&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; OrderByDescending&lt;TRow,TKey&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; OrderByDescending&lt;TRow, TKey&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending(Of TRow, TKey) (source As EnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey), comparer As IComparer(Of TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ OrderByDescending(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member OrderByDescending : System.Data.EnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.OrderByDescending (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="cedd5-150">행 요소 형식의 <c>소스</c>, 일반적으로 <see cref="T:System.Data.DataRow" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-150">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="cedd5-151">반환 된 키의 형식 <c>keySelector</c>합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-151">The type of the key returned by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="cedd5-152">순서를 지정할 <see cref="T:System.Data.EnumerableRowCollection" /> 요소가 들어 있는 <see cref="T:System.Data.DataRow" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-152">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="cedd5-153">요소에서 키를 추출하는 함수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-153">A function to extract a key from an element.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="cedd5-154">키를 비교할 <see cref="T:System.Collections.Generic.IComparer`1" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-154">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cedd5-155">
            <see cref="T:System.Data.EnumerableRowCollection" />의 행을 지정된 키 및 비교자에 따라 내림차순으로 정렬합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-155">Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order according to the specified key and comparer.</span>
          </span>
          <span data-ttu-id="cedd5-156">이 API는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-156">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cedd5-157">요소가 지정된 키 및 비교자에 따라 정렬된 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-157">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key and comparer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cedd5-158">이 메서드는 지연 된 실행을 사용 하 여 구현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cedd5-158">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="cedd5-159">즉시 반환 값은 작업을 수행 하는 데 필요한 모든 정보를 저장 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cedd5-159">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="cedd5-160">이 방법으로 나타내는 쿼리는 개체를 호출 하거나 열거 될 때까지 실행 되지 않습니다는 `GetEnumerator` 메서드를 사용 하 여 직접 또는 `foreach` Visual C# 또는 `For Each` Visual Basic의 합니다.</span><span class="sxs-lookup"><span data-stu-id="cedd5-160">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.ThenByDescending" />
        <altmember cref="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </Docs>
    </Member>
    <Member MemberName="Select&lt;TRow,S&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.EnumerableRowCollection&lt;S&gt; Select&lt;TRow,S&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,S&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.EnumerableRowCollection`1&lt;!!S&gt; Select&lt;TRow, S&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!S&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Select(Of TRow, S) (source As EnumerableRowCollection(Of TRow), selector As Func(Of TRow, S)) As EnumerableRowCollection(Of S)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename S&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::EnumerableRowCollection&lt;S&gt; ^ Select(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, S&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Select : System.Data.EnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'S&gt; -&gt; System.Data.EnumerableRowCollection&lt;'S&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.Select (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EnumerableRowCollection&lt;S&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="S" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TRow,S&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="cedd5-161">행 요소 형식의 <c>소스</c>, 일반적으로 <see cref="T:System.Data.DataRow" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-161">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="S">
          <span data-ttu-id="cedd5-162">유형에 <c>TRow</c> 으로 변환 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-162">The type that <c>TRow</c> will be transformed into.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="cedd5-163">변환 함수를 호출할 <see cref="T:System.Data.EnumerableRowCollection`1" /> 요소가 들어 있는 <see cref="T:System.Data.DataRow" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-163">An <see cref="T:System.Data.EnumerableRowCollection`1" /> containing the <see cref="T:System.Data.DataRow" /> elements to invoke a transform function upon.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="cedd5-164">각 요소에 적용할 변형 함수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-164">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cedd5-165">
            <see cref="T:System.Data.EnumerableRowCollection`1" />의 각 요소를 새 폼에 투영합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-165">Projects each element of an <see cref="T:System.Data.EnumerableRowCollection`1" /> into a new form.</span>
          </span>
          <span data-ttu-id="cedd5-166">이 API는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-166">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cedd5-167">해당 요소가 <paramref name="source" />의 각 요소에 대해 변형 함수를 호출한 결과인 <see cref="T:System.Data.EnumerableRowCollection`1" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-167">An <see cref="T:System.Data.EnumerableRowCollection`1" /> whose elements are the result of invoking the transform function on each element of <paramref name="source" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cedd5-168">이 메서드는 지연 된 실행을 사용 하 여 구현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cedd5-168">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="cedd5-169">즉시 반환 값은 작업을 수행 하는 데 필요한 모든 정보를 저장 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cedd5-169">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="cedd5-170">이 방법으로 나타내는 쿼리는 개체를 호출 하거나 열거 될 때까지 실행 되지 않습니다는 `GetEnumerator` 메서드를 사용 하 여 직접 또는 `foreach` Visual C# 또는 `For Each` Visual Basic의 합니다.</span><span class="sxs-lookup"><span data-stu-id="cedd5-170">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 <span data-ttu-id="cedd5-171">이 프로젝션 방법을 변형 함수를 사용 하려면 `selector`소스 시퀀스의 각 값에 대해 하나의 값을 생성 하 `source`합니다.</span><span class="sxs-lookup"><span data-stu-id="cedd5-171">This projection method requires the transform function, `selector`, to produce one value for each value in the source sequence, `source`.</span></span> <span data-ttu-id="cedd5-172">경우 `selector` 소비자가 수동으로 컬렉션이 컬렉션 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="cedd5-172">If `selector` returns a value that is itself a collection, it is up to the consumer to traverse the subsequences manually.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenBy&lt;TRow,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cedd5-173">
            <see cref="T:System.Data.EnumerableRowCollection" />의 행을 오름차순으로 두 번째로 정렬합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-173">Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order.</span>
          </span>
          <span data-ttu-id="cedd5-174">이 API는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-174">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenBy&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; ThenBy&lt;TRow,TKey&gt; (this System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; ThenBy&lt;TRow, TKey&gt;(class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy(Of TRow, TKey) (source As OrderedEnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ ThenBy(System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member ThenBy : System.Data.OrderedEnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.ThenBy (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="cedd5-175">행 요소 형식의 <c>소스</c>, 일반적으로 <see cref="T:System.Data.DataRow" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-175">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="cedd5-176">반환 된 키의 형식 <c>keySelector</c>합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-176">The type of the key returned by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="cedd5-177">순서를 지정할 <see cref="T:System.Data.EnumerableRowCollection" /> 요소가 들어 있는 <see cref="T:System.Data.DataRow" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-177">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="cedd5-178">요소에서 키를 추출하는 함수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-178">A function to extract a key from an element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cedd5-179">
            <see cref="T:System.Data.EnumerableRowCollection" />의 행을 지정된 키에 따라 오름차순으로 두 번째로 정렬합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-179">Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order according to the specified key.</span>
          </span>
          <span data-ttu-id="cedd5-180">이 API는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-180">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cedd5-181">요소가 지정된 키에 따라 정렬된 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-181">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cedd5-182">사용 하는 <xref:System.Data.EnumerableRowCollectionExtensions.ThenBy%2A> 작업에는 기본 정렬 작업을 사용 하 여 기존 필요 <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="cedd5-182">The use of a <xref:System.Data.EnumerableRowCollectionExtensions.ThenBy%2A> operation requires an existing primary sorting operation using <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.</span></span>  
  
 <span data-ttu-id="cedd5-183">이 메서드는 지연 된 실행을 사용 하 여 구현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cedd5-183">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="cedd5-184">즉시 반환 값은 작업을 수행 하는 데 필요한 모든 정보를 저장 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cedd5-184">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="cedd5-185">이 방법으로 나타내는 쿼리는 개체를 호출 하거나 열거 될 때까지 실행 되지 않습니다는 `GetEnumerator` 메서드를 사용 하 여 직접 또는 `foreach` Visual C# 또는 `For Each` Visual Basic의 합니다.</span><span class="sxs-lookup"><span data-stu-id="cedd5-185">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.OrderBy" />
        <altmember cref="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})" />
      </Docs>
    </Member>
    <Member MemberName="ThenBy&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; ThenBy&lt;TRow,TKey&gt; (this System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; ThenBy&lt;TRow, TKey&gt;(class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy(Of TRow, TKey) (source As OrderedEnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey), comparer As IComparer(Of TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ ThenBy(System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member ThenBy : System.Data.OrderedEnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.ThenBy (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="cedd5-186">행 요소 형식의 <c>소스</c>, 일반적으로 <see cref="T:System.Data.DataRow" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-186">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="cedd5-187">반환 된 키의 형식 <c>keySelector</c>합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-187">The type of the key returned by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="cedd5-188">순서를 지정할 <see cref="T:System.Data.EnumerableRowCollection" /> 요소가 들어 있는 <see cref="T:System.Data.DataRow" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-188">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="cedd5-189">요소에서 키를 추출하는 함수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-189">A function to extract a key from an element.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="cedd5-190">키를 비교할 <see cref="T:System.Collections.Generic.IComparer`1" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-190">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cedd5-191">
            <see cref="T:System.Data.EnumerableRowCollection" />의 행을 지정된 키 및 비교자에 따라 오름차순으로 두 번째로 정렬합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-191">Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order according to the specified key and comparer.</span>
          </span>
          <span data-ttu-id="cedd5-192">이 API는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-192">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cedd5-193">요소가 지정된 키 및 비교자에 따라 정렬된 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-193">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key and comparer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cedd5-194">사용 하는 <xref:System.Data.EnumerableRowCollectionExtensions.ThenBy%2A> 작업에는 기본 정렬 작업을 사용 하 여 기존 필요 <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="cedd5-194">The use of a <xref:System.Data.EnumerableRowCollectionExtensions.ThenBy%2A> operation requires an existing primary sorting operation using <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.</span></span>  
  
 <span data-ttu-id="cedd5-195">이 메서드는 지연 된 실행을 사용 하 여 구현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cedd5-195">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="cedd5-196">즉시 반환 값은 작업을 수행 하는 데 필요한 모든 정보를 저장 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cedd5-196">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="cedd5-197">이 방법으로 나타내는 쿼리는 개체를 호출 하거나 열거 될 때까지 실행 되지 않습니다는 `GetEnumerator` 메서드를 사용 하 여 직접 또는 `foreach` Visual C# 또는 `For Each` Visual Basic의 합니다.</span><span class="sxs-lookup"><span data-stu-id="cedd5-197">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.OrderBy" />
        <altmember cref="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenByDescending&lt;TRow,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cedd5-198">
            <see cref="T:System.Data.EnumerableRowCollection" />의 행을 내림차순으로 두 번째로 정렬합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-198">Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order.</span>
          </span>
          <span data-ttu-id="cedd5-199">이 API는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-199">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenByDescending&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; ThenByDescending&lt;TRow,TKey&gt; (this System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; ThenByDescending&lt;TRow, TKey&gt;(class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending(Of TRow, TKey) (source As OrderedEnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ ThenByDescending(System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member ThenByDescending : System.Data.OrderedEnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.ThenByDescending (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="cedd5-200">행 요소 형식의 <c>소스</c>, 일반적으로 <see cref="T:System.Data.DataRow" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-200">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="cedd5-201">반환 된 키의 형식 <c>keySelector</c>합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-201">The type of the key returned by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="cedd5-202">순서를 지정할 <see cref="T:System.Data.EnumerableRowCollection" /> 요소가 들어 있는 <see cref="T:System.Data.DataRow" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-202">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="cedd5-203">요소에서 키를 추출하는 함수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-203">A function to extract a key from an element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cedd5-204">
            <see cref="T:System.Data.EnumerableRowCollection" />의 행을 지정된 키에 따라 내림차순으로 두 번째로 정렬합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-204">Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order according to the specified key.</span>
          </span>
          <span data-ttu-id="cedd5-205">이 API는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-205">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cedd5-206">요소가 지정된 키에 따라 정렬된 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-206">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cedd5-207">사용 하는 <xref:System.Data.EnumerableRowCollectionExtensions.ThenByDescending%2A> 작업에는 기본 정렬 작업을 사용 하 여 기존 필요 <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="cedd5-207">The use of a <xref:System.Data.EnumerableRowCollectionExtensions.ThenByDescending%2A> operation requires an existing primary sorting operation using <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.</span></span>  
  
 <span data-ttu-id="cedd5-208">이 메서드는 지연 된 실행을 사용 하 여 구현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cedd5-208">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="cedd5-209">즉시 반환 값은 작업을 수행 하는 데 필요한 모든 정보를 저장 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cedd5-209">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="cedd5-210">이 방법으로 나타내는 쿼리는 개체를 호출 하거나 열거 될 때까지 실행 되지 않습니다는 `GetEnumerator` 메서드를 사용 하 여 직접 또는 `foreach` Visual C# 또는 `For Each` Visual Basic의 합니다.</span><span class="sxs-lookup"><span data-stu-id="cedd5-210">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.OrderByDescending" />
        <altmember cref="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})" />
      </Docs>
    </Member>
    <Member MemberName="ThenByDescending&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; ThenByDescending&lt;TRow,TKey&gt; (this System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; ThenByDescending&lt;TRow, TKey&gt;(class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending(Of TRow, TKey) (source As OrderedEnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey), comparer As IComparer(Of TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ ThenByDescending(System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member ThenByDescending : System.Data.OrderedEnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.ThenByDescending (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="cedd5-211">행 요소 형식의 <c>소스</c>, 일반적으로 <see cref="T:System.Data.DataRow" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-211">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="cedd5-212">반환 된 키의 형식 <c>keySelector</c>합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-212">The type of the key returned by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="cedd5-213">순서를 지정할 <see cref="T:System.Data.EnumerableRowCollection" /> 요소가 들어 있는 <see cref="T:System.Data.DataRow" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-213">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="cedd5-214">요소에서 키를 추출하는 함수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-214">A function to extract a key from an element.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="cedd5-215">키를 비교할 <see cref="T:System.Collections.Generic.IComparer`1" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-215">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cedd5-216">
            <see cref="T:System.Data.EnumerableRowCollection" />의 행을 지정된 키 및 비교자에 따라 내림차순으로 두 번째로 정렬합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-216">Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order according to the specified key and comparer.</span>
          </span>
          <span data-ttu-id="cedd5-217">이 API는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-217">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cedd5-218">요소가 지정된 키 및 비교자에 따라 정렬된 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-218">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key and comparer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cedd5-219">사용 하는 <xref:System.Data.EnumerableRowCollectionExtensions.ThenByDescending%2A> 작업에는 기본 정렬 작업을 사용 하 여 기존 필요 <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="cedd5-219">The use of a <xref:System.Data.EnumerableRowCollectionExtensions.ThenByDescending%2A> operation requires an existing primary sorting operation using <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.</span></span>  
  
 <span data-ttu-id="cedd5-220">이 메서드는 지연 된 실행을 사용 하 여 구현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cedd5-220">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="cedd5-221">즉시 반환 값은 작업을 수행 하는 데 필요한 모든 정보를 저장 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cedd5-221">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="cedd5-222">이 방법으로 나타내는 쿼리는 개체를 호출 하거나 열거 될 때까지 실행 되지 않습니다는 `GetEnumerator` 메서드를 사용 하 여 직접 또는 `foreach` Visual C# 또는 `For Each` Visual Basic의 합니다.</span><span class="sxs-lookup"><span data-stu-id="cedd5-222">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.OrderByDescending" />
        <altmember cref="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </Docs>
    </Member>
    <Member MemberName="Where&lt;TRow&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.EnumerableRowCollection&lt;TRow&gt; Where&lt;TRow&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; Where&lt;TRow&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Where(Of TRow) (source As EnumerableRowCollection(Of TRow), predicate As Func(Of TRow, Boolean)) As EnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::EnumerableRowCollection&lt;TRow&gt; ^ Where(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Where : System.Data.EnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, bool&gt; -&gt; System.Data.EnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.Where (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TRow,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="cedd5-223">행 요소 형식의 <c>소스</c>, 일반적으로 <see cref="T:System.Data.DataRow" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-223">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="cedd5-224">필터링할 <see cref="T:System.Data.EnumerableRowCollection" /> 요소가 들어 있는 <see cref="T:System.Data.DataRow" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-224">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to filter.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="cedd5-225">각 요소를 조건에 대해 테스트하는 함수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-225">A function to test each element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cedd5-226">지정된 조건자에 따라 행 시퀀스를 필터링합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-226">Filters a sequence of rows based on the specified predicate.</span>
          </span>
          <span data-ttu-id="cedd5-227">이 API는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-227">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cedd5-228">입력 시퀀스에서 조건에 맞는 행이 들어 있는 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cedd5-228">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> that contains rows from the input sequence that satisfy the condition.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cedd5-229">이 메서드는 지연 된 실행을 사용 하 여 구현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cedd5-229">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="cedd5-230">즉시 반환 값은 작업을 수행 하는 데 필요한 모든 정보를 저장 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cedd5-230">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="cedd5-231">이 방법으로 나타내는 쿼리는 개체를 호출 하거나 열거 될 때까지 실행 되지 않습니다는 `GetEnumerator` 메서드를 사용 하 여 직접 또는 `foreach` Visual C# 또는 `For Each` Visual Basic의 합니다.</span><span class="sxs-lookup"><span data-stu-id="cedd5-231">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
      </Docs>
    </Member>
  </Members>
</Type>