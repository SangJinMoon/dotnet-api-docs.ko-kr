<Type Name="PageContent" FullName="System.Windows.Documents.PageContent">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0f2a6cfbbefe8454121265b591c4e12af7c6724a" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51909133" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PageContent : System.Windows.FrameworkElement, System.Windows.Markup.IUriContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PageContent extends System.Windows.FrameworkElement implements class System.Windows.Markup.IAddChild, class System.Windows.Markup.IUriContext" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.PageContent" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PageContent&#xA;Inherits FrameworkElement&#xA;Implements IUriContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageContent sealed : System::Windows::FrameworkElement, System::Windows::Markup::IUriContext" />
  <TypeSignature Language="F#" Value="type PageContent = class&#xA;    inherit FrameworkElement&#xA;    interface IAddChild&#xA;    interface IUriContext" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.FrameworkElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.IUriContext</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Markup.ContentProperty("Child")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="d7887-101">
        <see cref="T:System.Windows.Documents.FixedDocument" /> 내의 <see cref="T:System.Windows.Documents.FixedPage" /> 요소에 대한 정보를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d7887-101">Provides information about the <see cref="T:System.Windows.Documents.FixedPage" /> elements within a <see cref="T:System.Windows.Documents.FixedDocument" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7887-102"><xref:System.Windows.Documents.PageContent> 요소는만 사용할 수 있는 자식 요소의 <xref:System.Windows.Documents.FixedDocument>합니다.</span><span class="sxs-lookup"><span data-stu-id="d7887-102"><xref:System.Windows.Documents.PageContent> elements are the only allowable child elements of a <xref:System.Windows.Documents.FixedDocument>.</span></span> <span data-ttu-id="d7887-103">순서를 <xref:System.Windows.Documents.PageContent> 내에서 요소를 <xref:System.Windows.Documents.FixedDocument> 페이지 순서를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="d7887-103">The order of the <xref:System.Windows.Documents.PageContent> elements within the <xref:System.Windows.Documents.FixedDocument> defines the page order.</span></span>  
  
 <span data-ttu-id="d7887-104"><xref:System.Windows.Documents.PageContent> 정보를 제공 합니다 <xref:System.Windows.Documents.FixedPage> 내의 요소를 <xref:System.Windows.Documents.FixedDocument> 없이 개별 페이지를 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="d7887-104"><xref:System.Windows.Documents.PageContent> provides information about the <xref:System.Windows.Documents.FixedPage> elements within a <xref:System.Windows.Documents.FixedDocument> without the requiring the application to load individual pages.</span></span>  
  
 <span data-ttu-id="d7887-105">합니다 <xref:System.Windows.Documents.PageContent.Source%2A> 종속성 속성을 지정 합니다 [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] 해당 <xref:System.Windows.Documents.FixedPage>합니다.</span><span class="sxs-lookup"><span data-stu-id="d7887-105">The <xref:System.Windows.Documents.PageContent.Source%2A> dependency property specifies the [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the corresponding <xref:System.Windows.Documents.FixedPage>.</span></span>  
  
 <span data-ttu-id="d7887-106">에 대 한 자세한 내용은 합니다 <xref:System.Windows.Documents.PageContent> 요소인 XPS의 3 장 참조 *Open XML Paper Specification* 에서 다운로드할 수 있습니다 [XPS: 사양 및 라이선스 다운로드](https://www.microsoft.com/whdc/xps/downloads.mspx)합니다.</span><span class="sxs-lookup"><span data-stu-id="d7887-106">For more information about the <xref:System.Windows.Documents.PageContent> element, see Chapter 3 of the XPS *Open XML Paper Specification* available for download at [XPS: Specification and License Downloads](https://www.microsoft.com/whdc/xps/downloads.mspx).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7887-107">다음 예제에서는 추가 하는 프로세스를 보여 줍니다 <xref:System.Windows.Documents.PageContent> 에 <xref:System.Windows.Documents.FixedDocument>합니다.</span><span class="sxs-lookup"><span data-stu-id="d7887-107">The following example shows the process of adding <xref:System.Windows.Documents.PageContent> to a <xref:System.Windows.Documents.FixedDocument>.</span></span>  
  
 [!code-csharp[XpsSave#XpsSaveCreateFixedDocPages](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpfContent.cs#xpssavecreatefixeddocpages)]
 [!code-vb[XpsSave#XpsSaveCreateFixedDocPages](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpfcontent.vb#xpssavecreatefixeddocpages)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.PageContent.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageContent();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d7887-108">
            <see cref="T:System.Windows.Documents.PageContent" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7887-108">Initializes a new instance of the <see cref="T:System.Windows.Documents.PageContent" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d7887-109">다음 예제에서는 사용 된 <xref:System.Windows.Documents.PageContent.%23ctor%2A> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="d7887-109">The following example shows use of the <xref:System.Windows.Documents.PageContent.%23ctor%2A> constructor.</span></span>  
  
 [!code-csharp[XpsSave#XpsSaveCreateFixedPage5](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpfContent.cs#xpssavecreatefixedpage5)]
 [!code-vb[XpsSave#XpsSaveCreateFixedPage5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpfcontent.vb#xpssavecreatefixedpage5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Child">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.FixedPage Child { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.FixedPage Child" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.PageContent.Child" />
      <MemberSignature Language="VB.NET" Value="Public Property Child As FixedPage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::FixedPage ^ Child { System::Windows::Documents::FixedPage ^ get(); void set(System::Windows::Documents::FixedPage ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Child : System.Windows.Documents.FixedPage with get, set" Usage="System.Windows.Documents.PageContent.Child" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.FixedPage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d7887-110">이 <see cref="T:System.Windows.Documents.FixedPage" />에 연결된 <see cref="T:System.Windows.Documents.PageContent" />를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7887-110">Gets or sets the <see cref="T:System.Windows.Documents.FixedPage" /> associated with this <see cref="T:System.Windows.Documents.PageContent" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d7887-111">
            <see cref="T:System.Windows.Documents.FixedPage" /> 와 연결 된 <see cref="T:System.Windows.Documents.PageContent" />, 또는 **null** 경우를 <see cref="T:System.Windows.Documents.FixedPage" /> 으로 설정 됩니다는 <see cref="P:System.Windows.Documents.PageContent.Source" /> 속성입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7887-111">The <see cref="T:System.Windows.Documents.FixedPage" /> associated with this <see cref="T:System.Windows.Documents.PageContent" />, or **null** when the <see cref="T:System.Windows.Documents.FixedPage" /> is set by the <see cref="P:System.Windows.Documents.PageContent.Source" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7887-112">합니다 <xref:System.Windows.Documents.PageContent.Child%2A> 속성에서 반환 된 <xref:System.Windows.Documents.FixedPage> 때:</span><span class="sxs-lookup"><span data-stu-id="d7887-112">The <xref:System.Windows.Documents.PageContent.Child%2A> property returns a <xref:System.Windows.Documents.FixedPage> when:</span></span>  
  
1.  <span data-ttu-id="d7887-113"><xref:System.Windows.Documents.PageContent> 직계 <xref:System.Windows.Documents.FixedPage> 에 정의 된 자식 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 태그입니다.</span><span class="sxs-lookup"><span data-stu-id="d7887-113"><xref:System.Windows.Documents.PageContent> has an immediate <xref:System.Windows.Documents.FixedPage> child defined in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] markup.</span></span>  
  
2.  <span data-ttu-id="d7887-114">합니다 <xref:System.Windows.Documents.PageContent.System%23Windows%23Markup%23IAddChild%23AddChild%2A> 설정 호출 되어 합니다 <xref:System.Windows.Documents.FixedPage> 의 자식으로는 <xref:System.Windows.Documents.PageContent>합니다.</span><span class="sxs-lookup"><span data-stu-id="d7887-114">The <xref:System.Windows.Documents.PageContent.System%23Windows%23Markup%23IAddChild%23AddChild%2A> has been called to set the <xref:System.Windows.Documents.FixedPage> as the child of the <xref:System.Windows.Documents.PageContent>.</span></span>  
  
 <span data-ttu-id="d7887-115">합니다 <xref:System.Windows.Documents.PageContent.Child%2A> 속성이 반환 **null** 때:</span><span class="sxs-lookup"><span data-stu-id="d7887-115">The <xref:System.Windows.Documents.PageContent.Child%2A> property returns **null** when:</span></span>  
  
1.  <span data-ttu-id="d7887-116"><xref:System.Windows.Documents.FixedPage> 에 의해 설정 됩니다는 <xref:System.Windows.Documents.PageContent.Source%2A> 속성 (에 의해 지정 합니다 <xref:System.Windows.Documents.PageContent.Source%2A> 속성을를 <xref:System.Windows.Documents.FixedPage> 캐시 되지 않습니다).</span><span class="sxs-lookup"><span data-stu-id="d7887-116">The <xref:System.Windows.Documents.FixedPage> is set by the <xref:System.Windows.Documents.PageContent.Source%2A> property (when specified by the <xref:System.Windows.Documents.PageContent.Source%2A> property, the <xref:System.Windows.Documents.FixedPage> is not cached).</span></span>  <span data-ttu-id="d7887-117">사용 하 여 <xref:System.Windows.Documents.PageContent.GetPageRoot%2A> 또는 <xref:System.Windows.Documents.PageContent.GetPageRootAsync%2A> 반환할 합니다 <xref:System.Windows.Documents.FixedPage> 로 설정 된 경우는 <xref:System.Windows.Documents.PageContent.Source%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="d7887-117">Use <xref:System.Windows.Documents.PageContent.GetPageRoot%2A> or <xref:System.Windows.Documents.PageContent.GetPageRootAsync%2A> to return the <xref:System.Windows.Documents.FixedPage> when set by the <xref:System.Windows.Documents.PageContent.Source%2A> property.</span></span>  
  
 <span data-ttu-id="d7887-118">에 대 한 자세한 내용은 합니다 <xref:System.Windows.Documents.PageContent> 요소인 XPS의 3 장 참조 *XML Paper Specification* 에서 다운로드할 수 있습니다 [ http://www.microsoft.com/whdc/xps/xpsspec.mspx ](https://www.microsoft.com/whdc/xps/xpsspec.mspx)합니다.</span><span class="sxs-lookup"><span data-stu-id="d7887-118">For more information about the <xref:System.Windows.Documents.PageContent> element, see Chapter 3 of the XPS *XML Paper Specification* available for download at [http://www.microsoft.com/whdc/xps/xpsspec.mspx](https://www.microsoft.com/whdc/xps/xpsspec.mspx).</span></span>  
  
<a name="xamlTextUsage_Child"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="d7887-119">XAML 텍스트 사용</span><span class="sxs-lookup"><span data-stu-id="d7887-119">XAML Text Usage</span></span>  
 <span data-ttu-id="d7887-120">XAML에서이 속성을 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d7887-120">You cannot use this property in XAML.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.PageContent.Source" />
      </Docs>
    </Member>
    <Member MemberName="GetPageRoot">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.FixedPage GetPageRoot (bool forceReload);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.FixedPage GetPageRoot(bool forceReload) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.PageContent.GetPageRoot(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPageRoot (forceReload As Boolean) As FixedPage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::FixedPage ^ GetPageRoot(bool forceReload);" />
      <MemberSignature Language="F#" Value="member this.GetPageRoot : bool -&gt; System.Windows.Documents.FixedPage" Usage="pageContent.GetPageRoot forceReload" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.FixedPage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forceReload" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="forceReload">
          <span data-ttu-id="d7887-121">이전에 로드 및 캐시된 경우에도 항상 <see cref="T:System.Windows.Documents.FixedPage" />를 다시 로드하면 <see langword="true" />이고, 캐시된 버전이 없는 경우에만 <see cref="T:System.Windows.Documents.FixedPage" />를 로드하면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7887-121">
              <see langword="true" /> to always reload the <see cref="T:System.Windows.Documents.FixedPage" /> even if it has been previously loaded and cached; <see langword="false" /> to load the <see cref="T:System.Windows.Documents.FixedPage" /> only if there is no cached version.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d7887-122">
            <see cref="T:System.Windows.Documents.FixedPage" /> 콘텐츠 요소를 로드 및 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7887-122">Loads and returns the <see cref="T:System.Windows.Documents.FixedPage" /> content element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d7887-123">이 페이지에 대한 시각적 트리의 루트 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7887-123">The root element of the visual tree for this page.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7887-124"><xref:System.Windows.Documents.PageContent.GetPageRoot%2A> 동기 로드 및 구문 분석을 수행 합니다 <xref:System.Windows.Documents.FixedPage>합니다.</span><span class="sxs-lookup"><span data-stu-id="d7887-124"><xref:System.Windows.Documents.PageContent.GetPageRoot%2A> performs synchronous loading and parsing of the <xref:System.Windows.Documents.FixedPage>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d7887-125">사용 된 <xref:System.Windows.Documents.PageContent.GetPageRootAsync%2A> 대신 <xref:System.Windows.Documents.PageContent.GetPageRoot%2A> 스레드를 방지 하려면 차단 하는 <xref:System.Windows.Documents.FixedPage> 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="d7887-125">Use the <xref:System.Windows.Documents.PageContent.GetPageRootAsync%2A> instead of <xref:System.Windows.Documents.PageContent.GetPageRoot%2A> to avoid thread blocking while the <xref:System.Windows.Documents.FixedPage> loads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPageRootAsync">
      <MemberSignature Language="C#" Value="public void GetPageRootAsync (bool forceReload);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetPageRootAsync(bool forceReload) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.PageContent.GetPageRootAsync(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetPageRootAsync (forceReload As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetPageRootAsync(bool forceReload);" />
      <MemberSignature Language="F#" Value="member this.GetPageRootAsync : bool -&gt; unit" Usage="pageContent.GetPageRootAsync forceReload" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forceReload" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="forceReload">
          <span data-ttu-id="d7887-126">이전에 로드 및 캐시된 경우에도 항상 <see cref="T:System.Windows.Documents.FixedPage" />를 다시 로드하면 <see langword="true" />이고, 캐시된 버전이 없는 경우에만 <see cref="T:System.Windows.Documents.FixedPage" />를 로드하면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7887-126">
              <see langword="true" /> to always reload the <see cref="T:System.Windows.Documents.FixedPage" /> even if it has been previously loaded and cached; <see langword="false" /> to load the <see cref="T:System.Windows.Documents.FixedPage" /> only if there is no cached version.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d7887-127">
            <see cref="T:System.Windows.Documents.FixedPage" /> 콘텐츠 요소를 비동기적으로 로드하고 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7887-127">Asynchronously loads and returns the <see cref="T:System.Windows.Documents.FixedPage" /> content element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7887-128"><xref:System.Windows.Documents.PageContent.GetPageRootAsync%2A> 비동기적으로 로드 하 고 구문 분석 합니다 <xref:System.Windows.Documents.FixedPage> 와 연결 된 데이터 스트림을 <xref:System.Windows.Documents.PageContent>합니다.</span><span class="sxs-lookup"><span data-stu-id="d7887-128"><xref:System.Windows.Documents.PageContent.GetPageRootAsync%2A> asynchronously loads and parses the <xref:System.Windows.Documents.FixedPage> data stream associated with this <xref:System.Windows.Documents.PageContent>.</span></span>  <span data-ttu-id="d7887-129">다른 스레드는 계속 실행 하는 동안 <xref:System.Windows.Documents.PageContent.GetPageRootAsync%2A> 완료 합니다.</span><span class="sxs-lookup"><span data-stu-id="d7887-129">Other threads will continue to run while <xref:System.Windows.Documents.PageContent.GetPageRootAsync%2A> completes.</span></span>  
  
 <span data-ttu-id="d7887-130">다음 단계를 로드 하는 방법을 설명 합니다 <xref:System.Windows.Documents.FixedPage> 비동기적으로 콘텐츠:</span><span class="sxs-lookup"><span data-stu-id="d7887-130">The following steps illustrate how to load the <xref:System.Windows.Documents.FixedPage> content  asynchronously:</span></span>  
  
1.  <span data-ttu-id="d7887-131">만들기는 <xref:System.Windows.Documents.GetPageRootCompletedEventHandler> 위임 하 고 알림을 받을 추가 <xref:System.Windows.Documents.PageContent.GetPageRootCompleted> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="d7887-131">Create a <xref:System.Windows.Documents.GetPageRootCompletedEventHandler> delegate and add it to be notified of <xref:System.Windows.Documents.PageContent.GetPageRootCompleted> events.</span></span>  
  
2.  <span data-ttu-id="d7887-132"><xref:System.Windows.Documents.PageContent.GetPageRootAsync%2A>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="d7887-132">Call <xref:System.Windows.Documents.PageContent.GetPageRootAsync%2A>.</span></span>  
  
3.  <span data-ttu-id="d7887-133">경우는 <xref:System.Windows.Documents.PageContent.GetPageRootCompleted> 이벤트 발생 및 대리자가 호출을 <xref:System.Windows.Documents.FixedPage> 콘텐츠 로드가 완료 합니다.</span><span class="sxs-lookup"><span data-stu-id="d7887-133">When the <xref:System.Windows.Documents.PageContent.GetPageRootCompleted> event occurs and the delegate is called, the <xref:System.Windows.Documents.FixedPage> content has completed loading.</span></span>  <span data-ttu-id="d7887-134">로드 된 <xref:System.Windows.Documents.FixedPage> 요소는 여 <xref:System.Windows.Documents.GetPageRootCompletedEventArgs>입니다.<xref:System.Windows.Documents.GetPageRootCompletedEventArgs.Result%2A></span><span class="sxs-lookup"><span data-stu-id="d7887-134">The loaded <xref:System.Windows.Documents.FixedPage> element is returned through the <xref:System.Windows.Documents.GetPageRootCompletedEventArgs>.<xref:System.Windows.Documents.GetPageRootCompletedEventArgs.Result%2A></span></span> <span data-ttu-id="d7887-135">속성입니다.</span><span class="sxs-lookup"><span data-stu-id="d7887-135">property.</span></span>  
  
 <span data-ttu-id="d7887-136">에 대 한 자세한 내용은 합니다 `<PageContent>` 요소에서 가져올 수 있습니다 XPS 사양의 3 장 참조 [XPS: 사양 및 라이선스 다운로드](https://www.microsoft.com/whdc/xps/downloads.mspx)합니다.</span><span class="sxs-lookup"><span data-stu-id="d7887-136">For more information about the `<PageContent>` element, see chapter 3 of the XPS specification which you can obtain at [XPS: Specification and License Downloads](https://www.microsoft.com/whdc/xps/downloads.mspx).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.PageContent.GetPageRoot(System.Boolean)" />
        <altmember cref="M:System.Windows.Documents.PageContent.GetPageRootAsyncCancel" />
        <altmember cref="E:System.Windows.Documents.PageContent.GetPageRootCompleted" />
        <altmember cref="T:System.Windows.Documents.GetPageRootCompletedEventArgs" />
        <altmember cref="T:System.Windows.Documents.GetPageRootCompletedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetPageRootAsyncCancel">
      <MemberSignature Language="C#" Value="public void GetPageRootAsyncCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetPageRootAsyncCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.PageContent.GetPageRootAsyncCancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetPageRootAsyncCancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetPageRootAsyncCancel();" />
      <MemberSignature Language="F#" Value="member this.GetPageRootAsyncCancel : unit -&gt; unit" Usage="pageContent.GetPageRootAsyncCancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d7887-137">진행 중인 현재 <see cref="M:System.Windows.Documents.PageContent.GetPageRootAsync(System.Boolean)" /> 작업을 취소합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7887-137">Cancels any current <see cref="M:System.Windows.Documents.PageContent.GetPageRootAsync(System.Boolean)" /> operation in progress.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7887-138"><xref:System.Windows.Documents.PageContent.GetPageRootAsyncCancel%2A> 모두 취소 <xref:System.Windows.Documents.PageContent.GetPageRootAsync%2A> 사용 하 여 아직 완료 되지 않았으면 하는 작업을 <xref:System.Windows.Documents.PageContent.GetPageRootCompleted> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="d7887-138"><xref:System.Windows.Documents.PageContent.GetPageRootAsyncCancel%2A> cancels any <xref:System.Windows.Documents.PageContent.GetPageRootAsync%2A> operation that has not already finished with a <xref:System.Windows.Documents.PageContent.GetPageRootCompleted> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.PageContent.GetPageRootAsync(System.Boolean)" />
        <altmember cref="M:System.Windows.Documents.PageContent.GetPageRootAsyncCancel" />
        <altmember cref="E:System.Windows.Documents.PageContent.GetPageRootCompleted" />
        <altmember cref="T:System.Windows.Documents.GetPageRootCompletedEventArgs" />
        <altmember cref="T:System.Windows.Documents.GetPageRootCompletedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetPageRootCompleted">
      <MemberSignature Language="C#" Value="public event System.Windows.Documents.GetPageRootCompletedEventHandler GetPageRootCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Documents.GetPageRootCompletedEventHandler GetPageRootCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Documents.PageContent.GetPageRootCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Event GetPageRootCompleted As GetPageRootCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Documents::GetPageRootCompletedEventHandler ^ GetPageRootCompleted;" />
      <MemberSignature Language="F#" Value="member this.GetPageRootCompleted : System.Windows.Documents.GetPageRootCompletedEventHandler " Usage="member this.GetPageRootCompleted : System.Windows.Documents.GetPageRootCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.GetPageRootCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d7887-139">
            <see cref="M:System.Windows.Documents.PageContent.GetPageRootAsync(System.Boolean)" />가 완료될 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7887-139">Occurs when <see cref="M:System.Windows.Documents.PageContent.GetPageRootAsync(System.Boolean)" /> has completed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7887-140"><xref:System.Windows.Documents.PageContent.GetPageRootCompleted> 메서드를 기반으로 이벤트를 처리 합니다 <xref:System.Windows.Documents.GetPageRootCompletedEventHandler> 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="d7887-140">The <xref:System.Windows.Documents.PageContent.GetPageRootCompleted> event is handled by methods based on the <xref:System.Windows.Documents.GetPageRootCompletedEventHandler> delegate.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.PageContent.GetPageRootAsync(System.Boolean)" />
        <altmember cref="M:System.Windows.Documents.PageContent.GetPageRootAsyncCancel" />
        <altmember cref="T:System.Windows.Documents.GetPageRootCompletedEventArgs" />
        <altmember cref="T:System.Windows.Documents.GetPageRootCompletedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="LinkTargets">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.LinkTargetCollection LinkTargets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.LinkTargetCollection LinkTargets" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.PageContent.LinkTargets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LinkTargets As LinkTargetCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::LinkTargetCollection ^ LinkTargets { System::Windows::Documents::LinkTargetCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LinkTargets : System.Windows.Documents.LinkTargetCollection" Usage="System.Windows.Documents.PageContent.LinkTargets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.LinkTargetCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d7887-141">페이지에서 하이퍼링크로 주소를 지정할 수 있는 위치를 식별하는 <see cref="T:System.Windows.Documents.LinkTarget" /> 요소의 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7887-141">Gets a collection of <see cref="T:System.Windows.Documents.LinkTarget" /> elements that identify the hyperlink-addressable locations on the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d7887-142">페이지에서 하이퍼링크로 주소를 지정할 수 있는 위치를 식별하는 <see cref="T:System.Windows.Documents.LinkTargetCollection" /> 요소의 <see cref="T:System.Windows.Documents.LinkTarget" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7887-142">The <see cref="T:System.Windows.Documents.LinkTargetCollection" /> of <see cref="T:System.Windows.Documents.LinkTarget" /> elements that identify the hyperlink-addressable locations on the page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7887-143"><xref:System.Windows.Documents.PageContent.LinkTargets%2A> 반환 하지 것입니다 `null`, 컬렉션에 요소가 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d7887-143"><xref:System.Windows.Documents.PageContent.LinkTargets%2A> will never return `null`, but the collection may contain zero elements.</span></span>  
  
 <span data-ttu-id="d7887-144">에 대 한 자세한 내용은 합니다 `<PageContent>` 요소에서 가져올 수 있습니다 XPS 사양의 3 장 참조 [XPS: 사양 및 라이선스 다운로드](https://www.microsoft.com/whdc/xps/downloads.mspx)합니다.</span><span class="sxs-lookup"><span data-stu-id="d7887-144">For more information about the `<PageContent>` element, see chapter 3 of the XPS specification which you can obtain at [XPS: Specification and License Downloads](https://www.microsoft.com/whdc/xps/downloads.mspx).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.FixedPage.NavigateUri" />
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.PageContent.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalChildren As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::IEnumerator ^ LogicalChildren { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalChildren : System.Collections.IEnumerator" Usage="System.Windows.Documents.PageContent.LogicalChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeChild">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeChild (System.Windows.Markup.XamlDesignerSerializationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeChild(class System.Windows.Markup.XamlDesignerSerializationManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.PageContent.ShouldSerializeChild(System.Windows.Markup.XamlDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeChild (manager As XamlDesignerSerializationManager) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeChild(System::Windows::Markup::XamlDesignerSerializationManager ^ manager);" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeChild : System.Windows.Markup.XamlDesignerSerializationManager -&gt; bool" Usage="pageContent.ShouldSerializeChild manager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.Windows.Markup.XamlDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="d7887-145">serialization 서비스 공급자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7887-145">The serialization services provider.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d7887-146">이 <see cref="P:System.Windows.Documents.PageContent.Child" />가 serialize될 때 <see cref="T:System.Windows.Documents.PageContent" /> 속성의 값이 serialize되어야 하는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7887-146">Gets a value indicating whether the value of the <see cref="P:System.Windows.Documents.PageContent.Child" /> property should be serialized when this <see cref="T:System.Windows.Documents.PageContent" /> is serialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d7887-147">
            <paramref name="manager" />가 <see langword="true" />이 아니고 XmlWriter가 없으면 <see langword="null" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7887-147">
              <see langword="true" /> if <paramref name="manager" /> is not <see langword="null" /> and it does not have an XmlWriter; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d7887-148">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7887-148">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public Uri Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.PageContent.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Source { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : Uri with get, set" Usage="System.Windows.Documents.PageContent.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d7887-149">
            <see cref="T:System.Windows.Documents.FixedPage" /> 콘텐츠 데이터 스트림에 대한 [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7887-149">Gets or sets the [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] to the <see cref="T:System.Windows.Documents.FixedPage" /> content data stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d7887-150">해당 <see cref="T:System.Uri" />의 <see cref="T:System.Windows.Documents.FixedPage" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7887-150">The <see cref="T:System.Uri" /> of the corresponding <see cref="T:System.Windows.Documents.FixedPage" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7887-151">에 대 한 자세한 내용은 합니다 `<PageContent>` 요소 및 해당 `Source` 특성에서 가져올 수 있습니다 XPS 사양의 3 장을 참조 하십시오 [XPS: 사양 및 라이선스 다운로드](https://www.microsoft.com/whdc/xps/downloads.mspx)합니다.</span><span class="sxs-lookup"><span data-stu-id="d7887-151">For more information about the `<PageContent>` element and its `Source` attribute, see chapter 3 of the XPS specification which you can obtain at [XPS: Specification and License Downloads](https://www.microsoft.com/whdc/xps/downloads.mspx).</span></span>  
  
<a name="dependencyPropertyInfo_Source"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="d7887-152">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="d7887-152">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="d7887-153">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="d7887-153">Identifier field</span></span>|<xref:System.Windows.Documents.PageContent.SourceProperty>|  
|<span data-ttu-id="d7887-154">메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="d7887-154">Metadata properties set to `true`</span></span>|<span data-ttu-id="d7887-155">없음</span><span class="sxs-lookup"><span data-stu-id="d7887-155">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Documents.PageContent.SourceProperty" />
      </Docs>
    </Member>
    <Member MemberName="SourceProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SourceProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SourceProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.PageContent.SourceProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SourceProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SourceProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SourceProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.PageContent.SourceProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d7887-156">
            <see cref="P:System.Windows.Documents.PageContent.Source" /> 종속성 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7887-156">Identifies the <see cref="P:System.Windows.Documents.PageContent.Source" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.PageContent.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="d7887-157">추가할 자식 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7887-157">The child <see cref="T:System.Object" /> to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d7887-158">이 멤버에 대한 설명은 <see cref="M:System.Windows.Markup.IAddChild.AddChild(System.Object)" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7887-158">For a description of this member, see <see cref="M:System.Windows.Markup.IAddChild.AddChild(System.Object)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7887-159">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="d7887-159">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d7887-160"><xref:System.Windows.Documents.PageContent> 인스턴스가 <xref:System.Windows.Markup.IAddChild> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d7887-160">It can be used only when the <xref:System.Windows.Documents.PageContent> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.PageContent.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="d7887-161">개체에 추가할 텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7887-161">The text to add to the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d7887-162">이 멤버에 대한 설명은 <see cref="M:System.Windows.Markup.IAddChild.AddText(System.String)" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7887-162">For a description of this member, see <see cref="M:System.Windows.Markup.IAddChild.AddText(System.String)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7887-163">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="d7887-163">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d7887-164"><xref:System.Windows.Documents.PageContent> 인스턴스가 <xref:System.Windows.Markup.IAddChild> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d7887-164">It can be used only when the <xref:System.Windows.Documents.PageContent> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IUriContext.BaseUri">
      <MemberSignature Language="C#" Value="Uri System.Windows.Markup.IUriContext.BaseUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri System.Windows.Markup.IUriContext.BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.PageContent.System#Windows#Markup#IUriContext#BaseUri" />
      <MemberSignature Language="VB.NET" Value=" Property BaseUri As Uri Implements IUriContext.BaseUri" />
      <MemberSignature Language="C++ CLI" Value="property Uri ^ System::Windows::Markup::IUriContext::BaseUri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Markup.IUriContext.BaseUri" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Markup.IUriContext.BaseUri</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d7887-165">이 멤버에 대한 설명은 <see cref="P:System.Windows.Markup.IUriContext.BaseUri" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7887-165">For a description of this member, see <see cref="P:System.Windows.Markup.IUriContext.BaseUri" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d7887-166">현재 컨텍스트의 기본 URI입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7887-166">The base URI of the current context.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7887-167">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="d7887-167">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d7887-168"><xref:System.Windows.Documents.PageContent> 인스턴스가 <xref:System.Windows.Markup.IUriContext> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d7887-168">It can be used only when the <xref:System.Windows.Documents.PageContent> instance is cast to an <xref:System.Windows.Markup.IUriContext> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>