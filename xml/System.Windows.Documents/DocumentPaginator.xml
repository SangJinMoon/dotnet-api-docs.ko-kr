<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DocumentPaginator.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5048a68363397559370c5e3ed6a38e3c61f08936d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">048a68363397559370c5e3ed6a38e3c61f08936d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Documents.DocumentPaginator">
          <source>Provides an abstract base class that supports creation of multiple-page elements from a single document.</source>
          <target state="translated">단일 문서로 다중 페이지 요소 만들기를 지원하는 추상 기본 클래스를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.DocumentPaginator">
          <source>If you need automatic background repagination in response to events such as changing the page size of a <ph id="ph1">&lt;xref:System.Windows.Documents.FlowDocument&gt;</ph>, then use <ph id="ph2">&lt;xref:System.Windows.Documents.DynamicDocumentPaginator&gt;</ph> as your base class.</source>
          <target state="translated">페이지 크기를 변경 하는 등 이벤트에 대 한 자동 매김 해야 할 경우는 <ph id="ph1">&lt;xref:System.Windows.Documents.FlowDocument&gt;</ph>를 사용 하 여 <ph id="ph2">&lt;xref:System.Windows.Documents.DynamicDocumentPaginator&gt;</ph> 기본 클래스로 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Documents.DocumentPaginator" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Documents.DocumentPaginator" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.CancelAsync(System.Object)">
          <source>The original <bpt id="p1">&lt;c&gt;</bpt>userState<ept id="p1">&lt;/c&gt;</ept> passed to <ph id="ph1">&lt;see cref="Overload:System.Windows.Documents.DocumentPaginator.GetPageAsync" /&gt;</ph>, <ph id="ph2">&lt;see cref="Overload:System.Windows.Documents.DynamicDocumentPaginator.GetPageNumberAsync" /&gt;</ph>, or <ph id="ph3">&lt;see cref="Overload:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync" /&gt;</ph> that identifies the asynchronous task to cancel.</source>
          <target state="translated">취소할 비동기 작업을 식별하는 <ph id="ph1">&lt;see cref="Overload:System.Windows.Documents.DocumentPaginator.GetPageAsync" /&gt;</ph>, <ph id="ph2">&lt;see cref="Overload:System.Windows.Documents.DynamicDocumentPaginator.GetPageNumberAsync" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="Overload:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync" /&gt;</ph>에 전달된 원래 <bpt id="p1">&lt;c&gt;</bpt>userState<ept id="p1">&lt;/c&gt;</ept>입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.CancelAsync(System.Object)">
          <source>Cancels a previous <ph id="ph1">&lt;see cref="Overload:System.Windows.Documents.DocumentPaginator.GetPageAsync" /&gt;</ph> or <ph id="ph2">&lt;see cref="Overload:System.Windows.Documents.DynamicDocumentPaginator.GetPageNumberAsync" /&gt;</ph> operation.</source>
          <target state="translated">이전 <ph id="ph1">&lt;see cref="Overload:System.Windows.Documents.DocumentPaginator.GetPageAsync" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="Overload:System.Windows.Documents.DynamicDocumentPaginator.GetPageNumberAsync" /&gt;</ph> 작업을 취소합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.CancelAsync(System.Object)">
          <source>If <ph id="ph1">`userState`</ph> is <ph id="ph2">`null`</ph>, then all asynchronous tasks are cancelled.</source>
          <target state="translated">경우 <ph id="ph1">`userState`</ph> 은 <ph id="ph2">`null`</ph>, 다음 모든 비동기 작업이 취소 됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.ComputePageCount">
          <source>Forces a pagination of the content, updates <ph id="ph1">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /&gt;</ph> with the new total, and sets <ph id="ph2">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.IsPageCountValid" /&gt;</ph> to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">콘텐츠의 페이지를 매기고, <ph id="ph1">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /&gt;</ph>를 새로운 총 페이지 수로 업데이트하고, <ph id="ph2">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.IsPageCountValid" /&gt;</ph>를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.ComputePageCount">
          <source><ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A&gt;</ph> will be <ph id="ph2">`true`</ph> immediately after this is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A&gt;</ph> 됩니다 <ph id="ph2">`true`</ph> 이 호출한 후에 즉시 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.ComputePageCount">
          <source>If content is modified or <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.PageSize%2A&gt;</ph> is changed after this method is called, <ph id="ph2">&lt;xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A&gt;</ph> will likely revert to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">내용이 수정 될 경우 또는 <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.PageSize%2A&gt;</ph> 이 메서드가 호출 된 후 변경 될 <ph id="ph2">&lt;xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A&gt;</ph> 가능성이 되돌아갑니다 <ph id="ph3">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="T:System.Windows.Documents.DocumentPaginator">
          <source>Asynchronously, forces a pagination of the content, updates <ph id="ph1">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /&gt;</ph> with the new total, and sets <ph id="ph2">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.IsPageCountValid" /&gt;</ph> to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">비동기적으로 콘텐츠의 페이지를 매기고, <ph id="ph1">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /&gt;</ph>를 새로운 총 페이지 수로 업데이트하고, <ph id="ph2">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.IsPageCountValid" /&gt;</ph>를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync">
          <source>Asynchronously, forces a pagination of the content, updates <ph id="ph1">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /&gt;</ph> with the new total, and sets <ph id="ph2">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.IsPageCountValid" /&gt;</ph> to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">비동기적으로 콘텐츠의 페이지를 매기고, <ph id="ph1">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /&gt;</ph>를 새로운 총 페이지 수로 업데이트하고, <ph id="ph2">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.IsPageCountValid" /&gt;</ph>를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync">
          <source>The only way to cancel the asynchronous operation of this method is to cancel all asynchronous operations.</source>
          <target state="translated">이 메서드의 비동기 작업을 취소 하는 유일한 방법은 모든 비동기 작업을 취소 하는 것입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync">
          <source>Contrast this with the other overload of this method: <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync%28System.Object%29&gt;</ph>.</source>
          <target state="translated">이 메서드의 다른 오버 로드를 가진 이와 반대로: <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync%28System.Object%29&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync(System.Object)">
          <source>A unique identifier for the asynchronous task.</source>
          <target state="translated">비동기 작업의 고유 식별자입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync(System.Object)">
          <source>Asynchronously, forces a pagination of the content, updates <ph id="ph1">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /&gt;</ph> with the new total, sets <ph id="ph2">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.IsPageCountValid" /&gt;</ph> to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">비동기적으로 콘텐츠의 페이지를 매기고, <ph id="ph1">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /&gt;</ph>를 새로운 총 페이지 수로 업데이트하고, <ph id="ph2">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.IsPageCountValid" /&gt;</ph>를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync(System.Object)">
          <source>The specified ID is assigned to the asynchronous task.</source>
          <target state="translated">지정된 된 ID는 비동기 작업에 할당 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync(System.Object)">
          <source>This overload of the method makes it possible to cancel this asynchronous operation without cancelling all asynchronous operations.</source>
          <target state="translated">메서드의이 오버 로드를 사용 하면 모든 비동기 작업을 취소 하지 않고이 비동기 작업을 취소할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="E:System.Windows.Documents.DocumentPaginator.ComputePageCountCompleted">
          <source>Occurs when a <ph id="ph1">&lt;see cref="Overload:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync" /&gt;</ph> operation has finished.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="Overload:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync" /&gt;</ph> 작업이 완료되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.GetPage(System.Int32)">
          <source>The zero-based page number of the document page that is needed.</source>
          <target state="translated">필요한 문서 페이지의 페이지 번호(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.GetPage(System.Int32)">
          <source>When overridden in a derived class, gets the <ph id="ph1">&lt;see cref="T:System.Windows.Documents.DocumentPage" /&gt;</ph> for the specified page number.</source>
          <target state="translated">파생 클래스에서 재정의되는 경우 지정된 페이지 번호에 대한 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.DocumentPage" /&gt;</ph>를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.GetPage(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Documents.DocumentPage" /&gt;</ph> for the specified <ph id="ph2">&lt;paramref name="pageNumber" /&gt;</ph>, or <ph id="ph3">&lt;see cref="F:System.Windows.Documents.DocumentPage.Missing" /&gt;</ph> if the page does not exist.</source>
          <target state="translated">지정된 <ph id="ph2">&lt;paramref name="pageNumber" /&gt;</ph>의 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.DocumentPage" /&gt;</ph>입니다. 해당 페이지가 없는 경우에는 <ph id="ph3">&lt;see cref="F:System.Windows.Documents.DocumentPage.Missing" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.GetPage(System.Int32)">
          <source>If pages prior to <ph id="ph1">`pageNumber`</ph> have not been formatted, they will be paginated synchronously prior to returning the requested page.</source>
          <target state="translated">하는 경우 이전에 페이지 <ph id="ph1">`pageNumber`</ph> 적용 되지 않은 형식이 지정 매겨집니다 동기적으로 요청된 된 페이지를 반환 하기 전에.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.GetPage(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%2A&gt;</ph> provides similar functionality as <ph id="ph2">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPage%2A&gt;</ph>, but for asynchronous operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%2A&gt;</ph> 유사한 기능을 제공 <ph id="ph2">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPage%2A&gt;</ph>, 하지만 비동기 작업입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.GetPage(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="pageNumber" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pageNumber" /&gt;</ph>가 음수입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="T:System.Windows.Documents.DocumentPaginator">
          <source>Asynchronously returns the <ph id="ph1">&lt;see cref="T:System.Windows.Documents.DocumentPage" /&gt;</ph> for the specified page number.</source>
          <target state="translated">지정된 페이지 번호에 대한 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.DocumentPage" /&gt;</ph>를 비동기적으로 반환합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32)">
          <source>The zero-based page number of the document page that is needed.</source>
          <target state="translated">필요한 문서 페이지의 페이지 번호(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32)">
          <source>Asynchronously returns (through the <ph id="ph1">&lt;see cref="E:System.Windows.Documents.DocumentPaginator.GetPageCompleted" /&gt;</ph> event) the <ph id="ph2">&lt;see cref="T:System.Windows.Documents.DocumentPage" /&gt;</ph> for the specified page number.</source>
          <target state="translated">지정된 페이지 번호에 대한 <ph id="ph1">&lt;see cref="E:System.Windows.Documents.DocumentPaginator.GetPageCompleted" /&gt;</ph>를 <ph id="ph2">&lt;see cref="T:System.Windows.Documents.DocumentPage" /&gt;</ph> 이벤트를 통해 비동기적으로 반환합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32)">
          <source>The only way to cancel the asynchronous operation of this method is to cancel all asynchronous operations.</source>
          <target state="translated">이 메서드의 비동기 작업을 취소 하는 유일한 방법은 모든 비동기 작업을 취소 하는 것입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32)">
          <source>Contrast this with the other overload of this method: <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29&gt;</ph>.</source>
          <target state="translated">이 메서드의 다른 오버 로드를 가진 이와 반대로: <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32)">
          <source>This method raises the <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPageCompleted&gt;</ph> event.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPageCompleted&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPage&gt;</ph> is passed to the event as one of the event arguments.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPage&gt;</ph> 이벤트에는 이벤트 인수 중 하나로 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32)">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29&gt;</ph> for how to use this method to get the page.</source>
          <target state="translated">참조 <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29&gt;</ph> 페이지를 가져오는 데이 방법을 사용 하는 방법에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="pageNumber" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pageNumber" /&gt;</ph>가 음수입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32,System.Object)">
          <source>The zero-based page number of the <ph id="ph1">&lt;see cref="T:System.Windows.Documents.DocumentPage" /&gt;</ph> to get.</source>
          <target state="translated">가져올 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.DocumentPage" /&gt;</ph>의 페이지 번호(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32,System.Object)">
          <source>A unique identifier for the asynchronous task.</source>
          <target state="translated">비동기 작업의 고유 식별자입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32,System.Object)">
          <source>Asynchronously returns (through the <ph id="ph1">&lt;see cref="E:System.Windows.Documents.DocumentPaginator.GetPageCompleted" /&gt;</ph> event) the <ph id="ph2">&lt;see cref="T:System.Windows.Documents.DocumentPage" /&gt;</ph> for the specified page number and assigns the specified ID to the asynchronous task.</source>
          <target state="translated">지정된 페이지 번호에 대한 <ph id="ph1">&lt;see cref="E:System.Windows.Documents.DocumentPaginator.GetPageCompleted" /&gt;</ph>를 <ph id="ph2">&lt;see cref="T:System.Windows.Documents.DocumentPage" /&gt;</ph> 이벤트를 통해 비동기적으로 반환하고 지정된 ID를 비동기 작업에 할당합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32,System.Object)">
          <source>This overload of the method makes it possible to cancel this asynchronous operation without cancelling all asynchronous operations.</source>
          <target state="translated">메서드의이 오버 로드를 사용 하면 모든 비동기 작업을 취소 하지 않고이 비동기 작업을 취소할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32,System.Object)">
          <source>This method raises the <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPageCompleted&gt;</ph> event.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPageCompleted&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPage&gt;</ph> is passed to the event as one of the event arguments.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPage&gt;</ph> 이벤트에는 이벤트 인수 중 하나로 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32,System.Object)">
          <source>The following steps illustrate how to retrieve a <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPage&gt;</ph> asynchronously:</source>
          <target state="translated">다음 단계에는 검색 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPage&gt;</ph> 비동기적으로:</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32,System.Object)">
          <source>Create a <ph id="ph1">&lt;xref:System.Windows.Documents.GetPageCompletedEventHandler&gt;</ph> delegate and add it to be notified of <ph id="ph2">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPageCompleted&gt;</ph> events.</source>
          <target state="translated">만들기는 <ph id="ph1">&lt;xref:System.Windows.Documents.GetPageCompletedEventHandler&gt;</ph> 대리자를 추가 하 여 알림을 받을 <ph id="ph2">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPageCompleted&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32,System.Object)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29&gt;</ph> specifying the <ph id="ph2">`pageNumber`</ph> desired and a unique <ph id="ph3">`userState`</ph>, which will be used to identify the completion of the asynchronous event.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29&gt;</ph> 지정 하는 <ph id="ph2">`pageNumber`</ph> 원하는 구성과 고유 <ph id="ph3">`userState`</ph>, 비동기 이벤트의 완료를 식별 하는 데 사용할 수는 있는 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32,System.Object)">
          <source>When the event occurs and the delegate is called, compare the event's <ph id="ph1">&lt;xref:System.Windows.Documents.GetPageCompletedEventArgs&gt;</ph>.<ph id="ph2">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A&gt;</ph></source>
          <target state="translated">이벤트 발생 및 대리자가 호출을 하는 경우 비교는 이벤트의 <ph id="ph1">&lt;xref:System.Windows.Documents.GetPageCompletedEventArgs&gt;</ph>합니다.<ph id="ph2">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32,System.Object)">
          <source>property with the original <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29&gt;</ph> <ph id="ph2">`userState`</ph> parameter.</source>
          <target state="translated">속성을 원래 <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29&gt;</ph> <ph id="ph2">`userState`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32,System.Object)">
          <source>(The <ph id="ph1">&lt;xref:System.Windows.Documents.GetPageCompletedEventArgs&gt;</ph>.<ph id="ph2">&lt;xref:System.Windows.Documents.GetPageCompletedEventArgs.PageNumber%2A&gt;</ph></source>
          <target state="translated">(의 <ph id="ph1">&lt;xref:System.Windows.Documents.GetPageCompletedEventArgs&gt;</ph>합니다.<ph id="ph2">&lt;xref:System.Windows.Documents.GetPageCompletedEventArgs.PageNumber%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32,System.Object)">
          <source>property will also match the <ph id="ph1">`pageNumber`</ph> specified in the <ph id="ph2">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29&gt;</ph> call.)</source>
          <target state="translated">속성은 일치는 <ph id="ph1">`pageNumber`</ph> 에 지정 된는 <ph id="ph2">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29&gt;</ph> 호출 합니다.)</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32,System.Object)">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Documents.GetPageCompletedEventArgs&gt;</ph>.<ph id="ph2">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A&gt;</ph></source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Documents.GetPageCompletedEventArgs&gt;</ph>합니다.<ph id="ph2">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32,System.Object)">
          <source>property matches the original <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29&gt;</ph> <ph id="ph2">`userState`</ph>, the operation is complete and the page is ready.</source>
          <target state="translated">속성에는 원본과 일치 <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29&gt;</ph> <ph id="ph2">`userState`</ph>, 작업이 완료 되 고 페이지가 준비 됩니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32,System.Object)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPage%2A&gt;</ph> to retrieve the formatted <ph id="ph2">&lt;xref:System.Windows.Documents.DocumentPage&gt;</ph>.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPage%2A&gt;</ph> 를 형식이 지정 된 검색 <ph id="ph2">&lt;xref:System.Windows.Documents.DocumentPage&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;paramref name="pageNumber" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pageNumber" /&gt;</ph>가 음수입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="E:System.Windows.Documents.DocumentPaginator.GetPageCompleted">
          <source>Occurs when <ph id="ph1">&lt;see cref="Overload:System.Windows.Documents.DocumentPaginator.GetPageAsync" /&gt;</ph> has completed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="Overload:System.Windows.Documents.DocumentPaginator.GetPageAsync" /&gt;</ph>가 완료될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Windows.Documents.DocumentPaginator.IsPageCountValid">
          <source>When overridden in a derived class, gets a value indicating whether <ph id="ph1">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /&gt;</ph> is the total number of pages.</source>
          <target state="translated">파생 클래스에서 재정의되는 경우 <ph id="ph1">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /&gt;</ph>가 총 페이지 수인지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.DocumentPaginator.IsPageCountValid">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if pagination is complete and <ph id="ph2">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /&gt;</ph> is the total number of pages; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>, if pagination is in process and <ph id="ph4">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /&gt;</ph> is the number of pages currently formatted (not the total).</source>
          <target state="translated">페이지 매기기가 완료되고 <ph id="ph2">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /&gt;</ph>가 총 페이지 수이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 페이지 매기기가 진행 중이고 <ph id="ph4">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /&gt;</ph>가 총 페이지 수가 아닌 현재 서식이 지정된 페이지 수이면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.DocumentPaginator.IsPageCountValid">
          <source>This value may revert to <ph id="ph1">&lt;see langword="false" /&gt;</ph>, after being <ph id="ph2">&lt;see langword="true" /&gt;</ph>, if <ph id="ph3">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.PageSize" /&gt;</ph> or content changes; because those events would force a repagination.</source>
          <target state="translated"><ph id="ph3">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.PageSize" /&gt;</ph> 또는 콘텐츠가 변경될 경우 이러한 이벤트로 인해 페이지가 새로 매겨지므로 이 값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>에서 <ph id="ph2">&lt;see langword="true" /&gt;</ph>로 돌아갈 수 있습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.OnComputePageCountCompleted(System.ComponentModel.AsyncCompletedEventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.OnComputePageCountCompleted(System.ComponentModel.AsyncCompletedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Documents.DocumentPaginator.ComputePageCountCompleted" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Documents.DocumentPaginator.ComputePageCountCompleted" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.OnGetPageCompleted(System.Windows.Documents.GetPageCompletedEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Documents.GetPageCompletedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.GetPageCompletedEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.OnGetPageCompleted(System.Windows.Documents.GetPageCompletedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Documents.DocumentPaginator.GetPageCompleted" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Documents.DocumentPaginator.GetPageCompleted" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.OnPagesChanged(System.Windows.Documents.PagesChangedEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Documents.PagesChangedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.PagesChangedEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.OnPagesChanged(System.Windows.Documents.PagesChangedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Documents.DocumentPaginator.PagesChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Documents.DocumentPaginator.PagesChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="P:System.Windows.Documents.DocumentPaginator.PageCount">
          <source>When overridden in a derived class, gets a count of the number of pages currently formatted</source>
          <target state="translated">파생 클래스에서 재정의되는 경우 현재 서식이 지정된 페이지 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.DocumentPaginator.PageCount">
          <source>A count of the number of pages that have been formatted.</source>
          <target state="translated">서식이 지정된 페이지 수입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.DocumentPaginator.PageCount">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A&gt;</ph> is <ph id="ph2">`true`</ph>, pagination is complete and <ph id="ph3">&lt;xref:System.Windows.Documents.DocumentPaginator.PageCount%2A&gt;</ph> is the total number of pages in the document.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A&gt;</ph> 은 <ph id="ph2">`true`</ph>, 페이지 매김 완료 되 고 <ph id="ph3">&lt;xref:System.Windows.Documents.DocumentPaginator.PageCount%2A&gt;</ph> 문서에서 페이지의 총 수입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.DocumentPaginator.PageCount">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A&gt;</ph> is <ph id="ph2">`false`</ph>, pagination is in process and <ph id="ph3">&lt;xref:System.Windows.Documents.DocumentPaginator.PageCount%2A&gt;</ph> is the number of pages currently formatted (not the total).</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A&gt;</ph> 은 <ph id="ph2">`false`</ph>, 처리 되는 페이지 매김 및 <ph id="ph3">&lt;xref:System.Windows.Documents.DocumentPaginator.PageCount%2A&gt;</ph> 현재 서식이 지정 된 페이지 (총 하지) 수입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.DocumentPaginator.PageCount">
          <source>This value may change if <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.PageSize%2A&gt;</ph> or content changes, because those events would force a repagination.</source>
          <target state="translated">이 값이 변경 될 수 있습니다 <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.PageSize%2A&gt;</ph> 또는 이러한 이벤트는 매기 강제로 수행 하기 때문에 콘텐츠가 변경 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="E:System.Windows.Documents.DocumentPaginator.PagesChanged">
          <source>Occurs when the document content is changed.</source>
          <target state="translated">문서 콘텐츠가 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.Windows.Documents.DocumentPaginator.PageSize">
          <source>When overridden in a derived class, gets or sets the suggested width and height of each page.</source>
          <target state="translated">파생 클래스에서 재정의되는 경우 각 페이지의 권장 너비와 높이를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.DocumentPaginator.PageSize">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> representing the width and height of each page.</source>
          <target state="translated">각 페이지의 너비와 높이를 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.DocumentPaginator.PageSize">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator&gt;</ph> may override the value of this property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator&gt;</ph> 이 속성의 값을 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.DocumentPaginator.PageSize">
          <source>Users should check <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPage.Size%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">사용자가 확인 해야 <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPage.Size%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.DocumentPaginator.PageSize">
          <source>The following example shows how to set the <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.PageSize%2A&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.PageSize%2A&gt;</ph>를 설정하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.Windows.Documents.DocumentPaginator.Source">
          <source>When overridden in a derived class, returns the element being paginated.</source>
          <target state="translated">파생 클래스에서 재정의되는 경우 페이지가 매겨지는 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.DocumentPaginator.Source">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Documents.IDocumentPaginatorSource" /&gt;</ph> representing the element being paginated.</source>
          <target state="translated">페이지가 매겨지는 요소를 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.IDocumentPaginatorSource" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.DocumentPaginator.Source">
          <source>The object returned has this <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator&gt;</ph> as the value of its <ph id="ph2">&lt;xref:System.Windows.Documents.IDocumentPaginatorSource.DocumentPaginator%2A&gt;</ph> property.</source>
          <target state="translated">반환 되는 개체에이 <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator&gt;</ph> 의 값으로 해당 <ph id="ph2">&lt;xref:System.Windows.Documents.IDocumentPaginatorSource.DocumentPaginator%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.DocumentPaginator.Source">
          <source>It is guaranteed to have such a property because it implements <ph id="ph1">&lt;xref:System.Windows.Documents.IDocumentPaginatorSource&gt;</ph>.</source>
          <target state="translated">이러한 속성을 구현 하기 때문에 있어야 하는 <ph id="ph1">&lt;xref:System.Windows.Documents.IDocumentPaginatorSource&gt;</ph>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>