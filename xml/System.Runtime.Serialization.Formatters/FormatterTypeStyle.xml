<Type Name="FormatterTypeStyle" FullName="System.Runtime.Serialization.Formatters.FormatterTypeStyle">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e990cc2ba4f28358cd07886e0e7b7aa04f6a7d75" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30486127" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum FormatterTypeStyle" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed FormatterTypeStyle extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.Formatters.FormatterTypeStyle" />
  <TypeSignature Language="VB.NET" Value="Public Enum FormatterTypeStyle" />
  <TypeSignature Language="C++ CLI" Value="public enum class FormatterTypeStyle" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>형식 설명을 serialize된 스트림에 레이아웃하는 형식을 나타냅니다.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="TypesAlways">
      <MemberSignature Language="C#" Value="TypesAlways" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.Serialization.Formatters.FormatterTypeStyle TypesAlways = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.TypesAlways" />
      <MemberSignature Language="VB.NET" Value="TypesAlways" />
      <MemberSignature Language="C++ CLI" Value="TypesAlways" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.FormatterTypeStyle</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>형식이 모든 개체 멤버와 <see cref="T:System.Runtime.Serialization.ISerializable" /> 개체 멤버에 지정될 수 있음을 나타냅니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="TypesWhenNeeded">
      <MemberSignature Language="C#" Value="TypesWhenNeeded" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.Serialization.Formatters.FormatterTypeStyle TypesWhenNeeded = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.TypesWhenNeeded" />
      <MemberSignature Language="VB.NET" Value="TypesWhenNeeded" />
      <MemberSignature Language="C++ CLI" Value="TypesWhenNeeded" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.FormatterTypeStyle</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>개체 배열, <see cref="T:System.Object" /> 형식의 개체 멤버 및 기본 형식이 아닌 <see cref="T:System.Runtime.Serialization.ISerializable" /> 값 형식에 대해서만 형식을 지정할 수 있음을 나타냅니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="XsdString">
      <MemberSignature Language="C#" Value="XsdString" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.Serialization.Formatters.FormatterTypeStyle XsdString = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.XsdString" />
      <MemberSignature Language="VB.NET" Value="XsdString" />
      <MemberSignature Language="C++ CLI" Value="XsdString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.FormatterTypeStyle</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>SOAP 형식이 아닌 XSD 형식으로 문자열을 지정할 수 있음을 나타냅니다. 문자열 ID는 전송되지 않습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `XsdString` 및 `TypesWhenNeeded` 동일한 버전의에서 작성 된 서비스 간의 고성능 serialization에 대 한 설정을 큐브일는 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]합니다. VTS 사용를 건너뛰거나 선택적 필드 및 속성을 추가 하는 형식 정보를 의도적으로 생략 하기 때문에이 두 값 VTS (버전 독립적 Serialization)를 지원 하지 않습니다. 사용 하지 않아야는 `XsdString` 또는 `TypesWhenNeeded` 직렬화 및 역직렬화의 다른 버전을 실행 하는 컴퓨터에 대 한 형식에 형식는 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 형식을 직렬화 된 컴퓨터. 직렬화 및 역직렬화의 서로 다른 버전을 실행 하는 컴퓨터에는 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 있기 때문에 특정 존재 하지 않는 경우 선택적 필드를 건너뛰려면 deserializer에 형식 정보를 직렬화 하지 않으려면 포맷터로 인해 다른 버전의에 있을 수 있는 형식은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]합니다. 사용 해야 할 경우 `XsdString` 또는 `TypesWhenNeeded` 이러한 시나리오의 한 버전에서 변경 된 형식에 대 한 사용자 지정 직렬화를 제공 해야 합니다는 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 다른 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>