<Type Name="AddInController" FullName="System.AddIn.Hosting.AddInController">
  <TypeSignature Language="C#" Value="public sealed class AddInController" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AddInController extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Hosting.AddInController" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AddInController" />
  <TypeSignature Language="C++ CLI" Value="public ref class AddInController sealed" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8d044-101">다양한 작업에 사용할 추가 기능에 대한 액세스를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="8d044-101">Provides access to an add-in for a variety of tasks.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d044-102">다음 작업을 수행 하려면이 클래스를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d044-102">Use this class to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="8d044-103">사용 하 여는 <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> 속성을는 <xref:System.AddIn.Hosting.AddInEnvironment> 의 추가 기능에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8d044-103">Use the <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> property to obtain an <xref:System.AddIn.Hosting.AddInEnvironment> object for an add-in.</span></span> <span data-ttu-id="8d044-104">사용 하 여 해당 개체와 동일한 응용 프로그램 도메인 및 프로세스는 원래의 추가 기능으로 다른 추가 기능을 활성화.</span><span class="sxs-lookup"><span data-stu-id="8d044-104">Then use that object to activate other add-ins in the same application domain and process as the original add-in.</span></span>  
  
-   <span data-ttu-id="8d044-105">사용 하 여는 <xref:System.AddIn.Hosting.AddInController.AppDomain%2A> 속성을는 <xref:System.AppDomain> 의 추가 기능에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8d044-105">Use the <xref:System.AddIn.Hosting.AddInController.AppDomain%2A> property to obtain an <xref:System.AppDomain> object for an add-in.</span></span> <span data-ttu-id="8d044-106">그런 다음 원래 추가 기능으로 같은 응용 프로그램 도메인에서 다른 추가 기능을 활성화 하려면 해당 개체를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d044-106">Then use that object to activate other add-ins in the same application domain as the original add-in.</span></span> <span data-ttu-id="8d044-107">크로스 프로세스 원격 서비스의 제한으로 인해이 시나리오가 적용 되지 것입니다는 별도 프로세스에서 활성화 되는 추가 기능을 참고 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d044-107">Note that because of limitations in cross-process remoting, this scenario will not work with add-ins that are activated in a separate process.</span></span>  
  
-   <span data-ttu-id="8d044-108">사용 하 여는 <xref:System.AddIn.Hosting.AddInController.Token%2A> 속성을는 <xref:System.AddIn.Hosting.AddInToken> 추가 기능을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8d044-108">Use the <xref:System.AddIn.Hosting.AddInController.Token%2A> property to obtain an <xref:System.AddIn.Hosting.AddInToken> object that represents an add-in.</span></span>  
  
-   <span data-ttu-id="8d044-109">프로그램에서 추가 기능을 종료는 <xref:System.AddIn.Hosting.AddInController.Shutdown%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8d044-109">Shut down an add-in with the <xref:System.AddIn.Hosting.AddInController.Shutdown%2A> method.</span></span>  
  
 <span data-ttu-id="8d044-110">추가 기능에 대 한 컨트롤러를 가져오려면, 호출 된 <xref:System.AddIn.Hosting.AddInController.GetAddInController%2A> 메서드와 인스턴스의 추가 기능을 매개 변수로 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d044-110">To obtain the controller for an add-in, call the <xref:System.AddIn.Hosting.AddInController.GetAddInController%2A> method and pass an instance of the add-in as its parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d044-111">사용 하 여 이전에 활성화 된 추가 기능으로 동일한 환경 내에서 추가 기능을 활성화 하는 다음 예제는 <xref:System.AddIn.Hosting.AddInController> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8d044-111">The following example activates an add-in within the same environment as a previously activated add-in by using an <xref:System.AddIn.Hosting.AddInController> object.</span></span>  
  
 [!code-csharp[AddInP3Host#8](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#8)]
 [!code-vb[AddInP3Host#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddInEnvironment">
      <MemberSignature Language="C#" Value="public System.AddIn.Hosting.AddInEnvironment AddInEnvironment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.AddIn.Hosting.AddInEnvironment AddInEnvironment" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInController.AddInEnvironment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AddInEnvironment As AddInEnvironment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::AddIn::Hosting::AddInEnvironment ^ AddInEnvironment { System::AddIn::Hosting::AddInEnvironment ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Hosting.AddInEnvironment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d044-112"><see cref="T:System.AddIn.Hosting.AddInEnvironment" /> 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8d044-112">Gets an <see cref="T:System.AddIn.Hosting.AddInEnvironment" /> object.</span></span></summary>
        <value><span data-ttu-id="8d044-113">원래 추가 기능과 동일한 환경에서 다른 추가 기능을 활성화하는 데 사용할 수 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8d044-113">An object that can be used to activate other add-ins in the same environment as the original add-in.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d044-114">이 속성을 사용 하 여 가져오려는 <xref:System.AddIn.Hosting.AddInEnvironment> 의 추가 기능에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8d044-114">Use this property to get the <xref:System.AddIn.Hosting.AddInEnvironment> object for an add-in.</span></span> <span data-ttu-id="8d044-115">사용 하 여 해당 개체와 동일한 응용 프로그램 도메인 및 프로세스는 원래의 추가 기능으로 다른 추가 기능을 활성화.</span><span class="sxs-lookup"><span data-stu-id="8d044-115">Then use that object to activate other add-ins in the same application domain and process as the original add-in.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d044-116">다음 예제는 두 번째 추가 기능을 동일한 환경에 첫 번째 추가 기능 내에서 활성화합니다.</span><span class="sxs-lookup"><span data-stu-id="8d044-116">The following example activates a second add-in within the same environment as the first add-in.</span></span>  
  
 [!code-csharp[AddInP3Host#8](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#8)]
 [!code-vb[AddInP3Host#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppDomain">
      <MemberSignature Language="C#" Value="public AppDomain AppDomain { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.AppDomain AppDomain" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInController.AppDomain" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AppDomain As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property AppDomain ^ AppDomain { AppDomain ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d044-117">추가 기능이 들어 있는 응용 프로그램 도메인을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8d044-117">Gets the application domain that contains an add-in.</span></span></summary>
        <value><span data-ttu-id="8d044-118">추가 기능의 응용 프로그램 도메인입니다.</span><span class="sxs-lookup"><span data-stu-id="8d044-118">The application domain of the add-in.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d044-119">이 속성을 사용 하 여 추가 기능에서 얻으려고 <xref:System.AppDomain> 개체를 동일한 응용 프로그램 도메인에 다른 추가 기능을 활성화 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d044-119">Use this property to obtain an add-in's <xref:System.AppDomain> object and to activate other add-ins in the same application domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d044-120">다음 예제는 두 번째에 추가 기능에 동일한 응용 프로그램 도메인에 첫 번째 추가 기능을 활성화합니다.</span><span class="sxs-lookup"><span data-stu-id="8d044-120">The following example activates a second add-in in the same application domain as the first add-in.</span></span>  
  
 [!code-csharp[AddInP3Host#9](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#9)]
 [!code-vb[AddInP3Host#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAddInController">
      <MemberSignature Language="C#" Value="public static System.AddIn.Hosting.AddInController GetAddInController (object addIn);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AddIn.Hosting.AddInController GetAddInController(object addIn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInController.GetAddInController(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAddInController (addIn As Object) As AddInController" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::AddIn::Hosting::AddInController ^ GetAddInController(System::Object ^ addIn);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Hosting.AddInController</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addIn" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="addIn"><span data-ttu-id="8d044-121">추가 기능의 호스트 뷰입니다.</span><span class="sxs-lookup"><span data-stu-id="8d044-121">The host view of the add-in.</span></span></param>
        <summary><span data-ttu-id="8d044-122">추가 기능에 대한 컨트롤러를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8d044-122">Obtains the controller for an add-in.</span></span></summary>
        <returns><span data-ttu-id="8d044-123">추가 기능에 대한 컨트롤러입니다.</span><span class="sxs-lookup"><span data-stu-id="8d044-123">The controller for the add-in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d044-124"><xref:System.AddIn.Hosting.AddInToken.Activate%2A> 메서드 추가 기능의 호스트 뷰를 나타내는 개체를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d044-124">The <xref:System.AddIn.Hosting.AddInToken.Activate%2A> methods return an object that represents the host's view of the add-in.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInController.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shutdown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d044-125">추가 기능을 비활성화합니다.</span><span class="sxs-lookup"><span data-stu-id="8d044-125">Disables an add-in.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d044-126">이 메서드는 추가 기능과 해당 호스트 간에 통신 파이프라인을 중단합니다.</span><span class="sxs-lookup"><span data-stu-id="8d044-126">This method breaks the communication pipeline between an add-in and its host.</span></span> <span data-ttu-id="8d044-127">추가 기능을 활성화 된 경우 자동으로 생성 된 응용 프로그램 도메인에서 사용 하 여는 <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29> 또는 <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.Security.PermissionSet%29> 메서드는 <xref:System.AddIn.Hosting.AddInController.Shutdown%2A> 메서드는 또한 응용 프로그램 도메인을 언로드합니다.</span><span class="sxs-lookup"><span data-stu-id="8d044-127">If the add-in was activated in an automatically generated application domain by using the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29> or <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.Security.PermissionSet%29> methods, the <xref:System.AddIn.Hosting.AddInController.Shutdown%2A> method also unloads the application domain.</span></span>  
  
 <span data-ttu-id="8d044-128">추가 기능을 자체 응용 프로그램 도메인으로 로드 된 경우는 <xref:System.AddIn.Hosting.AddInController.Shutdown%2A> 메서드는 또한 응용 프로그램 도메인을 언로드합니다.</span><span class="sxs-lookup"><span data-stu-id="8d044-128">If the add-in was loaded into its own application domain, the <xref:System.AddIn.Hosting.AddInController.Shutdown%2A> method also unloads the application domain.</span></span>  
  
 <span data-ttu-id="8d044-129">추가 기능에 기존 응용 프로그램 도메인으로 로드 된 경우 호스트 및 파이프라인 세그먼트에 더 이상 해당 추가 기능에 대 한 참조를 갖습니다.</span><span class="sxs-lookup"><span data-stu-id="8d044-129">If the add-in was loaded into an existing application domain, the host and pipeline segments will no longer have any references to that add-in.</span></span> <span data-ttu-id="8d044-130">이 경우 추가 기능인 됩니다 가비지 수집에서 회수 하기에 적합 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d044-130">In this case, the add-in will be eligible to be reclaimed by garbage collection.</span></span>  
  
 <span data-ttu-id="8d044-131">외부 프로세스에서 사용할 수 있는 추가 기능으로 종료 하려면이 클래스를 사용할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d044-131">You can also use this class to shut down an add-in that is activated in an external process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d044-132">다음 예에서는 <xref:System.AddIn.Hosting.AddInController> 라는 호스트 보기에 대 한 개체 `manager` 다음에서 추가를 종료 하 고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8d044-132">The following example obtains the <xref:System.AddIn.Hosting.AddInController> object for a host view named `manager` and then shuts down the add-in.</span></span>  
  
 [!code-csharp[AddInCollectionPipelineHost#6](~/samples/snippets/csharp/VS_Snippets_CLR/AddInCollectionPipelineHost/cs/Program.cs#6)]
 [!code-vb[AddInCollectionPipelineHost#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/AddInCollectionPipelineHost/vb/Program.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Token">
      <MemberSignature Language="C#" Value="public System.AddIn.Hosting.AddInToken Token { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.AddIn.Hosting.AddInToken Token" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInController.Token" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Token As AddInToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::AddIn::Hosting::AddInToken ^ Token { System::AddIn::Hosting::AddInToken ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Hosting.AddInToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d044-133">추가 기능을 나타내는 토큰을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8d044-133">Gets the token that represents the add-in.</span></span></summary>
        <value><span data-ttu-id="8d044-134">추가 기능을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8d044-134">An object that represents the add-in.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d044-135">일반적으로 나중에 추가 기능을 활성화 하려면 토큰을 가져오는 데이 속성을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8d044-135">Typically, you use this property to obtain a token to activate an add-in at a later time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>