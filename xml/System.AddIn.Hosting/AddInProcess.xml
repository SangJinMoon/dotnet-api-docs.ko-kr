<Type Name="AddInProcess" FullName="System.AddIn.Hosting.AddInProcess">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c32941de3165d6fcf3942a36a53def1e80dee1fa" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36715560" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AddInProcess" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AddInProcess extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Hosting.AddInProcess" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AddInProcess" />
  <TypeSignature Language="C++ CLI" Value="public ref class AddInProcess sealed" />
  <TypeSignature Language="F#" Value="type AddInProcess = class" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides an external process for running add-ins out-of-process from the host application.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 외부 프로세스에서 추가 기능을 활성화 하려면 전달 된 <xref:System.AddIn.Hosting.AddInProcess> 개체를 해당 <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInProcess%2CSystem.Security.PermissionSet%29?displayProperty=nameWithType> 메서드 오버 로드 합니다.  
  
 추가 기능을 실행 하는 실행 파일의 Windows 디렉터리에서.NET Framework와 함께 설치 하는 두 개의 파일 중 하나에서 가져옵니다. 호스트 응용 프로그램의 단어당-일치 하는 실행 파일은 기본적으로 사용 됩니다. 호스트에는 64 비트 프로세스 경우 AddInProcess.exe 실행 됩니다. 그렇지 않으면 AddInProcess32.exe 실행 됩니다. 실행 파일을 선택 하는 방법을 지정 하려면는 <xref:System.AddIn.Hosting.AddInProcess.%23ctor%28System.AddIn.Hosting.Platform%29> 를 만드는 생성자는 <xref:System.AddIn.Hosting.AddInProcess> 개체입니다.  
  
   
  
## Examples  
 다음 예제에서는 외부 프로세스에서 추가 기능을 활성화합니다.  
  
 [!code-csharp[AddInP3Host#10](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#10)]
 [!code-vb[AddInP3Host#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#10)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.AddIn.Hosting.AddInProcess" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AddInProcess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInProcess.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AddInProcess();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.AddIn.Hosting.AddInProcess" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자를 사용 하 여는 것과 동일한 결과가 <xref:System.AddIn.Hosting.AddInProcess.%23ctor%28System.AddIn.Hosting.Platform%29> 생성자는 <xref:System.AddIn.Hosting.Platform.Host?displayProperty=nameWithType> 플래그를 추가 기능을 실행 하는 프로세스를 호스트 프로세스와 같은 단어당-포함을 지정 합니다.  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">직접 실행 호출자에 대 한 완전 신뢰 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AddInProcess (System.AddIn.Hosting.Platform platform);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.AddIn.Hosting.Platform platform) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInProcess.#ctor(System.AddIn.Hosting.Platform)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AddInProcess(System::AddIn::Hosting::Platform platform);" />
      <MemberSignature Language="F#" Value="new System.AddIn.Hosting.AddInProcess : System.AddIn.Hosting.Platform -&gt; System.AddIn.Hosting.AddInProcess" Usage="new System.AddIn.Hosting.AddInProcess platform" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="platform" Type="System.AddIn.Hosting.Platform" />
      </Parameters>
      <Docs>
        <param name="platform">A value that specifies the bits-per-word of the process that runs the add-in.</param>
        <summary>Initializes a new instance of the <see cref="T:System.AddIn.Hosting.AddInProcess" /> class, specifying the bits-per-word of the process in which the add-in runs.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 표는 어떻게 `platform` 서로 다른 운영 체제에서 프로세스의 단어당-에 영향을 줍니다.  
  
||32비트 운영 체제|64비트 운영 체제|  
|-|------------------------------|------------------------------|  
|Host|32비트|호스트 프로세스와 동일|  
|AnyCPU|32비트|64비트|  
|X86|32비트|32비트|  
|X64|예외가 throw 됩니다.|64비트|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The registry entry for the path to the executable (AddInProcess.exe or AddInProcess32.exe) is missing.  -or-  The executable is missing.</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">직접 실행 호출자에 대 한 완전 신뢰 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</permission>
      </Docs>
    </Member>
    <Member MemberName="IsCurrentProcess">
      <MemberSignature Language="C#" Value="public bool IsCurrentProcess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCurrentProcess" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInProcess.IsCurrentProcess" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCurrentProcess As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCurrentProcess { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCurrentProcess : bool" Usage="System.AddIn.Hosting.AddInProcess.IsCurrentProcess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the current <see cref="T:System.AddIn.Hosting.AddInProcess" /> object represents the host application process.</summary>
        <value>
          <see cref="T:System.AddIn.Hosting.AddInProcess" /> 개체가 현재 해당 프로세스에 해당하면 <see langword="true" />이고 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성의 값이 `true`, 추가 기능에 실행 중인 프로그램에서 호스트 응용 프로그램입니다. 이 경우 사용 하는 <xref:System.AddIn.Hosting.AddInProcess.Start%2A> 또는 <xref:System.AddIn.Hosting.AddInProcess.Shutdown%2A> 메서드가 throw는 <xref:System.InvalidOperationException>합니다.  
  
> [!NOTE]
>  <xref:System.AddIn.Hosting.AddInEnvironment.Process%2A?displayProperty=nameWithType> 속성에서 반환 된 <xref:System.AddIn.Hosting.AddInProcess> 추가 기능인 프로세스에서 실행 되는 경우 호스트 응용 프로그램 프로세스를 나타내는 개체입니다.  
  
   
  
## Examples  
 다음 예에서는 외부 프로세스에서 추가 기능을 활성화 하 고 사용 하 여는 <xref:System.AddIn.Hosting.AddInProcess.IsCurrentProcess%2A> 호스트 응용 프로그램 프로세스와 동일한 프로세스에 추가 기능 인지 확인 하는 속성입니다.  
  
 [!code-csharp[AddInP3Host#10](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#10)]
 [!code-vb[AddInP3Host#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepAlive">
      <MemberSignature Language="C#" Value="public bool KeepAlive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepAlive" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInProcess.KeepAlive" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepAlive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepAlive { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeepAlive : bool with get, set" Usage="System.AddIn.Hosting.AddInProcess.KeepAlive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether to keep the external process alive.</summary>
        <value>
          <see langword="true" /> 외부 프로세스를; 활성 상태로 유지 해야 하는 경우 그렇지 않으면 <see langword="false" />합니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 설정 `false` 프로세스 내에 있는 마지막 추가-종료 된 후 적극적으로 외부 프로세스를 종료 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Platform">
      <MemberSignature Language="C#" Value="public System.AddIn.Hosting.Platform Platform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.AddIn.Hosting.Platform Platform" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInProcess.Platform" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Platform As Platform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::AddIn::Hosting::Platform Platform { System::AddIn::Hosting::Platform get(); };" />
      <MemberSignature Language="F#" Value="member this.Platform : System.AddIn.Hosting.Platform" Usage="System.AddIn.Hosting.AddInProcess.Platform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Hosting.Platform</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the bits-per-word of the process in which the out-of-process add-in is run.</summary>
        <value>-단어당 추가 기능을 실행 하는 프로세스입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 단어 당 비트 때 설정 됩니다는 <xref:System.AddIn.Hosting.AddInProcess> 개체가 초기화 되 고 변경할 수 없습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessId">
      <MemberSignature Language="C#" Value="public int ProcessId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProcessId" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInProcess.ProcessId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProcessId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ProcessId { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ProcessId : int" Usage="System.AddIn.Hosting.AddInProcess.ProcessId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the process ID of the external process.</summary>
        <value>프로세스 ID 또는 외부 프로세스가 시작 되지 않은 경우-1입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 디버깅을 위해이 속성을 사용 합니다.  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">직접 실행 호출자에 대 한 완전 신뢰 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</permission>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public bool Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInProcess.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Function Shutdown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Shutdown();" />
      <MemberSignature Language="F#" Value="member this.Shutdown : unit -&gt; bool" Usage="addInProcess.Shutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Forcibly shuts down the external process.</summary>
        <returns>
          <see langword="true" /> if the external process was running and is successfully shut down; <see langword="false" /> if there is no active process associated with the <see cref="T:System.AddIn.Hosting.AddInProcess" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The add-in is running in-process with the host application. Starting and stopping the process is allowed only for external processes, not for the host process.</exception>
      </Docs>
    </Member>
    <Member MemberName="ShuttingDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.ComponentModel.CancelEventArgs&gt; ShuttingDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.ComponentModel.CancelEventArgs&gt; ShuttingDown" />
      <MemberSignature Language="DocId" Value="E:System.AddIn.Hosting.AddInProcess.ShuttingDown" />
      <MemberSignature Language="VB.NET" Value="Public Event ShuttingDown As EventHandler(Of CancelEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::ComponentModel::CancelEventArgs ^&gt; ^ ShuttingDown;" />
      <MemberSignature Language="F#" Value="member this.ShuttingDown : EventHandler&lt;System.ComponentModel.CancelEventArgs&gt; " Usage="member this.ShuttingDown : System.EventHandler&lt;System.ComponentModel.CancelEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.ComponentModel.CancelEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the process represented by the <see cref="T:System.AddIn.Hosting.AddInProcess" /> object is about to be shut down.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public bool Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInProcess.Start" />
      <MemberSignature Language="VB.NET" Value="Public Function Start () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; bool" Usage="addInProcess.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Starts the external process.</summary>
        <returns>
          <see langword="true" /> if the process is successfully started; <see langword="false" /> if the process is already running.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The add-in is running in-process with the host application. Starting and stopping the process is allowed only for external processes, not for the host process.</exception>
      </Docs>
    </Member>
    <Member MemberName="StartupTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan StartupTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan StartupTimeout" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInProcess.StartupTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property StartupTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan StartupTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.StartupTimeout : TimeSpan with get, set" Usage="System.AddIn.Hosting.AddInProcess.StartupTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the number of seconds to allow for the process to start.</summary>
        <value>프로세스를 시작할 수 있도록 시간 (초) 수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본값은 10 초입니다. 이 속성은 주로 out-of-process-추가 기능을 실행 하는 프로세스에 대 한 시작 시간을 늘리려면 디버깅 하는 동안 사용 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The process is already running.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The assigned value is less than 0 (zero).</exception>
      </Docs>
    </Member>
  </Members>
</Type>