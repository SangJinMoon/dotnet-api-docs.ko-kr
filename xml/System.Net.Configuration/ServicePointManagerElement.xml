<Type Name="ServicePointManagerElement" FullName="System.Net.Configuration.ServicePointManagerElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2ffc810e55086e1755289ed87dd288f783ba2cfe" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30459227" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ServicePointManagerElement : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ServicePointManagerElement extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.Net.Configuration.ServicePointManagerElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ServicePointManagerElement&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServicePointManagerElement sealed : System::Configuration::ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="e2ca8-101">원격 컴퓨터에 연결하는 데 사용되는 기본 설정을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e2ca8-101">Represents the default settings used to create connections to a remote computer.</span>
      </span>
      <span data-ttu-id="e2ca8-102">이 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e2ca8-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2ca8-103">이 클래스에 해당 하는 `servicePointManager` 특성에는 `settings` [ &lt;servicePointManager&gt; 요소 (네트워크 설정)](~/docs/framework/configure-apps/file-schema/network/servicepointmanager-element-network-settings.md) 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e2ca8-103">This class corresponds to the `servicePointManager` attribute of the `settings`[&lt;servicePointManager&gt; Element (Network Settings)](~/docs/framework/configure-apps/file-schema/network/servicepointmanager-element-network-settings.md) configuration element.</span></span>  
  
 <span data-ttu-id="e2ca8-104">이 클래스는 새로운 초기화 하는 데 사용 되는 값을 지정 하는 데 사용 <xref:System.Net.ServicePoint> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e2ca8-104">This class is used to specify the values that are used to initialize new <xref:System.Net.ServicePoint> objects.</span></span>  
  
 <span data-ttu-id="e2ca8-105">이 클래스는 구성 파일에 저장할 수 있는 정보에 대 한 프로그래밍 방식의 액세스를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2ca8-105">This class provides programmatic access to information that can be stored in configuration files.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.ServicePointManager" />
    <altmember cref="T:System.Net.ServicePoint" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServicePointManagerElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Configuration.ServicePointManagerElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServicePointManagerElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e2ca8-106">
            <see cref="T:System.Net.Configuration.ServicePointManagerElement" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2ca8-106">Initializes a new instance of the <see cref="T:System.Net.Configuration.ServicePointManagerElement" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Net.ServicePointManager" />
        <altmember cref="T:System.Net.ServicePoint" />
      </Docs>
    </Member>
    <Member MemberName="CheckCertificateName">
      <MemberSignature Language="C#" Value="public bool CheckCertificateName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCertificateName" />
      <MemberSignature Language="DocId" Value="P:System.Net.Configuration.ServicePointManagerElement.CheckCertificateName" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckCertificateName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckCertificateName { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("checkCertificateName", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e2ca8-107">X509 인증서의 호스트 이름 정보 검사를 제어하는 부울 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2ca8-107">Gets or sets a Boolean value that controls checking host name information in an X509 certificate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e2ca8-108">호스트 이름 검사를 지정하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2ca8-108">
              <see langword="true" /> to specify host name checking; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Net.ServicePointManager" />
        <altmember cref="T:System.Net.ServicePoint" />
      </Docs>
    </Member>
    <Member MemberName="CheckCertificateRevocationList">
      <MemberSignature Language="C#" Value="public bool CheckCertificateRevocationList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCertificateRevocationList" />
      <MemberSignature Language="DocId" Value="P:System.Net.Configuration.ServicePointManagerElement.CheckCertificateRevocationList" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckCertificateRevocationList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckCertificateRevocationList { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("checkCertificateRevocationList", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e2ca8-109">인증 기관의 해지 목록을 기준으로 인증서를 검사하는지 여부를 나타내는 부울 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2ca8-109">Gets or sets a Boolean value that indicates whether the certificate is checked against the certificate authority revocation list.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e2ca8-110">인증서 해지 목록을 검사하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2ca8-110">
              <see langword="true" /> if the certificate revocation list is checked; otherwise, <see langword="false" />.The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2ca8-111">이 속성이로 설정 된 경우 `true`, 인증서가 인증서 유효성 검사 프로세스의 일부로 인증 기관의 해지 목록을 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2ca8-111">When this property is set to `true`, the certificate is checked against the certificate authority revocation list as part of the certificate validation process.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.ServicePointManager" />
        <altmember cref="T:System.Net.ServicePoint" />
      </Docs>
    </Member>
    <Member MemberName="DnsRefreshTimeout">
      <MemberSignature Language="C#" Value="public int DnsRefreshTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DnsRefreshTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Configuration.ServicePointManagerElement.DnsRefreshTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property DnsRefreshTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DnsRefreshTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("dnsRefreshTimeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e2ca8-112">주소 정보를 새로 고치기 전까지의 경과 시간을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2ca8-112">Gets or sets the amount of time after which address information is refreshed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e2ca8-113">DNS를 사용하여 주소를 확인하는 시기를 지정하는 <see cref="T:System.TimeSpan" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2ca8-113">A <see cref="T:System.TimeSpan" /> that specifies when addresses are resolved using DNS.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2ca8-114">이 속성의 값이 설정의 <xref:System.Net.ServicePointManager.DnsRefreshTimeout%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="e2ca8-114">The value of this property sets the <xref:System.Net.ServicePointManager.DnsRefreshTimeout%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.ServicePointManager" />
        <altmember cref="T:System.Net.ServicePoint" />
      </Docs>
    </Member>
    <Member MemberName="EnableDnsRoundRobin">
      <MemberSignature Language="C#" Value="public bool EnableDnsRoundRobin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableDnsRoundRobin" />
      <MemberSignature Language="DocId" Value="P:System.Net.Configuration.ServicePointManagerElement.EnableDnsRoundRobin" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableDnsRoundRobin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableDnsRoundRobin { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("enableDnsRoundRobin", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e2ca8-115">동일한 서버에 대한 연결에 다른 IP 주소를 사용할 수 있는지 여부를 제어하는 부울 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2ca8-115">Gets or sets a Boolean value that controls using different IP addresses on connections to the same server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e2ca8-116">DNS 라운드 로빈 동작을 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2ca8-116">
              <see langword="true" /> to enable DNS round-robin behavior; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Net.ServicePointManager" />
        <altmember cref="T:System.Net.ServicePoint" />
      </Docs>
    </Member>
    <Member MemberName="EncryptionPolicy">
      <MemberSignature Language="C#" Value="public System.Net.Security.EncryptionPolicy EncryptionPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Security.EncryptionPolicy EncryptionPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.Configuration.ServicePointManagerElement.EncryptionPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptionPolicy As EncryptionPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::EncryptionPolicy EncryptionPolicy { System::Net::Security::EncryptionPolicy get(); void set(System::Net::Security::EncryptionPolicy value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("encryptionPolicy", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Security.EncryptionPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e2ca8-117">사용할 <see cref="T:System.Net.Security.EncryptionPolicy" />를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2ca8-117">Gets or sets the <see cref="T:System.Net.Security.EncryptionPolicy" /> to use.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e2ca8-118">
            <see cref="T:System.Net.ServicePointManager" /> 인스턴스에 사용할 암호화 정책입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2ca8-118">The encryption policy to use for a <see cref="T:System.Net.ServicePointManager" /> instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2ca8-119"><xref:System.Net.Security.EncryptionPolicy> 속성 수 필요, 허용, 또는 암호화를 방지 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2ca8-119">The <xref:System.Net.Security.EncryptionPolicy> property can require, allow, or prevent encryption.</span></span> <span data-ttu-id="e2ca8-120"><xref:System.Net.Security.EncryptionPolicy> SSL/TLS 세션에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e2ca8-120">The <xref:System.Net.Security.EncryptionPolicy> will be applied to an SSL/TLS session.</span></span> <span data-ttu-id="e2ca8-121">암호화 정책으로 설정 된 경우 Null 암호화 사용이 필수 <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="e2ca8-121">The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.ServicePointManager.EncryptionPolicy" />
        <altmember cref="T:System.Net.Security.EncryptionPolicy" />
        <altmember cref="Overload:System.Net.Security.SslStream.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="Expect100Continue">
      <MemberSignature Language="C#" Value="public bool Expect100Continue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Expect100Continue" />
      <MemberSignature Language="DocId" Value="P:System.Net.Configuration.ServicePointManagerElement.Expect100Continue" />
      <MemberSignature Language="VB.NET" Value="Public Property Expect100Continue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Expect100Continue { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("expect100Continue", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e2ca8-122">100-Continue 동작을 사용할지 여부를 결정하는 부울 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2ca8-122">Gets or sets a Boolean value that determines whether 100-Continue behavior is used.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e2ca8-123">
            <see langword="POST" /> 요청에 대해 100-Continue 응답이 필요하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2ca8-123">
              <see langword="true" /> to expect 100-Continue responses for <see langword="POST" /> requests; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e2ca8-124">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2ca8-124">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2ca8-125">이 속성이로 설정 된 경우 `true`, 클라이언트에서 사용 하는 요청는 `POST` 메서드는 100을 받으려는-클라이언트를 게시 데이터를 전송 하도록 나타내려면 서버 로부터 응답을 계속 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2ca8-125">When this property is set to `true`, client requests that use the `POST` method expect to receive a 100-Continue response from the server to indicate that the client should send the data to be posted.</span></span> <span data-ttu-id="e2ca8-126">이 메커니즘은 요청 헤더에 따라 서버에서 요청을 거부 하려고 할 때 네트워크를 통해 많은 양의 데이터를 보내지 못하게 하는 클라이언트 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e2ca8-126">This mechanism allows clients to avoid sending large amounts of data over the network when the server, based on the request headers, intends to reject the request.</span></span>  
  
 <span data-ttu-id="e2ca8-127">자세한 내용은 <xref:System.Net.ServicePointManager.Expect100Continue%2A?displayProperty=nameWithType>을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="e2ca8-127">For additional information, see <xref:System.Net.ServicePointManager.Expect100Continue%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.ServicePointManager" />
        <altmember cref="T:System.Net.ServicePoint" />
      </Docs>
    </Member>
    <Member MemberName="PostDeserialize">
      <MemberSignature Language="C#" Value="protected override void PostDeserialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PostDeserialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Configuration.ServicePointManagerElement.PostDeserialize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PostDeserialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PostDeserialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Net.Configuration.ServicePointManagerElement.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseNagleAlgorithm">
      <MemberSignature Language="C#" Value="public bool UseNagleAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseNagleAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Net.Configuration.ServicePointManagerElement.UseNagleAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property UseNagleAlgorithm As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseNagleAlgorithm { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("useNagleAlgorithm", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e2ca8-128">Nagle 알고리즘을 사용할지 여부를 결정하는 부울 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2ca8-128">Gets or sets a Boolean value that determines whether the Nagle algorithm is used.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e2ca8-129">Nagle 알고리즘을 사용하려면 <see langword="true" />이고, 사용하지 않으려면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2ca8-129">
              <see langword="true" /> to use the Nagle algorithm; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e2ca8-130">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2ca8-130">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2ca8-131">Nagle 알고리즘은 작은 데이터 패킷을 버퍼링 하 고 단일 패킷으로 전송 하 여 네트워크 트래픽을 줄이기 위해 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e2ca8-131">The Nagle algorithm is used to reduce network traffic by buffering small packets of data and transmitting them as a single packet.</span></span> <span data-ttu-id="e2ca8-132">이 과정을 "nagling"; "이 라고도 전송 된 패킷 수가 감소 하므로 널리 사용 됩니다 하 고 패킷 당 오버 헤드를 낮춥니다.</span><span class="sxs-lookup"><span data-stu-id="e2ca8-132">This process is also referred to as "nagling"; it is widely used because it reduces the number of packets transmitted and lowers the overhead per packet.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.ServicePointManager" />
        <altmember cref="T:System.Net.ServicePoint" />
      </Docs>
    </Member>
  </Members>
</Type>