<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="UnicodeDecodingConformance.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f2df9e9c55c4dabea2a392e6622b00c83701b548.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f2df9e9c55c4dabea2a392e6622b00c83701b548</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.Configuration.UnicodeDecodingConformance">
          <source>Controls how Unicode characters are interpreted by the <ph id="ph1">&lt;see cref="Overload:System.Net.WebUtility.HtmlDecode" /&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="Overload:System.Net.WebUtility.HtmlDecode" /&gt;</ph> 메서드에서 유니코드 문자를 해석하는 방식을 제어합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Configuration.UnicodeDecodingConformance">
          <source>For more information on how Unicode characters are supposed to be encoded in HTML, see <bpt id="p1">[</bpt>Using character escapes in markup and CSS<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=256607)</ept>.</source>
          <target state="translated">유니코드 문자는 되어야 하는 방법에 대 한 자세한 내용은 참조에 html에서 인코딩할 <bpt id="p1">[</bpt>태그와 CSS의 이스케이프 문자를 사용 하 여<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=256607)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="F:System.Net.Configuration.UnicodeDecodingConformance.Auto">
          <source>Use automatic behavior.</source>
          <target state="translated">자동 동작을 사용합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="F:System.Net.Configuration.UnicodeDecodingConformance.Auto">
          <source>The decoding behavior is determined by current application's target Framework.</source>
          <target state="translated">디코딩 동작은 현재 응용 프로그램의 대상 프레임워크에 따라 결정됩니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="F:System.Net.Configuration.UnicodeDecodingConformance.Auto">
          <source>For <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> and later, the Unicode encoding decoding is strict.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> 이상에서는 유니코드 디코딩이 엄격합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="F:System.Net.Configuration.UnicodeDecodingConformance.Compat">
          <source>Use compatible behavior.</source>
          <target state="translated">호환되는 동작을 사용합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="F:System.Net.Configuration.UnicodeDecodingConformance.Compat">
          <source>Specifies that incoming data is not checked for validity before being decoded.</source>
          <target state="translated">들어오는 데이터를 디코딩하기 전에 유효성을 확인하지 않도록 지정합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="F:System.Net.Configuration.UnicodeDecodingConformance.Compat">
          <source>For example, an input string of "<ph id="ph1">&amp;amp;</ph>amp;#xD84C;" would decode as U+D84C, which is an unpaired surrogate.</source>
          <target state="translated">예를 들어 입력 문자열 "<ph id="ph1">&amp;amp;</ph>amp;#xD84C;"는 쌍으로 되어 있지 않은 서로게이트인 U+D84C로 디코딩됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="F:System.Net.Configuration.UnicodeDecodingConformance.Compat">
          <source>Additionally, the decoder does not understand code points in the SMP unless they're represented as HTML-encoded surrogates, so the inputstring "<ph id="ph1">&amp;amp;</ph>#144308;" would result in the output string "<ph id="ph2">&amp;amp;</ph>#144308;".</source>
          <target state="translated">또한 디코더가 HTML로 인코딩된 서로게이트를 표시하지 않는다면 디코더가 SMP에서 코드 포인트를 인식하지 못하므로 입력 문자열 "<ph id="ph1">&amp;amp;</ph>#144308;"에 대한 출력 문자열은 "<ph id="ph2">&amp;amp;</ph>#144308;"입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="F:System.Net.Configuration.UnicodeDecodingConformance.Loose">
          <source>Use loose behavior.</source>
          <target state="translated">느슨한 동작을 사용합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="F:System.Net.Configuration.UnicodeDecodingConformance.Loose">
          <source>Similar to <ph id="ph1">&lt;see cref="F:System.Net.Configuration.UnicodeDecodingConformance.Compat" /&gt;</ph> in that there are no validity checks, but the decoder also understands code points.</source>
          <target state="translated">유효성 확인이 없다는 점에서 <ph id="ph1">&lt;see cref="F:System.Net.Configuration.UnicodeDecodingConformance.Compat" /&gt;</ph>과 유사하지만, 디코더도 코드 포인트를 이해합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="F:System.Net.Configuration.UnicodeDecodingConformance.Loose">
          <source>The input string "<ph id="ph1">&amp;amp;</ph>#144308;" would decode into the character U+233B4 correctly.</source>
          <target state="translated">입력 문자열 "<ph id="ph1">&amp;amp;</ph>#144308;"이 문자 U+233B4로 바르게 디코딩됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="F:System.Net.Configuration.UnicodeDecodingConformance.Loose">
          <source>This switch is meant to provide maximum interoperability when the decoder doesn't know which format the provider is using to generate the encoded string.</source>
          <target state="translated">이 스위치는 디코더가 공급자가 인코딩된 문자열을 생성하는 데 어떤 형식을 사용하는지 모를 경우 최대 상호 운용성을 제공하기 위한 것입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="F:System.Net.Configuration.UnicodeDecodingConformance.Strict">
          <source>Use strict behavior.</source>
          <target state="translated">엄격한 동작을 사용합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="F:System.Net.Configuration.UnicodeDecodingConformance.Strict">
          <source>Specifies that the incoming encoded data is checked for validity before being decoded.</source>
          <target state="translated">들어오는 인코딩된 데이터를 디코딩하기 전에 유효성을 확인하도록 지정합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="F:System.Net.Configuration.UnicodeDecodingConformance.Strict">
          <source>For example, an input string of "<ph id="ph1">&amp;amp;</ph>#144308;" would decode as U+233B4, but an input string of "<ph id="ph2">&amp;amp;</ph>#xD84C;<ph id="ph3">&amp;amp;</ph>#xDFB4;" would fail to decode properly.</source>
          <target state="translated">예를 들어 입력 문자열 "<ph id="ph1">&amp;amp;</ph>#144308;"이 U+233B4로 디코딩되지만 입력 문자열 "<ph id="ph2">&amp;amp;</ph>#xD84C;<ph id="ph3">&amp;amp;</ph>#xDFB4;"는 적절하게 디코딩되지 않습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="F:System.Net.Configuration.UnicodeDecodingConformance.Strict">
          <source>Already-decoded data in the string is not checked for validity.</source>
          <target state="translated">문자열의 이미 디코딩된 데이터는 유효성을 검사하지 않습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="F:System.Net.Configuration.UnicodeDecodingConformance.Strict">
          <source>For example, an input string of "\ud800" will result in an output string of "\ud800", as the already-decoded surrogate is skipped during decoding, even though it is unpaired.</source>
          <target state="translated">예를 들어, 짝이 없기는 하지만 디코딩하는 동안 이미 디코딩된 서로게이트는 건너뛰므로 "\ud800"의 입력 문자열은 "\ud800"의 출력 문자열을 발생시킵니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>