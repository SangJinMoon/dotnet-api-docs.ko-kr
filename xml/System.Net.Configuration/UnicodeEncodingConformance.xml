<Type Name="UnicodeEncodingConformance" FullName="System.Net.Configuration.UnicodeEncodingConformance">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9fdd7ccdb21d2e34ab775e62d566b2115bae64ca" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51933794" /></Metadata><TypeSignature Language="C#" Value="public enum UnicodeEncodingConformance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed UnicodeEncodingConformance extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Net.Configuration.UnicodeEncodingConformance" />
  <TypeSignature Language="VB.NET" Value="Public Enum UnicodeEncodingConformance" />
  <TypeSignature Language="C++ CLI" Value="public enum class UnicodeEncodingConformance" />
  <TypeSignature Language="F#" Value="type UnicodeEncodingConformance = " />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>유니코드 문자는 출력 하는 방법을 제어 합니다 <see cref="Overload:System.Net.WebUtility.HtmlEncode" /> 메서드.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 유니코드 문자 해야 하는 방법에 대 한 자세한 내용은 참조에 html에서 인코딩된 [태그와 CSS의 이스케이프 문자를 사용 하 여](https://go.microsoft.com/fwlink/?LinkId=256607)입니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Net.WebUtility.HtmlEncode" />
  </Docs>
  <Members>
    <Member MemberName="Auto">
      <MemberSignature Language="C#" Value="Auto" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Configuration.UnicodeEncodingConformance Auto = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Configuration.UnicodeEncodingConformance.Auto" />
      <MemberSignature Language="VB.NET" Value="Auto" />
      <MemberSignature Language="C++ CLI" Value="Auto" />
      <MemberSignature Language="F#" Value="Auto = 0" Usage="System.Net.Configuration.UnicodeEncodingConformance.Auto" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Configuration.UnicodeEncodingConformance</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>자동 동작을 사용 합니다. 유니코드 인코딩 동작은 현재 응용 프로그램의 대상 프레임워크에 따라 결정됩니다. 에 대 한 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 이며 나중에 유니코드 인코딩 동작이 엄격 합니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="Compat">
      <MemberSignature Language="C#" Value="Compat" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Configuration.UnicodeEncodingConformance Compat = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Configuration.UnicodeEncodingConformance.Compat" />
      <MemberSignature Language="VB.NET" Value="Compat" />
      <MemberSignature Language="C++ CLI" Value="Compat" />
      <MemberSignature Language="F#" Value="Compat = 2" Usage="System.Net.Configuration.UnicodeEncodingConformance.Compat" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Configuration.UnicodeEncodingConformance</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>호환 되는 동작을 사용 합니다. 개별 utf-16 서로게이트 코드 포인트가 그대로 출력 되도록 지정-때 중 <see cref="Overload:System.Net.WebUtility.HtmlEncode" /> 메서드를 호출 합니다. 예를 들어 문자열 "\uD84C\uDFB4" (또는 "\U000233B4"), 지정 된 출력을 <see cref="Overload:System.Net.WebUtility.HtmlEncode" /> "\uD84C\uDFB4 (입력은 인코딩되지 않습니다.)가 있습니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="Strict">
      <MemberSignature Language="C#" Value="Strict" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Configuration.UnicodeEncodingConformance Strict = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Configuration.UnicodeEncodingConformance.Strict" />
      <MemberSignature Language="VB.NET" Value="Strict" />
      <MemberSignature Language="C++ CLI" Value="Strict" />
      <MemberSignature Language="F#" Value="Strict = 1" Usage="System.Net.Configuration.UnicodeEncodingConformance.Strict" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Configuration.UnicodeEncodingConformance</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>엄격한 동작을 사용 합니다. <see cref="Overload:System.Net.WebUtility.HtmlEncode" /> 메서드 중 하나가 호출될 경우 개별 UTF-16 서로게이트 코드 포인트가 단일 코드 포인트로 결합되도록 지정합니다. 예를 들어, 입력 문자열 "\uD84C\uDFB4"(또는 "\U000233B4")가 지정된 경우 <see cref="Overload:System.Net.WebUtility.HtmlEncode" /> 메서드의 출력은 "&amp;#144308;"입니다.  
  
입력 (포함 서로게이트 쌍을 이루지 않는, 예를 들어) 형식이 잘못 된 utf-16 문자열로 경우 HTML 인코딩 전에 잘못 된 코드 포인트 U + FFFD (유니코드 대체 문자)로 바뀝니다.</summary>
      </Docs>
    </Member>
  </Members>
</Type>