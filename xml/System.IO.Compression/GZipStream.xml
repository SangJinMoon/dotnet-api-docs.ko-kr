<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="GZipStream.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9575d09f-9d72-4690-889e-b83c405ca456186f64d2dcfae44502bea98577df0a223926d1c2.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">186f64d2dcfae44502bea98577df0a223926d1c2</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">254e16ae65e82f4aa59360cd8572b36b6b5b2f80</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/05/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.Compression.GZipStream">
          <source>Provides methods and properties used to compress and decompress streams.</source>
          <target state="translated">스트림을 압축하거나 압축을 푸는 데 사용되는 메서드 및 속성을 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Compression.GZipStream">
          <source>This class represents the gzip data format, which uses an industry-standard algorithm for lossless file compression and decompression.</source>
          <target state="translated">이 클래스는 비손실 파일 압축 및 압축 풀기에 대 한 업계 표준 알고리즘을 사용 하는 gzip 데이터 형식을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Compression.GZipStream">
          <source>The format includes a cyclic redundancy check value for detecting data corruption.</source>
          <target state="translated">형식은 데이터 손상을 감지 하기 위한 순환 중복 검사 값을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Compression.GZipStream">
          <source>The gzip data format uses the same algorithm as the <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> class, but can be extended to use other compression formats.</source>
          <target state="translated">와 동일한 알고리즘을 사용 하는 gzip 데이터 형식은 <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> 클래스 같지만 다른 압축 형식을 사용 하도록 확장할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Compression.GZipStream">
          <source>The format can be readily implemented in a manner not covered by patents.</source>
          <target state="translated">형식은은 특허권을 차지 하지 않는 방식으로 손쉽게 구현할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Compression.GZipStream">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, the <ph id="ph2">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> class uses the zlib library for compression.</source>
          <target state="translated">부터는 <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, <ph id="ph2">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> 클래스 zlib 라이브러리를 사용 하 여 압축 됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Compression.GZipStream">
          <source>As a result, it provides a better compression algorithm and, in most cases, a smaller compressed file than it provides in earlier versions of the .NET Framework.</source>
          <target state="translated">결과적으로, 더 나은 압축 알고리즘을 제공 고 대부분의 경우에서 더 작은 압축된 파일 보다 이전 버전의.NET Framework에서 제공 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Compression.GZipStream">
          <source>Compressed <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> objects written to a file with an extension of .gz can be decompressed using many common compression tools; however, this class does not inherently provide functionality for adding files to or extracting files from zip archives.</source>
          <target state="translated">압축 된 <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> 확장명이.gz 인 파일에 기록 하는 개체는 여러 공통 압축 도구를 사용 하 여 압축이; 그러나이 클래스가 파일을 추가 하거나 zip 보관 파일에서 파일을 추출 하기 위한 기능은 기본적으로 제공 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Compression.GZipStream">
          <source>The compression functionality in <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> is exposed as a stream.</source>
          <target state="translated">압축 기능은 <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> 스트림으로 노출 됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Compression.GZipStream">
          <source>Data is read on a byte-by-byte basis, so it is not possible to perform multiple passes to determine the best method for compressing entire files or large blocks of data.</source>
          <target state="translated">데이터는 이므로 여러 패스에 전체 파일이 나 큰 데이터 블록을 압축 하는 데 가장 좋은 방법을 수행할 수를 바이트 단위로 별로 읽습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Compression.GZipStream">
          <source>The <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> classes are best used on uncompressed sources of data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> 클래스는 데이터의 압축 되지 않은 원본에 가장 적합 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Compression.GZipStream">
          <source>If the source data is already compressed, using these classes may actually increase the size of the stream.</source>
          <target state="translated">원본 데이터가 이미 압축 된 경우 이러한 클래스를 사용 하 여 실제로 증가할 수 있습니다 스트림의 크기입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Compression.GZipStream">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> class to compress and decompress a directory of files.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> 클래스를 압축 하 고 파일의 디렉터리를 압축 해제 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Compression.GZipStream">
          <source>When you inherit from <ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph>, you must override the following members: <ph id="ph2">&lt;see cref="P:System.IO.Compression.GZipStream.CanSeek" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.IO.Compression.GZipStream.CanWrite" /&gt;</ph>, and <ph id="ph4">&lt;see cref="P:System.IO.Compression.GZipStream.CanRead" /&gt;</ph>.</source>
          <target state="translated">상속 하는 경우 <ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph>, 멤버를 재정의 해야 합니다: <ph id="ph2">&lt;see cref="P:System.IO.Compression.GZipStream.CanSeek" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.IO.Compression.GZipStream.CanWrite" /&gt;</ph>, 및 <ph id="ph4">&lt;see cref="P:System.IO.Compression.GZipStream.CanRead" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="T:System.IO.Compression.GZipStream">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
          <source>The stream to write the compressed data to.</source>
          <target state="translated">압축된 데이터를 쓸 스트림입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
          <source>One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.</source>
          <target state="translated">스트림을 압축할 때 속도 또는 압축 효율을 강조할지 여부를 나타내는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph> class by using the specified stream and compression level.</source>
          <target state="translated">지정된 스트림과 압축 수준을 사용하여 <ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
          <source>You use this constructor when you want to specify whether compression efficiency or speed is more important for an instance of the <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> class.</source>
          <target state="translated">속도 또는 압축 효율이 더 중요 한 인스턴스에 있는지 여부를 지정 하려면이 생성자를 사용 하 여 <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
          <source>This constructor overload uses the compression mode <ph id="ph1">&lt;xref:System.IO.Compression.CompressionMode.Compress&gt;</ph>.</source>
          <target state="translated">이 생성자 오버 로드는 압축 모드를 사용 하 여 <ph id="ph1">&lt;xref:System.IO.Compression.CompressionMode.Compress&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
          <source>To set the compression mode to another value, use the <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29&gt;</ph> or <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29&gt;</ph> overload.</source>
          <target state="translated">다른 값으로 압축 모드를 설정 하려면는 <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29&gt;</ph> 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
          <source>The following example shows how to set the compression level when creating a <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> object.</source>
          <target state="translated">만들 때 압축 수준을 설정 하려면 다음 예제에서는 한 <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
          <source>The stream does not support write operations such as compression.</source>
          <target state="translated">스트림이 압축 등의 쓰기 작업을 지원하지 않습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
          <source>(The <ph id="ph1">&lt;see cref="P:System.IO.Stream.CanWrite" /&gt;</ph> property on the stream object is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.)</source>
          <target state="translated">(스트림 개체의 <ph id="ph1">&lt;see cref="P:System.IO.Stream.CanWrite" /&gt;</ph> 속성이 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.)</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source>The stream the compressed or decompressed data is written to.</source>
          <target state="translated">압축되거나 압축을 푼 데이터가를 쓸 스트림입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source>One of the enumeration values that indicates whether to compress or decompress the stream.</source>
          <target state="translated">스트림을 압축할 것인지 또는 압축 해제할 것인지를 나타내는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph> class by using the specified stream and compression mode.</source>
          <target state="translated">지정된 스트림과 압축 모드를 사용하여 <ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source>By default, <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> owns the underlying stream, so closing the <ph id="ph2">`stream`</ph> parameter also closes the underlying stream.</source>
          <target state="translated">기본적으로 <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> 닫는 하므로 내부 스트림을 소유는 <ph id="ph2">`stream`</ph> 매개 변수는 또한 내부 스트림을 닫습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source>Note that the state of the underlying stream can affect the usability of the stream.</source>
          <target state="translated">참고는 내부 스트림의 상태 스트림의 유용성에 영향을 줄 수 있습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source>Also, no explicit checks are performed, so no additional exceptions are thrown when the new instance is created.</source>
          <target state="translated">또한 아무 명시적 검사도 수행, 하므로 새 인스턴스를 만들 때 추가 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source>If an instance of the <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> class is created with the <ph id="ph2">`mode`</ph> parameter equal to <ph id="ph3">`Compress`</ph> and no further action occurs, the stream will appear as a valid, empty compressed file.</source>
          <target state="translated">인스턴스는 <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> 클래스 만들어집니다는 <ph id="ph2">`mode`</ph> 매개 변수를 <ph id="ph3">`Compress`</ph> 추가 작업이 고, 스트림이 유효한 빈 압축 된 파일으로 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source>By default, the compression level is set to <ph id="ph1">&lt;xref:System.IO.Compression.CompressionLevel.Optimal&gt;</ph> when the compression mode is <ph id="ph2">&lt;xref:System.IO.Compression.CompressionMode.Compress&gt;</ph>.</source>
          <target state="translated">기본적으로 압축 수준 설정은 <ph id="ph1">&lt;xref:System.IO.Compression.CompressionLevel.Optimal&gt;</ph> 압축 모드가 인 경우 <ph id="ph2">&lt;xref:System.IO.Compression.CompressionMode.Compress&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source>The following example initializes a new instance of the <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> class with <ph id="ph2">`mode`</ph> set to <ph id="ph3">&lt;xref:System.IO.Compression.CompressionMode.Compress&gt;</ph>.</source>
          <target state="translated">다음 예제에서는의 새 인스턴스를 초기화 합니다.는 <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> 클래스와 <ph id="ph2">`mode`</ph> 로 설정 <ph id="ph3">&lt;xref:System.IO.Compression.CompressionMode.Compress&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> class.</source>
          <target state="translated">이 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> enumeration value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mode" /&gt;</ph>가 유효한 <ph id="ph2">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> 열거형 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source><ph id="ph1">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.IO.Compression.CompressionMode.Compress" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.IO.Stream.CanWrite" /&gt;</ph> is <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.IO.Compression.CompressionMode.Compress" /&gt;</ph>이고 <ph id="ph3">&lt;see cref="P:System.IO.Stream.CanWrite" /&gt;</ph>이 <ph id="ph4">&lt;see langword="false" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source><ph id="ph1">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.IO.Compression.CompressionMode.Decompress" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.IO.Stream.CanRead" /&gt;</ph> is <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.IO.Compression.CompressionMode.Decompress" /&gt;</ph>이고 <ph id="ph3">&lt;see cref="P:System.IO.Stream.CanRead" /&gt;</ph>이 <ph id="ph4">&lt;see langword="false" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
          <source>The stream to write the compressed data to.</source>
          <target state="translated">압축된 데이터를 쓸 스트림입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
          <source>One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.</source>
          <target state="translated">스트림을 압축할 때 속도 또는 압축 효율을 강조할지 여부를 나타내는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to leave the stream object open after disposing the <ph id="ph2">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph> object; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph> 개체를 삭제한 후 스트림 개체를 열어 두려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph> class by using the specified stream and compression level, and optionally leaves the stream open.</source>
          <target state="translated">지정된 스트림과 압축 수준을 사용하여 <ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph> 클래스의 새 인스턴스를 초기화하고 스트림을 선택적으로 연 상태로 둘 수 있습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
          <source>You use this constructor when you want to specify whether compression efficiency or speed is more important for an instance of the <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> class, and whether to leave the stream object open after disposing the <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> object.</source>
          <target state="translated">속도 또는 압축 효율이 더 중요 한 인스턴스에 있는지 여부를 지정 하려면이 생성자를 사용 하는 <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> 삭제 한 후 스트림 개체를 열어 두려면 여부와 클래스는 <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
          <source>This constructor overload uses the compression mode <ph id="ph1">&lt;xref:System.IO.Compression.CompressionMode.Compress&gt;</ph>.</source>
          <target state="translated">이 생성자 오버 로드는 압축 모드를 사용 하 여 <ph id="ph1">&lt;xref:System.IO.Compression.CompressionMode.Compress&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
          <source>To set the compression mode to another value, use the <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29&gt;</ph> or <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29&gt;</ph> overload.</source>
          <target state="translated">다른 값으로 압축 모드를 설정 하려면는 <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29&gt;</ph> 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
          <source>The following example shows how to set the compression level when creating a <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> object and how to leave the stream open.</source>
          <target state="translated">만들 때 압축 수준을 설정 하려면 다음 예제에서는 한 <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> 개체 및 스트림을 열어 두려면 하는 방법입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
          <source>The stream does not support write operations such as compression.</source>
          <target state="translated">스트림이 압축 등의 쓰기 작업을 지원하지 않습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
          <source>(The <ph id="ph1">&lt;see cref="P:System.IO.Stream.CanWrite" /&gt;</ph> property on the stream object is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.)</source>
          <target state="translated">(스트림 개체의 <ph id="ph1">&lt;see cref="P:System.IO.Stream.CanWrite" /&gt;</ph> 속성이 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.)</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source>The stream the compressed or decompressed data is written to.</source>
          <target state="translated">압축되거나 압축을 푼 데이터가를 쓸 스트림입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source>One of the enumeration values that indicates whether to compress or decompress the stream.</source>
          <target state="translated">스트림을 압축할 것인지 또는 압축 해제할 것인지를 나타내는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to leave the stream open after disposing the <ph id="ph2">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph> object; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph> 개체를 삭제한 후 스트림을 열어 두려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph> class by using the specified stream and compression mode, and optionally leaves the stream open.</source>
          <target state="translated">지정된 스트림과 압축 모드를 사용하여 <ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph> 클래스의 새 인스턴스를 초기화하고 스트림을 선택적으로 연 상태로 둘 수 있습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source>By default, <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> owns the underlying stream, so closing the <ph id="ph2">`stream`</ph> parameter also closes the underlying stream.</source>
          <target state="translated">기본적으로 <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> 닫는 하므로 내부 스트림을 소유는 <ph id="ph2">`stream`</ph> 매개 변수는 또한 내부 스트림을 닫습니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source>Note that the state of the underlying stream can affect the usability of the stream.</source>
          <target state="translated">참고는 내부 스트림의 상태 스트림의 유용성에 영향을 줄 수 있습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source>Also, no explicit checks are performed, so no additional exceptions are thrown when the new instance is created.</source>
          <target state="translated">또한 아무 명시적 검사도 수행, 하므로 새 인스턴스를 만들 때 추가 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source>If an instance of the <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> class is created with the <ph id="ph2">`mode`</ph> parameter equal to <ph id="ph3">`Compress`</ph> and no further action occurs, the stream will appear as a valid, empty compressed file.</source>
          <target state="translated">인스턴스는 <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> 클래스 만들어집니다는 <ph id="ph2">`mode`</ph> 매개 변수를 <ph id="ph3">`Compress`</ph> 추가 작업이 고, 스트림이 유효한 빈 압축 된 파일으로 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source>By default, the compression level is set to <ph id="ph1">&lt;xref:System.IO.Compression.CompressionLevel.Optimal&gt;</ph> when the compression mode is <ph id="ph2">&lt;xref:System.IO.Compression.CompressionMode.Compress&gt;</ph>.</source>
          <target state="translated">기본적으로 압축 수준 설정은 <ph id="ph1">&lt;xref:System.IO.Compression.CompressionLevel.Optimal&gt;</ph> 압축 모드가 인 경우 <ph id="ph2">&lt;xref:System.IO.Compression.CompressionMode.Compress&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mode" /&gt;</ph>은 유효한 <ph id="ph2">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source><ph id="ph1">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.IO.Compression.CompressionMode.Compress" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.IO.Stream.CanWrite" /&gt;</ph> is <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.IO.Compression.CompressionMode.Compress" /&gt;</ph>이고 <ph id="ph3">&lt;see cref="P:System.IO.Stream.CanWrite" /&gt;</ph>이 <ph id="ph4">&lt;see langword="false" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source><ph id="ph1">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.IO.Compression.CompressionMode.Decompress" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.IO.Stream.CanRead" /&gt;</ph> is <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.IO.Compression.CompressionMode.Decompress" /&gt;</ph>이고 <ph id="ph3">&lt;see cref="P:System.IO.Stream.CanRead" /&gt;</ph>이 <ph id="ph4">&lt;see langword="false" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.IO.Compression.GZipStream.BaseStream">
          <source>Gets a reference to the underlying stream.</source>
          <target state="translated">내부 스트림에 대한 참조를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Compression.GZipStream.BaseStream">
          <source>A stream object that represents the underlying stream.</source>
          <target state="translated">내부 스트림을 나타내는 스트림 개체입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.IO.Compression.GZipStream.BaseStream">
          <source>The underlying stream is closed.</source>
          <target state="translated">내부 스트림이 닫혀 있는 경우</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The byte offset in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which to begin reading data from the stream.</source>
          <target state="translated">스트림에서 데이터를 읽기 시작할 <bpt id="p1">&lt;c&gt;</bpt>배열<ept id="p1">&lt;/c&gt;</ept>의 바이트 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The maximum number of bytes to read.</source>
          <target state="translated">읽을 최대 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous read operation.</source>
          <target state="translated">비동기 읽기 작업을 시작합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>(Consider using the <ph id="ph1">&lt;see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> method instead.)</source>
          <target state="translated">(대신 <ph id="ph1">&lt;see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> 메서드를 사용하는 것이 좋습니다.)</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An object that represents the asynchronous read operation, which could still be pending.</source>
          <target state="translated">보류 중인 비동기 읽기 작업을 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, you can perform asynchronous read operations by using the <ph id="ph2">&lt;xref:System.IO.Stream.ReadAsync%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">부터는 <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>를 사용 하 여 비동기 읽기 작업을 수행할 수 있습니다는 <ph id="ph2">&lt;xref:System.IO.Stream.ReadAsync%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.BeginRead%2A&gt;</ph> method is still available in <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods.</source>
          <target state="translated">그러나 <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.BeginRead%2A&gt;</ph> 방법은에서 계속 제공 <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> 레거시 코드를 지원 하기 위해 구현할 수 있습니다 비동기 I/O 작업 보다 쉽게 새로운 비동기 메서드를 사용 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>For more information, see .</source>
          <target state="translated">자세한 내용은 다음을 참조하세요.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Pass the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> return value to the <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream.EndRead%2A&gt;</ph> method of the stream to determine how many bytes were read and to release operating system resources used for reading.</source>
          <target state="translated">전달 된 <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> 반환 값을는 <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream.EndRead%2A&gt;</ph> 읽은 바이트 수를 확인 하 고 읽는 데 사용 된 운영 체제 리소스를 해제 하는 스트림의 메서드가 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>You can do this either by using the same code that called <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.BeginRead%2A&gt;</ph> or in a callback passed to <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream.BeginRead%2A&gt;</ph>.</source>
          <target state="translated">이렇게 하려면 호출 하는 동일한 코드를 사용 하 여 <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.BeginRead%2A&gt;</ph> 에 전달 된 콜백에서 <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream.BeginRead%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The current position in the stream is updated when the asynchronous read or write is issued, not when the I/O operation completes.</source>
          <target state="translated">비동기 읽기 또는 쓰기 실행 되는 I/O 작업이 완료 될 때가 아니라 스트림 내의 현재 위치 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Multiple simultaneous asynchronous requests render the request completion order uncertain.</source>
          <target state="translated">여러 개의 비동기 요청 렌더링 요청 완료 순서 불확실 합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.CanRead%2A&gt;</ph> property to determine whether the current <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> object supports reading.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.CanRead%2A&gt;</ph> 속성을 확인 하는지 여부를 현재 <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> 개체가 읽기를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.BeginRead%2A&gt;</ph>.</source>
          <target state="translated">예외가 즉시 throw 되는 스트림이 닫혀 있거나를 잘못 된 인수를 전달 하는 경우 <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.BeginRead%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Errors that occur during an asynchronous read request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.EndRead%2A&gt;</ph>.</source>
          <target state="translated">I/O 요청 중의 디스크 오류와 같은 비동기 읽기 요청 하는 동안 발생 하는 오류는 스레드 풀 스레드에서 발생 하 고 호출 시 예외를 throw <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.EndRead%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> class to compress and decompress a file.</source>
          <target state="translated">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> 클래스를 압축 하 고 파일 압축을 해제 합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The method tried to  read asynchronously past the end of the stream, or a disk error occurred.</source>
          <target state="translated">메서드가 스트림의 끝을 지나 비동기 읽기를 시도했거나 디스크 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">하나 이상의 인수가 잘못된 경우</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Methods were called after the stream was closed.</source>
          <target state="translated">스트림이 닫힌 후에 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The current <ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph> implementation does not support the read operation.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph> 구현이 읽기 작업을 지원하지 않는 경우</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>A read operation cannot be performed because the stream is closed.</source>
          <target state="translated">스트림이 닫혀 있어서 읽기 작업을 수행할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The byte offset in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which to begin writing.</source>
          <target state="translated">쓰기를 시작할 <bpt id="p1">&lt;c&gt;</bpt>배열<ept id="p1">&lt;/c&gt;</ept>의 바이트 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">쓸 최대 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous write operation.</source>
          <target state="translated">비동기 쓰기 작업을 시작합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>(Consider using the <ph id="ph1">&lt;see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> method instead.)</source>
          <target state="translated">(대신 <ph id="ph1">&lt;see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> 메서드를 사용하는 것이 좋습니다.)</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An  object that represents the asynchronous write operation, which could still be pending.</source>
          <target state="translated">보류 중인 비동기 쓰기 작업을 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, you can perform asynchronous write operations by using the <ph id="ph2">&lt;xref:System.IO.Stream.WriteAsync%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">부터는 <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>를 사용 하 여 비동기 쓰기 작업을 수행할 수 있습니다는 <ph id="ph2">&lt;xref:System.IO.Stream.WriteAsync%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.BeginWrite%2A&gt;</ph> method is still available in <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods.</source>
          <target state="translated">그러나 <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.BeginWrite%2A&gt;</ph> 방법은에서 계속 제공 <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> 레거시 코드를 지원 하기 위해 구현할 수 있습니다 비동기 I/O 작업 보다 쉽게 새로운 비동기 메서드를 사용 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>For more information, see .</source>
          <target state="translated">자세한 내용은 다음을 참조하세요.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.BeginWrite%2A&gt;</ph> method starts an asynchronous write operation to a <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> stream object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.BeginWrite%2A&gt;</ph> 에 비동기 쓰기 작업을 시작 하는 메서드는 <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> 스트림 개체입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>You must create a callback method that implements the <ph id="ph1">&lt;xref:System.AsyncCallback&gt;</ph> delegate and pass its name to the <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream.BeginWrite%2A&gt;</ph> method.</source>
          <target state="translated">구현 하는 콜백 메서드를 만들어야 합니다는 <ph id="ph1">&lt;xref:System.AsyncCallback&gt;</ph> 대리자를 전달 하 고 이름을 <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream.BeginWrite%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The underlying stream is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">내부 스트림이 <ph id="ph1">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The underlying stream is closed.</source>
          <target state="translated">내부 스트림이 닫혀 있는 경우</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="P:System.IO.Compression.GZipStream.CanRead">
          <source>Gets a value indicating whether the stream supports reading while decompressing a file.</source>
          <target state="translated">파일의 압축을 푸는 동안 스트림을 읽을 수 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Compression.GZipStream.CanRead">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> value is <ph id="ph3">&lt;see langword="Decompress," /&gt;</ph> and the underlying stream supports reading and is not closed; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> 값이 <ph id="ph3">&lt;see langword="Decompress," /&gt;</ph>이고 내부 스트림이 읽기를 지원하며 닫혀 있지 않으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Compression.GZipStream.CanRead">
          <source>When you inherit from <ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph>, you must override the following members: <ph id="ph2">&lt;see cref="P:System.IO.Compression.GZipStream.CanSeek" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.IO.Compression.GZipStream.CanWrite" /&gt;</ph>, and <ph id="ph4">&lt;see cref="P:System.IO.Compression.GZipStream.CanRead" /&gt;</ph>.</source>
          <target state="translated">상속 하는 경우 <ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph>, 멤버를 재정의 해야 합니다: <ph id="ph2">&lt;see cref="P:System.IO.Compression.GZipStream.CanSeek" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.IO.Compression.GZipStream.CanWrite" /&gt;</ph>, 및 <ph id="ph4">&lt;see cref="P:System.IO.Compression.GZipStream.CanRead" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="P:System.IO.Compression.GZipStream.CanSeek">
          <source>Gets a value indicating whether the stream supports seeking.</source>
          <target state="translated">스트림이 검색을 지원하는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Compression.GZipStream.CanSeek">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> in all cases.</source>
          <target state="translated">모든 경우에 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Compression.GZipStream.CanSeek">
          <source>When you inherit from <ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph>, you must override the following members: <ph id="ph2">&lt;see cref="P:System.IO.Compression.GZipStream.CanSeek" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.IO.Compression.GZipStream.CanWrite" /&gt;</ph>, and <ph id="ph4">&lt;see cref="P:System.IO.Compression.GZipStream.CanRead" /&gt;</ph>.</source>
          <target state="translated">상속 하는 경우 <ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph>, 멤버를 재정의 해야 합니다: <ph id="ph2">&lt;see cref="P:System.IO.Compression.GZipStream.CanSeek" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.IO.Compression.GZipStream.CanWrite" /&gt;</ph>, 및 <ph id="ph4">&lt;see cref="P:System.IO.Compression.GZipStream.CanRead" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="P:System.IO.Compression.GZipStream.CanWrite">
          <source>Gets a value indicating whether the stream supports writing.</source>
          <target state="translated">스트림이 쓰기를 지원하는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Compression.GZipStream.CanWrite">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> value is <ph id="ph3">&lt;see langword="Compress" /&gt;</ph>, and the underlying stream supports writing and is not closed; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> 값이 <ph id="ph3">&lt;see langword="Compress" /&gt;</ph>이고 내부 스트림이 쓰기를 지원하며 닫혀 있지 않으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 이외의 경우는 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Compression.GZipStream.CanWrite">
          <source>When you inherit from <ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph>, you must override the following members: <ph id="ph2">&lt;see cref="P:System.IO.Compression.GZipStream.CanSeek" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.IO.Compression.GZipStream.CanWrite" /&gt;</ph>, and <ph id="ph4">&lt;see cref="P:System.IO.Compression.GZipStream.CanRead" /&gt;</ph>.</source>
          <target state="translated">상속 하는 경우 <ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph>, 멤버를 재정의 해야 합니다: <ph id="ph2">&lt;see cref="P:System.IO.Compression.GZipStream.CanSeek" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.IO.Compression.GZipStream.CanWrite" /&gt;</ph>, 및 <ph id="ph4">&lt;see cref="P:System.IO.Compression.GZipStream.CanRead" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>로 설정하고, 관리되지 않는 리소스만 해제하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph>에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">이 메서드는 public <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> 메서드 및 <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> invokes the protected <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream.Dispose%2A&gt;</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> 보호 된 호출 <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream.Dispose%2A&gt;</ph> 메서드는 <ph id="ph3">`disposing`</ph> 매개 변수 설정 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream.Dispose%2A&gt;</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 호출 <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream.Dispose%2A&gt;</ph> 와 <ph id="ph3">`disposing`</ph> 로 설정 <ph id="ph4">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> references.</source>
          <target state="translated"><ph id="ph1">`disposing`</ph> 매개 변수가 <ph id="ph2">`true`</ph>인 경우 이 메서드는 이 <ph id="ph3">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph>에서 참조하는 관리 개체가 보유하고 있는 리소스를 모두 해제합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> method of each referenced object.</source>
          <target state="translated">이 메서드는 참조되는 각 개체의 <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph>는 다른 개체에서 여러 번 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.IO.Compression.GZipStream.Dispose(System.Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Compression.GZipStream.Dispose(System.Boolean)" /&gt;</ph>를 재정의할 때 이전 <ph id="ph2">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph> 호출에서 삭제된 개체를 참조하지 않도록 주의하십시오.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see cref="M:System.IO.Compression.GZipStream.Dispose(System.Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">구현 하는 방법에 대 한 자세한 내용은 <ph id="ph1">&lt;see cref="M:System.IO.Compression.GZipStream.Dispose(System.Boolean)" /&gt;</ph>, 참조 <bpt id="p1">[</bpt>Dispose 메서드를 구현<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">에 대 한 자세한 내용은 <ph id="ph1">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, 참조 <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.EndRead(System.IAsyncResult)">
          <source>Waits for the pending asynchronous read to complete.</source>
          <target state="translated">보류 중인 비동기 읽기가 완료되기를 기다립니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.EndRead(System.IAsyncResult)">
          <source>(Consider using the <ph id="ph1">&lt;see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> method instead.)</source>
          <target state="translated">(대신 <ph id="ph1">&lt;see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> 메서드를 사용하는 것이 좋습니다.)</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.EndRead(System.IAsyncResult)">
          <source>The number of bytes read from the stream, between 0 (zero) and the number of bytes you requested.</source>
          <target state="translated">0과 요청한 바이트 수 사이의 스트림에서 읽은 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.EndRead(System.IAsyncResult)">
          <source><ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph> returns 0 only at the end of the stream; otherwise, it blocks until at least one byte is available.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph>은 스트림의 끝에서만 0을 반환하며, 그러지 않으면 1바이트 이상을 사용할 수 있을 때까지 차단됩니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.EndRead(System.IAsyncResult)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, you can perform asynchronous read operations by using the <ph id="ph2">&lt;xref:System.IO.Stream.ReadAsync%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">부터는 <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>를 사용 하 여 비동기 읽기 작업을 수행할 수 있습니다는 <ph id="ph2">&lt;xref:System.IO.Stream.ReadAsync%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.EndRead(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.EndRead%2A&gt;</ph> method is still available in <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods.</source>
          <target state="translated">그러나 <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.EndRead%2A&gt;</ph> 방법은에서 계속 제공 <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> 레거시 코드를 지원 하기 위해 구현할 수 있습니다 비동기 I/O 작업 보다 쉽게 새로운 비동기 메서드를 사용 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.EndRead(System.IAsyncResult)">
          <source>For more information, see .</source>
          <target state="translated">자세한 내용은 다음을 참조하세요.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.EndRead(System.IAsyncResult)">
          <source>Call this method to determine how many bytes were read from the stream.</source>
          <target state="translated">스트림에서 읽을 바이트 수를 확인 하려면이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.EndRead(System.IAsyncResult)">
          <source>This method can be called once to return the amount of bytes read between calls to <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.BeginRead%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream.EndRead%2A&gt;</ph>.</source>
          <target state="translated">호출 하는 사이 읽은 바이트 수를 반환 해야이 메서드를 한 번 호출 <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.BeginRead%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream.EndRead%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.EndRead(System.IAsyncResult)">
          <source>This method blocks until the I/O operation has completed.</source>
          <target state="translated">이 메서드는 I/O 작업이 완료될 때까지 차단됩니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.EndRead(System.IAsyncResult)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> class to compress and decompress a file.</source>
          <target state="translated">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> 클래스를 압축 하 고 파일 압축을 해제 합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.EndRead(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.EndRead(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> did not originate from a <ph id="ph2">&lt;see cref="M:System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph> method on the current stream.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph>가 현재 스트림의 <ph id="ph2">&lt;see cref="M:System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph> 메서드에서 시작되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.EndRead(System.IAsyncResult)">
          <source>The end operation cannot be performed because the stream is closed.</source>
          <target state="translated">스트림이 닫혀 있어서 종료 작업을 수행할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.EndWrite(System.IAsyncResult)">
          <source>Handles the end of an asynchronous write operation.</source>
          <target state="translated">비동기 쓰기 작업의 끝을 처리합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.EndWrite(System.IAsyncResult)">
          <source>(Consider using the <ph id="ph1">&lt;see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> method instead.)</source>
          <target state="translated">(대신 <ph id="ph1">&lt;see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> 메서드를 사용하는 것이 좋습니다.)</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.EndWrite(System.IAsyncResult)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, you can perform asynchronous write operations by using the <ph id="ph2">&lt;xref:System.IO.Stream.WriteAsync%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">부터는 <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>를 사용 하 여 비동기 쓰기 작업을 수행할 수 있습니다는 <ph id="ph2">&lt;xref:System.IO.Stream.WriteAsync%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.EndWrite(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.EndWrite%2A&gt;</ph> method is still available in <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods.</source>
          <target state="translated">그러나 <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.EndWrite%2A&gt;</ph> 방법은에서 계속 제공 <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> 레거시 코드를 지원 하기 위해 구현할 수 있습니다 비동기 I/O 작업 보다 쉽게 새로운 비동기 메서드를 사용 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.EndWrite(System.IAsyncResult)">
          <source>For more information, see .</source>
          <target state="translated">자세한 내용은 다음을 참조하세요.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.EndWrite(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.EndWrite%2A&gt;</ph> method completes the asynchronous write operation started in the <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream.BeginWrite%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.EndWrite%2A&gt;</ph> 시작 비동기 쓰기 작업을 완료 하는 메서드는 <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream.BeginWrite%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.EndWrite(System.IAsyncResult)">
          <source>The underlying stream is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">내부 스트림이 <ph id="ph1">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.EndWrite(System.IAsyncResult)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.EndWrite(System.IAsyncResult)">
          <source>The underlying stream is closed.</source>
          <target state="translated">내부 스트림이 닫혀 있는 경우</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Flush">
          <source>The current implementation of this method has no functionality.</source>
          <target state="translated">이 메서드의 현재 클래스에는 기능이 없습니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.Flush">
          <source>The current implementation of this method does not flush the internal buffer.</source>
          <target state="translated">이 메서드는 현재 구현에서 내부 버퍼를 플러시하지 않습니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.Flush">
          <source>The internal buffer is flushed when the object is disposed.</source>
          <target state="translated">내부 버퍼는 개체가 삭제 되 면 플러시됩니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Flush">
          <source>The stream is closed.</source>
          <target state="translated">스트림이 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="P:System.IO.Compression.GZipStream.Length">
          <source>This property is not supported and always throws a <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">이 속성은 지원되지 않으며 항상 <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>을 throw합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Compression.GZipStream.Length">
          <source>A long value.</source>
          <target state="translated">long 값입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="P:System.IO.Compression.GZipStream.Length">
          <source>This property is not supported on this stream.</source>
          <target state="translated">이 스트림에 이 속성이 지원되지 않는 경우</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="P:System.IO.Compression.GZipStream.Position">
          <source>This property is not supported and always throws a <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">이 속성은 지원되지 않으며 항상 <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>을 throw합니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Compression.GZipStream.Position">
          <source>A long value.</source>
          <target state="translated">long 값입니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="P:System.IO.Compression.GZipStream.Position">
          <source>This property is not supported on this stream.</source>
          <target state="translated">이 스트림에 이 속성이 지원되지 않는 경우</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The array used to store decompressed bytes.</source>
          <target state="translated">압축이 풀린 바이트를 저장하는 데 사용되는 배열입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The byte offset in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which the read bytes will be placed.</source>
          <target state="translated">읽기 바이트를 넣을 <bpt id="p1">&lt;c&gt;</bpt>배열<ept id="p1">&lt;/c&gt;</ept>의 바이트 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of decompressed bytes to read.</source>
          <target state="translated">읽을 최대 압축 풀린 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Reads a number of decompressed bytes into the specified byte array.</source>
          <target state="translated">압축이 풀린 바이트 수를 지정된 바이트 배열로 읽어 들입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes that were decompressed into the byte array.</source>
          <target state="translated">바이트 배열에 압축이 풀린 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>If the end of the stream has been reached, zero or the number of bytes read is returned.</source>
          <target state="translated">스트림의 끝에 도달한 경우에는 0 또는 읽은 바이트 수가 반환됩니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>If data is found in an invalid format, an <ph id="ph1">&lt;xref:System.IO.InvalidDataException&gt;</ph> is thrown as one of the last operations.</source>
          <target state="translated">데이터 형식이 잘못에서 발견 되 면는 <ph id="ph1">&lt;xref:System.IO.InvalidDataException&gt;</ph> 지난 작업 중 하나로 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>A cyclic redundancy check (CRC) is performed as one of the last operations of this method.</source>
          <target state="translated">순환 중복 검사 (CRC)는이 방법의 마지막 작업 중 하나로 수행 됩니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The following example shows how to compress and decompress bytes by using the <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.Read%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream.Write%2A&gt;</ph> methods.</source>
          <target state="translated">다음 예제에서는 압축 하거나 압축을 사용 하 여 바이트 압축을 해제 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.Read%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream.Write%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> value was <ph id="ph2">&lt;see langword="Compress" /&gt;</ph> when the object was created.</source>
          <target state="translated">개체를 만들 때 <ph id="ph1">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="Compress" /&gt;</ph>였던 경우</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The underlying stream does not support reading.</source>
          <target state="translated">내부 스트림이 읽기를 지원하지 않는 경우</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>가 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> length minus the index starting point is less than <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 길이에서 인덱스 시작 위치를 뺀 값이 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>보다 작은 경우</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The data is in an invalid format.</source>
          <target state="translated">데이터의 형식이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The stream is closed.</source>
          <target state="translated">스트림이 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>The location in the stream.</source>
          <target state="translated">스트림 내의 위치입니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.IO.SeekOrigin" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.SeekOrigin" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>This property is not supported and always throws a <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">이 속성은 지원되지 않으며 항상 <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>을 throw합니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>A long value.</source>
          <target state="translated">long 값입니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>This property is not supported on this stream.</source>
          <target state="translated">이 스트림에 이 속성이 지원되지 않는 경우</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.SetLength(System.Int64)">
          <source>The length of the stream.</source>
          <target state="translated">스트림의 길이입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.SetLength(System.Int64)">
          <source>This property is not supported and always throws a <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">이 속성은 지원되지 않으며 항상 <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>을 throw합니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.SetLength(System.Int64)">
          <source>This property is not supported on this stream.</source>
          <target state="translated">이 스트림에 이 속성이 지원되지 않는 경우</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer that contains the data to compress.</source>
          <target state="translated">압축할 데이터가 들어 있는 버퍼입니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The byte offset in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> from which the bytes will be read.</source>
          <target state="translated">바이트를 읽어올 <bpt id="p1">&lt;c&gt;</bpt>배열<ept id="p1">&lt;/c&gt;</ept>의 바이트 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">쓸 최대 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Writes compressed bytes to the underlying stream from the specified byte array.</source>
          <target state="translated">지정된 바이트 배열에서 압축된 바이트를 내부 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The write operation might not occur immediately but is buffered until the buffer size is reached or until the <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.Flush%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.IO.Stream.Close%2A&gt;</ph> method is called.</source>
          <target state="translated">쓰기 작업 즉시 발생 하지 않을 수 있지만 버퍼 크기에 도달할 때까지 또는 될 때까지 버퍼링 되는 <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.Flush%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.IO.Stream.Close%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The following example shows how to compress and decompress bytes by using the <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.Read%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream.Write%2A&gt;</ph> methods.</source>
          <target state="translated">다음 예제에서는 압축 하거나 압축을 사용 하 여 바이트 압축을 해제 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.Read%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream.Write%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The write operation cannot be performed because the stream is closed.</source>
          <target state="translated">스트림이 닫혀 있어서 쓰기 작업을 수행할 수 없는 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>