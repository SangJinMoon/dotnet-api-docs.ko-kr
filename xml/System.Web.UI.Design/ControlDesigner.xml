<Type Name="ControlDesigner" FullName="System.Web.UI.Design.ControlDesigner">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8c5c896260ea14833069ad421931890bd2df308f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30591307" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ControlDesigner : System.Web.UI.Design.HtmlControlDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ControlDesigner extends System.Web.UI.Design.HtmlControlDesigner" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ControlDesigner" />
  <TypeSignature Language="VB.NET" Value="Public Class ControlDesigner&#xA;Inherits HtmlControlDesigner" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlDesigner : System::Web::UI::Design::HtmlControlDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.HtmlControlDesigner</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>웹 서버 컨트롤의 디자인 모드 동작을 확장하기 위한 기본 컨트롤 디자이너 클래스를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ControlDesigner> 클래스에서 상속 되며, 고와 같은 디자인 호스트에서 웹 서버 컨트롤에 대 한 디자인 타임 지원을 제공 하기 위해 확장 될 수 있는 기본 컨트롤 디자이너 클래스를 제공 [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]합니다.  
  
 디자인 타임 렌더링을 사용 하기 위한 개체 모델은 단순화 된 개체 모델에 대 한 액세스를 제공 하는 다음 새 기본 클래스에서 이전 버전에 비해 향상 되었습니다.  
  
-   <xref:System.Web.UI.Design.ControlDesigner>을 새로 만들었거나, 없음 되지만 크게 향상 되었습니다.  
  
-   <xref:System.Web.UI.Design.ContainerControlDesigner>.  
  
-   <xref:System.Web.UI.Design.WebControls.CompositeControlDesigner>.  
  
## <a name="automatic-formatting"></a>자동 형식 지정  
 다양 한 사용자 지정 웹 서버 컨트롤에 복잡 한 스타일 변경 내용을 적용 하는 페이지 개발자의 프로세스를 간소화할 수 있는 자동 및 미리 정의 된 형식 만들 수 있습니다. 예를 들어는 <xref:System.Web.UI.Design.WebControls.TableDesigner> 컨트롤에서 파생 되는 <xref:System.Web.UI.Design.ControlDesigner> 클래스를 선택할 수 있는 다양 한 자동 서식을 제공 합니다. 구현 하 고 사용자 지정 컨트롤에서 자동 서식 제공, 다음과 같은 기능을 사용 합니다.  
  
-   <xref:System.Web.UI.Design.ControlDesigner.AutoFormats%2A> 속성  
  
-   <xref:System.Web.UI.Design.ControlDesigner.OnAutoFormatApplied%2A> 메서드  
  
-   <xref:System.Web.UI.Design.DesignerAutoFormat> 클래스  
  
-   <xref:System.Web.UI.Design.DesignerAutoFormatStyle> 클래스  
  
## <a name="action-lists-smart-tags"></a>작업 목록 (스마트 태그)  
 작업 목록은 되는 컨트롤을 사용 하는 페이지 개발자가 디자인 타임 사용자 인터페이스 (UI)에서 수행할 수 있는 중요 한 또는 널리 사용 되는 작업 메뉴와 같은 [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]합니다. 예를 들어 사용자 컨트롤의 디자인 타임 뷰에서 사용할 수 있는 작업의 메뉴를 제공할 수 있습니다. 이 컨트롤을 자동으로 서식 지정 하는 태스크가 포함 됩니다. 작업 목록에 대해 알아보려면 다음 기능으로 시작 합니다.  
  
-   <xref:System.Web.UI.Design.ControlDesigner.ActionLists%2A> 속성  
  
-   <xref:System.ComponentModel.Design.DesignerActionList> 클래스  
  
-   <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> 메서드  
  
-   <xref:System.ComponentModel.Design.DesignerActionListCollection> 클래스  
  
-   <xref:System.ComponentModel.Design.DesignerActionMethodItem> 클래스  
  
-   <xref:System.ComponentModel.Design.DesignerActionPropertyItem> 클래스  
  
## <a name="control-designer-regions"></a>컨트롤 디자이너 영역  
 영역은 웹 서버 컨트롤의 디자인 타임 뷰에서 편집 가능한 영역입니다. 이 기능은 WYSIWYG와 유사한 디자인 타임에 템플릿 콘텐츠, 내부 컨트롤 및 속성 편집을 제공 합니다. 컨트롤 디자이너 영역으로 컨트롤을 만들 했거나 영역으로 컨트롤을 끌어다 도구 상자를 사용할 수 있습니다. 지역의 다음 기능을 통해 관리 됩니다.  
  
-   <xref:System.Web.UI.Design.ControlDesigner.OnClick%2A> 메서드  
  
-   <xref:System.Web.UI.Design.DesignerRegion> 클래스  
  
-   <xref:System.Web.UI.Design.EditableDesignerRegion> 클래스  
  
-   <xref:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent%2A> 메서드  
  
-   <xref:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent%2A> 메서드  
  
## <a name="templates"></a>템플릿  
 와 같은 템플릿 기반 컨트롤의 디자인 타임 편집에 대 한 UI를 만들기 위한 모델은 <xref:System.Web.UI.WebControls.GridView> 제어 하 고, 이전 버전에서 크게 향상 되었습니다. 해당 컨트롤의 다양 한 부분에 대 한 템플릿을 포함 하는 복잡 한 사용자 지정 컨트롤을 만들 수 있습니다. 있으며 사용자 지정 컨트롤 디자이너에는 다음과 같은 기능을 사용 하 여 템플릿을 수정 하는 페이지 개발자 수 있습니다:  
  
-   <xref:System.Web.UI.Design.ControlDesigner.TemplateGroups%2A> 속성  
  
-   <xref:System.Web.UI.Design.ControlDesigner.InTemplateMode%2A> 속성  
  
-   <xref:System.Web.UI.Design.TemplateGroup> 클래스  
  
## <a name="design-time-rendering"></a>디자인 타임 렌더링  
 <xref:System.Web.UI.Design.ControlDesigner> 클래스에는 웹 서버 컨트롤의 디자인 타임 렌더링을 지 원하는 다음과 같은 메서드가 있습니다. 대부분의 이러한 메서드는 이전 버전에서와 동일합니다.  
  
-   <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> 메서드  
  
-   <xref:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml%2A> 메서드  
  
-   <xref:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml%2A> 메서드  
  
-   <xref:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml%2A> 메서드  
  
-   <xref:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml%2A> 메서드  
  
   
  
## Examples  
 다음 코드 예제에는에서 파생 되는 간단한 디자이너 클래스를 만드는 방법을 보여 줍니다는 <xref:System.Web.UI.Design.ControlDesigner> 클래스입니다. 이 컨트롤 디자이너에는 사용자 지정 지원 `TextControl` 클래스 및 디자인 타임에 컨트롤의 텍스트 크기를 변경 하는 명령을 제공 합니다. 컨트롤 디자이너에서 지정 하 여 컨트롤 디자이너는 컨트롤에 연결 된 한 <xref:System.ComponentModel.DesignerAttribute> 개체 선언에는 `TextControl` 클래스입니다. HTML 태그 컨트롤 디자이너에서 속성 변경 내용을를 ° ß는 `ToggleTextSize` 사용자 지정의 메서드 `ActionList` 클래스입니다.  
  
 이 예제를 실행 하려면 System.Design.dll 어셈블리에 대 한 참조를 추가 하 고 코드를 컴파일하십시오.  
  
 [!code-csharp[ControlDesignerSample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlDesignerSample/cs/TextControlDesigner.cs#1)]
 [!code-vb[ControlDesignerSample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlDesignerSample/vb/TextControlDesigner.vb#1)]  
[!code-aspx-csharp[ControlDesignerSample#8](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlDesignerSample/cs/TextControlDesigner.aspx#8)]
[!code-aspx-vb[ControlDesignerSample#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlDesignerSample/vb/TextControlDesigner.aspx#8)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.TemplateGroup" />
    <altmember cref="T:System.Web.UI.Design.DesignerAutoFormat" />
    <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
    <altmember cref="T:System.Web.UI.Design.DesignerRegion" />
    <altmember cref="T:System.Web.UI.Design.ContainerControlDesigner" />
    <altmember cref="T:System.Web.UI.Design.WebControls.CompositeControlDesigner" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlDesigner();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.Design.ControlDesigner" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionLists">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.Design.DesignerActionListCollection ActionLists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerActionListCollection ActionLists" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.ActionLists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ActionLists As DesignerActionListCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::Design::DesignerActionListCollection ^ ActionLists { System::ComponentModel::Design::DesignerActionListCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerActionListCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤 디자이너에 대한 작업 목록 컬렉션을 가져옵니다.</summary>
        <value>컨트롤 디자이너에 대한 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 항목을 포함하는 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 간단한 복합 컨트롤을 만드는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.Label> 및 <xref:System.Web.UI.WebControls.TextBox> 컨트롤 속성을 두 내부 컨트롤의 텍스트 속성을 설정 하 고 또한는 <xref:System.Web.UI.WebControls.WebControl.Width%2A> 및 <xref:System.Web.UI.WebControls.WebControl.BackColor%2A> 속성은 <xref:System.Web.UI.WebControls.TextBox> 제어 합니다. 연결 된 컨트롤 디자이너 클래스는 세 개를 만들며 <xref:System.ComponentModel.Design.DesignerActionMethodItem> 명령, 각 컨트롤을 두 가지 속성을 설정 하 고 디자인 호스트의 실행 취소 기능으로 롤백할 수 있습니다.  
  
 [!code-csharp[DesignerInvokeTransactedChange#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerInvokeTransactedChange/CS/InvokeTransactedChangeSample.cs#1)]
 [!code-vb[DesignerInvokeTransactedChange#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerInvokeTransactedChange/VB/InvokeTransactedChangeSample.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>작업 목록 메뉴에 디자인 보기에서 사용자 지정 컨트롤을 추가 하려면 사용자 지정 컨트롤 디자이너 재정의 해야 합니다는 <see cref="P:System.Web.UI.Design.ControlDesigner.ActionLists" /> 에서 파생 되는 사용자 지정 컨트롤 클래스를 반환 하는 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 클래스입니다.</para>
        </block>
        <altmember cref="T:System.ComponentModel.Design.DesignerActionListCollection" />
      </Docs>
    </Member>
    <Member MemberName="AllowResize">
      <MemberSignature Language="C#" Value="public virtual bool AllowResize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowResize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.AllowResize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AllowResize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowResize { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>디자인 타임 환경에서 컨트롤의 크기를 조정할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          컨트롤의 크기를 조정할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.Design.ControlDesigner.AllowResize%2A> 사용자 지정 컨트롤 디자이너 클래스의 속성입니다.  
  
 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.Design.ControlDesigner.TemplateGroups%2A> 속성입니다.  
  
 [!code-csharp[DesignerTemplateGroupSample#3](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerTemplateGroupSample/CS/TemplateGroupsSample.cs#3)]
 [!code-vb[DesignerTemplateGroupSample#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerTemplateGroupSample/VB/TemplateGroupsSample.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>사용 된 <see cref="P:System.Web.UI.Design.ControlDesigner.AllowResize" /> 디자인 호스트에서 컨트롤 크기 조정에서 개발자가 페이지를 사용 하지 않도록 설정 하거나 설정 하려면 파생된 클래스에서 속성입니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AutoFormats">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Design.DesignerAutoFormatCollection AutoFormats { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Design.DesignerAutoFormatCollection AutoFormats" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.AutoFormats" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AutoFormats As DesignerAutoFormatCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::Design::DesignerAutoFormatCollection ^ AutoFormats { System::Web::UI::Design::DesignerAutoFormatCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.DesignerAutoFormatCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>디자인 타임에 연결된 컨트롤에 대한 **자동 서식** 대화 상자에 표시할 미리 정의된 자동 서식 지정 구성표의 컬렉션을 가져옵니다.</summary>
        <value>컨트롤에 미리 정의된 구성표를 포함하는 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 전체 웹 서버 컨트롤 뿐만 아니라 컨트롤을 포함 하지만 또한 예를 들어, 해당 컨트롤 디자이너 클래스에서 파생 되는 <xref:System.Web.UI.Design.ControlDesigner> 클래스와 형식 지정 클래스에서 파생 되는 <xref:System.Web.UI.Design.DesignerAutoFormat> 클래스입니다. <xref:System.Web.UI.Design.ControlDesigner.AutoFormats%2A> 속성은 컬렉션의 인스턴스는 <xref:System.Web.UI.Design.DesignerAutoFormat> 클래스입니다. 자동 서식의 작업 예제 [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], 참조 <xref:System.Web.UI.WebControls.Calendar>합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 구현 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.Design.ControlDesigner.AutoFormats%2A> 사용자 지정 컨트롤 디자이너에서 속성입니다. 파생된 컨트롤 디자이너 구현 하는 <xref:System.Web.UI.Design.ControlDesigner.AutoFormats%2A> 속성에서 파생 된 사용자 지정 자동 서식의 세 인스턴스를 추가 하 여는 <xref:System.Web.UI.Design.DesignerAutoFormat> 클래스입니다.  
  
 [!code-csharp[DesignerAutoFormat#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerAutoFormat/CS/DesignerAutoFormat.cs#1)]
 [!code-vb[DesignerAutoFormat#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerAutoFormat/VB/DesignerAutoFormat.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>자동 서식 자동으로 노출 하는 컨트롤의 형식에 대 한 목록 및 상황에 맞는 명령을 작업을 가져옵니다. 자동 형식을 사용 하는 경우 사용 된 <see cref="P:System.Web.UI.Design.ControlDesigner.ViewControl" /> 콜백 함수에서 속성을 설정 하는 속성입니다.</para>
        </block>
        <altmember cref="T:System.Web.UI.Design.DesignerAutoFormat" />
        <altmember cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateErrorDesignTimeHtml">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>디자인 타임에 오류 메시지를 표시할 HTML 태그를 만듭니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateErrorDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected string CreateErrorDesignTimeHtml (string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string CreateErrorDesignTimeHtml(string errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateErrorDesignTimeHtml (errorMessage As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ CreateErrorDesignTimeHtml(System::String ^ errorMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="errorMessage">생성된 HTML 태그에 포함할 오류 메시지입니다.</param>
        <summary>디자인 타임에 지정된 오류 메시지를 표시할 HTML 태그를 만듭니다.</summary>
        <returns>지정된 오류 메시지를 포함하는 HTML 태그 문자열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml%2A> 디자인 타임에 컨트롤에 대 한 오류 메시지를 표시 하는 HTML 태그를 만들 메서드. 에 대 한 값 `errorMessage` 디자인 타임에 컨트롤의 사용자에 게 표시 되는 지역화 된 문자열을 지정 합니다.  
  
 <xref:System.Web.UI.Design.ControlDesigner> 클래스에 구현은 <xref:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml%2A> 메서드 다음과 같이 두 개의 행이 있는 테이블을 반환 합니다.  
  
-   첫 번째 행에 대 한 사이트 이름과 형식 이름이 포함 된 <xref:System.ComponentModel.Design.ComponentDesigner.Component%2A> 속성의는 <xref:System.Web.UI.Design.ControlDesigner> 개체입니다.  
  
-   두 번째 행은 입력된 오류 메시지 문자열을 포함합니다.  
  
 연결된 된 예외가 포함 된 오류 메시지에 대 한 HTML 태그를 생성 하려면 사용 된 <xref:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml%28System.String%2CSystem.Exception%29> 오버 로드 합니다. 지역화 된 오류 메시지를 지정 하지 않고 예외에 대 한 HTML 태그를 생성 하려면 사용 된 <xref:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String)" /> 오버 로드는 호출 하는 기능적는 <see cref="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String,System.Exception)" /> 메서드 e로 설정 된 <see langword="null" />합니다.</para>
        </block>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" />
      </Docs>
    </Member>
    <Member MemberName="CreateErrorDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected string CreateErrorDesignTimeHtml (string errorMessage, Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string CreateErrorDesignTimeHtml(string errorMessage, class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateErrorDesignTimeHtml (errorMessage As String, e As Exception) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ CreateErrorDesignTimeHtml(System::String ^ errorMessage, Exception ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorMessage" Type="System.String" />
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="errorMessage">생성된 HTML 문자열에 포함할 오류 메시지입니다.</param>
        <param name="e">생성된 HTML 문자열에 포함할 예외입니다.</param>
        <summary>디자인 타임에 지정된 예외 오류 메시지를 표시할 HTML 태그를 만듭니다.</summary>
        <returns>지정된 <paramref name="errorMessage" />와 <paramref name="e" />를 포함하는 HTML 태그입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml%2A> 메서드는 디자인 타임에 컨트롤에 대 한 오류 및 예외 세부 정보를 표시 하는 데 사용할 수 있는 간단한 HTML 태그를 제공 합니다. 에 대 한 값 `errorMessage` 디자인 타임에 컨트롤의 사용자에 게 표시 되는 지역화 된 문자열을 지정 합니다.  
  
 <xref:System.Web.UI.Design.ControlDesigner> 클래스에 구현은 <xref:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml%2A> 메서드 다음과 같이 두 개의 행이 있는 테이블을 반환 합니다.  
  
-   첫 번째 행에 대 한 사이트 이름과 형식 이름이 포함 된 <xref:System.ComponentModel.Design.ComponentDesigner.Component%2A> 속성의는 <xref:System.Web.UI.Design.ControlDesigner> 개체입니다.  
  
-   입력된 오류 메시지를 포함 하는 두 번째 행 및 <xref:System.Exception.Message%2A> 예외의 문자열입니다.  
  
 예외를 지정 하지 않고 오류 메시지에 대 한 HTML 태그를 생성 하려면 사용 된 <xref:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml%28System.String%29> 오버 로드 합니다. 지역화 된 오류 메시지를 지정 하지 않고 예외에 대 한 HTML 태그를 생성 하려면 사용 된 <xref:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String,System.Exception)" /> 에서 메서드를 호출 해야는 <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetViewRendering" /> 또는 <see cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" /> 메서드 예외가 발생 한 경우.</para>
        </block>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreatePlaceHolderDesignTimeHtml">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>컨트롤의 형식과 ID를 표시하는 간단한 사각형 자리 표시자를 제공합니다.</summary>
        <block subset="none" type="overrides">
          <para>일반적인 디자인 패턴은 연결된 된 컨트롤을 통해 HTML 태그를 가져오고 다음 오류가 발생 하는 경우 호출 하려고 하는 <see cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" /> 메서드. 없는 태그 컨트롤에 의해 반환 되 면 호출 된 <see cref="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml" /> 특정 태그를 제공 하는 재정의 하지 않은 경우 호출 하는 메서드에 <see cref="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml" /> 메서드, 형식 및 컨트롤의 ID에 대 한 정보를 포함 해야 합니다.</para>
        </block>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreatePlaceHolderDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected string CreatePlaceHolderDesignTimeHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string CreatePlaceHolderDesignTimeHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreatePlaceHolderDesignTimeHtml () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ CreatePlaceHolderDesignTimeHtml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>컨트롤의 형식과 ID를 표시하는 간단한 사각형 자리 표시자를 제공합니다.</summary>
        <returns>컨트롤에 대한 기본 정보를 제공하는 디자인 타임 HTML 태그를 포함하는 문자열입니다.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>일반적인 디자인 패턴은 연결된 된 컨트롤을 통해 HTML 태그를 가져오고 다음 오류가 발생 하는 경우 호출 하려고 하는 <see cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" /> 메서드. 없는 태그 컨트롤에 의해 반환 되 면 호출 된 <see cref="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml" /> 특정 태그를 제공 하는 재정의 하지 않은 경우 호출 하는 메서드에 <see cref="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml" /> 메서드, 형식 및 컨트롤의 ID에 대 한 정보를 포함 해야 합니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreatePlaceHolderDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected string CreatePlaceHolderDesignTimeHtml (string instruction);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string CreatePlaceHolderDesignTimeHtml(string instruction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreatePlaceHolderDesignTimeHtml (instruction As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ CreatePlaceHolderDesignTimeHtml(System::String ^ instruction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instruction" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instruction">HTML 출력에 추가할 텍스트와 태그를 포함하는 문자열입니다.</param>
        <summary>컨트롤의 형식과 ID를 표시하는 간단한 사각형 자리 표시자를 제공하고 추가로 지정된 명령이나 정보도 제공합니다.</summary>
        <returns>컨트롤에 대한 정보를 제공하는 디자인 타임 HTML 태그를 포함하는 문자열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> 템플릿 기반 컨트롤 디자이너. 로 전달 된 문자열이 다음는 `instruction` 에 대 한 호출에서 매개 변수는 <xref:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml%2A> 메서드는 디자인 타임 HTML 태그를 제공 합니다.  
  
 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.Design.ControlDesigner.TemplateGroups%2A> 속성입니다.  
  
 [!code-csharp[DesignerTemplateGroupSample#4](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerTemplateGroupSample/CS/TemplateGroupsSample.cs#4)]
 [!code-vb[DesignerTemplateGroupSample#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerTemplateGroupSample/VB/TemplateGroupsSample.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>일반적인 디자인 패턴은 연결된 된 컨트롤을 통해 HTML 태그를 가져오고 다음 오류가 발생 하는 경우 호출 하려고 하는 <see cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" /> 메서드. 없는 태그 컨트롤에 의해 반환 되 면 호출 된 <see cref="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml" /> 특정 태그를 제공 하는 재정의 하지 않은 경우 호출 하는 메서드에 <see cref="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml" /> 메서드, 형식 및 컨트롤의 ID에 대 한 정보를 포함 해야 합니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateViewControl">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.Control CreateViewControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.Control CreateViewControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.CreateViewControl" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateViewControl () As Control" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::Control ^ CreateViewControl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>디자인 화면에서 보거나 렌더링하는 데 사용할 연결된 컨트롤의 복사본을 반환합니다.</summary>
        <returns>웹 서버 컨트롤입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindingsEnabled">
      <MemberSignature Language="C#" Value="protected virtual bool DataBindingsEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DataBindingsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.DataBindingsEnabled" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DataBindingsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool DataBindingsEnabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>연결된 컨트롤의 포함하는 영역에서 데이터 바인딩을 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          컨트롤의 컨테이너가 데이터 바인딩을 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Design.EditableDesignerRegion.SupportsDataBinding" />
      </Docs>
    </Member>
    <Member MemberName="DesignerState">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Design.ControlDesignerState DesignerState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Design.ControlDesignerState DesignerState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.DesignerState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property DesignerState As ControlDesignerState" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::Design::ControlDesignerState ^ DesignerState { System::Web::UI::Design::ControlDesignerState ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ControlDesignerState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>디자인 타임에 연결된 컨트롤에 대한 데이터를 유지하는 데 사용되는 개체를 가져옵니다.</summary>
        <value>
          <see cref="P:System.Web.UI.Design.ControlDesigner.DesignerState" />를 구현하고 <see cref="T:System.Collections.IDictionary" />를 사용하여 디자인 타임에 연결된 컨트롤에 대한 상태 데이터를 유지하는 <see cref="T:System.ComponentModel.Design.IComponentDesignerStateService" /> 속성입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대 한 값은 <xref:System.Web.UI.Design.ControlDesigner.DesignerState%2A> 속성을 사용자 디자인에서 소스 보기로 전환 또는 문서를 다시 로드 하거나 닫았다가 디자인 호스트 하는 경우에 유지 됩니다.  
  
 가져올 수 있으며 개체 값으로 자동으로 유지 IDictionary에서와 마찬가지로 반환된 된 개체의 값을 설정할 수 없습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeElementView">
      <MemberSignature Language="C#" Value="protected object DesignTimeElementView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DesignTimeElementView" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.DesignTimeElementView" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property DesignTimeElementView As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Object ^ DesignTimeElementView { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Error: This property can no longer be referenced, and is included to support existing compiled applications. The design-time element view architecture is no longer used. http://go.microsoft.com/fwlink/?linkid=14202", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤 디자이너의 뷰-컨트롤 개체를 가져옵니다.</summary>
        <value>
          <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Web.UI.Design.ControlDesigner.DesignTimeElementView%2A> 속성은 사용 되지 않습니다 되며 기능을 대체할 기능은 없습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeHtmlRequiresLoadComplete">
      <MemberSignature Language="C#" Value="public virtual bool DesignTimeHtmlRequiresLoadComplete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignTimeHtmlRequiresLoadComplete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.DesignTimeHtmlRequiresLoadComplete" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DesignTimeHtmlRequiresLoadComplete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DesignTimeHtmlRequiresLoadComplete { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is SetViewFlags(ViewFlags.DesignTimeHtmlRequiresLoadComplete, true). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>디자인 호스트가 로드를 완료해야 <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" /> 메서드를 호출할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          로드를 완료해야 <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" /> 메서드를 호출할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 구현에서 <xref:System.Web.UI.Design.ControlDesigner.DesignTimeHtmlRequiresLoadComplete%2A> 속성에서 반환 `false`합니다.  
  
> [!NOTE]
>  <xref:System.Web.UI.Design.ControlDesigner.DesignTimeHtmlRequiresLoadComplete%2A> 속성은 사용되지 않습니다. 사용 하 여는 <xref:System.Web.UI.Design.ControlDesigner.SetViewFlags%2A> 동일한 컨트롤 디자이너 기능에 대 한 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ViewFlags" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.SetViewFlags(System.Web.UI.Design.ViewFlags,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetBounds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetBounds" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBounds () As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetBounds();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>디자인 화면에 표시되는 컨트롤의 경계를 나타내는 사각형의 좌표를 검색합니다.</summary>
        <returns>문서가 아니라 컨트롤에 상대적인 디자인 화면의 컨트롤 경계를 나타내는 <see cref="T:System.Drawing.Rectangle" /> 개체입니다.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Design.IControlDesignerView.GetBounds(System.Web.UI.Design.DesignerRegion)" />
        <altmember cref="M:System.Web.UI.Design.DesignerRegion.GetBounds" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDesignTimeHtml">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>디자인 타임에 컨트롤을 나타내는 데 사용되는 HTML 태그를 검색합니다.</summary>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDesignTimeHtml">
      <MemberSignature Language="C#" Value="public virtual string GetDesignTimeHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetDesignTimeHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDesignTimeHtml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetDesignTimeHtml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>디자인 타임에 컨트롤을 나타내는 데 사용되는 HTML 태그를 검색합니다.</summary>
        <returns>디자인 타임에 컨트롤을 나타낼 HTML 태그입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> 사용자 지정 컨트롤 디자이너. 연결된 된 컨트롤에 대 한 텍스트 속성이 비어 있으면는 <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> 메서드 호출에서 <xref:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml%2A> 메서드. 그렇지 않은 경우는 <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> 메서드가 생성 되 고 하이퍼링크 컨트롤을 렌더링 합니다.  
  
 [!code-csharp[System.Web.UI.Design.ControlDesigner_Example#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.ControlDesigner_Example/CS/SimpleControlDesigner.cs#5)]
 [!code-vb[System.Web.UI.Design.ControlDesigner_Example#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.ControlDesigner_Example/VB/simplecontroldesigner.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>사용자 지정 컨테이너 컨트롤을 만드는 경우 컨트롤 및 모든 자식 컨트롤 여부에 관계 없이 디자인 타임에 렌더링 있는지 확인은 <see cref="P:System.Web.UI.Control.Visible" /> 속성이 <see langword="true" /> 또는 <see langword="false" />합니다.</para>
        </block>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" />
      </Docs>
    </Member>
    <Member MemberName="GetDesignTimeHtml">
      <MemberSignature Language="C#" Value="public virtual string GetDesignTimeHtml (System.Web.UI.Design.DesignerRegionCollection regions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetDesignTimeHtml(class System.Web.UI.Design.DesignerRegionCollection regions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDesignTimeHtml (regions As DesignerRegionCollection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetDesignTimeHtml(System::Web::UI::Design::DesignerRegionCollection ^ regions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regions" Type="System.Web.UI.Design.DesignerRegionCollection" />
      </Parameters>
      <Docs>
        <param name="regions">연결된 컨트롤에 대한 컨트롤 디자이너 영역의 컬렉션입니다.</param>
        <summary>컨트롤을 표시하는 HTML 태그를 가져와서 현재 컨트롤 디자이너 영역을 사용하여 컬렉션을 채웁니다.</summary>
        <returns>모든 컨트롤 디자이너 영역을 포함하여 연결된 컨트롤에 대한 디자인 타임 HTML 태그입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 디자인 호스트 호출은 <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> 디자인 타임 HTML 태그 및 컨트롤의 현재 목록 디자이너 영역을 가져오는 메서드를 합니다. DesignerRegionCollection를 사용 하 여 디자인 호스트 각 편집 가능한 컨트롤 디자이너 영역에 대 한 태그를 요청한 다음 수 있습니다.  
  
 <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> 메서드는 파생 된 컨트롤 디자이너에 대 한와 같이 제공는 <xref:System.Web.UI.Design.WebControls.GridViewDesigner> 호출 하기 전에 지역에 대 한 콘텐츠를 처리 해야 하는 클래스는 <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> 메서드.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하 여 HTML 태그를 만드는 방법을 보여 줍니다는 <xref:System.Web.UI.Design.DesignerRegionCollection> 컬렉션입니다.  
  
 [!code-csharp[SimpleMultiRegionControlDesigner#5](~/samples/snippets/csharp/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/CS/SimpleMultiRegionControlDesigner.cs#5)]
 [!code-vb[SimpleMultiRegionControlDesigner#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/VB/SimpleMultiRegionControlDesigner.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.WebControls.GridViewDesigner" />
      </Docs>
    </Member>
    <Member MemberName="GetDesignTimeResourceProviderFactory">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Design.DesignTimeResourceProviderFactory GetDesignTimeResourceProviderFactory (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.Design.DesignTimeResourceProviderFactory GetDesignTimeResourceProviderFactory(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeResourceProviderFactory(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDesignTimeResourceProviderFactory (serviceProvider As IServiceProvider) As DesignTimeResourceProviderFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::Design::DesignTimeResourceProviderFactory ^ GetDesignTimeResourceProviderFactory(IServiceProvider ^ serviceProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.DesignTimeResourceProviderFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">전역 및 지역 서비스를 검색할 수 있는 <see cref="T:System.IServiceProvider" /> 개체입니다.</param>
        <summary>사이트의 구성 파일에 있는 전역화 설정에 따라 적절한 리소스 공급자 팩터리를 반환합니다.</summary>
        <returns>구성 파일에 <see cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" /> 개체가 정의되어 있으면 해당 개체이고, 그렇지 않으면 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 리소스 공급자 및 구성 파일 (Machine.config 또는 Web.config 파일을 전역 및 로컬 리소스의 system.web/globalization 섹션의 현재 설정에 따라 리소스 writer는 리소스 공급자 팩터리를 만듭니다. ). 전역화 설정이 발견 되 면는 `serviceProvider` 매개 변수를 만드는 데 사용 되는 <xref:System.Web.UI.Design.DesignTimeResourceProviderFactory> 개체 디자인 호스트에 대 한 기본 구현을 사용 하 여 합니다.  
  
 컨트롤 개발자가 일반적으로 재정의 하지 것입니다는 <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeResourceProviderFactory%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" />
        <altmember cref="T:System.Web.Compilation.ResourceProviderFactory" />
        <altmember cref="T:System.Web.Compilation.IResourceProvider" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetEditableDesignerRegionContent">
      <MemberSignature Language="C#" Value="public virtual string GetEditableDesignerRegionContent (System.Web.UI.Design.EditableDesignerRegion region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetEditableDesignerRegionContent(class System.Web.UI.Design.EditableDesignerRegion region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEditableDesignerRegionContent (region As EditableDesignerRegion) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetEditableDesignerRegionContent(System::Web::UI::Design::EditableDesignerRegion ^ region);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Web.UI.Design.EditableDesignerRegion" />
      </Parameters>
      <Docs>
        <param name="region">내용을 가져올 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 개체입니다.</param>
        <summary>연결된 컨트롤의 디자인 타임 뷰에서 편집 가능한 영역의 내용을 반환합니다.</summary>
        <returns>컨트롤 디자이너에서 편집 가능한 영역을 지원하면 영역에 저장된 콘텐츠이고, 지원하지 않으면 빈 문자열("")입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 구현에서 <xref:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent%2A> 빈 문자열을 반환 하는 메서드 ("").  
  
 클래스에서 파생 되는 <xref:System.Web.UI.Design.ControlDesigner> 클래스 디자인 화면에서 편집 영역 기반을 지원할 수 있습니다 및 재정의 <xref:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent%2A> 메서드를 지정된 된 영역에 대 한 콘텐츠를 반환 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 디자인 호스트에 대 한 참조를 가져오고 대 한 참조를 사용 하 여 만들 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.Design.ControlParser> 에 대 한 HTML 태그를 만드는 개체를 `region` 와 해당 내용입니다.  
  
 [!code-csharp[SimpleMultiRegionControlDesigner#6](~/samples/snippets/csharp/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/CS/SimpleMultiRegionControlDesigner.cs#6)]
 [!code-vb[SimpleMultiRegionControlDesigner#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/VB/SimpleMultiRegionControlDesigner.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetEmptyDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected virtual string GetEmptyDesignTimeHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetEmptyDesignTimeHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetEmptyDesignTimeHtml () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetEmptyDesignTimeHtml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>런타임 시 시각적으로 표시되지 않는 웹 서버 컨트롤을 디자인 타임에 나타내는 HTML 태그를 가져옵니다.</summary>
        <returns>시각적으로 표시되지 않는 컨트롤을 디자인 타임에 나타내는 데 사용되는 HTML 태그입니다. 기본값은 구성 요소의 형식 및 ID를 포함하는 사각형입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본적으로는 <xref:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml%2A> 방법은 구성 요소 이름을 포함 하는 문자열을 반환 하는 것입니다. <xref:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml%2A> 의 구현에서 메서드를 호출 해야는 <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> 디자인 타임 HTML 태그에 없는 경우 방법입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> 사용자 지정 컨트롤 디자이너. 경우는 `Text` 연결된 된 컨트롤에 대 한 속성이 비어 있으면는 <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> 메서드 호출 <xref:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml%2A> 메서드. 그렇지 않으면는 <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> 메서드가 생성 되 고 렌더링 된 `Hyperlink` 제어 합니다.  
  
 [!code-csharp[System.Web.UI.Design.ControlDesigner_Example#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.ControlDesigner_Example/CS/SimpleControlDesigner.cs#5)]
 [!code-vb[System.Web.UI.Design.ControlDesigner_Example#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.ControlDesigner_Example/VB/simplecontroldesigner.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" />
        <altmember cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" />
      </Docs>
    </Member>
    <Member MemberName="GetErrorDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected virtual string GetErrorDesignTimeHtml (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetErrorDesignTimeHtml(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetErrorDesignTimeHtml (e As Exception) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetErrorDesignTimeHtml(Exception ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">발생한 예외입니다.</param>
        <summary>지정된 예외에 대한 정보를 제공하는 HTML 태그를 검색합니다.</summary>
        <returns>지정된 예외에 대한 디자인 타임 HTML 태그입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml%2A> 에서 예외가 throw 된 경우 메서드를 일반적으로 호출 된 <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> 메서드.  
  
   
  
## Examples  
 오류가 있을 때 컨트롤 및 호출에 대 한 디자인 타임 HTML 태그를 생성 하는 방법은 다음 코드 예제는 <xref:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml%2A> 메서드.  
  
 [!code-csharp[System.Web.UI.Design.WebControls.LoginDesigner#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginDesigner/CS/LoginDesigner.cs#2)]
 [!code-vb[System.Web.UI.Design.WebControls.LoginDesigner#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginDesigner/VB/LoginDesigner.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>일반적인 디자인 패턴은 연결된 된 컨트롤을 통해 HTML 태그를 가져오고 다음 오류가 발생 하는 경우 호출 하려고 하는 <see cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" /> 메서드. 없는 태그 컨트롤에 의해 반환 되 면 호출 된 <see cref="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml" /> 특정 태그를 제공 하는 재정의 하지 않은 경우 호출 하는 메서드에 <see cref="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml" /> 메서드, 형식 및 컨트롤의 ID에 대 한 정보를 포함 해야 합니다.</para>
        </block>
        <altmember cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" />
        <altmember cref="Overload:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml" />
      </Docs>
    </Member>
    <Member MemberName="GetPersistenceContent">
      <MemberSignature Language="C#" Value="public virtual string GetPersistenceContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPersistenceContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetPersistenceContent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPersistenceContent () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetPersistenceContent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>디자인 타임에 컨트롤의 지속적인 내부 HTML 태그를 검색합니다.</summary>
        <returns>연결된 컨트롤의 지속적인 내부 HTML 태그를 나타내는 문자열입니다. 기본값은 <see langword="null" />입니다.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>재정의 <see cref="M:System.Web.UI.Design.ControlDesigner.GetPersistenceContent" /> 메서드 디자인 호스트에 대 한 내부 콘텐츠 지 속성의 사용자 지정 처리 작업을 제공 합니다.</para>
        </block>
        <altmember cref="T:System.Web.UI.Design.ControlPersister" />
      </Docs>
    </Member>
    <Member MemberName="GetPersistInnerHtml">
      <MemberSignature Language="C#" Value="public virtual string GetPersistInnerHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPersistInnerHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetPersistInnerHtml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPersistInnerHtml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetPersistInnerHtml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is GetPersistenceContent(). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>컨트롤의 지속적인 내부 HTML 태그를 검색합니다.</summary>
        <returns>컨트롤의 지속적인 내부 HTML 태그입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Web.UI.Design.ControlDesigner.GetPersistInnerHtml%2A> 메서드는 사용 되지 않습니다. 사용 하 여는 <xref:System.Web.UI.Design.ControlDesigner.GetPersistenceContent%2A> 동일한 컨트롤 디자이너 기능에 대 한 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.Tag" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetViewRendering">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>연결된 컨트롤의 내용과 영역에 대한 디자인 타임 태그를 포함하는 개체를 검색합니다.</summary>
        <altmember cref="T:System.Web.UI.Design.ViewRendering" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetViewRendering">
      <MemberSignature Language="C#" Value="public System.Web.UI.Design.ViewRendering GetViewRendering ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.Design.ViewRendering GetViewRendering() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetViewRendering" />
      <MemberSignature Language="VB.NET" Value="Public Function GetViewRendering () As ViewRendering" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::Design::ViewRendering ^ GetViewRendering();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ViewRendering</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>연결된 컨트롤의 내용과 영역에 대한 디자인 타임 태그를 포함하는 개체를 검색합니다.</summary>
        <returns>
          <see cref="T:System.Web.UI.Design.ViewRendering" /> 개체입니다.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.Design.ViewRendering" />
      </Docs>
    </Member>
    <Member MemberName="GetViewRendering">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Design.ViewRendering GetViewRendering (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.Design.ViewRendering GetViewRendering(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetViewRendering(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::Design::ViewRendering ^ GetViewRendering(System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ViewRendering</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">
          <see cref="T:System.Web.UI.Control" /> 개체입니다.</param>
        <summary>지정된 컨트롤의 내용과 영역에 대한 디자인 타임 태그를 포함하는 개체를 검색합니다.</summary>
        <returns>
          <see cref="T:System.Web.UI.Design.ViewRendering" /> 개체입니다.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.Design.ViewRendering" />
      </Docs>
    </Member>
    <Member MemberName="GetViewRendering">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Design.ViewRendering GetViewRendering (System.Web.UI.Design.ControlDesigner designer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.Design.ViewRendering GetViewRendering(class System.Web.UI.Design.ControlDesigner designer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetViewRendering(System.Web.UI.Design.ControlDesigner)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetViewRendering (designer As ControlDesigner) As ViewRendering" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::Design::ViewRendering ^ GetViewRendering(System::Web::UI::Design::ControlDesigner ^ designer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ViewRendering</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="designer" Type="System.Web.UI.Design.ControlDesigner" />
      </Parameters>
      <Docs>
        <param name="designer">
          <see cref="T:System.Web.UI.Design.ControlDesigner" />에서 파생되는 컨트롤 디자이너입니다.</param>
        <summary>지정된 컨트롤 디자이너에 대한 연결된 컨트롤의 내용과 영역에 대한 디자인 타임 태그를 포함하는 개체를 검색합니다.</summary>
        <returns>
          <see cref="T:System.Web.UI.Design.ViewRendering" /> 개체입니다.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.Design.ViewRendering" />
      </Docs>
    </Member>
    <Member MemberName="HidePropertiesInTemplateMode">
      <MemberSignature Language="C#" Value="protected internal virtual bool HidePropertiesInTemplateMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HidePropertiesInTemplateMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.HidePropertiesInTemplateMode" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property HidePropertiesInTemplateMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HidePropertiesInTemplateMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤이 템플릿 모드에 있을 때 연결된 컨트롤의 속성이 숨겨지는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          컨트롤이 템플릿 모드에 있을 때 연결된 컨트롤의 속성이 숨겨지면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ID 속성은 숨겨지지 않습니다. <xref:System.Web.UI.Design.ControlDesigner.PreFilterProperties%2A> 메서드는 <xref:System.Web.UI.Design.ControlDesigner.HidePropertiesInTemplateMode%2A> 컨트롤이 있는 동안 템플릿 편집 모드에에서 ID 속성 이외의 속성을 속성 표에서 숨길지 여부를 결정 하는 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public virtual string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.ID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤의 ID 문자열을 가져오거나 설정합니다.</summary>
        <value>컨트롤의 ID 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ControlDesigner.ID%2A> 컨트롤 디자이너 내에서 및 상호 작용을 속성 창에 대 한 속성은 내부적으로 사용 합니다. <xref:System.Web.UI.Design.ControlDesigner.ID%2A> 속성 실행 시간을 숨깁니다 <xref:System.Web.UI.Control.ID%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ID" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.Initialize(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::ComponentModel::IComponent ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">디자인할 컨트롤입니다.</param>
        <summary>컨트롤 디자이너를 초기화하고 지정된 구성 요소를 로드합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ControlDesigner.Initialize%2A> 메서드 다음 동작을 완료 하기 위해 디자인 호스트에서 호출 됩니다.  
  
-   디자인 하는 구성 요소와 컨트롤 디자이너를 로드 합니다.  
  
-   사용 하 여 컨트롤의 뷰를 설정 하는 <xref:System.Web.UI.Design.ControlDesigner.SetViewFlags%2A> 메서드.  
  
-   연결된 된 컨트롤의 형식이 올바른지 확인 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 컨트롤 클래스 및 재정의 하는 컨트롤 디자이너 클래스를 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.Design.ControlDesigner.Initialize%2A> 메서드 내부 변수를 초기화 합니다.  
  
 [!code-csharp[System.Web.UI.Design.ControlDesigner_Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.ControlDesigner_Example/CS/SimpleControlDesigner.cs#1)]
 [!code-vb[System.Web.UI.Design.ControlDesigner_Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.ControlDesigner_Example/VB/simplecontroldesigner.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
    <Member MemberName="InTemplateMode">
      <MemberSignature Language="C#" Value="protected bool InTemplateMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InTemplateMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.InTemplateMode" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property InTemplateMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool InTemplateMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤이 디자인 호스트에서 템플릿 보기 또는 편집 모드에 있는지 여부를 나타내는 값을 가져옵니다. <see cref="P:System.Web.UI.Design.ControlDesigner.InTemplateMode" /> 속성은 읽기 전용입니다.</summary>
        <value>
          컨트롤이 템플릿 보기 또는 편집 모드에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 웹 서버 컨트롤은 템플릿 모드에서와 같은 디자인 호스트에서 편집 되는 편집 가능한 템플릿으로 있거나 읽기 전용 서식 파일은 현재 보고 있는 [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]합니다.  
  
 <xref:System.Web.UI.Design.ControlDesigner> 클래스는 기본 제공 <xref:System.Web.UI.Design.ViewEventHandler> 업데이트할 개체는 <xref:System.Web.UI.Design.ControlDesigner.InTemplateMode%2A> 템플릿 모드는 연결 된 컨트롤에 대 한 변경 될 때 값입니다. 파생 된 사용자 지정 디자이너는 <xref:System.Web.UI.Design.TemplatedControlDesigner> 클래스 재정의할 수 있습니다는 <xref:System.Web.UI.Design.TemplatedControlDesigner.OnTemplateModeChanged%2A> 메서드 템플릿 편집 디자인 호스트에서 컨트롤의 모드가 변경 될 때 추가 처리를 수행 하도록 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.TemplatedControlDesigner" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.TemplateGroups" />
        <altmember cref="M:System.Web.UI.Design.TemplatedControlDesigner.OnTemplateModeChanged" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Invalidate">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>디자인 화면에 표시되는 컨트롤을 무효화하고 디자인 호스트가 <see cref="M:System.Web.UI.Design.ControlDesigner.OnPaint(System.Windows.Forms.PaintEventArgs)" /> 메서드를 호출하도록 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출 <xref:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml%2A> 메서드를 호출 또한 <xref:System.Web.UI.Design.ControlDesigner.Invalidate%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.OnPaint(System.Windows.Forms.PaintEventArgs)" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.Invalidate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>디자인 화면에 표시된 컨트롤의 전체 영역을 무효화하고 컨트롤 디자이너에 컨트롤을 다시 그리도록 신호를 보냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 그리기 이벤트를 처리 컨트롤 디자이너를 사용 하려면 사용 된 <xref:System.Web.UI.Design.ControlDesigner.SetViewFlags%2A> 에서 메서드는 <xref:System.Web.UI.Design.ControlDesigner.Initialize%2A> 메서드.  
  
 <xref:System.Web.UI.Design.ControlDesigner.Invalidate%2A> 메서드 디자인 호스트 컨트롤을 다시 그리도록 컨트롤 디자이너에서 지시 하는 방법을 제공 합니다. 기본적으로이,이 <xref:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml%2A> 메서드를 다시 그릴 전체 컨트롤이 때문에 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate (System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate(valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.Invalidate(System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate(System::Drawing::Rectangle rectangle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rectangle">컨트롤의 왼쪽 위 모퉁이에 상대적인 무효화할 영역을 나타내는 <see cref="T:System.Drawing.Rectangle" /> 개체입니다.</param>
        <summary>디자인 화면에 표시된 컨트롤의 지정된 영역을 무효화하고 컨트롤 디자이너에 컨트롤을 다시 그리도록 신호를 보냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 그리기 이벤트를 처리 컨트롤 디자이너를 사용 하려면 사용 된 <xref:System.Web.UI.Design.ControlDesigner.SetViewFlags%2A> 에서 메서드는 <xref:System.Web.UI.Design.ControlDesigner.Initialize%2A> 메서드.  
  
 <xref:System.Web.UI.Design.ControlDesigner.Invalidate%2A> 메서드 디자인 호스트 컨트롤의 특정 부분을 다시 그리게 컨트롤 디자이너에서 지시 하는 방법을 제공 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InvokeTransactedChange">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 매개 변수를 사용하여, 디자인 호스트의 실행 취소 기능을 통해 한 단위로 롤백될 수 있는 트랜잭션에 일련의 변경 사항을 래핑합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvokeTransactedChange">
      <MemberSignature Language="C#" Value="public static void InvokeTransactedChange (System.ComponentModel.IComponent component, System.Web.UI.Design.TransactedChangeCallback callback, object context, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InvokeTransactedChange(class System.ComponentModel.IComponent component, class System.Web.UI.Design.TransactedChangeCallback callback, object context, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange(System.ComponentModel.IComponent,System.Web.UI.Design.TransactedChangeCallback,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InvokeTransactedChange (component As IComponent, callback As TransactedChangeCallback, context As Object, description As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InvokeTransactedChange(System::ComponentModel::IComponent ^ component, System::Web::UI::Design::TransactedChangeCallback ^ callback, System::Object ^ context, System::String ^ description);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="callback" Type="System.Web.UI.Design.TransactedChangeCallback" />
        <Parameter Name="context" Type="System.Object" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="component">컨트롤 디자이너와 연결된 컨트롤입니다.</param>
        <param name="callback">트랜잭션의 일부로 컨트롤 디자이너에서 호출할 함수를 나타내는 <see cref="T:System.Web.UI.Design.TransactedChangeCallback" /> 개체입니다.</param>
        <param name="context">콜백에 대한 인수를 포함하는 개체입니다.</param>
        <param name="description">트랜잭션을 완료하도록 허용하는 데 따른 효과에 대한 설명으로, 사용자에게 트랜잭션을 취소할 수 있는 기회를 주기 위해 디자인 호스트에서 사용됩니다.</param>
        <summary>지정된 매개 변수를 사용하여, 디자인 호스트의 실행 취소 기능을 통해 한 단위로 롤백될 수 있는 트랜잭션에 일련의 변경 사항을 래핑합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 구현은 <xref:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange%2A> 메서드에 의해 결정 된 디자인 호스트에 알립니다는 <xref:System.Web.UI.Control.Site%2A> 속성 `component`, 변경, 연결 된 컨트롤에서 발생 하 고, 디자인 호스트에서 변경 내용을 취소 되지 않은 경우 호출 하는 지정 된 `callback` 사용 하 여 `context`, 한 다음 디자인 호스트에서 변경이 완료 되었음을 알립니다.  
  
 디자인 호스트 또는 연결된 된 컨트롤에 정적 throw 하는 경우 `Canceled` 의 예외 필드는 <xref:System.ComponentModel.Design.CheckoutException> 호출 하지 않고 트랜잭션을 취소는 `callback`합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 간단한 복합 컨트롤을 만드는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.Label> 및 <xref:System.Web.UI.WebControls.TextBox> 컨트롤 속성을 설정 레이블 텍스트를 그리고는 <xref:System.Web.UI.WebControls.TextBox.Text%2A>, <xref:System.Web.UI.WebControls.WebControl.Width%2A>, 및 <xref:System.Web.UI.WebControls.WebControl.BackColor%2A> 의 속성 <xref:System.Web.UI.WebControls.TextBox> 제어 합니다. 연결 된 컨트롤 디자이너 클래스는 세 개를 만들며 <xref:System.ComponentModel.Design.DesignerActionMethodItem> 컨트롤에 두 개의 속성을 설정 하며 각 합니다. 사용 하 여는 <xref:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange%2A> 메서드를와 같은 디자인 호스트의 실행 취소 기능을 사용할 수 있습니다 [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], 하나의 단위로 완료 된 각 트랜잭션을 롤백할 수 있습니다.  
  
 [!code-csharp[DesignerInvokeTransactedChange#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerInvokeTransactedChange/CS/InvokeTransactedChangeSample.cs#1)]
 [!code-vb[DesignerInvokeTransactedChange#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerInvokeTransactedChange/VB/InvokeTransactedChangeSample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="component" />가 <see langword="null" />인 경우  
  
 또는  
  
 <paramref name="callback" />가 <see langword="null" />인 경우</exception>
        <altmember cref="T:System.ComponentModel.Design.CheckoutException" />
        <altmember cref="T:System.Web.UI.Design.TransactedChangeCallback" />
      </Docs>
    </Member>
    <Member MemberName="InvokeTransactedChange">
      <MemberSignature Language="C#" Value="public static void InvokeTransactedChange (System.ComponentModel.IComponent component, System.Web.UI.Design.TransactedChangeCallback callback, object context, string description, System.ComponentModel.MemberDescriptor member);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InvokeTransactedChange(class System.ComponentModel.IComponent component, class System.Web.UI.Design.TransactedChangeCallback callback, object context, string description, class System.ComponentModel.MemberDescriptor member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange(System.ComponentModel.IComponent,System.Web.UI.Design.TransactedChangeCallback,System.Object,System.String,System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InvokeTransactedChange (component As IComponent, callback As TransactedChangeCallback, context As Object, description As String, member As MemberDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InvokeTransactedChange(System::ComponentModel::IComponent ^ component, System::Web::UI::Design::TransactedChangeCallback ^ callback, System::Object ^ context, System::String ^ description, System::ComponentModel::MemberDescriptor ^ member);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="callback" Type="System.Web.UI.Design.TransactedChangeCallback" />
        <Parameter Name="context" Type="System.Object" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="component">컨트롤 디자이너와 연결된 컨트롤입니다.</param>
        <param name="callback">트랜잭션의 일부로 컨트롤 디자이너에서 호출할 함수를 나타내는 <see cref="T:System.Web.UI.Design.TransactedChangeCallback" /> 개체입니다.</param>
        <param name="context">콜백에 대한 인수를 포함하는 개체입니다.</param>
        <param name="description">트랜잭션을 완료하도록 허용하는 데 따른 효과에 대한 설명으로, 사용자에게 트랜잭션을 취소할 수 있는 기회를 주기 위해 디자인 호스트에서 사용됩니다.</param>
        <param name="member">
          <see cref="T:System.ComponentModel.MemberDescriptor" /> 개체로, 대개 트랜잭션의 일부로 호출되는 연결된 컨트롤의 멤버를 설명하는 <see cref="T:System.ComponentModel.EventDescriptor" /> 또는 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 개체입니다.</param>
        <summary>지정된 매개 변수를 사용하여, 디자인 호스트의 실행 취소 기능을 통해 한 단위로 롤백될 수 있는 트랜잭션에 일련의 변경 사항을 래핑합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 구현은 <xref:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange%2A> 메서드에 의해 결정 된 디자인 호스트에 알립니다는 <xref:System.Web.UI.Control.Site%2A> 속성의 `component`, 지정 된 변경이 발생 하는 `member` (속성 또는 메서드) 연결된 된 컨트롤의 및 경우에는 변경 디자인 호스트에서 취소 하지 않으면, 지정 된 호출 `callback` 사용 하 여 `context` 을 인수로 사용 하 고 다음 디자인 호스트에서 변경이 완료 되었음을 알립니다.  
  
 디자인 호스트 또는 연결 된 컨트롤에 정적 throw 하는 경우 `Canceled` 의 예외 필드는 <xref:System.ComponentModel.Design.CheckoutException> 호출 하지 않고 트랜잭션을 취소는 `callback`합니다.  
  
   
  
## Examples  
 코드 예제를 보려면 <xref:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange%28System.ComponentModel.IComponent%2CSystem.Web.UI.Design.TransactedChangeCallback%2CSystem.Object%2CSystem.String%29>를 참조하십시오.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="component" />가 <see langword="null" />인 경우  
  
 또는  
  
 <paramref name="callback" />가 <see langword="null" />인 경우</exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.Web.UI.Design.TransactedChangeCallback" />
      </Docs>
    </Member>
    <Member MemberName="InvokeTransactedChange">
      <MemberSignature Language="C#" Value="public static void InvokeTransactedChange (IServiceProvider serviceProvider, System.ComponentModel.IComponent component, System.Web.UI.Design.TransactedChangeCallback callback, object context, string description, System.ComponentModel.MemberDescriptor member);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InvokeTransactedChange(class System.IServiceProvider serviceProvider, class System.ComponentModel.IComponent component, class System.Web.UI.Design.TransactedChangeCallback callback, object context, string description, class System.ComponentModel.MemberDescriptor member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange(System.IServiceProvider,System.ComponentModel.IComponent,System.Web.UI.Design.TransactedChangeCallback,System.Object,System.String,System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InvokeTransactedChange (serviceProvider As IServiceProvider, component As IComponent, callback As TransactedChangeCallback, context As Object, description As String, member As MemberDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InvokeTransactedChange(IServiceProvider ^ serviceProvider, System::ComponentModel::IComponent ^ component, System::Web::UI::Design::TransactedChangeCallback ^ callback, System::Object ^ context, System::String ^ description, System::ComponentModel::MemberDescriptor ^ member);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="callback" Type="System.Web.UI.Design.TransactedChangeCallback" />
        <Parameter Name="context" Type="System.Object" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">연결된 컨트롤에 컨트롤 디자이너 서비스를 제공하는 디자인 호스트를 나타내는 <see cref="T:System.IServiceProvider" /> 개체입니다.</param>
        <param name="component">컨트롤 디자이너와 연결된 컨트롤입니다.</param>
        <param name="callback">트랜잭션의 일부로 컨트롤 디자이너에서 호출할 함수를 나타내는 <see cref="T:System.Web.UI.Design.TransactedChangeCallback" /> 개체입니다.</param>
        <param name="context">콜백에 대한 인수를 포함하는 개체입니다.</param>
        <param name="description">트랜잭션을 완료하도록 허용하는 데 따른 효과에 대한 설명으로, 사용자에게 트랜잭션을 취소할 수 있는 기회를 주기 위해 디자인 호스트에서 사용됩니다.</param>
        <param name="member">
          <see cref="T:System.ComponentModel.MemberDescriptor" /> 개체로, 대개 트랜잭션의 일부로 호출되는 연결된 컨트롤의 멤버를 설명하는 <see cref="T:System.ComponentModel.EventDescriptor" /> 또는 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 개체입니다.</param>
        <summary>지정된 매개 변수를 사용하여, 디자인 호스트의 실행 취소 기능을 통해 한 단위로 롤백될 수 있는 트랜잭션에 일련의 변경 사항을 래핑합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 구현에서 <xref:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange%2A> 메서드도 표시 된 디자인 호스트에 알립니다 `serviceProvider`, 지정 된 변경이 발생 하는 `member` (속성 또는 메서드) 연결된 된 컨트롤의 및에서 변경 내용을 취소 하지 않으면는 지정 된 호출, 호스트 디자인 `callback` 사용 하 여 `context` 인수로 다음 디자인 호스트에서 변경이 완료 되었음을 알립니다.  
  
 디자인 호스트 또는 연결된 된 컨트롤에 정적 throw 하는 경우 `Canceled` 의 예외 필드는 <xref:System.ComponentModel.Design.CheckoutException> 호출 하지 않고 트랜잭션을 취소는 `callback`합니다.  
  
   
  
## Examples  
 코드 예제를 보려면 <xref:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange%2A>를 참조하십시오.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="component" />가 <see langword="null" />인 경우  
  
 또는  
  
 <paramref name="callback" />가 <see langword="null" />인 경우  
  
 또는  
  
 <paramref name="serviceProvider" />가 <see langword="null" />인 경우</exception>
        <altmember cref="T:System.IServiceProvider" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.Web.UI.Design.TransactedChangeCallback" />
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is to use Tag.SetDirty() and Tag.IsDirty. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>웹 서버 컨트롤이 변경된 것으로 표시되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          웹 서버 컨트롤이 마지막으로 유지되거나 로드된 후에 변경되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Web.UI.Design.ControlDesigner.IsDirty%2A> 속성은 사용되지 않습니다. 사용 하 여는 <xref:System.Web.UI.Design.IControlDesignerTag.IsDirty%2A> 속성 및 <xref:System.Web.UI.Design.IControlDesignerTag.SetDirty%2A> 에서 메서드는 <xref:System.Web.UI.Design.ControlDesigner.Tag%2A> 동일한 컨트롤 디자이너 기능에 대 한 속성입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.IControlDesignerTag.IsDirty" />
        <altmember cref="M:System.Web.UI.Design.IControlDesignerTag.SetDirty(System.Boolean)" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.Tag" />
      </Docs>
    </Member>
    <Member MemberName="IsPropertyBound">
      <MemberSignature Language="C#" Value="public bool IsPropertyBound (string propName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsPropertyBound(string propName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.IsPropertyBound(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsPropertyBound (propName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsPropertyBound(System::String ^ propName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is DataBindings.Contains(string). The DataBindings collection allows more control of the databindings associated with the control. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propName">데이터 바인딩을 테스트할 속성입니다.</param>
        <summary>연결된 컨트롤의 지정된 속성이 데이터 바인딩되는지 여부를 나타내는 값을 검색합니다.</summary>
        <returns>
          속성이 데이터 바인딩되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Web.UI.Design.ControlDesigner.IsPropertyBound%2A> 메서드는 사용 되지 않습니다. 사용 하 여는 <xref:System.Web.UI.DataBindingCollection.Contains%2A> 에서 메서드는 <xref:System.Web.UI.Design.HtmlControlDesigner.DataBindings%2A> 동일한 컨트롤 디자이너 기능에 대 한 속성입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataBindingCollection.Contains(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Localize">
      <MemberSignature Language="C#" Value="public void Localize (System.Web.UI.Design.IDesignTimeResourceWriter resourceWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Localize(class System.Web.UI.Design.IDesignTimeResourceWriter resourceWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.Localize(System.Web.UI.Design.IDesignTimeResourceWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Localize (resourceWriter As IDesignTimeResourceWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Localize(System::Web::UI::Design::IDesignTimeResourceWriter ^ resourceWriter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceWriter" Type="System.Web.UI.Design.IDesignTimeResourceWriter" />
      </Parameters>
      <Docs>
        <param name="resourceWriter">디자인 타임 응답 스트림에 리소스를 쓰는 데 사용되는 <see cref="T:System.Web.UI.Design.IDesignTimeResourceWriter" /> 개체에서 파생된 개체입니다.</param>
        <summary>제공된 리소스 작성기를 사용하여 연결된 컨트롤의 지역화할 수 있는 속성을 디자인 호스트의 리소스에 유지합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ControlDesigner.Localize%2A> 로 표시 된 각 속성에 대 한 리소스 항목을 만드는 데 디자인 호스트에서 메서드는 한 <xref:System.ComponentModel.LocalizableAttribute> 개체 및 값으로 명시적 리소스 식을 사용 하는 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAutoFormatApplied">
      <MemberSignature Language="C#" Value="public virtual void OnAutoFormatApplied (System.Web.UI.Design.DesignerAutoFormat appliedAutoFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnAutoFormatApplied(class System.Web.UI.Design.DesignerAutoFormat appliedAutoFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.OnAutoFormatApplied(System.Web.UI.Design.DesignerAutoFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnAutoFormatApplied (appliedAutoFormat As DesignerAutoFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnAutoFormatApplied(System::Web::UI::Design::DesignerAutoFormat ^ appliedAutoFormat);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appliedAutoFormat" Type="System.Web.UI.Design.DesignerAutoFormat" />
      </Parameters>
      <Docs>
        <param name="appliedAutoFormat">스타일을 정의하는 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 개체입니다.</param>
        <summary>미리 정의된 자동 서식 구성표가 연결된 컨트롤에 적용된 경우 호출됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ControlDesigner.OnAutoFormatApplied%2A> 사이 호출 됩니다는 <xref:System.Web.UI.Design.DesignerAutoFormat> 개체가 연결된 된 컨트롤에 미리 정의 된 서식을 적용 합니다. A <xref:System.Web.UI.Design.DesignerAutoFormat> 자동 서식 지정 구성표 이름 및 스타일 설정을 컨트롤에 적용 되는 개체를 정의 합니다.  
  
 클래스에서 파생 되는 <xref:System.Web.UI.Design.ControlDesigner> 재정의 클래스는 <xref:System.Web.UI.Design.ControlDesigner.OnAutoFormatApplied%2A> 메서드는 자동 서식 구성표가 연결된 된 컨트롤에 적용 되는 추가적인 처리를 수행 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.DesignerAutoFormatStyle" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.AutoFormats" />
        <altmember cref="T:System.Web.UI.Design.DesignerAutoFormat" />
      </Docs>
    </Member>
    <Member MemberName="OnBindingsCollectionChanged">
      <MemberSignature Language="C#" Value="protected override void OnBindingsCollectionChanged (string propName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBindingsCollectionChanged(string propName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.OnBindingsCollectionChanged(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBindingsCollectionChanged (propName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBindingsCollectionChanged(System::String ^ propName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is to handle the Changed event on the DataBindings collection. The DataBindings collection allows more control of the databindings associated with the control. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propName">바인딩 컬렉션의 변경을 확인할 속성입니다.</param>
        <summary>데이터 바인딩 컬렉션이 변경될 때 호출됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ControlDesigner.OnBindingsCollectionChanged%2A> 메서드는 데이터 바인딩 컬렉션 외부 호출자에 의해 변경 되었습니다.  
  
> [!NOTE]
>  <xref:System.Web.UI.Design.ControlDesigner.OnBindingsCollectionChanged%2A> 메서드는 사용 되지 않습니다. 사용 하 여는 <xref:System.Web.UI.DataBindingCollection.Changed> 이벤트에는 <xref:System.Web.UI.Design.HtmlControlDesigner.DataBindings%2A> 동일한 컨트롤 디자이너 기능에 대 한 컬렉션입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.DataBindingCollection.Changed" />
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick (System.Web.UI.Design.DesignerRegionMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick(class System.Web.UI.Design.DesignerRegionMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.OnClick(System.Web.UI.Design.DesignerRegionMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick (e As DesignerRegionMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick(System::Web::UI::Design::DesignerRegionMouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.Design.DesignerRegionMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">사용자가 클릭한 위치와 컨트롤 디자이너 영역(가능한 경우)을 지정하는 <see cref="T:System.Web.UI.Design.DesignerRegionMouseEventArgs" /> 개체입니다.</param>
        <summary>사용자가 디자인 타임에 연결된 컨트롤을 클릭하면 디자인 호스트에서 호출됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.IControlDesignerView.ViewEvent> 이벤트는 디자인 화면에 컨트롤에 대해 특정 작업에 대 한 디자인 호스트에서 발생 합니다. 예를 들어 다음 조건에 대 한 이벤트가 발생 합니다.  
  
-   사용자가 컨트롤을 클릭 합니다.  
  
-   디자인 화면에 컨트롤 디자이너 그립니다.  
  
-   사용자가 입력 하거나 템플릿 편집 컨트롤에 대 한 모드를 종료 합니다.  
  
 <xref:System.Web.UI.Design.ControlDesigner> 처리 하는 기본 대리자를 제공 하는 클래스는 <xref:System.Web.UI.Design.IControlDesignerView.ViewEvent?displayProperty=nameWithType> 이벤트입니다. 파생 된 클래스 <xref:System.Web.UI.Design.ControlDesigner> 재정의 <xref:System.Web.UI.Design.ControlDesigner.OnClick%2A> 메서드는 컨트롤을 마우스 오른쪽 단추로 클릭할 때 발생 하는 이벤트를 처리 합니다.  
  
 <xref:System.Web.UI.Design.ControlDesigner.OnClick%2A> 메서드를 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 기본 구현에서 <xref:System.Web.UI.Design.ControlDesigner.OnClick%2A> 메서드 처리를 수행 하지 않고 반환 합니다.  
  
   
  
## Examples  
 다음 코드 예제에 대 한 처리기를 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.Design.ControlDesigner.OnClick%2A> 제어 및 사용 가능한 영역에서 이벤트는 <xref:System.Web.UI.Design.DesignerRegionMouseEventArgs> 클릭 되는 영역을 식별 하는 개체입니다.  
  
 이 코드 예제는에 대 한 코드 보다 큰 예제의 일부는 <xref:System.Web.UI.Design.EditableDesignerRegion> 클래스입니다.  
  
 [!code-csharp[SimpleMultiRegionControlDesigner#4](~/samples/snippets/csharp/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/CS/SimpleMultiRegionControlDesigner.cs#4)]
 [!code-vb[SimpleMultiRegionControlDesigner#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/VB/SimpleMultiRegionControlDesigner.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 <see cref="M:System.Web.UI.Design.ControlDesigner.OnClick(System.Web.UI.Design.DesignerRegionMouseEventArgs)" /> 에서 파생 된 클래스의 메서드는 <see cref="T:System.Web.UI.Design.ControlDesigner" /> 클래스 디자인 타임 처리를 컨트롤에 이벤트를 클릭 합니다. 경우 <paramref name="e" /> null이 아닌 클릭된 된 영역에 지정 되어 있는 경우는 <see cref="P:System.Web.UI.Design.DesignerRegionMouseEventArgs.Region" /> 속성입니다.</para>
        </block>
        <altmember cref="T:System.Web.UI.Design.ViewEventHandler" />
        <altmember cref="T:System.Web.UI.Design.DesignerRegionMouseEventArgs" />
        <altmember cref="T:System.Web.UI.Design.DesignerRegion" />
      </Docs>
    </Member>
    <Member MemberName="OnComponentChanged">
      <MemberSignature Language="C#" Value="public virtual void OnComponentChanged (object sender, System.ComponentModel.Design.ComponentChangedEventArgs ce);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnComponentChanged(object sender, class System.ComponentModel.Design.ComponentChangedEventArgs ce) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnComponentChanged (sender As Object, ce As ComponentChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnComponentChanged(System::Object ^ sender, System::ComponentModel::Design::ComponentChangedEventArgs ^ ce);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="ce" Type="System.ComponentModel.Design.ComponentChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">이벤트 소스입니다.</param>
        <param name="ce">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> 개체입니다.</param>
        <summary>연결된 컨트롤이 변경될 때 호출됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ControlDesigner.OnComponentChanged%2A> 메서드 연결된 된 컨트롤에 속성이 변경 될 때 호출 됩니다. 구현 자가 속성이 변경 된 후 필요할 수 있는 처리 작업을 수행할 수 있습니다. 호출의 <xref:System.Web.UI.Design.ControlDesigner.OnComponentChanged%2A> 메서드를 사용 하면 호출 하기 위해 디자인 호스트에서 <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> 메서드. 기본 구현을 <xref:System.Web.UI.Design.ControlDesigner.OnComponentChanged%2A> 메서드 페이지 태그에서 제어를 유지 하기도 합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 <see cref="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" /> 컨트롤을 유지 하기 전에 및 디자인 타임 HTML 태그를 새로 고치기 전에 추가 처리를 제공 하는 메서드.  
  
 재정의 하는 경우는 <see cref="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" /> 파생된 클래스에서 메서드를 호출 하 고 있는지 확인은 <see cref="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" /> 메서드는 기본 클래스 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnComponentChanging">
      <MemberSignature Language="C#" Value="public virtual void OnComponentChanging (object sender, System.ComponentModel.Design.ComponentChangingEventArgs ce);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnComponentChanging(object sender, class System.ComponentModel.Design.ComponentChangingEventArgs ce) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.OnComponentChanging(System.Object,System.ComponentModel.Design.ComponentChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnComponentChanging (sender As Object, ce As ComponentChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnComponentChanging(System::Object ^ sender, System::ComponentModel::Design::ComponentChangingEventArgs ^ ce);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="ce" Type="System.ComponentModel.Design.ComponentChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">이벤트의 소스인 개체입니다.</param>
        <param name="ce">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> 개체입니다.</param>
        <summary>연결된 컨트롤의 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /> 이벤트를 처리할 메서드를 나타냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우 중 하나는 <xref:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange%2A> 또는 <xref:System.Web.UI.Design.ControlDesigner.Localize%2A> 메서드가 호출 되는 <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanging> 이벤트 연결된 된 컨트롤에 변경 하기 전에 발생 합니다. 변경이 완료 후의 <xref:System.Web.UI.Design.ControlDesigner.OnComponentChanged%2A> 메서드가 발생 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.Localize(System.Web.UI.Design.IDesignTimeResourceWriter)" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.OnComponentChanging(System.Object,System.ComponentModel.Design.ComponentChangingEventArgs)" />
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnControlResize">
      <MemberSignature Language="C#" Value="protected virtual void OnControlResize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnControlResize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.OnControlResize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnControlResize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnControlResize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is OnComponentChanged(). OnComponentChanged is called when any property of the control is changed. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>디자인 타임에 디자인 호스트에서 연결된 웹 서버 컨트롤의 크기가 조정되었을 때 호출됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Web.UI.Design.ControlDesigner.OnControlResize%2A> 메서드는 사용 되지 않습니다. 사용 하 여는 <xref:System.Web.UI.Design.ControlDesigner.OnComponentChanged%2A> 동일한 컨트롤 디자이너 기능에 대 한 메서드.  
  
 <xref:System.Web.UI.Design.ControlDesigner.OnControlResize%2A> 일반적으로 메서드는 디자인 타임 환경에 의해서만 사용자 동작으로 인해 연결된 된 웹 서버 컨트롤 크기를 조정할 수 있습니다. <xref:System.Web.UI.Design.ControlDesigner.OnControlResize%2A> 메서드는 크기 조정 완료 되기 전에 컨트롤의 업데이트 된 크기를 표시 하려면 크기 조정 과정 동안 여러 번 호출 될 수 있습니다. 컨트롤의 너비 및 높이 속성 하기 전에 업데이트 되는 <xref:System.Web.UI.Design.ControlDesigner.OnControlResize%2A> 메서드를 호출 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.Tag" />
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected virtual void OnPaint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPaint(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPaint (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPaint(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">컨트롤을 그리는 데 사용되는 그래픽 및 사각형 경계를 지정하는 <see cref="T:System.Windows.Forms.PaintEventArgs" /> 개체입니다.</param>
        <summary>
          <see cref="F:System.Web.UI.Design.ViewFlags.CustomPaint" /> 값이 <see langword="true" />인 경우 컨트롤 디자이너가 디자인 화면에서 연결된 컨트롤을 그릴 때 호출됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.IControlDesignerView.ViewEvent> 이벤트는 디자인 화면에 컨트롤에 대해 특정 작업에 대 한 디자인 호스트에서 발생 합니다. 예를 들어 다음 조건에 대 한 이벤트가 발생 합니다.  
  
-   사용자가 컨트롤을 클릭 합니다.  
  
-   디자인 호스트 요청 하는 HTML 태그 디자인 화면에서 연결된 된 컨트롤을 렌더링 합니다.  
  
-   사용자가 입력 하거나 템플릿 편집 컨트롤에 대 한 모드를 종료 합니다.  
  
 <xref:System.Web.UI.Design.ControlDesigner> 처리 하는 기본 대리자를 제공 하는 클래스는 <xref:System.Web.UI.Design.IControlDesignerView.ViewEvent?displayProperty=nameWithType> 이벤트입니다. 파생 된 클래스 <xref:System.Web.UI.Design.ControlDesigner> 설정 해야는 <xref:System.Web.UI.Design.ViewFlags.CustomPaint?displayProperty=nameWithType> 값 및 재정의 <xref:System.Web.UI.Design.ControlDesigner.OnPaint%2A> 메서드 디자인 호스트에서 디자인 화면에 컨트롤을 그릴 때 발생 하는 이벤트를 처리 합니다.  
  
 <xref:System.Web.UI.Design.ControlDesigner.OnPaint%2A> 메서드를 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 기본 구현에서 <xref:System.Web.UI.Design.ControlDesigner.OnPaint%2A> 메서드 처리를 수행 하지 않고 반환 합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 <see cref="M:System.Web.UI.Design.ControlDesigner.OnPaint(System.Windows.Forms.PaintEventArgs)" /> 에서 파생 된 클래스의 메서드는 <see cref="T:System.Web.UI.Design.ControlDesigner" /> 클래스 디자인 화면에 컨트롤에 대 한 그리기 이벤트를 처리 합니다. 하지만이 이벤트의 경우에 발생는 <see cref="F:System.Web.UI.Design.ViewFlags.CustomPaint" /> 값으로 설정 되었고는 <see cref="M:System.Web.UI.Design.ControlDesigner.SetViewFlags(System.Web.UI.Design.ViewFlags,System.Boolean)" /> 메서드.</para>
        </block>
        <altmember cref="F:System.Web.UI.Design.ViewFlags.CustomPaint" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.SetViewFlags(System.Web.UI.Design.ViewFlags,System.Boolean)" />
        <altmember cref="T:System.Web.UI.Design.ViewEventHandler" />
        <altmember cref="T:System.Web.UI.Design.IControlDesignerView" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="protected override void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">구성 요소의 클래스에 대한 속성입니다.</param>
        <summary>디자인 타임에 디자인 호스트의 속성 표에서 속성을 추가 또는 제거하거나, 연결된 컨트롤의 속성에 해당할 수 있는 새 디자인 타임 속성을 제공합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 와 <xref:System.Web.UI.Design.ControlDesigner.PreFilterProperties%2A> 메서드, 컨트롤 디자이너를 통해 노출 되는 속성의 사전에 항목을 추가할 수 있습니다는 <xref:System.ComponentModel.TypeDescriptor> 개체입니다.  
  
 속성의 사전 키는 속성의 이름입니다. 형식의 개체는 <xref:System.ComponentModel.PropertyDescriptor>합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Properties 매개 변수를 통해 액세스할 수 있는 사전 직접 수정 하거나 변경 되지 않은 상태로 둘 수 있습니다. 재정의 하는 경우는 <see cref="M:System.Web.UI.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)" /> 메서드를 필터링을 수행 하기 전에 기본 구현을 호출 합니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RaiseResizeEvent">
      <MemberSignature Language="C#" Value="public void RaiseResizeEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RaiseResizeEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.RaiseResizeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseResizeEvent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaiseResizeEvent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use of this method is not recommended because resizing is handled by the OnComponentChanged() method. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="M:System.Web.UI.Design.ControlDesigner.OnControlResize" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ControlDesigner.RaiseResizeEvent%2A> 메서드는 사용 되지 않습니다 되며이 기능을 대체할 기능은 없습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" />
        <altmember cref="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanged(System.ComponentModel.MemberDescriptor,System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is to inherit from ContainerControlDesigner instead and to use an EditableDesignerRegion. Regions allow for better control of the content in the designer. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤의 속성이 디자인 타임에 읽기 전용인지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          컨트롤의 속성이 디자인 타임에 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ControlDesigner> 클래스는 본질적으로 읽기 전용입니다. 읽기/쓰기 기능을 추가 하 여 제공 된 <xref:System.Web.UI.Design.DesignerRegion> 개체 또는 같은 기본 클래스를 사용 하는 <xref:System.Web.UI.Design.ContainerControlDesigner> 클래스.  
  
> [!NOTE]
>  <xref:System.Web.UI.Design.ControlDesigner.ReadOnly%2A> 속성은 사용되지 않습니다. 파생 되는 <xref:System.Web.UI.Design.ContainerControlDesigner> 디자이너 편집 가능한 영역을 추가할 수 있는 클래스 또는 <xref:System.Web.UI.Design.TemplatedControlDesigner> 개체를 템플릿의 편집 가능한 디자이너 영역을 만들 수 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ControlDesigner" />
        <altmember cref="T:System.Web.UI.Design.ContainerControlDesigner" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClone">
      <MemberSignature Language="C#" Value="public void RegisterClone (object original, object clone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClone(object original, object clone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.RegisterClone(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterClone (original As Object, clone As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClone(System::Object ^ original, System::Object ^ clone);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="original" Type="System.Object" />
        <Parameter Name="clone" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="original">컨트롤 디자이너와 연결된 컨트롤입니다.</param>
        <param name="clone">연결된 컨트롤의 복제본입니다.</param>
        <summary>복제된 컨트롤의 내부 데이터를 등록합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 항목이 복제 될 때마다 있을 수 있습니다 일부 내부 데이터 구조와 같은 `meta:` 컨트롤 디자이너에서 복제 된 컨트롤에 포함 되어야 하는 특성입니다. 페이지 개발자를 추가할 수 `meta:` 컨트롤의 태그에 특성을 있으며 수 있습니다 이러한 태그로 구분 하기 위해 컨트롤에 대 한 이유를 것도 아닙니다 방법이 없습니다. 따라서 페이지에 변경 내용을 적용 하기 전에 서식 또는 복잡 한 속성을 편집 하는 기능을 제공 하는 컨트롤 디자이너 컨트롤의 복제본을 만들고를 하 원래 컨트롤과 복제본이 전달 <xref:System.Web.UI.Design.ControlDesigner.RegisterClone%2A> 메서드를 다음 변경 내용 태그에 유지 되기 모든 `meta:` 특성도 유지 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="original" />가 null인 경우  
  
 또는  
  
 <paramref name="clone" />가 null인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="RootDesigner">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Design.WebFormsRootDesigner RootDesigner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Design.WebFormsRootDesigner RootDesigner" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.RootDesigner" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property RootDesigner As WebFormsRootDesigner" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::Design::WebFormsRootDesigner ^ RootDesigner { System::Web::UI::Design::WebFormsRootDesigner ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.WebFormsRootDesigner</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>연결된 컨트롤을 포함하는 Web Forms 페이지의 컨트롤 디자이너를 가져옵니다.</summary>
        <value>디자인 타임에 컨트롤을 포함하는 Web Forms 페이지의 구성 요소에 액세스하는 데 사용할 수 있는 <see cref="T:System.Web.UI.Design.WebFormsRootDesigner" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ControlDesigner.RootDesigner%2A> 컨트롤이 포함 된 Web Forms 페이지에 대 한 컨트롤 디자이너에서 속성을 나타냅니다. 사용 하 여는 <xref:System.Web.UI.Design.ControlDesigner.RootDesigner%2A> 속성을 액세스 하 고 디자인 타임에 포함 하는 Web Forms 페이지를 처리 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
      </Docs>
    </Member>
    <Member MemberName="SetEditableDesignerRegionContent">
      <MemberSignature Language="C#" Value="public virtual void SetEditableDesignerRegionContent (System.Web.UI.Design.EditableDesignerRegion region, string content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetEditableDesignerRegionContent(class System.Web.UI.Design.EditableDesignerRegion region, string content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetEditableDesignerRegionContent (region As EditableDesignerRegion, content As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetEditableDesignerRegionContent(System::Web::UI::Design::EditableDesignerRegion ^ region, System::String ^ content);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Web.UI.Design.EditableDesignerRegion" />
        <Parameter Name="content" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="region">컨트롤 내의 편집 가능한 디자인 영역입니다.</param>
        <param name="content">편집 가능한 디자인 영역에 할당할 내용입니다.</param>
        <summary>디자인 타임에 컨트롤의 편집 가능한 영역에 대한 내용을 지정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 클래스에서 파생 되는 <xref:System.Web.UI.Design.ControlDesigner> 클래스 영역 기반 디자인 화면에서 편집을 지원 하 고 재정의할 수는 <xref:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent%2A> 메서드는 지정한 지역에 대 한 콘텐츠를 설정 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 디자인 호스트에 대 한 참조를 가져오고 대 한 참조를 사용 하 여 만들 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.Design.ControlParser> 개체 `content` 의 인스턴스로 <xref:System.Web.UI.ITemplate> 에서는 <xref:System.Web.UI.ITemplate> 인스턴스는 적절 한 보기입니다.  
  
 [!code-csharp[SimpleMultiRegionControlDesigner#7](~/samples/snippets/csharp/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/CS/SimpleMultiRegionControlDesigner.cs#7)]
 [!code-vb[SimpleMultiRegionControlDesigner#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/VB/SimpleMultiRegionControlDesigner.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)" />
        <altmember cref="T:System.Web.UI.Design.EditableDesignerRegion" />
      </Docs>
    </Member>
    <Member MemberName="SetRegionContent">
      <MemberSignature Language="C#" Value="protected void SetRegionContent (System.Web.UI.Design.EditableDesignerRegion region, string content);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetRegionContent(class System.Web.UI.Design.EditableDesignerRegion region, string content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.SetRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetRegionContent (region As EditableDesignerRegion, content As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetRegionContent(System::Web::UI::Design::EditableDesignerRegion ^ region, System::String ^ content);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Web.UI.Design.EditableDesignerRegion" />
        <Parameter Name="content" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="region">컨트롤의 디자인 타임 뷰에 있는 편집 가능한 디자인 영역입니다.</param>
        <param name="content">편집 가능한 디자인 영역에 할당할 내용입니다.</param>
        <summary>컨트롤의 디자인 타임 뷰에서 편집 가능한 영역의 내용을 지정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반적으로 <xref:System.Web.UI.Design.ControlDesigner.SetRegionContent%2A> 파생된 디자이너에서 메서드를 재정의 하지 않습니다. 기본 클래스 사용 하면 디자인 호스트를 호출 하 여 <xref:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent%2A> 메서드는 지역에 대 한 합니다. 재정의 <xref:System.Web.UI.Design.ControlDesigner.SetRegionContent%2A> 메서드 호출 하기 전에 컨트롤에 대 한 필요한 사용자 지정 데이터 경우 <xref:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent%2A> 메서드.  
  
 사용 된 <xref:System.Web.UI.Design.ControlDesigner.SetRegionContent%2A> 메서드 컨트롤의 영역에 HTML 태그를 삽입 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.IControlDesignerView.SupportsRegions" />
        <altmember cref="Overload:System.Web.UI.Design.ControlDesigner.GetViewRendering" />
      </Docs>
    </Member>
    <Member MemberName="SetViewFlags">
      <MemberSignature Language="C#" Value="protected void SetViewFlags (System.Web.UI.Design.ViewFlags viewFlags, bool setFlag);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetViewFlags(valuetype System.Web.UI.Design.ViewFlags viewFlags, bool setFlag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.SetViewFlags(System.Web.UI.Design.ViewFlags,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetViewFlags(System::Web::UI::Design::ViewFlags viewFlags, bool setFlag);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewFlags" Type="System.Web.UI.Design.ViewFlags" />
        <Parameter Name="setFlag" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="viewFlags">
          <see cref="T:System.Web.UI.Design.ViewFlags" /> 값입니다.</param>
        <param name="setFlag">
          플래그를 설정하려면 <see langword="true" />이고, 플래그를 제거하려면 <see langword="false" />입니다.</param>
        <summary>지정된 비트 <see cref="T:System.Web.UI.Design.ViewFlags" /> 열거형을 주어진 플래그 값에 할당합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일부의 플래그를 설정할 수 있습니다. 사용 예를 들어는 <xref:System.Web.UI.Design.ControlDesigner.SetViewFlags%2A> 설정 하는 메서드는 <xref:System.Web.UI.Design.ViewFlags.DesignTimeHtmlRequiresLoadComplete> 현재 <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> 컨트롤 디자이너에서 사용 되지 않는 대신에 대 한 속성 <xref:System.Web.UI.Design.ControlDesigner.DesignTimeHtmlRequiresLoadComplete%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.Design.ControlDesigner.SetViewFlags%2A> 메서드 템플릿 편집 모드 임을 나타냅니다.  
  
 [!code-csharp[DesignerTemplateGroupSample#5](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerTemplateGroupSample/CS/TemplateGroupsSample.cs#5)]
 [!code-vb[DesignerTemplateGroupSample#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerTemplateGroupSample/VB/TemplateGroupsSample.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.ViewControl" />
        <altmember cref="T:System.Web.UI.Design.ViewFlags" />
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Design.IControlDesignerTag Tag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Design.IControlDesignerTag Tag" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.Tag" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Tag As IControlDesignerTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::Design::IControlDesignerTag ^ Tag { System::Web::UI::Design::IControlDesignerTag ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.IControlDesignerTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>연결된 컨트롤의 HTML 태그 요소를 나타내는 개체를 가져옵니다.</summary>
        <value>연결된 컨트롤의 HTML 태그 요소를 나타내는 <see cref="T:System.Web.UI.Design.IControlDesignerTag" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반적으로 <xref:System.Web.UI.Design.ControlDesigner.Tag%2A> 속성은 컨트롤 디자이너에서 디자인 호스트 사이의 통신에만 사용 되며 컨트롤 개발자가 사용 되지 않습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.IControlDesignerTag" />
      </Docs>
    </Member>
    <Member MemberName="TemplateGroups">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Design.TemplateGroupCollection TemplateGroups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Design.TemplateGroupCollection TemplateGroups" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.TemplateGroups" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TemplateGroups As TemplateGroupCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::Design::TemplateGroupCollection ^ TemplateGroups { System::Web::UI::Design::TemplateGroupCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.TemplateGroupCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>하나 이상의 템플릿 정의가 포함된 템플릿 그룹의 컬렉션을 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.Design.TemplateGroup" /> 개체의 컬렉션입니다. 기본값은 빈 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에는에서 파생 되는 컨트롤 디자이너 클래스를 만드는 방법을 보여 줍니다는 <xref:System.Web.UI.Design.ControlDesigner> 클래스입니다. 이 컨트롤 디자이너에는 4 개의 가능한 템플릿이 있는 컨트롤을 지원 합니다.  
  
 를 실행 하려면 코드를 컴파일한 다음 디자인을 같은 호스트의 [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], 디자인 보기에서 페이지를 표시 합니다. 컨트롤을 선택 하 고 서식 파일을 수정 하려면 선택 하 고 작업 목록의 다음 컨트롤을 이동 하는 서식 파일에 끌어서 놓기 기능을 사용 합니다.  
  
 [!code-csharp[DesignerTemplateGroupSample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerTemplateGroupSample/CS/TemplateGroupsSample.cs#1)]
 [!code-vb[DesignerTemplateGroupSample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerTemplateGroupSample/VB/TemplateGroupsSample.vb#1)]  
[!code-aspx-vb[DesignerTemplateGroupSample#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerTemplateGroupSample/VB/TemplateGroupsSample.aspx#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>수정할 수 있습니다는 <see cref="P:System.Web.UI.Design.ControlDesigner.TemplateGroups" /> 하거나 컬렉션을 직접 변경 되지 않은 둘 수 있습니다. 재정의 하는 경우는 <see cref="P:System.Web.UI.Design.ControlDesigner.TemplateGroups" /> 속성을 컬렉션에 대 한 템플릿 그룹 추가 하기 전에 기본 구현을 호출 합니다.</para>
        </block>
        <altmember cref="T:System.Web.UI.Design.TemplateGroup" />
        <altmember cref="T:System.Web.UI.Design.TemplateDefinition" />
        <altmember cref="T:System.Web.UI.Design.TemplatedControlDesigner" />
      </Docs>
    </Member>
    <Member MemberName="UpdateDesignTimeHtml">
      <MemberSignature Language="C#" Value="public virtual void UpdateDesignTimeHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateDesignTimeHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateDesignTimeHtml ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UpdateDesignTimeHtml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" /> 메서드를 호출하여 연결된 웹 서버 컨트롤에 대한 디자인 타임 HTML 태그를 새로 고칩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml%2A> 메서드 컨트롤 수정 된 때와 같은 디자인 타임에 연결된 된 웹 서버 컨트롤의 표시를 업데이트 하기 위해 디자인 호스트에서 호출 됩니다. 또한, 컨트롤 디자이너를 호출할 수는 <xref:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml%2A> 컨트롤의 표시를 업데이트 하도록 컨트롤의 값을 수정한 후 메서드.  
  
> [!NOTE]
>  호출 하는 경우는 <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> 이벤트 또는 사용 하는 <xref:System.ComponentModel.PropertyDescriptor> 속성을 설정 하는 개체는 <xref:System.ComponentModel.Design.IComponentChangeService> 호출 인터페이스는 <xref:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml%2A> 메서드를 합니다.  
  
   
  
## Examples  
 에 응답 하는 방법은 다음 코드 예제는 `Click` 다중 영역 컨트롤의 영역 간에 포커스를 변경 하 고 컨트롤 디자이너에서 이벤트는 <xref:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml%2A> 메서드 디자인 호스트에서 컨트롤의 모양을 업데이트 합니다.  
  
 이 코드 예제는에 대 한 보다 큰 예제의 일부는 <xref:System.Web.UI.Design.EditableDesignerRegion> 클래스입니다.  
  
 [!code-csharp[SimpleMultiRegionControlDesigner#4](~/samples/snippets/csharp/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/CS/SimpleMultiRegionControlDesigner.cs#4)]
 [!code-vb[SimpleMultiRegionControlDesigner#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/VB/SimpleMultiRegionControlDesigner.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />
      </Docs>
    </Member>
    <Member MemberName="UsePreviewControl">
      <MemberSignature Language="C#" Value="protected virtual bool UsePreviewControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsePreviewControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property UsePreviewControl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool UsePreviewControl { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤 디자이너에서 임시 미리 보기 컨트롤을 사용하여 디자인 타임 HTML 태그를 생성할지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          컨트롤 디자이너에서 컨트롤의 임시 복사본을 디자인 타임 미리 보기에 사용하면 <see langword="true" />이고, 컨트롤 디자이너에서 <see cref="P:System.ComponentModel.Design.ComponentDesigner.Component" /> 속성을 컨트롤 디자이너에 포함된 컨트롤에 사용하면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.UI.Design.ControlDesigner.UsePreviewControl%2A> 속성은 `true`, <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> 속성 컨트롤의 임시 복사본을 반환 합니다. 임시 컨트롤에 대 한 변경 문서에 유지 되지 않습니다.  
  
 경우는 <xref:System.Web.UI.Design.ControlDesigner.UsePreviewControl%2A> 속성은 `false`, <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> 속성의 인스턴스를 반환 합니다.는 <xref:System.ComponentModel.Design.ComponentDesigner.Component%2A> 컨트롤에 대 한 속성입니다. 컨트롤의 인스턴스 변경 내용은 유지 됩니다.  
  
 <xref:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl%2A> 에서 설정 된 <xref:System.Web.UI.Design.SupportsPreviewControlAttribute> 개체의 값을 설정 하는 데 사용 됩니다는 <xref:System.Web.UI.Design.ControlDesigner.UsePreviewControl%2A> 속성입니다. 따라서는 <xref:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl%2A> 설정에서 반환 되는 컨트롤의 유형을 결정는 <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> 자료의 속성 <xref:System.Web.UI.Design.ControlDesigner> 클래스입니다. 경우는 <xref:System.Web.UI.Design.SupportsPreviewControlAttribute> 컨트롤 디자이너 선언에 지정 되지 않은 <xref:System.Web.UI.Design.ControlDesigner> 개체 동작은를 지정 하는 <xref:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl%2A> 속성으로 `false`합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>파생 된 사용자 지정 디자이너는 <see cref="T:System.Web.UI.Design.ControlDesigner" /> 클래스 재정의할 수 있습니다는 <see cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" /> 속성을 무시 하 고는 <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> 개체입니다. 일반적으로 나타내기 위해는 <see cref="P:System.Web.UI.Design.ControlDesigner.ViewControl" /> 속성은 컨트롤의 임시 복사본을 항상 반환, 재정의 <see cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" /> 속성을 항상 반환 <see langword="true" />합니다. 해당는 <see cref="P:System.Web.UI.Design.ControlDesigner.ViewControl" /> 속성은 항상 컨트롤의 인스턴스를 반환, 재정의 <see cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" /> 속성을 항상 반환 <see langword="false" />합니다. 예를 들어는 <see cref="T:System.Web.UI.Design.WebControls.PreviewControlDesigner" /> 클래스에서 파생 되는 <see cref="T:System.Web.UI.Design.ControlDesigner" /> 항상 반환 <see langword="true" /> 에 대 한는 <see cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" /> 속성입니다.</para>
        </block>
        <altmember cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.ViewControl" />
        <altmember cref="Overload:System.Web.UI.Design.ControlDesigner.GetViewRendering" />
        <altmember cref="T:System.Web.UI.Design.WebControls.PreviewControlDesigner" />
      </Docs>
    </Member>
    <Member MemberName="ViewControl">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control ViewControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control ViewControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.ViewControl" />
      <MemberSignature Language="VB.NET" Value="Public Property ViewControl As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Control ^ ViewControl { System::Web::UI::Control ^ get(); void set(System::Web::UI::Control ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>디자인 타임 HTML 태그를 미리 보는 데 사용할 수 있는 웹 서버 컨트롤을 가져오거나 설정합니다.</summary>
        <value>기본 클래스에서 디자인 타임 HTML 태그를 생성하는 데 사용되는 <see cref="T:System.Web.UI.Control" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> 속성에서 사용 하 여 <xref:System.Web.UI.Design.ControlDesigner.UsePreviewControl%2A> 속성 반환 값을 결정 하도록 합니다.  
  
 경우는 <xref:System.Web.UI.Design.ControlDesigner.UsePreviewControl%2A> 속성은 `true`, <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> 속성 컨트롤의 임시 복사본을 반환 합니다. 임시 컨트롤에 대 한 변경 내용이 유지 되지 않습니다.  
  
 경우는 <xref:System.Web.UI.Design.ControlDesigner.UsePreviewControl%2A> 속성은 `false`, <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> 속성의 인스턴스를 반환 합니다.는 <xref:System.ComponentModel.Design.ComponentDesigner.Component%2A> 컨트롤에 대 한 속성입니다. 컨트롤의 인스턴스 변경 내용은 유지 됩니다.  
  
 <xref:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl%2A> 에서 설정 된 <xref:System.Web.UI.Design.SupportsPreviewControlAttribute> 개체의 값을 설정 하는 데 사용 됩니다는 <xref:System.Web.UI.Design.ControlDesigner.UsePreviewControl%2A> 속성입니다. 따라서는 <xref:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl%2A> 설정에서 반환 되는 컨트롤의 유형을 결정는 <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> 자료의 속성 <xref:System.Web.UI.Design.ControlDesigner> 클래스입니다. 경우는 <xref:System.Web.UI.Design.SupportsPreviewControlAttribute> 컨트롤 디자이너 선언에 지정 되지 않은 <xref:System.Web.UI.Design.ControlDesigner> 개체 동작은를 지정 하는 <xref:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl%2A> 속성으로 `false`합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 컨트롤 디자이너를 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.Design.SupportsPreviewControlAttribute> 특성입니다. 코드 예제에서는 웹 서버 컨트롤에서 파생 되는 <xref:System.Web.UI.WebControls.Label> 클래스 및 사용자 지정 컨트롤 디자이너 구현 컨트롤에 연결 합니다. 컨트롤 디자이너 클래스 선언으로 표시 되는 `SupportsPreviewControl` 특성이로 설정 `true`합니다. 컨트롤 디자이너 재정의 <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> 메서드를 표시 합니다.는 <xref:System.Web.UI.WebControls.Label.Text%2A> 기울임꼴 디자인 타임에 컨트롤의 속성입니다.  
  
 [!code-csharp[System.Web.UI.Design.SupportsPreviewControlAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.SupportsPreviewControlAttribute/CS/supportspreviewdesigner.cs#1)]
 [!code-vb[System.Web.UI.Design.SupportsPreviewControlAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.SupportsPreviewControlAttribute/VB/supportspreviewdesigner.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" />
        <altmember cref="Overload:System.Web.UI.Design.ControlDesigner.GetViewRendering" />
        <altmember cref="T:System.Web.UI.Design.WebControls.PreviewControlDesigner" />
      </Docs>
    </Member>
    <Member MemberName="ViewControlCreated">
      <MemberSignature Language="C#" Value="public virtual bool ViewControlCreated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ViewControlCreated" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.ViewControlCreated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ViewControlCreated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ViewControlCreated { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>디자인 화면에 표시할 <see langword="View" /> 컨트롤이 만들어졌는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          디자인 화면에 표시할 컨트롤이 만들어졌으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="protected virtual bool Visible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.Visible" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool Visible { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>디자인 타임에 컨트롤이 표시되는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          모든 경우에 <see langword="true" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>