<Type Name="ExpressionEditorSheet" FullName="System.Web.UI.Design.ExpressionEditorSheet">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="996b1d4c6fc4fc427cbcd8f4d454f07c7e3b21ac" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37541079" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ExpressionEditorSheet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExpressionEditorSheet extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ExpressionEditorSheet" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExpressionEditorSheet" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionEditorSheet abstract" />
  <TypeSignature Language="F#" Value="type ExpressionEditorSheet = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="1b0ad-101">사용자 지정 식에 대한 디자인 타임 편집기 시트를 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1b0ad-101">Represents a design-time editor sheet for a custom expression.</span>
      </span>
      <span data-ttu-id="1b0ad-102">이 클래스는 상속되어야 합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1b0ad-102">This class must be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b0ad-103">사용자 지정 식 편집기 시트를 디자인 타임에 사용자 지정 식의 속성을 설정 하는 개발자를 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1b0ad-103">A custom expression editor sheet lets a developer set properties on a custom expression at design-time.</span></span> <span data-ttu-id="1b0ad-104">식 문자열을 사용 하 여 컨트롤 속성 값을 설정할 수 있습니다. 식 문자열을 식 편집기에서 디자인 타임 및 런타임에 식 작성기에서 평가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1b0ad-104">Control property values can be set using expression strings; the expression strings are evaluated at run time by an expression builder and at design time by an expression editor.</span></span>  
  
 <span data-ttu-id="1b0ad-105">탐색할 때는 <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> 비주얼 디자이너에서 디자인 타임 속성 표 컨트롤에 대 한 속성을 컨트롤 속성에 값을 제공 하는 식을 설정 하 대화 상자를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="1b0ad-105">When you browse the <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> property for a control in the design-time properties grid, the visual designer displays a dialog box to set expressions that provide the value for a control property.</span></span> <span data-ttu-id="1b0ad-106">식 접두사 목록을 기반으로 식 형식을 선택할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1b0ad-106">You can select the expression type based on a list of expression prefixes.</span></span> <span data-ttu-id="1b0ad-107">목록에서 식 접두사를 선택 하는 경우 비주얼 디자이너를 사용 하 여 연결 된 <xref:System.Web.UI.Design.ExpressionEditor> 및 <xref:System.Web.UI.Design.ExpressionEditorSheet> 식의 해당 형식에 대 한 구문에 따라 개체를 평가 하 고 식 문자열을 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1b0ad-107">When you select an expression prefix from the list, the visual designer uses the associated <xref:System.Web.UI.Design.ExpressionEditor> and <xref:System.Web.UI.Design.ExpressionEditorSheet> objects to evaluate and convert the expression string based on the syntax for that type of expression.</span></span> <span data-ttu-id="1b0ad-108">비주얼 디자이너 식 편집기 시트 속성을 사용 하 여 사용자 지정 식 문자열을 결합 하는 하나 이상의 문자열에 대 한 프롬프트.</span><span class="sxs-lookup"><span data-stu-id="1b0ad-108">The visual designer uses expression editor sheet properties to prompt for one or more strings that combine into the custom expression string.</span></span>  
  
 <span data-ttu-id="1b0ad-109">일반적으로 새로운 식 형식을 디자인 타임에 제공 하려면 있습니다 고유한 식 접두사를 정의 하 고 사용자 지정을 제공 <xref:System.Web.Compilation.ExpressionBuilder> 고 <xref:System.Web.UI.Design.ExpressionEditor> 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="1b0ad-109">Typically, to supply a new expression type at design time, you define a unique expression prefix and provide custom <xref:System.Web.Compilation.ExpressionBuilder> and <xref:System.Web.UI.Design.ExpressionEditor> implementations.</span></span> <span data-ttu-id="1b0ad-110">필요에 따라 사용자 지정을 제공할 수 있습니다 <xref:System.Web.UI.Design.ExpressionEditorSheet> 식을 구성 하는 데 사용 되는 속성을 정의 하는 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="1b0ad-110">Optionally, you can provide a custom <xref:System.Web.UI.Design.ExpressionEditorSheet> implementation that defines properties that are used to form the expression.</span></span> <span data-ttu-id="1b0ad-111">식 작성기와 식 편집기를 사용 하 여 식 접두사에 연결 하려면 적용 된 <xref:System.Web.Compilation.ExpressionEditorAttribute> 특성 및 <xref:System.Web.Compilation.ExpressionPrefixAttribute> 사용자 지정 특성 <xref:System.Web.Configuration.ExpressionBuilder> 클래스를 다음에서 식 작성기에 대 한 식 접두사를 구성 `expressionBuilders` 웹 구성 파일의 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="1b0ad-111">To associate an expression prefix with an expression builder and an expression editor, apply the <xref:System.Web.Compilation.ExpressionEditorAttribute> attribute and an <xref:System.Web.Compilation.ExpressionPrefixAttribute> attribute to the custom <xref:System.Web.Configuration.ExpressionBuilder> class, and then configure the expression prefix for an expression builder in the `expressionBuilders` element in the Web configuration file.</span></span>  
  
 <span data-ttu-id="1b0ad-112">기본 구현 된 <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> 메서드는 단일 입력된 문자열을 사용 하 여 식을 구성 하는 기본 편집기 시트를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1b0ad-112">The default implementation of the <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> method returns a basic editor sheet, which uses a single input string to form the expression.</span></span> <span data-ttu-id="1b0ad-113">파생 되는 사용자 지정 식 편집기는 <xref:System.Web.UI.Design.ExpressionEditor> 재정의할 수는 <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> 시트 구현을 사용자 지정 편집기를 반환 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="1b0ad-113">Custom expression editors that are derived from the <xref:System.Web.UI.Design.ExpressionEditor> can override the <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> method to return a custom editor sheet implementation.</span></span> <span data-ttu-id="1b0ad-114">일반적으로 사용자 지정 편집기 시트를 식 문자열을 구성 하는 데 사용 되는 여러 속성을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="1b0ad-114">Typically, a custom editor sheet contains multiple properties that are used to build the expression string.</span></span> <span data-ttu-id="1b0ad-115"><xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> 메서드는 현재 식 속성에 따라 결과 식 문자열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1b0ad-115">The <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> method returns the resulting expression string based on the current expression properties.</span></span>  
  
 <span data-ttu-id="1b0ad-116">예를 들어 합니다 <xref:System.Web.UI.Design.ResourceExpressionEditor> 클래스에서 파생 되는 <xref:System.Web.UI.Design.ExpressionEditor> 클래스 및 평가 하 고 디자인 타임에 리소스 문자열 참조 컨트롤 속성을 사용 하 여 연결에 대 한 구현을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="1b0ad-116">For example, the <xref:System.Web.UI.Design.ResourceExpressionEditor> class derives from the <xref:System.Web.UI.Design.ExpressionEditor> class and provides an implementation for evaluating and associating a resource string reference with a control property at design time.</span></span> <span data-ttu-id="1b0ad-117">합니다 <xref:System.Web.Compilation.ResourceExpressionBuilder> 클래스는 식 접두사를 사용 하 여 연결 됩니다 `Resources` 하며 <xref:System.Web.UI.Design.ResourceExpressionEditor> 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="1b0ad-117">The <xref:System.Web.Compilation.ResourceExpressionBuilder> class is associated with the expression prefix `Resources` and the <xref:System.Web.UI.Design.ResourceExpressionEditor> implementation.</span></span> <span data-ttu-id="1b0ad-118">합니다 <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A> 메서드가 반환 되는 <xref:System.Web.UI.Design.ResourceExpressionEditorSheet>, 리소스 참조 식을 구성 하는 개별 속성을 정의 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="1b0ad-118">The <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A> method returns a <xref:System.Web.UI.Design.ResourceExpressionEditorSheet>, which defines the individual properties that form a resource reference expression.</span></span>  
  
 <span data-ttu-id="1b0ad-119">상속 하는 경우는 <xref:System.Web.UI.Design.ExpressionEditorSheet> 클래스 멤버를 재정의 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="1b0ad-119">When you inherit from the <xref:System.Web.UI.Design.ExpressionEditorSheet> class, you must override the following members:</span></span>  
  
-   <span data-ttu-id="1b0ad-120"><xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> 시트 구현을 사용자 지정 편집기를 반환 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="1b0ad-120">The <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> method to return a custom editor sheet implementation.</span></span>  
  
-   <span data-ttu-id="1b0ad-121"><xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> 생성자에 식 편집기 시트 구현에 대 한 사용자 지정 초기화 작업을 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="1b0ad-121">The <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> constructor to implement custom initialization actions for your expression editor sheet implementation.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="1b0ad-122">
        <para>사용자 지정 식 편집기 시트를 파생 합니다 <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> 여러 식 속성 값을 기반으로 하는 클래스, 컨트롤 속성 값에 대 한 새로운 식 형식을 정의 하는 식 문자열을 구성 하려는 경우. 파생된 클래스의 구현에 다음을 포함 해야 합니다.-디자인 타임에 설정할 수 있는 식 문자열의 각 고유 값에 대 한 공용 속성입니다.  -구현의 <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> 편집기 시트 속성 값에서 사용자 지정 식 문자열을 구성 하는 메서드입니다.  -선택적으로 생성자 구현 시트 속성 편집기의 초기 값을 설정 합니다.  연결 된 사용자 지정 식 편집기 클래스에서 파생 된 편집기 시트의 인스턴스를 만듭니다를 <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> 메서드 설정 된 컨트롤 속성에 대 한 현재 식 문자열을 사용 하 여 해당 인스턴스를 초기화 및 비주얼 디자이너로 인스턴스를 반환 합니다. 비주얼 디자이너 시트 속성 식을 설정할 수 있습니다 및 호출 된 <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> 입력된 식 시트 속성 값에서 식 문자열을 형성 하는 방법입니다.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="1b0ad-122">
          <para>Derive a custom expression editor sheet from the <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> class, if you are defining a new expression type for control property values and you want to build the expression string based on multiple expression property values. A derived class implementation should contain the following:  -   A public property for each distinct value in the expression string that can be set at design time.  -   An implementation of the <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> method that forms the custom expression string from the editor sheet property values.  -   Optionally, a constructor implementation that sets the initial values of the editor sheet properties.  The associated custom expression editor class creates an instance of the derived editor sheet in the <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> method, initializes that instance with the current expression string set for the control property, and returns the instance to the visual designer. The visual designer allows you to set the expression sheet properties, and then calls the <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> method to form the expression string from the input expression sheet property values.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
    <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
    <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExpressionEditorSheet (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExpressionEditorSheet(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.Design.ExpressionEditorSheet : IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditorSheet" Usage="new System.Web.UI.Design.ExpressionEditorSheet serviceProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">
          <span data-ttu-id="1b0ad-123">디자이너 호스트에서 제공하는 서비스 공급자 구현으로, 추가 디자인 타임 서비스를 가져오는 데 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b0ad-123">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1b0ad-124">
            <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b0ad-124">Initializes a new instance of the <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b0ad-125">때문에 <xref:System.Web.UI.Design.ExpressionEditorSheet> 클래스는 추상 클래스의 인스턴스를 만들 수 없습니다는 <xref:System.Web.UI.Design.ExpressionEditorSheet> 사용 하 여 직접는 <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="1b0ad-125">Because the <xref:System.Web.UI.Design.ExpressionEditorSheet> class is abstract, you cannot create an instance of an <xref:System.Web.UI.Design.ExpressionEditorSheet> directly using the <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1b0ad-126">
            <para>파생 하는 경우는 <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> 클래스에서 재정의 <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /> 생성자에 식 편집기 시트 구현에 대 한 사용자 지정 초기화 작업을 구현 합니다.  추가 식 속성을 구현 하는 사용자 지정 식 편집기 시트 클래스의 식 속성에 대 한 기본 값을 정의할 수는 예를 들어를 <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /> 생성자입니다. 사용자 지정 식 편집기 시트 클래스 식 속성에 대 한 초기 값을 설정 하려면 입력된 매개 변수 값을 사용 하는 추가 공용 생성자 오버 로드를 정의할 수 있습니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1b0ad-126">
              <para>When deriving from the <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> class, override the <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /> constructor to implement custom initialization actions for your expression editor sheet implementation.  For example, a custom expression editor sheet class that implements additional expression properties can define the default values for the expression properties in the <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /> constructor. A custom expression editor sheet class can define additional public constructor overloads that use input parameter values to set the initial values for the expression properties.</para>
            </span>
          </span>
        </block>
        <altmember cref="Overload:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor" />
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="GetExpression">
      <MemberSignature Language="C#" Value="public abstract string GetExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetExpression() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetExpression () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetExpression();" />
      <MemberSignature Language="F#" Value="abstract member GetExpression : unit -&gt; string" Usage="expressionEditorSheet.GetExpression " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1b0ad-127">파생 클래스에서 재정의된 경우 식 편집기 시트 속성 값으로 구성된 식 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b0ad-127">When overridden in a derived class, returns the expression string that is formed by the expression editor sheet property values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1b0ad-128">현재 속성 값의 사용자 지정 식 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b0ad-128">The custom expression string for the current property values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b0ad-129">사용자 지정 식 편집기 시트를 결합 되어 식 문자열을 구성 하는 여러 식 속성에 대 한 디자인 타임 설정을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="1b0ad-129">A custom expression editor sheet contains design-time settings for multiple expression properties, which are combined to form an expression string.</span></span> <span data-ttu-id="1b0ad-130">식 문자열을 사용 하 여 컨트롤 속성 값을 설정할 수 있습니다. 식 작성기는 식 문자열을 런타임에 평가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1b0ad-130">Control property values can be set using expression strings; the expression strings are evaluated at run time by an expression builder.</span></span>  
  
 <span data-ttu-id="1b0ad-131"><xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> 메서드는 현재 식 속성에서 기본 제공 되는 식 문자열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1b0ad-131">The <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> method returns an expression string that is built from the current expression properties.</span></span> <span data-ttu-id="1b0ad-132">비주얼 디자이너 시트 속성 식을 설정할 수 있습니다 및 호출 된 <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> 식 문자열을 가져올 컨트롤 속성 값을 설정 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="1b0ad-132">The visual designer allows you to set the expression sheet properties, and then calls the <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> method to get the expression string and set the control property value.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1b0ad-133">
            <para>사용자 지정 식 편집기 시트를 파생 합니다 <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> 여러 식 속성 값을 기반으로 하는 클래스, 컨트롤 속성 값에 대 한 새로운 식 형식을 정의 하는 식 문자열을 구성 하려는 경우. 파생된 클래스의 구현에 다음을 포함 해야 합니다.-디자인 타임에 설정할 수 있는 식 문자열의 각 고유 값에 대 한 공용 속성입니다.  -구현의 <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> 편집기 시트 속성 값에서 사용자 지정 식 문자열을 구성 하는 메서드입니다.  -선택적으로 생성자 구현 시트 속성 편집기의 초기 값을 설정 합니다.  연결 된 사용자 지정 식 편집기 클래스에서 파생 된 편집기 시트의 인스턴스를 만듭니다를 <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> 메서드를 설정 된 컨트롤 속성에 대 한 현재 식 문자열을 사용 하 여 해당 인스턴스를 초기화 한 다음 시각적 개체에는 인스턴스를 반환 디자이너입니다. 비주얼 디자이너 시트 속성 식을 설정할 수 있습니다 및 호출 된 <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> 입력된 식 시트 속성 값에서 식 문자열을 형성 하는 방법입니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1b0ad-133">
              <para>Derive a custom expression editor sheet from the <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> class, if you are defining a new expression type for control property values and you want to build the expression string based on multiple expression property values. A derived class implementation should contain the following:  -   A public property for each distinct value in the expression string that can be set at design time.  -   An implementation of the <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> method that forms the custom expression string from the editor sheet property values.  -   Optionally, a constructor implementation that sets the initial values of the editor sheet properties.  The associated custom expression editor class creates an instance of the derived editor sheet in the <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> method, initializes that instance with the current expression string set for the control property, and then returns the instance to the visual designer. The visual designer allows you to set the expression sheet properties, and then calls the <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> method to form the expression string from the input expression sheet property values.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public virtual bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ExpressionEditorSheet.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsValid : bool" Usage="System.Web.UI.Design.ExpressionEditorSheet.IsValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1b0ad-134">식 문자열이 유효한지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b0ad-134">Gets a value that indicates whether the expression string is valid.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1b0ad-135">식 문자열이 유효하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b0ad-135">
              <see langword="true" />, if the expression string is valid; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b0ad-136">이 기본 구현은 항상 `true`를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="1b0ad-136">This base implementation always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="ServiceProvider">
      <MemberSignature Language="C#" Value="public IServiceProvider ServiceProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IServiceProvider ServiceProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceProvider As IServiceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IServiceProvider ^ ServiceProvider { IServiceProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceProvider : IServiceProvider" Usage="System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1b0ad-137">식 편집기 시트에서 사용하는 서비스 공급자 구현을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b0ad-137">Gets the service provider implementation that is used by the expression editor sheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1b0ad-138">일반적으로 디자인 호스트에서 제공하며 추가적인 디자인 타임 서비스를 가져오는 데 사용할 수 있는 <see cref="T:System.IServiceProvider" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b0ad-138">An <see cref="T:System.IServiceProvider" />, typically provided by the design host, that can be used to obtain additional design-time services.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b0ad-139">사용 합니다 <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> 설정 하기 위해 생성자는 <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> 사용자 지정 식 편집기 시트를 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="1b0ad-139">Use the <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> constructor to set the <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> implementation for a custom expression editor sheet.</span></span>  
  
 <span data-ttu-id="1b0ad-140"><xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> 디자이너 호스트에서 제공 하는 서비스에 액세스 하려면 속성을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1b0ad-140">The <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> property can be used to access services that are provided by the designer host.</span></span> <span data-ttu-id="1b0ad-141">예를 들어, 호출을 <xref:System.IServiceProvider.GetService%2A> 메서드를 <xref:System.Web.UI.Design.IWebApplication> 인터페이스 프로젝트 항목에 액세스, 문서 또는 비주얼 디자이너를 통해 제공 되는 구성 파일 세부 정보를.</span><span class="sxs-lookup"><span data-stu-id="1b0ad-141">For example, call the <xref:System.IServiceProvider.GetService%2A> method with the <xref:System.Web.UI.Design.IWebApplication> interface to access project items, documents, or configuration file details that are provided through the visual designer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" />
      </Docs>
    </Member>
  </Members>
</Type>