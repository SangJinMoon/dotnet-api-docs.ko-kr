<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ExpressionEditorSheet.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac500a92c41d6071763aeacc5cf80675a148295e317.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">00a92c41d6071763aeacc5cf80675a148295e317</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>Represents a design-time editor sheet for a custom expression.</source>
          <target state="translated">사용자 지정 식에 대한 디자인 타임 편집기 시트를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>This class must be inherited.</source>
          <target state="translated">이 클래스는 상속되어야 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>A custom expression editor sheet lets a developer set properties on a custom expression at design-time.</source>
          <target state="translated">사용자 지정 식 편집기 시트를 사용 하면 디자인 타임에 사용자 지정 식의 속성을 설정 하는 개발자가 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>Control property values can be set using expression strings; the expression strings are evaluated at run time by an expression builder and at design time by an expression editor.</source>
          <target state="translated">식 문자열;를 사용 하 여 컨트롤 속성 값을 설정할 수 있습니다. 식 문자열에는 식 편집기에서 식 작성기에서 런타임 및 디자인 타임에 계산 됩니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>When you browse the <ph id="ph1">&lt;xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A&gt;</ph> property for a control in the design-time properties grid, the visual designer displays a dialog box to set expressions that provide the value for a control property.</source>
          <target state="translated">검색할 때는 <ph id="ph1">&lt;xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A&gt;</ph> 비주얼 디자이너에서 디자인 타임 속성 그리드 컨트롤의 속성을 컨트롤 속성에 대 한 값을 제공 하는 식을 설정 하려면 대화 상자를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>You can select the expression type based on a list of expression prefixes.</source>
          <target state="translated">식 접두사 목록을 기반으로 식 형식을 선택할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>When you select an expression prefix from the list, the visual designer uses the associated <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditor&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet&gt;</ph> objects to evaluate and convert the expression string based on the syntax for that type of expression.</source>
          <target state="translated">목록에서 식 접두사를 선택 하는 경우 비주얼 디자이너 사용 하 여 연결 된 <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditor&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet&gt;</ph> 식의 해당 형식에 대 한 구문을 기반으로 하는 개체를 평가 하 고 식 문자열을 변환 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>The visual designer uses expression editor sheet properties to prompt for one or more strings that combine into the custom expression string.</source>
          <target state="translated">비주얼 디자이너 식 편집기 시트 속성을 사용 하 여 사용자 지정 식 문자열로 결합 하는 하나 이상의 문자열을 요청 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>Typically, to supply a new expression type at design time, you define a unique expression prefix and provide custom <ph id="ph1">&lt;xref:System.Web.Compilation.ExpressionBuilder&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.Design.ExpressionEditor&gt;</ph> implementations.</source>
          <target state="translated">일반적으로 디자인 타임에 새 식 형식을 제공 하려면 있습니다 고유 식 접두사를 정의 하 고 사용자 지정 제공 <ph id="ph1">&lt;xref:System.Web.Compilation.ExpressionBuilder&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.Design.ExpressionEditor&gt;</ph> 구현 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>Optionally, you can provide a custom <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet&gt;</ph> implementation that defines properties that are used to form the expression.</source>
          <target state="translated">필요에 따라 사용자 지정을 제공할 수 있습니다 <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet&gt;</ph> 식을 구성 하는 데 사용 되는 속성을 정의 하는 구현 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>To associate an expression prefix with an expression builder and an expression editor, apply the <ph id="ph1">&lt;xref:System.Web.Compilation.ExpressionEditorAttribute&gt;</ph> attribute and an <ph id="ph2">&lt;xref:System.Web.Compilation.ExpressionPrefixAttribute&gt;</ph> attribute to the custom <ph id="ph3">&lt;xref:System.Web.Configuration.ExpressionBuilder&gt;</ph> class, and then configure the expression prefix for an expression builder in the <ph id="ph4">`expressionBuilders`</ph> element in the Web configuration file.</source>
          <target state="translated">식 접두사 식 작성기와 식 편집기를 연결 하려면 적용 된 <ph id="ph1">&lt;xref:System.Web.Compilation.ExpressionEditorAttribute&gt;</ph> 특성 및 <ph id="ph2">&lt;xref:System.Web.Compilation.ExpressionPrefixAttribute&gt;</ph> 을 사용자 지정 특성 <ph id="ph3">&lt;xref:System.Web.Configuration.ExpressionBuilder&gt;</ph> 클래스를 선택한 다음에 식 작성기에 대 한 식 접두사를 구성 <ph id="ph4">`expressionBuilders`</ph> 웹 구성 파일의 요소입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>The default implementation of the <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A&gt;</ph> method returns a basic editor sheet, which uses a single input string to form the expression.</source>
          <target state="translated">기본 구현에서 <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A&gt;</ph> 메서드 식을 구성 하는 단일 입력된 문자열을 사용 하는 기본 편집기 시트를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>Custom expression editors that are derived from the <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditor&gt;</ph> can override the <ph id="ph2">&lt;xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A&gt;</ph> method to return a custom editor sheet implementation.</source>
          <target state="translated">파생 된 사용자 지정 식 편집기는 <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditor&gt;</ph> 재정의할 수는 <ph id="ph2">&lt;xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A&gt;</ph> 시트 구현을 사용자 지정 편집기를 반환 하는 메서드.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>Typically, a custom editor sheet contains multiple properties that are used to build the expression string.</source>
          <target state="translated">일반적으로 사용자 지정 편집기 시트에는 식 문자열을 구성 하는 데 사용 되는 여러 속성이 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A&gt;</ph> method returns the resulting expression string based on the current expression properties.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A&gt;</ph> 메서드는 현재 식 속성에 따라 결과 식 문자열을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>For example, the <ph id="ph1">&lt;xref:System.Web.UI.Design.ResourceExpressionEditor&gt;</ph> class derives from the <ph id="ph2">&lt;xref:System.Web.UI.Design.ExpressionEditor&gt;</ph> class and provides an implementation for evaluating and associating a resource string reference with a control property at design time.</source>
          <target state="translated">예를 들어는 <ph id="ph1">&lt;xref:System.Web.UI.Design.ResourceExpressionEditor&gt;</ph> 클래스에서 파생 된 <ph id="ph2">&lt;xref:System.Web.UI.Design.ExpressionEditor&gt;</ph> 클래스 하 고 평가 하 고 디자인 타임에 리소스 문자열 참조 컨트롤 속성 연결에 대 한 구현을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>The <ph id="ph1">&lt;xref:System.Web.Compilation.ResourceExpressionBuilder&gt;</ph> class is associated with the expression prefix <ph id="ph2">`Resources`</ph> and the <ph id="ph3">&lt;xref:System.Web.UI.Design.ResourceExpressionEditor&gt;</ph> implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Compilation.ResourceExpressionBuilder&gt;</ph> 클래스 식 접두사와 연결 된 <ph id="ph2">`Resources`</ph> 및 <ph id="ph3">&lt;xref:System.Web.UI.Design.ResourceExpressionEditor&gt;</ph> 구현 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Web.UI.Design.ResourceExpressionEditorSheet&gt;</ph>, which defines the individual properties that form a resource reference expression.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A&gt;</ph> 메서드가 반환 되는 <ph id="ph2">&lt;xref:System.Web.UI.Design.ResourceExpressionEditorSheet&gt;</ph>, 리소스 참조 식을 구성 하는 개별 속성을 정의 하는 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>When you inherit from the <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet&gt;</ph> class, you must override the following members:</source>
          <target state="translated">상속 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet&gt;</ph> 클래스 멤버를 재정의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A&gt;</ph> method to return a custom editor sheet implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A&gt;</ph> 시트 구현을 사용자 지정 편집기를 반환 하는 메서드.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A&gt;</ph> constructor to implement custom initialization actions for your expression editor sheet implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A&gt;</ph> 생성자 식 편집기 시트 구현에 대 한 사용자 지정 초기화 작업을 구현 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>Derive a custom expression editor sheet from the <ph id="ph1">&lt;see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /&gt;</ph> class, if you are defining a new expression type for control property values and you want to build the expression string based on multiple expression property values.</source>
          <target state="translated">사용자 지정 식 편집기 시트에서 파생 되는 <ph id="ph1">&lt;see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /&gt;</ph> 여러 식 속성 값을 기반으로 하는 클래스, 컨트롤 속성 값에 대 한 새 식 형식을 정의 하는 식 문자열을 구성 하려는 경우.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>A derived class implementation should contain the following:</source>
          <target state="translated">파생된 클래스 구현을 다음 포함 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>A public property for each distinct value in the expression string that can be set at design time.</source>
          <target state="translated">디자인 타임에 설정 될 수 있는 식 문자열의 각 고유 값에 대 한 공용 속성입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>An implementation of the <ph id="ph1">&lt;see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /&gt;</ph> method that forms the custom expression string from the editor sheet property values.</source>
          <target state="translated">구현에서 <ph id="ph1">&lt;see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /&gt;</ph> 편집기 시트 속성 값에서 사용자 지정 식 문자열을 구성 하는 메서드.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>Optionally, a constructor implementation that sets the initial values of the editor sheet properties.</source>
          <target state="translated">필요에 따라 생성자 구현 시트 속성 편집기의 초기 값을 설정 하는 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>The associated custom expression editor class creates an instance of the derived editor sheet in the <ph id="ph1">&lt;see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /&gt;</ph> method, initializes that instance with the current expression string set for the control property, and returns the instance to the visual designer.</source>
          <target state="translated">연결 된 사용자 지정 식 편집기 클래스에서 파생 된 편집기 시트의 인스턴스를 만듭니다는 <ph id="ph1">&lt;see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /&gt;</ph> 메서드를 컨트롤 속성에 대해 설정 된 현재 식 문자열로 해당 인스턴스를 초기화 하 고 비주얼 디자이너로 인스턴스를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>The visual designer allows you to set the expression sheet properties, and then calls the <ph id="ph1">&lt;see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /&gt;</ph> method to form the expression string from the input expression sheet property values.</source>
          <target state="translated">비주얼 디자이너 식 시트 속성을 설정할 수 있으며 다음 호출에서 <ph id="ph1">&lt;see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /&gt;</ph> 식 문자열의 입력된 식 시트 속성 값을 형성 하는 메서드.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)">
          <source>A service provider implementation supplied by the designer host, used to obtain additional design-time services.</source>
          <target state="translated">디자이너 호스트에서 제공하는 서비스 공급자 구현으로, 추가 디자인 타임 서비스를 가져오는 데 사용됩니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)">
          <source>Because the <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet&gt;</ph> class is abstract, you cannot create an instance of an <ph id="ph2">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet&gt;</ph> directly using the <ph id="ph3">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet&gt;</ph> 클래스는 추상 클래스의 인스턴스를 만들 수 없습니다는 <ph id="ph2">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet&gt;</ph> 사용 하 여 직접는 <ph id="ph3">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)">
          <source>When deriving from the <ph id="ph1">&lt;see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /&gt;</ph> class, override the <ph id="ph2">&lt;see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /&gt;</ph> constructor to implement custom initialization actions for your expression editor sheet implementation.</source>
          <target state="translated">파생 된 경우는 <ph id="ph1">&lt;see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /&gt;</ph> 클래스, 재정의 <ph id="ph2">&lt;see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /&gt;</ph> 생성자 식 편집기 시트 구현에 대 한 사용자 지정 초기화 작업을 구현 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)">
          <source>For example, a custom expression editor sheet class that implements additional expression properties can define the default values for the expression properties in the <ph id="ph1">&lt;see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /&gt;</ph> constructor.</source>
          <target state="translated">식 추가 속성을 구현 하는 사용자 지정 식 편집기 시트 클래스의 식 속성에 대 한 기본 값을 정의할 수는 예를 들어는 <ph id="ph1">&lt;see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)">
          <source>A custom expression editor sheet class can define additional public constructor overloads that use input parameter values to set the initial values for the expression properties.</source>
          <target state="translated">사용자 지정 식 편집기 시트 클래스 식 속성에 대 한 초기 값을 설정 하려면 입력된 매개 변수 값을 사용 하는 추가 공용 생성자 오버 로드를 정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
          <source>When overridden in a derived class, returns the expression string that is formed by the expression editor sheet property values.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 식 편집기 시트 속성 값으로 구성된 식 문자열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
          <source>The custom expression string for the current property values.</source>
          <target state="translated">현재 속성 값의 사용자 지정 식 문자열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
          <source>A custom expression editor sheet contains design-time settings for multiple expression properties, which are combined to form an expression string.</source>
          <target state="translated">사용자 지정 식 편집기 시트 결합 되어 식 문자열을 구성 하는 여러 식 속성에 대 한 디자인 타임 설정을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
          <source>Control property values can be set using expression strings; the expression strings are evaluated at run time by an expression builder.</source>
          <target state="translated">식 문자열;를 사용 하 여 컨트롤 속성 값을 설정할 수 있습니다. 식 문자열 식 작성기에 의해 런타임에 평가 됩니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A&gt;</ph> method returns an expression string that is built from the current expression properties.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A&gt;</ph> 메서드는 현재 식 속성에서 작성 되는 식 문자열을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
          <source>The visual designer allows you to set the expression sheet properties, and then calls the <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A&gt;</ph> method to get the expression string and set the control property value.</source>
          <target state="translated">비주얼 디자이너 식 시트 속성을 설정할 수 있으며 다음 호출에서 <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A&gt;</ph> 식 문자열을 가져오고 컨트롤 속성 값을 설정 하는 메서드.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
          <source>Derive a custom expression editor sheet from the <ph id="ph1">&lt;see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /&gt;</ph> class, if you are defining a new expression type for control property values and you want to build the expression string based on multiple expression property values.</source>
          <target state="translated">사용자 지정 식 편집기 시트에서 파생 되는 <ph id="ph1">&lt;see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /&gt;</ph> 여러 식 속성 값을 기반으로 하는 클래스, 컨트롤 속성 값에 대 한 새 식 형식을 정의 하는 식 문자열을 구성 하려는 경우.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
          <source>A derived class implementation should contain the following:</source>
          <target state="translated">파생된 클래스 구현을 다음 포함 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
          <source>A public property for each distinct value in the expression string that can be set at design time.</source>
          <target state="translated">디자인 타임에 설정 될 수 있는 식 문자열의 각 고유 값에 대 한 공용 속성입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
          <source>An implementation of the <ph id="ph1">&lt;see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /&gt;</ph> method that forms the custom expression string from the editor sheet property values.</source>
          <target state="translated">구현에서 <ph id="ph1">&lt;see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /&gt;</ph> 편집기 시트 속성 값에서 사용자 지정 식 문자열을 구성 하는 메서드.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
          <source>Optionally, a constructor implementation that sets the initial values of the editor sheet properties.</source>
          <target state="translated">필요에 따라 생성자 구현 시트 속성 편집기의 초기 값을 설정 하는 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
          <source>The associated custom expression editor class creates an instance of the derived editor sheet in the <ph id="ph1">&lt;see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /&gt;</ph> method, initializes that instance with the current expression string set for the control property, and then returns the instance to the visual designer.</source>
          <target state="translated">연결 된 사용자 지정 식 편집기 클래스에서 파생 된 편집기 시트의 인스턴스를 만듭니다는 <ph id="ph1">&lt;see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /&gt;</ph> 메서드를 컨트롤 속성에 대해 설정 된 현재 식 문자열로 해당 인스턴스를 초기화 하 고 다음 시각적 개체에는 인스턴스를 반환 디자이너입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
          <source>The visual designer allows you to set the expression sheet properties, and then calls the <ph id="ph1">&lt;see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /&gt;</ph> method to form the expression string from the input expression sheet property values.</source>
          <target state="translated">비주얼 디자이너 식 시트 속성을 설정할 수 있으며 다음 호출에서 <ph id="ph1">&lt;see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /&gt;</ph> 식 문자열의 입력된 식 시트 속성 값을 형성 하는 메서드.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.Web.UI.Design.ExpressionEditorSheet.IsValid">
          <source>Gets a value that indicates whether the expression string is valid.</source>
          <target state="translated">식 문자열이 유효한지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.Design.ExpressionEditorSheet.IsValid">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>, if the expression string is valid; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">식 문자열이 유효하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.Design.ExpressionEditorSheet.IsValid">
          <source>This base implementation always returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">이 기본 구현은 항상 <ph id="ph1">`true`</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider">
          <source>Gets the service provider implementation that is used by the expression editor sheet.</source>
          <target state="translated">식 편집기 시트에서 사용하는 서비스 공급자 구현을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider">
          <source>An <ph id="ph1">&lt;see cref="T:System.IServiceProvider" /&gt;</ph>, typically provided by the design host, that can be used to obtain additional design-time services.</source>
          <target state="translated">일반적으로 디자인 호스트에서 제공하며 추가적인 디자인 타임 서비스를 가져오는 데 사용할 수 있는 <ph id="ph1">&lt;see cref="T:System.IServiceProvider" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A&gt;</ph> constructor to set the <ph id="ph2">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A&gt;</ph> implementation for a custom expression editor sheet.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A&gt;</ph> 설정 하기 위해 생성자는 <ph id="ph2">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A&gt;</ph> 사용자 지정 식 편집기 시트에 대 한 구현 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A&gt;</ph> property can be used to access services that are provided by the designer host.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A&gt;</ph> 디자이너 호스트를 통해 제공 되는 서비스에 액세스할 수 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider">
          <source>For example, call the <ph id="ph1">&lt;xref:System.IServiceProvider.GetService%2A&gt;</ph> method with the <ph id="ph2">&lt;xref:System.Web.UI.Design.IWebApplication&gt;</ph> interface to access project items, documents, or configuration file details that are provided through the visual designer.</source>
          <target state="translated">예를 들어 호출는 <ph id="ph1">&lt;xref:System.IServiceProvider.GetService%2A&gt;</ph> 사용 하 여 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.Design.IWebApplication&gt;</ph> 액세스 프로젝트 항목, 문서 또는 비주얼 디자이너를 통해 제공 되는 구성 파일 세부 정보에 대 한 인터페이스입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>