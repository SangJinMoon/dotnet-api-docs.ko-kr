<Type Name="ExpressionEditorSheet" FullName="System.Web.UI.Design.ExpressionEditorSheet">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="00a92c41d6071763aeacc5cf80675a148295e317" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30589397" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ExpressionEditorSheet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExpressionEditorSheet extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ExpressionEditorSheet" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExpressionEditorSheet" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionEditorSheet abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="05569-101">사용자 지정 식에 대한 디자인 타임 편집기 시트를 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="05569-101">Represents a design-time editor sheet for a custom expression.</span>
      </span>
      <span data-ttu-id="05569-102">이 클래스는 상속되어야 합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="05569-102">This class must be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05569-103">사용자 지정 식 편집기 시트를 사용 하면 디자인 타임에 사용자 지정 식의 속성을 설정 하는 개발자가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="05569-103">A custom expression editor sheet lets a developer set properties on a custom expression at design-time.</span></span> <span data-ttu-id="05569-104">식 문자열;를 사용 하 여 컨트롤 속성 값을 설정할 수 있습니다. 식 문자열에는 식 편집기에서 식 작성기에서 런타임 및 디자인 타임에 계산 됩니다.</span><span class="sxs-lookup"><span data-stu-id="05569-104">Control property values can be set using expression strings; the expression strings are evaluated at run time by an expression builder and at design time by an expression editor.</span></span>  
  
 <span data-ttu-id="05569-105">검색할 때는 <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> 비주얼 디자이너에서 디자인 타임 속성 그리드 컨트롤의 속성을 컨트롤 속성에 대 한 값을 제공 하는 식을 설정 하려면 대화 상자를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="05569-105">When you browse the <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> property for a control in the design-time properties grid, the visual designer displays a dialog box to set expressions that provide the value for a control property.</span></span> <span data-ttu-id="05569-106">식 접두사 목록을 기반으로 식 형식을 선택할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="05569-106">You can select the expression type based on a list of expression prefixes.</span></span> <span data-ttu-id="05569-107">목록에서 식 접두사를 선택 하는 경우 비주얼 디자이너 사용 하 여 연결 된 <xref:System.Web.UI.Design.ExpressionEditor> 및 <xref:System.Web.UI.Design.ExpressionEditorSheet> 식의 해당 형식에 대 한 구문을 기반으로 하는 개체를 평가 하 고 식 문자열을 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="05569-107">When you select an expression prefix from the list, the visual designer uses the associated <xref:System.Web.UI.Design.ExpressionEditor> and <xref:System.Web.UI.Design.ExpressionEditorSheet> objects to evaluate and convert the expression string based on the syntax for that type of expression.</span></span> <span data-ttu-id="05569-108">비주얼 디자이너 식 편집기 시트 속성을 사용 하 여 사용자 지정 식 문자열로 결합 하는 하나 이상의 문자열을 요청 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="05569-108">The visual designer uses expression editor sheet properties to prompt for one or more strings that combine into the custom expression string.</span></span>  
  
 <span data-ttu-id="05569-109">일반적으로 디자인 타임에 새 식 형식을 제공 하려면 있습니다 고유 식 접두사를 정의 하 고 사용자 지정 제공 <xref:System.Web.Compilation.ExpressionBuilder> 및 <xref:System.Web.UI.Design.ExpressionEditor> 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="05569-109">Typically, to supply a new expression type at design time, you define a unique expression prefix and provide custom <xref:System.Web.Compilation.ExpressionBuilder> and <xref:System.Web.UI.Design.ExpressionEditor> implementations.</span></span> <span data-ttu-id="05569-110">필요에 따라 사용자 지정을 제공할 수 있습니다 <xref:System.Web.UI.Design.ExpressionEditorSheet> 식을 구성 하는 데 사용 되는 속성을 정의 하는 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="05569-110">Optionally, you can provide a custom <xref:System.Web.UI.Design.ExpressionEditorSheet> implementation that defines properties that are used to form the expression.</span></span> <span data-ttu-id="05569-111">식 접두사 식 작성기와 식 편집기를 연결 하려면 적용 된 <xref:System.Web.Compilation.ExpressionEditorAttribute> 특성 및 <xref:System.Web.Compilation.ExpressionPrefixAttribute> 을 사용자 지정 특성 <xref:System.Web.Configuration.ExpressionBuilder> 클래스를 선택한 다음에 식 작성기에 대 한 식 접두사를 구성 `expressionBuilders` 웹 구성 파일의 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="05569-111">To associate an expression prefix with an expression builder and an expression editor, apply the <xref:System.Web.Compilation.ExpressionEditorAttribute> attribute and an <xref:System.Web.Compilation.ExpressionPrefixAttribute> attribute to the custom <xref:System.Web.Configuration.ExpressionBuilder> class, and then configure the expression prefix for an expression builder in the `expressionBuilders` element in the Web configuration file.</span></span>  
  
 <span data-ttu-id="05569-112">기본 구현에서 <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> 메서드 식을 구성 하는 단일 입력된 문자열을 사용 하는 기본 편집기 시트를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="05569-112">The default implementation of the <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> method returns a basic editor sheet, which uses a single input string to form the expression.</span></span> <span data-ttu-id="05569-113">파생 된 사용자 지정 식 편집기는 <xref:System.Web.UI.Design.ExpressionEditor> 재정의할 수는 <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> 시트 구현을 사용자 지정 편집기를 반환 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="05569-113">Custom expression editors that are derived from the <xref:System.Web.UI.Design.ExpressionEditor> can override the <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> method to return a custom editor sheet implementation.</span></span> <span data-ttu-id="05569-114">일반적으로 사용자 지정 편집기 시트에는 식 문자열을 구성 하는 데 사용 되는 여러 속성이 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="05569-114">Typically, a custom editor sheet contains multiple properties that are used to build the expression string.</span></span> <span data-ttu-id="05569-115"><xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> 메서드는 현재 식 속성에 따라 결과 식 문자열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="05569-115">The <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> method returns the resulting expression string based on the current expression properties.</span></span>  
  
 <span data-ttu-id="05569-116">예를 들어는 <xref:System.Web.UI.Design.ResourceExpressionEditor> 클래스에서 파생 된 <xref:System.Web.UI.Design.ExpressionEditor> 클래스 하 고 평가 하 고 디자인 타임에 리소스 문자열 참조 컨트롤 속성 연결에 대 한 구현을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="05569-116">For example, the <xref:System.Web.UI.Design.ResourceExpressionEditor> class derives from the <xref:System.Web.UI.Design.ExpressionEditor> class and provides an implementation for evaluating and associating a resource string reference with a control property at design time.</span></span> <span data-ttu-id="05569-117"><xref:System.Web.Compilation.ResourceExpressionBuilder> 클래스 식 접두사와 연결 된 `Resources` 및 <xref:System.Web.UI.Design.ResourceExpressionEditor> 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="05569-117">The <xref:System.Web.Compilation.ResourceExpressionBuilder> class is associated with the expression prefix `Resources` and the <xref:System.Web.UI.Design.ResourceExpressionEditor> implementation.</span></span> <span data-ttu-id="05569-118"><xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A> 메서드가 반환 되는 <xref:System.Web.UI.Design.ResourceExpressionEditorSheet>, 리소스 참조 식을 구성 하는 개별 속성을 정의 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="05569-118">The <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A> method returns a <xref:System.Web.UI.Design.ResourceExpressionEditorSheet>, which defines the individual properties that form a resource reference expression.</span></span>  
  
 <span data-ttu-id="05569-119">상속 하는 경우는 <xref:System.Web.UI.Design.ExpressionEditorSheet> 클래스 멤버를 재정의 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="05569-119">When you inherit from the <xref:System.Web.UI.Design.ExpressionEditorSheet> class, you must override the following members:</span></span>  
  
-   <span data-ttu-id="05569-120"><xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> 시트 구현을 사용자 지정 편집기를 반환 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="05569-120">The <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> method to return a custom editor sheet implementation.</span></span>  
  
-   <span data-ttu-id="05569-121"><xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> 생성자 식 편집기 시트 구현에 대 한 사용자 지정 초기화 작업을 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="05569-121">The <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> constructor to implement custom initialization actions for your expression editor sheet implementation.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="05569-122">사용자 지정 식 편집기 시트에서 파생 되는 <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> 여러 식 속성 값을 기반으로 하는 클래스, 컨트롤 속성 값에 대 한 새 식 형식을 정의 하는 식 문자열을 구성 하려는 경우.</span>
        <span class="sxs-lookup">
          <span data-stu-id="05569-122">Derive a custom expression editor sheet from the <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> class, if you are defining a new expression type for control property values and you want to build the expression string based on multiple expression property values.</span>
        </span>
        <span data-ttu-id="05569-123">파생된 클래스 구현을 다음 포함 되어야 합니다.</span>
        <span class="sxs-lookup">
          <span data-stu-id="05569-123">A derived class implementation should contain the following:</span>
        </span>  
  
-   <span data-ttu-id="05569-124">디자인 타임에 설정 될 수 있는 식 문자열의 각 고유 값에 대 한 공용 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="05569-124">A public property for each distinct value in the expression string that can be set at design time.</span></span>  
  
-   <span data-ttu-id="05569-125">구현에서 <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> 편집기 시트 속성 값에서 사용자 지정 식 문자열을 구성 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="05569-125">An implementation of the <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> method that forms the custom expression string from the editor sheet property values.</span></span>  
  
-   <span data-ttu-id="05569-126">필요에 따라 생성자 구현 시트 속성 편집기의 초기 값을 설정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="05569-126">Optionally, a constructor implementation that sets the initial values of the editor sheet properties.</span></span><span data-ttu-id="05569-127">연결 된 사용자 지정 식 편집기 클래스에서 파생 된 편집기 시트의 인스턴스를 만듭니다는 <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> 메서드를 컨트롤 속성에 대해 설정 된 현재 식 문자열로 해당 인스턴스를 초기화 하 고 비주얼 디자이너로 인스턴스를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="05569-127">The associated custom expression editor class creates an instance of the derived editor sheet in the <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> method, initializes that instance with the current expression string set for the control property, and returns the instance to the visual designer.</span></span><span data-ttu-id="05569-128">비주얼 디자이너 식 시트 속성을 설정할 수 있으며 다음 호출에서 <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> 식 문자열의 입력된 식 시트 속성 값을 형성 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="05569-128">The visual designer allows you to set the expression sheet properties, and then calls the <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> method to form the expression string from the input expression sheet property values.</span></span></para>
    </block>
    <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
    <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
    <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExpressionEditorSheet (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExpressionEditorSheet(IServiceProvider ^ serviceProvider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">
          <span data-ttu-id="05569-129">디자이너 호스트에서 제공하는 서비스 공급자 구현으로, 추가 디자인 타임 서비스를 가져오는 데 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05569-129">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05569-130">
            <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05569-130">Initializes a new instance of the <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05569-131">때문에 <xref:System.Web.UI.Design.ExpressionEditorSheet> 클래스는 추상 클래스의 인스턴스를 만들 수 없습니다는 <xref:System.Web.UI.Design.ExpressionEditorSheet> 사용 하 여 직접는 <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="05569-131">Because the <xref:System.Web.UI.Design.ExpressionEditorSheet> class is abstract, you cannot create an instance of an <xref:System.Web.UI.Design.ExpressionEditorSheet> directly using the <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="05569-132">파생 된 경우는 <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> 클래스, 재정의 <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /> 생성자 식 편집기 시트 구현에 대 한 사용자 지정 초기화 작업을 구현 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05569-132">When deriving from the <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> class, override the <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /> constructor to implement custom initialization actions for your expression editor sheet implementation.</span>
            </span>
            <span data-ttu-id="05569-133">식 추가 속성을 구현 하는 사용자 지정 식 편집기 시트 클래스의 식 속성에 대 한 기본 값을 정의할 수는 예를 들어는 <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /> 생성자입니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05569-133">For example, a custom expression editor sheet class that implements additional expression properties can define the default values for the expression properties in the <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /> constructor.</span>
            </span>
            <span data-ttu-id="05569-134">사용자 지정 식 편집기 시트 클래스 식 속성에 대 한 초기 값을 설정 하려면 입력된 매개 변수 값을 사용 하는 추가 공용 생성자 오버 로드를 정의할 수 있습니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05569-134">A custom expression editor sheet class can define additional public constructor overloads that use input parameter values to set the initial values for the expression properties.</span>
            </span>
          </para>
        </block>
        <altmember cref="Overload:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor" />
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="GetExpression">
      <MemberSignature Language="C#" Value="public abstract string GetExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetExpression() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetExpression () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetExpression();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="05569-135">파생 클래스에서 재정의된 경우 식 편집기 시트 속성 값으로 구성된 식 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05569-135">When overridden in a derived class, returns the expression string that is formed by the expression editor sheet property values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="05569-136">현재 속성 값의 사용자 지정 식 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05569-136">The custom expression string for the current property values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05569-137">사용자 지정 식 편집기 시트 결합 되어 식 문자열을 구성 하는 여러 식 속성에 대 한 디자인 타임 설정을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="05569-137">A custom expression editor sheet contains design-time settings for multiple expression properties, which are combined to form an expression string.</span></span> <span data-ttu-id="05569-138">식 문자열;를 사용 하 여 컨트롤 속성 값을 설정할 수 있습니다. 식 문자열 식 작성기에 의해 런타임에 평가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="05569-138">Control property values can be set using expression strings; the expression strings are evaluated at run time by an expression builder.</span></span>  
  
 <span data-ttu-id="05569-139"><xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> 메서드는 현재 식 속성에서 작성 되는 식 문자열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="05569-139">The <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> method returns an expression string that is built from the current expression properties.</span></span> <span data-ttu-id="05569-140">비주얼 디자이너 식 시트 속성을 설정할 수 있으며 다음 호출에서 <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> 식 문자열을 가져오고 컨트롤 속성 값을 설정 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="05569-140">The visual designer allows you to set the expression sheet properties, and then calls the <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> method to get the expression string and set the control property value.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="05569-141">사용자 지정 식 편집기 시트에서 파생 되는 <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> 여러 식 속성 값을 기반으로 하는 클래스, 컨트롤 속성 값에 대 한 새 식 형식을 정의 하는 식 문자열을 구성 하려는 경우.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05569-141">Derive a custom expression editor sheet from the <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> class, if you are defining a new expression type for control property values and you want to build the expression string based on multiple expression property values.</span>
            </span>
            <span data-ttu-id="05569-142">파생된 클래스 구현을 다음 포함 되어야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05569-142">A derived class implementation should contain the following:</span>
            </span>  
  
-   <span data-ttu-id="05569-143">디자인 타임에 설정 될 수 있는 식 문자열의 각 고유 값에 대 한 공용 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="05569-143">A public property for each distinct value in the expression string that can be set at design time.</span></span>  
  
-   <span data-ttu-id="05569-144">구현에서 <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> 편집기 시트 속성 값에서 사용자 지정 식 문자열을 구성 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="05569-144">An implementation of the <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> method that forms the custom expression string from the editor sheet property values.</span></span>  
  
-   <span data-ttu-id="05569-145">필요에 따라 생성자 구현 시트 속성 편집기의 초기 값을 설정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="05569-145">Optionally, a constructor implementation that sets the initial values of the editor sheet properties.</span></span><span data-ttu-id="05569-146">연결 된 사용자 지정 식 편집기 클래스에서 파생 된 편집기 시트의 인스턴스를 만듭니다는 <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> 메서드를 컨트롤 속성에 대해 설정 된 현재 식 문자열로 해당 인스턴스를 초기화 하 고 다음 시각적 개체에는 인스턴스를 반환 디자이너입니다.</span><span class="sxs-lookup"><span data-stu-id="05569-146">The associated custom expression editor class creates an instance of the derived editor sheet in the <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> method, initializes that instance with the current expression string set for the control property, and then returns the instance to the visual designer.</span></span><span data-ttu-id="05569-147">비주얼 디자이너 식 시트 속성을 설정할 수 있으며 다음 호출에서 <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> 식 문자열의 입력된 식 시트 속성 값을 형성 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="05569-147">The visual designer allows you to set the expression sheet properties, and then calls the <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> method to form the expression string from the input expression sheet property values.</span></span></para>
        </block>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public virtual bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ExpressionEditorSheet.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsValid { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05569-148">식 문자열이 유효한지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05569-148">Gets a value that indicates whether the expression string is valid.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="05569-149">식 문자열이 유효하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05569-149">
              <see langword="true" />, if the expression string is valid; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05569-150">이 기본 구현은 항상 `true`를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="05569-150">This base implementation always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="ServiceProvider">
      <MemberSignature Language="C#" Value="public IServiceProvider ServiceProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IServiceProvider ServiceProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceProvider As IServiceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IServiceProvider ^ ServiceProvider { IServiceProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05569-151">식 편집기 시트에서 사용하는 서비스 공급자 구현을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05569-151">Gets the service provider implementation that is used by the expression editor sheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="05569-152">일반적으로 디자인 호스트에서 제공하며 추가적인 디자인 타임 서비스를 가져오는 데 사용할 수 있는 <see cref="T:System.IServiceProvider" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05569-152">An <see cref="T:System.IServiceProvider" />, typically provided by the design host, that can be used to obtain additional design-time services.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05569-153">사용 하 여는 <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> 설정 하기 위해 생성자는 <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> 사용자 지정 식 편집기 시트에 대 한 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="05569-153">Use the <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> constructor to set the <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> implementation for a custom expression editor sheet.</span></span>  
  
 <span data-ttu-id="05569-154"><xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> 디자이너 호스트를 통해 제공 되는 서비스에 액세스할 수 속성을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="05569-154">The <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> property can be used to access services that are provided by the designer host.</span></span> <span data-ttu-id="05569-155">예를 들어 호출는 <xref:System.IServiceProvider.GetService%2A> 사용 하 여 메서드는 <xref:System.Web.UI.Design.IWebApplication> 액세스 프로젝트 항목, 문서 또는 비주얼 디자이너를 통해 제공 되는 구성 파일 세부 정보에 대 한 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="05569-155">For example, call the <xref:System.IServiceProvider.GetService%2A> method with the <xref:System.Web.UI.Design.IWebApplication> interface to access project items, documents, or configuration file details that are provided through the visual designer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" />
      </Docs>
    </Member>
  </Members>
</Type>