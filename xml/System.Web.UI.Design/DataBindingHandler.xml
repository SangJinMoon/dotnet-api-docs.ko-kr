<Type Name="DataBindingHandler" FullName="System.Web.UI.Design.DataBindingHandler">
  <TypeSignature Language="C#" Value="public abstract class DataBindingHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DataBindingHandler extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.DataBindingHandler" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DataBindingHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataBindingHandler abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="eef15-101">데이터 바인딩 처리기에 대한 기본 클래스를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="eef15-101">Provides a base class for a data-binding handler.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eef15-102"><xref:System.Web.UI.Design.DataBindingHandler> 데이터 바인딩 처리기에 대 한 기본 클래스를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="eef15-102"><xref:System.Web.UI.Design.DataBindingHandler> provides a base class for data-binding handlers.</span></span> <span data-ttu-id="eef15-103">데이터 바인딩 처리기 디자인 화면에 컨트롤의 의미 있는 표시할 수 있도록 데이터 바인딩을 수행 하려면 디자이너 내에서 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eef15-103">A data-binding handler can be used within a designer to perform data-binding to enable a meaningful display of the control on the design surface.</span></span> <span data-ttu-id="eef15-104">일반적으로 컨트롤의 디자이너는이 기능을 담당 합니다.</span><span class="sxs-lookup"><span data-stu-id="eef15-104">Typically a control's designer is responsible for this functionality.</span></span> <span data-ttu-id="eef15-105">그러나 때 컨트롤은 디자인 화면에서 라이브와 같은 다른 컨트롤의 템플릿 내에서 없습니다는 디자이너와 지정 된 경우 데이터 바인딩 처리기에서이 기능을 제공 된 <xref:System.Web.UI.DataBindingHandlerAttribute> 컨트롤에 대 한 코드에서 .</span><span class="sxs-lookup"><span data-stu-id="eef15-105">However, when a control is not live on the design surface, such as within the template of another control, it does not have a designer, and this functionality is provided by a data-binding handler if one has been specified with a <xref:System.Web.UI.DataBindingHandlerAttribute> in the code for the control.</span></span>  
  
 <span data-ttu-id="eef15-106">데이터 바인딩 처리기를 사용 하려면 데이터 바인딩된 속성 또는 속성에 있어야는 <xref:System.Web.UI.DataBindingHandlerAttribute> 바인딩 데이터 처리기의 유형을 나타내는 해당 코드 내에서 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="eef15-106">To use a data-binding handler, the control which has the data-bound property or properties must have a <xref:System.Web.UI.DataBindingHandlerAttribute> specified within its code that indicates the type of data-binding handler to use.</span></span>  
  
 <span data-ttu-id="eef15-107">예를 들어는 <xref:System.Web.UI.WebControls.Label> 컨트롤 연관는 <xref:System.Web.UI.Design.TextDataBindingHandler> 통해 클래스는 <xref:System.Web.UI.DataBindingHandlerAttribute> 에 대 한 코드에는 <xref:System.Web.UI.WebControls.Label> 클래스.</span><span class="sxs-lookup"><span data-stu-id="eef15-107">For example, the <xref:System.Web.UI.WebControls.Label> control is associated with the <xref:System.Web.UI.Design.TextDataBindingHandler> class through a <xref:System.Web.UI.DataBindingHandlerAttribute> in the code for the <xref:System.Web.UI.WebControls.Label> class.</span></span> <span data-ttu-id="eef15-108">에 대 한 템플릿 내에서 한 <xref:System.Web.UI.WebControls.DataList>, <xref:System.Web.UI.WebControls.Label> 레이블에 "데이터 바인딩된" 이라는 단어를 표시 하는 컨트롤의 텍스트 속성이 바인딩된 데이터 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="eef15-108">Within a template for a <xref:System.Web.UI.WebControls.DataList>, a <xref:System.Web.UI.WebControls.Label> control whose text property has been data bound displays the word "DataBound" on the label.</span></span> <span data-ttu-id="eef15-109">데이터 바인딩 처리기 없이 레이블이 표시 되지 디자인 타임에 디자인 타임에는 템플릿 기반 컨트롤에서 데이터 바인딩된 속성을 바인딩하는 디자이너는 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="eef15-109">Without the data-binding handler, the label would be invisible at design-time, as it does not have a designer to bind its data-bound properties while in a templated control at design-time.</span></span>  
  
 <span data-ttu-id="eef15-110">데이터 바인딩 처리기를 구현 하려면이 클래스와 구현 클래스에서 파생 된 새 클래스를 정의 고 <xref:System.Web.UI.Design.DataBindingHandler.DataBindControl%2A> 적절 한 속성을 설정 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="eef15-110">To implement a data-binding handler, define a new class that derives from this class and implement the <xref:System.Web.UI.Design.DataBindingHandler.DataBindControl%2A> method to set the appropriate properties.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.DataBindingHandlerAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataBindingHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataBindingHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DataBindingHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eef15-111"><see cref="T:System.Web.UI.Design.DataBindingHandler" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="eef15-111">Initializes a new instance of the <see cref="T:System.Web.UI.Design.DataBindingHandler" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindControl">
      <MemberSignature Language="C#" Value="public abstract void DataBindControl (System.ComponentModel.Design.IDesignerHost designerHost, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DataBindControl(class System.ComponentModel.Design.IDesignerHost designerHost, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataBindingHandler.DataBindControl(System.ComponentModel.Design.IDesignerHost,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void DataBindControl(System::ComponentModel::Design::IDesignerHost ^ designerHost, System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="designerHost" Type="System.ComponentModel.Design.IDesignerHost" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="designerHost"><span data-ttu-id="eef15-112">문서에 대한 <see cref="T:System.ComponentModel.Design.IDesignerHost" />입니다.</span><span class="sxs-lookup"><span data-stu-id="eef15-112">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the document.</span></span></param>
        <param name="control"><span data-ttu-id="eef15-113">바인딩할 <see cref="T:System.Web.UI.Control" />입니다.</span><span class="sxs-lookup"><span data-stu-id="eef15-113">The <see cref="T:System.Web.UI.Control" /> to bind.</span></span></param>
        <summary><span data-ttu-id="eef15-114">지정된 컨트롤을 바인딩합니다.</span><span class="sxs-lookup"><span data-stu-id="eef15-114">Binds the specified control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eef15-115">이 메서드는 사용자 지정 데이터 바인딩 처리기에 기능을 제공 하기 위해 파생된 클래스에서 구현 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="eef15-115">This method should be implemented in a derived class to provide functionality to a custom data-binding handler.</span></span> <span data-ttu-id="eef15-116">데이터 바인딩에 대 한 논리는이 메서드 내에 구현 되어야 하며 데이터 바인딩 처리기 속성 또는 속성을 바인딩하는 형식에 따라 달라질 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eef15-116">The logic for the data binding should be implemented within this method, and can be specific to the type or types that the data-binding handler is to bind a property or properties on.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="eef15-117">대부분의 데이터 바인딩 처리기를 컨트롤에 데이터 바인딩 컬렉션을 검사 해야 합니다를 사용 하는 <see cref="T:System.Web.UI.IDataBindingsAccessor" /> 인터페이스를 처리할 수 있는 특정 속성이 데이터 바인딩 지 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="eef15-117">Most data binding handlers will need to examine the data bindings collection on the control, using the <see cref="T:System.Web.UI.IDataBindingsAccessor" /> interface, to determine if any specific properties it can handle are data-bound.</span></span></para>
        </block>
        <altmember cref="T:System.Web.UI.IDataBindingsAccessor" />
      </Docs>
    </Member>
  </Members>
</Type>