<Type Name="TextDataBindingHandler" FullName="System.Web.UI.Design.TextDataBindingHandler">
  <TypeSignature Language="C#" Value="public class TextDataBindingHandler : System.Web.UI.Design.DataBindingHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextDataBindingHandler extends System.Web.UI.Design.DataBindingHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.TextDataBindingHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class TextDataBindingHandler&#xA;Inherits DataBindingHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextDataBindingHandler : System::Web::UI::Design::DataBindingHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.DataBindingHandler</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="75e2c-101">디자인 타임에 데이터 바인딩된 컨트롤에 대한 데이터 바인딩 처리기를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="75e2c-101">Provides a data-binding handler for a data-bound control at design time.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75e2c-102"><xref:System.Web.UI.Design.TextDataBindingHandler> 개체는 디자인 타임에 데이터 바인딩 텍스트 속성에 데이터를 제공할 수 있는 데이터 바인딩 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="75e2c-102">The <xref:System.Web.UI.Design.TextDataBindingHandler> object is a data-binding handler that can provide data to a data-bound text property at design time.</span></span> <span data-ttu-id="75e2c-103">데이터 바인딩 처리기를 제공 하는 데이터에 대 한 데이터 바인딩된 속성 있는 컨트롤에 대 한 디자이너가 없을 때 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="75e2c-103">Data-binding handlers are used when there is no designer for the control present that would otherwise provide the data for the data bound property.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.DataBindingHandler" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextDataBindingHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.TextDataBindingHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextDataBindingHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="75e2c-104"><see cref="T:System.Web.UI.Design.TextDataBindingHandler" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="75e2c-104">Initializes a new instance of the <see cref="T:System.Web.UI.Design.TextDataBindingHandler" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.Design.DataBindingHandler" />
      </Docs>
    </Member>
    <Member MemberName="DataBindControl">
      <MemberSignature Language="C#" Value="public override void DataBindControl (System.ComponentModel.Design.IDesignerHost designerHost, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBindControl(class System.ComponentModel.Design.IDesignerHost designerHost, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.TextDataBindingHandler.DataBindControl(System.ComponentModel.Design.IDesignerHost,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBindControl(System::ComponentModel::Design::IDesignerHost ^ designerHost, System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="designerHost" Type="System.ComponentModel.Design.IDesignerHost" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="designerHost"><span data-ttu-id="75e2c-105">컨트롤을 포함하는 문서에 대한 <see cref="T:System.ComponentModel.Design.IDesignerHost" />를 구현하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75e2c-105">An object implementing <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the document that contains the control.</span></span></param>
        <param name="control"><span data-ttu-id="75e2c-106">데이터 바인딩할 <see cref="T:System.Web.UI.Control" />입니다.</span><span class="sxs-lookup"><span data-stu-id="75e2c-106">The <see cref="T:System.Web.UI.Control" /> to data-bind.</span></span></param>
        <summary><span data-ttu-id="75e2c-107">지정된 컨트롤을 데이터 바인딩합니다.</span><span class="sxs-lookup"><span data-stu-id="75e2c-107">Data-binds the specified control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75e2c-108"><xref:System.Web.UI.Design.TextDataBindingHandler.DataBindControl%2A> 방식의 <xref:System.Web.UI.Design.TextDataBindingHandler> 설정의 `Text` 샘플 데이터 문자열에 있는 경우 컨트롤의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75e2c-108">The <xref:System.Web.UI.Design.TextDataBindingHandler.DataBindControl%2A> method of <xref:System.Web.UI.Design.TextDataBindingHandler> sets the `Text` property of the control, if it exists, to a sample data string.</span></span>  
  
 <span data-ttu-id="75e2c-109">이 메서드는 사용자 지정 데이터 바인딩 처리기에 기능을 제공 하기 위해 파생된 클래스에서 구현 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="75e2c-109">This method should be implemented in a derived class to provide functionality to a custom data-binding handler.</span></span> <span data-ttu-id="75e2c-110">데이터 바인딩에 대 한 논리는이 메서드 내에 구현 되어야 하며 처리기 바인딩 속성 또는 속성에 형식에 따라 달라질 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75e2c-110">The logic for the data-binding should be implemented within this method, and can be specific to the type or types that the handler is binding a property or properties on.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="75e2c-111">대부분의 데이터 바인딩 처리기를 사용 하 여 컨트롤에 데이터 바인딩 컬렉션을 검사 해야 합니다.는 <see cref="T:System.Web.UI.IDataBindingsAccessor" /> 인터페이스를 처리할 수 있는 특정 속성이 데이터 바인딩 지 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="75e2c-111">Most data binding handlers need to examine the data-bindings collection on the control using the <see cref="T:System.Web.UI.IDataBindingsAccessor" /> interface to determine if any specific properties it can handle are data-bound.</span></span></para>
        </block>
        <altmember cref="T:System.Web.UI.Design.DataBindingHandler" />
      </Docs>
    </Member>
  </Members>
</Type>