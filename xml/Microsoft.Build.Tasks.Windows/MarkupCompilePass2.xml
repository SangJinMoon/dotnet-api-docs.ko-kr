<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MarkupCompilePass2.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54bfb62343c3a834b09caa94aad9f8fc40f8a9bca.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4bfb62343c3a834b09caa94aad9f8fc40f8a9bca</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:Microsoft.Build.Tasks.Windows.MarkupCompilePass2">
          <source>Implements the <bpt id="p1">&lt;c&gt;</bpt>MarkupCompilePass2<ept id="p1">&lt;/c&gt;</ept> task.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>MarkupCompilePass2<ept id="p1">&lt;/c&gt;</ept> 작업을 구현합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:Microsoft.Build.Tasks.Windows.MarkupCompilePass2">
          <source>Use the <bpt id="p1">&lt;c&gt;</bpt>MarkupCompilePass2<ept id="p1">&lt;/c&gt;</ept> element in your project file to create and execute this task.</source>
          <target state="translated">프로젝트 파일의 <bpt id="p1">&lt;c&gt;</bpt>MarkupCompilePass2<ept id="p1">&lt;/c&gt;</ept> 요소를 사용하여 이 작업을 만들고 실행합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:Microsoft.Build.Tasks.Windows.MarkupCompilePass2">
          <source>For usage and parameter information, see <bpt id="p1">[</bpt>MarkupCompilePass2<ept id="p1">](http://msdn.microsoft.com/library/1d25689a-d21f-4b05-be26-95aa0ed4fd03)</ept>.</source>
          <target state="translated">사용 및 매개 변수 정보는 <bpt id="p1">[</bpt>MarkupCompilePass2<ept id="p1">](http://msdn.microsoft.com/library/1d25689a-d21f-4b05-be26-95aa0ed4fd03)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:Microsoft.Build.Tasks.Windows.MarkupCompilePass2" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:Microsoft.Build.Tasks.Windows.MarkupCompilePass2" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.AlwaysCompileMarkupFilesInSeparateDomain">
          <source>Gets or sets a value that indicates whether to run the compilation in second application domain.</source>
          <target state="translated">두 번째 응용 프로그램 도메인에서 컴파일을 실행할지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.AlwaysCompileMarkupFilesInSeparateDomain">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to run the compilation in second application domain; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">두 번째 응용 프로그램 도메인에서 컴파일을 실행하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.AssembliesGeneratedDuringBuild">
          <source>Gets or sets a list of reference assemblies that change during the build cycle.</source>
          <target state="translated">빌드 주기 동안 변경되는 참조 어셈블리 목록을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.AssembliesGeneratedDuringBuild">
          <source>The list of reference assemblies that change during the build cycle.</source>
          <target state="translated">빌드 주기 동안 변경되는 참조 어셈블리 목록입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.AssemblyName">
          <source>Gets or sets the short name of assembly that will be generated for this project.</source>
          <target state="translated">이 프로젝트에 대해 생성될 어셈블리의 약식 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.AssemblyName">
          <source>The short name of assembly which will be generated for this project.</source>
          <target state="translated">이 프로젝트에 대해 생성될 어셈블리의 약식 이름입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.Execute">
          <source>Executes a task.</source>
          <target state="translated">작업을 실행합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.Execute">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the task executed successfully; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">작업이 성공적으로 실행되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.GeneratedBaml">
          <source>Gets or sets the generated <ph id="ph1">[!INCLUDE[TLA#tla_baml](~/includes/tlasharptla-baml-md.md)]</ph> files.</source>
          <target state="translated">생성된 <ph id="ph1">[!INCLUDE[TLA#tla_baml](~/includes/tlasharptla-baml-md.md)]</ph> 파일을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.GeneratedBaml">
          <source>The generated <ph id="ph1">[!INCLUDE[TLA#tla_baml](~/includes/tlasharptla-baml-md.md)]</ph> files.</source>
          <target state="translated">생성된 <ph id="ph1">[!INCLUDE[TLA#tla_baml](~/includes/tlasharptla-baml-md.md)]</ph> 파일입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.KnownReferencePaths">
          <source>Gets or sets the paths of referenced assemblies that do not change during the build procedure.</source>
          <target state="translated">빌드 프로시저 동안 변경되지 않는 참조 어셈블리의 경로를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.KnownReferencePaths">
          <source>The paths of referenced assemblies that do not change during the build procedure.</source>
          <target state="translated">빌드 프로시저 동안 변경되지 않는 참조 어셈블리의 경로입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.Language">
          <source>Gets or sets the managed language that the compiler supports.</source>
          <target state="translated">컴파일러가 지원하는 관리되는 언어를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.Language">
          <source>The managed language that the compiler supports.</source>
          <target state="translated">컴파일러가 지원하는 관리되는 언어입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.Language">
          <source>The valid values are <bpt id="p1">**</bpt>C#<ept id="p1">**</ept>, <bpt id="p2">**</bpt>VB<ept id="p2">**</ept>, <bpt id="p3">**</bpt>JScript<ept id="p3">**</ept>, and <bpt id="p4">**</bpt>C++<ept id="p4">**</ept>.</source>
          <target state="translated">The valid values are <bpt id="p1">**</bpt>C#<ept id="p1">**</ept>, <bpt id="p2">**</bpt>VB<ept id="p2">**</ept>, <bpt id="p3">**</bpt>JScript<ept id="p3">**</ept>, and <bpt id="p4">**</bpt>C++<ept id="p4">**</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.LocalizationDirectivesToLocFile">
          <source>Gets or sets a value that specifies how to generate localization information for each <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> file.</source>
          <target state="translated">각 <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> 파일에 대한 지역화 정보를 생성하는 방법을 지정하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.LocalizationDirectivesToLocFile">
          <source>A value that specifies how to generate localization information for each <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> file.</source>
          <target state="translated">각 소스 <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> 파일에 대한 지역화 정보를 생성하는 방법을 지정하는 값입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.LocalizationDirectivesToLocFile">
          <source>The valid values are <bpt id="p1">**</bpt>None<ept id="p1">**</ept>, <bpt id="p2">**</bpt>CommentsOnly<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>All<ept id="p3">**</ept>.</source>
          <target state="translated">유효한 값은 <bpt id="p1">**</bpt>None<ept id="p1">**</ept>, <bpt id="p2">**</bpt>CommentsOnly<ept id="p2">**</ept>, 및 <bpt id="p3">**</bpt>모든<ept id="p3">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.OutputPath">
          <source>Gets or sets the location of generated code files.</source>
          <target state="translated">생성되는 코드 파일의 위치를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.OutputPath">
          <source>The location of generated code files.</source>
          <target state="translated">생성된 코드 파일의 목록입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.OutputType">
          <source>Gets or sets the output type of the assembly.</source>
          <target state="translated">어셈블리의 출력 형식을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.OutputType">
          <source>The type of assembly that is generated by a project.</source>
          <target state="translated">프로젝트에 의해 생성되는 어셈블리의 형식입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.OutputType">
          <source>The valid values are <bpt id="p1">**</bpt>winexe<ept id="p1">**</ept>, <bpt id="p2">**</bpt>exe<ept id="p2">**</ept>, <bpt id="p3">**</bpt>library<ept id="p3">**</ept>, and <bpt id="p4">**</bpt>netmodule<ept id="p4">**</ept>.</source>
          <target state="translated">유효한 값은 <bpt id="p1">**</bpt>winexe<ept id="p1">**</ept>, <bpt id="p2">**</bpt>exe<ept id="p2">**</ept>, <bpt id="p3">**</bpt>라이브러리<ept id="p3">**</ept>, 및 <bpt id="p4">**</bpt>netmodule<ept id="p4">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.References">
          <source>Gets or sets the assembly references.</source>
          <target state="translated">어셈블리 참조를 설정하거나 가져옵니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.References">
          <source>The assembly references.</source>
          <target state="translated">어셈블리 참조입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.RootNamespace">
          <source>Gets or sets the root namespace of the classes inside the project.</source>
          <target state="translated">프로젝트 내 클래스의 루트 네임스페이스를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.RootNamespace">
          <source>The root namespace of the classes inside the project.</source>
          <target state="translated">프로젝트 내 클래스의 루트 네임스페이스입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.XamlDebuggingInformation">
          <source>Gets or sets a value that indicates whether diagnostic information is generated and included in the compiled <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> in order to aid debugging.</source>
          <target state="translated">디버깅에 도움이 되도록 진단 정보가 생성되어 컴파일된 <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>에 포함되는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.XamlDebuggingInformation">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if diagnostic information is generated and included in the compiled <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> in order to aid debugging; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">디버깅에 도움이 되도록 진단 정보가 생성되어 컴파일된 <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>에 포함되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>