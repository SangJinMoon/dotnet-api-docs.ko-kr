<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="RemotingServices.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5496e861bc5f6823c52d36b630c155e43e65e582c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">496e861bc5f6823c52d36b630c155e43e65e582c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.Remoting.RemotingServices">
          <source>Provides several methods for using and publishing remoted objects and proxies.</source>
          <target state="translated">원격 개체와 프록시를 사용하고 게시할 수 있도록 여러 메서드를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Runtime.Remoting.RemotingServices">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Remoting.RemotingServices">
          <source>Unless you are a service provider dealing with issues such as activation, lifetime management, or transactions, you do not need to distinguish between proxy references and object references.</source>
          <target state="translated">정품 인증, 수명 관리 또는 transactions와 같은 문제를 다루는 서비스 공급자 인 경우 하지 않는 한 프록시 참조 한 개체 참조를 구분할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Remoting.RemotingServices">
          <source>The remoting infrastructure uses transparent proxies that give the impression that the remote objects reside in the client's space.</source>
          <target state="translated">원격 인프라는 원격 개체는 클라이언트의 공간에 상주 하는 것 처럼 보일 투명 프록시를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Remoting.RemotingServices">
          <source>Proxies achieve this by forwarding calls made on them to the real objects at remote locations.</source>
          <target state="translated">프록시는 원격 위치의 실제 개체에에 대 한 호출을 전달 하 여이 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.Runtime.Remoting.RemotingServices">
          <source>Creates a proxy for a well-known object.</source>
          <target state="translated">잘 알려진 개체에 대한 프록시를 만듭니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of a well-known object on the server end to which you want to connect.</source>
          <target state="translated">연결하려고 하는 서버 쪽에 있는 잘 알려진 개체의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String)">
          <source>The URL of the server class.</source>
          <target state="translated">서버 클래스의 URL입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String)">
          <source>Creates a proxy for a well-known object, given the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> and URL.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>과 URL이 있는 잘 알려진 개체에 대한 프록시를 만듭니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String)">
          <source>A proxy to the remote object that points to an endpoint served by the specified well-known object.</source>
          <target state="translated">지정된 잘 알려진 개체의 끝점을 가리키는 원격 개체에 대한 프록시입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String)">
          <source>The returned proxy object points to an endpoint served by the specified well-known object.</source>
          <target state="translated">반환 된 프록시 개체는 지정된 된 잘 알려진 개체에서 끝점을 가리킵니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String)">
          <source>No messages are sent over the network until a method is called on the proxy.</source>
          <target state="translated">프록시에는 메서드를 호출할 때까지 메시지가 네트워크를 통해 전송 됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Runtime.Remoting.RemotingServices.Connect%2A&gt;</ph> method to create a proxy to a well-known object.</source>
          <target state="translated">다음 코드 예제에 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Runtime.Remoting.RemotingServices.Connect%2A&gt;</ph> 방법을 잘 알려진 개체에 대 한 프록시를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String)">
          <source>The immediate caller does not have permission to configure remoting types and channels.</source>
          <target state="translated">직접 실행 호출자에 원격 형식 및 채널을 구성할 수 있는 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String)">
          <source>for configuration of the remoting infrastructure.</source>
          <target state="translated">에 대 한 원격 인프라의 구성입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; Permission value: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /&gt;</ph></source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; 권한 값: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the well-known object to which you want to connect.</source>
          <target state="translated">연결하려고 하는 잘 알려진 개체의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String,System.Object)">
          <source>The URL of the well-known object.</source>
          <target state="translated">잘 알려진 개체의 URL입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String,System.Object)">
          <source>Channel specific data.</source>
          <target state="translated">채널 관련 데이터이며,</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String,System.Object)">
          <source>Can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String,System.Object)">
          <source>Creates a proxy for a well-known object, given the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, URL, and channel-specific data.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>과 URL 및 채널 관련 데이터가 잘 알려진 개체에 대한 프록시를 만듭니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String,System.Object)">
          <source>A proxy that points to an endpoint that is served by the requested well-known object.</source>
          <target state="translated">요청한 잘 알려진 개체의 끝점을 가리키는 프록시입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String,System.Object)">
          <source>The returned proxy object points to an endpoint served by the specified well-known object.</source>
          <target state="translated">반환 된 프록시 개체는 지정된 된 잘 알려진 개체에서 끝점을 가리킵니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String,System.Object)">
          <source>No messages are sent over the network until a method is called on the proxy.</source>
          <target state="translated">프록시에는 메서드를 호출할 때까지 메시지가 네트워크를 통해 전송 됩니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String,System.Object)">
          <source>The <ph id="ph1">`data`</ph> object is used to communicate information to the channel, and is passed to the <ph id="ph2">&lt;xref:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">`data`</ph> 개체는 채널에 대 한 정보를 전달 하는 데 사용 되 고 전달 되는 <ph id="ph2">&lt;xref:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String,System.Object)">
          <source>The immediate caller does not have permission to configure remoting types and channels.</source>
          <target state="translated">직접 실행 호출자에 원격 형식 및 채널을 구성할 수 있는 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String,System.Object)">
          <source>for configuration of the remoting infrastructure.</source>
          <target state="translated">에 대 한 원격 인프라의 구성입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String,System.Object)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; Permission value: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /&gt;</ph></source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; 권한 값: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Disconnect(System.MarshalByRefObject)">
          <source>Object to disconnect from its channel.</source>
          <target state="translated">해당 채널로부터의 연결을 끊을 개체입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Disconnect(System.MarshalByRefObject)">
          <source>Stops an object from receiving any further messages through the registered remoting channels.</source>
          <target state="translated">등록된 원격 채널을 통해 개체가 메시지를 더 이상 받지 않도록 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Disconnect(System.MarshalByRefObject)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the object was disconnected from the registered remoting channels successfully; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">등록된 원격 채널에서 개체의 연결이 끊어졌으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Disconnect(System.MarshalByRefObject)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Runtime.Remoting.RemotingServices.Disconnect%2A&gt;</ph> method to disconnect an object from the remoting channels.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Runtime.Remoting.RemotingServices.Disconnect%2A&gt;</ph> 메서드를 원격 채널에서 개체를 분리 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Disconnect(System.MarshalByRefObject)">
          <source>The <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Disconnect(System.MarshalByRefObject)">
          <source>The <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> parameter is a proxy.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> 매개 변수가 프록시인 경우</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Disconnect(System.MarshalByRefObject)">
          <source>The immediate caller does not have permission to configure remoting types and channels.</source>
          <target state="translated">직접 실행 호출자에 원격 형식 및 채널을 구성할 수 있는 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Disconnect(System.MarshalByRefObject)">
          <source>for configuration of the remoting infrastructure.</source>
          <target state="translated">에 대 한 원격 인프라의 구성입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Disconnect(System.MarshalByRefObject)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; Permission value: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /&gt;</ph></source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; 권한 값: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.ExecuteMessage(System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMethodCallMessage)">
          <source>The remote object whose method you want to call.</source>
          <target state="translated">호출하려는 메서드가 들어 있는 원격 개체입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.ExecuteMessage(System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMethodCallMessage)">
          <source>A method call message to the specified remote object's method.</source>
          <target state="translated">지정된 원격 개체의 메서드에 대한 메서드 호출 메시지입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.ExecuteMessage(System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMethodCallMessage)">
          <source>Connects to the specified remote object, and executes the provided <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Messaging.IMethodCallMessage" /&gt;</ph> on it.</source>
          <target state="translated">지정된 원격 개체에 연결한 다음, 제공된 <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Messaging.IMethodCallMessage" /&gt;</ph>를 해당 개체에서 실행합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.ExecuteMessage(System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMethodCallMessage)">
          <source>The response of the remote method.</source>
          <target state="translated">원격 메서드의 응답입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.ExecuteMessage(System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMethodCallMessage)">
          <source>The current method is used in special cases by the server to forward the specified method call to another, possibly remote, object.</source>
          <target state="translated">현재 메서드는 다른, 가능 하면 원격 개체에 지정 된 메서드 호출을 전달 하는 서버에서 특별 한 경우에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.ExecuteMessage(System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMethodCallMessage)">
          <source>This method can be called only when the caller is in the appropriate context.</source>
          <target state="translated">이 메서드는 호출자가 적절 한 컨텍스트에 있는 경우에 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.ExecuteMessage(System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMethodCallMessage)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Runtime.Remoting.RemotingServices.ExecuteMessage%2A&gt;</ph> method to forward method calls to remote objects.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Runtime.Remoting.RemotingServices.ExecuteMessage%2A&gt;</ph> 원격 개체에 메서드 호출을 전달 하는 메서드.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.ExecuteMessage(System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMethodCallMessage)">
          <source>The immediate caller does not have infrastructure permission.</source>
          <target state="translated">직접 실행 호출자에 인프라 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.ExecuteMessage(System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMethodCallMessage)">
          <source>The method was called from a context other than the native context of the object.</source>
          <target state="translated">메서드가 개체의 기본 컨텍스트가 아닌 컨텍스트에서 호출된 경우</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.ExecuteMessage(System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMethodCallMessage)">
          <source>for operating with infrastructure code.</source>
          <target state="translated">에 인프라 코드와 작동 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.ExecuteMessage(System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMethodCallMessage)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; Permission value: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /&gt;</ph></source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; 권한 값: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.GetEnvoyChainForProxy(System.MarshalByRefObject)">
          <source>The proxy of the remote object that requested envoy sinks are associated with.</source>
          <target state="translated">요청한 엔보이 싱크와 연결된 원격 개체의 프록시입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.GetEnvoyChainForProxy(System.MarshalByRefObject)">
          <source>Returns a chain of envoy sinks that should be used when sending messages to the remote object represented by the specified proxy.</source>
          <target state="translated">지정된 프록시가 가리키는 원격 개체에 메시지를 보낼 때 사용하는 엔보이 싱크 체인을 반환합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.GetEnvoyChainForProxy(System.MarshalByRefObject)">
          <source>A chain of envoy sinks associated with the specified proxy.</source>
          <target state="translated">지정된 프록시와 연결된 엔보이 싱크 체인입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetEnvoyChainForProxy(System.MarshalByRefObject)">
          <source>Envoy sinks are sinks sent along with the <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> of an object that is used when returning messages to that object.</source>
          <target state="translated">엔보이 싱크는와 함께 보내는 싱크는 <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> 메시지 해당 개체를 반환할 때 사용 되는 개체입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetEnvoyChainForProxy(System.MarshalByRefObject)">
          <source>The current method returns the envoy sinks that are used during communication between the proxy of the object and the object itself.</source>
          <target state="translated">현재 메서드는 개체의 프록시 및 개체 자체 간의 통신 중에 사용 되는 엔보이 싱크를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.GetEnvoyChainForProxy(System.MarshalByRefObject)">
          <source>The immediate caller does not have infrastructure permission.</source>
          <target state="translated">직접 실행 호출자에 인프라 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetEnvoyChainForProxy(System.MarshalByRefObject)">
          <source>for operating with infrastructure code.</source>
          <target state="translated">에 인프라 코드와 작동 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetEnvoyChainForProxy(System.MarshalByRefObject)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; Permission value: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /&gt;</ph></source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; 권한 값: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.GetLifetimeService(System.MarshalByRefObject)">
          <source>The object to obtain lifetime service for.</source>
          <target state="translated">수명 서비스를 가져올 개체입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.GetLifetimeService(System.MarshalByRefObject)">
          <source>Returns a lifetime service object that controls the lifetime policy of the specified object.</source>
          <target state="translated">지정된 개체의 수명 정책을 제어하는 수명 서비스 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.GetLifetimeService(System.MarshalByRefObject)">
          <source>The object that controls the lifetime of <ph id="ph1">&lt;paramref name="obj" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph>의 수명을 제어하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetLifetimeService(System.MarshalByRefObject)">
          <source>For the default lifetime service the returned object will be an object of type <ph id="ph1">&lt;xref:System.Runtime.Remoting.Lifetime.ILease&gt;</ph>.</source>
          <target state="translated">기본 수명 서비스에 대 한 반환된 된 개체 형식의 개체로 됩니다 <ph id="ph1">&lt;xref:System.Runtime.Remoting.Lifetime.ILease&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetLifetimeService(System.MarshalByRefObject)">
          <source>If the <ph id="ph1">`obj`</ph> parameter is <ph id="ph2">`null`</ph>, the method returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">`obj`</ph> 매개 변수는 <ph id="ph2">`null`</ph>, 메서드가 반환 <ph id="ph3">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetLifetimeService(System.MarshalByRefObject)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Runtime.Remoting.RemotingServices.GetLifetimeService%2A&gt;</ph> method to get a lifetime lease for the specified object.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Runtime.Remoting.RemotingServices.GetLifetimeService%2A&gt;</ph> 메서드를 지정된 된 개체에 대 한 수명 임대를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetLifetimeService(System.MarshalByRefObject)">
          <source>To compile and run this example, you will need to compile and run a server, timerserver.exe, and compile a shared library, timerservice.dll.</source>
          <target state="translated">를 컴파일하고이 예제를 실행 하려면 컴파일 및 서버, timerserver.exe, 및는 공유 라이브러리를 컴파일 timerservice.dll 실행 해야 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetLifetimeService(System.MarshalByRefObject)">
          <source>The source for timerserver.exe follows:</source>
          <target state="translated">Timerserver.exe에 대 한 소스 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetLifetimeService(System.MarshalByRefObject)">
          <source>The source for timerservice.dll follows:</source>
          <target state="translated">Timerservice.dll에 대 한 소스 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.GetLifetimeService(System.MarshalByRefObject)">
          <source>The immediate caller does not have infrastructure permission.</source>
          <target state="translated">직접 실행 호출자에 인프라 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetLifetimeService(System.MarshalByRefObject)">
          <source>for operating with infrastructure code.</source>
          <target state="translated">에 인프라 코드와 작동 합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetLifetimeService(System.MarshalByRefObject)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; Permission value: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /&gt;</ph></source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; 권한 값: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.GetMethodBaseFromMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)">
          <source>The method message to extract the method base from.</source>
          <target state="translated">메서드 기본 사항을 추출할 메서드 메시지입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.GetMethodBaseFromMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)">
          <source>Returns the method base from the given <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Messaging.IMethodMessage" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Messaging.IMethodMessage" /&gt;</ph>에서 메서드 기본 사항을 반환합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.GetMethodBaseFromMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)">
          <source>The method base extracted from the <ph id="ph1">&lt;paramref name="msg" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="msg" /&gt;</ph> 매개 변수에서 추출한 메서드 기본 사항입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetMethodBaseFromMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)">
          <source>This determines the method base from the <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage.TypeName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodName%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodSignature%2A&gt;</ph> properties of <ph id="ph4">&lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage&gt;</ph> and is used by classes implementing the <ph id="ph5">&lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage&gt;</ph> interface.</source>
          <target state="translated">기본 메서드를 결정는 <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage.TypeName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodName%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodSignature%2A&gt;</ph> 의 속성 <ph id="ph4">&lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage&gt;</ph> 및 구현 하는 클래스에서 사용 되는 <ph id="ph5">&lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetMethodBaseFromMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)">
          <source>Consumers of <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage&gt;</ph> classes should reference the <ph id="ph2">&lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodBase%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">소비자가 <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage&gt;</ph> 클래스를 참조 해야는 <ph id="ph2">&lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodBase%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.GetMethodBaseFromMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)">
          <source>Either the immediate caller does not have infrastructure permission, or at least one of the callers higher in the callstack does not have permission to retrieve the type information of non-public members.</source>
          <target state="translated">직접 실행 호출자에 인프라 권한이 없거나 호출 스택의 상위에 있는 직접 실행 호출자 중 적어도 하나에 public이 아닌 멤버의 형식 정보를 검색할 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetMethodBaseFromMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)">
          <source>for operating with infrastructure code.</source>
          <target state="translated">에 인프라 코드와 작동 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetMethodBaseFromMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; Permission value: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /&gt;</ph></source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; 권한 값: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object to serialize.</source>
          <target state="translated">serialize할 개체입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> into which the object is serialized.</source>
          <target state="translated">개체가 serialize될 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The source and destination of the serialization.</source>
          <target state="translated">serialization의 소스 및 대상입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Serializes the specified marshal by reference object into the provided <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>.</source>
          <target state="translated">참조로 마샬링된 지정된 개체를 제공된 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>로 serialize합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> or <ph id="ph2">&lt;paramref name="info" /&gt;</ph> parameter is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="info" /&gt;</ph> 매개 변수가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The immediate caller does not have infrastructure permission.</source>
          <target state="translated">직접 실행 호출자에 인프라 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>for operating with infrastructure code.</source>
          <target state="translated">에 인프라 코드와 작동 합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; Permission value: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /&gt;</ph></source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; 권한 값: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.GetObjectUri(System.MarshalByRefObject)">
          <source>The <ph id="ph1">&lt;see cref="T:System.MarshalByRefObject" /&gt;</ph> for which a URI is requested.</source>
          <target state="translated">URI가 요청된 <ph id="ph1">&lt;see cref="T:System.MarshalByRefObject" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.GetObjectUri(System.MarshalByRefObject)">
          <source>Retrieves the URI for the specified object.</source>
          <target state="translated">지정된 개체의 URI를 검색합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.GetObjectUri(System.MarshalByRefObject)">
          <source>The URI of the specified object if it has one, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the object has not yet been marshaled.</source>
          <target state="translated">지정된 개체에 URI가 있으면 해당 URI이고, 개체가 아직 마샬링되지 않았으면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.GetObjectUri(System.MarshalByRefObject)">
          <source>The immediate caller does not have infrastructure permission.</source>
          <target state="translated">직접 실행 호출자에 인프라 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetObjectUri(System.MarshalByRefObject)">
          <source>for operating with infrastructure code.</source>
          <target state="translated">에 인프라 코드와 작동 합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetObjectUri(System.MarshalByRefObject)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; Permission value: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /&gt;</ph></source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; 권한 값: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.GetObjRefForProxy(System.MarshalByRefObject)">
          <source>A proxy connected to the object you want to create a <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjRef" /&gt;</ph> for.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjRef" /&gt;</ph>를 만들려는 개체에 연결되어 있는 프록시입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.GetObjRefForProxy(System.MarshalByRefObject)">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjRef" /&gt;</ph> that represents the remote object from the specified proxy.</source>
          <target state="translated">원격 개체를 나타내는 <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjRef" /&gt;</ph>를 지정된 프록시에서 반환합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.GetObjRefForProxy(System.MarshalByRefObject)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjRef" /&gt;</ph> that represents the remote object the specified proxy is connected to, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the object or proxy have not been marshaled.</source>
          <target state="translated">지정된 프록시가 연결되어 있는 원격 개체를 나타내는 <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjRef" /&gt;</ph>이거나, 개체나 프록시가 아직 마샬링되지 않았으면 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetObjRefForProxy(System.MarshalByRefObject)">
          <source>A <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> is a serializable representation of an object used to transfer an object reference across an application domain boundary.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> 응용 프로그램 도메인 경계를 넘어 개체 참조를 전송 하는 데 사용 되는 개체의 직렬화 가능 표현입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetObjRefForProxy(System.MarshalByRefObject)">
          <source>Creating a <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> for an object is known as marshaling.</source>
          <target state="translated">만들기는 <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> 마샬링 라고 개체에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetObjRefForProxy(System.MarshalByRefObject)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> can be transferred through a channel into another application domain (possibly on another process or computer).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> 채널을 통해 다른 응용 프로그램 도메인에 전송할 수 있습니다 (수에 다른 프로세스 또는 컴퓨터).</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetObjRefForProxy(System.MarshalByRefObject)">
          <source>Once in the other application domain, the <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> must be parsed to create a proxy for the object, generally connected to the real object.</source>
          <target state="translated">다른 응용 프로그램 도메인에서 한 번의 <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> 일반적으로 실제 개체에 연결 하는 개체에 대 한 프록시를 만드는 구문 분석 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetObjRefForProxy(System.MarshalByRefObject)">
          <source>This operation is known as unmarshaling.</source>
          <target state="translated">이 작업을 역마샬링 라고 합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetObjRefForProxy(System.MarshalByRefObject)">
          <source>During unmarshaling, the <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> is parsed to extract the method information of the remote object and both the transparent proxy and <ph id="ph2">&lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt;</ph> objects are created.</source>
          <target state="translated">역마샬링 동안는 <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> 원격 개체와 투명 프록시 개체의 메서드 정보를 추출 하는 구문 분석 및 <ph id="ph2">&lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt;</ph> 개체가 만들어집니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetObjRefForProxy(System.MarshalByRefObject)">
          <source>A <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> contains information that describes the <ph id="ph2">&lt;xref:System.Type&gt;</ph> and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remote application where the object is located.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> 설명 하는 정보가 포함 되어는 <ph id="ph2">&lt;xref:System.Type&gt;</ph> 는 마샬링하는 개체의 클래스, 특정 개체 인스턴스 및 통신을 고유 하 게 식별 하는 URI와 관련 된 원격 응용 프로그램에 도달 하는 방법에 대 한 정보 및 위치 개체는 있습니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetObjRefForProxy(System.MarshalByRefObject)">
          <source>The following code example demonstrates how to get a <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> instance for the specified object.</source>
          <target state="translated">다음 코드 예제에서는 가져오는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> 지정된 된 개체에 대 한 인스턴스.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.GetObjRefForProxy(System.MarshalByRefObject)">
          <source>The immediate caller does not have infrastructure permission.</source>
          <target state="translated">직접 실행 호출자에 인프라 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetObjRefForProxy(System.MarshalByRefObject)">
          <source>for operating with infrastructure code.</source>
          <target state="translated">에 인프라 코드와 작동 합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetObjRefForProxy(System.MarshalByRefObject)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; Permission value: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /&gt;</ph></source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; 권한 값: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.GetRealProxy(System.Object)">
          <source>A transparent proxy.</source>
          <target state="translated">투명 프록시입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.GetRealProxy(System.Object)">
          <source>Returns the real proxy backing the specified transparent proxy.</source>
          <target state="translated">지정된 투명 프록시를 지원하는 실제 프록시를 반환합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.GetRealProxy(System.Object)">
          <source>The real proxy instance backing the transparent proxy.</source>
          <target state="translated">투명 프록시를 지원하는 실제 프록시 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetRealProxy(System.Object)">
          <source>A client that uses an object across any kind of remoting boundary is actually using a transparent proxy for the object.</source>
          <target state="translated">모든 종류의 원격 경계에서 개체를 사용 하는 클라이언트 투명 프록시를 사용 하 여 개체에 대 한 실제로 됩니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetRealProxy(System.Object)">
          <source>The transparent proxy gives the impression that the actual object resides in the client's space.</source>
          <target state="translated">투명 프록시 실제 개체가 있는 클라이언트의 공간에는 느낄을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetRealProxy(System.Object)">
          <source>It achieves this by forwarding calls made on it to the real object using the remoting infrastructure.</source>
          <target state="translated">에 원격 인프라를 사용 하 여 실제 개체에 대 한 호출을 전달 하 여 얻습니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetRealProxy(System.Object)">
          <source>The transparent proxy is backed by an instance of a managed runtime class of type <ph id="ph1">&lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt;</ph>.</source>
          <target state="translated">투명 프록시 형식의 관리 되는 런타임 클래스의 인스턴스는 뒷받침 되며 <ph id="ph1">&lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetRealProxy(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt;</ph> implements a part of the functionality needed to forward the operations from the transparent proxy.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt;</ph> 투명 프록시에서 작업을 전달 하는 데 필요한 기능 중 일부를 구현 합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetRealProxy(System.Object)">
          <source>A proxy object inherits the associated semantics of managed objects such as garbage collection, support for members and methods, and can be extended to form new classes.</source>
          <target state="translated">프록시 개체는 가비지 수집, 멤버 및 방법에 대 한 지원 등의 관리 되는 개체의 관련된 의미를 상속 하 고 클래스를 만들기 위해 새 확장 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetRealProxy(System.Object)">
          <source>The proxy acts as an object of the same class as the remote object (transparent proxy), and is also a managed object.</source>
          <target state="translated">프록시 역할을 원격 개체 (투명 프록시)와 같은 클래스의 개체 및 관리 되는 개체 이기도 합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.GetRealProxy(System.Object)">
          <source>The immediate caller does not have infrastructure permission.</source>
          <target state="translated">직접 실행 호출자에 인프라 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetRealProxy(System.Object)">
          <source>for operating with infrastructure code.</source>
          <target state="translated">에 인프라 코드와 작동 합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetRealProxy(System.Object)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; Permission value: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /&gt;</ph></source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; 권한 값: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.GetServerTypeForUri(System.String)">
          <source>The URI of the object whose <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> is requested.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>이 요청된 개체의 URI입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.GetServerTypeForUri(System.String)">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the object with the specified URI.</source>
          <target state="translated">지정된 URI가 있는 개체의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.GetServerTypeForUri(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the object with the specified URI.</source>
          <target state="translated">지정된 URI가 있는 개체의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetServerTypeForUri(System.String)">
          <source>Because remoting identifies endpoints using URIs, the <ph id="ph1">&lt;xref:System.Runtime.Remoting.RemotingServices.GetServerTypeForUri%2A&gt;</ph> method is very useful in the pluggable parts of the remoting infrastructure (for example, channel sinks, dynamic sinks, and context sinks) that use <ph id="ph2">&lt;xref:System.Runtime.Remoting.Messaging.IMessage&gt;</ph> objects, because the current method will return the associated type object from the URI.</source>
          <target state="translated">Uri를 사용 하 여 끝점을 식별 하는 원격 서비스는 <ph id="ph1">&lt;xref:System.Runtime.Remoting.RemotingServices.GetServerTypeForUri%2A&gt;</ph> 메서드를 사용 하는 플러그형 원격 인프라 (예: 채널 싱크, 동적 싱크 및 컨텍스트 싱크) 부분에 매우 유용 <ph id="ph2">&lt;xref:System.Runtime.Remoting.Messaging.IMessage&gt;</ph> 개체 때문에 현재 메서드는 URI에서 연결 된 형식 개체를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.GetServerTypeForUri(System.String)">
          <source>Either the immediate caller does not have infrastructure permission, or at least one of the callers higher in the callstack does not have permission to retrieve the type information of non-public members.</source>
          <target state="translated">직접 실행 호출자에 인프라 권한이 없거나 호출 스택의 상위에 있는 직접 실행 호출자 중 적어도 하나에 public이 아닌 멤버의 형식 정보를 검색할 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetServerTypeForUri(System.String)">
          <source>for operating with infrastructure code.</source>
          <target state="translated">에 인프라 코드와 작동 합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetServerTypeForUri(System.String)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; Permission value: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /&gt;</ph></source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; 권한 값: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetServerTypeForUri(System.String)">
          <source>to retrieve the type information of non-public members.</source>
          <target state="translated">public이 아닌 멤버의 형식 정보를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetServerTypeForUri(System.String)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>; Permission value: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>; 권한 값: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.GetSessionIdForMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Messaging.IMethodMessage" /&gt;</ph> for which a session ID is requested.</source>
          <target state="translated">세션 ID가 요청된 <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Messaging.IMethodMessage" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.GetSessionIdForMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)">
          <source>Retrieves a session ID for a message.</source>
          <target state="translated">메시지의 세션 ID를 검색합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.GetSessionIdForMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)">
          <source>A session ID string that uniquely identifies the current session.</source>
          <target state="translated">현재 세션을 고유하게 식별하는 세션 ID 문자열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetSessionIdForMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)">
          <source>The same session ID might be returned for objects in the same application, but this method will never return the same session ID for two objects in different remote applications.</source>
          <target state="translated">동일한 세션 ID는 동일한 응용 프로그램의 개체에 대해 반환 될 수 있습니다 하지만이 메서드는 다른 원격 응용 프로그램에서 두 개체에 대해 동일한 세션 ID를 반환 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetSessionIdForMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)">
          <source>For more information about identifying sessions and session IDs, see ASP.Net <bpt id="p1">[</bpt>ASP.NET Session State Overview<ept id="p1">](http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc)</ept>.</source>
          <target state="translated">세션 및 세션 Id 식별 하는 방법에 대 한 자세한 내용은 참조 ASP.Net <bpt id="p1">[</bpt>ASP.NET 세션 상태 개요<ept id="p1">](http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetSessionIdForMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)">
          <source>The following code example demonstrates how to get the session ID string for the current session.</source>
          <target state="translated">다음 코드 예제에는 현재 세션에 대 한 세션 ID 문자열을 가져오는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.GetSessionIdForMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)">
          <source>The immediate caller does not have infrastructure permission.</source>
          <target state="translated">직접 실행 호출자에 인프라 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetSessionIdForMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)">
          <source>for operating with infrastructure code.</source>
          <target state="translated">에 인프라 코드와 작동 합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.GetSessionIdForMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; Permission value: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /&gt;</ph></source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; 권한 값: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.IsMethodOverloaded(System.Runtime.Remoting.Messaging.IMethodMessage)">
          <source>The message that contains a call to the method in question.</source>
          <target state="translated">해당 메서드에 대한 호출이 들어 있는 메시지입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.IsMethodOverloaded(System.Runtime.Remoting.Messaging.IMethodMessage)">
          <source>Returns a Boolean value that indicates whether the method in the given message is overloaded.</source>
          <target state="translated">지정된 메시지의 메서드가 오버로드되었는지 여부를 나타내는 부울 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.IsMethodOverloaded(System.Runtime.Remoting.Messaging.IMethodMessage)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the method called in <ph id="ph2">&lt;paramref name="msg" /&gt;</ph> is overloaded; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="msg" /&gt;</ph>로 호출된 메서드가 오버로드되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.IsMethodOverloaded(System.Runtime.Remoting.Messaging.IMethodMessage)">
          <source>The immediate caller does not have infrastructure permission.</source>
          <target state="translated">직접 실행 호출자에 인프라 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.IsMethodOverloaded(System.Runtime.Remoting.Messaging.IMethodMessage)">
          <source>for operating with infrastructure code.</source>
          <target state="translated">에 인프라 코드와 작동 합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.IsMethodOverloaded(System.Runtime.Remoting.Messaging.IMethodMessage)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; Permission value: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /&gt;</ph></source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; 권한 값: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.IsObjectOutOfAppDomain(System.Object)">
          <source>The object to check.</source>
          <target state="translated">검사할 개체입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.IsObjectOutOfAppDomain(System.Object)">
          <source>Returns a Boolean value that indicates whether the object specified by the given transparent proxy is contained in a different application domain than the object that called the current method.</source>
          <target state="translated">주어진 투명 프록시로 지정된 개체가 현재 메서드를 호출한 개체가 아닌 다른 응용 프로그램 도메인에 포함되어 있는지 여부를 나타내는 부울 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.IsObjectOutOfAppDomain(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the object is out of the current application domain; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">개체가 현재 응용 프로그램 도메인 외부에 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.IsObjectOutOfAppDomain(System.Object)">
          <source>For information about application domains, see <bpt id="p1">[</bpt>Application Domains<ept id="p1">](http://msdn.microsoft.com/library/39e57d07-a740-4cd4-ae82-e119ea3856c1)</ept>.</source>
          <target state="translated">응용 프로그램 도메인에 대 한 정보를 참조 하십시오. <bpt id="p1">[</bpt>응용 프로그램 도메인<ept id="p1">](http://msdn.microsoft.com/library/39e57d07-a740-4cd4-ae82-e119ea3856c1)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.IsObjectOutOfContext(System.Object)">
          <source>The object to check.</source>
          <target state="translated">검사할 개체입니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.IsObjectOutOfContext(System.Object)">
          <source>Returns a Boolean value that indicates whether the object represented by the given proxy is contained in a different context than the object that called the current method.</source>
          <target state="translated">지정된 프록시가 나타내는 개체가 현재 메서드를 호출한 개체가 아닌 다른 컨텍스트에 포함되어 있는지 여부를 나타내는 부울 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.IsObjectOutOfContext(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the object is out of the current context; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">개체가 현재 컨텍스트 외부에 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.IsObjectOutOfContext(System.Object)">
          <source>A context is an ordered sequence of properties that define an environment for the objects that reside inside it.</source>
          <target state="translated">컨텍스트는 한 일련의 내부에 상주 하는 개체에 대 한 환경을 정의 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.IsObjectOutOfContext(System.Object)">
          <source>Contexts are created during the activation process for objects that are configured to require certain automatic services such synchronization, transactions, just-in-time activation, security, and so on.</source>
          <target state="translated">컨텍스트는 자동 서비스 이러한 동기화, 트랜잭션, 적시에 정품 인증, 보안, 및 등을 요구 하도록 구성 하는 개체에 대 한 정품 인증 과정 중에 만들어집니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.IsObjectOutOfContext(System.Object)">
          <source>Multiple objects can live inside a context.</source>
          <target state="translated">컨텍스트에는 여러 개의 개체가 존재할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.IsOneWay(System.Reflection.MethodBase)">
          <source>The method in question.</source>
          <target state="translated">다루고 있는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.IsOneWay(System.Reflection.MethodBase)">
          <source>Returns a Boolean value that indicates whether the client that called the method specified in the given message is waiting for the server to finish processing the method before continuing execution.</source>
          <target state="translated">주어진 메시지에서 지정된 메서드를 호출한 클라이언트가 실행을 계속하기 전에 서버가 메서드 처리를 마칠 때까지 기다리는지 여부를 나타내는 부울 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.IsOneWay(System.Reflection.MethodBase)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the method is one way; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">해당 메서드가 단방향 메서드이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.IsOneWay(System.Reflection.MethodBase)">
          <source>When a one-way method is called, the client does not wait for the server to finish processing the message.</source>
          <target state="translated">단방향 메서드를 호출 하는 경우에 메시지 처리를 완료 하려면 서버에 대 한 클라이언트 기다리지 않습니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.IsOneWay(System.Reflection.MethodBase)">
          <source>The client method returns to the application with no knowledge of whether or not the server will successfully process the message.</source>
          <target state="translated">클라이언트 메서드는 서버에서 메시지를 처리 했습니다. 여부의 정보가 전혀 없는 응용 프로그램에 반환 합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.IsOneWay(System.Reflection.MethodBase)">
          <source>Methods are marked as one way using the <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.OneWayAttribute&gt;</ph>.</source>
          <target state="translated">메서드는 한 가지 방법은 사용 중인 것으로 표시 되는 <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.OneWayAttribute&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.IsOneWay(System.Reflection.MethodBase)">
          <source>One-way methods cannot have a return value or any out parameters.</source>
          <target state="translated">단방향 메서드는 반환 값 또는 out 매개 변수를 가질 수 없습니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.IsOneWay(System.Reflection.MethodBase)">
          <source>The immediate caller does not have infrastructure permission.</source>
          <target state="translated">직접 실행 호출자에 인프라 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.IsOneWay(System.Reflection.MethodBase)">
          <source>for operating with infrastructure code.</source>
          <target state="translated">에 인프라 코드와 작동 합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.IsOneWay(System.Reflection.MethodBase)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; Permission value: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /&gt;</ph></source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; 권한 값: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.IsTransparentProxy(System.Object)">
          <source>The reference to the object to check.</source>
          <target state="translated">확인할 개체에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.IsTransparentProxy(System.Object)">
          <source>Returns a Boolean value that indicates whether the given object is a transparent proxy or a real object.</source>
          <target state="translated">지정된 개체가 투명 프록시 개체인지 또는 실제 개체인지를 나타내는 부울 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.IsTransparentProxy(System.Object)">
          <source>A Boolean value that indicates whether the object specified in the <ph id="ph1">&lt;paramref name="proxy" /&gt;</ph> parameter is a transparent proxy or a real object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="proxy" /&gt;</ph> 매개 변수에 지정된 개체가 투명 프록시 개체인지 또는 실제 개체인지를 나타내는 부울 값입니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.IsTransparentProxy(System.Object)">
          <source>A client that uses an object across any kind of a remoting boundary is actually using a transparent proxy for the object.</source>
          <target state="translated">모든 종류의 원격 경계에서 개체를 사용 하는 클라이언트 투명 프록시를 사용 하 여 개체에 대 한 실제로 됩니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.IsTransparentProxy(System.Object)">
          <source>The transparent proxy gives the impression that the actual object resides in the client's space.</source>
          <target state="translated">투명 프록시 실제 개체가 있는 클라이언트의 공간에는 느낄을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.IsTransparentProxy(System.Object)">
          <source>It achieves this by forwarding calls made on it to the real object using the remoting infrastructure.</source>
          <target state="translated">에 원격 인프라를 사용 하 여 실제 개체에 대 한 호출을 전달 하 여 얻습니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.IsTransparentProxy(System.Object)">
          <source>The transparent proxy is itself housed by an instance of a managed runtime class of type <ph id="ph1">&lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt;</ph>.</source>
          <target state="translated">투명 프록시는 형식의 관리 되는 런타임 클래스의 인스턴스를 자체 <ph id="ph1">&lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.IsTransparentProxy(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt;</ph> implements a part of the functionality needed to forward the operations from the transparent proxy.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt;</ph> 투명 프록시에서 작업을 전달 하는 데 필요한 기능 중 일부를 구현 합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.IsTransparentProxy(System.Object)">
          <source>A proxy object inherits the associated semantics of managed objects such as garbage collection, support for members and methods, and can be extended to form new classes.</source>
          <target state="translated">프록시 개체는 가비지 수집, 멤버 및 방법에 대 한 지원 등의 관리 되는 개체의 관련된 의미를 상속 하 고 클래스를 만들기 위해 새 확장 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.IsTransparentProxy(System.Object)">
          <source>Thus the proxy has a dual nature; on the one hand it needs to act as an object of the same class as the remote object (transparent proxy), and on the other it is a managed object itself.</source>
          <target state="translated">따라서 프록시에는 이중 특성이 있습니다. 반면에 원격 개체 (투명 프록시)와 같은 클래스의 개체 역할을 해야 하 고 다른 개체인 경우 관리 되는 자체입니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.IsTransparentProxy(System.Object)">
          <source>A proxy object can be used without regard to any remoting subdivisions within a <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>.</source>
          <target state="translated">프록시 개체 내에서 원격 창 나누기에 관계 없이 사용할 수는 <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.IsTransparentProxy(System.Object)">
          <source>Applications need not distinguish between proxy references and object references.</source>
          <target state="translated">응용 프로그램 프록시 참조 한 개체 참조를 구분 하지 않습니다 필요 합니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.IsTransparentProxy(System.Object)">
          <source>However, service providers dealing with issues such as activation, lifetime management, and transactions need to make such distinctions.</source>
          <target state="translated">그러나 활성화 등의 문제를 다룰 서비스 공급자 수명 관리 및 트랜잭션 해야 차이점을 확인 합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.IsTransparentProxy(System.Object)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Runtime.Remoting.RemotingServices.IsTransparentProxy%2A&gt;</ph> method to determine whether an object is a proxy or a real object.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Runtime.Remoting.RemotingServices.IsTransparentProxy%2A&gt;</ph> 개체가 프록시 또는 실제 개체 인지를 확인 하는 메서드.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.IsTransparentProxy(System.Object)">
          <source>For the complete example code, see the example for the <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.AsyncResult&gt;</ph> class.</source>
          <target state="translated">전체 예제 코드에 대 한 예제를 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.AsyncResult&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.LogRemotingStage(System.Int32)">
          <source>An internally defined constant that identifies the stage in a remoting exchange.</source>
          <target state="translated">원격 교환의 단계를 식별하는 내부적으로 정의된 상수입니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.LogRemotingStage(System.Int32)">
          <source>Logs the stage in a remoting exchange to an external debugger.</source>
          <target state="translated">외부 디버거에 원격 교환의 단계를 로깅합니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.LogRemotingStage(System.Int32)">
          <source>A <ph id="ph1">`"REMOTING_PERF"`</ph> preprocessing symbol is applied to the method by using the <ph id="ph2">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph> attribute.</source>
          <target state="translated">A <ph id="ph1">`"REMOTING_PERF"`</ph> 전처리 기호를 사용 하 여 메서드에 적용 되는 <ph id="ph2">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph> 특성입니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.LogRemotingStage(System.Int32)">
          <source>for configuration of the remoting infrastructure.</source>
          <target state="translated">에 대 한 원격 인프라의 구성입니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.LogRemotingStage(System.Int32)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; Permission value: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /&gt;</ph></source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; 권한 값: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="T:System.Runtime.Remoting.RemotingServices">
          <source>Converts the given <ph id="ph1">&lt;see cref="T:System.MarshalByRefObject" /&gt;</ph> into an instance of the <ph id="ph2">&lt;see cref="T:System.Runtime.Remoting.ObjRef" /&gt;</ph> class, which can be serialized for transmission between application domains and over a network.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.MarshalByRefObject" /&gt;</ph>를 <ph id="ph2">&lt;see cref="T:System.Runtime.Remoting.ObjRef" /&gt;</ph> 클래스의 인스턴스로 변환하여 응용 프로그램 도메인과 네트워크 사이에서 전송이 가능하도록 serialize합니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject)">
          <source>The object to convert.</source>
          <target state="translated">변환할 개체입니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject)">
          <source>Takes a <ph id="ph1">&lt;see cref="T:System.MarshalByRefObject" /&gt;</ph>, registers it with the remoting infrastructure, and converts it into an instance of the <ph id="ph2">&lt;see cref="T:System.Runtime.Remoting.ObjRef" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.MarshalByRefObject" /&gt;</ph>를 가져와서 원격 인프라에 등록한 다음 <ph id="ph2">&lt;see cref="T:System.Runtime.Remoting.ObjRef" /&gt;</ph> 클래스의 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject)">
          <source>An instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjRef" /&gt;</ph> class that represents the object specified in the <ph id="ph2">&lt;paramref name="Obj" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="Obj" /&gt;</ph> 매개 변수에 지정된 개체를 나타내는 <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjRef" /&gt;</ph> 클래스의 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject)">
          <source>A <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> is a serializable representation of an object used to transfer an object reference across an application domain boundary.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> 응용 프로그램 도메인 경계를 넘어 개체 참조를 전송 하는 데 사용 되는 개체의 직렬화 가능 표현입니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject)">
          <source>Creating a <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> for an object is known as marshaling.</source>
          <target state="translated">만들기는 <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> 마샬링 라고 개체에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> can be transferred through a channel into another application domain (possibly on another process or computer).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> 채널을 통해 다른 응용 프로그램 도메인에 전송할 수 있습니다 (수에 다른 프로세스 또는 컴퓨터).</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject)">
          <source>Once in the other application domain, the <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> must be parsed to create a proxy for the object, generally connected to the real object.</source>
          <target state="translated">다른 응용 프로그램 도메인에서 한 번의 <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> 일반적으로 실제 개체에 연결 하는 개체에 대 한 프록시를 만드는 구문 분석 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject)">
          <source>This operation is known as unmarshaling.</source>
          <target state="translated">이 작업을 역마샬링 라고 합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject)">
          <source>A <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> contains information that describes the <ph id="ph2">&lt;xref:System.Type&gt;</ph> and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remoting subdivision where the object is located.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> 설명 하는 정보가 포함 된 <ph id="ph2">&lt;xref:System.Type&gt;</ph> 및 클래스는 마샬링하는 개체의 특정 개체 인스턴스 및 통신을 고유 하 게 식별 하는 URI 관련 원격 하위 영역에 도달 하는 방법에 대 한 정보 개체가 위치한 합니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject)">
          <source>During marshaling, the context from the current thread is used, not the context that was active when the object was created.</source>
          <target state="translated">마샬링을 하는 동안 현재 스레드에서 컨텍스트를 사용, 컨텍스트가 아닌 때 활성화 되었던 개체가 만들어진 합니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject)">
          <source>If a URI was not explicitly set by the <ph id="ph1">&lt;xref:System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal%2A&gt;</ph> method, it is automatically generated by the remoting identity infrastructure.</source>
          <target state="translated">URI 명시적으로 설정 되지 않은 경우는 <ph id="ph1">&lt;xref:System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal%2A&gt;</ph> 메서드를 원격 id 인프라에서 자동으로 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject)">
          <source>You cannot associate a URI with a proxy for one of two reasons: either the URI was generated at the server side for the object it represents, or the object is well known, in which case the URI is known.</source>
          <target state="translated">두 가지 이유 중 하나에 대 한 프록시를 사용한 URI를 연결할 수 없습니다:을 나타내는 개체에 대 한 서버 쪽에서 생성 된 URI 또는 URI를 알 경우 개체는 잘 알려져 있습니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject)">
          <source>For this reason, if the <ph id="ph1">`Obj`</ph> parameter is a proxy, an exception will be thrown.</source>
          <target state="translated">이 경우는 <ph id="ph1">`Obj`</ph> 매개 변수는 프록시, 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject)">
          <source>For custom proxies this restriction is relaxed because the transparent proxy is treated as the server object.</source>
          <target state="translated">사용자 지정 프록시에 대 한 투명 프록시 서버 개체 처리 되기 때문에 이러한 제한이 완화 됩니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject)">
          <source>The <ph id="ph1">&lt;paramref name="Obj" /&gt;</ph> parameter is an object proxy.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Obj" /&gt;</ph> 매개 변수가 개체 프록시인 경우</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject)">
          <source>At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</source>
          <target state="translated">호출 스택의 상위 호출자 중 하나 이상에게 원격 형식 및 채널을 구성하기 위한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject)">
          <source>for configuration of the remoting infrastructure.</source>
          <target state="translated">에 대 한 원격 인프라의 구성입니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>; Permission value: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /&gt;</ph></source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>; 권한 값: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String)">
          <source>The object to convert.</source>
          <target state="translated">변환할 개체입니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String)">
          <source>The specified URI with which to initialize the new <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjRef" /&gt;</ph>.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjRef" /&gt;</ph>를 초기화하는 데 사용할 지정된 URI입니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String)">
          <source>Can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String)">
          <source>Converts the given <ph id="ph1">&lt;see cref="T:System.MarshalByRefObject" /&gt;</ph> into an instance of the <ph id="ph2">&lt;see cref="T:System.Runtime.Remoting.ObjRef" /&gt;</ph> class with the specified URI.</source>
          <target state="translated">주어진 <ph id="ph1">&lt;see cref="T:System.MarshalByRefObject" /&gt;</ph>를 지정된 URI가 포함된 <ph id="ph2">&lt;see cref="T:System.Runtime.Remoting.ObjRef" /&gt;</ph> 클래스의 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String)">
          <source>An instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjRef" /&gt;</ph> class that represents the object specified in the <ph id="ph2">&lt;paramref name="Obj" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="Obj" /&gt;</ph> 매개 변수에 지정된 개체를 나타내는 <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjRef" /&gt;</ph> 클래스의 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String)">
          <source>A <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> is a serializable representation of an object used to transfer an object reference across an application domain boundary.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> 응용 프로그램 도메인 경계를 넘어 개체 참조를 전송 하는 데 사용 되는 개체의 직렬화 가능 표현입니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String)">
          <source>Creating a <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> for an object is known as marshaling.</source>
          <target state="translated">만들기는 <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> 마샬링 라고 개체에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> can be transferred through a channel into another application domain (possibly on another process or computer).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> 채널을 통해 다른 응용 프로그램 도메인에 전송할 수 있습니다 (수에 다른 프로세스 또는 컴퓨터).</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String)">
          <source>Once in the other application domain, the <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> must be parsed to create a proxy for the object, generally connected to the real object.</source>
          <target state="translated">다른 응용 프로그램 도메인에서 한 번의 <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> 일반적으로 실제 개체에 연결 하는 개체에 대 한 프록시를 만드는 구문 분석 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String)">
          <source>This operation is known as unmarshaling.</source>
          <target state="translated">이 작업을 역마샬링 라고 합니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String)">
          <source>A <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> contains information that describes the <ph id="ph2">&lt;xref:System.Type&gt;</ph> and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remoting subdivision where the object is located.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> 설명 하는 정보가 포함 된 <ph id="ph2">&lt;xref:System.Type&gt;</ph> 및 클래스는 마샬링하는 개체의 특정 개체 인스턴스 및 통신을 고유 하 게 식별 하는 URI 관련 원격 하위 영역에 도달 하는 방법에 대 한 정보 개체가 위치한 합니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String)">
          <source>During marshaling, the context from the current thread is used, not the context that was active when the object was created.</source>
          <target state="translated">마샬링을 하는 동안 현재 스레드에서 컨텍스트를 사용, 컨텍스트가 아닌 때 활성화 되었던 개체가 만들어진 합니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String)">
          <source>You cannot associate a URI with a proxy for one of two reasons: either the URI was generated at the server side for the object it represents, or the object is well known, in which case the URI is known.</source>
          <target state="translated">두 가지 이유 중 하나에 대 한 프록시를 사용한 URI를 연결할 수 없습니다:을 나타내는 개체에 대 한 서버 쪽에서 생성 된 URI 또는 URI를 알 경우 개체는 잘 알려져 있습니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String)">
          <source>For this reason, if the <ph id="ph1">`Obj`</ph> parameter is a proxy, an exception will be thrown.</source>
          <target state="translated">이 경우는 <ph id="ph1">`Obj`</ph> 매개 변수는 프록시, 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String)">
          <source>For custom proxies this restriction is relaxed because the transparent proxy is treated as the server object.</source>
          <target state="translated">사용자 지정 프록시에 대 한 투명 프록시 서버 개체 처리 되기 때문에 이러한 제한이 완화 됩니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String)">
          <source>The following code example demonstrates how to use the current <ph id="ph1">&lt;xref:System.Runtime.Remoting.RemotingServices.Marshal%2A&gt;</ph> method to marshal a specified object.</source>
          <target state="translated">다음 코드 예제에서는 현재 사용 하는 방법을 보여 줍니다. <ph id="ph1">&lt;xref:System.Runtime.Remoting.RemotingServices.Marshal%2A&gt;</ph> 지정된 된 개체를 마샬링할 메서드에 합니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String)">
          <source><ph id="ph1">&lt;paramref name="Obj" /&gt;</ph> is an object proxy, and the <ph id="ph2">&lt;paramref name="URI" /&gt;</ph> parameter is not <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Obj" /&gt;</ph>가 개체 프록시이고, <ph id="ph2">&lt;paramref name="URI" /&gt;</ph> 매개 변수가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이 아닌 경우</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String)">
          <source>At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</source>
          <target state="translated">호출 스택의 상위 호출자 중 하나 이상에게 원격 형식 및 채널을 구성하기 위한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String)">
          <source>for configuration of the remoting infrastructure.</source>
          <target state="translated">에 대 한 원격 인프라의 구성입니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>; Permission value: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /&gt;</ph></source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>; 권한 값: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String,System.Type)">
          <source>The object to convert into a <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjRef" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjRef" /&gt;</ph>으로 변환할 개체입니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String,System.Type)">
          <source>The URI the object specified in the <bpt id="p1">&lt;c&gt;</bpt>Obj<ept id="p1">&lt;/c&gt;</ept> parameter is marshaled with.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>Obj<ept id="p1">&lt;/c&gt;</ept> 매개 변수에 지정한 개체를 마샬링할 때 사용할 URI입니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String,System.Type)">
          <source>Can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph><bpt id="p1">&lt;c&gt;</bpt>Obj<ept id="p1">&lt;/c&gt;</ept> is marshaled as.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>Obj<ept id="p1">&lt;/c&gt;</ept>가 마샬링될 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String,System.Type)">
          <source>Can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String,System.Type)">
          <source>Takes a <ph id="ph1">&lt;see cref="T:System.MarshalByRefObject" /&gt;</ph> and converts it into an instance of the <ph id="ph2">&lt;see cref="T:System.Runtime.Remoting.ObjRef" /&gt;</ph> class with the specified URI, and the provided <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.MarshalByRefObject" /&gt;</ph>를 가져와서 지정된 URI 및 제공된 <ph id="ph2">&lt;see cref="T:System.Runtime.Remoting.ObjRef" /&gt;</ph>이 있는 <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph> 클래스의 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String,System.Type)">
          <source>An instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjRef" /&gt;</ph> class that represents the object specified in the <ph id="ph2">&lt;paramref name="Obj" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="Obj" /&gt;</ph> 매개 변수에 지정된 개체를 나타내는 <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjRef" /&gt;</ph> 클래스의 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String,System.Type)">
          <source>A <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> is a serializable representation of an object used to transfer an object reference across an application domain boundary.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> 응용 프로그램 도메인 경계를 넘어 개체 참조를 전송 하는 데 사용 되는 개체의 직렬화 가능 표현입니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String,System.Type)">
          <source>Creating a <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> for an object is known as marshaling.</source>
          <target state="translated">만들기는 <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> 마샬링 라고 개체에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String,System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> can be transferred through a channel into another application domain (possibly on another process or computer).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> 채널을 통해 다른 응용 프로그램 도메인에 전송할 수 있습니다 (수에 다른 프로세스 또는 컴퓨터).</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String,System.Type)">
          <source>Once in the other application domain, the <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> must be parsed to create a proxy for the object, generally connected to the real object.</source>
          <target state="translated">다른 응용 프로그램 도메인에서 한 번의 <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> 일반적으로 실제 개체에 연결 하는 개체에 대 한 프록시를 만드는 구문 분석 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String,System.Type)">
          <source>This operation is known as unmarshaling.</source>
          <target state="translated">이 작업을 역마샬링 라고 합니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String,System.Type)">
          <source>A <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> contains information that describes the <ph id="ph2">&lt;xref:System.Type&gt;</ph> and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remoting subdivision where the object is located.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> 설명 하는 정보가 포함 된 <ph id="ph2">&lt;xref:System.Type&gt;</ph> 및 클래스는 마샬링하는 개체의 특정 개체 인스턴스 및 통신을 고유 하 게 식별 하는 URI 관련 원격 하위 영역에 도달 하는 방법에 대 한 정보 개체가 위치한 합니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String,System.Type)">
          <source>The specified <ph id="ph1">&lt;xref:System.Type&gt;</ph> is used by the remoting infrastructure to limit the scope of the exposed type hierarchy.</source>
          <target state="translated">지정 된 <ph id="ph1">&lt;xref:System.Type&gt;</ph> 원격 인프라에서 노출된 된 형식 계층의 범위를 제한 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String,System.Type)">
          <source>For example, if object A derives from object B, which derives from object C, and <ph id="ph1">&lt;xref:System.Runtime.Remoting.RemotingServices.Marshal%2A&gt;</ph> is called, then the client can cast the proxy between C and B but not to A.</source>
          <target state="translated">예를 들어 개체 A가 B, C 개체에서 파생 되는 개체에서 파생 되는 경우 및 <ph id="ph1">&lt;xref:System.Runtime.Remoting.RemotingServices.Marshal%2A&gt;</ph> 호출 되는 클라이언트 프록시 a 있지만 B와 C 간의 캐스팅할 수</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String,System.Type)">
          <source>During marshaling, the context from the current thread is used, not the context that was active when the object was created.</source>
          <target state="translated">마샬링을 하는 동안 현재 스레드에서 컨텍스트를 사용, 컨텍스트가 아닌 때 활성화 되었던 개체가 만들어진 합니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String,System.Type)">
          <source>You cannot associate a URI with a proxy for one of two reasons: either the URI was generated at the server side for the object it represents, or the object is well known, in which case the URI is known.</source>
          <target state="translated">두 가지 이유 중 하나에 대 한 프록시를 사용한 URI를 연결할 수 없습니다:을 나타내는 개체에 대 한 서버 쪽에서 생성 된 URI 또는 URI를 알 경우 개체는 잘 알려져 있습니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String,System.Type)">
          <source>For this reason, if the <ph id="ph1">`Obj`</ph> parameter is a proxy, an exception will be thrown.</source>
          <target state="translated">이 경우는 <ph id="ph1">`Obj`</ph> 매개 변수는 프록시, 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String,System.Type)">
          <source>For custom proxies this restriction is relaxed because the transparent proxy is treated as the server object.</source>
          <target state="translated">사용자 지정 프록시에 대 한 투명 프록시 서버 개체 처리 되기 때문에 이러한 제한이 완화 됩니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String,System.Type)">
          <source><ph id="ph1">&lt;paramref name="Obj" /&gt;</ph> is a proxy of a remote object, and the <ph id="ph2">&lt;paramref name="ObjUri" /&gt;</ph> parameter is not <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Obj" /&gt;</ph>가 원격 개체의 프록시이고, <ph id="ph2">&lt;paramref name="ObjUri" /&gt;</ph> 매개 변수가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이 아닌 경우</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String,System.Type)">
          <source>At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</source>
          <target state="translated">호출 스택의 상위 호출자 중 하나 이상에게 원격 형식 및 채널을 구성하기 위한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String,System.Type)">
          <source>for configuration of the remoting infrastructure.</source>
          <target state="translated">에 대 한 원격 인프라의 구성입니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String,System.Type)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>; Permission value: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /&gt;</ph></source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>; 권한 값: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal(System.MarshalByRefObject,System.String)">
          <source>The object to set a URI for.</source>
          <target state="translated">URI를 설정할 개체입니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal(System.MarshalByRefObject,System.String)">
          <source>The URI to assign to the specified object.</source>
          <target state="translated">지정된 개체에 할당할 URI입니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal(System.MarshalByRefObject,System.String)">
          <source>Sets the URI for the subsequent call to the <ph id="ph1">&lt;see cref="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject)" /&gt;</ph> 메서드에 대한 다음 호출의 URI를 설정합니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal(System.MarshalByRefObject,System.String)">
          <source>The URI set by the current method is used when marshaling the given object.</source>
          <target state="translated">현재 메서드에서 설정한 URI는 지정된 된 개체를 마샬링할 때 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal(System.MarshalByRefObject,System.String)">
          <source>After marshaling, the URI of the specified object is set to the string in the <ph id="ph1">`uri`</ph> parameter appended onto the <ph id="ph2">&lt;xref:System.Guid&gt;</ph> of the current <ph id="ph3">&lt;xref:System.AppDomain&gt;</ph>.</source>
          <target state="translated">마샬링 한 후 지정된 된 개체의 URI에서 문자열로 설정 되는 <ph id="ph1">`uri`</ph> 에 추가 된 매개 변수는 <ph id="ph2">&lt;xref:System.Guid&gt;</ph> 현재 <ph id="ph3">&lt;xref:System.AppDomain&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal(System.MarshalByRefObject,System.String)">
          <source>If the current application is listening on an HTTP port, then both the string specified in the <ph id="ph1">`uri`</ph> parameter and the <ph id="ph2">`uri`</ph> string appended onto the <ph id="ph3">&lt;xref:System.Guid&gt;</ph> of the current <ph id="ph4">&lt;xref:System.AppDomain&gt;</ph> route to the specified object.</source>
          <target state="translated">현재 응용 프로그램은 HTTP 포트에서 수신 대기 하는 경우 다음에 지정 된 두 문자열의 <ph id="ph1">`uri`</ph> 매개 변수 및 <ph id="ph2">`uri`</ph> 문자열에 추가 <ph id="ph3">&lt;xref:System.Guid&gt;</ph> 현재 <ph id="ph4">&lt;xref:System.AppDomain&gt;</ph> 지정된 된 개체에 대 한 경로입니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal(System.MarshalByRefObject,System.String)">
          <source>For example, if the application is listening on HTTP port 9000, then both <ph id="ph1">http://localhost:9000/objectUri</ph>, and <ph id="ph2">http://localhost:9000/</ph><ph id="ph3">\&lt;</ph>appdomainguid&gt;/objectUri route to the object specified in the <ph id="ph4">`obj`</ph> parameter.</source>
          <target state="translated">예, 응용 프로그램에서 HTTP 포트 9000 수신 하는 경우 다음 둘 다에 대 한 <ph id="ph1">http://localhost:9000/objectUri</ph>, 및 <ph id="ph2">http://localhost:9000/</ph> <ph id="ph3">\&lt;</ph>appdomainguid &gt;에 지정 된 개체에 objectUri 경로 /는 <ph id="ph4">`obj`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal(System.MarshalByRefObject,System.String)">
          <source>The following code example demonstrates how to set the URI that will be used by the <ph id="ph1">&lt;xref:System.Runtime.Remoting.RemotingServices.Marshal%2A&gt;</ph> method when marshaling the specified object.</source>
          <target state="translated">사용 될 URI를 설정 하는 방법은 다음 코드 예제는 <ph id="ph1">&lt;xref:System.Runtime.Remoting.RemotingServices.Marshal%2A&gt;</ph> 지정된 된 개체를 마샬링할 때 메서드.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal(System.MarshalByRefObject,System.String)">
          <source><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> is not a local object, has already been marshaled, or the current method has already been called on.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph>가 지역 개체가 아니고, 이미 마샬링되었거나, 현재 메서드가 이미 호출된 경우</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal(System.MarshalByRefObject,System.String)">
          <source>At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</source>
          <target state="translated">호출 스택의 상위 호출자 중 하나 이상에게 원격 형식 및 채널을 구성하기 위한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal(System.MarshalByRefObject,System.String)">
          <source>for configuration of the remoting infrastructure.</source>
          <target state="translated">에 대 한 원격 인프라의 구성입니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal(System.MarshalByRefObject,System.String)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>; Permission value: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /&gt;</ph></source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>; 권한 값: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="T:System.Runtime.Remoting.RemotingServices">
          <source>Converts a given <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjRef" /&gt;</ph> into a proxy object.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjRef" /&gt;</ph>를 프록시 개체로 변환합니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjRef" /&gt;</ph> that represents the remote object for which the proxy is being created.</source>
          <target state="translated">프록시가 만들어질 원격 개체를 나타내는 <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjRef" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef)">
          <source>Takes a <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjRef" /&gt;</ph> and creates a proxy object out of it.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjRef" /&gt;</ph>를 가져오고 이를 사용하여 프록시 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef)">
          <source>A proxy to the object that the given <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjRef" /&gt;</ph> represents.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjRef" /&gt;</ph>가 나타내는 개체의 프록시입니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef)">
          <source>A <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> is a serializable representation of an object used to transfer an object reference across an application domain boundary.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> 응용 프로그램 도메인 경계를 넘어 개체 참조를 전송 하는 데 사용 되는 개체의 직렬화 가능 표현입니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef)">
          <source>Creating a <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> for an object is known as marshaling.</source>
          <target state="translated">만들기는 <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> 마샬링 라고 개체에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> can be transferred through a channel into another application domain (possibly on another process or computer).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> 채널을 통해 다른 응용 프로그램 도메인에 전송할 수 있습니다 (수에 다른 프로세스 또는 컴퓨터).</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef)">
          <source>Once in the other application domain, the <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> must be parsed to create a proxy for the object, generally connected to the real object.</source>
          <target state="translated">다른 응용 프로그램 도메인에서 한 번의 <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> 일반적으로 실제 개체에 연결 하는 개체에 대 한 프록시를 만드는 구문 분석 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef)">
          <source>This operation is known as unmarshaling.</source>
          <target state="translated">이 작업을 역마샬링 라고 합니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef)">
          <source>During unmarshaling, the <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> is parsed to extract the method information of the remote object and both the transparent proxy and <ph id="ph2">&lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt;</ph> objects are created.</source>
          <target state="translated">역마샬링 동안는 <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> 원격 개체와 투명 프록시 개체의 메서드 정보를 추출 하는 구문 분석 및 <ph id="ph2">&lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt;</ph> 개체가 만들어집니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef)">
          <source>The content of the parsed <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> is added to the transparent proxy before the transparent proxy is registered with the common language runtime.</source>
          <target state="translated">구문 분석 된 내용의 <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> 투명 프록시는 공용 언어 런타임에 등록 되기 전에 투명 프록시에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef)">
          <source>A <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> contains information that describes the <ph id="ph2">&lt;xref:System.Type&gt;</ph> and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remoting subdivision where the object is located.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> 설명 하는 정보가 포함 된 <ph id="ph2">&lt;xref:System.Type&gt;</ph> 및 클래스는 마샬링하는 개체의 특정 개체 인스턴스 및 통신을 고유 하 게 식별 하는 URI 관련 원격 하위 영역에 도달 하는 방법에 대 한 정보 개체가 위치한 합니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef)">
          <source>The following code example demonstrates how to unmarshal an object.</source>
          <target state="translated">다음 코드 예제에서는 개체의 역마샬링 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjRef" /&gt;</ph> instance specified in the <ph id="ph2">&lt;paramref name="objectRef" /&gt;</ph> parameter is not well-formed.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="objectRef" /&gt;</ph> 매개 변수에 지정된 <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjRef" /&gt;</ph> 인스턴스의 형식이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef)">
          <source>At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</source>
          <target state="translated">호출 스택의 상위 호출자 중 하나 이상에게 원격 형식 및 채널을 구성하기 위한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef)">
          <source>for configuration of the remoting infrastructure.</source>
          <target state="translated">에 대 한 원격 인프라의 구성입니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>; Permission value: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /&gt;</ph></source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>; 권한 값: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjRef" /&gt;</ph> that represents the remote object for which the proxy is being created.</source>
          <target state="translated">프록시가 만들어질 원격 개체를 나타내는 <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjRef" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to refine the proxy to the type on the server; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">프록시를 서버의 형식으로 구체화하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef,System.Boolean)">
          <source>Takes a <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjRef" /&gt;</ph> and creates a proxy object out of it, refining it to the type on the server.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjRef" /&gt;</ph>를 가져오고, 이를 사용하여 프록시 개체를 만들고, 서버의 형식으로 구체화합니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef,System.Boolean)">
          <source>A proxy to the object that the given <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjRef" /&gt;</ph> represents.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjRef" /&gt;</ph>가 나타내는 개체의 프록시입니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef,System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> is a serializable representation of an object used to transfer an object reference across an application domain boundary.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> 응용 프로그램 도메인 경계를 넘어 개체 참조를 전송 하는 데 사용 되는 개체의 직렬화 가능 표현입니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef,System.Boolean)">
          <source>Creating a <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> for an object is known as marshaling.</source>
          <target state="translated">만들기는 <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> 마샬링 라고 개체에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> can be transferred through a channel into another application domain (possibly on another process or computer).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> 채널을 통해 다른 응용 프로그램 도메인에 전송할 수 있습니다 (수에 다른 프로세스 또는 컴퓨터).</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef,System.Boolean)">
          <source>Once in the other application domain, the <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> must be parsed to create a proxy for the object, generally connected to the real object.</source>
          <target state="translated">다른 응용 프로그램 도메인에서 한 번의 <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> 일반적으로 실제 개체에 연결 하는 개체에 대 한 프록시를 만드는 구문 분석 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef,System.Boolean)">
          <source>This operation is known as unmarshaling.</source>
          <target state="translated">이 작업을 역마샬링 라고 합니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef,System.Boolean)">
          <source>During unmarshaling, the <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> is parsed to extract the method information of the remote object and both the transparent proxy and <ph id="ph2">&lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt;</ph> objects are created.</source>
          <target state="translated">역마샬링 동안는 <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> 원격 개체와 투명 프록시 개체의 메서드 정보를 추출 하는 구문 분석 및 <ph id="ph2">&lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt;</ph> 개체가 만들어집니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef,System.Boolean)">
          <source>The content of the parsed <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> is added to the transparent proxy before the transparent proxy is registered with the common language runtime.</source>
          <target state="translated">구문 분석 된 내용의 <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> 투명 프록시는 공용 언어 런타임에 등록 되기 전에 투명 프록시에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef,System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> contains information that describes the <ph id="ph2">&lt;xref:System.Type&gt;</ph> and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remoting subdivision where the object is located.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> 설명 하는 정보가 포함 된 <ph id="ph2">&lt;xref:System.Type&gt;</ph> 및 클래스는 마샬링하는 개체의 특정 개체 인스턴스 및 통신을 고유 하 게 식별 하는 URI 관련 원격 하위 영역에 도달 하는 방법에 대 한 정보 개체가 위치한 합니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef,System.Boolean)">
          <source>When first created, the proxy is of type <ph id="ph1">&lt;xref:System.MarshalByRefObject&gt;</ph>.</source>
          <target state="translated">형식 프록시는 처음 만들어질 때 <ph id="ph1">&lt;xref:System.MarshalByRefObject&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef,System.Boolean)">
          <source>As you cast it into different types, the remoting infrastructure keeps track of the most used type to avoid loading the type unnecessarily.</source>
          <target state="translated">다른 형식으로 캐스팅 하면 원격 인프라는 추적의 종류를 불필요 하 게 부하를 방지 하려면 가장 사용 되는 형식을 합니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjRef" /&gt;</ph> instance specified in the <ph id="ph2">&lt;paramref name="objectRef" /&gt;</ph> parameter is not well-formed.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="objectRef" /&gt;</ph> 매개 변수에 지정된 <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjRef" /&gt;</ph> 인스턴스의 형식이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef,System.Boolean)">
          <source>At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</source>
          <target state="translated">호출 스택의 상위 호출자 중 하나 이상에게 원격 형식 및 채널을 구성하기 위한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef,System.Boolean)">
          <source>for configuration of the remoting infrastructure.</source>
          <target state="translated">에 대 한 원격 인프라의 구성입니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef,System.Boolean)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>; Permission value: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /&gt;</ph></source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>; 권한 값: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /&gt;</ph></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>