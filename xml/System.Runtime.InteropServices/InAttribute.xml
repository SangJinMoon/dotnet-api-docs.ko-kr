<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="InAttribute.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5cd59d676764c326116534583b241a05ad46f1172.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cd59d676764c326116534583b241a05ad46f1172</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.InAttribute">
          <source>Indicates that data should be marshaled from the caller to the callee, but not back to the caller.</source>
          <target state="translated">데이터가 호출자에서 다시 호출자로 마샬링되는 게 아니라 호출자에서 수신자로 마샬링되어야 한다는 것을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.InAttribute">
          <source>You can apply this attribute to parameters.</source>
          <target state="translated">매개 변수를이 특성을 적용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.InAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.InAttribute&gt;</ph> is optional.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.InAttribute&gt;</ph> 은 선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.InAttribute">
          <source>The attribute is supported for COM interop and platform invoke only.</source>
          <target state="translated">특성은 COM interop에 대 한 지원 및 플랫폼만 호출 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.InAttribute">
          <source>In the absence of explicit settings, the interop marshaler assumes rules based on the parameter type, whether the parameter is passed by reference or by value, and whether the type is blittable or non-blittable.</source>
          <target state="translated">명시적 설정이 없는 경우에는 interop 마샬러만 유형, 매개 변수 값 또는 참조로 전달 되는 여부 및 비 blittable 형식 또는 blittable 형식이 인지 규칙 매개 변수를 기준으로 가정 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.InAttribute">
          <source>For example, the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> class is always assumed to be In/Out and an array of strings passed by value is assumed to be In.</source>
          <target state="translated">예를 들어는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 클래스는 항상 In/Out 이어야 하 값으로 전달 하는 문자열의 배열에 있는 것으로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.InAttribute">
          <source>You cannot apply the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.InAttribute&gt;</ph> to a parameter modified with the C#-styled <ph id="ph2">`out`</ph> keyword.</source>
          <target state="translated">적용할 수 없습니다는 <ph id="ph1">&lt;xref:System.Runtime.InteropServices.InAttribute&gt;</ph> C#과 함께 수정 하는 매개 변수를-스타일 <ph id="ph2">`out`</ph> 키워드입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.InAttribute">
          <source>To avoid confusing the <ph id="ph1">`In`</ph> keyword in Visual Basic with the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.InAttribute&gt;</ph>, minus Attribute, use the <ph id="ph3">`&lt;[In]&gt;`</ph> form with brackets around the attribute.</source>
          <target state="translated">혼동 하지 않도록는 <ph id="ph1">`In`</ph> 키워드와 Visual Basic의는 <ph id="ph2">&lt;xref:System.Runtime.InteropServices.InAttribute&gt;</ph>, 빼기 특성을 사용 하 여는 <ph id="ph3">`&lt;[In]&gt;`</ph> 폼 특성 주위의 괄호를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.InAttribute">
          <source>Combining the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.InAttribute&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.OutAttribute&gt;</ph> is particularly useful when applied to arrays and formatted, non-blittable types.</source>
          <target state="translated">결합 된 <ph id="ph1">&lt;xref:System.Runtime.InteropServices.InAttribute&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Runtime.InteropServices.OutAttribute&gt;</ph> 경우 특히 유용 배열에 적용 하 고 비 blittable 형식에 서식이 지정 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.InAttribute">
          <source>Callers see the changes a callee makes to these types only when you apply both attributes.</source>
          <target state="translated">호출자가 두 특성을 적용 하는 경우에 호출 수신자가 이러한 형식에 변경 내용을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.InAttribute">
          <source>Since these types require copying during marshaling, you can use <ph id="ph1">&lt;xref:System.Runtime.InteropServices.InAttribute&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.OutAttribute&gt;</ph> to reduce unnecessary copies.</source>
          <target state="translated">이러한 형식을 마샬링하는 동안 복사 필요로 하므로 사용할 수 있습니다 <ph id="ph1">&lt;xref:System.Runtime.InteropServices.InAttribute&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Runtime.InteropServices.OutAttribute&gt;</ph> 불필요 한 복사본을 줄일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.InAttribute">
          <source>For more information on the effect of <ph id="ph1">&lt;xref:System.Runtime.InteropServices.InAttribute&gt;</ph> on marshaling behavior, see <bpt id="p1">[</bpt>Directional Attributes<ept id="p1">](http://msdn.microsoft.com/library/241ac5b5-928e-4969-8f58-1dbc048f9ea2)</ept>.</source>
          <target state="translated">효과 대 한 자세한 내용은 <ph id="ph1">&lt;xref:System.Runtime.InteropServices.InAttribute&gt;</ph> 마샬링 동작을에 참조 <bpt id="p1">[</bpt>방향 특성<ept id="p1">](http://msdn.microsoft.com/library/241ac5b5-928e-4969-8f58-1dbc048f9ea2)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.InAttribute">
          <source>The following example shows how to apply the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.InAttribute&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.OutAttribute&gt;</ph> to a platform invoke prototype that passes an array as a parameter.</source>
          <target state="translated">적용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Runtime.InteropServices.InAttribute&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Runtime.InteropServices.OutAttribute&gt;</ph> 플랫폼 호출 프로토타입으로 배열을 매개 변수로 전달 하는 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.InAttribute">
          <source>The combination of directional attributes allows the caller to see the changes made by the callee.</source>
          <target state="translated">방향 특성의 조합을 호출자가 호출 수신자가 변경한 내용을 볼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.InAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.InAttribute" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.InAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>