<Type Name="TypeLibConverter" FullName="System.Runtime.InteropServices.TypeLibConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b378d901bd24a675228b26cbdd1768eb29cbc378" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36633435" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TypeLibConverter : System.Runtime.InteropServices.ITypeLibConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TypeLibConverter extends System.Object implements class System.Runtime.InteropServices.ITypeLibConverter" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.TypeLibConverter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TypeLibConverter&#xA;Implements ITypeLibConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeLibConverter sealed : System::Runtime::InteropServices::ITypeLibConverter" />
  <TypeSignature Language="F#" Value="type TypeLibConverter = class&#xA;    interface ITypeLibConverter" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices.ITypeLibConverter</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("f1c3bf79-c3e4-11d3-88e7-00902754c43a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="50ece-101">관리되는 어셈블리를 COM 형식 라이브러리로 변환하거나 반대로 변환하는 서비스 집합을 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="50ece-101">Provides a set of services that convert a managed assembly to a COM type library and vice versa.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeLibConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.TypeLibConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeLibConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="50ece-102">
            <see cref="T:System.Runtime.InteropServices.TypeLibConverter" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-102">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.TypeLibConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertAssemblyToTypeLib">
      <MemberSignature Language="C#" Value="public object ConvertAssemblyToTypeLib (System.Reflection.Assembly assembly, string strTypeLibName, System.Runtime.InteropServices.TypeLibExporterFlags flags, System.Runtime.InteropServices.ITypeLibExporterNotifySink notifySink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertAssemblyToTypeLib(class System.Reflection.Assembly assembly, string strTypeLibName, valuetype System.Runtime.InteropServices.TypeLibExporterFlags flags, class System.Runtime.InteropServices.ITypeLibExporterNotifySink notifySink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib(System.Reflection.Assembly,System.String,System.Runtime.InteropServices.TypeLibExporterFlags,System.Runtime.InteropServices.ITypeLibExporterNotifySink)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertAssemblyToTypeLib(System::Reflection::Assembly ^ assembly, System::String ^ strTypeLibName, System::Runtime::InteropServices::TypeLibExporterFlags flags, System::Runtime::InteropServices::ITypeLibExporterNotifySink ^ notifySink);" />
      <MemberSignature Language="F#" Value="abstract member ConvertAssemblyToTypeLib : System.Reflection.Assembly * string * System.Runtime.InteropServices.TypeLibExporterFlags * System.Runtime.InteropServices.ITypeLibExporterNotifySink -&gt; obj&#xA;override this.ConvertAssemblyToTypeLib : System.Reflection.Assembly * string * System.Runtime.InteropServices.TypeLibExporterFlags * System.Runtime.InteropServices.ITypeLibExporterNotifySink -&gt; obj" Usage="typeLibConverter.ConvertAssemblyToTypeLib (assembly, strTypeLibName, flags, notifySink)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ITypeLibConverter.ConvertAssemblyToTypeLib(System.Reflection.Assembly,System.String,System.Runtime.InteropServices.TypeLibExporterFlags,System.Runtime.InteropServices.ITypeLibExporterNotifySink)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        <Parameter Name="strTypeLibName" Type="System.String" />
        <Parameter Name="flags" Type="System.Runtime.InteropServices.TypeLibExporterFlags" />
        <Parameter Name="notifySink" Type="System.Runtime.InteropServices.ITypeLibExporterNotifySink" />
      </Parameters>
      <Docs>
        <param name="assembly">
          <span data-ttu-id="50ece-103">변환할 어셈블리입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-103">The assembly to convert.</span>
          </span>
        </param>
        <param name="strTypeLibName">
          <span data-ttu-id="50ece-104">결과로 만들어지는 형식 라이브러리의 파일 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-104">The file name of the resulting type library.</span>
          </span>
        </param>
        <param name="flags">
          <span data-ttu-id="50ece-105">특별한 설정을 나타내는 <see cref="T:System.Runtime.InteropServices.TypeLibExporterFlags" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-105">A <see cref="T:System.Runtime.InteropServices.TypeLibExporterFlags" /> value indicating any special settings.</span>
          </span>
        </param>
        <param name="notifySink">
          <span data-ttu-id="50ece-106">호출자가 구현한 <see cref="T:System.Runtime.InteropServices.ITypeLibExporterNotifySink" /> 인터페이스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-106">The <see cref="T:System.Runtime.InteropServices.ITypeLibExporterNotifySink" /> interface implemented by the caller.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50ece-107">어셈블리를 COM 형식 라이브러리로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-107">Converts an assembly to a COM type library.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="50ece-108">
            <see langword="ITypeLib" /> 인터페이스를 구현하는 개체</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-108">An object that implements the <see langword="ITypeLib" /> interface.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50ece-109">대 한 자세한 내용은 `ITypeLib`, MSDN 라이브러리의 기존 해당 설명서를 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="50ece-109">For more information on `ITypeLib`, please see its existing documentation in the MSDN library.</span></span>  
  
   
  
## Examples  
 [!code-cpp[System.Runtime.InteropServices.TypelibConverter.ConvertAssemblyToTypelib1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Runtime.InteropServices.TypelibConverter.ConvertAssemblyToTypelib1/CPP/convert2.cpp#1)]
 [!code-csharp[System.Runtime.InteropServices.TypelibConverter.ConvertAssemblyToTypelib1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.InteropServices.TypelibConverter.ConvertAssemblyToTypelib1/CS/convert2.cs#1)]
 [!code-vb[System.Runtime.InteropServices.TypelibConverter.ConvertAssemblyToTypelib1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.InteropServices.TypelibConverter.ConvertAssemblyToTypelib1/VB/convert2.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="50ece-110">관리 되지 않는 코드를 호출할 수 있는 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-110">for permission to call unmanaged code.</span>
          </span>
          <span data-ttu-id="50ece-111">보안 동작: 요청 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-111">Security Action: Demand.</span>
          </span>
          <span data-ttu-id="50ece-112">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-112">Associated Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertTypeLibToAssembly">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="50ece-113">COM 형식 라이브러리를 어셈블리로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-113">Converts a COM type library to an assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertTypeLibToAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.AssemblyBuilder ConvertTypeLibToAssembly (object typeLib, string asmFileName, int flags, System.Runtime.InteropServices.ITypeLibImporterNotifySink notifySink, byte[] publicKey, System.Reflection.StrongNameKeyPair keyPair, bool unsafeInterfaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Emit.AssemblyBuilder ConvertTypeLibToAssembly(object typeLib, string asmFileName, int32 flags, class System.Runtime.InteropServices.ITypeLibImporterNotifySink notifySink, unsigned int8[] publicKey, class System.Reflection.StrongNameKeyPair keyPair, bool unsafeInterfaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertTypeLibToAssembly (typeLib As Object, asmFileName As String, flags As Integer, notifySink As ITypeLibImporterNotifySink, publicKey As Byte(), keyPair As StrongNameKeyPair, unsafeInterfaces As Boolean) As AssemblyBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Emit::AssemblyBuilder ^ ConvertTypeLibToAssembly(System::Object ^ typeLib, System::String ^ asmFileName, int flags, System::Runtime::InteropServices::ITypeLibImporterNotifySink ^ notifySink, cli::array &lt;System::Byte&gt; ^ publicKey, System::Reflection::StrongNameKeyPair ^ keyPair, bool unsafeInterfaces);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTypeLibToAssembly : obj * string * int * System.Runtime.InteropServices.ITypeLibImporterNotifySink * byte[] * System.Reflection.StrongNameKeyPair * bool -&gt; System.Reflection.Emit.AssemblyBuilder&#xA;override this.ConvertTypeLibToAssembly : obj * string * int * System.Runtime.InteropServices.ITypeLibImporterNotifySink * byte[] * System.Reflection.StrongNameKeyPair * bool -&gt; System.Reflection.Emit.AssemblyBuilder" Usage="typeLibConverter.ConvertTypeLibToAssembly (typeLib, asmFileName, flags, notifySink, publicKey, keyPair, unsafeInterfaces)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ITypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.AssemblyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeLib" Type="System.Object" />
        <Parameter Name="asmFileName" Type="System.String" />
        <Parameter Name="flags" Type="System.Int32" />
        <Parameter Name="notifySink" Type="System.Runtime.InteropServices.ITypeLibImporterNotifySink" />
        <Parameter Name="publicKey" Type="System.Byte[]" />
        <Parameter Name="keyPair" Type="System.Reflection.StrongNameKeyPair" />
        <Parameter Name="unsafeInterfaces" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="typeLib">
          <span data-ttu-id="50ece-114">
            <see langword="ITypeLib" /> 인터페이스를 구현하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-114">The object that implements the <see langword="ITypeLib" /> interface.</span>
          </span>
        </param>
        <param name="asmFileName">
          <span data-ttu-id="50ece-115">결과로 만들어지는 어셈블리의 파일 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-115">The file name of the resulting assembly.</span>
          </span>
        </param>
        <param name="flags">
          <span data-ttu-id="50ece-116">특별한 설정을 나타내는 <see cref="T:System.Runtime.InteropServices.TypeLibImporterFlags" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-116">A <see cref="T:System.Runtime.InteropServices.TypeLibImporterFlags" /> value indicating any special settings.</span>
          </span>
        </param>
        <param name="notifySink">
          <span data-ttu-id="50ece-117">호출자가 구현한 <see cref="T:System.Runtime.InteropServices.ITypeLibImporterNotifySink" /> 인터페이스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-117">
              <see cref="T:System.Runtime.InteropServices.ITypeLibImporterNotifySink" /> interface implemented by the caller.</span>
          </span>
        </param>
        <param name="publicKey">
          <span data-ttu-id="50ece-118">공개 키를 포함하는 <see langword="byte" /> 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-118">A <see langword="byte" /> array containing the public key.</span>
          </span>
        </param>
        <param name="keyPair">
          <span data-ttu-id="50ece-119">공개 및 개인 암호화 키 쌍을 포함하는 <see cref="T:System.Reflection.StrongNameKeyPair" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-119">A <see cref="T:System.Reflection.StrongNameKeyPair" /> object containing the public and private cryptographic key pair.</span>
          </span>
        </param>
        <param name="unsafeInterfaces">
          <span data-ttu-id="50ece-120">
            <see langword="true" />인 경우 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> 권한에 대한 링크 시간이 검사되어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-120">If <see langword="true" />, the interfaces require link time checks for <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> permission.</span>
          </span>
          <span data-ttu-id="50ece-121">
            <see langword="false" />인 경우 스택 워크가 필요하고 비용은 더 많이 들지만 더 많은 보호 기능을 제공하는 런타임 검사가 수행되어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-121">If <see langword="false" />, the interfaces require run time checks that require a stack walk and are more expensive, but help provide greater protection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50ece-122">COM 형식 라이브러리를 어셈블리로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-122">Converts a COM type library to an assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="50ece-123">변환된 형식 라이브러리를 포함하는 <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-123">An <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> object containing the converted type library.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50ece-124">어셈블리에 대 한 강력한 이름을 생성 하지 않을 경우에 사용할 수 `publicKey` 및 `keyPair` 되도록 `null`로 `flags` 같지 않음 <xref:System.Runtime.InteropServices.TypeLibImporterFlags.PrimaryInteropAssembly?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="50ece-124">If you do not want to generate a strong name for your assembly, it is valid for `publicKey` and `keyPair` to be `null`, as long as `flags` does not equal <xref:System.Runtime.InteropServices.TypeLibImporterFlags.PrimaryInteropAssembly?displayProperty=nameWithType>.</span></span> <span data-ttu-id="50ece-125">그렇지 않으면이 매개 변수 중 하나 이상 지정 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="50ece-125">Otherwise, at least one of these parameters must be specified.</span></span> <span data-ttu-id="50ece-126">경우 `publicKey` 은 `null`의 공개 키 `keyPair` 대상 어셈블리 매니페스트 메타 데이터에 설정 되 고 어셈블리의 내용에 따라 서명을 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="50ece-126">If `publicKey` is `null`, the public key in `keyPair` will be set in the target assembly's manifest metadata and a signature will be generated based on the contents of the assembly.</span></span> <span data-ttu-id="50ece-127">경우 `keyPair` 은 `null`, `publicKey` 대상 어셈블리 매니페스트 메타 데이터에 설정 되 고 서명이 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="50ece-127">If `keyPair` is `null`, `publicKey` will be set in the target assembly's manifest metadata and no signature will be generated.</span></span> <span data-ttu-id="50ece-128">두 매개 변수를 지정 하는 일반적으로 유용 하지 않습니다 및 잘못 된 서명 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="50ece-128">Specifying both parameters is not generally useful, and can result in an invalid signature.</span></span>  
  
 <span data-ttu-id="50ece-129">대 한 자세한 내용은 `ITypeLib`, MSDN 라이브러리의 기존 해당 설명서를 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="50ece-129">For more information on `ITypeLib`, please see its existing documentation in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="50ece-130">
            <paramref name="typeLib" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-130">
              <paramref name="typeLib" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="50ece-131">-또는-  <paramref name="asmFileName" />이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-131">-or-  <paramref name="asmFileName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="50ece-132">-또는-  <paramref name="notifySink" />이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-132">-or-  <paramref name="notifySink" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="50ece-133">
            <paramref name="asmFileName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-133">
              <paramref name="asmFileName" /> is an empty string.</span>
          </span>
          <span data-ttu-id="50ece-134">-또는-  <paramref name="asmFileName" />이 시스템 정의 최대 길이보다 깁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-134">-or-  <paramref name="asmFileName" /> is longer than the system-defined maximum length.</span>
          </span>
          <span data-ttu-id="50ece-135">자세한 내용은 <see cref="T:System.IO.PathTooLongException" />을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-135">For more information, see <see cref="T:System.IO.PathTooLongException" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="50ece-136">
            <paramref name="flags" />이 <see cref="F:System.Runtime.InteropServices.TypeLibImporterFlags.PrimaryInteropAssembly" />가 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-136">
              <paramref name="flags" /> is not <see cref="F:System.Runtime.InteropServices.TypeLibImporterFlags.PrimaryInteropAssembly" />.</span>
          </span>
          <span data-ttu-id="50ece-137">-또는-  <paramref name="publicKey" /> 및 <paramref name="keyPair" />가 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-137">-or-  <paramref name="publicKey" /> and <paramref name="keyPair" /> are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.ReflectionTypeLoadException">
          <span data-ttu-id="50ece-138">생성된 메타데이터에 형식의 로드를 막는 오류가 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-138">The metadata produced has errors preventing any types from loading.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="50ece-139">관리 되지 않는 코드를 호출할 수 있는 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-139">for permission to call unmanaged code.</span>
          </span>
          <span data-ttu-id="50ece-140">보안 동작: 요청 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-140">Security Action: Demand.</span>
          </span>
          <span data-ttu-id="50ece-141">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-141">Associated Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ConvertTypeLibToAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.AssemblyBuilder ConvertTypeLibToAssembly (object typeLib, string asmFileName, System.Runtime.InteropServices.TypeLibImporterFlags flags, System.Runtime.InteropServices.ITypeLibImporterNotifySink notifySink, byte[] publicKey, System.Reflection.StrongNameKeyPair keyPair, string asmNamespace, Version asmVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Emit.AssemblyBuilder ConvertTypeLibToAssembly(object typeLib, string asmFileName, valuetype System.Runtime.InteropServices.TypeLibImporterFlags flags, class System.Runtime.InteropServices.ITypeLibImporterNotifySink notifySink, unsigned int8[] publicKey, class System.Reflection.StrongNameKeyPair keyPair, string asmNamespace, class System.Version asmVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertTypeLibToAssembly (typeLib As Object, asmFileName As String, flags As TypeLibImporterFlags, notifySink As ITypeLibImporterNotifySink, publicKey As Byte(), keyPair As StrongNameKeyPair, asmNamespace As String, asmVersion As Version) As AssemblyBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Emit::AssemblyBuilder ^ ConvertTypeLibToAssembly(System::Object ^ typeLib, System::String ^ asmFileName, System::Runtime::InteropServices::TypeLibImporterFlags flags, System::Runtime::InteropServices::ITypeLibImporterNotifySink ^ notifySink, cli::array &lt;System::Byte&gt; ^ publicKey, System::Reflection::StrongNameKeyPair ^ keyPair, System::String ^ asmNamespace, Version ^ asmVersion);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTypeLibToAssembly : obj * string * System.Runtime.InteropServices.TypeLibImporterFlags * System.Runtime.InteropServices.ITypeLibImporterNotifySink * byte[] * System.Reflection.StrongNameKeyPair * string * Version -&gt; System.Reflection.Emit.AssemblyBuilder&#xA;override this.ConvertTypeLibToAssembly : obj * string * System.Runtime.InteropServices.TypeLibImporterFlags * System.Runtime.InteropServices.ITypeLibImporterNotifySink * byte[] * System.Reflection.StrongNameKeyPair * string * Version -&gt; System.Reflection.Emit.AssemblyBuilder" Usage="typeLibConverter.ConvertTypeLibToAssembly (typeLib, asmFileName, flags, notifySink, publicKey, keyPair, asmNamespace, asmVersion)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ITypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.AssemblyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeLib" Type="System.Object" />
        <Parameter Name="asmFileName" Type="System.String" />
        <Parameter Name="flags" Type="System.Runtime.InteropServices.TypeLibImporterFlags" />
        <Parameter Name="notifySink" Type="System.Runtime.InteropServices.ITypeLibImporterNotifySink" />
        <Parameter Name="publicKey" Type="System.Byte[]" />
        <Parameter Name="keyPair" Type="System.Reflection.StrongNameKeyPair" />
        <Parameter Name="asmNamespace" Type="System.String" />
        <Parameter Name="asmVersion" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="typeLib">
          <span data-ttu-id="50ece-142">
            <see langword="ITypeLib" /> 인터페이스를 구현하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-142">The object that implements the <see langword="ITypeLib" /> interface.</span>
          </span>
        </param>
        <param name="asmFileName">
          <span data-ttu-id="50ece-143">결과로 만들어지는 어셈블리의 파일 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-143">The file name of the resulting assembly.</span>
          </span>
        </param>
        <param name="flags">
          <span data-ttu-id="50ece-144">특별한 설정을 나타내는 <see cref="T:System.Runtime.InteropServices.TypeLibImporterFlags" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-144">A <see cref="T:System.Runtime.InteropServices.TypeLibImporterFlags" /> value indicating any special settings.</span>
          </span>
        </param>
        <param name="notifySink">
          <span data-ttu-id="50ece-145">호출자가 구현한 <see cref="T:System.Runtime.InteropServices.ITypeLibImporterNotifySink" /> 인터페이스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-145">
              <see cref="T:System.Runtime.InteropServices.ITypeLibImporterNotifySink" /> interface implemented by the caller.</span>
          </span>
        </param>
        <param name="publicKey">
          <span data-ttu-id="50ece-146">공개 키를 포함하는 <see langword="byte" /> 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-146">A <see langword="byte" /> array containing the public key.</span>
          </span>
        </param>
        <param name="keyPair">
          <span data-ttu-id="50ece-147">공개 및 개인 암호화 키 쌍을 포함하는 <see cref="T:System.Reflection.StrongNameKeyPair" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-147">A <see cref="T:System.Reflection.StrongNameKeyPair" /> object containing the public and private cryptographic key pair.</span>
          </span>
        </param>
        <param name="asmNamespace">
          <span data-ttu-id="50ece-148">결과로 만들어지는 어셈블리의 네임스페이스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-148">The namespace for the resulting assembly.</span>
          </span>
        </param>
        <param name="asmVersion">
          <span data-ttu-id="50ece-149">결과로 만들어지는 어셈블리의 버전입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-149">The version of the resulting assembly.</span>
          </span>
          <span data-ttu-id="50ece-150">
            <see langword="null" />이면 형식 라이브러리의 버전이 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-150">If <see langword="null" />, the version of the type library is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50ece-151">COM 형식 라이브러리를 어셈블리로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-151">Converts a COM type library to an assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="50ece-152">변환된 형식 라이브러리를 포함하는 <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-152">An <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> object containing the converted type library.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50ece-153">어셈블리에 대 한 강력한 이름을 생성 하지 않을 경우에 사용할 수 `publicKey` 및 `keyPair` 되도록 `null`로 `flags` 같지 않음 <xref:System.Runtime.InteropServices.TypeLibImporterFlags.PrimaryInteropAssembly?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="50ece-153">If you do not want to generate a strong name for your assembly, it is valid for `publicKey` and `keyPair` to be `null`, as long as `flags` does not equal <xref:System.Runtime.InteropServices.TypeLibImporterFlags.PrimaryInteropAssembly?displayProperty=nameWithType>.</span></span> <span data-ttu-id="50ece-154">그렇지 않으면이 매개 변수 중 하나 이상 지정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="50ece-154">Otherwise, atleast one of these parameters must be specified.</span></span> <span data-ttu-id="50ece-155">경우 `publicKey` 은 `null`의 공개 키 `keyPair` 대상 어셈블리 매니페스트 메타 데이터에 설정 되 고 어셈블리의 내용에 따라 서명을 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="50ece-155">If `publicKey` is `null`, the public key in `keyPair` will be set in the target assembly's manifest metadata and a signature will be generated based on the contents of the assembly.</span></span> <span data-ttu-id="50ece-156">경우 `keyPair` 은 `null`, `publicKey` 대상 어셈블리 매니페스트 메타 데이터에 설정 되 고 서명이 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="50ece-156">If `keyPair` is `null`, `publicKey` will be set in the target assembly's manifest metadata and no signature will be generated.</span></span> <span data-ttu-id="50ece-157">두 매개 변수를 지정 하는 일반적으로 유용 하지 않습니다 및 잘못 된 서명 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="50ece-157">Specifying both parameters is not generally useful, and can result in an invalid signature.</span></span>  
  
 <span data-ttu-id="50ece-158">대 한 자세한 내용은 `ITypeLib`, MSDN 라이브러리의 기존 해당 설명서를 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="50ece-158">For more information on `ITypeLib`, please see its existing documentation in the MSDN library.</span></span>  
  
   
  
## Examples  
 [!code-cpp[System.Runtime.InteropServices.ConvertTypelibToASSembly#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Runtime.InteropServices.ConvertTypelibToASSembly/CPP/convert1.cpp#1)]
 [!code-csharp[System.Runtime.InteropServices.ConvertTypelibToASSembly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.InteropServices.ConvertTypelibToASSembly/CS/convert1.cs#1)]
 [!code-vb[System.Runtime.InteropServices.ConvertTypelibToASSembly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.InteropServices.ConvertTypelibToASSembly/VB/convert1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="50ece-159">
            <paramref name="typeLib" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-159">
              <paramref name="typeLib" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="50ece-160">-또는-  <paramref name="asmFileName" />이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-160">-or-  <paramref name="asmFileName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="50ece-161">-또는-  <paramref name="notifySink" />이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-161">-or-  <paramref name="notifySink" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="50ece-162">
            <paramref name="asmFileName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-162">
              <paramref name="asmFileName" /> is an empty string.</span>
          </span>
          <span data-ttu-id="50ece-163">-또는-  <paramref name="asmFileName" />이 시스템 정의 최대 길이보다 깁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-163">-or-  <paramref name="asmFileName" /> is longer than the system-defined maximum length.</span>
          </span>
          <span data-ttu-id="50ece-164">자세한 내용은 <see cref="T:System.IO.PathTooLongException" />을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-164">For more information, see <see cref="T:System.IO.PathTooLongException" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="50ece-165">
            <paramref name="flags" />이 <see cref="F:System.Runtime.InteropServices.TypeLibImporterFlags.PrimaryInteropAssembly" />가 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-165">
              <paramref name="flags" /> is not <see cref="F:System.Runtime.InteropServices.TypeLibImporterFlags.PrimaryInteropAssembly" />.</span>
          </span>
          <span data-ttu-id="50ece-166">-또는-  <paramref name="publicKey" /> 및 <paramref name="keyPair" />가 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-166">-or-  <paramref name="publicKey" /> and <paramref name="keyPair" /> are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.ReflectionTypeLoadException">
          <span data-ttu-id="50ece-167">생성된 메타데이터에 형식의 로드를 막는 오류가 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-167">The metadata produced has errors preventing any types from loading.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="50ece-168">관리 되지 않는 코드를 호출할 수 있는 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-168">for permission to call unmanaged code.</span>
          </span>
          <span data-ttu-id="50ece-169">보안 동작: 요청 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-169">Security Action: Demand.</span>
          </span>
          <span data-ttu-id="50ece-170">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-170">Associated Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetPrimaryInteropAssembly">
      <MemberSignature Language="C#" Value="public bool GetPrimaryInteropAssembly (Guid g, int major, int minor, int lcid, out string asmName, out string asmCodeBase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetPrimaryInteropAssembly(valuetype System.Guid g, int32 major, int32 minor, int32 lcid, [out] string&amp; asmName, [out] string&amp; asmCodeBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.TypeLibConverter.GetPrimaryInteropAssembly(System.Guid,System.Int32,System.Int32,System.Int32,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrimaryInteropAssembly (g As Guid, major As Integer, minor As Integer, lcid As Integer, ByRef asmName As String, ByRef asmCodeBase As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetPrimaryInteropAssembly(Guid g, int major, int minor, int lcid, [Runtime::InteropServices::Out] System::String ^ % asmName, [Runtime::InteropServices::Out] System::String ^ % asmCodeBase);" />
      <MemberSignature Language="F#" Value="abstract member GetPrimaryInteropAssembly : Guid * int * int * int *  *  -&gt; bool&#xA;override this.GetPrimaryInteropAssembly : Guid * int * int * int *  *  -&gt; bool" Usage="typeLibConverter.GetPrimaryInteropAssembly (g, major, minor, lcid, asmName, asmCodeBase)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ITypeLibConverter.GetPrimaryInteropAssembly(System.Guid,System.Int32,System.Int32,System.Int32,System.String@,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Guid" />
        <Parameter Name="major" Type="System.Int32" />
        <Parameter Name="minor" Type="System.Int32" />
        <Parameter Name="lcid" Type="System.Int32" />
        <Parameter Name="asmName" Type="System.String&amp;" RefType="out" />
        <Parameter Name="asmCodeBase" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="g">
          <span data-ttu-id="50ece-171">형식 라이브러리의 GUID입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-171">The GUID of the type library.</span>
          </span>
        </param>
        <param name="major">
          <span data-ttu-id="50ece-172">형식 라이브러리의 주 버전 번호입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-172">The major version number of the type library.</span>
          </span>
        </param>
        <param name="minor">
          <span data-ttu-id="50ece-173">형식 라이브러리의 부 버전 번호입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-173">The minor version number of the type library.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="50ece-174">형식 라이브러리의 LCID입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-174">The LCID of the type library.</span>
          </span>
        </param>
        <param name="asmName">
          <span data-ttu-id="50ece-175">반환이 성공적이면 <c>g</c>와 관련된 주 interop 어셈블리의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-175">On successful return, the name of the primary interop assembly associated with <c>g</c>.</span>
          </span>
        </param>
        <param name="asmCodeBase">
          <span data-ttu-id="50ece-176">반환이 성공적이면 <c>g</c>와 관련된 주 interop 어셈블리의 코드 베이스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-176">On successful return, the code base of the primary interop assembly associated with <c>g</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50ece-177">지정된 형식 라이브러리에 대한 주 interop 어셈블리의 이름 및 코드 베이스를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-177">Gets the name and code base of a primary interop assembly for a specified type library.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="50ece-178">주 interop 어셈블리가 레지스트리에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50ece-178">
              <see langword="true" /> if the primary interop assembly was found in the registry; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>