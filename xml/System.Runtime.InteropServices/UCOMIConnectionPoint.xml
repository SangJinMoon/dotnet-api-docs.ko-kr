<Type Name="UCOMIConnectionPoint" FullName="System.Runtime.InteropServices.UCOMIConnectionPoint">
  <TypeSignature Language="C#" Value="public interface UCOMIConnectionPoint" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract UCOMIConnectionPoint" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.UCOMIConnectionPoint" />
  <TypeSignature Language="VB.NET" Value="Public Interface UCOMIConnectionPoint" />
  <TypeSignature Language="C++ CLI" Value="public interface class UCOMIConnectionPoint" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("b196b286-bab4-101a-b69c-00aa00341d07")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="14ed3-101">대신 <see cref="T:System.Runtime.InteropServices.ComTypes.IConnectionPoint" />를 사용하세요.</span><span class="sxs-lookup"><span data-stu-id="14ed3-101">Use <see cref="T:System.Runtime.InteropServices.ComTypes.IConnectionPoint" /> instead.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14ed3-102">자세한 정보에 대 한 기존 설명서를 참조 하십시오 `IConnectionPoint` MSDN library의 com 하위 폴더에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="14ed3-102">For more information, please see the existing documentation for `IConnectionPoint` in the com subfolder of the MSDN library.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Advise">
      <MemberSignature Language="C#" Value="public void Advise (object pUnkSink, out int pdwCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Advise(object pUnkSink, [out] int32&amp; pdwCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIConnectionPoint.Advise(System.Object,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Advise (pUnkSink As Object, ByRef pdwCookie As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Advise(System::Object ^ pUnkSink, [Runtime::InteropServices::Out] int % pdwCookie);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pUnkSink" Type="System.Object" />
        <Parameter Name="pdwCookie" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pUnkSink"><span data-ttu-id="14ed3-103">이 연결점이 관리하는 송신 인터페이스에 대한 호출을 받는 싱크에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="14ed3-103">Reference to the sink to receive calls for the outgoing interface managed by this connection point.</span></span></param>
        <param name="pdwCookie"><span data-ttu-id="14ed3-104">반환이 성공적이면, 연결 쿠키를 포함하여 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="14ed3-104">On successful return, contains the connection cookie.</span></span></param>
        <summary><span data-ttu-id="14ed3-105">연결점과 호출자의 싱크 개체 사이에 권장되는 연결을 설치합니다.</span><span class="sxs-lookup"><span data-stu-id="14ed3-105">Establishes an advisory connection between the connection point and the caller's sink object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14ed3-106">자세한 정보에 대 한 기존 설명서를 참조 하십시오 `IConnectionPoint::Advise` MSDN 라이브러리에서.</span><span class="sxs-lookup"><span data-stu-id="14ed3-106">For more information, please see the existing documentation for `IConnectionPoint::Advise` in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumConnections">
      <MemberSignature Language="C#" Value="public void EnumConnections (out System.Runtime.InteropServices.UCOMIEnumConnections ppEnum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnumConnections([out] class System.Runtime.InteropServices.UCOMIEnumConnections&amp; ppEnum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIConnectionPoint.EnumConnections(System.Runtime.InteropServices.UCOMIEnumConnections@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnumConnections (ByRef ppEnum As UCOMIEnumConnections)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumConnections([Runtime::InteropServices::Out] System::Runtime::InteropServices::UCOMIEnumConnections ^ % ppEnum);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ppEnum" Type="System.Runtime.InteropServices.UCOMIEnumConnections&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ppEnum"><span data-ttu-id="14ed3-107">반환이 성공적이면, 새로 만들어진 열거자를 포함하여 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="14ed3-107">On successful return, contains the newly created enumerator.</span></span></param>
        <summary><span data-ttu-id="14ed3-108">이 연결점에 있는 접속을 통해 반복적으로 열거자 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="14ed3-108">Creates an enumerator object for iteration through the connections that exist to this connection point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14ed3-109">자세한 정보에 대 한 기존 설명서를 참조 하십시오 `IConnectionPoint::EnumConnections` MSDN 라이브러리에서.</span><span class="sxs-lookup"><span data-stu-id="14ed3-109">For more information, please see the existing documentation for `IConnectionPoint::EnumConnections` in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConnectionInterface">
      <MemberSignature Language="C#" Value="public void GetConnectionInterface (out Guid pIID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetConnectionInterface([out] valuetype System.Guid&amp; pIID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIConnectionPoint.GetConnectionInterface(System.Guid@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetConnectionInterface (ByRef pIID As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetConnectionInterface([Runtime::InteropServices::Out] Guid % pIID);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pIID" Type="System.Guid&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pIID"><span data-ttu-id="14ed3-110">반환이 성공적이면, 이 연결점이 관리하는 송신 인터페이스의 IID를 포함하여 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="14ed3-110">On successful return, contains the IID of the outgoing interface managed by this connection point.</span></span></param>
        <summary><span data-ttu-id="14ed3-111">이 연결점이 관리하는 송신 인터페이스의 IID를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="14ed3-111">Returns the IID of the outgoing interface managed by this connection point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14ed3-112">자세한 정보에 대 한 기존 설명서를 참조 하십시오 `IConnectionPoint::GetConnectionInterface` MSDN 라이브러리에서.</span><span class="sxs-lookup"><span data-stu-id="14ed3-112">For more information, please see the existing documentation for `IConnectionPoint::GetConnectionInterface` in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConnectionPointContainer">
      <MemberSignature Language="C#" Value="public void GetConnectionPointContainer (out System.Runtime.InteropServices.UCOMIConnectionPointContainer ppCPC);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetConnectionPointContainer([out] class System.Runtime.InteropServices.UCOMIConnectionPointContainer&amp; ppCPC) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIConnectionPoint.GetConnectionPointContainer(System.Runtime.InteropServices.UCOMIConnectionPointContainer@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetConnectionPointContainer (ByRef ppCPC As UCOMIConnectionPointContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetConnectionPointContainer([Runtime::InteropServices::Out] System::Runtime::InteropServices::UCOMIConnectionPointContainer ^ % ppCPC);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ppCPC" Type="System.Runtime.InteropServices.UCOMIConnectionPointContainer&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ppCPC"><span data-ttu-id="14ed3-113">반환이 성공적이면, 연결 가능한 개체의 <see langword="IConnectionPointContainer" /> 인터페이스를 포함하여 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="14ed3-113">On successful return, contains the connectable object's <see langword="IConnectionPointContainer" /> interface.</span></span></param>
        <summary><span data-ttu-id="14ed3-114">이 연결점을 개념적으로 소유하는 연결 가능한 개체에 대한 <see langword="IConnectionPointContainer" /> 인터페이스 포인터를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="14ed3-114">Retrieves the <see langword="IConnectionPointContainer" /> interface pointer to the connectable object that conceptually owns this connection point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14ed3-115">자세한 정보에 대 한 기존 설명서를 참조 하십시오 `IConnectionPoint::GetConnectionPointContainer` MSDN 라이브러리에서.</span><span class="sxs-lookup"><span data-stu-id="14ed3-115">For more information, please see the existing documentation for `IConnectionPoint::GetConnectionPointContainer` in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unadvise">
      <MemberSignature Language="C#" Value="public void Unadvise (int dwCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unadvise(int32 dwCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIConnectionPoint.Unadvise(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unadvise (dwCookie As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unadvise(int dwCookie);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dwCookie" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dwCookie"><span data-ttu-id="14ed3-116">이전에 <see cref="M:System.Runtime.InteropServices.UCOMIConnectionPoint.Advise(System.Object,System.Int32@)" />에서 반환된 연결 쿠키입니다.</span><span class="sxs-lookup"><span data-stu-id="14ed3-116">The connection cookie previously returned from <see cref="M:System.Runtime.InteropServices.UCOMIConnectionPoint.Advise(System.Object,System.Int32@)" />.</span></span></param>
        <summary><span data-ttu-id="14ed3-117"><see cref="M:System.Runtime.InteropServices.UCOMIConnectionPoint.Advise(System.Object,System.Int32@)" />를 통해 이전에 설치된 권장된 연결을 종료합니다.</span><span class="sxs-lookup"><span data-stu-id="14ed3-117">Terminates an advisory connection previously established through <see cref="M:System.Runtime.InteropServices.UCOMIConnectionPoint.Advise(System.Object,System.Int32@)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14ed3-118">자세한 정보에 대 한 기존 설명서를 참조 하십시오 `IConnectionPoint::Unadvise` MSDN 라이브러리에서.</span><span class="sxs-lookup"><span data-stu-id="14ed3-118">For more information, please see the existing documentation for `IConnectionPoint::Unadvise` in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>