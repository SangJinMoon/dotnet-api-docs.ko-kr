<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="OutAttribute.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56a5f667aa9e088c1293983294fb45fd08504295c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6a5f667aa9e088c1293983294fb45fd08504295c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.OutAttribute">
          <source>Indicates that data should be marshaled from callee back to caller.</source>
          <target state="translated">데이터가 수신자에서 호출자로 다시 마샬링되어야 한다는 것을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.OutAttribute">
          <source>You can apply this attribute to parameters.</source>
          <target state="translated">매개 변수를이 특성을 적용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.OutAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.OutAttribute&gt;</ph> is optional.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.OutAttribute&gt;</ph> 은 선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.OutAttribute">
          <source>The attribute is supported for COM interop and platform invoke only.</source>
          <target state="translated">특성은 COM interop에 대 한 지원 및 플랫폼만 호출 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.OutAttribute">
          <source>In the absence of explicit settings, the interop marshaler assumes rules based on the parameter type, whether the parameter is passed by reference or by value, and whether the type is blittable or non-blittable.</source>
          <target state="translated">명시적 설정이 없는 경우에는 interop 마샬러만 유형, 매개 변수 값 또는 참조로 전달 되는 여부 및 비 blittable 형식 또는 blittable 형식이 인지 규칙 매개 변수를 기준으로 가정 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.OutAttribute">
          <source>For example, the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> class is always assumed to be In/Out and an array of strings passed by value is assumed to be In.</source>
          <target state="translated">예를 들어는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 클래스는 항상 In/Out 이어야 하 값으로 전달 하는 문자열의 배열에 있는 것으로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.OutAttribute">
          <source>Out-only behavior is never a default marshaling behavior for parameters.</source>
          <target state="translated">외부 전용 동작이 마샬링 동작이 매개 변수에 대 한 기본 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.OutAttribute">
          <source>You can apply the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.OutAttribute&gt;</ph> to value and reference types passed by reference to change In/Out behavior to Out-only behavior, which is equivalent to using the <ph id="ph2">`out`</ph> keyword in C#.</source>
          <target state="translated">적용할 수는 <ph id="ph1">&lt;xref:System.Runtime.InteropServices.OutAttribute&gt;</ph> In/Out 동작을 사용 하는 것과 같은 외부 전용 동작을 변경 하는 참조로 전달 하는 값 및 참조 형식에는 <ph id="ph2">`out`</ph> C# 키워드입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.OutAttribute">
          <source>For example, arrays passed by value, marshaled as In-only parameters by default, can be changed to Out-only.</source>
          <target state="translated">예를 들어 기본적으로에서 전용 매개 변수로 마샬링할 값으로 전달 된 배열은 Out 전용으로 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.OutAttribute">
          <source>However, the behavior does not always provide expected semantics when the types include all-blittable elements or fields because the interop marshaler uses pinning.</source>
          <target state="translated">그러나 동작이 제공 되지 않는 경우도 예상된 의미 체계 모든 blittable 요소를 포함 하는 형식 또는 고정 하는 interop 마샬러만 사용 하기 때문에 필드.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.OutAttribute">
          <source>If you do not care about passing data into the callee, Out-only marshaling can provide better performance for non-blittable types.</source>
          <target state="translated">호출 수신자에 데이터를 전달 하는 방법에 대 한 중요 하지 않은 경우 out-only 마샬링 non-blittable 형식에 대 한 더 나은 성능을 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.OutAttribute">
          <source>Combining the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.InAttribute&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.OutAttribute&gt;</ph> is particularly useful when applied to arrays and formatted, non-blittable types.</source>
          <target state="translated">결합 된 <ph id="ph1">&lt;xref:System.Runtime.InteropServices.InAttribute&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Runtime.InteropServices.OutAttribute&gt;</ph> 경우 특히 유용 배열에 적용 하 고 비 blittable 형식에 서식이 지정 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.OutAttribute">
          <source>Callers see the changes a callee makes to these types only when you apply both attributes.</source>
          <target state="translated">호출자가 두 특성을 적용 하는 경우에 호출 수신자가 이러한 형식에 변경 내용을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.OutAttribute">
          <source>Since these types require copying during marshaling, you can use <ph id="ph1">&lt;xref:System.Runtime.InteropServices.InAttribute&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.OutAttribute&gt;</ph> to reduce unnecessary copies.</source>
          <target state="translated">이러한 형식을 마샬링하는 동안 복사 필요로 하므로 사용할 수 있습니다 <ph id="ph1">&lt;xref:System.Runtime.InteropServices.InAttribute&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Runtime.InteropServices.OutAttribute&gt;</ph> 불필요 한 복사본을 줄일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.OutAttribute">
          <source>For more information on the effect of <ph id="ph1">&lt;xref:System.Runtime.InteropServices.OutAttribute&gt;</ph> on marshaling behavior, see <bpt id="p1">[</bpt>Directional Attributes<ept id="p1">](http://msdn.microsoft.com/library/241ac5b5-928e-4969-8f58-1dbc048f9ea2)</ept>.</source>
          <target state="translated">효과 대 한 자세한 내용은 <ph id="ph1">&lt;xref:System.Runtime.InteropServices.OutAttribute&gt;</ph> 마샬링 동작을에 참조 <bpt id="p1">[</bpt>방향 특성<ept id="p1">](http://msdn.microsoft.com/library/241ac5b5-928e-4969-8f58-1dbc048f9ea2)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.OutAttribute">
          <source>The following example shows how to apply the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.InAttribute&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.OutAttribute&gt;</ph> to a platform invoke prototype that passes an array as a parameter.</source>
          <target state="translated">적용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Runtime.InteropServices.InAttribute&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Runtime.InteropServices.OutAttribute&gt;</ph> 플랫폼 호출 프로토타입으로 배열을 매개 변수로 전달 하는 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.OutAttribute">
          <source>The combination of directional attributes allows the caller to see the changes made by the callee.</source>
          <target state="translated">방향 특성의 조합을 호출자가 호출 수신자가 변경한 내용을 볼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.OutAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.OutAttribute" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.OutAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>