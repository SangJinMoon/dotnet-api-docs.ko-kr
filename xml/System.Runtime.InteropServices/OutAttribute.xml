<Type Name="OutAttribute" FullName="System.Runtime.InteropServices.OutAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6a5f667aa9e088c1293983294fb45fd08504295c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OutAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OutAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.OutAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OutAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class OutAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Parameter, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="892ec-101">데이터가 수신자에서 호출자로 다시 마샬링되어야 한다는 것을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="892ec-101">Indicates that data should be marshaled from callee back to caller.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="892ec-102">매개 변수를이 특성을 적용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="892ec-102">You can apply this attribute to parameters.</span></span>  
  
 <span data-ttu-id="892ec-103"><xref:System.Runtime.InteropServices.OutAttribute> 은 선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="892ec-103">The <xref:System.Runtime.InteropServices.OutAttribute> is optional.</span></span> <span data-ttu-id="892ec-104">특성은 COM interop에 대 한 지원 및 플랫폼만 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="892ec-104">The attribute is supported for COM interop and platform invoke only.</span></span> <span data-ttu-id="892ec-105">명시적 설정이 없는 경우에는 interop 마샬러만 유형, 매개 변수 값 또는 참조로 전달 되는 여부 및 비 blittable 형식 또는 blittable 형식이 인지 규칙 매개 변수를 기준으로 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="892ec-105">In the absence of explicit settings, the interop marshaler assumes rules based on the parameter type, whether the parameter is passed by reference or by value, and whether the type is blittable or non-blittable.</span></span> <span data-ttu-id="892ec-106">예를 들어는 <xref:System.Text.StringBuilder> 클래스는 항상 In/Out 이어야 하 값으로 전달 하는 문자열의 배열에 있는 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="892ec-106">For example, the <xref:System.Text.StringBuilder> class is always assumed to be In/Out and an array of strings passed by value is assumed to be In.</span></span>  
  
 <span data-ttu-id="892ec-107">외부 전용 동작이 마샬링 동작이 매개 변수에 대 한 기본 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="892ec-107">Out-only behavior is never a default marshaling behavior for parameters.</span></span> <span data-ttu-id="892ec-108">적용할 수는 <xref:System.Runtime.InteropServices.OutAttribute> In/Out 동작을 사용 하는 것과 같은 외부 전용 동작을 변경 하는 참조로 전달 하는 값 및 참조 형식에는 `out` C# 키워드입니다.</span><span class="sxs-lookup"><span data-stu-id="892ec-108">You can apply the <xref:System.Runtime.InteropServices.OutAttribute> to value and reference types passed by reference to change In/Out behavior to Out-only behavior, which is equivalent to using the `out` keyword in C#.</span></span> <span data-ttu-id="892ec-109">예를 들어 기본적으로에서 전용 매개 변수로 마샬링할 값으로 전달 된 배열은 Out 전용으로 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="892ec-109">For example, arrays passed by value, marshaled as In-only parameters by default, can be changed to Out-only.</span></span> <span data-ttu-id="892ec-110">그러나 동작이 제공 되지 않는 경우도 예상된 의미 체계 모든 blittable 요소를 포함 하는 형식 또는 고정 하는 interop 마샬러만 사용 하기 때문에 필드.</span><span class="sxs-lookup"><span data-stu-id="892ec-110">However, the behavior does not always provide expected semantics when the types include all-blittable elements or fields because the interop marshaler uses pinning.</span></span> <span data-ttu-id="892ec-111">호출 수신자에 데이터를 전달 하는 방법에 대 한 중요 하지 않은 경우 out-only 마샬링 non-blittable 형식에 대 한 더 나은 성능을 제공할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="892ec-111">If you do not care about passing data into the callee, Out-only marshaling can provide better performance for non-blittable types.</span></span>  
  
 <span data-ttu-id="892ec-112">결합 된 <xref:System.Runtime.InteropServices.InAttribute> 및 <xref:System.Runtime.InteropServices.OutAttribute> 경우 특히 유용 배열에 적용 하 고 비 blittable 형식에 서식이 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="892ec-112">Combining the <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> is particularly useful when applied to arrays and formatted, non-blittable types.</span></span> <span data-ttu-id="892ec-113">호출자가 두 특성을 적용 하는 경우에 호출 수신자가 이러한 형식에 변경 내용을 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="892ec-113">Callers see the changes a callee makes to these types only when you apply both attributes.</span></span> <span data-ttu-id="892ec-114">이러한 형식을 마샬링하는 동안 복사 필요로 하므로 사용할 수 있습니다 <xref:System.Runtime.InteropServices.InAttribute> 및 <xref:System.Runtime.InteropServices.OutAttribute> 불필요 한 복사본을 줄일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="892ec-114">Since these types require copying during marshaling, you can use <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> to reduce unnecessary copies.</span></span>  
  
 <span data-ttu-id="892ec-115">효과 대 한 자세한 내용은 <xref:System.Runtime.InteropServices.OutAttribute> 마샬링 동작을에 참조 [방향 특성](http://msdn.microsoft.com/library/241ac5b5-928e-4969-8f58-1dbc048f9ea2)합니다.</span><span class="sxs-lookup"><span data-stu-id="892ec-115">For more information on the effect of <xref:System.Runtime.InteropServices.OutAttribute> on marshaling behavior, see [Directional Attributes](http://msdn.microsoft.com/library/241ac5b5-928e-4969-8f58-1dbc048f9ea2).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="892ec-116">적용 하는 방법을 보여 주는 다음 예제는 <xref:System.Runtime.InteropServices.InAttribute> 및 <xref:System.Runtime.InteropServices.OutAttribute> 플랫폼 호출 프로토타입으로 배열을 매개 변수로 전달 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="892ec-116">The following example shows how to apply the <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> to a platform invoke prototype that passes an array as a parameter.</span></span> <span data-ttu-id="892ec-117">방향 특성의 조합을 호출자가 호출 수신자가 변경한 내용을 볼 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="892ec-117">The combination of directional attributes allows the caller to see the changes made by the callee.</span></span>  
  
 [!code-cpp[Interop InOutParameters#1](~/samples/snippets/cpp/VS_Snippets_CLR/Interop InOutParameters/CPP/inout.cpp#1)]
 [!code-csharp[Interop InOutParameters#1](~/samples/snippets/csharp/VS_Snippets_CLR/Interop InOutParameters/CS/inout.cs#1)]
 [!code-vb[Interop InOutParameters#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Interop InOutParameters/VB/inout.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.InteropServices.InAttribute" />
    <altmember cref="T:System.Text.StringBuilder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.OutAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OutAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="892ec-118">
            <see cref="T:System.Runtime.InteropServices.OutAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="892ec-118">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.OutAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>