<Type Name="COMException" FullName="System.Runtime.InteropServices.COMException">
  <TypeSignature Language="C#" Value="public class COMException : System.Runtime.InteropServices.ExternalException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit COMException extends System.Runtime.InteropServices.ExternalException" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.COMException" />
  <TypeSignature Language="VB.NET" Value="Public Class COMException&#xA;Inherits ExternalException" />
  <TypeSignature Language="C++ CLI" Value="public ref class COMException : System::Runtime::InteropServices::ExternalException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.Runtime.InteropServices.ExternalException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="cc596-101">COM 메서드 호출에서 인식할 수 없는 HRESULT가 반환되는 경우에 throw되는 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-101">The exception that is thrown when an unrecognized HRESULT is returned from a COM method call.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc596-102">공용 언어 런타임에서 잘 알려진 Hresult를.NET Framework 예외 관리 되는 클라이언트에 의미 있는 오류 정보를 반환 하는 COM 개체를 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-102">The common language runtime transforms well-known HRESULTs to .NET Framework exceptions, enabling COM objects to return meaningful error information to managed clients.</span></span> <span data-ttu-id="cc596-103">HRESULT 예외 매핑을 관리 되지 않는 클라이언트에 특정 Hresult를 반환 하 여 다른 방향으로도 작동 합니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-103">The HRESULT to exception mapping also works in the other direction by returning specific HRESULTs to unmanaged clients.</span></span> <span data-ttu-id="cc596-104">매핑 정보에 대 한 참조 [하는 방법: 지도 Hresult 및 예외](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-104">For mapping details, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span></span>  
  
 <span data-ttu-id="cc596-105">런타임에 알 수 없는 HRESULT (부족 구체적이 고 해당 예외를 HRESULT)를 발견 하는 경우 throw의 인스턴스는 <xref:System.Runtime.InteropServices.COMException> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-105">When the runtime encounters an unfamiliar HRESULT (an HRESULT that lacks a specific, corresponding exception), it throws an instance of the <xref:System.Runtime.InteropServices.COMException> class.</span></span> <span data-ttu-id="cc596-106">이 다목적 예외는 모든 예외와 동일한 멤버를 노출 하 고 공용 상속 <xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A> HRESULT가 들어 있는 속성 호출 수신자가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-106">This all-purpose exception exposes the same members as any exception, and inherits a public <xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A> property that contains the HRESULT returned by the callee.</span></span> <span data-ttu-id="cc596-107">오류 메시지를 런타임에 사용할 수 있는 경우 (에서 가져온는 [IErrorInfo](https://msdn.microsoft.com/library/windows/desktop/ms723041\(v=vs.85\).aspx) 인터페이스 또는 `Err` Visual basic에서 또는 운영 체제에서 일부 경우에는 개체), 메시지가 호출자에 게 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-107">If an error message is available to the runtime (obtained from the [IErrorInfo](https://msdn.microsoft.com/library/windows/desktop/ms723041\(v=vs.85\).aspx) interface or the `Err` object in Visual Basic, or in some cases from the operating system), the message is returned to the caller.</span></span> <span data-ttu-id="cc596-108">그러나 COM 구성 요소 개발자가 오류 메시지를 포함하지 않은 경우에는 런타임에서 메시지 문자열 대신 8자리 숫자로 구성된 HRESULT를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-108">However, if the COM component developer fails to include an error message, the runtime returns the eight-digit HRESULT in place of a message string.</span></span> <span data-ttu-id="cc596-109">HRESULT 값이 일반 예외의 원인을 확인 하려면 호출자에 게 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-109">Having an HRESULT allows the caller to determine the cause of the generic exception.</span></span>  
  
## <a name="handling-a-comexception-exception"></a><span data-ttu-id="cc596-110">COMException 예외 처리</span><span class="sxs-lookup"><span data-stu-id="cc596-110">Handling a COMException exception</span></span>  
 <span data-ttu-id="cc596-111">다음은 문제 해결을 위한 몇 가지 고려 사항 한 <xref:System.Runtime.InteropServices.COMException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-111">The following are some considerations for troubleshooting a <xref:System.Runtime.InteropServices.COMException> exception.</span></span>  
  
 <span data-ttu-id="cc596-112">확인 된 <xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A> 속성</span><span class="sxs-lookup"><span data-stu-id="cc596-112">Check the <xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A> property</span></span>  
 <span data-ttu-id="cc596-113">런타임에 알 수 없는 HRESULT를 발견 하 고 throw 하는 경우는 <xref:System.Runtime.InteropServices.COMException> 예외는 <xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A> 오류 메시지를 포함 하는 속성 또는 오류 메시지를 사용할 수 없는 경우 8 자리 HRESULT 값입니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-113">When the runtime encounters an unfamiliar HRESULT and throws a <xref:System.Runtime.InteropServices.COMException> exception,  the <xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A> property includes either the error message or, if an error message is unavailable, the eight-digit HRESULT value.</span></span>  <span data-ttu-id="cc596-114">오류 메시지 또는 HRESULT 값을 예외의 원인을 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-114">The error message or the HRESULT value can help you determine the cause of the exception.</span></span>  
  
 <span data-ttu-id="cc596-115">HRESULT 값의 목록이 참조 [일반적인 HRESULT 값](https://msdn.microsoft.com/library/windows/desktop/aa378137\(v=vs.85\).aspx)합니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-115">For a list of HRESULT values, see [Common HRESULT Values](https://msdn.microsoft.com/library/windows/desktop/aa378137\(v=vs.85\).aspx).</span></span>  
  
 <span data-ttu-id="cc596-116">런타임에 바인딩된 인수 및 Microsoft Office 개체</span><span class="sxs-lookup"><span data-stu-id="cc596-116">Late-bound arguments and Microsoft Office objects</span></span>  
 <span data-ttu-id="cc596-117">런타임에 바인딩된 인수를 Microsoft Office 개체의 메서드에 전달 하는 경우는 <xref:System.Runtime.InteropServices.COMException> 개체가 COM 개체는 예외를 throw 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-117">When passing late-bound arguments to methods of Microsoft Office objects, a <xref:System.Runtime.InteropServices.COMException> exception may be thrown when the objects are COM objects.</span></span> <span data-ttu-id="cc596-118">런타임 바인더에서는 이러한 메서드 호출에 `ByRef` 매개 변수가 사용되는 것으로 간주하고 사용자가 전달한 속성에 `set` 접근자가 있는 것으로 간주합니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-118">The late binder assumes that such method calls involve a `ByRef` parameter and that the property you pass has a `set` accessor.</span></span> <span data-ttu-id="cc596-119">속성이 표시 되지 않는 경우.NET Framework를 생성 한 <xref:System.MissingMethodException> 예외 (으로 `CORE_E_MISSINGMETHOD` HRESULT)입니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-119">If the property does not, the .NET Framework generates a <xref:System.MissingMethodException> exception (with a `CORE_E_MISSINGMETHOD` HRESULT ).</span></span> <span data-ttu-id="cc596-120">이 문제를 해결하려면 초기 바인딩 개체를 사용하거나 개체의 속성 대신 변수를 전달합니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-120">To work around this behavior, use early-bound objects or pass a variable instead of a property of the object.</span></span>  
  
 <span data-ttu-id="cc596-121">Visual Studio와 호스팅 프로세스</span><span class="sxs-lookup"><span data-stu-id="cc596-121">Visual Studio and the hosting process</span></span>  
 <span data-ttu-id="cc596-122">COM은 Visual Studio 간의 통신에 사용 되 고 [호스팅 프로세스](https://msdn.microsoft.com/library/ms185331.aspx)합니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-122">COM is used to communicate between Visual Studio and the [hosting process](https://msdn.microsoft.com/library/ms185331.aspx).</span></span> <span data-ttu-id="cc596-123">코드 실행에 대 한 호출 되기 전에 사용 되므로 [CoInitializeSecurity](https://msdn.microsoft.com/library/windows/desktop/ms693736\(v=vs.85\).aspx) 이 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-123">Because it is used before code runs, a call to [CoInitializeSecurity](https://msdn.microsoft.com/library/windows/desktop/ms693736\(v=vs.85\).aspx) causes this exception to be thrown.</span></span>  
  
 <span data-ttu-id="cc596-124">경우에 따라 관리자 권한으로 Visual Studio를 실행 해도 문제가 해결 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-124">In some cases, running Visual Studio as Administrator may resolve the issue.</span></span> <span data-ttu-id="cc596-125">수도 있습니다 [호스팅 프로세스 비활성화](https://msdn.microsoft.com/library/ms185330.aspx)합니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-125">You can also [disable the hosting process](https://msdn.microsoft.com/library/ms185330.aspx).</span></span>  
  
## <a name="throwing-a-comexception-exception"></a><span data-ttu-id="cc596-126">COMException 예외를 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-126">Throwing a COMException exception</span></span>  
 <span data-ttu-id="cc596-127">사용할 수 있지만 <xref:System.Runtime.InteropServices.COMException> 특정.NET Framework 예외를 throw 하는 관리 되지 않는 클라이언트에 특정 Hresult를 반환 하는 클래스는 일반 예외를 사용 하 여 보다는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-127">Although you can use the <xref:System.Runtime.InteropServices.COMException> class to return specific HRESULTs to unmanaged clients, throwing a specific .NET Framework exception is better than using a generic exception.</span></span> <span data-ttu-id="cc596-128">관리 되지 않는 클라이언트 뿐 아니라 관리 되는 클라이언트에.NET Framework 개체를 사용할 수와 HRESULT 관리 되는 호출자를 throw 하는 것은 예외를 throw 하는 보다 덜 이해할 수 있음을 고려해 야 합니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-128">Consider that managed clients as well as unmanaged clients can use your .NET Framework object, and throwing an HRESULT to a managed caller is less comprehensible than throwing an exception.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc596-129"><see cref="T:System.Runtime.InteropServices.COMException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-129">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.COMException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public COMException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.COMException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; COMException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc596-130">기본값을 사용하여 <see cref="T:System.Runtime.InteropServices.COMException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-130">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.COMException" /> class with default values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc596-131"><xref:System.Runtime.InteropServices.COMException>는 <xref:System.Runtime.InteropServices.ExternalException>에서 상속됩니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-131"><xref:System.Runtime.InteropServices.COMException> inherits from <xref:System.Runtime.InteropServices.ExternalException>.</span></span> <span data-ttu-id="cc596-132">다음 표에서이 생성자의 속성을 설정 하는 방법을 보여 줍니다.는 <xref:System.Exception> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-132">The following table shows how this constructor sets the properties of the <xref:System.Exception> object.</span></span>  
  
|<span data-ttu-id="cc596-133">속성</span><span class="sxs-lookup"><span data-stu-id="cc596-133">Property</span></span>|<span data-ttu-id="cc596-134">값</span><span class="sxs-lookup"><span data-stu-id="cc596-134">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="cc596-135">`null`.</span><span class="sxs-lookup"><span data-stu-id="cc596-135">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="cc596-136">지역화 된 오류 메시지 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-136">A localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public COMException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.COMException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; COMException(System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="cc596-137">예외에 대한 이유를 나타내는 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-137">The message that indicates the reason for the exception.</span></span></param>
        <summary><span data-ttu-id="cc596-138">지정된 메시지를 사용하여 <see cref="T:System.Runtime.InteropServices.COMException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-138">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.COMException" /> class with a specified message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc596-139"><xref:System.Runtime.InteropServices.COMException>는 <xref:System.Runtime.InteropServices.ExternalException>에서 상속됩니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-139"><xref:System.Runtime.InteropServices.COMException> inherits from <xref:System.Runtime.InteropServices.ExternalException>.</span></span> <span data-ttu-id="cc596-140">다음 표에서이 생성자의 속성을 설정 하는 방법을 보여 줍니다.는 <xref:System.Exception> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-140">The following table shows how this constructor sets the properties of the <xref:System.Exception> object.</span></span>  
  
|<span data-ttu-id="cc596-141">속성</span><span class="sxs-lookup"><span data-stu-id="cc596-141">Property</span></span>|<span data-ttu-id="cc596-142">값</span><span class="sxs-lookup"><span data-stu-id="cc596-142">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|`null`|  
|<xref:System.Exception.Message%2A>|`message`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected COMException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.COMException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; COMException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="cc596-143">serialize된 개체 데이터를 유지하는 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-143">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized object data.</span></span></param>
        <param name="context"><span data-ttu-id="cc596-144">소스 또는 대상에 대한 컨텍스트 정보를 제공하는 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-144">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that supplies the contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="cc596-145">serialization 데이터로부터 <see cref="T:System.Runtime.InteropServices.COMException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-145">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.COMException" /> class from serialization data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc596-146">이 생성자는 deserialization을 수행하는 동안 호출되어 스트림을 통해 전송된 예외 개체를 다시 구성합니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-146">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="cc596-147">자세한 내용은 참조 [XML 및 SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-147">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
 <span data-ttu-id="cc596-148"><xref:System.Runtime.InteropServices.COMException>는 <xref:System.Runtime.InteropServices.ExternalException>에서 상속됩니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-148"><xref:System.Runtime.InteropServices.COMException> inherits from <xref:System.Runtime.InteropServices.ExternalException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cc596-149"><paramref name="info" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="cc596-149"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Runtime.InteropServices.ExternalException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public COMException (string message, Exception inner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.COMException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, inner As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; COMException(System::String ^ message, Exception ^ inner);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="inner" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="cc596-150">@FSHO2@예외 이유를 설명하는 오류 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-150">The error message that explains the reason for the exception.</span></span></param>
        <param name="inner"><span data-ttu-id="cc596-151">현재 예외의 원인인 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-151">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="cc596-152"><c>inner</c> 매개 변수가 <see langword="null" />이 아니면 현재 예외는 내부 예외를 처리하는 <see langword="catch" /> 블록에서 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-152">If the <c>inner</c> parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="cc596-153">지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.Runtime.InteropServices.COMException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-153">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.COMException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc596-154">이전 예외의 직접적인 결과로 throw되는 예외의 <xref:System.Exception.InnerException%2A> 속성에는 이전 예외에 대한 참조가 들어 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-154">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="cc596-155"><xref:System.Exception.InnerException%2A> 속성은 생성자에 전달되는 값과 동일한 값을 반환하며, `null` 속성이 생성자에 내부 예외 값을 제공하지 않는 경우에는 <xref:System.Exception.InnerException%2A>을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-155">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="cc596-156">다음 표에서이 생성자의 속성을 설정 하는 방법을 보여 줍니다.는 <xref:System.Exception> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-156">The following table shows how this constructor sets the properties of the <xref:System.Exception> object.</span></span>  
  
|<span data-ttu-id="cc596-157">속성</span><span class="sxs-lookup"><span data-stu-id="cc596-157">Property</span></span>|<span data-ttu-id="cc596-158">값</span><span class="sxs-lookup"><span data-stu-id="cc596-158">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="cc596-159">내부 예외 참조</span><span class="sxs-lookup"><span data-stu-id="cc596-159">The inner exception reference.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="cc596-160">오류 메시지 문자열</span><span class="sxs-lookup"><span data-stu-id="cc596-160">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public COMException (string message, int errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, int32 errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.COMException.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, errorCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; COMException(System::String ^ message, int errorCode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="errorCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="cc596-161">예외가 발생한 이유를 나타내는 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-161">The message that indicates the reason the exception occurred.</span></span></param>
        <param name="errorCode"><span data-ttu-id="cc596-162">이 예외와 관련된 오류 코드(HRESULT) 값입니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-162">The error code (HRESULT) value associated with this exception.</span></span></param>
        <summary><span data-ttu-id="cc596-163">지정된 메시지와 오류 코드를 사용하여 <see cref="T:System.Runtime.InteropServices.COMException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-163">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.COMException" /> class with a specified message and error code.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc596-164">이 <xref:System.Runtime.InteropServices.COMException> 생성자는 기본 메시지를 오류 코드로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-164">This <xref:System.Runtime.InteropServices.COMException> constructor sets the base message with the error code.</span></span>  
  
 <span data-ttu-id="cc596-165"><xref:System.Runtime.InteropServices.COMException>는 <xref:System.Runtime.InteropServices.ExternalException>에서 상속됩니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-165"><xref:System.Runtime.InteropServices.COMException> inherits from <xref:System.Runtime.InteropServices.ExternalException>.</span></span> <span data-ttu-id="cc596-166">다음 표에서이 생성자의 속성을 설정 하는 방법을 보여 줍니다.는 <xref:System.Exception> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-166">The following table shows how this constructor sets the properties of the <xref:System.Exception> object.</span></span>  
  
|<span data-ttu-id="cc596-167">속성</span><span class="sxs-lookup"><span data-stu-id="cc596-167">Property</span></span>|<span data-ttu-id="cc596-168">값</span><span class="sxs-lookup"><span data-stu-id="cc596-168">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|`null`|  
|<xref:System.Exception.Message%2A>|`message`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.COMException.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc596-169">예외의 내용을 문자열로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-169">Converts the contents of the exception to a string.</span></span></summary>
        <returns><span data-ttu-id="cc596-170">예외의 <see cref="P:System.Exception.HResult" />, <see cref="P:System.Exception.Message" />, <see cref="P:System.Exception.InnerException" /> 및 <see cref="P:System.Exception.StackTrace" /> 속성을 포함하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="cc596-170">A string containing the <see cref="P:System.Exception.HResult" />, <see cref="P:System.Exception.Message" />, <see cref="P:System.Exception.InnerException" />, and <see cref="P:System.Exception.StackTrace" /> properties of the exception.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Exception.HResult" />
        <altmember cref="P:System.Exception.Message" />
        <altmember cref="P:System.Exception.InnerException" />
        <altmember cref="P:System.Exception.StackTrace" />
      </Docs>
    </Member>
  </Members>
</Type>