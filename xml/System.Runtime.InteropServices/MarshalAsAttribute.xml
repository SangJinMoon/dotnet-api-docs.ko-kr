<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MarshalAsAttribute.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f2e777bc7171cbc1fc67df87ed564e93db5f751e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f2e777bc7171cbc1fc67df87ed564e93db5f751e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>Indicates how to marshal the data between managed and unmanaged code.</source>
          <target state="translated">관리 코드와 비관리 코드 간에 데이터를 마샬링하는 방법을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>You can apply this attribute to parameters, fields, or return values.</source>
          <target state="translated">매개 변수를 필드에이 특성을 적용 하거나 값을 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>This attribute is optional, as each data type has a default marshaling behavior.</source>
          <target state="translated">각 데이터 형식에는 기본 마샬링 동작이이 특성은 선택적 요소입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>This attribute is only necessary when a given type can be marshaled to multiple types.</source>
          <target state="translated">이 특성은 없음과 같은 형식이 여러 형식으로 마샬링할 수 있는 경우에 필요 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>For example, you can marshal a string to unmanaged code as either a <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPStr&gt;</ph>, a <ph id="ph2">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPWStr&gt;</ph>, a <ph id="ph3">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPTStr&gt;</ph>, or a <ph id="ph4">&lt;xref:System.Runtime.InteropServices.UnmanagedType.BStr&gt;</ph>.</source>
          <target state="translated">예를 들어로 관리 되지 않는 코드에는 문자열을 마샬링할 수 있습니다는 <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPStr&gt;</ph>, <ph id="ph2">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPWStr&gt;</ph>, <ph id="ph3">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPTStr&gt;</ph>, 또는 <ph id="ph4">&lt;xref:System.Runtime.InteropServices.UnmanagedType.BStr&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>By default, the common language runtime marshals a string parameter as a <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType.BStr&gt;</ph> to COM methods.</source>
          <target state="translated">기본적으로 공용 언어 런타임에서 문자열 매개 변수로 마샬링합니다는 <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType.BStr&gt;</ph> COM 메서드를 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>You can apply the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> attribute to an individual field or parameter to cause that particular string to be marshaled as a <ph id="ph2">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPStr&gt;</ph> instead of a <ph id="ph3">&lt;xref:System.Runtime.InteropServices.UnmanagedType.BStr&gt;</ph>.</source>
          <target state="translated">적용할 수는 <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> 특성 개별 필드 또는 매개 변수에로 마샬링할 수에 해당 특정 문자열을 한 <ph id="ph2">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPStr&gt;</ph> 대신는 <ph id="ph3">&lt;xref:System.Runtime.InteropServices.UnmanagedType.BStr&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>The <bpt id="p1">[</bpt>Tlbexp.exe (Type Library Exporter)<ept id="p1">](~/docs/framework/tools/tlbexp-exe-type-library-exporter.md)</ept> passes your marshaling preferences to the common language runtime.</source>
          <target state="translated"><bpt id="p1">[</bpt>Tlbexp.exe (형식 라이브러리 내보내기)<ept id="p1">](~/docs/framework/tools/tlbexp-exe-type-library-exporter.md)</ept> 공용 언어 런타임 마샬링 기본 설정에 전달 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>Some parameters and return values have different default marshaling behavior when used with COM interop or platform invoke.</source>
          <target state="translated">일부 매개 변수 및 반환 값은 다양 한 기본 마샬링 COM interop와 함께 사용할 경우 동작 또는 플랫폼 호출 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>By default, the runtime marshals a string parameter (and fields in a value type) as a <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPStr&gt;</ph> to a platform invoke method or function.</source>
          <target state="translated">기본적으로 런타임은 문자열 매개 변수 (및 값 형식에서 필드) 변수로 마샬링합니다는 <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPStr&gt;</ph> 로 플랫폼 메서드 또는 함수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>For additional information, see <bpt id="p1">[</bpt>Default Marshaling Behavior<ept id="p1">](~/docs/framework/interop/default-marshaling-behavior.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>기본 마샬링 동작<ept id="p1">](~/docs/framework/interop/default-marshaling-behavior.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>In most cases, the attribute simply identifies the format of the unmanaged data using the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType&gt;</ph> enumeration, as shown in the following C# signature:</source>
          <target state="translated">대부분의 경우에서 특성 형식을 쉽게 식별을 사용 하 여 관리 되지 않는 데이터는 <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType&gt;</ph> 다음 C# 시그니처 에서처럼 열거형:</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>Some <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType&gt;</ph> enumeration members require additional information.</source>
          <target state="translated">일부 <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType&gt;</ph> 열거형 멤버 추가 정보가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>For example, additional information is needed when the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType&gt;</ph> is <ph id="ph2">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPArray&gt;</ph>.</source>
          <target state="translated">예를 들어 추가 정보가 필요한 경우는 <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType&gt;</ph> 은 <ph id="ph2">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPArray&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>For a complete description of how to use this attribute with arrays, see <bpt id="p1">[</bpt>Default Marshaling for Arrays<ept id="p1">](~/docs/framework/interop/default-marshaling-for-arrays.md)</ept>.</source>
          <target state="translated">배열이 포함 된이 특성을 사용 하는 방법에 대 한 전체 설명은 참조 하세요. <bpt id="p1">[</bpt>배열에 대 한 마샬링 기본<ept id="p1">](~/docs/framework/interop/default-marshaling-for-arrays.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>The <bpt id="p1">[</bpt>Tlbimp.exe (Type Library Importer)<ept id="p1">](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)</ept> also applies this attribute to parameters, fields, and return values to indicate that the data type in the input type library is not the default type for the corresponding managed data type.</source>
          <target state="translated"><bpt id="p1">[</bpt>Tlbimp.exe (형식 라이브러리 가져오기)<ept id="p1">](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)</ept> 도 매개 변수, 필드 및 반환 값을 입력된 형식 라이브러리에서 데이터 형식을 해당 하는 관리 되는 데이터 형식은 기본 형식의 아님을 나타내기에이 특성을 적용 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>Tlbimp.exe always applies the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> to <ph id="ph2">&lt;xref:System.String&gt;</ph> and <ph id="ph3">&lt;xref:System.Object&gt;</ph> types for clarity, regardless of the type specified in the input type library.</source>
          <target state="translated">Tlbimp.exe 항상 적용는 <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> 를 <ph id="ph2">&lt;xref:System.String&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Object&gt;</ph> 입력된 형식 라이브러리에 지정 된 형식에 관계 없이 명확성을 위해 형식입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> does not support marshaling of generic types.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> 제네릭 형식의 마샬링은 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>The following example applies the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> to a field, a method parameter, and a method return value in a managed type.</source>
          <target state="translated">다음 예제에서는 적용는 <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> 필드, 메서드 매개 변수 및 메서드는 관리 되는 형식의 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>The following example applies the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> attribute to a property:</source>
          <target state="translated">다음 예제에서는 적용 된 <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> 특성 속성:</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.MarshalAsAttribute" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.MarshalAsAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Int16)">
          <source>The value the data is to be marshaled as.</source>
          <target state="translated">데이터를 마샬링할 값입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Int16)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.MarshalAsAttribute" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.UnmanagedType" /&gt;</ph> value.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.MarshalAsAttribute" /&gt;</ph> 값을 사용하여 <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.UnmanagedType" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Int16)">
          <source>This constructor takes an underlying 16-bit signed integer that represents each <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType&gt;</ph> enumeration member.</source>
          <target state="translated">이 생성자는 각각 나타내는 기본 16 비트 부호 있는 정수 <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType&gt;</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Int16)">
          <source>The <bpt id="p1">[</bpt>Tlbimp.exe (Type Library Importer)<ept id="p1">](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)</ept> uses this constructor.</source>
          <target state="translated"><bpt id="p1">[</bpt>Tlbimp.exe (형식 라이브러리 가져오기)<ept id="p1">](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)</ept> 이 생성자를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)">
          <source>The value the data is to be marshaled as.</source>
          <target state="translated">데이터를 마샬링할 값입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.MarshalAsAttribute" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.UnmanagedType" /&gt;</ph> enumeration member.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.MarshalAsAttribute" /&gt;</ph> 열거형 멤버를 사용하여 <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.UnmanagedType" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)">
          <source>For readable code that is less prone to error, always use this constructor.</source>
          <target state="translated">오류가 발생할 가능성이 감소 되는 읽을 수 있는 코드에 대 한 항상이 생성자를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.ArraySubType">
          <source>Specifies the element type of the unmanaged <ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.UnmanagedType.LPArray" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.Runtime.InteropServices.UnmanagedType.ByValArray" /&gt;</ph>.</source>
          <target state="translated">관리되지 않는 <ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.UnmanagedType.LPArray" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.Runtime.InteropServices.UnmanagedType.ByValArray" /&gt;</ph>의 요소 형식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.ArraySubType">
          <source>You can set this parameter to a value from the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=nameWithType&gt;</ph> enumeration to specify the type of the array's elements.</source>
          <target state="translated">이 매개 변수에서 값으로 설정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=nameWithType&gt;</ph> 배열 요소의 형식을 지정 하는 열거형입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.ArraySubType">
          <source>If a type is not specified, the default unmanaged type corresponding to the managed array's element type is used.</source>
          <target state="translated">형식이 지정 되지 않은 해당 관리 되는 배열의 요소 형식을 하는 관리 되지 않는 기본 형식이 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.ArraySubType">
          <source>For example, the <ph id="ph1">`ArraySubType`</ph> for a <ph id="ph2">`LPWStr`</ph> array in COM is <ph id="ph3">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPWStr?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">예를 들어는 <ph id="ph1">`ArraySubType`</ph> 에 대 한는 <ph id="ph2">`LPWStr`</ph> com에서 배열이 <ph id="ph3">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPWStr?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.ArraySubType">
          <source>For additional information, see <bpt id="p1">[</bpt>Default Marshaling for Arrays<ept id="p1">](~/docs/framework/interop/default-marshaling-for-arrays.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>배열에 대 한 마샬링 기본<ept id="p1">](~/docs/framework/interop/default-marshaling-for-arrays.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.IidParameterIndex">
          <source>Specifies the parameter index of the unmanaged <ph id="ph1">&lt;see langword="iid_is" /&gt;</ph> attribute used by COM.</source>
          <target state="translated">COM에서 사용하는 관리되지 않는 <ph id="ph1">&lt;see langword="iid_is" /&gt;</ph> 특성의 매개 변수 인덱스를 지정합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie">
          <source>Provides additional information to a custom marshaler.</source>
          <target state="translated">사용자 지정 마샬러에 추가 정보를 제공합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie">
          <source>This field is optional when using a custom marshaler.</source>
          <target state="translated">사용자 지정 마샬러를 사용 하는 경우이 필드는 선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie">
          <source>You can set this field to a string that supplies additional information to a custom marshaler.</source>
          <target state="translated">추가 정보는 사용자 지정 마샬러를 제공 하는 문자열에이 필드를 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie">
          <source>For example, the same marshaler can be used to provide a number of wrappers, where the cookie is used to indicate the specific wrapper.</source>
          <target state="translated">예를 들어 동일한 마샬러 데 사용할 수는 다양 한 래퍼를 제공 특정 래퍼를 나타내기 위해 쿠키를 사용 하는 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType">
          <source>Specifies the fully qualified name of a custom marshaler.</source>
          <target state="translated">사용자 지정 마샬러의 정규화된 이름을 지정합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType">
          <source>You can use either the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> or <ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef?displayProperty=nameWithType&gt;</ph> field specify a custom marshaler type for the attributed parameter, field, or return type.</source>
          <target state="translated">하나를 사용할 수는 <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef?displayProperty=nameWithType&gt;</ph> 필드 특성이 지정 된 매개 변수에 대 한 사용자 지정 마샬러 형식이, 필드 또는 반환 형식을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> field enables you to specify a string representing the fully qualified name of a custom marshaler.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> 필드를 사용 하면 사용자 지정 마샬러의 정규화 된 이름을 나타내는 문자열을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType">
          <source>It is useful for late-bound references, but is less preferred than <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</ph> for specifying a custom marshaler.</source>
          <target state="translated">런타임에 바인딩된 참조에 대 한 것이 유용 하지만 작은 기본 설정 보다 <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</ph> 사용자 지정 마샬러를 지정 하는 데 있습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType">
          <source>For additional information about creating and using custom marshalers, see <bpt id="p1">[</bpt>Custom Marshaling<ept id="p1">](http://msdn.microsoft.com/library/49f9ac47-1619-4d6e-9da6-bf06bba12079)</ept>.</source>
          <target state="translated">만들기 및 사용자 지정 마샬러를 사용 하는 방법에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>사용자 지정 마샬링<ept id="p1">](http://msdn.microsoft.com/library/49f9ac47-1619-4d6e-9da6-bf06bba12079)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef">
          <source>Implements <ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType" /&gt;</ph> as a type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType" /&gt;</ph>을 형식으로 구현합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef">
          <source>You can use either the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</ph> or <ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> field to specify a custom marshaler type for the attributed parameter, field, or return type.</source>
          <target state="translated">하나를 사용할 수는 <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> 지정 특성이 지정 된 매개 변수에 대 한 사용자 지정 마샬러 형식, 필드 또는 반환 형식에 필드를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</ph> field allows easier usage of <ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> by shortening the syntax.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</ph> 필드를 사용 하면 보다 쉽게 사용할 <ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> 구문을 줄여 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef">
          <source>In the following example, the first line represents syntax using <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> and the second line represents syntax using <ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 첫 번째 줄 나타냅니다 구문을 사용 하 여 <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> 구문을 사용 하 여 두 번째 줄 나타내고 <ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef">
          <source>You can set a <ph id="ph1">&lt;xref:System.Type&gt;</ph> object using <ph id="ph2">`typeof`</ph> in C#, <ph id="ph3">`GetType`</ph> in Visual Basic, or <ph id="ph4">`typeid`</ph> in C++.</source>
          <target state="translated">설정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Type&gt;</ph> 개체 사용 하 여 <ph id="ph2">`typeof`</ph> C#에서 <ph id="ph3">`GetType`</ph> Visual basic에서 또는 <ph id="ph4">`typeid`</ph> c + +에서입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef">
          <source>For additional information about creating and using custom marshalers, see <bpt id="p1">[</bpt>Custom Marshaling<ept id="p1">](http://msdn.microsoft.com/library/49f9ac47-1619-4d6e-9da6-bf06bba12079)</ept>.</source>
          <target state="translated">만들기 및 사용자 지정 마샬러를 사용 하는 방법에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>사용자 지정 마샬링<ept id="p1">](http://msdn.microsoft.com/library/49f9ac47-1619-4d6e-9da6-bf06bba12079)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType">
          <source>Indicates the element type of the <ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.UnmanagedType.SafeArray" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.UnmanagedType.SafeArray" /&gt;</ph>의 요소 형식을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType">
          <source>You can set this field to a value from the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.VarEnum?displayProperty=nameWithType&gt;</ph> enumeration to specify the type of the safe array's elements.</source>
          <target state="translated">이 필드의 값으로 설정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Runtime.InteropServices.VarEnum?displayProperty=nameWithType&gt;</ph> 안전 배열 요소의 형식을 지정 하는 열거형입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType">
          <source>If a type is not specified, the managed element type's default type (if passed as a VARIANT) is used.</source>
          <target state="translated">형식이 지정 되지 않은 경우 관리 되는 요소 형식의 기본 형식 (VARIANT로 전달) 하는 경우 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType">
          <source>For example, the <ph id="ph1">`SafeArraySubType`</ph> for an <ph id="ph2">`int`</ph> array in COM is <ph id="ph3">&lt;xref:System.Runtime.InteropServices.VarEnum.VT_I4&gt;</ph>.</source>
          <target state="translated">예를 들어는 <ph id="ph1">`SafeArraySubType`</ph> 에 대 한 프로그램 <ph id="ph2">`int`</ph> com에서 배열이 <ph id="ph3">&lt;xref:System.Runtime.InteropServices.VarEnum.VT_I4&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType">
          <source>For additional information, see <bpt id="p1">[</bpt>Default Marshaling for Arrays<ept id="p1">](~/docs/framework/interop/default-marshaling-for-arrays.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>배열에 대 한 마샬링 기본<ept id="p1">](~/docs/framework/interop/default-marshaling-for-arrays.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArrayUserDefinedSubType">
          <source>Indicates the user-defined element type of the <ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.UnmanagedType.SafeArray" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.UnmanagedType.SafeArray" /&gt;</ph>의 사용자 정의 요소 형식을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArrayUserDefinedSubType">
          <source>Initialize this field with your custom type to enable the elements of the <ph id="ph1">`SAFEARRAY`</ph> to be marshaled successfully.</source>
          <target state="translated">요소를 사용 하도록 설정 하려면 사용자 지정 형식 사용 하 여이 필드를 초기화는 <ph id="ph1">`SAFEARRAY`</ph> 제대로 마샬링될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArrayUserDefinedSubType">
          <source>This field is only needed when the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType?displayProperty=nameWithType&gt;</ph> is either <ph id="ph2">&lt;xref:System.Runtime.InteropServices.VarEnum.VT_UNKNOWN?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Runtime.InteropServices.VarEnum.VT_DISPATCH?displayProperty=nameWithType&gt;</ph>, or <ph id="ph4">&lt;xref:System.Runtime.InteropServices.VarEnum.VT_RECORD?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 필드는만 때 필요한는 <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType?displayProperty=nameWithType&gt;</ph> 있거나 <ph id="ph2">&lt;xref:System.Runtime.InteropServices.VarEnum.VT_UNKNOWN?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Runtime.InteropServices.VarEnum.VT_DISPATCH?displayProperty=nameWithType&gt;</ph>, 또는 <ph id="ph4">&lt;xref:System.Runtime.InteropServices.VarEnum.VT_RECORD?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArrayUserDefinedSubType">
          <source>For additional information, see <bpt id="p1">[</bpt>Default Marshaling for Arrays<ept id="p1">](~/docs/framework/interop/default-marshaling-for-arrays.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>배열에 대 한 마샬링 기본<ept id="p1">](~/docs/framework/interop/default-marshaling-for-arrays.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst">
          <source>Indicates the number of elements in the fixed-length array or the number of characters (not bytes) in a string to import.</source>
          <target state="translated">가져올 고정 길이 배열의 요소 개수 또는 문자열의 문자 수(바이트 수가 아님)를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst">
          <source>This field is required for the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType.ByValArray&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.UnmanagedType.ByValTStr&gt;</ph> members of the <ph id="ph3">&lt;xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=nameWithType&gt;</ph> enumeration.</source>
          <target state="translated">이 필드는에 대 한 필요는 <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType.ByValArray&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Runtime.InteropServices.UnmanagedType.ByValTStr&gt;</ph> 의 멤버는 <ph id="ph3">&lt;xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=nameWithType&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst">
          <source>Because the compressed format of the metadata is limited to 0x1FFFFFFF, the range of allowed values for <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst&gt;</ph> are (&gt;= 0 and &lt;= 0x1FFFFFFF).</source>
          <target state="translated">메타 데이터의 압축 된 형식 0x1fffffff 이기 때문에 범위의 허용 되는 값에 대 한 <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst&gt;</ph> 됩니다 (&gt; = 0 및 &lt; = 0x1FFFFFFF).</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst">
          <source>For additional information, see <bpt id="p1">[</bpt>Default Marshaling for Arrays<ept id="p1">](~/docs/framework/interop/default-marshaling-for-arrays.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>배열에 대 한 마샬링 기본<ept id="p1">](~/docs/framework/interop/default-marshaling-for-arrays.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex">
          <source>Indicates the zero-based parameter that contains the count of array elements, similar to <ph id="ph1">&lt;see langword="size_is" /&gt;</ph> in COM.</source>
          <target state="translated">COM에 있는 <ph id="ph1">&lt;see langword="size_is" /&gt;</ph>와 같이 배열 요소의 수가 들어 있고 0부터 시작하는 매개 변수를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex&gt;</ph> field supports managed-to-unmanaged and unmanaged-to-managed calls.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex&gt;</ph> 필드 관리-에-비관리 코드와 관리 되지 않는 리소스에서 관리로 호출을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex">
          <source>It does not have any effect on managed code that calls COM objects.</source>
          <target state="translated">COM 개체를 호출 하는 관리 코드에 영향을 주지 않아도 됩니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex">
          <source>Depending on the managed type and the attributes applied to it, the array can be passed as a safe array or C-style array.</source>
          <target state="translated">관리 되는 형식 및에 적용 되는 특성에 따라 배열 안전 배열 또는 C 스타일 배열으로 전달할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex">
          <source>When arrays are passed as C-style arrays, the marshaler cannot determine the size of the array.</source>
          <target state="translated">배열 C 스타일 배열로 전달 하는 경우 마샬러가 배열 크기를 확인할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex">
          <source>Therefore, to pass an managed array to an unmanaged function or method, you must provide two arguments:</source>
          <target state="translated">따라서 관리 되는 배열을 관리 되지 않는 함수 또는 메서드를 전달 하려면 두 개의 인수 제공 해야 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex">
          <source>The array, defined by reference or value.</source>
          <target state="translated">참조 또는 값으로 정의 된 배열입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex">
          <source>The array size, defined by reference or value.</source>
          <target state="translated">참조 또는 값에 의해 정의 된 배열 크기입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex">
          <source>The zero-based index of the array size parameter is defined by using the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex&gt;</ph> field.</source>
          <target state="translated">0 기반 인덱스 배열 크기 매개 변수를 사용 하 여 정의 된는 <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex&gt;</ph> 필드입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex">
          <source>If you specify both <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst?displayProperty=nameWithType&gt;</ph> with a <ph id="ph3">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPArray?displayProperty=nameWithType&gt;</ph> field, the sum of the fields' values produces a size total.</source>
          <target state="translated">모두 지정 하면 <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph3">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPArray?displayProperty=nameWithType&gt;</ph> 필드 크기 합계 필드의 값의 합을 생성 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex">
          <source>For more information, see <bpt id="p1">[</bpt>Default Marshaling for Arrays<ept id="p1">](~/docs/framework/interop/default-marshaling-for-arrays.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>배열에 대 한 마샬링 기본<ept id="p1">](~/docs/framework/interop/default-marshaling-for-arrays.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices.MarshalAsAttribute.Value">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.UnmanagedType" /&gt;</ph> value the data is to be marshaled as.</source>
          <target state="translated">데이터를 마샬링할 <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.UnmanagedType" /&gt;</ph> 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices.MarshalAsAttribute.Value">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.UnmanagedType" /&gt;</ph> value the data is to be marshaled as.</source>
          <target state="translated">데이터를 마샬링할 <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.UnmanagedType" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices.MarshalAsAttribute.Value">
          <source>This value is used with <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> to indicate how types should be marshaled between managed and unmanaged code.</source>
          <target state="translated">이 값은 함께 사용할 <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> 관리 코드와 관리 되지 않는 코드 형식을 마샬링하는 방법을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices.MarshalAsAttribute.Value">
          <source>In some cases, you can use this field with certain <ph id="ph1">`UnmanagedType`</ph> enumeration members.</source>
          <target state="translated">경우에 따라 특정와이 필드를 사용할 수 있습니다 <ph id="ph1">`UnmanagedType`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices.MarshalAsAttribute.Value">
          <source>For <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.UnmanagedType.ByValArray&gt;</ph>, you must use additional named parameters.</source>
          <target state="translated">에 대 한 <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Runtime.InteropServices.UnmanagedType.ByValArray&gt;</ph>, 추가 명명 된 매개 변수를 사용 해야 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>