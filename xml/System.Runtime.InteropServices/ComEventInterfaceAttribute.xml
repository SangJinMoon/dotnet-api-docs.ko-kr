<Type Name="ComEventInterfaceAttribute" FullName="System.Runtime.InteropServices.ComEventInterfaceAttribute">
  <TypeSignature Language="C#" Value="public sealed class ComEventInterfaceAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ComEventInterfaceAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.ComEventInterfaceAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ComEventInterfaceAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComEventInterfaceAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Interface, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2c1e6-101">COM 형식 라이브러리에서 coclass를 가져올 때 생성되는 이벤트 인터페이스의 메서드를 구현하는 원본 인터페이스 및 클래스를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="2c1e6-101">Identifies the source interface and the class that implements the methods of the event interface that is generated when a coclass is imported from a COM type library.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c1e6-102">하지만 인터페이스의 경우에이 특성을 적용할 수는 [Tlbimp.exe (형식 라이브러리 가져오기)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) 일반적으로 형식 라이브러리를 가져올 때을 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2c1e6-102">You can apply this attribute to interfaces, although the [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) typically applies it for you when it imports a type library.</span></span>  
  
 <span data-ttu-id="2c1e6-103">형식 라이브러리에서 소스 인터페이스를 가져올 때 생성 된 이벤트 인터페이스를 구현 하는 모든 메서드 이벤트로 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2c1e6-103">When a source interface is imported from a type library, any methods it implements are added as events to a generated event interface.</span></span> <span data-ttu-id="2c1e6-104">Tlbimp.exe 적용 <xref:System.Runtime.InteropServices.ComEventInterfaceAttribute> 이벤트 인터페이스의 메서드를 구현 하 고 원래 소스 인터페이스를 구현 하는 관리 되는 클래스를 식별 하는 이벤트 인터페이스에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2c1e6-104">Tlbimp.exe applies <xref:System.Runtime.InteropServices.ComEventInterfaceAttribute> to the event interface to identify the managed class that implements the methods of the event interface and implements the original source interface.</span></span> <span data-ttu-id="2c1e6-105">공용 언어 런타임 실행 시이 특성을 사용 하 여 다음 작업을 수행 하려면:</span><span class="sxs-lookup"><span data-stu-id="2c1e6-105">The common language runtime uses this attribute at run time to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="2c1e6-106">연결 이벤트 공급자 클래스는 이벤트 인터페이스를 구현으로 노출 합니다.</span><span class="sxs-lookup"><span data-stu-id="2c1e6-106">Associate events exposed by the interface to their implementation in the event provider class.</span></span>  
  
-   <span data-ttu-id="2c1e6-107">이벤트 원본 COM 소스 인터페이스에 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="2c1e6-107">Link the events to the original COM source interface.</span></span>  
  
 <span data-ttu-id="2c1e6-108">거의이 특성을 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2c1e6-108">You rarely apply this attribute.</span></span> <span data-ttu-id="2c1e6-109">그러나 가깝게 Tlbimp.exe에 의해 생성 된 메타 데이터를 시뮬레이션 하는 메타 데이터를 생성 하는 소스 코드를 작성 하려는 경우 각 원본 소스 인터페이스에 대 한 이벤트 인터페이스를 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2c1e6-109">However, if you plan to write source code that produces metadata that closely simulates metadata produced by Tlbimp.exe, you should create a event interface for each original source interface.</span></span> <span data-ttu-id="2c1e6-110">Tlbimp.exe가 이벤트를 가져오는 방법에 대 한 자세한 내용은 참조 하세요. [가져온 멤버 변환](http://msdn.microsoft.com/library/7a272adf-41d7-4409-b0e2-5c0c5ef5266d)합니다.</span><span class="sxs-lookup"><span data-stu-id="2c1e6-110">For a detailed description about how Tlbimp.exe imports events, see [Imported Member Conversion](http://msdn.microsoft.com/library/7a272adf-41d7-4409-b0e2-5c0c5ef5266d).</span></span> <span data-ttu-id="2c1e6-111">.NET 클라이언트에 대 한 COM 이벤트를 노출 하는 방법에 대 한 지침을 참조 하세요. [하는 방법: COM 소스에서 발생 한 이벤트를 처리](http://msdn.microsoft.com/library/12bb67bd-91a2-4554-82fb-bdba3d2c8b04)합니다.</span><span class="sxs-lookup"><span data-stu-id="2c1e6-111">For instruction about how to expose a COM event to a .NET client, see [How to: Handle Events Raised by a COM Source](http://msdn.microsoft.com/library/12bb67bd-91a2-4554-82fb-bdba3d2c8b04).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComEventInterfaceAttribute (Type SourceInterface, Type EventProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type SourceInterface, class System.Type EventProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComEventInterfaceAttribute.#ctor(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (SourceInterface As Type, EventProvider As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComEventInterfaceAttribute(Type ^ SourceInterface, Type ^ EventProvider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="SourceInterface" Type="System.Type" />
        <Parameter Name="EventProvider" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="SourceInterface"><span data-ttu-id="2c1e6-112">형식 라이브러리의 원본 소스 인터페이스를 포함하는 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2c1e6-112">A <see cref="T:System.Type" /> that contains the original source interface from the type library.</span></span> <span data-ttu-id="2c1e6-113">COM에서는 이 인터페이스를 사용하여 관리되는 클래스를 다시 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="2c1e6-113">COM uses this interface to call back to the managed class.</span></span></param>
        <param name="EventProvider"><span data-ttu-id="2c1e6-114">이벤트 인터페이스의 메서드를 구현하는 클래스를 포함하는 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2c1e6-114">A <see cref="T:System.Type" /> that contains the class that implements the methods of the event interface.</span></span></param>
        <summary><span data-ttu-id="2c1e6-115">소스 인터페이스와 이벤트 공급자 클래스를 사용하여 <see cref="T:System.Runtime.InteropServices.ComEventInterfaceAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="2c1e6-115">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.ComEventInterfaceAttribute" /> class with the source interface and event provider class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventProvider">
      <MemberSignature Language="C#" Value="public Type EventProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type EventProvider" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.ComEventInterfaceAttribute.EventProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventProvider As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ EventProvider { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2c1e6-116">이벤트 인터페이스의 메서드를 구현하는 클래스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2c1e6-116">Gets the class that implements the methods of the event interface.</span></span></summary>
        <value><span data-ttu-id="2c1e6-117">이벤트 인터페이스의 메서드를 구현하는 클래스를 포함하는 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2c1e6-117">A <see cref="T:System.Type" /> that contains the class that implements the methods of the event interface.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c1e6-118">이 값은에 의해 생성 된 이벤트 공급자 클래스의 형식으로 설정 된 [Tlbimp.exe (형식 라이브러리 가져오기)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2c1e6-118">This value is set to the type of the event provider class generated by the [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md).</span></span> <span data-ttu-id="2c1e6-119">Tlbimp.exe는 EventProvider로 원본 인터페이스 이름을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="2c1e6-119">Tlbimp.exe appends the source interface name with EventProvider.</span></span> <span data-ttu-id="2c1e6-120">예를 들어, IMyInterface IMyInterfaceEventProvider 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2c1e6-120">For example, IMyInterface becomes IMyInterfaceEventProvider.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceInterface">
      <MemberSignature Language="C#" Value="public Type SourceInterface { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type SourceInterface" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.ComEventInterfaceAttribute.SourceInterface" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourceInterface As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ SourceInterface { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2c1e6-121">형식 라이브러리에서 원본 소스 인터페이스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2c1e6-121">Gets the original source interface from the type library.</span></span></summary>
        <value><span data-ttu-id="2c1e6-122">소스 인터페이스를 포함하는 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2c1e6-122">A <see cref="T:System.Type" /> containing the source interface.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c1e6-123">소스 인터페이스에 하나 이상의 이벤트 멤버 및 일반적으로 소스 인터페이스의 각 방법에 대해 하나씩 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2c1e6-123">A source interface has at least one event member, and typically one for each method of the source interface.</span></span> <span data-ttu-id="2c1e6-124">COM에서는 이 인터페이스를 사용하여 관리되는 클래스를 다시 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="2c1e6-124">COM uses this interface to call back to the managed class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>