<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ComEventInterfaceAttribute.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c19e3e30b907b02a912088930b5eacc74ab95c40.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c19e3e30b907b02a912088930b5eacc74ab95c40</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.ComEventInterfaceAttribute">
          <source>Identifies the source interface and the class that implements the methods of the event interface that is generated when a coclass is imported from a COM type library.</source>
          <target state="translated">COM 형식 라이브러리에서 coclass를 가져올 때 생성되는 이벤트 인터페이스의 메서드를 구현하는 원본 인터페이스 및 클래스를 식별합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComEventInterfaceAttribute">
          <source>You can apply this attribute to interfaces, although the <bpt id="p1">[</bpt>Tlbimp.exe (Type Library Importer)<ept id="p1">](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)</ept> typically applies it for you when it imports a type library.</source>
          <target state="translated">하지만 인터페이스의 경우에이 특성을 적용할 수는 <bpt id="p1">[</bpt>Tlbimp.exe (형식 라이브러리 가져오기)<ept id="p1">](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)</ept> 일반적으로 형식 라이브러리를 가져올 때을 적용 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComEventInterfaceAttribute">
          <source>When a source interface is imported from a type library, any methods it implements are added as events to a generated event interface.</source>
          <target state="translated">형식 라이브러리에서 소스 인터페이스를 가져올 때 생성 된 이벤트 인터페이스를 구현 하는 모든 메서드 이벤트로 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComEventInterfaceAttribute">
          <source>Tlbimp.exe applies <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComEventInterfaceAttribute&gt;</ph> to the event interface to identify the managed class that implements the methods of the event interface and implements the original source interface.</source>
          <target state="translated">Tlbimp.exe 적용 <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComEventInterfaceAttribute&gt;</ph> 이벤트 인터페이스의 메서드를 구현 하 고 원래 소스 인터페이스를 구현 하는 관리 되는 클래스를 식별 하는 이벤트 인터페이스에 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComEventInterfaceAttribute">
          <source>The common language runtime uses this attribute at run time to perform the following tasks:</source>
          <target state="translated">공용 언어 런타임 실행 시이 특성을 사용 하 여 다음 작업을 수행 하려면:</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComEventInterfaceAttribute">
          <source>Associate events exposed by the interface to their implementation in the event provider class.</source>
          <target state="translated">연결 이벤트 공급자 클래스는 이벤트 인터페이스를 구현으로 노출 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComEventInterfaceAttribute">
          <source>Link the events to the original COM source interface.</source>
          <target state="translated">이벤트 원본 COM 소스 인터페이스에 연결 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComEventInterfaceAttribute">
          <source>You rarely apply this attribute.</source>
          <target state="translated">거의이 특성을 적용 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComEventInterfaceAttribute">
          <source>However, if you plan to write source code that produces metadata that closely simulates metadata produced by Tlbimp.exe, you should create a event interface for each original source interface.</source>
          <target state="translated">그러나 가깝게 Tlbimp.exe에 의해 생성 된 메타 데이터를 시뮬레이션 하는 메타 데이터를 생성 하는 소스 코드를 작성 하려는 경우 각 원본 소스 인터페이스에 대 한 이벤트 인터페이스를 만들어야 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComEventInterfaceAttribute">
          <source>For a detailed description about how Tlbimp.exe imports events, see <bpt id="p1">[</bpt>Imported Member Conversion<ept id="p1">](http://msdn.microsoft.com/library/7a272adf-41d7-4409-b0e2-5c0c5ef5266d)</ept>.</source>
          <target state="translated">Tlbimp.exe가 이벤트를 가져오는 방법에 대 한 자세한 내용은 참조 하세요. <bpt id="p1">[</bpt>가져온 멤버 변환<ept id="p1">](http://msdn.microsoft.com/library/7a272adf-41d7-4409-b0e2-5c0c5ef5266d)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComEventInterfaceAttribute">
          <source>For instruction about how to expose a COM event to a .NET client, see <bpt id="p1">[</bpt>How to: Handle Events Raised by a COM Source<ept id="p1">](http://msdn.microsoft.com/library/12bb67bd-91a2-4554-82fb-bdba3d2c8b04)</ept>.</source>
          <target state="translated">.NET 클라이언트에 대 한 COM 이벤트를 노출 하는 방법에 대 한 지침을 참조 하세요. <bpt id="p1">[</bpt>하는 방법: COM 소스에서 발생 한 이벤트를 처리<ept id="p1">](http://msdn.microsoft.com/library/12bb67bd-91a2-4554-82fb-bdba3d2c8b04)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComEventInterfaceAttribute.#ctor(System.Type,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that contains the original source interface from the type library.</source>
          <target state="translated">형식 라이브러리의 원본 소스 인터페이스를 포함하는 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComEventInterfaceAttribute.#ctor(System.Type,System.Type)">
          <source>COM uses this interface to call back to the managed class.</source>
          <target state="translated">COM에서는 이 인터페이스를 사용하여 관리되는 클래스를 다시 호출합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComEventInterfaceAttribute.#ctor(System.Type,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that contains the class that implements the methods of the event interface.</source>
          <target state="translated">이벤트 인터페이스의 메서드를 구현하는 클래스를 포함하는 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComEventInterfaceAttribute.#ctor(System.Type,System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ComEventInterfaceAttribute" /&gt;</ph> class with the source interface and event provider class.</source>
          <target state="translated">소스 인터페이스와 이벤트 공급자 클래스를 사용하여 <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ComEventInterfaceAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices.ComEventInterfaceAttribute.EventProvider">
          <source>Gets the class that implements the methods of the event interface.</source>
          <target state="translated">이벤트 인터페이스의 메서드를 구현하는 클래스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices.ComEventInterfaceAttribute.EventProvider">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that contains the class that implements the methods of the event interface.</source>
          <target state="translated">이벤트 인터페이스의 메서드를 구현하는 클래스를 포함하는 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices.ComEventInterfaceAttribute.EventProvider">
          <source>This value is set to the type of the event provider class generated by the <bpt id="p1">[</bpt>Tlbimp.exe (Type Library Importer)<ept id="p1">](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)</ept>.</source>
          <target state="translated">이 값은에 의해 생성 된 이벤트 공급자 클래스의 형식으로 설정 된 <bpt id="p1">[</bpt>Tlbimp.exe (형식 라이브러리 가져오기)<ept id="p1">](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices.ComEventInterfaceAttribute.EventProvider">
          <source>Tlbimp.exe appends the source interface name with EventProvider.</source>
          <target state="translated">Tlbimp.exe는 EventProvider로 원본 인터페이스 이름을 추가합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices.ComEventInterfaceAttribute.EventProvider">
          <source>For example, IMyInterface becomes IMyInterfaceEventProvider.</source>
          <target state="translated">예를 들어, IMyInterface IMyInterfaceEventProvider 됩니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices.ComEventInterfaceAttribute.SourceInterface">
          <source>Gets the original source interface from the type library.</source>
          <target state="translated">형식 라이브러리에서 원본 소스 인터페이스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices.ComEventInterfaceAttribute.SourceInterface">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> containing the source interface.</source>
          <target state="translated">소스 인터페이스를 포함하는 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices.ComEventInterfaceAttribute.SourceInterface">
          <source>A source interface has at least one event member, and typically one for each method of the source interface.</source>
          <target state="translated">소스 인터페이스에 하나 이상의 이벤트 멤버 및 일반적으로 소스 인터페이스의 각 방법에 대해 하나씩 있습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices.ComEventInterfaceAttribute.SourceInterface">
          <source>COM uses this interface to call back to the managed class.</source>
          <target state="translated">COM에서는 이 인터페이스를 사용하여 관리되는 클래스를 다시 호출합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>