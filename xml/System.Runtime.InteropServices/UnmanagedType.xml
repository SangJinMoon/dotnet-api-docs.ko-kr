<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="UnmanagedType.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a20bb25422aadd28b5c6a93dae48102c6643fe7e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a20bb25422aadd28b5c6a93dae48102c6643fe7e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.UnmanagedType">
          <source>Identifies how to marshal parameters or fields to unmanaged code.</source>
          <target state="translated">매개 변수나 필드를 비관리 코드로 마샬링하는 방법을 식별합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.UnmanagedType">
          <source>Use the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType&gt;</ph> enumeration with the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute?displayProperty=nameWithType&gt;</ph> attribute to specify how types are marshaled during interoperation with unmanaged code.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType&gt;</ph> 열거형을는 <ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute?displayProperty=nameWithType&gt;</ph> 특성을 비관리 코드와의 상호 운용 하는 동안 형식이 마샬링되는 방법을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.UnmanagedType">
          <source>You can use this enumeration to marshal code using simple value types (I1, I2, I4, I8, R4, R8, U2, U4, and U8), unmanaged types that are unavailable in the .NET Framework, and various miscellaneous types.</source>
          <target state="translated">.NET Framework에서 사용할 수 없는 간단한 값 형식 (I1, I2, I4, I8, R4, R8, U2, U4, 및 U8), 관리 되지 않는 형식 및 기타 다양 한 형식을 사용 하 여 코드를 마샬링할이 열거형을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.UnmanagedType">
          <source>For more information, see <bpt id="p1">[</bpt>Interoperating with Unmanaged Code<ept id="p1">](http://msdn.microsoft.com/library/ccb68ce7-b0e9-4ffb-839d-03b1cd2c1258)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>비관리 코드 상호 운용<ept id="p1">](http://msdn.microsoft.com/library/ccb68ce7-b0e9-4ffb-839d-03b1cd2c1258)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.UnmanagedType">
          <source>The following code fragment demonstrates how to declare, in managed source code, an unmanaged interface implemented by a COM component.</source>
          <target state="translated">다음 코드 조각에는 관리 되는 소스 코드에서 COM 구성 요소에 의해 구현 되는 관리 되지 않는 인터페이스를 선언 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.UnmanagedType">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType&gt;</ph> attribute prevents the <ph id="ph2">`IMyStorage`</ph> interface from being exported back for use by COM.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType&gt;</ph> 특성이 않습니다는 <ph id="ph2">`IMyStorage`</ph> com 사용 하기 위해 다시 내보내기에서 인터페이스</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.UnmanagedType">
          <source>(COM clients should use the existing COM component directly.) In this example, <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> specifies serveral <ph id="ph2">&lt;xref:System.Runtime.InteropServices.UnmanagedType&gt;</ph> members, which represent the types used by the original COM interface.</source>
          <target state="translated">(COM 클라이언트 기존 COM 구성 요소 직접 사용 합니다.) 이 예제에서는 <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> 여러 지정 <ph id="ph2">&lt;xref:System.Runtime.InteropServices.UnmanagedType&gt;</ph> 멤버가 있으며이 원래 COM 인터페이스에서 사용 되는 형식을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.AnsiBStr">
          <source>An ANSI character string that is a length-prefixed single byte.</source>
          <target state="translated">싱글 바이트 길이 접두사가 있는 ANSI 문자열입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.AnsiBStr">
          <source>You can use this member on the <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> data type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 데이터 형식에 이 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.AsAny">
          <source>A dynamic type that determines the type of an object at run time and marshals the object as that type.</source>
          <target state="translated">런타임에서 개체의 형식을 결정하고 해당 형식으로 개체를 마샬링하는 동적 형식입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.AsAny">
          <source>This member is valid for platform invoke methods only.</source>
          <target state="translated">이 메서드는 플랫폼 호출 메서드에만 유효합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.Bool">
          <source>A 4-byte Boolean value (<ph id="ph1">&lt;see langword="true" /&gt;</ph> != 0, <ph id="ph2">&lt;see langword="false" /&gt;</ph> = 0).</source>
          <target state="translated">4바이트 부울 값(<ph id="ph1">&lt;see langword="true" /&gt;</ph> != 0, <ph id="ph2">&lt;see langword="false" /&gt;</ph> = 0)입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.Bool">
          <source>This is the Win32 BOOL type.</source>
          <target state="translated">Win32 BOOL 형식입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.BStr">
          <source>A Unicode character string that is a length-prefixed double byte.</source>
          <target state="translated">더블바이트 길이 접두사가 있는 유니코드 문자열입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.BStr">
          <source>You can use this member, which is the default string in COM, on the <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> data type.</source>
          <target state="translated">COM의 기본 문자열인 이 멤버는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 데이터 형식에 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.ByValArray">
          <source>When the <ph id="ph1">&lt;see cref="P:System.Runtime.InteropServices.MarshalAsAttribute.Value" /&gt;</ph> property is set to <ph id="ph2">&lt;see langword="ByValArray" /&gt;</ph>, the <ph id="ph3">&lt;see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst" /&gt;</ph> field must be set to indicate the number of elements in the array.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Runtime.InteropServices.MarshalAsAttribute.Value" /&gt;</ph> 속성이 <ph id="ph2">&lt;see langword="ByValArray" /&gt;</ph>로 설정된 경우, <ph id="ph3">&lt;see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst" /&gt;</ph> 필드는 배열에 있는 요소의 수를 나타내도록 설정되어야 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.ByValArray">
          <source>The <ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.ArraySubType" /&gt;</ph> field can optionally contain the <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.UnmanagedType" /&gt;</ph> of the array elements when it is necessary to differentiate among string types.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.ArraySubType" /&gt;</ph> 필드는 문자열 형식 간을 구분해야 하는 경우 배열 요소의 <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.UnmanagedType" /&gt;</ph>을 포함할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.ByValArray">
          <source>You can use this <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.UnmanagedType" /&gt;</ph> only on an array that whose elements appear as fields in a structure.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.UnmanagedType" /&gt;</ph>은 구조체에서 필드로 나타나는 요소가 있는 배열에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.ByValTStr">
          <source>Used for in-line, fixed-length character arrays that appear within a structure.</source>
          <target state="translated">구조체 내에 나타나는 인라인 고정 길이 문자 배열에 사용됩니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.ByValTStr">
          <source>The character type used with <ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.UnmanagedType.ByValTStr" /&gt;</ph> is determined by the <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.CharSet" /&gt;</ph> argument of the <ph id="ph3">&lt;see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /&gt;</ph> attribute applied to the containing structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.UnmanagedType.ByValTStr" /&gt;</ph>과 함께 사용되는 문자 형식은 포함하는 구조체에 적용된 <ph id="ph3">&lt;see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /&gt;</ph> 특성의 <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.CharSet" /&gt;</ph> 인수에 의해 결정됩니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.ByValTStr">
          <source>Always use the <ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst" /&gt;</ph> field to indicate the size of the array.</source>
          <target state="translated">항상 <ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst" /&gt;</ph> 필드를 사용하여 배열의 크기를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.UnmanagedType.ByValTStr">
          <source>.NET Framework ByValTStr types behave like C-style, fixed-size strings inside a structure (for example, <ph id="ph1">`char s[5]`</ph>).</source>
          <target state="translated">.NET framework ByValTStr 형식은 구조체 내 고정 크기, C 스타일 문자열 처럼 동작 (예를 들어 <ph id="ph1">`char s[5]`</ph>).</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.UnmanagedType.ByValTStr">
          <source>The behavior in managed code differs from the Microsoft Visual Basic 6.0 behavior, which is not null terminated (for example, <ph id="ph1">`MyString As String * 5`</ph>).</source>
          <target state="translated">관리 코드에서 동작은 동작을 null이 아닌 종료 하는 Microsoft Visual Basic 6.0에서 다릅니다 (예를 들어 <ph id="ph1">`MyString As String * 5`</ph>).</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.Currency">
          <source>A currency type.</source>
          <target state="translated">통화 형식입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.Currency">
          <source>Used on a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to marshal the decimal value as a COM currency type instead of as a <ph id="ph2">&lt;see langword="Decimal" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see langword="Decimal" /&gt;</ph> 대신 COM 통화 형식으로 10진 값을 마샬링하기 위해 <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>에서 사용됩니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler">
          <source>Specifies the custom marshaler class when used with the <ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef" /&gt;</ph> field.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef" /&gt;</ph> 필드와 함께 사용될 때 사용자 지정 마샬러 클래스를 지정합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler">
          <source>The <ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie" /&gt;</ph> field can be used to pass additional information to the custom marshaler.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie" /&gt;</ph> 필드는 사용자 지정 마샬러에 추가 정보를 전달하는 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler">
          <source>You can use this member on any reference type.</source>
          <target state="translated">이 멤버는 모든 참조 형식에 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler">
          <source>This member is valid for parameters and return values only.</source>
          <target state="translated">이 멤버는 매개 변수 및 반환 값에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler">
          <source>It cannot be used on fields.</source>
          <target state="translated">필드에는 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.Error">
          <source>A native type that is associated with an <ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.UnmanagedType.I4" /&gt;</ph> or an <ph id="ph2">&lt;see cref="F:System.Runtime.InteropServices.UnmanagedType.U4" /&gt;</ph> and that causes the parameter to be exported as an HRESULT in the exported type library.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.UnmanagedType.I4" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.Runtime.InteropServices.UnmanagedType.U4" /&gt;</ph>에 연결되어 있으며, 내보낸 형식 라이브러리에서 매개 변수를 HRESULT로 내보내도록 하는 네이티브 형식입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.FunctionPtr">
          <source>An integer that can be used as a C-style function pointer.</source>
          <target state="translated">C 스타일 함수 포인터로 사용할 수 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.FunctionPtr">
          <source>You can use this member on a <ph id="ph1">&lt;see cref="T:System.Delegate" /&gt;</ph> data type or on a type that inherits from a <ph id="ph2">&lt;see cref="T:System.Delegate" /&gt;</ph>.</source>
          <target state="translated">이 멤버는 <ph id="ph1">&lt;see cref="T:System.Delegate" /&gt;</ph> 데이터 형식 또는 <ph id="ph2">&lt;see cref="T:System.Delegate" /&gt;</ph>에서 상속된 형식에 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.HString">
          <source>A <ph id="ph1">[!INCLUDE[wrt](~/includes/wrt-md.md)]</ph> string.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[wrt](~/includes/wrt-md.md)]</ph> 문자열입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.HString">
          <source>You can use this member on the <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> data type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 데이터 형식에 이 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.I1">
          <source>A 1-byte signed integer.</source>
          <target state="translated">부호 있는 1바이트 정수입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.I1">
          <source>You can use this member to transform a Boolean value into a 1-byte, C-style <ph id="ph1">&lt;see langword="bool" /&gt;</ph> (<ph id="ph2">&lt;see langword="true" /&gt;</ph> = 1, <ph id="ph3">&lt;see langword="false" /&gt;</ph> = 0).</source>
          <target state="translated">이 멤버를 사용하여 부울 값을 1바이트 C 스타일 <ph id="ph1">&lt;see langword="bool" /&gt;</ph>(<ph id="ph2">&lt;see langword="true" /&gt;</ph> = 1, <ph id="ph3">&lt;see langword="false" /&gt;</ph> = 0)로 변환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.I2">
          <source>A 2-byte signed integer.</source>
          <target state="translated">부호 있는 2바이트 정수입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.I4">
          <source>A 4-byte signed integer.</source>
          <target state="translated">부호 있는 4바이트 정수입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.I8">
          <source>An 8-byte signed integer.</source>
          <target state="translated">부호 있는 8바이트 정수입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.IDispatch">
          <source>A COM <ph id="ph1">&lt;see langword="IDispatch" /&gt;</ph> pointer (<ph id="ph2">&lt;see langword="Object" /&gt;</ph> in Microsoft Visual Basic 6.0).</source>
          <target state="translated">COM <ph id="ph1">&lt;see langword="IDispatch" /&gt;</ph> 포인터(Microsoft Visual Basic 6.0의 <ph id="ph2">&lt;see langword="Object" /&gt;</ph>)입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.IInspectable">
          <source>A <ph id="ph1">[!INCLUDE[wrt](~/includes/wrt-md.md)]</ph> interface pointer.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[wrt](~/includes/wrt-md.md)]</ph> 인터페이스 포인터입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.IInspectable">
          <source>You can use this member on the <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> data type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 데이터 형식에 이 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.Interface">
          <source>A COM interface pointer.</source>
          <target state="translated">COM 인터페이스 포인터.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.Interface">
          <source>The <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> of the interface is obtained from the class metadata.</source>
          <target state="translated">인터페이스의 <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph>는 클래스 메타데이터에서 얻을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.Interface">
          <source>Use this member to specify the exact interface type or the default interface type if you apply it to a class.</source>
          <target state="translated">정확한 인터페이스 형식 또는 클래스에 적용할 경우 기본 인터페이스 형식을 지정하려면 이 멤버를 사용하세요.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.Interface">
          <source>This member produces the same behavior as <ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.UnmanagedType.IUnknown" /&gt;</ph> when you apply it to the <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> data type.</source>
          <target state="translated">이 멤버를 <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> 데이터 형식에 적용하면 <ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.UnmanagedType.IUnknown" /&gt;</ph>과 같은 동작이 생성됩니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.IUnknown">
          <source>A COM <ph id="ph1">&lt;see langword="IUnknown" /&gt;</ph> pointer.</source>
          <target state="translated">COM <ph id="ph1">&lt;see langword="IUnknown" /&gt;</ph> 포인터입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.IUnknown">
          <source>You can use this member on the <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> data type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 데이터 형식에 이 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.LPArray">
          <source>A pointer to the first element of a C-style array.</source>
          <target state="translated">C 스타일 배열의 첫 번째 요소에 대한 포인터입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.LPArray">
          <source>When marshaling from managed to unmanaged code, the length of the array is determined by the length of the managed array.</source>
          <target state="translated">관리되는 코드에서 관리되지 않는 코드로 마샬링하면 배열의 길이는 관리되는 배열의 길이에 의해 결정됩니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.LPArray">
          <source>When marshaling from unmanaged to managed code, the length of the array is determined from the <ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst" /&gt;</ph> and <ph id="ph2">&lt;see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex" /&gt;</ph> fields, optionally followed by the unmanaged type of the elements within the array when it is necessary to differentiate among string types.</source>
          <target state="translated">비관리 코드에서 관리 코드로 마샬링할 때 배열의 길이는 <ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex" /&gt;</ph> 필드에서 결정되며, 문자열 형식 간을 구분해야 하는 경우 필요에 따라 배열 내 요소의 관리되지 않는 형식이 뒤에 옵니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.LPStr">
          <source>A single byte, null-terminated ANSI character string.</source>
          <target state="translated">싱글 바이트 null로 끝나는 ANSI 문자열입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.LPStr">
          <source>You can use this member on the <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> and <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> data types.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 데이터 형식에 이 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.LPStruct">
          <source>A pointer to a C-style structure that you use to marshal managed formatted classes.</source>
          <target state="translated">관리되는 서식이 지정된 클래스를 마샬링할 때 사용하는 C 스타일 구조체에 대한 포인터입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.LPStruct">
          <source>This member is valid for platform invoke methods only.</source>
          <target state="translated">이 메서드는 플랫폼 호출 메서드에만 유효합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.LPTStr">
          <source>A platform-dependent character string: ANSI on Windows 98, and Unicode on Windows NT and Windows XP.</source>
          <target state="translated">플랫폼 종속 문자열, 즉 Windows 98에서는 ANSI, Windows NT 및 Windows XP에서는 유니코드입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.LPTStr">
          <source>This value is supported only for platform invoke and not for COM interop, because exporting a string of type <ph id="ph1">&lt;see langword="LPTStr" /&gt;</ph> is not supported.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="LPTStr" /&gt;</ph> 형식의 문자열은 내보낼 수 없으므로 이 값은 플랫폼 호출에 대해서만 지원되고 COM interop에 대해서는 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.LPUTF8Str">
          <source>A pointer to a UTF-8 encoded string.</source>
          <target state="translated">UTF-8로 인코딩된 문자열에 대한 포인터입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.LPWStr">
          <source>A 2-byte, null-terminated Unicode character string.</source>
          <target state="translated">2바이트 null로 끝나는 유니코드 문자열입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.UnmanagedType.LPWStr">
          <source>Note that you cannot use the LPWStr value with an unmanaged string unless the string was created by using the unmanaged <ph id="ph1">`CoTaskMemAlloc`</ph> function.</source>
          <target state="translated">문자열은 관리 되지 않는 사용 하 여 만들지 않은 관리 되지 않는 문자열에서 LPWStr 값을 사용할 수 있는지 참고 <ph id="ph1">`CoTaskMemAlloc`</ph> 함수입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.R4">
          <source>A 4-byte floating-point number.</source>
          <target state="translated">4바이트 부동 소수점 수입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.R8">
          <source>An 8-byte floating-point number.</source>
          <target state="translated">8바이트 부동 소수점 수입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.SafeArray">
          <source>A <ph id="ph1">&lt;see langword="SafeArray" /&gt;</ph>, which is a self-describing array that carries the type, rank, and bounds of the associated array data.</source>
          <target state="translated">형식, 차수, 관련된 배열 데이터의 범위를 전달하는 자동 기술 배열인 <ph id="ph1">&lt;see langword="SafeArray" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.SafeArray">
          <source>You can use this member with the <ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType" /&gt;</ph> field to override the default element type.</source>
          <target state="translated">이 멤버를 <ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType" /&gt;</ph> 필드와 함께 사용하여 기본 요소 형식을 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.Struct">
          <source>A VARIANT, which is used to marshal managed formatted classes and value types.</source>
          <target state="translated">형식이 지정된 관리되는 클래스와 값 형식을 마샬링하는 데 사용되는 VARIANT입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.SysInt">
          <source>A platform-dependent, signed integer: 4 bytes on 32-bit Windows, 8 bytes on 64-bit Windows.</source>
          <target state="translated">플랫폼에 종속적인 부호 있는 정수로, 32비트 Windows의 경우 4바이트이고 64비트 Windows의 경우 8바이트입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.SysUInt">
          <source>A platform-dependent, unsigned integer: 4 bytes on 32-bit Windows, 8 bytes on 64-bit Windows.</source>
          <target state="translated">플랫폼에 종속적인 부호 없는 정수로, 32비트 Windows의 경우 4바이트이고 64비트 Windows의 경우 8바이트입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.TBStr">
          <source>A length-prefixed, platform-dependent <ph id="ph1">&lt;see langword="char" /&gt;</ph> string: ANSI on Windows 98, Unicode on Windows NT.</source>
          <target state="translated">길이 접두사가 있는 플랫폼에 종속된 <ph id="ph1">&lt;see langword="char" /&gt;</ph> 문자열입니다(Windows 98의 경우 ANSI, Windows NT의 경우 유니코드).</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.TBStr">
          <source>You rarely use this BSTR-like member.</source>
          <target state="translated">BSTR과와 비슷한 이 멤버는 거의 사용하지 않습니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.U1">
          <source>A 1-byte unsigned integer.</source>
          <target state="translated">부호 없는 1바이트 정수입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.U2">
          <source>A 2-byte unsigned integer.</source>
          <target state="translated">부호 없는 2바이트 정수입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.U4">
          <source>A 4-byte unsigned integer.</source>
          <target state="translated">부호 없는 4바이트 정수입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.U8">
          <source>An 8-byte unsigned integer.</source>
          <target state="translated">부호 없는 8바이트 정수입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.VariantBool">
          <source>A 2-byte, OLE-defined VARIANT_BOOL type (<ph id="ph1">&lt;see langword="true" /&gt;</ph> = -1, <ph id="ph2">&lt;see langword="false" /&gt;</ph> = 0).</source>
          <target state="translated">2바이트 OLE 정의 VARIANT_BOOL 형식(<ph id="ph1">&lt;see langword="true" /&gt;</ph> = -1, <ph id="ph2">&lt;see langword="false" /&gt;</ph> = 0)입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.VBByRefStr">
          <source>A value that enables Visual Basic to change a string in unmanaged code and have the results reflected in managed code.</source>
          <target state="translated">Visual Basic에서 비관리 코드의 문자열을 변경하고 결과를 관리 코드에 반영되도록 하는 데 사용할 수 있는 값입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.UnmanagedType.VBByRefStr">
          <source>This value is only supported for platform invoke.</source>
          <target state="translated">이 값은 플랫폼 호출에만 지원됩니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>