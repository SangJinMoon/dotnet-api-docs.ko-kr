<Type Name="TypeLibExporterFlags" FullName="System.Runtime.InteropServices.TypeLibExporterFlags">
  <TypeSignature Language="C#" Value="public enum TypeLibExporterFlags" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed TypeLibExporterFlags extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.TypeLibExporterFlags" />
  <TypeSignature Language="VB.NET" Value="Public Enum TypeLibExporterFlags" />
  <TypeSignature Language="C++ CLI" Value="public enum class TypeLibExporterFlags" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5150d-101">형식 라이브러리가 생성되는 방법을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="5150d-101">Indicates how a type library should be produced.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5150d-102">함께 사용할 <xref:System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5150d-102">Used with <xref:System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib%2A>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CallerResolvedReferences">
      <MemberSignature Language="C#" Value="CallerResolvedReferences" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.InteropServices.TypeLibExporterFlags CallerResolvedReferences = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.TypeLibExporterFlags.CallerResolvedReferences" />
      <MemberSignature Language="VB.NET" Value="CallerResolvedReferences" />
      <MemberSignature Language="C++ CLI" Value="CallerResolvedReferences" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.TypeLibExporterFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5150d-103">호출자가 레지스트리를 참조하지 않고 형식 라이브러리 참조를 명시적으로 확인할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="5150d-103">Allows the caller to explicitly resolve type library references without consulting the registry.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ExportAs32Bit">
      <MemberSignature Language="C#" Value="ExportAs32Bit" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.InteropServices.TypeLibExporterFlags ExportAs32Bit = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.TypeLibExporterFlags.ExportAs32Bit" />
      <MemberSignature Language="VB.NET" Value="ExportAs32Bit" />
      <MemberSignature Language="C++ CLI" Value="ExportAs32Bit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.TypeLibExporterFlags</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5150d-104">64비트 컴퓨터에서 컴파일하는 경우 형식 라이브러리 내보내기(Tlbexp.exe)에서 32비트 형식 라이브러리를 생성하도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="5150d-104">When compiling on a 64-bit computer, specifies that the Type Library Exporter (Tlbexp.exe) generates a 32-bit type library.</span></span> <span data-ttu-id="5150d-105">모든 데이터 형식은 적절하게 변환됩니다.</span><span class="sxs-lookup"><span data-stu-id="5150d-105">All data types are transformed appropriately.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ExportAs64Bit">
      <MemberSignature Language="C#" Value="ExportAs64Bit" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.InteropServices.TypeLibExporterFlags ExportAs64Bit = int32(32)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.TypeLibExporterFlags.ExportAs64Bit" />
      <MemberSignature Language="VB.NET" Value="ExportAs64Bit" />
      <MemberSignature Language="C++ CLI" Value="ExportAs64Bit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.TypeLibExporterFlags</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5150d-106">32비트 컴퓨터에서 컴파일하는 경우 형식 라이브러리 내보내기(Tlbexp.exe)에서 64비트 형식 라이브러리를 생성하도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="5150d-106">When compiling on a 32-bit computer, specifies that the Type Library Exporter (Tlbexp.exe) generates a 64-bit type library.</span></span> <span data-ttu-id="5150d-107">모든 데이터 형식은 적절하게 변환됩니다.</span><span class="sxs-lookup"><span data-stu-id="5150d-107">All data types are transformed appropriately.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.InteropServices.TypeLibExporterFlags None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.TypeLibExporterFlags.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.TypeLibExporterFlags</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5150d-108">플래그를 지정하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5150d-108">Specifies no flags.</span></span> <span data-ttu-id="5150d-109">이 값이 기본값입니다.</span><span class="sxs-lookup"><span data-stu-id="5150d-109">This is the default.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="OldNames">
      <MemberSignature Language="C#" Value="OldNames" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.InteropServices.TypeLibExporterFlags OldNames = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.TypeLibExporterFlags.OldNames" />
      <MemberSignature Language="VB.NET" Value="OldNames" />
      <MemberSignature Language="C++ CLI" Value="OldNames" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.TypeLibExporterFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5150d-110">형식 라이브러리를 내보내는 경우 .NET Framework에서는 형식을 네임스페이스 이름으로 데코레이팅하여 형식 이름 충돌을 해결합니다. 예를 들어, <see langword="System.Windows.Forms.HorizontalAlignment" />를 <see langword="System_Windows_Forms_HorizontalAlignment" />로 내보냅니다.</span><span class="sxs-lookup"><span data-stu-id="5150d-110">When exporting type libraries, the .NET Framework resolves type name conflicts by decorating the type with the name of the namespace; for example, <see langword="System.Windows.Forms.HorizontalAlignment" /> is exported as <see langword="System_Windows_Forms_HorizontalAlignment" />.</span></span> <span data-ttu-id="5150d-111">COM에서 표시되지 않는 형식의 이름과 충돌하는 경우 .NET Framework에서는 데코레이팅되지 않은 이름을 내보냅니다.</span><span class="sxs-lookup"><span data-stu-id="5150d-111">When there is a conflict with the name of a type that is not visible from COM, the .NET Framework exports the undecorated name.</span></span> <span data-ttu-id="5150d-112"><see cref="F:System.Runtime.InteropServices.TypeLibExporterFlags.OldNames" /> 플래그를 설정하거나 형식 라이브러리 내보내기(Tlbexp.exe)에서 <see langword="/oldnames" /> 옵션을 사용하여 .NET Framework에서 데코레이팅된 이름을 내보내도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="5150d-112">Set the <see cref="F:System.Runtime.InteropServices.TypeLibExporterFlags.OldNames" /> flag or use the <see langword="/oldnames" /> option in the Type Library Exporter (Tlbexp.exe) to force the .NET Framework to export the decorated name.</span></span> <span data-ttu-id="5150d-113">데코레이팅된 이름을 내보내는 것은 .NET Framework 2.0 이전 버전에서 기본 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="5150d-113">Note that exporting the decorated name was the default behavior in versions prior to the .NET Framework version 2.0.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="OnlyReferenceRegistered">
      <MemberSignature Language="C#" Value="OnlyReferenceRegistered" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.InteropServices.TypeLibExporterFlags OnlyReferenceRegistered = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.TypeLibExporterFlags.OnlyReferenceRegistered" />
      <MemberSignature Language="VB.NET" Value="OnlyReferenceRegistered" />
      <MemberSignature Language="C++ CLI" Value="OnlyReferenceRegistered" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.TypeLibExporterFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5150d-114">등록된 형식 라이브러리가 형식에 없으면 COM에서 가져온 형식에 대한 참조를 <see langword="IUnknown" />으로 내보냅니다.</span><span class="sxs-lookup"><span data-stu-id="5150d-114">Exports references to types that were imported from COM as <see langword="IUnknown" /> if the type does not have a registered type library.</span></span> <span data-ttu-id="5150d-115">형식 라이브러리 내보내기가 입력 어셈블리와 같은 디렉터리가 아니라 레지스트리에서 종속 형식을 검색하도록 하려면 이 플래그를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="5150d-115">Set this flag when you want the type library exporter to look for dependent types in the registry rather than in the same directory as the input assembly.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>