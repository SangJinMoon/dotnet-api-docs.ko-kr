<Type Name="TypeLibExporterFlags" FullName="System.Runtime.InteropServices.TypeLibExporterFlags">
  <Metadata><Meta Name="ms.openlocfilehash" Value="414fb075663270b9949390ac6a8b686ae7c2de1b" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52351297" /></Metadata><TypeSignature Language="C#" Value="public enum TypeLibExporterFlags" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed TypeLibExporterFlags extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.TypeLibExporterFlags" />
  <TypeSignature Language="VB.NET" Value="Public Enum TypeLibExporterFlags" />
  <TypeSignature Language="C++ CLI" Value="public enum class TypeLibExporterFlags" />
  <TypeSignature Language="F#" Value="type TypeLibExporterFlags = " />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="59364-101">형식 라이브러리를 생성 하는 방법을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="59364-101">Indicates how a type library should be produced.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59364-102">사용한 <xref:System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="59364-102">Used with <xref:System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib%2A>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CallerResolvedReferences">
      <MemberSignature Language="C#" Value="CallerResolvedReferences" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.InteropServices.TypeLibExporterFlags CallerResolvedReferences = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.TypeLibExporterFlags.CallerResolvedReferences" />
      <MemberSignature Language="VB.NET" Value="CallerResolvedReferences" />
      <MemberSignature Language="C++ CLI" Value="CallerResolvedReferences" />
      <MemberSignature Language="F#" Value="CallerResolvedReferences = 2" Usage="System.Runtime.InteropServices.TypeLibExporterFlags.CallerResolvedReferences" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.TypeLibExporterFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="59364-103">호출자가 명시적으로 레지스트리를 조회 하지 않고 형식 라이브러리 참조를 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="59364-103">Allows the caller to explicitly resolve type library references without consulting the registry.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ExportAs32Bit">
      <MemberSignature Language="C#" Value="ExportAs32Bit" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.InteropServices.TypeLibExporterFlags ExportAs32Bit = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.TypeLibExporterFlags.ExportAs32Bit" />
      <MemberSignature Language="VB.NET" Value="ExportAs32Bit" />
      <MemberSignature Language="C++ CLI" Value="ExportAs32Bit" />
      <MemberSignature Language="F#" Value="ExportAs32Bit = 16" Usage="System.Runtime.InteropServices.TypeLibExporterFlags.ExportAs32Bit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.TypeLibExporterFlags</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary><span data-ttu-id="59364-104">64 비트 컴퓨터에서 컴파일할 때 형식 라이브러리 내보내기 (Tlbexp.exe) 32 비트 형식 라이브러리를 생성 하도록 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="59364-104">When compiling on a 64-bit computer, specifies that the Type Library Exporter (Tlbexp.exe) generates a 32-bit type library.</span></span> <span data-ttu-id="59364-105">모든 데이터 형식은 적절 하 게 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59364-105">All data types are transformed appropriately.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ExportAs64Bit">
      <MemberSignature Language="C#" Value="ExportAs64Bit" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.InteropServices.TypeLibExporterFlags ExportAs64Bit = int32(32)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.TypeLibExporterFlags.ExportAs64Bit" />
      <MemberSignature Language="VB.NET" Value="ExportAs64Bit" />
      <MemberSignature Language="C++ CLI" Value="ExportAs64Bit" />
      <MemberSignature Language="F#" Value="ExportAs64Bit = 32" Usage="System.Runtime.InteropServices.TypeLibExporterFlags.ExportAs64Bit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.TypeLibExporterFlags</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary><span data-ttu-id="59364-106">32비트 컴퓨터에서 컴파일하는 경우 형식 라이브러리 내보내기(Tlbexp.exe)에서 64비트 형식 라이브러리를 생성하도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="59364-106">When compiling on a 32-bit computer, specifies that the Type Library Exporter (Tlbexp.exe) generates a 64-bit type library.</span></span> <span data-ttu-id="59364-107">모든 데이터 형식은 적절 하 게 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59364-107">All data types are transformed appropriately.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.InteropServices.TypeLibExporterFlags None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.TypeLibExporterFlags.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.Runtime.InteropServices.TypeLibExporterFlags.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.TypeLibExporterFlags</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="59364-108">없음 플래그를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="59364-108">Specifies no flags.</span></span> <span data-ttu-id="59364-109">이 값이 기본값입니다.</span><span class="sxs-lookup"><span data-stu-id="59364-109">This is the default.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="OldNames">
      <MemberSignature Language="C#" Value="OldNames" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.InteropServices.TypeLibExporterFlags OldNames = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.TypeLibExporterFlags.OldNames" />
      <MemberSignature Language="VB.NET" Value="OldNames" />
      <MemberSignature Language="C++ CLI" Value="OldNames" />
      <MemberSignature Language="F#" Value="OldNames = 4" Usage="System.Runtime.InteropServices.TypeLibExporterFlags.OldNames" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.TypeLibExporterFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="59364-110">.NET Framework 확인 하는 네임 스페이스 이름 사용 하 여 형식 데코 레이트 하 여 이름 충돌을 입력 형식 라이브러리를 내보낼 때 예를 들어 <see langword="System.Windows.Forms.HorizontalAlignment" /> 로 내보낸 <see langword="System_Windows_Forms_HorizontalAlignment" />합니다.</span><span class="sxs-lookup"><span data-stu-id="59364-110">When exporting type libraries, the .NET Framework resolves type name conflicts by decorating the type with the name of the namespace; for example, <see langword="System.Windows.Forms.HorizontalAlignment" /> is exported as <see langword="System_Windows_Forms_HorizontalAlignment" />.</span></span> <span data-ttu-id="59364-111">COM에서 표시 되지 않는 형식의 이름 사용 하 여 충돌의 경우.NET Framework 데코레이팅되지 않은 이름을 내보냅니다.</span><span class="sxs-lookup"><span data-stu-id="59364-111">When there is a conflict with the name of a type that is not visible from COM, the .NET Framework exports the undecorated name.</span></span> <span data-ttu-id="59364-112">설정 합니다 <see cref="F:System.Runtime.InteropServices.TypeLibExporterFlags.OldNames" /> 플래그 또는 사용을 <see langword="/oldnames" /> 형식 라이브러리 내보내기 (Tlbexp.exe)에서.NET Framework에서 데코레이팅된 이름을 내보내도록에 적용할 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="59364-112">Set the <see cref="F:System.Runtime.InteropServices.TypeLibExporterFlags.OldNames" /> flag or use the <see langword="/oldnames" /> option in the Type Library Exporter (Tlbexp.exe) to force the .NET Framework to export the decorated name.</span></span> <span data-ttu-id="59364-113">데코레이팅된 이름을 내보내는.NET Framework 버전 2.0 이전 버전의 기본 동작 했는지 note 합니다.</span><span class="sxs-lookup"><span data-stu-id="59364-113">Note that exporting the decorated name was the default behavior in versions prior to the .NET Framework version 2.0.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="OnlyReferenceRegistered">
      <MemberSignature Language="C#" Value="OnlyReferenceRegistered" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.InteropServices.TypeLibExporterFlags OnlyReferenceRegistered = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.TypeLibExporterFlags.OnlyReferenceRegistered" />
      <MemberSignature Language="VB.NET" Value="OnlyReferenceRegistered" />
      <MemberSignature Language="C++ CLI" Value="OnlyReferenceRegistered" />
      <MemberSignature Language="F#" Value="OnlyReferenceRegistered = 1" Usage="System.Runtime.InteropServices.TypeLibExporterFlags.OnlyReferenceRegistered" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.TypeLibExporterFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="59364-114">COM에서 가져온 형식에 대 한 참조를 내보냅니다 <see langword="IUnknown" /> 형식에 등록된 된 형식 라이브러리가 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="59364-114">Exports references to types that were imported from COM as <see langword="IUnknown" /> if the type does not have a registered type library.</span></span> <span data-ttu-id="59364-115">형식 라이브러리 내보내기가 입력된 어셈블리와 동일한 디렉터리에 아니라 레지스트리에서 종속 형식을 검색 하는 경우이 플래그를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="59364-115">Set this flag when you want the type library exporter to look for dependent types in the registry rather than in the same directory as the input assembly.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>