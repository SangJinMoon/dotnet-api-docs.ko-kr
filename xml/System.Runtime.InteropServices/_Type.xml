<Type Name="_Type" FullName="System.Runtime.InteropServices._Type">
  <TypeSignature Language="C#" Value="public interface _Type" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Type" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices._Type" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Type" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Type" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("BCA8B44D-AAD6-3A86-8AB7-03349F4F2DA2")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Type))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9d116-101"><see cref="T:System.Type" /> 클래스의 public 멤버를 비관리 코드에 노출합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-101">Exposes the public members of the <see cref="T:System.Type" /> class to the unmanaged code.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-102">이 인터페이스는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-102">This interface is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-103">vtable 순서를 유지 하는이 인터페이스는 <xref:System.Type?displayProperty=nameWithType> 클래스 관리 되지 않는 COM 개체에서 액세스할 수 있는 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-103">This interface preserves the vtable order of the <xref:System.Type?displayProperty=nameWithType> class members that can be accessed by unmanaged COM objects.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly Assembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly Assembly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Assembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Assembly ^ Assembly { System::Reflection::Assembly ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-104">버전에 관계없이 <see cref="P:System.Type.Assembly" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-104">Provides COM objects with version-independent access to the <see cref="P:System.Type.Assembly" /> property.</span></span></summary>
        <value><span data-ttu-id="9d116-105">현재 형식이 포함된 어셈블리를 설명하는 <see cref="T:System.Reflection.Assembly" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-105">An <see cref="T:System.Reflection.Assembly" /> instance that describes the assembly containing the current type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-106">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-106">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-107"><xref:System.Type.Assembly%2A?displayProperty=nameWithType> 속성 get는 <xref:System.Reflection.Assembly> 형식이 선언 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-107">The <xref:System.Type.Assembly%2A?displayProperty=nameWithType> property gets the <xref:System.Reflection.Assembly> in which the type is declared.</span></span> <span data-ttu-id="9d116-108">제네릭 형식에 대 한이 속성을 가져옵니다는 <xref:System.Reflection.Assembly> 에 제네릭 형식이 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-108">For generic types, this property gets the <xref:System.Reflection.Assembly> in which the generic type is defined.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AssemblyQualifiedName">
      <MemberSignature Language="C#" Value="public string AssemblyQualifiedName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssemblyQualifiedName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.AssemblyQualifiedName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssemblyQualifiedName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AssemblyQualifiedName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-109">버전에 관계없이 <see cref="P:System.Type.AssemblyQualifiedName" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-109">Provides COM objects with version-independent access to the <see cref="P:System.Type.AssemblyQualifiedName" /> property.</span></span></summary>
        <value><span data-ttu-id="9d116-110"><see cref="T:System.Type" />이 로드된 어셈블리의 이름을 비롯하여 <see cref="T:System.Type" />의 어셈블리로 한정된 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-110">The assembly-qualified name of the <see cref="T:System.Type" />, including the name of the assembly from which the <see cref="T:System.Type" /> was loaded.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-111">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-111">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-112"><xref:System.Type.AssemblyQualifiedName%2A?displayProperty=nameWithType> 속성의 어셈블리로 한정 된 이름을 가져옵니다는 <xref:System.Type>, 어셈블리의 이름을 포함 하는 <xref:System.Type> 로드 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-112">The <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=nameWithType> property gets the assembly-qualified name of the <xref:System.Type>, including the name of the assembly from which the <xref:System.Type> was loaded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Reflection.TypeAttributes Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.TypeAttributes Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As TypeAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::TypeAttributes Attributes { System::Reflection::TypeAttributes get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.TypeAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-113">버전에 관계없이 <see cref="P:System.Type.Attributes" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-113">Provides COM objects with version-independent access to the <see cref="P:System.Type.Attributes" /> property.</span></span></summary>
        <value><span data-ttu-id="9d116-114"><see cref="T:System.Reflection.TypeAttributes" />이 값이 지정되어 있지 않은 제네릭 형식 매개 변수를 나타내지 않는 경우 <see cref="T:System.Type" />의 특성 집합을 나타내는 <see cref="T:System.Type" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-114">A <see cref="T:System.Reflection.TypeAttributes" /> object representing the attribute set of the <see cref="T:System.Type" />, unless the <see cref="T:System.Type" /> represents a generic type parameter, in which case the value is unspecified.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-115">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-115">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-116"><xref:System.Type.Attributes%2A?displayProperty=nameWithType> 속성에 연결 된 특성을 가져옵니다는 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-116">The <xref:System.Type.Attributes%2A?displayProperty=nameWithType> property gets the attributes associated with the <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public Type BaseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type BaseType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ BaseType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-117">버전에 관계없이 <see cref="P:System.Type.BaseType" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-117">Provides COM objects with version-independent access to the <see cref="P:System.Type.BaseType" /> property.</span></span></summary>
        <value><span data-ttu-id="9d116-118">현재 <see cref="T:System.Type" />이 직접 상속하는 <see cref="T:System.Type" />이거나, 현재 <see langword="null" />이 <see cref="T:System.Object" /> 클래스를 나타내는 경우<see langword="Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-118">The <see cref="T:System.Type" /> from which the current <see cref="T:System.Type" /> directly inherits, or <see langword="null" /> if the current <see langword="Type" /> represents the <see cref="T:System.Object" /> class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-119">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-119">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-120"><xref:System.Type.BaseType%2A?displayProperty=nameWithType> 속성 있는 형식을 가져옵니다 현재 <xref:System.Type> 직접 상속 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-120">The <xref:System.Type.BaseType%2A?displayProperty=nameWithType> property gets the type from which the current <xref:System.Type> directly inherits.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public Type DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeclaringType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DeclaringType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-121">버전에 관계없이 <see cref="P:System.Type.DeclaringType" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-121">Provides COM objects with version-independent access to the <see cref="P:System.Type.DeclaringType" /> property.</span></span></summary>
        <value><span data-ttu-id="9d116-122">이 멤버를 선언하는 클래스에 대한 <see cref="T:System.Type" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-122">The <see cref="T:System.Type" /> object for the class that declares this member.</span></span> <span data-ttu-id="9d116-123">해당 형식이 중첩 형식이면 이 속성은 바깥쪽 형식을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-123">If the type is a nested type, this property returns the enclosing type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-124">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-124">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-125"><xref:System.Type.DeclaringType%2A?displayProperty=nameWithType> 이 멤버를 선언 하는 클래스 속성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-125">The <xref:System.Type.DeclaringType%2A?displayProperty=nameWithType> property gets the class that declares this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9d116-126">버전에 관계없이 <see cref="Overload:System.Type.Equals" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-126">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.Equals" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-127">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-127">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-128"><xref:System.Type.Equals%2A?displayProperty=nameWithType> 메서드 확인의 기본 시스템 형식이 현재 <xref:System.Type> 지정 된의 내부 시스템 형식과 동일 <xref:System.Object> 또는 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-128">The <xref:System.Type.Equals%2A?displayProperty=nameWithType> method determines if the underlying system type of the current <xref:System.Type> is the same as the underlying system type of the specified <xref:System.Object> or <xref:System.Type>.</span></span>  
  
 <span data-ttu-id="9d116-129">이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-129">.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="9d116-130">현재 <see cref="T:System.Object" />의 내부 시스템 형식과 비교할 내부 시스템 형식이 있는 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-130">The <see cref="T:System.Object" /> whose underlying system type is to be compared with the underlying system type of the current <see cref="T:System.Type" />.</span></span></param>
        <summary><span data-ttu-id="9d116-131">버전에 관계없이 <see cref="M:System.Type.Equals(System.Object)" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-131">Provides COM objects with version-independent access to the <see cref="M:System.Type.Equals(System.Object)" /> method.</span></span></summary>
        <returns>
          <span data-ttu-id="9d116-132"><paramref name="o" />의 내부 시스템 형식이 현재 <see cref="T:System.Type" />의 내부 시스템 형식과 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-132"><see langword="true" /> if the underlying system type of <paramref name="o" /> is the same as the underlying system type of the current <see cref="T:System.Type" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-133">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-133">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-134"><xref:System.Type.Equals%2A?displayProperty=nameWithType> 메서드 확인의 기본 시스템 형식이 현재 <xref:System.Type> 지정 된의 내부 시스템 형식과 동일 <xref:System.Object>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-134">The <xref:System.Type.Equals%2A?displayProperty=nameWithType> method determines if the underlying system type of the current <xref:System.Type> is the same as the underlying system type of the specified <xref:System.Object>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Type o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Type o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.Equals(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (o As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(Type ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="9d116-135">현재 <see cref="T:System.Type" />의 내부 시스템 형식과 비교할 내부 시스템 형식이 있는 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-135">The <see cref="T:System.Type" /> whose underlying system type is to be compared with the underlying system type of the current <see cref="T:System.Type" />.</span></span></param>
        <summary><span data-ttu-id="9d116-136">버전에 관계없이 <see cref="M:System.Type.Equals(System.Type)" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-136">Provides COM objects with version-independent access to the <see cref="M:System.Type.Equals(System.Type)" /> method.</span></span></summary>
        <returns>
          <span data-ttu-id="9d116-137"><paramref name="o" />의 내부 시스템 형식이 현재 <see cref="T:System.Type" />의 내부 시스템 형식과 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-137"><see langword="true" /> if the underlying system type of <paramref name="o" /> is the same as the underlying system type of the current <see cref="T:System.Type" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-138">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-138">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-139"><xref:System.Type.Equals%2A?displayProperty=nameWithType> 메서드 확인의 기본 시스템 형식이 현재 <xref:System.Type> 지정 된의 내부 시스템 형식과 동일 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-139">The <xref:System.Type.Equals%2A?displayProperty=nameWithType> method determines if the underlying system type of the current <xref:System.Type> is the same as the underlying system type of the specified <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindInterfaces">
      <MemberSignature Language="C#" Value="public Type[] FindInterfaces (System.Reflection.TypeFilter filter, object filterCriteria);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] FindInterfaces(class System.Reflection.TypeFilter filter, object filterCriteria) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindInterfaces (filter As TypeFilter, filterCriteria As Object) As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Type ^&gt; ^ FindInterfaces(System::Reflection::TypeFilter ^ filter, System::Object ^ filterCriteria);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.Reflection.TypeFilter" />
        <Parameter Name="filterCriteria" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="filter"><span data-ttu-id="9d116-140">인터페이스를 <c>filterCriteria</c>에 대해 비교하는 <see cref="T:System.Reflection.TypeFilter" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-140">The <see cref="T:System.Reflection.TypeFilter" /> delegate that compares the interfaces against <c>filterCriteria</c>.</span></span></param>
        <param name="filterCriteria"><span data-ttu-id="9d116-141">반환되는 배열에 인터페이스가 포함되어야 하는지를 결정하는 검색 조건입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-141">The search criteria that determines whether an interface should be included in the returned array.</span></span></param>
        <summary><span data-ttu-id="9d116-142">버전에 관계없이 <see cref="M:System.Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-142">Provides COM objects with version-independent access to the <see cref="M:System.Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-143">현재 <see cref="T:System.Type" />에 의해 구현되거나 상속되는 인터페이스의 필터링된 목록을 나타내는 <see cref="T:System.Type" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-143">An array of <see cref="T:System.Type" /> objects representing a filtered list of the interfaces implemented or inherited by the current <see cref="T:System.Type" />.</span></span>  
  
 <span data-ttu-id="9d116-144">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-144">-or-</span></span>  
  
 <span data-ttu-id="9d116-145">해당 필터와 일치하는 인터페이스 중에서 현재 <see cref="T:System.Type" />에 의해 구현되거나 상속되는 인터페이스가 없는 경우 <see cref="T:System.Type" /> 형식의 빈 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-145">An empty array of type <see cref="T:System.Type" />, if no interfaces matching the filter are implemented or inherited by the current <see cref="T:System.Type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-146">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-146">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-147"><xref:System.Type.FindInterfaces%2A?displayProperty=nameWithType> 메서드 배열을 반환 <xref:System.Type> 인터페이스의 필터링 된 목록을 나타내는 의해 구현 되거나 상속 현재 개체 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-147">The <xref:System.Type.FindInterfaces%2A?displayProperty=nameWithType> method returns an array of <xref:System.Type> objects representing a filtered list of interfaces implemented or inherited by the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMembers">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] FindMembers (System.Reflection.MemberTypes memberType, System.Reflection.BindingFlags bindingAttr, System.Reflection.MemberFilter filter, object filterCriteria);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] FindMembers(valuetype System.Reflection.MemberTypes memberType, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.MemberFilter filter, object filterCriteria) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMembers (memberType As MemberTypes, bindingAttr As BindingFlags, filter As MemberFilter, filterCriteria As Object) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ FindMembers(System::Reflection::MemberTypes memberType, System::Reflection::BindingFlags bindingAttr, System::Reflection::MemberFilter ^ filter, System::Object ^ filterCriteria);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memberType" Type="System.Reflection.MemberTypes" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="filter" Type="System.Reflection.MemberFilter" />
        <Parameter Name="filterCriteria" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="memberType"><span data-ttu-id="9d116-148">검색할 멤버 형식을 나타내는 <see langword="MemberTypes" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-148">A <see langword="MemberTypes" /> object indicating the type of member to search for.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="9d116-149">검색 방법을 지정하는 하나 이상의 <see cref="T:System.Reflection.BindingFlags" />로 구성된 비트 마스크입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-149">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span>  
  
 <span data-ttu-id="9d116-150">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-150">-or-</span></span>  
  
 <span data-ttu-id="9d116-151">0(<see langword="null" />을 반환하는 경우)</span><span class="sxs-lookup"><span data-stu-id="9d116-151">Zero, to return <see langword="null" />.</span></span></param>
        <param name="filter"><span data-ttu-id="9d116-152">비교를 수행하여 현재 검사 중인 멤버가 <c>filterCriteria</c>와 일치하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />를 반환하는 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-152">The delegate that does the comparisons, returning <see langword="true" /> if the member currently being inspected matches the <c>filterCriteria</c> and <see langword="false" /> otherwise.</span></span> <span data-ttu-id="9d116-153">이 클래스에서 제공하는 <see langword="FilterAttribute" />, <see langword="FilterName" /> 및 <see langword="FilterNameIgnoreCase" /> 대리자를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-153">You can use the <see langword="FilterAttribute" />, <see langword="FilterName" />, and <see langword="FilterNameIgnoreCase" /> delegates supplied by this class.</span></span> <span data-ttu-id="9d116-154">첫 번째 대리자는 <see langword="FieldAttributes" />, <see langword="MethodAttributes" /> 및 <see langword="MethodImplAttributes" />의 필드를 검색 조건으로 사용하고 다른 두 대리자는 <see langword="String" /> 개체를 검색 조건으로 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-154">The first uses the fields of <see langword="FieldAttributes" />, <see langword="MethodAttributes" />, and <see langword="MethodImplAttributes" /> as search criteria, and the other two delegates use <see langword="String" /> objects as the search criteria.</span></span></param>
        <param name="filterCriteria"><span data-ttu-id="9d116-155"><see langword="MemberInfo" /> 개체의 배열에 멤버가 반환되는지를 결정하는 검색 조건입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-155">The search criteria that determines whether a member is returned in the array of <see langword="MemberInfo" /> objects.</span></span>  
  
 <span data-ttu-id="9d116-156"><see langword="FieldAttributes" />, <see langword="MethodAttributes" /> 및 <see langword="MethodImplAttributes" />의 필드는 이 클래스에서 제공하는 <see langword="FilterAttribute" /> 대리자와 함께 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-156">The fields of <see langword="FieldAttributes" />, <see langword="MethodAttributes" />, and <see langword="MethodImplAttributes" /> can be used in conjunction with the <see langword="FilterAttribute" /> delegate supplied by this class.</span></span></param>
        <summary><span data-ttu-id="9d116-157">버전에 관계없이 <see cref="M:System.Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-157">Provides COM objects with version-independent access to the <see cref="M:System.Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-158">지정된 멤버 형식의 <see cref="T:System.Reflection.MemberInfo" /> 개체에 대한 필터링된 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-158">A filtered array of <see cref="T:System.Reflection.MemberInfo" /> objects of the specified member type.</span></span>  
  
 <span data-ttu-id="9d116-159">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-159">-or-</span></span>  
  
 <span data-ttu-id="9d116-160">현재 <see cref="T:System.Reflection.MemberInfo" />에 필터 조건과 일치하는 <see cref="T:System.Type" /> 형식의 멤버가 없으면 <paramref name="memberType" /> 형식의 빈 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-160">An empty array of type <see cref="T:System.Reflection.MemberInfo" />, if the current <see cref="T:System.Type" /> does not have members of type <paramref name="memberType" /> that match the filter criteria.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-161">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-161">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-162"><xref:System.Type.FindMembers%2A?displayProperty=nameWithType> 메서드의 필터링 된 배열을 반환 <xref:System.Reflection.MemberInfo> 지정 된 멤버 형식의 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-162">The <xref:System.Type.FindMembers%2A?displayProperty=nameWithType> method returns a filtered array of <xref:System.Reflection.MemberInfo> objects of the specified member type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.FullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-163">버전에 관계없이 <see cref="P:System.Type.FullName" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-163">Provides COM objects with version-independent access to the <see cref="P:System.Type.FullName" /> property.</span></span></summary>
        <value><span data-ttu-id="9d116-164">어셈블리를 제외한 <see cref="T:System.Type" />의 네임스페이스를 비롯하여 <see cref="T:System.Type" />의 정규화된 이름이 포함된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-164">A string containing the fully qualified name of the <see cref="T:System.Type" />, including the namespace of the <see cref="T:System.Type" /> but not the assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-165">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-165">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-166"><xref:System.Type.FullName%2A?displayProperty=nameWithType> 속성의 정규화 된 이름을 가져옵니다는 <xref:System.Type>의 네임 스페이스를 포함 하는 <xref:System.Type> 어셈블리가 아닌 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-166">The <xref:System.Type.FullName%2A?displayProperty=nameWithType> property gets the fully qualified name of the <xref:System.Type>, including the namespace of the <xref:System.Type> but not the assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArrayRank">
      <MemberSignature Language="C#" Value="public int GetArrayRank ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetArrayRank() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetArrayRank" />
      <MemberSignature Language="VB.NET" Value="Public Function GetArrayRank () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetArrayRank();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9d116-167">버전에 관계없이 <see cref="M:System.Type.GetArrayRank" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-167">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetArrayRank" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-168">현재 <see cref="T:System.Int32" />의 차수를 포함하는 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-168">An <see cref="T:System.Int32" /> containing the number of dimensions in the current <see cref="T:System.Type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-169">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-169">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-170"><xref:System.Type.GetArrayRank%2A?displayProperty=nameWithType> 메서드 차원 수를 가져옵니다는 <xref:System.Array>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-170">The <xref:System.Type.GetArrayRank%2A?displayProperty=nameWithType> method gets the number of dimensions in an <xref:System.Array>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetConstructor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9d116-171">버전에 관계없이 <see cref="Overload:System.Type.GetConstructor" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-171">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetConstructor" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-172">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-172">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-173"><xref:System.Type.GetConstructor%2A?displayProperty=nameWithType> 메서드는 현재의 특정 생성자를 가져옵니다 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-173">The <xref:System.Type.GetConstructor%2A?displayProperty=nameWithType> method gets a specific constructor of the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetConstructor">
      <MemberSignature Language="C#" Value="public System.Reflection.ConstructorInfo GetConstructor (Type[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.ConstructorInfo GetConstructor(class System.Type[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetConstructor(System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConstructor (types As Type()) As ConstructorInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::ConstructorInfo ^ GetConstructor(cli::array &lt;Type ^&gt; ^ types);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="types"><span data-ttu-id="9d116-174">원하는 생성자에 대한 매개 변수의 수, 순서 및 형식을 나타내는 <see cref="T:System.Type" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-174">An array of <see cref="T:System.Type" /> objects representing the number, order, and type of the parameters for the desired constructor.</span></span>  
  
 <span data-ttu-id="9d116-175">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-175">-or-</span></span>  
  
 <span data-ttu-id="9d116-176">매개 변수를 사용하지 않는 생성자를 가져오기 위한 <see cref="T:System.Type" /> 개체의 빈 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-176">An empty array of <see cref="T:System.Type" /> objects, to get a constructor that takes no parameters.</span></span> <span data-ttu-id="9d116-177">이러한 빈 배열은 <see langword="static" /> 필드 <see cref="F:System.Type.EmptyTypes" />에서 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-177">Such an empty array is provided by the <see langword="static" /> field <see cref="F:System.Type.EmptyTypes" />.</span></span></param>
        <summary><span data-ttu-id="9d116-178">버전에 관계없이 <see cref="M:System.Type.GetConstructor(System.Type[])" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-178">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetConstructor(System.Type[])" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-179">매개 변수 형식 배열의 형식과 일치하는 매개 변수를 가진 public 인스턴스 생성자를 나타내는 <see cref="T:System.Reflection.ConstructorInfo" /> 개체가 있으면 그 개체를 반환하고, 그렇지 않으면 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-179">A <see cref="T:System.Reflection.ConstructorInfo" /> object representing the public instance constructor whose parameters match the types in the parameter type array, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-180">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-180">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-181"><xref:System.Type.GetConstructor%2A?displayProperty=nameWithType> 지정된 된 배열의 형식과 일치 하는 매개 변수를 가진 public 인스턴스 생성자에 대 한 메서드를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-181">The <xref:System.Type.GetConstructor%2A?displayProperty=nameWithType> method searches for a public instance constructor whose parameters match the types in the specified array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConstructor">
      <MemberSignature Language="C#" Value="public System.Reflection.ConstructorInfo GetConstructor (System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.ConstructorInfo GetConstructor(valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::ConstructorInfo ^ GetConstructor(System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="9d116-182">검색 방법을 지정하는 하나 이상의 <see cref="T:System.Reflection.BindingFlags" />로 구성된 비트 마스크입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-182">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span>  
  
 <span data-ttu-id="9d116-183">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-183">-or-</span></span>  
  
 <span data-ttu-id="9d116-184">0(<see langword="null" />을 반환하는 경우)</span><span class="sxs-lookup"><span data-stu-id="9d116-184">Zero, to return <see langword="null" />.</span></span></param>
        <param name="binder"><span data-ttu-id="9d116-185">속성 집합을 정의하고 바인딩을 활성화하는 <see cref="T:System.Reflection.Binder" /> 개체입니다. 이 개체는 또한 리플렉션을 통해 오버로드된 멤버를 선택할 수 있고 인수 형식을 강제 변환할 수 있으며 멤버를 호출할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-185">A <see cref="T:System.Reflection.Binder" /> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.</span></span>  
  
 <span data-ttu-id="9d116-186">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-186">-or-</span></span>  
  
 <span data-ttu-id="9d116-187"><see cref="P:System.Type.DefaultBinder" />를 사용하려는 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-187"><see langword="null" />, to use the <see cref="P:System.Type.DefaultBinder" />.</span></span></param>
        <param name="types"><span data-ttu-id="9d116-188">가져올 생성자에 대한 매개 변수의 수, 차수, 형식 등을 나타내는 <see cref="T:System.Type" /> 개체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-188">An array of <see cref="T:System.Type" /> objects representing the number, order, and type of the parameters for the constructor to get.</span></span>  
  
 <span data-ttu-id="9d116-189">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-189">-or-</span></span>  
  
 <span data-ttu-id="9d116-190">매개 변수를 사용하지 않는 생성자를 가져오기 위한 <see cref="T:System.Type" /> 형식의 빈 배열입니다(즉, Type[] types = new Type[0]).</span><span class="sxs-lookup"><span data-stu-id="9d116-190">An empty array of the type <see cref="T:System.Type" /> (that is, Type[] types = new Type[0]) to get a constructor that takes no parameters.</span></span>  
  
 <span data-ttu-id="9d116-191">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-191">-or-</span></span>  
  
 <span data-ttu-id="9d116-192"><see cref="F:System.Type.EmptyTypes" />.</span><span class="sxs-lookup"><span data-stu-id="9d116-192"><see cref="F:System.Type.EmptyTypes" />.</span></span></param>
        <param name="modifiers"><span data-ttu-id="9d116-193">매개 변수 형식 배열의 해당 요소와 연관된 특성을 나타내는 <see cref="T:System.Reflection.ParameterModifier" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-193">An array of <see cref="T:System.Reflection.ParameterModifier" /> objects representing the attributes associated with the corresponding element in the parameter type array.</span></span> <span data-ttu-id="9d116-194">기본 바인더에서는 이 매개 변수를 처리하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-194">The default binder does not process this parameter.</span></span></param>
        <summary><span data-ttu-id="9d116-195">버전에 관계없이 <see cref="M:System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-195">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-196">지정된 요구 사항과 일치하는 생성자를 나타내는 <see cref="T:System.Reflection.ConstructorInfo" /> 개체가 있으면 이 개체를 반환하고, 그렇지 않으면 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-196">A <see cref="T:System.Reflection.ConstructorInfo" /> object representing the constructor that matches the specified requirements, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-197">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-197">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-198"><xref:System.Type.GetConstructor%2A?displayProperty=nameWithType> 메서드 매개 변수를 가진 지정 된 인수 형식 및 한정자를 지정 된 바인딩 제약 조건과 일치 하는 생성자를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-198">The <xref:System.Type.GetConstructor%2A?displayProperty=nameWithType> method searches for a constructor whose parameters match the specified argument types and modifiers, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConstructor">
      <MemberSignature Language="C#" Value="public System.Reflection.ConstructorInfo GetConstructor (System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.ConstructorInfo GetConstructor(valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, valuetype System.Reflection.CallingConventions callConvention, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::ConstructorInfo ^ GetConstructor(System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, System::Reflection::CallingConventions callConvention, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="callConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="9d116-199">검색 방법을 지정하는 하나 이상의 <see cref="T:System.Reflection.BindingFlags" />로 구성된 비트 마스크입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-199">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span>  
  
 <span data-ttu-id="9d116-200">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-200">-or-</span></span>  
  
 <span data-ttu-id="9d116-201">0(<see langword="null" />을 반환하는 경우)</span><span class="sxs-lookup"><span data-stu-id="9d116-201">Zero, to return <see langword="null" />.</span></span></param>
        <param name="binder"><span data-ttu-id="9d116-202">속성 집합을 정의하고 바인딩을 활성화하는 <see cref="T:System.Reflection.Binder" /> 개체입니다. 이 개체는 또한 리플렉션을 통해 오버로드된 멤버를 선택할 수 있고 인수 형식을 강제 변환할 수 있으며 멤버를 호출할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-202">A <see cref="T:System.Reflection.Binder" /> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.</span></span>  
  
 <span data-ttu-id="9d116-203">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-203">-or-</span></span>  
  
 <span data-ttu-id="9d116-204"><see cref="P:System.Type.DefaultBinder" />를 사용하려는 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-204"><see langword="null" />, to use the <see cref="P:System.Type.DefaultBinder" />.</span></span></param>
        <param name="callConvention"><span data-ttu-id="9d116-205">인수의 순서 및 레이아웃, 반환 값의 전달 방법, 인수에 사용되는 레지스터, 스택 정리 방법 등과 관련하여 사용할 규칙을 지정하는 <see cref="T:System.Reflection.CallingConventions" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-205">The <see cref="T:System.Reflection.CallingConventions" /> object that specifies the set of rules to use regarding the order and layout of arguments, how the return value is passed, what registers are used for arguments, and the stack is cleaned up.</span></span></param>
        <param name="types"><span data-ttu-id="9d116-206">가져올 생성자에 대한 매개 변수의 수, 차수, 형식 등을 나타내는 <see cref="T:System.Type" /> 개체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-206">An array of <see cref="T:System.Type" /> objects representing the number, order, and type of the parameters for the constructor to get.</span></span>  
  
 <span data-ttu-id="9d116-207">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-207">-or-</span></span>  
  
 <span data-ttu-id="9d116-208">매개 변수를 사용하지 않는 생성자를 가져오기 위한 <see cref="T:System.Type" /> 형식의 빈 배열입니다(즉, Type[] types = new Type[0]).</span><span class="sxs-lookup"><span data-stu-id="9d116-208">An empty array of the type <see cref="T:System.Type" /> (that is, Type[] types = new Type[0]) to get a constructor that takes no parameters.</span></span></param>
        <param name="modifiers"><span data-ttu-id="9d116-209"><c>types</c> 배열에서 해당하는 요소와 연관된 특성을 나타내는 <see cref="T:System.Reflection.ParameterModifier" /> 개체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-209">An array of <see cref="T:System.Reflection.ParameterModifier" /> objects representing the attributes associated with the corresponding element in the <c>types</c> array.</span></span> <span data-ttu-id="9d116-210">기본 바인더에서는 이 매개 변수를 처리하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-210">The default binder does not process this parameter.</span></span></param>
        <summary><span data-ttu-id="9d116-211">버전에 관계없이 <see cref="M:System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-211">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-212">지정된 요구 사항과 일치하는 생성자를 나타내는 <see cref="T:System.Reflection.ConstructorInfo" /> 개체가 있으면 이 개체를 반환하고, 그렇지 않으면 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-212">A <see cref="T:System.Reflection.ConstructorInfo" /> object representing the constructor that matches the specified requirements, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-213">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-213">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-214"><xref:System.Type.GetConstructor%2A?displayProperty=nameWithType> 메서드는 지정 된 인수 형식 및 지정 된 바인딩 제약 조건 및 호출 규칙 한정자와 일치 하는 매개 변수를 가진 생성자를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-214">The <xref:System.Type.GetConstructor%2A?displayProperty=nameWithType> method searches for a constructor whose parameters match the specified argument types and modifiers, using the specified binding constraints and the specified calling convention.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetConstructors">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9d116-215">버전에 관계없이 <see cref="Overload:System.Type.GetConstructors" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-215">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetConstructors" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-216">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-216">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-217"><xref:System.Type.GetConstructors%2A?displayProperty=nameWithType> 메서드는 현재의 생성자를 가져옵니다 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-217">The <xref:System.Type.GetConstructors%2A?displayProperty=nameWithType> method gets the constructors of the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetConstructors">
      <MemberSignature Language="C#" Value="public System.Reflection.ConstructorInfo[] GetConstructors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.ConstructorInfo[] GetConstructors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetConstructors" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConstructors () As ConstructorInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::ConstructorInfo ^&gt; ^ GetConstructors();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9d116-218">버전에 관계없이 <see cref="M:System.Type.GetConstructors" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-218">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetConstructors" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-219">형식 이니셜라이저를 제외하고(정적 생성자) 현재 <see cref="T:System.Reflection.ConstructorInfo" />에 대해 정의된 모든 public 인스턴스 생성자를 나타내는 <see cref="T:System.Type" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-219">An array of <see cref="T:System.Reflection.ConstructorInfo" /> objects representing all the public instance constructors defined for the current <see cref="T:System.Type" />, but not including the type initializer (static constructor).</span></span> <span data-ttu-id="9d116-220">public 인스턴스 생성자가 현재 <see cref="T:System.Type" />에 대해 정의되어 있지 않거나 현재 <see cref="T:System.Type" />이 제네릭 형식 또는 메서드 정의의 형식 매개 변수를 나타내는 경우 <see cref="T:System.Reflection.ConstructorInfo" /> 형식의 빈 배열이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-220">If no public instance constructors are defined for the current <see cref="T:System.Type" />, or if the current <see cref="T:System.Type" /> represents a type parameter of a generic type or method definition, an empty array of type <see cref="T:System.Reflection.ConstructorInfo" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-221">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-221">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-222"><xref:System.Type.GetConstructors%2A?displayProperty=nameWithType> 현재에 대해 정의 된 모든 public 생성자를 반환 하는 메서드 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-222">The <xref:System.Type.GetConstructors%2A?displayProperty=nameWithType> method returns all the public constructors defined for the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConstructors">
      <MemberSignature Language="C#" Value="public System.Reflection.ConstructorInfo[] GetConstructors (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.ConstructorInfo[] GetConstructors(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetConstructors(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConstructors (bindingAttr As BindingFlags) As ConstructorInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::ConstructorInfo ^&gt; ^ GetConstructors(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="9d116-223">검색 방법을 지정하는 하나 이상의 <see cref="T:System.Reflection.BindingFlags" />로 구성된 비트 마스크입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-223">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span>  
  
 <span data-ttu-id="9d116-224">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-224">-or-</span></span>  
  
 <span data-ttu-id="9d116-225">0(<see langword="null" />을 반환하는 경우)</span><span class="sxs-lookup"><span data-stu-id="9d116-225">Zero, to return <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="9d116-226">버전에 관계없이 <see cref="M:System.Type.GetConstructors(System.Reflection.BindingFlags)" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-226">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetConstructors(System.Reflection.BindingFlags)" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-227">현재 <see cref="T:System.Reflection.ConstructorInfo" />에 대해 정의된 생성자 중 지정된 바인딩 제약 조건과 일치하는 모든 생성자(정의된 경우에는 형식 이니셜라이저도 포함)를 나타내는 <see cref="T:System.Type" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-227">An array of <see cref="T:System.Reflection.ConstructorInfo" /> objects representing all constructors defined for the current <see cref="T:System.Type" /> that match the specified binding constraints, including the type initializer if it is defined.</span></span> <span data-ttu-id="9d116-228">생성자가 현재 <see cref="T:System.Reflection.ConstructorInfo" />에 대해 정의되어 있지 않거나, 정의된 생성자 중 바인딩 제약 조건과 일치하는 것이 없거나, 현재 <see cref="T:System.Type" />이 제네릭 형식 또는 메서드 정의의 형식 매개 변수를 나타내는 경우 <see cref="T:System.Type" /> 형식의 빈 배열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-228">Returns an empty array of type <see cref="T:System.Reflection.ConstructorInfo" /> if no constructors are defined for the current <see cref="T:System.Type" />, if none of the defined constructors match the binding constraints, or if the current <see cref="T:System.Type" /> represents a type parameter of a generic type or method definition.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-229">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-229">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-230"><xref:System.Type.GetConstructors%2A?displayProperty=nameWithType> 메서드는 현재 정의 된 생성자 검색 <xref:System.Type>를 사용 하 여 지정 된 <xref:System.Reflection.BindingFlags>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-230">The <xref:System.Type.GetConstructors%2A?displayProperty=nameWithType> method searches for the constructors defined for the current <xref:System.Type>, using the specified <xref:System.Reflection.BindingFlags>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9d116-231">버전에 관계없이 <see cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-231">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-232">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-232">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-233"><xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType> 메서드가이 멤버에 적용 되는 모든 특성을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-233">The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType> method returns all attributes applied to this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit"><span data-ttu-id="9d116-234">이 멤버의 상속 체인을 검색하여 특성을 찾을지 여부를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-234">Specifies whether to search this member's inheritance chain to find the attributes.</span></span></param>
        <summary><span data-ttu-id="9d116-235">버전에 관계없이 <see cref="M:System.Reflection.Assembly.GetCustomAttributes(System.Boolean)" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-235">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetCustomAttributes(System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-236">이 멤버에 적용된 사용자 지정 특성의 배열을 반환하거나, 적용된 특성이 없는 경우에는 요소가 없는 배열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-236">An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-237">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-237">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-238"><xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=nameWithType> 메서드가이 멤버에 적용 되는 모든 특성을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-238">The <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=nameWithType> method returns all attributes applied to this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="9d116-239">검색할 특성의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-239">The type of attribute to search for.</span></span> <span data-ttu-id="9d116-240">이 형식에 할당할 수 있는 특성만 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-240">Only attributes that are assignable to this type are returned.</span></span></param>
        <param name="inherit"><span data-ttu-id="9d116-241">이 멤버의 상속 체인을 검색하여 특성을 찾을지 여부를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-241">Specifies whether to search this member's inheritance chain to find the attributes.</span></span></param>
        <summary><span data-ttu-id="9d116-242">버전에 관계없이 <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-242">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-243">이 멤버에 적용된 사용자 지정 특성의 배열을 반환하거나, 적용된 특성이 없는 경우에는 요소가 없는 배열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-243">An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-244">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-244">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-245"><xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType> 메서드가이 멤버에 적용 되는 모든 특성을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-245">The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType> method returns all attributes applied to this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultMembers">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] GetDefaultMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] GetDefaultMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetDefaultMembers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDefaultMembers () As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetDefaultMembers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9d116-246">버전에 관계없이 <see cref="M:System.Type.GetDefaultMembers" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-246">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetDefaultMembers" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-247">현재 <see cref="T:System.Reflection.MemberInfo" />의 모든 기본 멤버를 나타내는 <see cref="T:System.Type" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-247">An array of <see cref="T:System.Reflection.MemberInfo" /> objects representing all default members of the current <see cref="T:System.Type" />.</span></span>  
  
 <span data-ttu-id="9d116-248">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-248">-or-</span></span>  
  
 <span data-ttu-id="9d116-249">현재 <see cref="T:System.Reflection.MemberInfo" />에 기본 멤버가 없을 경우 <see cref="T:System.Type" /> 형식의 빈 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-249">An empty array of type <see cref="T:System.Reflection.MemberInfo" />, if the current <see cref="T:System.Type" /> does not have default members.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-250">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-250">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-251"><xref:System.Type.GetDefaultMembers%2A?displayProperty=nameWithType> 현재에 대해 정의 된 멤버에 대 한 메서드 검색 <xref:System.Type> 인 <xref:System.Reflection.DefaultMemberAttribute> 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-251">The <xref:System.Type.GetDefaultMembers%2A?displayProperty=nameWithType> method searches for the members defined for the current <xref:System.Type> whose <xref:System.Reflection.DefaultMemberAttribute> is set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetElementType">
      <MemberSignature Language="C#" Value="public Type GetElementType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetElementType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetElementType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetElementType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetElementType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9d116-252">버전에 관계없이 <see cref="M:System.Type.GetElementType" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-252">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetElementType" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-253">현재 배열, 포인터 또는 참조 형식에 의해 포함되거나 참조되는 개체의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-253">The <see cref="T:System.Type" /> of the object encompassed or referred to by the current array, pointer or reference type.</span></span>  
  
 <span data-ttu-id="9d116-254">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-254">-or-</span></span>  
  
 <span data-ttu-id="9d116-255">현재 <see cref="T:System.Type" />이 포인터 또는 배열이 아니거나, 참조로 전달되지 않거나, 제네릭 형식 또는 메서드 정의의 형식 매개 변수나 제네릭 형식을 나타내는 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-255"><see langword="null" /> if the current <see cref="T:System.Type" /> is not an array or a pointer, or is not passed by reference, or represents a generic type or a type parameter of a generic type or method definition.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-256">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-256">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-257"><xref:System.Type.GetElementType%2A?displayProperty=nameWithType> 메서드가 반환 되는 <xref:System.Type> 포함 되거나 현재 배열, 포인터 또는 참조 형식에서 참조 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-257">The <xref:System.Type.GetElementType%2A?displayProperty=nameWithType> method returns the <xref:System.Type> of the object encompassed or referred to by the current array, pointer or reference type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvent">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9d116-258">버전에 관계없이 <see cref="Overload:System.Type.GetEvent" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-258">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetEvent" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-259">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-259">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-260"><xref:System.Type.GetEvent%2A?displayProperty=nameWithType> 메서드는 현재에 의해 선언 되거나 상속 하는 특정 이벤트를 가져옵니다 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-260">The <xref:System.Type.GetEvent%2A?displayProperty=nameWithType> method gets a specific event declared or inherited by the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvent">
      <MemberSignature Language="C#" Value="public System.Reflection.EventInfo GetEvent (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.EventInfo GetEvent(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEvent (name As String) As EventInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::EventInfo ^ GetEvent(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.EventInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9d116-261">검색 방법을 지정하는 하나 이상의 <see cref="T:System.Reflection.BindingFlags" />로 구성된 비트 마스크입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-261">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span>  
  
 <span data-ttu-id="9d116-262">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-262">-or-</span></span>  
  
 <span data-ttu-id="9d116-263">0(<see langword="null" />을 반환하는 경우)</span><span class="sxs-lookup"><span data-stu-id="9d116-263">Zero, to return <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="9d116-264">버전에 관계없이 <see cref="M:System.Type.GetEvent(System.String)" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-264">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetEvent(System.String)" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-265">현재 <see cref="T:System.Reflection.EventInfo" />에 의해 선언되거나 상속되는 이벤트 중 지정된 바인딩 제약 조건과 일치하는 모든 이벤트를 나타내는 <see cref="T:System.Type" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-265">An array of <see cref="T:System.Reflection.EventInfo" /> objects representing all events that are declared or inherited by the current <see cref="T:System.Type" /> that match the specified binding constraints.</span></span>  
  
 <span data-ttu-id="9d116-266">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-266">-or-</span></span>  
  
 <span data-ttu-id="9d116-267">현재 <see cref="T:System.Reflection.EventInfo" />에 이벤트가 없거나 해당 바인딩 제약 조건과 일치하는 이벤트가 없을 경우 <see cref="T:System.Type" /> 형식의 빈 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-267">An empty array of type <see cref="T:System.Reflection.EventInfo" />, if the current <see cref="T:System.Type" /> does not have events, or if none of the events match the binding constraints.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-268">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-268">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-269"><xref:System.Type.GetEvent%2A?displayProperty=nameWithType> 메서드 선언 되거나 현재 상속 되는 이벤트를 검색 <xref:System.Type>, 지정 된 바인딩 제약 조건입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-269">The <xref:System.Type.GetEvent%2A?displayProperty=nameWithType> method searches for events that are declared or inherited by the current <xref:System.Type>, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvent">
      <MemberSignature Language="C#" Value="public System.Reflection.EventInfo GetEvent (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.EventInfo GetEvent(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetEvent(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEvent (name As String, bindingAttr As BindingFlags) As EventInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::EventInfo ^ GetEvent(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.EventInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9d116-270">현재 <see cref="T:System.String" />에 의해 선언되거나 상속되는 이벤트의 이름이 포함된 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-270">The <see cref="T:System.String" /> containing the name of an event that is declared or inherited by the current <see cref="T:System.Type" />.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="9d116-271">검색 방법을 지정하는 하나 이상의 <see cref="T:System.Reflection.BindingFlags" />로 구성된 비트 마스크입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-271">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span>  
  
 <span data-ttu-id="9d116-272">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-272">-or-</span></span>  
  
 <span data-ttu-id="9d116-273">0(<see langword="null" />을 반환하는 경우)</span><span class="sxs-lookup"><span data-stu-id="9d116-273">Zero, to return <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="9d116-274">버전에 관계없이 <see cref="M:System.Type.GetEvent(System.String,System.Reflection.BindingFlags)" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-274">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetEvent(System.String,System.Reflection.BindingFlags)" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-275">현재 <see cref="T:System.Reflection.EventInfo" />에 의해 선언되거나 상속되는 특정 이벤트가 있으면 해당 이벤트를 나타내는 <see cref="T:System.Type" /> 개체이고, 그렇지 않으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-275">The <see cref="T:System.Reflection.EventInfo" /> object representing the specified event that is declared or inherited by the current <see cref="T:System.Type" />, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-276">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-276">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-277"><xref:System.Type.GetEvent%2A?displayProperty=nameWithType> 메서드가 반환 되는 <xref:System.Reflection.EventInfo> 지정 된 바인딩 제약 조건을 사용 하 여, 지정된 된 이벤트를 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-277">The <xref:System.Type.GetEvent%2A?displayProperty=nameWithType> method returns the <xref:System.Reflection.EventInfo> object representing the specified event, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvents">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9d116-278">버전에 관계없이 <see cref="Overload:System.Type.GetEvents" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-278">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetEvents" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-279">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-279">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-280"><xref:System.Type.GetEvents%2A?displayProperty=nameWithType> 메서드 선언 되거나 현재 상속 되는 이벤트를 가져옵니다. <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-280">The <xref:System.Type.GetEvents%2A?displayProperty=nameWithType> method gets the events that are declared or inherited by the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public System.Reflection.EventInfo[] GetEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.EventInfo[] GetEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetEvents" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEvents () As EventInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::EventInfo ^&gt; ^ GetEvents();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.EventInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9d116-281">버전에 관계없이 <see cref="M:System.Type.GetEvents" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-281">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetEvents" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-282">현재 <see cref="T:System.Reflection.EventInfo" />에 의해 선언되거나 상속되는 모든 public 이벤트를 나타내는 <see cref="T:System.Type" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-282">An array of <see cref="T:System.Reflection.EventInfo" /> objects representing all the public events that are declared or inherited by the current <see cref="T:System.Type" />.</span></span>  
  
 <span data-ttu-id="9d116-283">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-283">-or-</span></span>  
  
 <span data-ttu-id="9d116-284">현재 <see cref="T:System.Reflection.EventInfo" />에 public 이벤트가 없을 경우 <see cref="T:System.Type" /> 형식의 빈 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-284">An empty array of type <see cref="T:System.Reflection.EventInfo" />, if the current <see cref="T:System.Type" /> does not have public events.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-285">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-285">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-286"><xref:System.Type.GetEvents%2A?displayProperty=nameWithType> 메서드 선언 되거나 현재 상속 되는 모든 public 이벤트를 반환 합니다. <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-286">The <xref:System.Type.GetEvents%2A?displayProperty=nameWithType> method returns all the public events that are declared or inherited by the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public System.Reflection.EventInfo[] GetEvents (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.EventInfo[] GetEvents(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetEvents(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEvents (bindingAttr As BindingFlags) As EventInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::EventInfo ^&gt; ^ GetEvents(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.EventInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="9d116-287">검색 방법을 지정하는 하나 이상의 <see cref="T:System.Reflection.BindingFlags" />로 구성된 비트 마스크입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-287">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span>  
  
 <span data-ttu-id="9d116-288">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-288">-or-</span></span>  
  
 <span data-ttu-id="9d116-289">0(<see langword="null" />을 반환하는 경우)</span><span class="sxs-lookup"><span data-stu-id="9d116-289">Zero, to return <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="9d116-290">버전에 관계없이 <see cref="M:System.Type.GetEvents(System.Reflection.BindingFlags)" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-290">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetEvents(System.Reflection.BindingFlags)" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-291">현재 <see cref="T:System.Reflection.EventInfo" />에 의해 선언되거나 상속되는 이벤트 중 지정된 바인딩 제약 조건과 일치하는 모든 이벤트를 나타내는 <see cref="T:System.Type" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-291">An array of <see cref="T:System.Reflection.EventInfo" /> objects representing all events that are declared or inherited by the current <see cref="T:System.Type" /> that match the specified binding constraints.</span></span>  
  
 <span data-ttu-id="9d116-292">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-292">-or-</span></span>  
  
 <span data-ttu-id="9d116-293">현재 <see cref="T:System.Reflection.EventInfo" />에 이벤트가 없거나 해당 바인딩 제약 조건과 일치하는 이벤트가 없을 경우 <see cref="T:System.Type" /> 형식의 빈 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-293">An empty array of type <see cref="T:System.Reflection.EventInfo" />, if the current <see cref="T:System.Type" /> does not have events, or if none of the events match the binding constraints.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-294">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-294">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-295"><xref:System.Type.GetEvents%2A?displayProperty=nameWithType> 메서드 선언 되거나 현재 상속 되는 이벤트를 검색 <xref:System.Type>, 지정 된 바인딩 제약 조건입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-295">The <xref:System.Type.GetEvents%2A?displayProperty=nameWithType> method searches for events that are declared or inherited by the current <xref:System.Type>, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetField">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9d116-296">버전에 관계없이 <see cref="Overload:System.Type.GetField" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-296">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetField" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-297">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-297">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-298"><xref:System.Type.GetField%2A?displayProperty=nameWithType> 메서드는 현재 특정 필드를 가져옵니다 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-298">The <xref:System.Type.GetField%2A?displayProperty=nameWithType> method gets a specific field of the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo GetField (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo GetField(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetField(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetField (name As String) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::FieldInfo ^ GetField(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9d116-299">가져올 데이터 필드의 이름이 들어 있는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-299">The <see cref="T:System.String" /> containing the name of the data field to get.</span></span></param>
        <summary><span data-ttu-id="9d116-300">버전에 관계없이 <see cref="M:System.Type.GetField(System.String)" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-300">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetField(System.String)" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-301">지정된 이름의 public 필드가 있으면 이를 나타내는 <see cref="T:System.Reflection.FieldInfo" /> 개체이고, 그렇지 않으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-301">A <see cref="T:System.Reflection.FieldInfo" /> object representing the public field with the specified name, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-302">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-302">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-303"><xref:System.Type.GetField%2A?displayProperty=nameWithType> 메서드 지정 된 이름의 public 필드를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-303">The <xref:System.Type.GetField%2A?displayProperty=nameWithType> method searches for the public field with the specified name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetField(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetField (name As String, bindingAttr As BindingFlags) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::FieldInfo ^ GetField(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9d116-304">가져올 데이터 필드의 이름이 들어 있는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-304">The <see cref="T:System.String" /> containing the name of the data field to get.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="9d116-305">검색 방법을 지정하는 하나 이상의 <see cref="T:System.Reflection.BindingFlags" />로 구성된 비트 마스크입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-305">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span>  
  
 <span data-ttu-id="9d116-306">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-306">-or-</span></span>  
  
 <span data-ttu-id="9d116-307">0(<see langword="null" />을 반환하는 경우)</span><span class="sxs-lookup"><span data-stu-id="9d116-307">Zero, to return <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="9d116-308">버전에 관계없이 <see cref="M:System.Type.GetField(System.String,System.Reflection.BindingFlags)" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-308">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetField(System.String,System.Reflection.BindingFlags)" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-309"><see cref="T:System.Reflection.FieldInfo" /> 개체는 지정된 요구 사항과 일치하는 필드가 있으면 이를 나타내고, 없으면 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-309">A <see cref="T:System.Reflection.FieldInfo" /> object representing the field that matches the specified requirements, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-310">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-310">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-311"><xref:System.Type.GetField%2A?displayProperty=nameWithType> 지정 된 바인딩 제약 조건을 사용 하 여 지정된 된 필드에 대 한 방법으로 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-311">The <xref:System.Type.GetField%2A?displayProperty=nameWithType> method searches for the specified field, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFields">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9d116-312">버전에 관계없이 <see cref="Overload:System.Type.GetFields" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-312">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetFields" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-313">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-313">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-314"><xref:System.Type.GetFields%2A?displayProperty=nameWithType> 메서드는 현재 특정 필드를 가져옵니다 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-314">The <xref:System.Type.GetFields%2A?displayProperty=nameWithType> method gets a specific field of the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFields">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo[] GetFields ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo[] GetFields() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetFields" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFields () As FieldInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ GetFields();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9d116-315">버전에 관계없이 <see cref="M:System.Type.GetFields" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-315">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetFields" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-316">현재 <see cref="T:System.Reflection.FieldInfo" />에 대해 정의된 모든 public 필드를 나타내는 <see cref="T:System.Type" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-316">An array of <see cref="T:System.Reflection.FieldInfo" /> objects representing all the public fields defined for the current <see cref="T:System.Type" />.</span></span>  
  
 <span data-ttu-id="9d116-317">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-317">-or-</span></span>  
  
 <span data-ttu-id="9d116-318">현재 <see cref="T:System.Reflection.FieldInfo" />에 대해 정의된 public 필드가 없는 경우 <see cref="T:System.Type" /> 형식의 빈 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-318">An empty array of type <see cref="T:System.Reflection.FieldInfo" />, if no public fields are defined for the current <see cref="T:System.Type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-319">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-319">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-320"><xref:System.Type.GetFields%2A?displayProperty=nameWithType> 현재 모든 public 필드를 반환 하는 메서드 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-320">The <xref:System.Type.GetFields%2A?displayProperty=nameWithType> method returns all the public fields of the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFields">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo[] GetFields(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFields (bindingAttr As BindingFlags) As FieldInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ GetFields(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="9d116-321">검색 방법을 지정하는 하나 이상의 <see cref="T:System.Reflection.BindingFlags" />로 구성된 비트 마스크입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-321">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span>  
  
 <span data-ttu-id="9d116-322">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-322">-or-</span></span>  
  
 <span data-ttu-id="9d116-323">0(<see langword="null" />을 반환하는 경우)</span><span class="sxs-lookup"><span data-stu-id="9d116-323">Zero, to return <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="9d116-324">버전에 관계없이 <see cref="M:System.Type.GetFields(System.Reflection.BindingFlags)" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-324">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetFields(System.Reflection.BindingFlags)" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-325">현재 <see cref="T:System.Reflection.FieldInfo" />에 대해 정의된 필드 중 지정된 바인딩 제약 조건과 일치하는 모든 필드를 나타내는 <see cref="T:System.Type" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-325">An array of <see cref="T:System.Reflection.FieldInfo" /> objects representing all fields defined for the current <see cref="T:System.Type" /> that match the specified binding constraints.</span></span>  
  
 <span data-ttu-id="9d116-326">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-326">-or-</span></span>  
  
 <span data-ttu-id="9d116-327">현재 <see cref="T:System.Reflection.FieldInfo" />에 대해 정의된 필드가 없거나 정의된 필드 중 해당 바인딩 제약 조건과 일치하는 필드가 없을 경우 <see cref="T:System.Type" /> 형식의 빈 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-327">An empty array of type <see cref="T:System.Reflection.FieldInfo" />, if no fields are defined for the current <see cref="T:System.Type" />, or if none of the defined fields match the binding constraints.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-328">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-328">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-329"><xref:System.Type.GetFields%2A?displayProperty=nameWithType> 메서드는 현재 정의 된 필드 검색 <xref:System.Type>, 지정 된 바인딩 제약 조건입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-329">The <xref:System.Type.GetFields%2A?displayProperty=nameWithType> method searches for the fields defined for the current <xref:System.Type>, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9d116-330">버전에 관계없이 <see cref="M:System.Type.GetHashCode" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-330">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetHashCode" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-331">이 인스턴스의 해시 코드가 들어 있는 <see cref="T:System.Int32" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-331">An <see cref="T:System.Int32" /> containing the hash code for this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-332">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-332">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-333"><xref:System.Type.GetHashCode%2A?displayProperty=nameWithType> 메서드</span><span class="sxs-lookup"><span data-stu-id="9d116-333">The <xref:System.Type.GetHashCode%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIDsOfNames">
      <MemberSignature Language="C#" Value="public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid"><span data-ttu-id="9d116-334">나중에 사용하기 위해 예약되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-334">Reserved for future use.</span></span> <span data-ttu-id="9d116-335">IID_NULL이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-335">Must be IID_NULL.</span></span></param>
        <param name="rgszNames"><span data-ttu-id="9d116-336">매핑할 전달된 이름의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-336">Passed-in array of names to be mapped.</span></span></param>
        <param name="cNames"><span data-ttu-id="9d116-337">매핑할 이름의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-337">Count of the names to be mapped.</span></span></param>
        <param name="lcid"><span data-ttu-id="9d116-338">이름을 해석할 로캘 컨텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-338">The locale context in which to interpret the names.</span></span></param>
        <param name="rgDispId"><span data-ttu-id="9d116-339">이름에 해당하는 ID를 받는 호출자가 할당한 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-339">Caller-allocated array that receives the IDs corresponding to the names.</span></span></param>
        <summary><span data-ttu-id="9d116-340">이름 집합을 해당하는 디스패치 식별자 집합에 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-340">Maps a set of names to a corresponding set of dispatch identifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-341">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-341">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="9d116-342">에 대 한 자세한 내용은 `IDispatch::GetIDsOfNames`, MSDN Library를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-342">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInterface">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9d116-343">버전에 관계없이 <see cref="Overload:System.Type.GetInterface" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-343">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetInterface" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-344">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-344">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-345"><xref:System.Type.GetInterface%2A?displayProperty=nameWithType> 메서드는 현재에 의해 구현 되거나 상속 하는 특정 인터페이스를 가져옵니다 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-345">The <xref:System.Type.GetInterface%2A?displayProperty=nameWithType> method gets a specific interface implemented or inherited by the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInterface">
      <MemberSignature Language="C#" Value="public Type GetInterface (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetInterface(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetInterface(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInterface (name As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetInterface(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9d116-346">가져올 인터페이스의 이름이 들어 있는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-346">The <see cref="T:System.String" /> containing the name of the interface to get.</span></span> <span data-ttu-id="9d116-347">제네릭 인터페이스의 경우 이것은 형식 표시 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-347">For generic interfaces, this is the mangled name.</span></span></param>
        <summary><span data-ttu-id="9d116-348">버전에 관계없이 <see cref="M:System.Type.GetInterface(System.String)" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-348">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetInterface(System.String)" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-349"><see cref="T:System.Type" /> 개체는 현재 <see cref="T:System.Type" />에 의해 선언되거나 상속되는, 지정된 이름의 인터페이스가 있으면 이를 나타내고, 없으면 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-349">A <see cref="T:System.Type" /> object representing the interface with the specified name, implemented or inherited by the current <see cref="T:System.Type" />, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-350">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-350">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-351"><xref:System.Type.GetInterface%2A?displayProperty=nameWithType> 지정 된 이름의 인터페이스 메서드를 검색...</span><span class="sxs-lookup"><span data-stu-id="9d116-351">The <xref:System.Type.GetInterface%2A?displayProperty=nameWithType> method searches for the interface with the specified name..</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInterface">
      <MemberSignature Language="C#" Value="public Type GetInterface (string name, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetInterface(string name, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetInterface(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInterface (name As String, ignoreCase As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetInterface(System::String ^ name, bool ignoreCase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9d116-352">가져올 인터페이스의 이름이 들어 있는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-352">The <see cref="T:System.String" /> containing the name of the interface to get.</span></span> <span data-ttu-id="9d116-353">제네릭 인터페이스의 경우 이것은 형식 표시 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-353">For generic interfaces, this is the mangled name.</span></span></param>
        <param name="ignoreCase">
          <span data-ttu-id="9d116-354"><c>이름</c>에 대해 대/소문자를 구분하지 않고 검색하려면 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-354"><see langword="true" /> to perform a case-insensitive search for <c>name</c>.</span></span>  
  
 <span data-ttu-id="9d116-355">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-355">-or-</span></span>  
  
 <span data-ttu-id="9d116-356"><c>이름</c>에 대해 대/소문자를 구분하고 검색하려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-356"><see langword="false" /> to perform a case-sensitive search for <c>name</c>.</span></span></param>
        <summary><span data-ttu-id="9d116-357">버전에 관계없이 <see cref="M:System.Type.GetInterface(System.String,System.Boolean)" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-357">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetInterface(System.String,System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-358"><see cref="T:System.Type" /> 개체는 현재 <see cref="T:System.Type" />에 의해 선언되거나 상속되는, 지정된 이름의 인터페이스가 있으면 이를 나타내고, 없으면 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-358">A <see cref="T:System.Type" /> object representing the interface with the specified name, implemented or inherited by the current <see cref="T:System.Type" />, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-359">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-359">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-360"><xref:System.Type.GetInterface%2A?displayProperty=nameWithType> 방법으로 대/소문자 구분 검색을 수행할 것인지를 지정 하는 지정 된 인터페이스를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-360">The <xref:System.Type.GetInterface%2A?displayProperty=nameWithType> method searches for the specified interface, specifying whether to do a case-sensitive search.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInterfaceMap">
      <MemberSignature Language="C#" Value="public System.Reflection.InterfaceMapping GetInterfaceMap (Type interfaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Reflection.InterfaceMapping GetInterfaceMap(class System.Type interfaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetInterfaceMap(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInterfaceMap (interfaceType As Type) As InterfaceMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::InterfaceMapping GetInterfaceMap(Type ^ interfaceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.InterfaceMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interfaceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="interfaceType"><span data-ttu-id="9d116-361">매핑을 검색할 인터페이스의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-361">The <see cref="T:System.Type" /> of the interface of which to retrieve a mapping.</span></span></param>
        <summary><span data-ttu-id="9d116-362">버전에 관계없이 <see cref="M:System.Type.GetInterfaceMap(System.Type)" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-362">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetInterfaceMap(System.Type)" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-363"><paramref name="interfaceType" />에 대한 인터페이스 매핑을 나타내는 <see cref="T:System.Reflection.InterfaceMapping" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-363">An <see cref="T:System.Reflection.InterfaceMapping" /> object representing the interface mapping for <paramref name="interfaceType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-364">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-364">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-365"><xref:System.Type.GetInterfaceMap%2A?displayProperty=nameWithType> 메서드는 지정된 된 인터페이스 형식에 대 한 인터페이스 매핑을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-365">The <xref:System.Type.GetInterfaceMap%2A?displayProperty=nameWithType> method returns an interface mapping for the specified interface type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInterfaces">
      <MemberSignature Language="C#" Value="public Type[] GetInterfaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetInterfaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetInterfaces" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInterfaces () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Type ^&gt; ^ GetInterfaces();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9d116-366">버전에 관계없이 <see cref="M:System.Type.GetInterfaces" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-366">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetInterfaces" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-367">현재 <see cref="T:System.Type" />에 의해 구현되거나 상속되는 모든 인터페이스를 나타내는 <see cref="T:System.Type" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-367">An array of <see cref="T:System.Type" /> objects representing all the interfaces implemented or inherited by the current <see cref="T:System.Type" />.</span></span>  
  
 <span data-ttu-id="9d116-368">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-368">-or-</span></span>  
  
 <span data-ttu-id="9d116-369">현재 <see cref="T:System.Type" />에 의해 구현되거나 상속되는 인터페이스가 없는 경우 <see cref="T:System.Type" /> 형식의 빈 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-369">An empty array of type <see cref="T:System.Type" />, if no interfaces are implemented or inherited by the current <see cref="T:System.Type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-370">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-370">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-371"><xref:System.Type.GetInterfaces%2A?displayProperty=nameWithType> 메서드는 현재에 의해 구현 되거나 상속 된 모든 인터페이스를 가져옵니다 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-371">The <xref:System.Type.GetInterfaces%2A?displayProperty=nameWithType> method gets all the interfaces implemented or inherited by the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMember">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9d116-372">버전에 관계없이 <see cref="Overload:System.Type.GetMember" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-372">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetMember" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-373">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-373">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-374"><xref:System.Type.GetMember%2A?displayProperty=nameWithType> 메서드는 현재의 지정된 된 멤버를 가져옵니다 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-374">The <xref:System.Type.GetMember%2A?displayProperty=nameWithType> method gets the specified members of the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] GetMember (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] GetMember(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMember (name As String) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMember(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9d116-375">가져올 public 멤버의 이름이 들어 있는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-375">The <see cref="T:System.String" /> containing the name of the public members to get.</span></span></param>
        <summary><span data-ttu-id="9d116-376">버전에 관계없이 <see cref="M:System.Type.GetMember(System.String)" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-376">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetMember(System.String)" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-377">지정된 이름의 public 멤버가 있으면 이를 나타내는 <see cref="T:System.Reflection.MemberInfo" /> 개체의 배열이고, 그렇지 않으면 빈 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-377">An array of <see cref="T:System.Reflection.MemberInfo" /> objects representing the public members with the specified name, if found; otherwise, an empty array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-378">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-378">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-379"><xref:System.Type.GetMember%2A?displayProperty=nameWithType> 지정 된 이름의 public 멤버에 대 한 메서드를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-379">The <xref:System.Type.GetMember%2A?displayProperty=nameWithType> method searches for the public members with the specified name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] GetMember(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMember (name As String, bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMember(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9d116-380">가져올 멤버의 이름이 들어 있는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-380">The <see cref="T:System.String" /> containing the name of the members to get.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="9d116-381">검색 방법을 지정하는 하나 이상의 <see cref="T:System.Reflection.BindingFlags" />로 구성된 비트 마스크입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-381">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span>  
  
 <span data-ttu-id="9d116-382">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-382">-or-</span></span>  
  
 <span data-ttu-id="9d116-383">빈 배열을 반환하려는 경우 0입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-383">Zero, to return an empty array.</span></span></param>
        <summary><span data-ttu-id="9d116-384">버전에 관계없이 <see cref="M:System.Type.GetMember(System.String,System.Reflection.BindingFlags)" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-384">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetMember(System.String,System.Reflection.BindingFlags)" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-385">지정된 이름의 public 멤버가 있으면 이를 나타내는 <see cref="T:System.Reflection.MemberInfo" /> 개체의 배열이고, 그렇지 않으면 빈 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-385">An array of <see cref="T:System.Reflection.MemberInfo" /> objects representing the public members with the specified name, if found; otherwise, an empty array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-386">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-386">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-387"><xref:System.Type.GetMember%2A?displayProperty=nameWithType> 방법으로 지정 된 바인딩 제약 조건을 사용 하 여 지정 된 멤버를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-387">The <xref:System.Type.GetMember%2A?displayProperty=nameWithType> method searches for the specified members, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.MemberTypes type, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] GetMember(string name, valuetype System.Reflection.MemberTypes type, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMember (name As String, type As MemberTypes, bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMember(System::String ^ name, System::Reflection::MemberTypes type, System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Reflection.MemberTypes" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9d116-388">가져올 멤버의 이름이 들어 있는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-388">The <see cref="T:System.String" /> containing the name of the members to get.</span></span></param>
        <param name="type"><span data-ttu-id="9d116-389">검색할 <see cref="T:System.Reflection.MemberTypes" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-389">The <see cref="T:System.Reflection.MemberTypes" /> value to search for.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="9d116-390">검색 방법을 지정하는 하나 이상의 <see cref="T:System.Reflection.BindingFlags" />로 구성된 비트 마스크입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-390">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span>  
  
 <span data-ttu-id="9d116-391">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-391">-or-</span></span>  
  
 <span data-ttu-id="9d116-392">빈 배열을 반환하려는 경우 0입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-392">Zero, to return an empty array.</span></span></param>
        <summary><span data-ttu-id="9d116-393">버전에 관계없이 <see cref="M:System.Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-393">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-394">지정된 이름의 public 멤버가 있으면 이를 나타내는 <see cref="T:System.Reflection.MemberInfo" /> 개체의 배열이고, 그렇지 않으면 빈 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-394">An array of <see cref="T:System.Reflection.MemberInfo" /> objects representing the public members with the specified name, if found; otherwise, an empty array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-395">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-395">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-396"><xref:System.Type.GetMember%2A?displayProperty=nameWithType> 메서드는 지정 된 멤버 형식의 지정 된 바인딩 제약 조건을 사용 하 여 지정된 된 멤버를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-396">The <xref:System.Type.GetMember%2A?displayProperty=nameWithType> method searches for the specified members of the specified member type, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMembers">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9d116-397">버전에 관계없이 <see cref="Overload:System.Type.GetMembers" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-397">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetMembers" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-398">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-398">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-399"><xref:System.Type.GetMembers%2A?displayProperty=nameWithType> 메서드는 현재 멤버 (속성, 메서드, 필드, 이벤트 및 등)를 가져옵니다 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-399">The <xref:System.Type.GetMembers%2A?displayProperty=nameWithType> method gets the members (properties, methods, fields, events, and so on) of the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] GetMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] GetMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetMembers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMembers () As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMembers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9d116-400">버전에 관계없이 <see cref="M:System.Type.GetMembers" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-400">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetMembers" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-401">현재 <see cref="T:System.Reflection.MemberInfo" />의 모든 public 멤버를 나타내는 <see cref="T:System.Type" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-401">An array of <see cref="T:System.Reflection.MemberInfo" /> objects representing all the public members of the current <see cref="T:System.Type" />.</span></span>  
  
 <span data-ttu-id="9d116-402">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-402">-or-</span></span>  
  
 <span data-ttu-id="9d116-403">현재 <see cref="T:System.Reflection.MemberInfo" />에 public 멤버가 없을 경우 <see cref="T:System.Type" /> 형식의 빈 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-403">An empty array of type <see cref="T:System.Reflection.MemberInfo" />, if the current <see cref="T:System.Type" /> does not have public members.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-404">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-404">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-405"><xref:System.Type.GetMembers%2A?displayProperty=nameWithType> 현재 모든 public 멤버를 반환 하는 메서드 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-405">The <xref:System.Type.GetMembers%2A?displayProperty=nameWithType> method returns all the public members of the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMembers (bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMembers(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="9d116-406">검색 방법을 지정하는 하나 이상의 <see cref="T:System.Reflection.BindingFlags" />로 구성된 비트 마스크입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-406">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span>  
  
 <span data-ttu-id="9d116-407">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-407">-or-</span></span>  
  
 <span data-ttu-id="9d116-408">0(<see langword="null" />을 반환하는 경우)</span><span class="sxs-lookup"><span data-stu-id="9d116-408">Zero, to return <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="9d116-409">버전에 관계없이 <see cref="M:System.Type.GetMembers(System.Reflection.BindingFlags)" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-409">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetMembers(System.Reflection.BindingFlags)" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-410">현재 <see cref="T:System.Reflection.MemberInfo" />에 대해 정의된 필드 중 지정된 바인딩 제약 조건과 일치하는 모든 멤버를 나타내는 <see cref="T:System.Type" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-410">An array of <see cref="T:System.Reflection.MemberInfo" /> objects representing all members defined for the current <see cref="T:System.Type" /> that match the specified binding constraints.</span></span>  
  
 <span data-ttu-id="9d116-411">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-411">-or-</span></span>  
  
 <span data-ttu-id="9d116-412">현재 <see cref="T:System.Reflection.MemberInfo" />에 대해 정의된 멤버가 없거나 정의된 필드 중 해당 바인딩 제약 조건과 일치하는 멤버가 없을 경우 <see cref="T:System.Type" /> 형식의 빈 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-412">An empty array of type <see cref="T:System.Reflection.MemberInfo" />, if no members are defined for the current <see cref="T:System.Type" />, or if none of the defined members match the binding constraints.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-413">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-413">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-414"><xref:System.Type.GetMembers%2A?displayProperty=nameWithType> 현재에 대해 정의 된 멤버에 대 한 메서드를 검색 <xref:System.Type>, 지정 된 바인딩 제약 조건입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-414">The <xref:System.Type.GetMembers%2A?displayProperty=nameWithType> method searches for the members defined for the current <xref:System.Type>, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMethod">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9d116-415">버전에 관계없이 <see cref="Overload:System.Type.GetMethod" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-415">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetMethod" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-416">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-416">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-417"><xref:System.Type.GetMethod%2A?displayProperty=nameWithType> 메서드</span><span class="sxs-lookup"><span data-stu-id="9d116-417">The <xref:System.Type.GetMethod%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethod(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetMethod(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethod (name As String) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetMethod(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9d116-418">가져올 public 메서드의 이름이 들어 있는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-418">The <see cref="T:System.String" /> containing the name of the public method to get.</span></span></param>
        <summary><span data-ttu-id="9d116-419">버전에 관계없이 <see cref="M:System.Type.GetMethod(System.String)" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-419">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetMethod(System.String)" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-420"><see cref="T:System.Reflection.MethodInfo" /> 개체는 지정된 이름의 public 메서드가 있으면 이를 나타내고, 없으면 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-420">A <see cref="T:System.Reflection.MethodInfo" /> object representing the public method with the specified name, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-421">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-421">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-422"><xref:System.Type.GetMethod%2A?displayProperty=nameWithType> 메서드 지정 된 이름의 public 메서드를 검색...</span><span class="sxs-lookup"><span data-stu-id="9d116-422">The <xref:System.Type.GetMethod%2A?displayProperty=nameWithType> method searches for the public method with the specified name..</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethod (name As String, bindingAttr As BindingFlags) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9d116-423">가져올 메서드의 이름이 들어 있는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-423">The <see cref="T:System.String" /> containing the name of the method to get.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="9d116-424">검색 방법을 지정하는 하나 이상의 <see cref="T:System.Reflection.BindingFlags" />로 구성된 비트 마스크입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-424">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span>  
  
 <span data-ttu-id="9d116-425">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-425">-or-</span></span>  
  
 <span data-ttu-id="9d116-426">0(<see langword="null" />을 반환하는 경우)</span><span class="sxs-lookup"><span data-stu-id="9d116-426">Zero, to return <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="9d116-427">버전에 관계없이 <see cref="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags)" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-427">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags)" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-428">지정된 요구 사항과 일치하는 메서드를 나타내는 <see cref="T:System.Reflection.MethodInfo" /> 개체가 있으면 이 개체를 반환하고, 그렇지 않으면 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-428">A <see cref="T:System.Reflection.MethodInfo" /> object representing the method that matches the specified requirements, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-429">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-429">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-430"><xref:System.Type.GetMethod%2A?displayProperty=nameWithType> 메서드를 지정 된 바인딩 제약 조건을 사용 하 여 지정된 된 메서드를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-430">The <xref:System.Type.GetMethod%2A?displayProperty=nameWithType> method searches for the specified method, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string name, Type[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethod(string name, class System.Type[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethod (name As String, types As Type()) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetMethod(System::String ^ name, cli::array &lt;Type ^&gt; ^ types);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="types" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9d116-431">가져올 public 메서드의 이름이 들어 있는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-431">The <see cref="T:System.String" /> containing the name of the public method to get.</span></span></param>
        <param name="types"><span data-ttu-id="9d116-432">가져올 메서드에 대한 매개 변수의 수, 차수, 형식 등을 나타내는 <see cref="T:System.Type" /> 개체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-432">An array of <see cref="T:System.Type" /> objects representing the number, order, and type of the parameters for the method to get.</span></span>  
  
 <span data-ttu-id="9d116-433">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-433">-or-</span></span>  
  
 <span data-ttu-id="9d116-434">매개 변수를 사용하지 않는 메서드를 가져오기 위한 <see cref="T:System.Type" /> 형식의 빈 배열입니다(즉, Type[] types = new Type[0]).</span><span class="sxs-lookup"><span data-stu-id="9d116-434">An empty array of the type <see cref="T:System.Type" /> (that is, Type[] types = new Type[0]) to get a method that takes no parameters.</span></span></param>
        <summary><span data-ttu-id="9d116-435">버전에 관계없이 <see cref="M:System.Type.GetMethod(System.String,System.Type[])" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-435">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetMethod(System.String,System.Type[])" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-436"><see cref="T:System.Reflection.MethodInfo" /> 개체는 지정된 인수 형식과 일치하는 매개 변수를 가진 public 메서드가 있으면 이를 나타내고, 없으면 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-436">A <see cref="T:System.Reflection.MethodInfo" /> object representing the public method whose parameters match the specified argument types, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-437">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-437">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-438"><xref:System.Type.GetMethod%2A?displayProperty=nameWithType> 메서드는 지정 된 인수 형식과 일치 하는 매개 변수를 가진 지정된 된 public 메서드를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-438">The <xref:System.Type.GetMethod%2A?displayProperty=nameWithType> method searches for the specified public method whose parameters match the specified argument types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string name, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethod(string name, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethod (name As String, types As Type(), modifiers As ParameterModifier()) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetMethod(System::String ^ name, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9d116-439">가져올 public 메서드의 이름이 들어 있는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-439">The <see cref="T:System.String" /> containing the name of the public method to get.</span></span></param>
        <param name="types"><span data-ttu-id="9d116-440">가져올 메서드에 대한 매개 변수의 수, 차수, 형식 등을 나타내는 <see cref="T:System.Type" /> 개체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-440">An array of <see cref="T:System.Type" /> objects representing the number, order, and type of the parameters for the method to get.</span></span>  
  
 <span data-ttu-id="9d116-441">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-441">-or-</span></span>  
  
 <span data-ttu-id="9d116-442">매개 변수를 사용하지 않는 메서드를 가져오기 위한 <see cref="T:System.Type" /> 형식의 빈 배열입니다(즉, Type[] types = new Type[0]).</span><span class="sxs-lookup"><span data-stu-id="9d116-442">An empty array of the type <see cref="T:System.Type" /> (that is, Type[] types = new Type[0]) to get a method that takes no parameters.</span></span></param>
        <param name="modifiers"><span data-ttu-id="9d116-443"><c>types</c> 배열에서 해당하는 요소와 연관된 특성을 나타내는 <see cref="T:System.Reflection.ParameterModifier" /> 개체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-443">An array of <see cref="T:System.Reflection.ParameterModifier" /> objects representing the attributes associated with the corresponding element in the <c>types</c> array.</span></span> <span data-ttu-id="9d116-444">기본 바인더에서는 이 매개 변수를 처리하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-444">The default binder does not process this parameter.</span></span></param>
        <summary><span data-ttu-id="9d116-445">버전에 관계없이 <see cref="M:System.Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-445">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-446"><see cref="T:System.Reflection.MethodInfo" /> 개체는 지정된 요구 사항과 일치하는 public 메서드가 있으면 이를 나타내고, 없으면 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-446">A <see cref="T:System.Reflection.MethodInfo" /> object representing the public method that matches the specified requirements, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-447">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-447">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-448"><xref:System.Type.GetMethod%2A?displayProperty=nameWithType> 메서드는 지정 된 인수 형식 및 한정자와 일치 하는 매개 변수를 가진 지정된 된 public 메서드를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-448">The <xref:System.Type.GetMethod%2A?displayProperty=nameWithType> method searches for the specified public method whose parameters match the specified argument types and modifiers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9d116-449">가져올 메서드의 이름이 들어 있는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-449">The <see cref="T:System.String" /> containing the name of the method to get.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="9d116-450">검색 방법을 지정하는 하나 이상의 <see cref="T:System.Reflection.BindingFlags" />로 구성된 비트 마스크입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-450">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span>  
  
 <span data-ttu-id="9d116-451">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-451">-or-</span></span>  
  
 <span data-ttu-id="9d116-452">0(<see langword="null" />을 반환하는 경우)</span><span class="sxs-lookup"><span data-stu-id="9d116-452">Zero, to return <see langword="null" />.</span></span></param>
        <param name="binder"><span data-ttu-id="9d116-453">속성 집합을 정의하고 바인딩을 활성화하는 <see cref="T:System.Reflection.Binder" /> 개체입니다. 이 개체는 또한 리플렉션을 통해 오버로드된 멤버를 선택할 수 있고 인수 형식을 강제 변환할 수 있으며 멤버를 호출할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-453">A <see cref="T:System.Reflection.Binder" /> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.</span></span>  
  
 <span data-ttu-id="9d116-454">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-454">-or-</span></span>  
  
 <span data-ttu-id="9d116-455"><see cref="P:System.Type.DefaultBinder" />를 사용하려는 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-455"><see langword="null" />, to use the <see cref="P:System.Type.DefaultBinder" />.</span></span></param>
        <param name="types"><span data-ttu-id="9d116-456">가져올 메서드에 대한 매개 변수의 수, 차수, 형식 등을 나타내는 <see cref="T:System.Type" /> 개체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-456">An array of <see cref="T:System.Type" /> objects representing the number, order, and type of the parameters for the method to get.</span></span>  
  
 <span data-ttu-id="9d116-457">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-457">-or-</span></span>  
  
 <span data-ttu-id="9d116-458">매개 변수를 사용하지 않는 메서드를 가져오기 위한 <see cref="T:System.Type" /> 형식의 빈 배열입니다(즉, Type[] types = new Type[0]).</span><span class="sxs-lookup"><span data-stu-id="9d116-458">An empty array of the type <see cref="T:System.Type" /> (that is, Type[] types = new Type[0]) to get a method that takes no parameters.</span></span></param>
        <param name="modifiers"><span data-ttu-id="9d116-459"><c>types</c> 배열에서 해당하는 요소와 연관된 특성을 나타내는 <see cref="T:System.Reflection.ParameterModifier" /> 개체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-459">An array of <see cref="T:System.Reflection.ParameterModifier" /> objects representing the attributes associated with the corresponding element in the <c>types</c> array.</span></span> <span data-ttu-id="9d116-460">기본 바인더에서는 이 매개 변수를 처리하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-460">The default binder does not process this parameter.</span></span></param>
        <summary><span data-ttu-id="9d116-461">버전에 관계없이 <see cref="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-461">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-462">지정된 요구 사항과 일치하는 메서드를 나타내는 <see cref="T:System.Reflection.MethodInfo" /> 개체가 있으면 이 개체를 반환하고, 그렇지 않으면 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-462">A <see cref="T:System.Reflection.MethodInfo" /> object representing the method that matches the specified requirements, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-463">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-463">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-464"><xref:System.Type.GetMethod%2A?displayProperty=nameWithType> 메서드 매개 변수를 가진 지정 된 인수 형식 및 한정자를 지정 된 바인딩 제약 조건과 일치 하는 지정된 된 메서드를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-464">The <xref:System.Type.GetMethod%2A?displayProperty=nameWithType> method searches for the specified method whose parameters match the specified argument types and modifiers, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, valuetype System.Reflection.CallingConventions callConvention, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, System::Reflection::CallingConventions callConvention, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="callConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9d116-465">가져올 메서드의 이름이 들어 있는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-465">The <see cref="T:System.String" /> containing the name of the method to get.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="9d116-466">검색 방법을 지정하는 하나 이상의 <see cref="T:System.Reflection.BindingFlags" />로 구성된 비트 마스크입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-466">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span>  
  
 <span data-ttu-id="9d116-467">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-467">-or-</span></span>  
  
 <span data-ttu-id="9d116-468">0(<see langword="null" />을 반환하는 경우)</span><span class="sxs-lookup"><span data-stu-id="9d116-468">Zero, to return <see langword="null" />.</span></span></param>
        <param name="binder"><span data-ttu-id="9d116-469">속성 집합을 정의하고 바인딩을 활성화하는 <see cref="T:System.Reflection.Binder" /> 개체입니다. 이 개체는 또한 리플렉션을 통해 오버로드된 멤버를 선택할 수 있고 인수 형식을 강제 변환할 수 있으며 멤버를 호출할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-469">A <see cref="T:System.Reflection.Binder" /> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.</span></span>  
  
 <span data-ttu-id="9d116-470">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-470">-or-</span></span>  
  
 <span data-ttu-id="9d116-471"><see cref="P:System.Type.DefaultBinder" />를 사용하려는 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-471"><see langword="null" />, to use the <see cref="P:System.Type.DefaultBinder" />.</span></span></param>
        <param name="callConvention"><span data-ttu-id="9d116-472">인수의 순서 및 레이아웃, 반환 값의 전달 방법, 인수에 사용되는 레지스터, 스택 정리 방법 등과 관련하여 사용할 규칙을 지정하는 <see cref="T:System.Reflection.CallingConventions" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-472">The <see cref="T:System.Reflection.CallingConventions" /> object that specifies the set of rules to use regarding the order and layout of arguments, how the return value is passed, what registers are used for arguments, and how the stack is cleaned up.</span></span></param>
        <param name="types"><span data-ttu-id="9d116-473">가져올 메서드에 대한 매개 변수의 수, 차수, 형식 등을 나타내는 <see cref="T:System.Type" /> 개체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-473">An array of <see cref="T:System.Type" /> objects representing the number, order, and type of the parameters for the method to get.</span></span>  
  
 <span data-ttu-id="9d116-474">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-474">-or-</span></span>  
  
 <span data-ttu-id="9d116-475">매개 변수를 사용하지 않는 메서드를 가져오기 위한 <see cref="T:System.Type" /> 형식의 빈 배열입니다(즉, Type[] types = new Type[0]).</span><span class="sxs-lookup"><span data-stu-id="9d116-475">An empty array of the type <see cref="T:System.Type" /> (that is, Type[] types = new Type[0]) to get a method that takes no parameters.</span></span></param>
        <param name="modifiers"><span data-ttu-id="9d116-476"><c>types</c> 배열에서 해당하는 요소와 연관된 특성을 나타내는 <see cref="T:System.Reflection.ParameterModifier" /> 개체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-476">An array of <see cref="T:System.Reflection.ParameterModifier" /> objects representing the attributes associated with the corresponding element in the <c>types</c> array.</span></span> <span data-ttu-id="9d116-477">기본 바인더에서는 이 매개 변수를 처리하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-477">The default binder does not process this parameter.</span></span></param>
        <summary><span data-ttu-id="9d116-478">버전에 관계없이 <see cref="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-478">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-479">지정된 요구 사항과 일치하는 메서드를 나타내는 <see cref="T:System.Reflection.MethodInfo" /> 개체가 있으면 이 개체를 반환하고, 그렇지 않으면 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-479">A <see cref="T:System.Reflection.MethodInfo" /> object representing the method that matches the specified requirements, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-480">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-480">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-481"><xref:System.Type.GetMethod%2A?displayProperty=nameWithType> 방법으로 지정 된 인수 형식 및 지정 된 바인딩 제약 조건 및 호출 규칙 한정자와 일치 하는 매개 변수를 가진 지정된 된 메서드를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-481">The <xref:System.Type.GetMethod%2A?displayProperty=nameWithType> method searches for the specified method whose parameters match the specified argument types and modifiers, using the specified binding constraints and the specified calling convention.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMethods">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9d116-482">버전에 관계없이 <see cref="Overload:System.Type.GetMethods" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-482">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetMethods" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-483">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-483">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-484"><xref:System.Type.GetMethods%2A?displayProperty=nameWithType> 현재 메서드를 가져옵니다 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-484">The <xref:System.Type.GetMethods%2A?displayProperty=nameWithType> method gets the methods of the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMethods">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo[] GetMethods ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo[] GetMethods() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetMethods" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethods () As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetMethods();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9d116-485">버전에 관계없이 <see cref="M:System.Type.GetMethods" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-485">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetMethods" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-486">현재 <see cref="T:System.Reflection.MethodInfo" />에 대해 정의된 모든 public 메서드를 나타내는 <see cref="T:System.Type" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-486">An array of <see cref="T:System.Reflection.MethodInfo" /> objects representing all the public methods defined for the current <see cref="T:System.Type" />.</span></span>  
  
 <span data-ttu-id="9d116-487">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-487">-or-</span></span>  
  
 <span data-ttu-id="9d116-488">현재 <see cref="T:System.Reflection.MethodInfo" />에 대해 정의된 public 메서드가 없는 경우 <see cref="T:System.Type" /> 형식의 빈 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-488">An empty array of type <see cref="T:System.Reflection.MethodInfo" />, if no public methods are defined for the current <see cref="T:System.Type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-489">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-489">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-490"><xref:System.Type.GetMethods%2A?displayProperty=nameWithType> 현재 모든 공용 메서드를 반환 하는 메서드 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-490">The <xref:System.Type.GetMethods%2A?displayProperty=nameWithType> method returns all the public methods of the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethods">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo[] GetMethods(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethods (bindingAttr As BindingFlags) As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetMethods(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="9d116-491">검색 방법을 지정하는 하나 이상의 <see cref="T:System.Reflection.BindingFlags" />로 구성된 비트 마스크입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-491">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span>  
  
 <span data-ttu-id="9d116-492">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-492">-or-</span></span>  
  
 <span data-ttu-id="9d116-493">0(<see langword="null" />을 반환하는 경우)</span><span class="sxs-lookup"><span data-stu-id="9d116-493">Zero, to return <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="9d116-494">버전에 관계없이 <see cref="M:System.Type.GetMethods(System.Reflection.BindingFlags)" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-494">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetMethods(System.Reflection.BindingFlags)" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-495">현재 <see cref="T:System.Reflection.MethodInfo" />에 대해 정의된 필드 중 지정된 바인딩 제약 조건과 일치하는 모든 메서드를 나타내는 <see cref="T:System.Type" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-495">An array of <see cref="T:System.Reflection.MethodInfo" /> objects representing all methods defined for the current <see cref="T:System.Type" /> that match the specified binding constraints.</span></span>  
  
 <span data-ttu-id="9d116-496">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-496">-or-</span></span>  
  
 <span data-ttu-id="9d116-497">현재 <see cref="T:System.Reflection.MethodInfo" />에 대해 정의된 메서드가 없거나 정의된 필드 중 해당 바인딩 제약 조건과 일치하는 메서드가 없을 경우 <see cref="T:System.Type" /> 형식의 빈 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-497">An empty array of type <see cref="T:System.Reflection.MethodInfo" />, if no methods are defined for the current <see cref="T:System.Type" />, or if none of the defined methods match the binding constraints.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-498">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-498">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-499"><xref:System.Type.GetMethods%2A?displayProperty=nameWithType> 메서드는 현재 정의 된 메서드 검색 <xref:System.Type>, 지정 된 바인딩 제약 조건입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-499">The <xref:System.Type.GetMethods%2A?displayProperty=nameWithType> method searches for the methods defined for the current <xref:System.Type>, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNestedType">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9d116-500">버전에 관계없이 <see cref="Overload:System.Type.GetNestedType" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-500">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetNestedType" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-501">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-501">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-502"><xref:System.Type.GetNestedType%2A?displayProperty=nameWithType> 메서드 현재 내에 중첩 된 특정 형식을 가져옵니다 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-502">The <xref:System.Type.GetNestedType%2A?displayProperty=nameWithType> method gets a specific type nested within the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNestedType">
      <MemberSignature Language="C#" Value="public Type GetNestedType (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetNestedType(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetNestedType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNestedType (name As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetNestedType(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9d116-503">가져올 중첩 형식의 이름이 포함된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-503">The string containing the name of the nested type to get.</span></span></param>
        <summary><span data-ttu-id="9d116-504">버전에 관계없이 <see cref="M:System.Type.GetNestedType(System.String)" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-504">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetNestedType(System.String)" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-505">지정된 이름의 public 중첩 형식이 있으면 이를 나타내는 <see cref="T:System.Type" /> 개체이고, 그렇지 않으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-505">A <see cref="T:System.Type" /> object representing the public nested type with the specified name, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-506">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-506">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-507"><xref:System.Type.GetNestedType%2A?displayProperty=nameWithType> 메서드는 지정 된 이름의 public 중첩된 형식 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-507">The <xref:System.Type.GetNestedType%2A?displayProperty=nameWithType> method searches for the public nested type with the specified name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNestedType">
      <MemberSignature Language="C#" Value="public Type GetNestedType (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetNestedType(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetNestedType(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNestedType (name As String, bindingAttr As BindingFlags) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetNestedType(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9d116-508">가져올 중첩 형식의 이름이 포함된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-508">The string containing the name of the nested type to get.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="9d116-509">검색 방법을 지정하는 하나 이상의 <see cref="T:System.Reflection.BindingFlags" />로 구성된 비트 마스크입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-509">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span>  
  
 <span data-ttu-id="9d116-510">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-510">-or-</span></span>  
  
 <span data-ttu-id="9d116-511">0(<see langword="null" />을 반환하는 경우)</span><span class="sxs-lookup"><span data-stu-id="9d116-511">Zero, to return <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="9d116-512">버전에 관계없이 <see cref="M:System.Type.GetNestedType(System.String,System.Reflection.BindingFlags)" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-512">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetNestedType(System.String,System.Reflection.BindingFlags)" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-513">지정된 요구 사항과 일치하는 중첩 형식을 나타내는 <see cref="T:System.Type" /> 개체가 있으면 이 개체를 반환하고, 그렇지 않으면 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-513">A <see cref="T:System.Type" /> object representing the nested type that matches the specified requirements, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-514">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-514">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-515"><xref:System.Type.GetNestedType%2A?displayProperty=nameWithType> 메서드를 지정 된 바인딩 제약 조건을 사용 하 여 지정된 된 중첩된 형식을 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-515">The <xref:System.Type.GetNestedType%2A?displayProperty=nameWithType> method searches for the specified nested type, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNestedTypes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9d116-516">버전에 관계없이 <see cref="Overload:System.Type.GetNestedTypes" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-516">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetNestedTypes" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-517">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-517">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-518"><xref:System.Type.GetNestedTypes%2A?displayProperty=nameWithType> 메서드는 현재 중첩 된 형식을 가져옵니다 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-518">The <xref:System.Type.GetNestedTypes%2A?displayProperty=nameWithType> method gets the types nested within the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNestedTypes">
      <MemberSignature Language="C#" Value="public Type[] GetNestedTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetNestedTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetNestedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNestedTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Type ^&gt; ^ GetNestedTypes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9d116-519">버전에 관계없이 <see cref="M:System.Type.GetNestedTypes" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-519">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetNestedTypes" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-520">현재 <see cref="T:System.Type" /> 내의 모든 중첩 형식을 나타내는 <see cref="T:System.Type" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-520">An array of <see cref="T:System.Type" /> objects representing all the types nested within the current <see cref="T:System.Type" />.</span></span>  
  
 <span data-ttu-id="9d116-521">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-521">-or-</span></span>  
  
 <span data-ttu-id="9d116-522">현재 <see cref="T:System.Type" /> 내에 중첩 형식이 없는 경우 <see cref="T:System.Type" /> 형식의 빈 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-522">An empty array of type <see cref="T:System.Type" />, if no types are nested within the current <see cref="T:System.Type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-523">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-523">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-524"><xref:System.Type.GetNestedTypes%2A?displayProperty=nameWithType> 메서드 현재 내에 중첩 된 모든 형식을 반환 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-524">The <xref:System.Type.GetNestedTypes%2A?displayProperty=nameWithType> method returns all the types nested within the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNestedTypes">
      <MemberSignature Language="C#" Value="public Type[] GetNestedTypes (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetNestedTypes(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetNestedTypes(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNestedTypes (bindingAttr As BindingFlags) As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Type ^&gt; ^ GetNestedTypes(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="9d116-525">검색 방법을 지정하는 하나 이상의 <see cref="T:System.Reflection.BindingFlags" />로 구성된 비트 마스크입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-525">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span>  
  
 <span data-ttu-id="9d116-526">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-526">-or-</span></span>  
  
 <span data-ttu-id="9d116-527">0(<see langword="null" />을 반환하는 경우)</span><span class="sxs-lookup"><span data-stu-id="9d116-527">Zero, to return <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="9d116-528">버전에 관계없이 <see cref="M:System.Type.GetNestedTypes(System.Reflection.BindingFlags)" /> 메서드에 액세스할 수 있는 COM 개체를 제공하고, 지정된 바인딩 제약 조건을 사용하여 현재 <see cref="T:System.Type" /> 내에 중첩된 형식을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-528">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetNestedTypes(System.Reflection.BindingFlags)" /> method, and searches for the types nested within the current <see cref="T:System.Type" />, using the specified binding constraints.</span></span></summary>
        <returns><span data-ttu-id="9d116-529">현재 <see cref="T:System.Type" /> 내의 중첩 형식 중 지정된 바인딩 제약 조건과 일치하는 모든 중첩 형식을 나타내는 <see cref="T:System.Type" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-529">An array of <see cref="T:System.Type" /> objects representing all the types nested within the current <see cref="T:System.Type" /> that match the specified binding constraints.</span></span>  
  
 <span data-ttu-id="9d116-530">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-530">-or-</span></span>  
  
 <span data-ttu-id="9d116-531">현재 <see cref="T:System.Type" /> 내에 중첩 형식이 없거나 중첩 형식 중 해당 바인딩 제약 조건과 일치하는 중첩 형식이 없을 경우 <see cref="T:System.Type" /> 형식의 빈 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-531">An empty array of type <see cref="T:System.Type" />, if no types are nested within the current <see cref="T:System.Type" />, or if none of the nested types match the binding constraints.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-532">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-532">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperties">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9d116-533">버전에 관계없이 <see cref="Overload:System.Type.GetProperties" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-533">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetProperties" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-534">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-534">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-535"><xref:System.Type.GetProperties%2A?displayProperty=nameWithType> 메서드는 현재 속성을 가져옵니다 <xref:System.Type>...</span><span class="sxs-lookup"><span data-stu-id="9d116-535">The <xref:System.Type.GetProperties%2A?displayProperty=nameWithType> method gets the properties of the current <xref:System.Type>..</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo[] GetProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo[] GetProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetProperties" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties () As PropertyInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ GetProperties();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9d116-536">버전에 관계없이 <see cref="M:System.Type.GetProperties" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-536">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetProperties" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-537">현재 <see cref="T:System.Reflection.PropertyInfo" />의 모든 public 속성을 나타내는 <see cref="T:System.Type" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-537">An array of <see cref="T:System.Reflection.PropertyInfo" /> objects representing all public properties of the current <see cref="T:System.Type" />.</span></span>  
  
 <span data-ttu-id="9d116-538">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-538">-or-</span></span>  
  
 <span data-ttu-id="9d116-539">현재 <see cref="T:System.Reflection.PropertyInfo" />에 public 속성이 없을 경우 <see cref="T:System.Type" /> 형식의 빈 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-539">An empty array of type <see cref="T:System.Reflection.PropertyInfo" />, if the current <see cref="T:System.Type" /> does not have public properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-540">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-540">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-541"><xref:System.Type.GetProperties%2A?displayProperty=nameWithType> 현재 모든 공용 속성을 반환 하는 메서드 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-541">The <xref:System.Type.GetProperties%2A?displayProperty=nameWithType> method returns all the public properties of the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo[] GetProperties (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo[] GetProperties(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetProperties(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (bindingAttr As BindingFlags) As PropertyInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ GetProperties(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="9d116-542">검색 방법을 지정하는 하나 이상의 <see cref="T:System.Reflection.BindingFlags" />로 구성된 비트 마스크입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-542">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span>  
  
 <span data-ttu-id="9d116-543">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-543">-or-</span></span>  
  
 <span data-ttu-id="9d116-544">0(<see langword="null" />을 반환하는 경우)</span><span class="sxs-lookup"><span data-stu-id="9d116-544">Zero, to return <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="9d116-545">버전에 관계없이 <see cref="M:System.Type.GetProperties(System.Reflection.BindingFlags)" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-545">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetProperties(System.Reflection.BindingFlags)" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-546">현재 <see cref="T:System.Reflection.PropertyInfo" />의 속성 중 지정된 바인딩 제약 조건과 일치하는 모든 속성을 나타내는 <see cref="T:System.Type" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-546">An array of <see cref="T:System.Reflection.PropertyInfo" /> objects representing all properties of the current <see cref="T:System.Type" /> that match the specified binding constraints.</span></span>  
  
 <span data-ttu-id="9d116-547">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-547">-or-</span></span>  
  
 <span data-ttu-id="9d116-548">현재 <see cref="T:System.Reflection.PropertyInfo" />에 속성이 없거나 해당 바인딩 제약 조건과 일치하는 속성이 없을 경우 <see cref="T:System.Type" /> 형식의 빈 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-548">An empty array of type <see cref="T:System.Reflection.PropertyInfo" />, if the current <see cref="T:System.Type" /> does not have properties, or if none of the properties match the binding constraints.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-549">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-549">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-550"><xref:System.Type.GetProperties%2A?displayProperty=nameWithType> 메서드는 현재 속성 검색 <xref:System.Type>, 지정 된 바인딩 제약 조건입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-550">The <xref:System.Type.GetProperties%2A?displayProperty=nameWithType> method searches for the properties of the current <xref:System.Type>, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperty">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9d116-551">버전에 관계없이 <see cref="Overload:System.Type.GetProperty" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-551">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetProperty" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-552">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-552">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-553"><xref:System.Type.GetProperty%2A?displayProperty=nameWithType> 메서드는 현재 특정 속성을 가져옵니다 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-553">The <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> method gets a specific property of the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9d116-554">가져올 public 속성의 이름이 들어 있는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-554">The <see cref="T:System.String" /> containing the name of the public property to get.</span></span></param>
        <summary><span data-ttu-id="9d116-555">버전에 관계없이 <see cref="M:System.Type.GetProperty(System.String)" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-555">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetProperty(System.String)" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-556"><see cref="T:System.Reflection.PropertyInfo" /> 개체는 지정된 이름의 public 속성이 있으면 이를 나타내고, 없으면 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-556">A <see cref="T:System.Reflection.PropertyInfo" /> object representing the public property with the specified name, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-557">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-557">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-558"><xref:System.Type.GetProperty%2A?displayProperty=nameWithType> 지정 된 이름의 공용 속성에 대 한 메서드를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-558">The <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> method searches for the public property with the specified name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String, bindingAttr As BindingFlags) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9d116-559">가져올 속성의 이름이 들어 있는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-559">The <see cref="T:System.String" /> containing the name of the property to get.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="9d116-560">검색 방법을 지정하는 하나 이상의 <see cref="T:System.Reflection.BindingFlags" />로 구성된 비트 마스크입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-560">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span>  
  
 <span data-ttu-id="9d116-561">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-561">-or-</span></span>  
  
 <span data-ttu-id="9d116-562">0(<see langword="null" />을 반환하는 경우)</span><span class="sxs-lookup"><span data-stu-id="9d116-562">Zero, to return <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="9d116-563">버전에 관계없이 <see cref="M:System.Type.GetProperty(System.String,System.Reflection.BindingFlags)" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-563">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetProperty(System.String,System.Reflection.BindingFlags)" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-564">지정된 요구 사항과 일치하는 속성을 나타내는 <see cref="T:System.Reflection.PropertyInfo" /> 개체가 있으면 이 개체를 반환하고, 그렇지 않으면 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-564">A <see cref="T:System.Reflection.PropertyInfo" /> object representing the property that matches the specified requirements, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-565">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-565">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-566"><xref:System.Type.GetProperty%2A?displayProperty=nameWithType> 메서드를 지정 된 바인딩 제약 조건을 사용 하 여 지정된 된 속성을 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-566">The <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> method searches for the specified property, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name, Type returnType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name, class System.Type returnType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String, returnType As Type) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name, Type ^ returnType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="returnType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9d116-567">가져올 public 속성의 이름이 들어 있는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-567">The <see cref="T:System.String" /> containing the name of the public property to get.</span></span></param>
        <param name="returnType"><span data-ttu-id="9d116-568">속성의 반환 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-568">The return type of the property.</span></span></param>
        <summary><span data-ttu-id="9d116-569">버전에 관계없이 <see cref="M:System.Type.GetProperty(System.String,System.Type)" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-569">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetProperty(System.String,System.Type)" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-570"><see cref="T:System.Reflection.PropertyInfo" /> 개체는 지정된 이름의 public 속성이 있으면 이를 나타내고, 없으면 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-570">A <see cref="T:System.Reflection.PropertyInfo" /> object representing the public property with the specified name, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-571">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-571">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-572"><xref:System.Type.GetProperty%2A?displayProperty=nameWithType> 된 지정 된 이름과 반환 형식의 public 속성에 대 한 방법으로 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-572">The <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> method searches for the public property with the specified name and return type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name, Type[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name, class System.Type[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String, types As Type()) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name, cli::array &lt;Type ^&gt; ^ types);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="types" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9d116-573">가져올 public 속성의 이름이 들어 있는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-573">The <see cref="T:System.String" /> containing the name of the public property to get.</span></span></param>
        <param name="types"><span data-ttu-id="9d116-574">가져올 인덱싱된 속성에 대한 매개 변수의 수, 차수, 형식 등을 나타내는 <see cref="T:System.Type" /> 개체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-574">An array of <see cref="T:System.Type" /> objects representing the number, order, and type of the parameters for the indexed property to get.</span></span>  
  
 <span data-ttu-id="9d116-575">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-575">-or-</span></span>  
  
 <span data-ttu-id="9d116-576">인덱싱되지 않은 속성을 가져오기 위한 <see cref="T:System.Type" /> 형식의 빈 배열입니다(즉, Type[] types = new Type[0]).</span><span class="sxs-lookup"><span data-stu-id="9d116-576">An empty array of the type <see cref="T:System.Type" /> (that is, Type[] types = new Type[0]) to get a property that is not indexed.</span></span></param>
        <summary><span data-ttu-id="9d116-577">버전에 관계없이 <see cref="M:System.Type.GetProperty(System.String,System.Type[])" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-577">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetProperty(System.String,System.Type[])" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-578"><see cref="T:System.Reflection.PropertyInfo" /> 개체는 지정된 인수 형식과 일치하는 매개 변수를 가진 public 속성이 있으면 이를 나타내고, 없으면 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-578">A <see cref="T:System.Reflection.PropertyInfo" /> object representing the public property whose parameters match the specified argument types, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-579">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-579">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-580"><xref:System.Type.GetProperty%2A?displayProperty=nameWithType> 메서드는 지정 된 인수 형식과 일치 하는 매개 변수를 가진 지정된 된 public 속성 검색...</span><span class="sxs-lookup"><span data-stu-id="9d116-580">The <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> method searches for the specified public property whose parameters match the specified argument types..</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name, Type returnType, Type[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name, class System.Type returnType, class System.Type[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String, returnType As Type, types As Type()) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name, Type ^ returnType, cli::array &lt;Type ^&gt; ^ types);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="types" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9d116-581">가져올 public 속성의 이름이 들어 있는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-581">The <see cref="T:System.String" /> containing the name of the public property to get.</span></span></param>
        <param name="returnType"><span data-ttu-id="9d116-582">속성의 반환 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-582">The return type of the property.</span></span></param>
        <param name="types"><span data-ttu-id="9d116-583">가져올 인덱싱된 속성에 대한 매개 변수의 수, 차수, 형식 등을 나타내는 <see cref="T:System.Type" /> 개체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-583">An array of <see cref="T:System.Type" /> objects representing the number, order, and type of the parameters for the indexed property to get.</span></span>  
  
 <span data-ttu-id="9d116-584">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-584">-or-</span></span>  
  
 <span data-ttu-id="9d116-585">인덱싱되지 않은 속성을 가져오기 위한 <see cref="T:System.Type" /> 형식의 빈 배열입니다(즉, Type[] types = new Type[0]).</span><span class="sxs-lookup"><span data-stu-id="9d116-585">An empty array of the type <see cref="T:System.Type" /> (that is, Type[] types = new Type[0]) to get a property that is not indexed.</span></span></param>
        <summary><span data-ttu-id="9d116-586">버전에 관계없이 <see cref="M:System.Type.GetProperty(System.String,System.Type,System.Type[])" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-586">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetProperty(System.String,System.Type,System.Type[])" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-587"><see cref="T:System.Reflection.PropertyInfo" /> 개체는 지정된 인수 형식과 일치하는 매개 변수를 가진 public 속성이 있으면 이를 나타내고, 없으면 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-587">A <see cref="T:System.Reflection.PropertyInfo" /> object representing the public property whose parameters match the specified argument types, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-588">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-588">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-589"><xref:System.Type.GetProperty%2A?displayProperty=nameWithType> 지정 된 인수 형식과 일치 하는 매개 변수를 가진 지정된 된 public 속성에 대 한 메서드를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-589">The <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> method searches for the specified public property whose parameters match the specified argument types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String, returnType As Type, types As Type(), modifiers As ParameterModifier()) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name, Type ^ returnType, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9d116-590">가져올 public 속성의 이름이 들어 있는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-590">The <see cref="T:System.String" /> containing the name of the public property to get.</span></span></param>
        <param name="returnType"><span data-ttu-id="9d116-591">속성의 반환 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-591">The return type of the property.</span></span></param>
        <param name="types"><span data-ttu-id="9d116-592">가져올 인덱싱된 속성에 대한 매개 변수의 수, 차수, 형식 등을 나타내는 <see cref="T:System.Type" /> 개체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-592">An array of <see cref="T:System.Type" /> objects representing the number, order, and type of the parameters for the indexed property to get.</span></span>  
  
 <span data-ttu-id="9d116-593">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-593">-or-</span></span>  
  
 <span data-ttu-id="9d116-594">인덱싱되지 않은 속성을 가져오기 위한 <see cref="T:System.Type" /> 형식의 빈 배열입니다(즉, Type[] types = new Type[0]).</span><span class="sxs-lookup"><span data-stu-id="9d116-594">An empty array of the type <see cref="T:System.Type" /> (that is, Type[] types = new Type[0]) to get a property that is not indexed.</span></span></param>
        <param name="modifiers"><span data-ttu-id="9d116-595"><c>types</c> 배열에서 해당하는 요소와 연관된 특성을 나타내는 <see cref="T:System.Reflection.ParameterModifier" /> 개체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-595">An array of <see cref="T:System.Reflection.ParameterModifier" /> objects representing the attributes associated with the corresponding element in the <c>types</c> array.</span></span> <span data-ttu-id="9d116-596">기본 바인더에서는 이 매개 변수를 처리하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-596">The default binder does not process this parameter.</span></span></param>
        <summary><span data-ttu-id="9d116-597">버전에 관계없이 <see cref="M:System.Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-597">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-598"><see cref="T:System.Reflection.PropertyInfo" /> 개체는 지정된 요구 사항과 일치하는 public 속성이 있으면 이를 나타내고, 없으면 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-598">A <see cref="T:System.Reflection.PropertyInfo" /> object representing the public property that matches the specified requirements, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-599">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-599">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-600"><xref:System.Type.GetProperty%2A?displayProperty=nameWithType> 지정 된 인수 형식 및 한정자와 일치 하는 매개 변수를 가진 지정된 된 public 속성에 대 한 메서드를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-600">The <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> method searches for the specified public property whose parameters match the specified argument types and modifiers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, Type ^ returnType, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9d116-601">가져올 속성의 이름이 들어 있는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-601">The <see cref="T:System.String" /> containing the name of the property to get.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="9d116-602">검색 방법을 지정하는 하나 이상의 <see cref="T:System.Reflection.BindingFlags" />로 구성된 비트 마스크입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-602">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span>  
  
 <span data-ttu-id="9d116-603">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-603">-or-</span></span>  
  
 <span data-ttu-id="9d116-604">0(<see langword="null" />을 반환하는 경우)</span><span class="sxs-lookup"><span data-stu-id="9d116-604">Zero, to return <see langword="null" />.</span></span></param>
        <param name="binder"><span data-ttu-id="9d116-605">속성 집합을 정의하고 바인딩을 활성화하는 <see cref="T:System.Reflection.Binder" /> 개체입니다. 이 개체는 또한 리플렉션을 통해 오버로드된 멤버를 선택할 수 있고 인수 형식을 강제 변환할 수 있으며 멤버를 호출할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-605">A <see cref="T:System.Reflection.Binder" /> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.</span></span>  
  
 <span data-ttu-id="9d116-606">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-606">-or-</span></span>  
  
 <span data-ttu-id="9d116-607"><see cref="P:System.Type.DefaultBinder" />를 사용하려는 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-607"><see langword="null" />, to use the <see cref="P:System.Type.DefaultBinder" />.</span></span></param>
        <param name="returnType"><span data-ttu-id="9d116-608">속성의 반환 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-608">The return type of the property.</span></span></param>
        <param name="types"><span data-ttu-id="9d116-609">가져올 인덱싱된 속성에 대한 매개 변수의 수, 차수, 형식 등을 나타내는 <see cref="T:System.Type" /> 개체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-609">An array of <see cref="T:System.Type" /> objects representing the number, order, and type of the parameters for the indexed property to get.</span></span>  
  
 <span data-ttu-id="9d116-610">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-610">-or-</span></span>  
  
 <span data-ttu-id="9d116-611">인덱싱되지 않은 속성을 가져오기 위한 <see cref="T:System.Type" /> 형식의 빈 배열입니다(즉, Type[] types = new Type[0]).</span><span class="sxs-lookup"><span data-stu-id="9d116-611">An empty array of the type <see cref="T:System.Type" /> (that is, Type[] types = new Type[0]) to get a property that is not indexed.</span></span></param>
        <param name="modifiers"><span data-ttu-id="9d116-612"><c>types</c> 배열에서 해당하는 요소와 연관된 특성을 나타내는 <see cref="T:System.Reflection.ParameterModifier" /> 개체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-612">An array of <see cref="T:System.Reflection.ParameterModifier" /> objects representing the attributes associated with the corresponding element in the <c>types</c> array.</span></span> <span data-ttu-id="9d116-613">기본 바인더에서는 이 매개 변수를 처리하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-613">The default binder does not process this parameter.</span></span></param>
        <summary><span data-ttu-id="9d116-614">버전에 관계없이 <see cref="M:System.Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-614">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-615">지정된 요구 사항과 일치하는 속성을 나타내는 <see cref="T:System.Reflection.PropertyInfo" /> 개체가 있으면 이 개체를 반환하고, 그렇지 않으면 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-615">A <see cref="T:System.Reflection.PropertyInfo" /> object representing the property that matches the specified requirements, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-616">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-616">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-617"><xref:System.Type.GetProperty%2A?displayProperty=nameWithType> 지정 된 인수 형식 및 지정 된 바인딩 제약 조건 한정자와 일치 하는 매개 변수를 가진 지정된 된 속성에 대 한 메서드를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-617">The <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> method searches for the specified property whose parameters match the specified argument types and modifiers, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9d116-618">버전에 관계없이 <see cref="M:System.Type.GetType" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-618">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetType" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-619">현재 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-619">The current <see cref="T:System.Type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-620">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-620">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-621"><xref:System.Type.GetType%2A?displayProperty=nameWithType> 메서드는 현재 가져옵니다 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-621">The <xref:System.Type.GetType%2A?displayProperty=nameWithType> method gets the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfo">
      <MemberSignature Language="C#" Value="public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo"><span data-ttu-id="9d116-622">반환할 형식 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-622">The type information to return.</span></span></param>
        <param name="lcid"><span data-ttu-id="9d116-623">형식 정보의 로캘 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-623">The locale identifier for the type information.</span></span></param>
        <param name="ppTInfo"><span data-ttu-id="9d116-624">요청된 형식 정보 개체에 대한 포인터를 받습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-624">Receives a pointer to the requested type information object.</span></span></param>
        <summary><span data-ttu-id="9d116-625">인터페이스의 형식 정보를 가져오는 데 사용할 수 있는 개체의 형식 정보를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-625">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-626">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-626">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="9d116-627">에 대 한 자세한 내용은 `IDispatch::GetTypeInfo`, MSDN Library를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-627">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfoCount">
      <MemberSignature Language="C#" Value="public void GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTypeInfoCount (ByRef pcTInfo As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo"><span data-ttu-id="9d116-628">개체에서 제공하는 형식 정보 인터페이스의 수를 받는 위치를 가리킵니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-628">Points to a location that receives the number of type information interfaces provided by the object.</span></span></param>
        <summary><span data-ttu-id="9d116-629">개체에서 제공하는 형식 정보 인터페이스의 수를 검색합니다(0 또는 1).</span><span class="sxs-lookup"><span data-stu-id="9d116-629">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-630">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-630">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="9d116-631">에 대 한 자세한 내용은 `IDispatch::GetTypeInfoCount`, MSDN Library를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-631">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GUID">
      <MemberSignature Language="C#" Value="public Guid GUID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid GUID" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.GUID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GUID As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid GUID { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-632">버전에 관계없이 <see cref="P:System.Type.GUID" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-632">Provides COM objects with version-independent access to the <see cref="P:System.Type.GUID" /> property.</span></span></summary>
        <value><span data-ttu-id="9d116-633"><see cref="T:System.Type" />과 관련된 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-633">The GUID associated with the <see cref="T:System.Type" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-634">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-634">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-635"><xref:System.Type.GUID%2A?displayProperty=nameWithType> 속성와 연결 된 GUID를 가져옵니다는 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-635">The <xref:System.Type.GUID%2A?displayProperty=nameWithType> property gets the GUID associated with the <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasElementType">
      <MemberSignature Language="C#" Value="public bool HasElementType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasElementType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.HasElementType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasElementType As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasElementType { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-636">버전에 관계없이 <see cref="P:System.Type.HasElementType" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-636">Provides COM objects with version-independent access to the <see cref="P:System.Type.HasElementType" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="9d116-637"><see langword="true" />이 배열 또는 포인터이거나 참조로 전달되면 <see cref="T:System.Type" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-637"><see langword="true" /> if the <see cref="T:System.Type" /> is an array, a pointer, or is passed by reference; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-638">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-638">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-639"><xref:System.Type.HasElementType%2A?displayProperty=nameWithType> 속성</span><span class="sxs-lookup"><span data-stu-id="9d116-639">The <xref:System.Type.HasElementType%2A?displayProperty=nameWithType> property</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember"><span data-ttu-id="9d116-640">멤버를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-640">Identifies the member.</span></span></param>
        <param name="riid"><span data-ttu-id="9d116-641">나중에 사용하기 위해 예약되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-641">Reserved for future use.</span></span> <span data-ttu-id="9d116-642">IID_NULL이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-642">Must be IID_NULL.</span></span></param>
        <param name="lcid"><span data-ttu-id="9d116-643">인수를 해석할 로캘 컨텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-643">The locale context in which to interpret arguments.</span></span></param>
        <param name="wFlags"><span data-ttu-id="9d116-644">호출의 컨텍스트를 설명하는 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-644">Flags describing the context of the call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="9d116-645">인수의 배열, 명명된 인수에 대한 인수 DISPID의 배열 및 배열에 있는 요소의 개수가 포함된 구조체에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-645">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="9d116-646">결과를 저장할 위치에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-646">Pointer to the location where the result is to be stored.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="9d116-647">예외 정보가 포함된 구조체에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-647">Pointer to a structure that contains exception information.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="9d116-648">오류가 있는 첫 번째 인수의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-648">The index of the first argument that has an error.</span></span></param>
        <summary><span data-ttu-id="9d116-649">개체에서 노출하는 메서드와 속성에 대한 액세스를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-649">Provides access to properties and methods exposed by an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-650">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-650">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="9d116-651">에 대 한 자세한 내용은 `IDispatch::Invoke`, MSDN Library를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-651">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InvokeMember">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9d116-652">버전에 관계없이 <see cref="Overload:System.Type.InvokeMember" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-652">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.InvokeMember" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-653">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-653">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-654"><xref:System.Type.InvokeMember%2A?displayProperty=nameWithType> 메서드는 현재 특정 멤버를 호출 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-654">The <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType> method invokes a specific member of the current <xref:System.Type>.</span></span>  
  
 <span data-ttu-id="9d116-655">이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-655">.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvokeMember">
      <MemberSignature Language="C#" Value="public object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InvokeMember(string name, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object target, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ InvokeMember(System::String ^ name, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9d116-656">호출할 생성자, 메서드, 속성 또는 필드 멤버의 이름이 들어 있는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-656">The <see cref="T:System.String" /> containing the name of the constructor, method, property, or field member to invoke.</span></span>  
  
 <span data-ttu-id="9d116-657">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-657">-or-</span></span>  
  
 <span data-ttu-id="9d116-658">기본 멤버를 호출하는 빈 문자열("")입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-658">An empty string ("") to invoke the default member.</span></span>  
  
 <span data-ttu-id="9d116-659">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-659">-or-</span></span>  
  
 <span data-ttu-id="9d116-660">IDispatch 멤버의 경우 DispID를 나타내는 문자열(예: "[DispID=3]")입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-660">For IDispatch members, a string representing the DispID, for example "[DispID=3]".</span></span></param>
        <param name="invokeAttr"><span data-ttu-id="9d116-661">검색 방법을 지정하는 하나 이상의 <see cref="T:System.Reflection.BindingFlags" />로 구성된 비트 마스크입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-661">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span> <span data-ttu-id="9d116-662">액세스 권한은 <see langword="BindingFlags" />, <see langword="Public" />, <see langword="NonPublic" />, <see langword="Private" />, <see langword="InvokeMethod" /> 등과 같은 <see langword="GetField" /> 중 하나가 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-662">The access can be one of the <see langword="BindingFlags" /> such as <see langword="Public" />, <see langword="NonPublic" />, <see langword="Private" />, <see langword="InvokeMethod" />, <see langword="GetField" />, and so on.</span></span> <span data-ttu-id="9d116-663">조회 형식을 지정할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-663">The type of lookup need not be specified.</span></span> <span data-ttu-id="9d116-664">조회 형식을 생략하면 <see langword="BindingFlags.Public" /> | <see langword="BindingFlags.Instance" />가 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-664">If the type of lookup is omitted, <see langword="BindingFlags.Public" /> | <see langword="BindingFlags.Instance" /> will apply.</span></span></param>
        <param name="binder"><span data-ttu-id="9d116-665">속성 집합을 정의하고 바인딩을 활성화하는 <see cref="T:System.Reflection.Binder" /> 개체입니다. 이 개체는 또한 리플렉션을 통해 오버로드된 멤버를 선택할 수 있고 인수 형식을 강제 변환할 수 있으며 멤버를 호출할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-665">A <see cref="T:System.Reflection.Binder" /> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.</span></span>  
  
 <span data-ttu-id="9d116-666">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-666">-or-</span></span>  
  
 <span data-ttu-id="9d116-667"><see cref="P:System.Type.DefaultBinder" />를 사용하려는 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-667"><see langword="null" />, to use the <see cref="P:System.Type.DefaultBinder" />.</span></span></param>
        <param name="target"><span data-ttu-id="9d116-668">지정된 멤버를 호출할 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-668">The <see cref="T:System.Object" /> on which to invoke the specified member.</span></span></param>
        <param name="args"><span data-ttu-id="9d116-669">호출할 멤버에 전달하는 인수를 포함하는 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-669">An array containing the arguments to pass to the member to invoke.</span></span></param>
        <summary><span data-ttu-id="9d116-670">버전에 관계없이 <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-670">Provides COM objects with version-independent access to the <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-671">호출된 멤버의 반환 값을 나타내는 <see cref="T:System.Object" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-671">An <see cref="T:System.Object" /> representing the return value of the invoked member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-672">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-672">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-673"><xref:System.Type.InvokeMember%2A?displayProperty=nameWithType> 메서드는 지정 된 바인딩 제약 조건 및 지정 된 인수 목록과 일치 하는 사용 하 여, 지정된 된 멤버를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-673">The <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType> method invokes the specified member, using the specified binding constraints and matching the specified argument list.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeMember">
      <MemberSignature Language="C#" Value="public object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InvokeMember(string name, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object target, object[] args, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ InvokeMember(System::String ^ name, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9d116-674">호출할 생성자, 메서드, 속성 또는 필드 멤버의 이름이 들어 있는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-674">The <see cref="T:System.String" /> containing the name of the constructor, method, property, or field member to invoke.</span></span>  
  
 <span data-ttu-id="9d116-675">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-675">-or-</span></span>  
  
 <span data-ttu-id="9d116-676">기본 멤버를 호출하는 빈 문자열("")입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-676">An empty string ("") to invoke the default member.</span></span>  
  
 <span data-ttu-id="9d116-677">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-677">-or-</span></span>  
  
 <span data-ttu-id="9d116-678">IDispatch 멤버의 경우 DispID를 나타내는 문자열(예: "[DispID=3]")입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-678">For IDispatch members, a string representing the DispID, for example "[DispID=3]".</span></span></param>
        <param name="invokeAttr"><span data-ttu-id="9d116-679">검색 방법을 지정하는 하나 이상의 <see cref="T:System.Reflection.BindingFlags" />로 구성된 비트 마스크입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-679">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span> <span data-ttu-id="9d116-680">액세스 권한은 <see langword="BindingFlags" />, <see langword="Public" />, <see langword="NonPublic" />, <see langword="Private" />, <see langword="InvokeMethod" /> 등과 같은 <see langword="GetField" /> 중 하나가 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-680">The access can be one of the <see langword="BindingFlags" /> such as <see langword="Public" />, <see langword="NonPublic" />, <see langword="Private" />, <see langword="InvokeMethod" />, <see langword="GetField" />, and so on.</span></span> <span data-ttu-id="9d116-681">조회 형식을 지정할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-681">The type of lookup need not be specified.</span></span> <span data-ttu-id="9d116-682">조회 형식을 생략하면 <see langword="BindingFlags.Public" /> | <see langword="BindingFlags.Instance" />가 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-682">If the type of lookup is omitted, <see langword="BindingFlags.Public" /> | <see langword="BindingFlags.Instance" /> will apply.</span></span></param>
        <param name="binder"><span data-ttu-id="9d116-683">속성 집합을 정의하고 바인딩을 활성화하는 <see cref="T:System.Reflection.Binder" /> 개체입니다. 이 개체는 또한 리플렉션을 통해 오버로드된 멤버를 선택할 수 있고 인수 형식을 강제 변환할 수 있으며 멤버를 호출할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-683">A <see cref="T:System.Reflection.Binder" /> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.</span></span>  
  
 <span data-ttu-id="9d116-684">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-684">-or-</span></span>  
  
 <span data-ttu-id="9d116-685"><see cref="P:System.Type.DefaultBinder" />를 사용하려는 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-685"><see langword="null" />, to use the <see cref="P:System.Type.DefaultBinder" />.</span></span></param>
        <param name="target"><span data-ttu-id="9d116-686">지정된 멤버를 호출할 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-686">The <see cref="T:System.Object" /> on which to invoke the specified member.</span></span></param>
        <param name="args"><span data-ttu-id="9d116-687">호출할 멤버에 전달하는 인수를 포함하는 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-687">An array containing the arguments to pass to the member to invoke.</span></span></param>
        <param name="culture"><span data-ttu-id="9d116-688">사용할 전역화 로캘을 나타내는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다. 이 개체는 숫자 String을 Double로 변환하는 등의 로캘 관련 변환에 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-688">The <see cref="T:System.Globalization.CultureInfo" /> object representing the globalization locale to use, which may be necessary for locale-specific conversions, such as converting a numeric String to a Double.</span></span>  
  
 <span data-ttu-id="9d116-689">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-689">-or-</span></span>  
  
 <span data-ttu-id="9d116-690">현재 스레드의 <see cref="T:System.Globalization.CultureInfo" />를 사용할 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-690"><see langword="null" /> to use the current thread's <see cref="T:System.Globalization.CultureInfo" />.</span></span></param>
        <summary><span data-ttu-id="9d116-691">버전에 관계없이 <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-691">Provides COM objects with version-independent access to the <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-692">호출된 멤버의 반환 값을 나타내는 <see cref="T:System.Object" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-692">An <see cref="T:System.Object" /> representing the return value of the invoked member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-693">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-693">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-694"><xref:System.Type.InvokeMember%2A?displayProperty=nameWithType> 메서드는 지정 된 바인딩 제약 조건 및 지정 된 인수 목록 및 문화권을 사용 하 여, 지정된 된 멤버를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-694">The <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType> method invokes the specified member, using the specified binding constraints and matching the specified argument list and culture.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeMember">
      <MemberSignature Language="C#" Value="public object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InvokeMember(string name, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object target, object[] args, valuetype System.Reflection.ParameterModifier[] modifiers, class System.Globalization.CultureInfo culture, string[] namedParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ InvokeMember(System::String ^ name, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::String ^&gt; ^ namedParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="namedParameters" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9d116-695">호출할 생성자, 메서드, 속성 또는 필드 멤버의 이름이 들어 있는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-695">The <see cref="T:System.String" /> containing the name of the constructor, method, property, or field member to invoke.</span></span>  
  
 <span data-ttu-id="9d116-696">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-696">-or-</span></span>  
  
 <span data-ttu-id="9d116-697">기본 멤버를 호출하는 빈 문자열("")입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-697">An empty string ("") to invoke the default member.</span></span>  
  
 <span data-ttu-id="9d116-698">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-698">-or-</span></span>  
  
 <span data-ttu-id="9d116-699">IDispatch 멤버의 경우 DispID를 나타내는 문자열(예: "[DispID=3]")입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-699">For IDispatch members, a string representing the DispID, for example "[DispID=3]".</span></span></param>
        <param name="invokeAttr"><span data-ttu-id="9d116-700">검색 방법을 지정하는 하나 이상의 <see cref="T:System.Reflection.BindingFlags" />로 구성된 비트 마스크입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-700">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span> <span data-ttu-id="9d116-701">액세스 권한은 <see langword="BindingFlags" />, <see langword="Public" />, <see langword="NonPublic" />, <see langword="Private" />, <see langword="InvokeMethod" /> 등과 같은 <see langword="GetField" /> 중 하나가 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-701">The access can be one of the <see langword="BindingFlags" /> such as <see langword="Public" />, <see langword="NonPublic" />, <see langword="Private" />, <see langword="InvokeMethod" />, <see langword="GetField" />, and so on.</span></span> <span data-ttu-id="9d116-702">조회 형식을 지정할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-702">The type of lookup need not be specified.</span></span> <span data-ttu-id="9d116-703">조회 형식을 생략하면 <see langword="BindingFlags.Public" /> | <see langword="BindingFlags.Instance" />가 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-703">If the type of lookup is omitted, <see langword="BindingFlags.Public" /> | <see langword="BindingFlags.Instance" /> will apply.</span></span></param>
        <param name="binder"><span data-ttu-id="9d116-704">속성 집합을 정의하고 바인딩을 활성화하는 <see cref="T:System.Reflection.Binder" /> 개체입니다. 이 개체는 또한 리플렉션을 통해 오버로드된 멤버를 선택할 수 있고 인수 형식을 강제 변환할 수 있으며 멤버를 호출할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-704">A <see cref="T:System.Reflection.Binder" /> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.</span></span>  
  
 <span data-ttu-id="9d116-705">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-705">-or-</span></span>  
  
 <span data-ttu-id="9d116-706"><see cref="P:System.Type.DefaultBinder" />를 사용하려는 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-706"><see langword="null" />, to use the <see cref="P:System.Type.DefaultBinder" />.</span></span></param>
        <param name="target"><span data-ttu-id="9d116-707">지정된 멤버를 호출할 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-707">The <see cref="T:System.Object" /> on which to invoke the specified member.</span></span></param>
        <param name="args"><span data-ttu-id="9d116-708">호출할 멤버에 전달하는 인수를 포함하는 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-708">An array containing the arguments to pass to the member to invoke.</span></span></param>
        <param name="modifiers"><span data-ttu-id="9d116-709"><c>args</c> 배열에서 해당하는 요소와 연관된 특성을 나타내는 <see cref="T:System.Reflection.ParameterModifier" /> 개체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-709">An array of <see cref="T:System.Reflection.ParameterModifier" /> objects representing the attributes associated with the corresponding element in the <c>args</c> array.</span></span> <span data-ttu-id="9d116-710">매개 변수의 관련 특성은 해당 멤버의 시그니처에 저장됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-710">A parameter's associated attributes are stored in the member's signature.</span></span> <span data-ttu-id="9d116-711">기본 바인더에서는 이 매개 변수를 처리하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-711">The default binder does not process this parameter.</span></span></param>
        <param name="culture"><span data-ttu-id="9d116-712">사용할 전역화 로캘을 나타내는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다. 이 개체는 숫자 String을 Double로 변환하는 등의 로캘 관련 변환에 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-712">The <see cref="T:System.Globalization.CultureInfo" /> object representing the globalization locale to use, which may be necessary for locale-specific conversions, such as converting a numeric String to a Double.</span></span>  
  
 <span data-ttu-id="9d116-713">또는</span><span class="sxs-lookup"><span data-stu-id="9d116-713">-or-</span></span>  
  
 <span data-ttu-id="9d116-714">현재 스레드의 <see cref="T:System.Globalization.CultureInfo" />를 사용할 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-714"><see langword="null" /> to use the current thread's <see cref="T:System.Globalization.CultureInfo" />.</span></span></param>
        <param name="namedParameters"><span data-ttu-id="9d116-715"><c>args</c> 배열의 값이 전달될 매개 변수의 이름이 있는 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-715">An array containing the names of the parameters to which the values in the <c>args</c> array are passed.</span></span></param>
        <summary><span data-ttu-id="9d116-716">버전에 관계없이 <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-716">Provides COM objects with version-independent access to the <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-717">호출된 멤버의 반환 값을 나타내는 <see cref="T:System.Object" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-717">An <see cref="T:System.Object" /> representing the return value of the invoked member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-718">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-718">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-719"><xref:System.Type.InvokeMember%2A?displayProperty=nameWithType> 메서드는 지정 된 바인딩 제약 조건 및 지정 된 인수 목록, 한정자, 및 culture를 사용 하 여, 지정된 된 멤버를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-719">The <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType> method invokes the specified member, using the specified binding constraints and matching the specified argument list, modifiers, and culture.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAbstract">
      <MemberSignature Language="C#" Value="public bool IsAbstract { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAbstract" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsAbstract" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAbstract As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAbstract { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-720">버전에 관계없이 <see cref="P:System.Type.IsAbstract" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-720">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsAbstract" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="9d116-721"><see cref="T:System.Type" />이 추상이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-721"><see langword="true" /> if the <see cref="T:System.Type" /> is abstract; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-722">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-722">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-723"><xref:System.Type.IsAbstract%2A?displayProperty=nameWithType> 속성 나타내는 값을 가져옵니다 여부는 <xref:System.Type> 추상 이며 재정의 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-723">The <xref:System.Type.IsAbstract%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is abstract and must be overridden.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAnsiClass">
      <MemberSignature Language="C#" Value="public bool IsAnsiClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAnsiClass" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsAnsiClass" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAnsiClass As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAnsiClass { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-724">버전에 관계없이 <see cref="P:System.Type.IsAnsiClass" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-724">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsAnsiClass" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="9d116-725"><see langword="true" />에 대해 문자열 형식 특성 <see langword="AnsiClass" />가 선택되면 <see cref="T:System.Type" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-725"><see langword="true" /> if the string format attribute <see langword="AnsiClass" /> is selected for the <see cref="T:System.Type" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-726">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-726">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-727"><xref:System.Type.IsAnsiClass%2A?displayProperty=nameWithType> 속성 나타내는 값을 가져옵니다 문자열 형식 특성 여부 `AnsiClass` 에 대해 선택 된는 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-727">The <xref:System.Type.IsAnsiClass%2A?displayProperty=nameWithType> property gets a value indicating whether the string format attribute `AnsiClass` is selected for the <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsArray">
      <MemberSignature Language="C#" Value="public bool IsArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsArray" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsArray" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsArray As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsArray { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-728">버전에 관계없이 <see cref="P:System.Type.IsArray" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-728">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsArray" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="9d116-729"><see langword="true" />이 배열이면 <see cref="T:System.Type" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-729"><see langword="true" /> if the <see cref="T:System.Type" /> is an array; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-730">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-730">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-731"><xref:System.Type.IsArray%2A?displayProperty=nameWithType> 속성 나타내는 값을 가져옵니다 여부는 <xref:System.Type> 은 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-731">The <xref:System.Type.IsArray%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is an array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAssignableFrom">
      <MemberSignature Language="C#" Value="public bool IsAssignableFrom (Type c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAssignableFrom(class System.Type c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.IsAssignableFrom(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAssignableFrom (c As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAssignableFrom(Type ^ c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="9d116-732">현재 <see cref="T:System.Type" />과 비교할 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-732">The <see cref="T:System.Type" /> to compare with the current <see cref="T:System.Type" />.</span></span></param>
        <summary><span data-ttu-id="9d116-733">버전에 관계없이 <see cref="M:System.Type.IsAssignableFrom(System.Type)" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-733">Provides COM objects with version-independent access to the <see cref="M:System.Type.IsAssignableFrom(System.Type)" /> method.</span></span></summary>
        <returns>
          <span data-ttu-id="9d116-734"><paramref name="c" />와 현재 <see cref="T:System.Type" />이 같은 형식을 나타내거나, 현재 <see cref="T:System.Type" />이 <paramref name="c" />의 상속 계층 구조에 속하거나, 현재 <see cref="T:System.Type" />이 <paramref name="c" />가 구현하는 인터페이스이거나, <paramref name="c" />가 제네릭 형식 매개 변수이고 현재 <see cref="T:System.Type" />이 <paramref name="c" />의 제약 조건 중 하나를 나타내면 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-734"><see langword="true" /> if <paramref name="c" /> and the current <see cref="T:System.Type" /> represent the same type, or if the current <see cref="T:System.Type" /> is in the inheritance hierarchy of <paramref name="c" />, or if the current <see cref="T:System.Type" /> is an interface that <paramref name="c" /> implements, or if <paramref name="c" /> is a generic type parameter and the current <see cref="T:System.Type" /> represents one of the constraints of <paramref name="c" />.</span></span> <span data-ttu-id="9d116-735">이러한 조건에 해당하지 않거나 <paramref name="c" />가 <see langword="false" />이면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-735"><see langword="false" /> if none of these conditions are the case, or if <paramref name="c" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-736">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-736">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAutoClass">
      <MemberSignature Language="C#" Value="public bool IsAutoClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAutoClass" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsAutoClass" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAutoClass As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAutoClass { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-737">버전에 관계없이 <see cref="P:System.Type.IsAutoClass" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-737">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsAutoClass" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="9d116-738"><see langword="true" />에 대해 문자열 형식 특성 <see langword="AutoClass" />가 선택되면 <see cref="T:System.Type" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-738"><see langword="true" /> if the string format attribute <see langword="AutoClass" /> is selected for the <see cref="T:System.Type" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-739">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-739">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-740"><xref:System.Type.IsAutoClass%2A?displayProperty=nameWithType> 속성 나타내는 값을 가져옵니다 문자열 형식 특성 여부 `AutoClass` 에 대해 선택 된는 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-740">The <xref:System.Type.IsAutoClass%2A?displayProperty=nameWithType> property gets a value indicating whether the string format attribute `AutoClass` is selected for the <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAutoLayout">
      <MemberSignature Language="C#" Value="public bool IsAutoLayout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAutoLayout" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsAutoLayout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAutoLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAutoLayout { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-741">버전에 관계없이 <see cref="P:System.Type.IsAutoLayout" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-741">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsAutoLayout" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="9d116-742"><see cref="T:System.Type" />에 대해 클래스 레이아웃 특성 <see langword="true" />이 선택되면 <see langword="AutoLayout" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-742"><see langword="true" /> if the class layout attribute <see langword="AutoLayout" /> is selected for the <see cref="T:System.Type" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-743">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-743">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-744"><xref:System.Type.IsAutoLayout%2A?displayProperty=nameWithType> 속성 나타내는 값을 가져옵니다 여부 클래스 레이아웃 특성 `AutoLayout` 에 대해 선택 된는 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-744">The <xref:System.Type.IsAutoLayout%2A?displayProperty=nameWithType> property gets a value indicating whether the class layout attribute `AutoLayout` is selected for the <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsByRef">
      <MemberSignature Language="C#" Value="public bool IsByRef { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsByRef" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsByRef" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsByRef As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsByRef { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-745">버전에 관계없이 <see cref="P:System.Type.IsByRef" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-745">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsByRef" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="9d116-746"><see langword="true" />이 참조로 전달되면 <see cref="T:System.Type" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-746"><see langword="true" /> if the <see cref="T:System.Type" /> is passed by reference; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-747">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-747">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-748"><xref:System.Type.IsByRef%2A?displayProperty=nameWithType> 속성 나타내는 값을 가져옵니다 여부는 <xref:System.Type> 참조로 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-748">The <xref:System.Type.IsByRef%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is passed by reference.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClass">
      <MemberSignature Language="C#" Value="public bool IsClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClass" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsClass" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsClass As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsClass { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-749">버전에 관계없이 <see cref="P:System.Type.IsClass" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-749">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsClass" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="9d116-750"><see langword="true" />이 클래스이면 <see cref="T:System.Type" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-750"><see langword="true" /> if the <see cref="T:System.Type" /> is a class; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-751">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-751">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-752"><xref:System.Type.IsClass%2A?displayProperty=nameWithType> 속성 나타내는 값을 가져옵니다 여부는 <xref:System.Type> 은 클래스, 즉, 값 형식이 아니거나 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-752">The <xref:System.Type.IsClass%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is a class; that is, not a value type or interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCOMObject">
      <MemberSignature Language="C#" Value="public bool IsCOMObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCOMObject" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsCOMObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCOMObject As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCOMObject { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-753">버전에 관계없이 <see cref="P:System.Type.IsCOMObject" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-753">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsCOMObject" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="9d116-754"><see langword="true" />이 COM 개체이면 <see cref="T:System.Type" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-754"><see langword="true" /> if the <see cref="T:System.Type" /> is a COM object; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-755">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-755">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-756"><xref:System.Type.IsCOMObject%2A?displayProperty=nameWithType> 속성 나타내는 값을 가져옵니다 여부는 <xref:System.Type> COM 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-756">The <xref:System.Type.IsCOMObject%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is a COM object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsContextful">
      <MemberSignature Language="C#" Value="public bool IsContextful { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsContextful" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsContextful" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsContextful As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsContextful { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-757">버전에 관계없이 <see cref="P:System.Type.IsContextful" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-757">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsContextful" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="9d116-758"><see cref="T:System.Type" />이 컨텍스트에서 호스팅될 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-758"><see langword="true" /> if the <see cref="T:System.Type" /> can be hosted in a context; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-759">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-759">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-760"><xref:System.Type.IsContextful%2A?displayProperty=nameWithType> 속성 나타내는 값을 가져옵니다 여부는 <xref:System.Type> 컨텍스트에서 호스팅될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-760">The <xref:System.Type.IsContextful%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> can be hosted in a context.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="9d116-761">사용자 지정 특성이 적용되는 <see langword="Type" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-761">The <see langword="Type" /> object to which the custom attributes are applied.</span></span></param>
        <param name="inherit"><span data-ttu-id="9d116-762">이 멤버의 상속 체인을 검색하여 특성을 찾을지 여부를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-762">Specifies whether to search this member's inheritance chain to find the attributes.</span></span></param>
        <summary><span data-ttu-id="9d116-763">버전에 관계없이 <see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-763">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" /> method.</span></span></summary>
        <returns>
          <span data-ttu-id="9d116-764">이 멤버에 하나 이상의 <paramref name="attributeType" /> 인스턴스가 적용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-764"><see langword="true" /> if one or more instance of <paramref name="attributeType" /> is applied to this member; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-765">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-765">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-766"><xref:System.Reflection.MemberInfo.IsDefined%2A?displayProperty=nameWithType> 메서드 나타냅니다 하나 또는 더 많은 인스턴스의 `attributeType` 이 멤버에 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-766">The <xref:System.Reflection.MemberInfo.IsDefined%2A?displayProperty=nameWithType> method indicates whether one or more instance of `attributeType` is applied to this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnum">
      <MemberSignature Language="C#" Value="public bool IsEnum { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnum" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsEnum" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEnum As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnum { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-767">버전에 관계없이 <see cref="P:System.Type.IsEnum" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-767">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsEnum" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="9d116-768">현재 <see langword="true" />이 열거형을 나타내면 <see cref="T:System.Type" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-768"><see langword="true" /> if the current <see cref="T:System.Type" /> represents an enumeration; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-769">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-769">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-770"><xref:System.Type.IsEnum%2A?displayProperty=nameWithType> 속성 나타내는 값을 가져옵니다 여부 현재 <xref:System.Type> 는 열거형을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-770">The <xref:System.Type.IsEnum%2A?displayProperty=nameWithType> property gets a value indicating whether the current <xref:System.Type> represents an enumeration.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExplicitLayout">
      <MemberSignature Language="C#" Value="public bool IsExplicitLayout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsExplicitLayout" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsExplicitLayout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsExplicitLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsExplicitLayout { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-771">버전에 관계없이 <see cref="P:System.Type.IsExplicitLayout" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-771">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsExplicitLayout" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="9d116-772"><see cref="T:System.Type" />에 대해 클래스 레이아웃 특성 <see langword="true" />이 선택되면 <see langword="ExplicitLayout" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-772"><see langword="true" /> if the class layout attribute <see langword="ExplicitLayout" /> is selected for the <see cref="T:System.Type" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-773">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-773">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-774"><xref:System.Type.IsExplicitLayout%2A?displayProperty=nameWithType> 속성 나타내는 값을 가져옵니다 여부 클래스 레이아웃 특성 `ExplicitLayout` 에 대해 선택 된는 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-774">The <xref:System.Type.IsExplicitLayout%2A?displayProperty=nameWithType> property gets a value indicating whether the class layout attribute `ExplicitLayout` is selected for the <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImport">
      <MemberSignature Language="C#" Value="public bool IsImport { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImport" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsImport" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsImport As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsImport { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-775">버전에 관계없이 <see cref="P:System.Type.IsImport" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-775">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsImport" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="9d116-776"><see cref="T:System.Type" />에 <see cref="T:System.Runtime.InteropServices.ComImportAttribute" />가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-776"><see langword="true" /> if the <see cref="T:System.Type" /> has <see cref="T:System.Runtime.InteropServices.ComImportAttribute" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-777">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-777">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-778"><xref:System.Type.IsImport%2A?displayProperty=nameWithType> 속성 나타내는 값을 가져옵니다 여부는 <xref:System.Type> 가 <xref:System.Runtime.InteropServices.ComImportAttribute>, COM 형식 라이브러리에서 가져온 것임을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-778">The <xref:System.Type.IsImport%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> has <xref:System.Runtime.InteropServices.ComImportAttribute>, indicating that it was imported from a COM type library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInstanceOfType">
      <MemberSignature Language="C#" Value="public bool IsInstanceOfType (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsInstanceOfType(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.IsInstanceOfType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInstanceOfType (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInstanceOfType(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="9d116-779">현재 <see cref="T:System.Type" />와 비교할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-779">The object to compare with the current <see cref="T:System.Type" />.</span></span></param>
        <summary><span data-ttu-id="9d116-780">버전에 관계없이 <see cref="M:System.Type.IsInstanceOfType(System.Object)" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-780">Provides COM objects with version-independent access to the <see cref="M:System.Type.IsInstanceOfType(System.Object)" /> method.</span></span></summary>
        <returns>
          <span data-ttu-id="9d116-781">현재 <see cref="T:System.Type" />이 <paramref name="o" />가 나타내는 개체의 상속 계층 구조에 속하거나 현재 <see cref="T:System.Type" />이 <paramref name="o" />가 지원하는 인터페이스이면 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-781"><see langword="true" /> if the current <see cref="T:System.Type" /> is in the inheritance hierarchy of the object represented by <paramref name="o" />, or if the current <see cref="T:System.Type" /> is an interface that <paramref name="o" /> supports.</span></span> <span data-ttu-id="9d116-782">이러한 조건에 해당하지 않거나 <paramref name="o" />가 <see langword="null" />이거나 현재 <see cref="T:System.Type" />이 개방형 제네릭 형식(즉, <see cref="P:System.Type.ContainsGenericParameters" />가 <see langword="true" /> 반환)이면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-782"><see langword="false" /> if neither of these conditions is the case, or if <paramref name="o" /> is <see langword="null" />, or if the current <see cref="T:System.Type" /> is an open generic type (that is, <see cref="P:System.Type.ContainsGenericParameters" /> returns <see langword="true" />).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-783">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-783">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-784"><xref:System.Type.IsInstanceOfType%2A?displayProperty=nameWithType> 메서드는 지정된 된 개체의 현재 인스턴스가 있는지 여부를 확인 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-784">The <xref:System.Type.IsInstanceOfType%2A?displayProperty=nameWithType> method determines whether the specified object is an instance of the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInterface">
      <MemberSignature Language="C#" Value="public bool IsInterface { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInterface" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsInterface" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInterface As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInterface { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-785">버전에 관계없이 <see cref="P:System.Type.IsInterface" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-785">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsInterface" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="9d116-786"><see langword="true" />이 인터페이스이면 <see cref="T:System.Type" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-786"><see langword="true" /> if the <see cref="T:System.Type" /> is an interface; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-787">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-787">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-788"><xref:System.Type.IsInterface%2A?displayProperty=nameWithType> 속성 나타내는 값을 가져옵니다 여부는 <xref:System.Type> 인터페이스;를, 하지는 클래스 또는 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-788">The <xref:System.Type.IsInterface%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is an interface; that is, not a class or a value type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLayoutSequential">
      <MemberSignature Language="C#" Value="public bool IsLayoutSequential { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLayoutSequential" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsLayoutSequential" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLayoutSequential As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLayoutSequential { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-789">버전에 관계없이 <see cref="P:System.Type.IsLayoutSequential" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-789">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsLayoutSequential" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="9d116-790"><see cref="T:System.Type" />에 대해 클래스 레이아웃 특성 <see langword="true" />이 선택되면 <see langword="SequentialLayout" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-790"><see langword="true" /> if the class layout attribute <see langword="SequentialLayout" /> is selected for the <see cref="T:System.Type" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-791">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-791">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-792"><xref:System.Type.IsLayoutSequential%2A?displayProperty=nameWithType> 속성 나타내는 값을 가져옵니다 여부 클래스 레이아웃 특성 `SequentialLayout` 에 대해 선택 된는 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-792">The <xref:System.Type.IsLayoutSequential%2A?displayProperty=nameWithType> property gets a value indicating whether the class layout attribute `SequentialLayout` is selected for the <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMarshalByRef">
      <MemberSignature Language="C#" Value="public bool IsMarshalByRef { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMarshalByRef" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsMarshalByRef" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMarshalByRef As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMarshalByRef { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-793">버전에 관계없이 <see cref="P:System.Type.IsMarshalByRef" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-793">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsMarshalByRef" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="9d116-794"><see langword="true" />이 참조에 의해 마샬링되면 <see cref="T:System.Type" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-794"><see langword="true" /> if the <see cref="T:System.Type" /> is marshaled by reference; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-795">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-795">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-796"><xref:System.Type.IsMarshalByRef%2A?displayProperty=nameWithType> 속성 형식을 참조로 마샬링되 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-796">The <xref:System.Type.IsMarshalByRef%2A?displayProperty=nameWithType> property gets a value indicating whether the Type is marshaled by reference.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNestedAssembly">
      <MemberSignature Language="C#" Value="public bool IsNestedAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNestedAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsNestedAssembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNestedAssembly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNestedAssembly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-797">버전에 관계없이 <see cref="P:System.Type.IsNestedAssembly" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-797">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsNestedAssembly" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="9d116-798"><see langword="true" />이 중첩되어 있고 자체 어셈블리 내에서만 표시되면 <see cref="T:System.Type" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-798"><see langword="true" /> if the <see cref="T:System.Type" /> is nested and visible only within its own assembly; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-799">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-799">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-800"><xref:System.Type.IsNestedAssembly%2A?displayProperty=nameWithType> 속성 나타내는 값을 가져옵니다 여부는 <xref:System.Type> 이 중첩 되었으며 자체 어셈블리 내 에서만 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-800">The <xref:System.Type.IsNestedAssembly%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is nested and visible only within its own assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNestedFamANDAssem">
      <MemberSignature Language="C#" Value="public bool IsNestedFamANDAssem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNestedFamANDAssem" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsNestedFamANDAssem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNestedFamANDAssem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNestedFamANDAssem { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-801">버전에 관계없이 <see cref="P:System.Type.IsNestedFamANDAssem" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-801">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsNestedFamANDAssem" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="9d116-802"><see langword="true" />이 중첩되어 있고 자체 패밀리와 자체 어셈블리 모두에 속하는 클래스에만 표시되면 <see cref="T:System.Type" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-802"><see langword="true" /> if the <see cref="T:System.Type" /> is nested and visible only to classes that belong to both its own family and its own assembly; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-803">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-803">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-804"><xref:System.Type.IsNestedFamANDAssem%2A?displayProperty=nameWithType> 속성 나타내는 값을 가져옵니다 여부는 <xref:System.Type> 이 클래스 자체 패밀리와 자체 어셈블리 모두에 속하는 중첩 되어 있고 에게만 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-804">The <xref:System.Type.IsNestedFamANDAssem%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is nested and visible only to classes that belong to both its own family and its own assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNestedFamily">
      <MemberSignature Language="C#" Value="public bool IsNestedFamily { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNestedFamily" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsNestedFamily" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNestedFamily As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNestedFamily { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-805">버전에 관계없이 <see cref="P:System.Type.IsNestedFamily" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-805">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsNestedFamily" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="9d116-806"><see langword="true" />이 중첩되어 있고 자체 패밀리 내에서만 표시되면 <see cref="T:System.Type" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-806"><see langword="true" /> if the <see cref="T:System.Type" /> is nested and visible only within its own family; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-807">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-807">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-808"><xref:System.Type.IsNestedFamily%2A?displayProperty=nameWithType> 속성 나타내는 값을 가져옵니다 여부는 <xref:System.Type> 이 중첩 되었으며 자체 패밀리 내 에서만 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-808">The <xref:System.Type.IsNestedFamily%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is nested and visible only within its own family.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNestedFamORAssem">
      <MemberSignature Language="C#" Value="public bool IsNestedFamORAssem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNestedFamORAssem" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsNestedFamORAssem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNestedFamORAssem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNestedFamORAssem { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-809">버전에 관계없이 <see cref="P:System.Type.IsNestedFamORAssem" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-809">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsNestedFamORAssem" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="9d116-810"><see langword="true" />이 중첩되어 있고 자체 패밀리 또는 자체 어셈블리에 속하는 클래스에만 표시되면 <see cref="T:System.Type" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-810"><see langword="true" /> if the <see cref="T:System.Type" /> is nested and visible only to classes that belong to its own family or to its own assembly; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-811">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-811">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-812"><xref:System.Type.IsNestedFamORAssem%2A?displayProperty=nameWithType> 속성 나타내는 값을 가져옵니다 여부는 <xref:System.Type> 이 중첩 되었으며 자체 패밀리 중 하나에 속하는 클래스에만 또는 자체 어셈블리에 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-812">The <xref:System.Type.IsNestedFamORAssem%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is nested and visible only to classes that belong to either its own family or to its own assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNestedPrivate">
      <MemberSignature Language="C#" Value="public bool IsNestedPrivate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNestedPrivate" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsNestedPrivate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNestedPrivate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNestedPrivate { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-813">버전에 관계없이 <see cref="P:System.Type.IsNestedPrivate" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-813">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsNestedPrivate" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="9d116-814"><see langword="true" />이 중첩되어 있고 private 형식으로 선언되어 있으면 <see cref="T:System.Type" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-814"><see langword="true" /> if the <see cref="T:System.Type" /> is nested and declared private; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-815">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-815">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-816"><xref:System.Type.IsNestedPrivate%2A?displayProperty=nameWithType> 속성 나타내는 값을 가져옵니다 여부는 <xref:System.Type> 중첩 되어 있고 private 형식으로 선언 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-816">The <xref:System.Type.IsNestedPrivate%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is nested and declared private.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNestedPublic">
      <MemberSignature Language="C#" Value="public bool IsNestedPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNestedPublic" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsNestedPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNestedPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNestedPublic { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-817">버전에 관계없이 <see cref="P:System.Type.IsNestedPublic" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-817">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsNestedPublic" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="9d116-818">클래스가 중첩되어 있고 public 형식으로 선언되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-818"><see langword="true" /> if the class is nested and declared public; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-819">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-819">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-820"><xref:System.Type.IsNestedPublic%2A?displayProperty=nameWithType> 속성은 클래스가 중첩 되어 있고 public으로 선언 되어 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-820">The <xref:System.Type.IsNestedPublic%2A?displayProperty=nameWithType> property gets a value indicating whether a class is nested and declared public.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNotPublic">
      <MemberSignature Language="C#" Value="public bool IsNotPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNotPublic" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsNotPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNotPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNotPublic { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-821">버전에 관계없이 <see cref="P:System.Type.IsNotPublic" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-821">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsNotPublic" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="9d116-822">최상위 <see cref="T:System.Type" />이 public 형식으로 선언되어 있지 않으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-822"><see langword="true" /> if the top-level <see cref="T:System.Type" /> is not declared public; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-823">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-823">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-824"><xref:System.Type.IsNotPublic%2A?displayProperty=nameWithType> 속성 나타내는 값을 가져옵니다 여부 최상위 <xref:System.Type> public으로 선언 되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-824">The <xref:System.Type.IsNotPublic%2A?displayProperty=nameWithType> property gets a value indicating whether the top-level <xref:System.Type> is not declared public.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPointer">
      <MemberSignature Language="C#" Value="public bool IsPointer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPointer" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsPointer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPointer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPointer { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-825">버전에 관계없이 <see cref="P:System.Type.IsPointer" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-825">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsPointer" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="9d116-826"><see langword="true" />이 포인터이면 <see cref="T:System.Type" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-826"><see langword="true" /> if the <see cref="T:System.Type" /> is a pointer; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-827">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-827">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-828"><xref:System.Type.IsPointer%2A?displayProperty=nameWithType> 속성 나타내는 값을 가져옵니다 여부는 <xref:System.Type> 대 한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-828">The <xref:System.Type.IsPointer%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is a pointer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrimitive">
      <MemberSignature Language="C#" Value="public bool IsPrimitive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrimitive" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsPrimitive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPrimitive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrimitive { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-829">버전에 관계없이 <see cref="P:System.Type.IsPrimitive" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-829">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsPrimitive" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="9d116-830"><see langword="true" />이 기본 형식 중 하나이면 <see cref="T:System.Type" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-830"><see langword="true" /> if the <see cref="T:System.Type" /> is one of the primitive types; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-831">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-831">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-832"><xref:System.Type.IsPrimitive%2A?displayProperty=nameWithType> 속성 나타내는 값을 가져옵니다 여부는 <xref:System.Type> 기본 형식 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-832">The <xref:System.Type.IsPrimitive%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is one of the primitive types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPublic">
      <MemberSignature Language="C#" Value="public bool IsPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPublic" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPublic { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-833">버전에 관계없이 <see cref="P:System.Type.IsPublic" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-833">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsPublic" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="9d116-834">최상위 <see cref="T:System.Type" />이 public 형식으로 선언되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-834"><see langword="true" /> if the top-level <see cref="T:System.Type" /> is declared public; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-835">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-835">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-836"><xref:System.Type.IsPublic%2A?displayProperty=nameWithType> 속성 나타내는 값을 가져옵니다 여부 최상위 <xref:System.Type> public으로 선언 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-836">The <xref:System.Type.IsPublic%2A?displayProperty=nameWithType> property gets a value indicating whether the top-level <xref:System.Type> is declared public.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSealed">
      <MemberSignature Language="C#" Value="public bool IsSealed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSealed" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsSealed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSealed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSealed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-837">버전에 관계없이 <see cref="P:System.Type.IsSealed" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-837">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsSealed" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="9d116-838"><see langword="true" />이 봉인된 형식으로 선언되어 있으면 <see cref="T:System.Type" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-838"><see langword="true" /> if the <see cref="T:System.Type" /> is declared sealed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-839">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-839">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-840"><xref:System.Type.IsSealed%2A?displayProperty=nameWithType> 속성 나타내는 값을 가져옵니다 여부는 <xref:System.Type> sealed로 선언 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-840">The <xref:System.Type.IsSealed%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is declared sealed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSerializable">
      <MemberSignature Language="C#" Value="public bool IsSerializable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSerializable" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsSerializable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSerializable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSerializable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-841">버전에 관계없이 <see cref="P:System.Type.IsSerializable" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-841">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsSerializable" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="9d116-842"><see cref="T:System.Type" />을 serialize할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-842"><see langword="true" /> if the <see cref="T:System.Type" /> is serializable; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-843">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-843">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-844"><xref:System.Type.IsSerializable%2A?displayProperty=nameWithType> 속성 나타내는 값을 가져옵니다 여부는 <xref:System.Type> 직렬화 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-844">The <xref:System.Type.IsSerializable%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is serializable.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSpecialName">
      <MemberSignature Language="C#" Value="public bool IsSpecialName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSpecialName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsSpecialName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSpecialName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSpecialName { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-845">버전에 관계없이 <see cref="P:System.Type.IsSpecialName" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-845">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsSpecialName" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="9d116-846">별도의 처리가 필요한 이름이 <see cref="T:System.Type" />에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-846"><see langword="true" /> if the <see cref="T:System.Type" /> has a name that requires special handling; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-847">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-847">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-848"><xref:System.Type.IsSpecialName%2A?displayProperty=nameWithType> 속성 나타내는 값을 가져옵니다 여부는 <xref:System.Type> 별도 처리가 필요한 이름이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-848">The <xref:System.Type.IsSpecialName%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> has a name that requires special handling.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubclassOf">
      <MemberSignature Language="C#" Value="public bool IsSubclassOf (Type c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSubclassOf(class System.Type c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.IsSubclassOf(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSubclassOf (c As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSubclassOf(Type ^ c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="9d116-849">현재 <see cref="T:System.Type" />과 비교할 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-849">The <see cref="T:System.Type" /> to compare with the current <see cref="T:System.Type" />.</span></span></param>
        <summary><span data-ttu-id="9d116-850">버전에 관계없이 <see cref="M:System.Type.IsSubclassOf(System.Type)" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-850">Provides COM objects with version-independent access to the <see cref="M:System.Type.IsSubclassOf(System.Type)" /> method.</span></span></summary>
        <returns>
          <span data-ttu-id="9d116-851"><paramref name="c" /> 매개 변수가 나타내는 <see cref="T:System.Type" />과 현재 <see cref="T:System.Type" />이 클래스를 나타내고, 현재 <see cref="T:System.Type" />이 나타내는 클래스가 <paramref name="c" />가 나타내는 클래스에서 파생되는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-851"><see langword="true" /> if the <see cref="T:System.Type" /> represented by the <paramref name="c" /> parameter and the current <see cref="T:System.Type" /> represent classes, and the class represented by the current <see cref="T:System.Type" /> derives from the class represented by <paramref name="c" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="9d116-852">이 메서드는 <paramref name="c" />와 현재 <see cref="T:System.Type" />이 같은 클래스를 나타내는 경우에도 <see langword="false" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-852">This method also returns <see langword="false" /> if <paramref name="c" /> and the current <see cref="T:System.Type" /> represent the same class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-853">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-853">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-854"><xref:System.Type.IsSubclassOf%2A?displayProperty=nameWithType> 메서드를 나타내는 클래스가 현재 있는지 여부를 확인 <xref:System.Type> 지정 된 클래스에서 파생 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-854">The <xref:System.Type.IsSubclassOf%2A?displayProperty=nameWithType> method determines whether the class represented by the current <xref:System.Type> derives from the class represented by the specified <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnicodeClass">
      <MemberSignature Language="C#" Value="public bool IsUnicodeClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnicodeClass" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsUnicodeClass" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUnicodeClass As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnicodeClass { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-855">버전에 관계없이 <see cref="P:System.Type.IsUnicodeClass" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-855">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsUnicodeClass" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="9d116-856"><see langword="true" />에 대해 문자열 형식 특성 <see langword="UnicodeClass" />가 선택되면 <see cref="T:System.Type" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-856"><see langword="true" /> if the string format attribute <see langword="UnicodeClass" /> is selected for the <see cref="T:System.Type" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-857">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-857">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-858"><xref:System.Type.IsUnicodeClass%2A?displayProperty=nameWithType> 속성 나타내는 값을 가져옵니다 문자열 형식 특성 여부 `UnicodeClass` 에 대해 선택 된는 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-858">The <xref:System.Type.IsUnicodeClass%2A?displayProperty=nameWithType> property gets a value indicating whether the string format attribute `UnicodeClass` is selected for the <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValueType">
      <MemberSignature Language="C#" Value="public bool IsValueType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValueType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsValueType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsValueType As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsValueType { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-859">버전에 관계없이 <see cref="P:System.Type.IsValueType" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-859">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsValueType" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="9d116-860"><see langword="true" />이 값 형식이면 <see cref="T:System.Type" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-860"><see langword="true" /> if the <see cref="T:System.Type" /> is a value type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-861">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-861">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-862"><xref:System.Type.IsValueType%2A?displayProperty=nameWithType> 속성 나타내는 값을 가져옵니다 여부는 <xref:System.Type> 값 형식이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-862">The <xref:System.Type.IsValueType%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is a value type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberType">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberTypes MemberType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.MemberTypes MemberType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.MemberType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemberType As MemberTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberTypes MemberType { System::Reflection::MemberTypes get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-863">버전에 관계없이 <see cref="P:System.Type.MemberType" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-863">Provides COM objects with version-independent access to the <see cref="P:System.Type.MemberType" /> property.</span></span></summary>
        <value><span data-ttu-id="9d116-864">이 멤버가 형식 또는 중첩 형식임을 나타내는 <see cref="T:System.Reflection.MemberTypes" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-864">A <see cref="T:System.Reflection.MemberTypes" /> value indicating that this member is a type or a nested type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-865">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-865">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-866"><xref:System.Type.MemberType%2A?displayProperty=nameWithType> 속성 get는 <xref:System.Reflection.MemberTypes> 이 멤버가 형식 또는 중첩된 형식임을 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-866">The <xref:System.Type.MemberType%2A?displayProperty=nameWithType> property gets a <xref:System.Reflection.MemberTypes> value indicating that this member is a type or a nested type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Module">
      <MemberSignature Language="C#" Value="public System.Reflection.Module Module { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Module Module" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.Module" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Module As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Module ^ Module { System::Reflection::Module ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-867">버전에 관계없이 <see cref="P:System.Type.Module" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-867">Provides COM objects with version-independent access to the <see cref="P:System.Type.Module" /> property.</span></span></summary>
        <value><span data-ttu-id="9d116-868">현재 <see cref="T:System.Type" />이 정의된 모듈의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-868">The name of the module in which the current <see cref="T:System.Type" /> is defined.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-869">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-869">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-870"><xref:System.Type.Module%2A?displayProperty=nameWithType> 속성은 모듈 (DLL)을 가져옵니다. 현재 <xref:System.Type> 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-870">The <xref:System.Type.Module%2A?displayProperty=nameWithType> property gets the module (the DLL) in which the current <xref:System.Type> is defined.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-871">버전에 관계없이 <see cref="P:System.Reflection.MemberInfo.Name" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-871">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.Name" /> property.</span></span></summary>
        <value><span data-ttu-id="9d116-872"><see cref="T:System.Type" />의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-872">The name of the <see cref="T:System.Type" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-873">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-873">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-874"><xref:System.Reflection.MemberInfo.Name%2A?displayProperty=nameWithType> 속성의 이름을 가져옵니다는 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-874">The <xref:System.Reflection.MemberInfo.Name%2A?displayProperty=nameWithType> property gets the name of the <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-875">버전에 관계없이 <see cref="P:System.Type.Namespace" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-875">Provides COM objects with version-independent access to the <see cref="P:System.Type.Namespace" /> property.</span></span></summary>
        <value><span data-ttu-id="9d116-876"><see cref="T:System.Type" />의 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-876">The namespace of the <see cref="T:System.Type" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-877">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-877">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-878"><xref:System.Type.Namespace%2A?displayProperty=nameWithType> 속성의 네임 스페이스를 가져옵니다는 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-878">The <xref:System.Type.Namespace%2A?displayProperty=nameWithType> property gets the namespace of the <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectedType">
      <MemberSignature Language="C#" Value="public Type ReflectedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReflectedType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.ReflectedType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReflectedType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ReflectedType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-879">버전에 관계없이 <see cref="P:System.Type.ReflectedType" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-879">Provides COM objects with version-independent access to the <see cref="P:System.Type.ReflectedType" /> property.</span></span></summary>
        <value><span data-ttu-id="9d116-880">이 <see cref="T:System.Type" /> 개체를 얻는 데 사용된 <see cref="T:System.Reflection.MemberInfo" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-880">The <see cref="T:System.Type" /> object through which this <see cref="T:System.Reflection.MemberInfo" /> object was obtained.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-881">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-881">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-882"><xref:System.Type.ReflectedType%2A?displayProperty=nameWithType> 클래스 개체를이 멤버를 얻는 데 사용 된 속성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-882">The <xref:System.Type.ReflectedType%2A?displayProperty=nameWithType> property gets the class object that was used to obtain this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9d116-883">버전에 관계없이 <see cref="M:System.Type.ToString" /> 메서드에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-883">Provides COM objects with version-independent access to the <see cref="M:System.Type.ToString" /> method.</span></span></summary>
        <returns><span data-ttu-id="9d116-884">현재 <see cref="T:System.String" />의 이름을 나타내는 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-884">A <see cref="T:System.String" /> representing the name of the current <see cref="T:System.Type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-885">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-885">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-886"><xref:System.Type.ToString%2A?displayProperty=nameWithType> 메서드 현재의 이름을 반환 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-886">The <xref:System.Type.ToString%2A?displayProperty=nameWithType> method returns the name of the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeHandle">
      <MemberSignature Language="C#" Value="public RuntimeTypeHandle TypeHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.RuntimeTypeHandle TypeHandle" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.TypeHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeHandle As RuntimeTypeHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property RuntimeTypeHandle TypeHandle { RuntimeTypeHandle get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.RuntimeTypeHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-887">버전에 관계없이 <see cref="P:System.Type.TypeHandle" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-887">Provides COM objects with version-independent access to the <see cref="P:System.Type.TypeHandle" /> property.</span></span></summary>
        <value><span data-ttu-id="9d116-888">현재 <see cref="T:System.Type" />에 대한 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-888">The handle for the current <see cref="T:System.Type" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-889">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-889">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-890"><xref:System.Type.TypeHandle%2A?displayProperty=nameWithType> 속성 현재에 대 한 핸들을 가져옵니다 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-890">The <xref:System.Type.TypeHandle%2A?displayProperty=nameWithType> property gets the handle for the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeInitializer">
      <MemberSignature Language="C#" Value="public System.Reflection.ConstructorInfo TypeInitializer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ConstructorInfo TypeInitializer" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.TypeInitializer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeInitializer As ConstructorInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::ConstructorInfo ^ TypeInitializer { System::Reflection::ConstructorInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-891">버전에 관계없이 <see cref="P:System.Type.TypeInitializer" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-891">Provides COM objects with version-independent access to the <see cref="P:System.Type.TypeInitializer" /> property.</span></span></summary>
        <value><span data-ttu-id="9d116-892"><see cref="T:System.Reflection.ConstructorInfo" />에 대한 클래스 생성자의 이름이 들어 있는 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-892">A <see cref="T:System.Reflection.ConstructorInfo" /> containing the name of the class constructor for the <see cref="T:System.Type" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-893">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-893">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-894"><xref:System.Type.TypeInitializer%2A?displayProperty=nameWithType> 속성에 대 한 이니셜라이저를 가져옵니다는 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-894">The <xref:System.Type.TypeInitializer%2A?displayProperty=nameWithType> property gets the initializer for the <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingSystemType">
      <MemberSignature Language="C#" Value="public Type UnderlyingSystemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type UnderlyingSystemType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.UnderlyingSystemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingSystemType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ UnderlyingSystemType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d116-895">버전에 관계없이 <see cref="P:System.Type.UnderlyingSystemType" /> 속성에 액세스할 수 있는 COM 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-895">Provides COM objects with version-independent access to the <see cref="P:System.Type.UnderlyingSystemType" /> property.</span></span></summary>
        <value><span data-ttu-id="9d116-896"><see cref="T:System.Type" />의 내부 시스템 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-896">The underlying system type for the <see cref="T:System.Type" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d116-897">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-897">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9d116-898"><xref:System.Type.UnderlyingSystemType%2A?displayProperty=nameWithType> 속성에는이 형식을 나타내는 공용 언어 런타임에서 제공 되는 형식을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="9d116-898">The <xref:System.Type.UnderlyingSystemType%2A?displayProperty=nameWithType> property indicates the type provided by the common language runtime that represents this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
