<Type Name="DbExpressionBuilder" FullName="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3f079ada6bf4ff5b4e1c43e704b23781305d885c" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52613984" /></Metadata><TypeSignature Language="C#" Value="public static class DbExpressionBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DbExpressionBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Module DbExpressionBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbExpressionBuilder abstract sealed" />
  <TypeSignature Language="F#" Value="type DbExpressionBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8a9c3-101">생성 하기 위한 API를 제공 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s 하며 식 형식 자체에서 확장 메서드로 액세스 하는 API입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-101">Provides an API to construct <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s and allows that API to be accessed as extension methods on the expression type itself.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Aggregate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionAggregate Aggregate (this System.Data.Metadata.Edm.EdmFunction function, System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionAggregate Aggregate(class System.Data.Metadata.Edm.EdmFunction function, class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate (function As EdmFunction, argument As DbExpression) As DbFunctionAggregate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionAggregate ^ Aggregate(System::Data::Metadata::Edm::EdmFunction ^ function, System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member Aggregate : System.Data.Metadata.Edm.EdmFunction * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionAggregate" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate (function, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionAggregate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Data.Metadata.Edm.EdmFunction" RefType="this" />
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="function"><span data-ttu-id="8a9c3-102">집계 작업을 정의 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-102">The function that defines the aggregate operation.</span></span></param>
        <param name="argument"><span data-ttu-id="8a9c3-103">인수는 집계 함수를 계산 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-103">The argument over which the aggregate function should be calculated.</span></span></param>
        <summary><span data-ttu-id="8a9c3-104">새 <see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-104">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" />.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-105">지정 된 함수 및 인수에 대 한 참조를 사용 하 여 집계는 새 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-105">A new function aggregate with a reference to the given function and argument.</span></span> <span data-ttu-id="8a9c3-106">함수 집계의 Distinct 속성 값을 갖게 됩니다 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-106">The function aggregate's Distinct property will have the value <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-107"><paramref name="function" /> 또는 <paramref name="argument" /> null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-107"><paramref name="function" /> or <paramref name="argument" /> null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-108"><paramref name="function" /> 집계 함수가 아니거나 둘 이상의 인수가 있거나의 결과 형식은 <paramref name="argument" /> 아니거나 승격할 수의 매개 변수 형식으로 <paramref name="function" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-108"><paramref name="function" /> is not an aggregate function or has more than one argument, or the result type of <paramref name="argument" /> is not equal or promotable to the parameter type of <paramref name="function" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AggregateDistinct">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionAggregate AggregateDistinct (this System.Data.Metadata.Edm.EdmFunction function, System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionAggregate AggregateDistinct(class System.Data.Metadata.Edm.EdmFunction function, class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AggregateDistinct (function As EdmFunction, argument As DbExpression) As DbFunctionAggregate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionAggregate ^ AggregateDistinct(System::Data::Metadata::Edm::EdmFunction ^ function, System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member AggregateDistinct : System.Data.Metadata.Edm.EdmFunction * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionAggregate" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct (function, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionAggregate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Data.Metadata.Edm.EdmFunction" RefType="this" />
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="function"><span data-ttu-id="8a9c3-109">집계 작업을 정의 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-109">The function that defines the aggregate operation.</span></span></param>
        <param name="argument"><span data-ttu-id="8a9c3-110">인수는 집계 함수를 계산 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-110">The argument over which the aggregate function should be calculated.</span></span></param>
        <summary><span data-ttu-id="8a9c3-111">새 <see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" /> 다른 방식으로 적용 되는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-111">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" /> that is applied in a distinct fashion.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-112">지정 된 함수 및 인수에 대 한 참조를 사용 하 여 집계는 새 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-112">A new function aggregate with a reference to the given function and argument.</span></span> <span data-ttu-id="8a9c3-113">함수 집계의 Distinct 속성 값을 갖게 됩니다 <see langword="true" />합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-113">The function aggregate's Distinct property will have the value <see langword="true" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-114"><paramref name="function" /> 또는 <paramref name="argument" />이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-114"><paramref name="function" /> or <paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-115"><paramref name="function" /> 집계 함수가 아니거나 둘 이상의 인수가 있거나의 결과 형식은 <paramref name="argument" /> 아니거나 승격할 수의 매개 변수 형식으로 <paramref name="function" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-115"><paramref name="function" /> is not an aggregate function or has more than one argument, or the result type of <paramref name="argument" /> is not equal or promotable to the parameter type of <paramref name="function" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="All">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8a9c3-116">새 <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> 지정된 된 조건자 입력된 집합의 모든 요소에 대해 성립 하는지 여부를 결정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-116">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for all elements of the input set.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="All">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbQuantifierExpression All (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbQuantifierExpression All(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function All (source As DbExpression, predicate As Func(Of DbExpression, DbExpression)) As DbQuantifierExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbQuantifierExpression ^ All(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member All : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbQuantifierExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQuantifierExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8a9c3-117">입력된 집합을 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-117">An expression that specifies the input set.</span></span></param>
        <param name="predicate"><span data-ttu-id="8a9c3-118">입력된 집합의 각 멤버에 대해 평가할 조건자를 나타내는 메서드.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-118">A method representing a predicate to evaluate for each member of the input set.</span></span>    <span data-ttu-id="8a9c3-119">이 메서드는 조건자 논리를 제공 하는 부울 결과 형식이 있는 식을 생성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-119">This method must produce an expression with a Boolean result type that provides the predicate logic.</span></span></param>
        <summary><span data-ttu-id="8a9c3-120">새 <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> 지정된 된 조건자 입력된 집합의 모든 요소에 대해 성립 하는지 여부를 결정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-120">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for all elements of the input set.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-121">모든 작업을 나타내는 새 DbQuantifierExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-121">A new DbQuantifierExpression that represents the All operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-122"><paramref name="predicate" />에서 생성된 식이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-122">The expression produced by <paramref name="predicate" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-123"><paramref name="Predicate" />에서 생성된 식에 부울 결과 형식이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-123">The expression produced by <paramref name="Predicate" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="All">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbQuantifierExpression All (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbQuantifierExpression All(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpression predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function All (input As DbExpressionBinding, predicate As DbExpression) As DbQuantifierExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbQuantifierExpression ^ All(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpression ^ predicate);" />
      <MemberSignature Language="F#" Value="static member All : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbQuantifierExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All (input, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQuantifierExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="predicate" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="8a9c3-124">입력된 집합을 지정 하는 식 바인딩입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-124">An expression binding that specifies the input set.</span></span></param>
        <param name="predicate"><span data-ttu-id="8a9c3-125">입력된 집합의 각 멤버에 대해 평가할 조건자를 나타내는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-125">An expression representing a predicate to evaluate for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="8a9c3-126">새 <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> 지정된 된 조건자 입력된 집합의 모든 요소에 대해 성립 하는지 여부를 결정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-126">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for all elements of the input set.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-127">모든 작업을 나타내는 새 DbQuantifierExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-127">A new DbQuantifierExpression that represents the All operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-128"><paramref name="input" /> 또는 <paramref name="predicate" />이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-128"><paramref name="input" /> or <paramref name="predicate" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-129"><paramref name="predicate" />에 부울 결과 형식이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-129"><paramref name="predicate" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbAndExpression And (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbAndExpression And(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function And (left As DbExpression, right As DbExpression) As DbAndExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbAndExpression ^ And(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member And : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbAndExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbAndExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="8a9c3-130">왼쪽된 인수를 지정 하는 부울 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-130">A Boolean expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="8a9c3-131">오른쪽 인수를 지정 하는 부울 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-131">A Boolean expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="8a9c3-132">만듭니다는 <see cref="T:System.Data.Common.CommandTrees.DbAndExpression" /> 논리 및 왼쪽 및 오른쪽 인수의 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-132">Creates an <see cref="T:System.Data.Common.CommandTrees.DbAndExpression" /> that performs the logical And of the left and right arguments.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-133">지정된 된 인수를 사용 하 여 새 DbAndExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-133">A new DbAndExpression with the specified arguments.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-134"><paramref name="left" /> 또는 <paramref name="right" />이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-134"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-135"><paramref name="left" /> 및 <paramref name="right" />에 부울 결과 형식이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-135"><paramref name="left" /> and <paramref name="right" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Any">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8a9c3-136">새 <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> 지정된 된 집합 인수가 비어 있지 않은 인지를 결정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-136">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that determines whether the specified set argument is non-empty.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Any">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpression Any (this System.Data.Common.CommandTrees.DbExpression source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpression Any(class System.Data.Common.CommandTrees.DbExpression source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any (source As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpression ^ Any(System::Data::Common::CommandTrees::DbExpression ^ source);" />
      <MemberSignature Language="F#" Value="static member Any : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8a9c3-137">입력된 집합을 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-137">An expression that specifies the input set.</span></span></param>
        <summary><span data-ttu-id="8a9c3-138">새 <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> 지정된 된 집합 인수가 비어 있지 않은 인지를 결정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-138">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that determines whether the specified set argument is non-empty.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-139">새 <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> 새 적용할 <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> 지정 된 인수를 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-139">A new <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> applied to a new <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> with the specified argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-140"><paramref name="source" />가 null인 경우</span><span class="sxs-lookup"><span data-stu-id="8a9c3-140"><paramref name="source" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-141"><paramref name="source" />에 컬렉션 결과 형식이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-141"><paramref name="source" /> does not have a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Any">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbQuantifierExpression Any (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbQuantifierExpression Any(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any (source As DbExpression, predicate As Func(Of DbExpression, DbExpression)) As DbQuantifierExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbQuantifierExpression ^ Any(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Any : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbQuantifierExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQuantifierExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8a9c3-142">입력된 집합을 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-142">An expression that specifies the input set.</span></span></param>
        <param name="predicate"><span data-ttu-id="8a9c3-143">입력된 집합의 각 멤버에 대해 평가할 조건자를 나타내는 메서드.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-143">A method representing the predicate to evaluate for each member of the input set.</span></span> <span data-ttu-id="8a9c3-144">이 메서드는 조건자 논리를 제공 하는 부울 결과 형식이 있는 식을 생성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-144">This method must produce an expression with a Boolean result type that provides the predicate logic.</span></span></param>
        <summary><span data-ttu-id="8a9c3-145">새 <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> 지정된 된 조건자 입력된 집합의 모든 요소에 대해 성립 하는지 여부를 결정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-145">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for any element of the input set.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-146">모든 작업을 나타내는 새 DbQuantifierExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-146">A new DbQuantifierExpression that represents the Any operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-147"><paramref name="predicate" />에서 생성된 식이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-147">The expression produced by <paramref name="predicate" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-148"><paramref name="predicate" />에서 생성된 식에 부울 결과 형식이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-148">The expression produced by <paramref name="predicate" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Any">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbQuantifierExpression Any (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbQuantifierExpression Any(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpression predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any (input As DbExpressionBinding, predicate As DbExpression) As DbQuantifierExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbQuantifierExpression ^ Any(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpression ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Any : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbQuantifierExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any (input, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQuantifierExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="predicate" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="8a9c3-149">입력된 집합을 지정 하는 식 바인딩입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-149">An expression binding that specifies the input set.</span></span></param>
        <param name="predicate"><span data-ttu-id="8a9c3-150">입력된 집합의 각 멤버에 대해 평가할 조건자를 나타내는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-150">An expression representing a predicate to evaluate for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="8a9c3-151">새 <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> 지정된 된 조건자 입력된 집합의 모든 요소에 대해 성립 하는지 여부를 결정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-151">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for any element of the input set.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-152">모든 작업을 나타내는 새 DbQuantifierExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-152">A new DbQuantifierExpression that represents the Any operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-153"><paramref name="input" /> 또는 <paramref name="predicate" />이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-153"><paramref name="input" /> or <paramref name="predicate" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-154"><paramref name="predicate" />에서 생성된 식에 부울 결과 형식이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-154">The expression produced by <paramref name="predicate" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="As">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8a9c3-155">지정 된 인수를 키/값 쌍 개체로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-155">Returns the specified arguments as a key/value pair object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="As">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbAggregate&gt; As (this System.Data.Common.CommandTrees.DbAggregate value, string alias);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbAggregate&gt; As(class System.Data.Common.CommandTrees.DbAggregate value, string alias) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function As (value As DbAggregate, alias As String) As KeyValuePair(Of String, DbAggregate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbAggregate ^&gt; As(System::Data::Common::CommandTrees::DbAggregate ^ value, System::String ^ alias);" />
      <MemberSignature Language="F#" Value="static member As : System.Data.Common.CommandTrees.DbAggregate * string -&gt; System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbAggregate&gt;" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As (value, alias)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbAggregate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbAggregate" RefType="this" />
        <Parameter Name="alias" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8a9c3-156">키/값 쌍의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-156">The value in the key/value pair.</span></span></param>
        <param name="alias"><span data-ttu-id="8a9c3-157">키/값 쌍의 키입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-157">The key in the key/value pair.</span></span></param>
        <summary><span data-ttu-id="8a9c3-158">지정 된 인수를 키/값 쌍 개체로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-158">Returns the specified arguments as a key/value pair object.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-159">키/값 쌍 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-159">A key/value pair object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="As">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt; As (this System.Data.Common.CommandTrees.DbExpression value, string alias);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt; As(class System.Data.Common.CommandTrees.DbExpression value, string alias) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function As (value As DbExpression, alias As String) As KeyValuePair(Of String, DbExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt; As(System::Data::Common::CommandTrees::DbExpression ^ value, System::String ^ alias);" />
      <MemberSignature Language="F#" Value="static member As : System.Data.Common.CommandTrees.DbExpression * string -&gt; System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbExpression&gt;" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As (value, alias)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="alias" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8a9c3-160">키/값 쌍의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-160">The value in the key/value pair.</span></span></param>
        <param name="alias"><span data-ttu-id="8a9c3-161">키/값 쌍의 키입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-161">The key in the key/value pair.</span></span></param>
        <summary><span data-ttu-id="8a9c3-162">지정 된 인수를 키/값 쌍 개체로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-162">Returns the specified arguments as a key/value pair object.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-163">키/값 쌍 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-163">A key/value pair object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bind">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpressionBinding Bind (this System.Data.Common.CommandTrees.DbExpression input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpressionBinding Bind(class System.Data.Common.CommandTrees.DbExpression input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Bind (input As DbExpression) As DbExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpressionBinding ^ Bind(System::Data::Common::CommandTrees::DbExpression ^ input);" />
      <MemberSignature Language="F#" Value="static member Bind : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbExpressionBinding" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="8a9c3-164">바인딩할 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-164">The expression to bind.</span></span></param>
        <summary><span data-ttu-id="8a9c3-165">새 <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> 생성된 된 변수 이름을 사용 하 여 지정된 된 식을 바인딩하 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-165">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that uses a generated variable name to bind the given expression.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-166">지정 된 식 및 생성된 된 변수 이름을 사용 하는 새 식 바인딩.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-166">A new expression binding with the specified expression and a generated variable name.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-167"><paramref name="input" />가 null인 경우</span><span class="sxs-lookup"><span data-stu-id="8a9c3-167"><paramref name="input" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-168"><paramref name="input" /> 에 컬렉션 결과가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-168"><paramref name="input" /> does not have a collection result.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BindAs">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpressionBinding BindAs (this System.Data.Common.CommandTrees.DbExpression input, string varName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpressionBinding BindAs(class System.Data.Common.CommandTrees.DbExpression input, string varName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BindAs (input As DbExpression, varName As String) As DbExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpressionBinding ^ BindAs(System::Data::Common::CommandTrees::DbExpression ^ input, System::String ^ varName);" />
      <MemberSignature Language="F#" Value="static member BindAs : System.Data.Common.CommandTrees.DbExpression * string -&gt; System.Data.Common.CommandTrees.DbExpressionBinding" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs (input, varName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="varName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="8a9c3-169">바인딩할 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-169">The expression to bind.</span></span></param>
        <param name="varName"><span data-ttu-id="8a9c3-170">바인딩에 대 한 사용 해야 하는 변수 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-170">The variable name that should be used for the binding.</span></span></param>
        <summary><span data-ttu-id="8a9c3-171">새 <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> 지정된 된 식을 바인딩하에 지정된 된 변수 이름을 사용 하는</span><span class="sxs-lookup"><span data-stu-id="8a9c3-171">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that uses the specified variable name to bind the given expression</span></span></summary>
        <returns><span data-ttu-id="8a9c3-172">지정 된 식 및 변수 이름을 사용 하는 새 식 바인딩.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-172">A new expression binding with the specified expression and variable name.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-173"><paramref name="input" /> 또는 <paramref name="varName" />이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-173"><paramref name="input" /> or <paramref name="varName" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-174"><paramref name="input" /> 에 컬렉션 결과가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-174"><paramref name="input" /> does not have a collection result.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Case">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbCaseExpression Case (System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; whenExpressions, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; thenExpressions, System.Data.Common.CommandTrees.DbExpression elseExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbCaseExpression Case(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; whenExpressions, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; thenExpressions, class System.Data.Common.CommandTrees.DbExpression elseExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function Case (whenExpressions As IEnumerable(Of DbExpression), thenExpressions As IEnumerable(Of DbExpression), elseExpression As DbExpression) As DbCaseExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbCaseExpression ^ Case(System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ whenExpressions, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ thenExpressions, System::Data::Common::CommandTrees::DbExpression ^ elseExpression);" />
      <MemberSignature Language="F#" Value="static member Case : seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; * seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbCaseExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case (whenExpressions, thenExpressions, elseExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbCaseExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="whenExpressions" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="thenExpressions" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="elseExpression" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="whenExpressions"><span data-ttu-id="8a9c3-175">목록에 대 한 각 사례의 조건부를 제공 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-175">A list of expressions that provide the conditional for of each case.</span></span></param>
        <param name="thenExpressions"><span data-ttu-id="8a9c3-176">목록 각 사례의 결과 제공 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-176">A list of expressions that provide the result of each case.</span></span></param>
        <param name="elseExpression"><span data-ttu-id="8a9c3-177">일치 하는 케이스가 없는 경우 결과 정의 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-177">An expression that defines the result when no case is matched.</span></span></param>
        <summary><span data-ttu-id="8a9c3-178">새 <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-178">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-179">지정 된 사례와 기본 결과 새 DbCaseExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-179">A new DbCaseExpression with the specified cases and default result.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-180"><paramref name="whenExpressions" /> 또는 <paramref name="thenExpressions" /> 가 null 이거나 null을 포함 하거나 <paramref name="elseExpression" /> null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-180"><paramref name="whenExpressions" /> or <paramref name="thenExpressions" /> is null or contains null, or <paramref name="elseExpression" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-181"><paramref name="whenExpressions" /> 또는 <paramref name="thenExpressions" /> 비어 또는 <paramref name="whenExpressions" /> 포함의 모든 식에는 부울이 아닌 결과 형식이 또는 공통의 결과 형식이 없는 식이 존재 <paramref name="thenExpressions" /> 고 <paramref name="elseExpression" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-181"><paramref name="whenExpressions" /> or <paramref name="thenExpressions" /> is empty or <paramref name="whenExpressions" /> contains an expression with a non-Boolean result type, or no common result type exists for all expressions in <paramref name="thenExpressions" /> and <paramref name="elseExpression" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CastTo">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbCastExpression CastTo (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage toType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbCastExpression CastTo(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage toType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CastTo (argument As DbExpression, toType As TypeUsage) As DbCastExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbCastExpression ^ CastTo(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ toType);" />
      <MemberSignature Language="F#" Value="static member CastTo : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbCastExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo (argument, toType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbCastExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="toType" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="8a9c3-182">캐스팅을 적용할 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-182">The argument to which the cast should be applied.</span></span></param>
        <param name="toType"><span data-ttu-id="8a9c3-183">로 캐스팅할 형식을 지정 하는 메타 데이터를 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-183">Type metadata that specifies the type to cast to.</span></span></param>
        <summary><span data-ttu-id="8a9c3-184">새 <see cref="T:System.Data.Common.CommandTrees.DbCastExpression" /> 다형 인수에 캐스트 작업을 적용 하는입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-184">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbCastExpression" /> that applies a cast operation to a polymorphic argument.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-185">지정 된 인수 및 대상 형식 사용 하 여 새 DbCastExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-185">A new DbCastExpression with the specified argument and target type.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-186"><paramref name="Argument" /> 또는 <paramref name="toType" />이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-186"><paramref name="Argument" /> or <paramref name="toType" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-187">지정한 캐스트가 잘못 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-187">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Constant">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8a9c3-188">새 <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-188">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Constant">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbConstantExpression Constant (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbConstantExpression Constant(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Constant (value As Object) As DbConstantExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbConstantExpression ^ Constant(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member Constant : obj -&gt; System.Data.Common.CommandTrees.DbConstantExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbConstantExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8a9c3-189">나타내는 상수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-189">The constant value to represent.</span></span></param>
        <summary><span data-ttu-id="8a9c3-190">새 <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> 주어진된 상수 값을 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-190">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the given constant value.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-191">지정 된 값을 사용 하는 새 DbConstantExpression입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-191">A new DbConstantExpression with the given value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-192"><paramref name="value" />가 null인 경우</span><span class="sxs-lookup"><span data-stu-id="8a9c3-192"><paramref name="value" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-193"><paramref name="value" /> 유효한 상수 형식의 인스턴스가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-193"><paramref name="value" /> is not an instance of a valid constant type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Constant">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbConstantExpression Constant (this System.Data.Metadata.Edm.TypeUsage constantType, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbConstantExpression Constant(class System.Data.Metadata.Edm.TypeUsage constantType, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Constant (constantType As TypeUsage, value As Object) As DbConstantExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbConstantExpression ^ Constant(System::Data::Metadata::Edm::TypeUsage ^ constantType, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member Constant : System.Data.Metadata.Edm.TypeUsage * obj -&gt; System.Data.Common.CommandTrees.DbConstantExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant (constantType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbConstantExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constantType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="constantType"><span data-ttu-id="8a9c3-194">상수 값의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-194">The type of the constant value.</span></span></param>
        <param name="value"><span data-ttu-id="8a9c3-195">나타내는 상수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-195">The constant value to represent.</span></span></param>
        <summary><span data-ttu-id="8a9c3-196">새 <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> 주어진된 상수 값을 사용 하 여 지정 된 기본 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-196">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> of the specified primitive type with the given constant value.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-197">지정 된 값과의 결과 형식을 사용 하는 새 DbConstantExpression <paramref name="constantType" />합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-197">A new DbConstantExpression with the given value and a result type of <paramref name="constantType" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-198"><paramref name="value" /> 또는 <paramref name="constantType" />이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-198"><paramref name="value" /> or <paramref name="constantType" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-199"><paramref name="value" /> 유효한 상수 형식의 인스턴스가 아닙니다 <paramref name="constantType" /> 는 기본 형식을 나타내지 않는 또는 <paramref name="value" /> 를 다른 형식으로 표현 되는 것은 <paramref name="constantType" />합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-199"><paramref name="value" /> is not an instance of a valid constant type,  <paramref name="constantType" /> does not represent a primitive type, or <paramref name="value" /> is of a different primitive type than that represented by <paramref name="constantType" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateRef">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8a9c3-200">새 <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> 키 값을 기반으로 지정 된 형식의 특정 엔터티에 대 한 참조를 인코딩하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-200">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity of a given type based on key values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression CreateRef(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ CreateRef(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ keyValues);" />
      <MemberSignature Language="F#" Value="static member CreateRef : System.Data.Metadata.Edm.EntitySet * seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbRefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef (entitySet, keyValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="keyValues" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="8a9c3-201">엔터티 참조 되는 요소가 있는 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-201">The entity set in which the referenced element resides.</span></span></param>
        <param name="keyValues"><span data-ttu-id="8a9c3-202">컬렉션인 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />키 값을 제공 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-202">A collection of <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that provide the key values.</span></span> <span data-ttu-id="8a9c3-203">이러한 식은 일치 해야 (개수, 형식 및 순서가) 참조 된 엔터티 형식의 키 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-203">These expressions must match (in number, type, and order) the key properties of the referenced entity type.</span></span></param>
        <summary><span data-ttu-id="8a9c3-204">새 <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> 키 값을 기반으로 특정 엔터티에 대 한 참조를 인코딩하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-204">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity based on key values.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-205">지정된 된 엔터티 집합에서 지정 된 키 값을 사용 하 여 요소를 참조 하는 새 DbRefExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-205">A new DbRefExpression that references the element with the specified key values in the given entity set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-206"><paramref name="entitySet" />이 null이거나 <paramref name="keyValues" />가 null이거나 null을 포함하는 경우</span><span class="sxs-lookup"><span data-stu-id="8a9c3-206"><paramref name="entitySet" /> is null, or <paramref name="keyValues" /> is null or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-207"><paramref name="keyValues" />의 횟수가 <paramref name="entitySet" />의 요소 형식에 선언된 키 멤버의 횟수와 일치하지 않거나 <paramref name="keyValues" />에 해당 키 멤버의 형식과 호환되지 않는 결과 형식이 있는 식이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-207">The count of <paramref name="keyValues" /> does not match the count of key members declared by the <paramref name="entitySet" />'s element type, or <paramref name="keyValues" /> contains an expression with a result type that is not compatible with the type of the corresponding key member.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, params System.Data.Common.CommandTrees.DbExpression[] keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression CreateRef(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Common.CommandTrees.DbExpression[] keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ CreateRef(System::Data::Metadata::Edm::EntitySet ^ entitySet, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ keyValues);" />
      <MemberSignature Language="F#" Value="static member CreateRef : System.Data.Metadata.Edm.EntitySet * System.Data.Common.CommandTrees.DbExpression[] -&gt; System.Data.Common.CommandTrees.DbRefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef (entitySet, keyValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="keyValues" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="8a9c3-208">엔터티 참조 되는 요소가 있는 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-208">The entity set in which the referenced element resides.</span></span></param>
        <param name="keyValues"><span data-ttu-id="8a9c3-209">컬렉션인 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />키 값을 제공 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-209">A collection of <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that provide the key values.</span></span> <span data-ttu-id="8a9c3-210">이러한 식은 일치 해야 (개수, 형식 및 순서가) 참조 된 엔터티 형식의 키 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-210">These expressions must match (in number, type, and order) the key properties of the referenced entity type.</span></span></param>
        <summary><span data-ttu-id="8a9c3-211">새 <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> 키 값을 기반으로 특정 엔터티에 대 한 참조를 인코딩하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-211">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity based on key values.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-212">지정된 된 엔터티 집합에서 지정 된 키 값을 사용 하 여 요소를 참조 하는 새 DbRefExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-212">A new DbRefExpression that references the element with the specified key values in the given entity set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-213"><paramref name="entitySet" />이 null이거나 <paramref name="keyValues" />가 null이거나 null을 포함하는 경우</span><span class="sxs-lookup"><span data-stu-id="8a9c3-213"><paramref name="entitySet" /> is null, or <paramref name="keyValues" /> is null or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-214"><paramref name="keyValues" />의 횟수가 <paramref name="entitySet" />의 요소 형식에 선언된 키 멤버의 횟수와 일치하지 않거나 <paramref name="keyValues" />에 해당 키 멤버의 형식과 호환되지 않는 결과 형식이 있는 식이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-214">The count of <paramref name="keyValues" /> does not match the count of key members declared by the <paramref name="entitySet" />'s element type, or <paramref name="keyValues" /> contains an expression with a result type that is not compatible with the type of the corresponding key member.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Metadata.Edm.EntityType entityType, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression CreateRef(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Metadata.Edm.EntityType entityType, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ CreateRef(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Data::Metadata::Edm::EntityType ^ entityType, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ keyValues);" />
      <MemberSignature Language="F#" Value="static member CreateRef : System.Data.Metadata.Edm.EntitySet * System.Data.Metadata.Edm.EntityType * seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbRefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef (entitySet, entityType, keyValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="entityType" Type="System.Data.Metadata.Edm.EntityType" />
        <Parameter Name="keyValues" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="8a9c3-215">엔터티 참조 되는 요소가 있는 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-215">The entity set in which the referenced element resides.</span></span></param>
        <param name="entityType"><span data-ttu-id="8a9c3-216">참조 된 엔터티의 특정 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-216">The specific type of the referenced entity.</span></span> <span data-ttu-id="8a9c3-217">엔터티 집합의 요소 형식과 동일한 계층의 엔터티 형식 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-217">This must be an entity type from the same hierarchy as the entity set's element type.</span></span></param>
        <param name="keyValues"><span data-ttu-id="8a9c3-218">컬렉션인 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />키 값을 제공 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-218">A collection of <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that provide the key values.</span></span> <span data-ttu-id="8a9c3-219">이러한 식은 일치 해야 (개수, 형식 및 순서가) 참조 된 엔터티 형식의 키 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-219">These expressions must match (in number, type, and order) the key properties of the referenced entity type.</span></span></param>
        <summary><span data-ttu-id="8a9c3-220">새 <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> 키 값을 기반으로 지정 된 형식의 특정 엔터티에 대 한 참조를 인코딩하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-220">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity of a given type based on key values.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-221">지정된 된 엔터티 집합에서 지정 된 키 값을 사용 하 여 요소를 참조 하는 새 DbRefExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-221">A new DbRefExpression that references the element with the specified key values in the given entity set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-222"><paramref name="entitySet" /> 또는 <paramref name="entityType" /> 가 null 또는 <paramref name="keyValues" /> 가 null 이거나 null을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-222"><paramref name="entitySet" /> or <paramref name="entityType" /> is null, or <paramref name="keyValues" /> is null or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-223"><paramref name="keyValues" />의 횟수가 <paramref name="entitySet" />의 요소 형식에 선언된 키 멤버의 횟수와 일치하지 않거나 <paramref name="keyValues" />에 해당 키 멤버의 형식과 호환되지 않는 결과 형식이 있는 식이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-223">The count of <paramref name="keyValues" /> does not match the count of key members declared by the <paramref name="entitySet" />'s element type, or <paramref name="keyValues" /> contains an expression with a result type that is not compatible with the type of the corresponding key member.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Metadata.Edm.EntityType entityType, params System.Data.Common.CommandTrees.DbExpression[] keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression CreateRef(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Metadata.Edm.EntityType entityType, class System.Data.Common.CommandTrees.DbExpression[] keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ CreateRef(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Data::Metadata::Edm::EntityType ^ entityType, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ keyValues);" />
      <MemberSignature Language="F#" Value="static member CreateRef : System.Data.Metadata.Edm.EntitySet * System.Data.Metadata.Edm.EntityType * System.Data.Common.CommandTrees.DbExpression[] -&gt; System.Data.Common.CommandTrees.DbRefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef (entitySet, entityType, keyValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="entityType" Type="System.Data.Metadata.Edm.EntityType" />
        <Parameter Name="keyValues" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="8a9c3-224">엔터티 참조 되는 요소가 있는 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-224">The entity set in which the referenced element resides.</span></span></param>
        <param name="entityType"><span data-ttu-id="8a9c3-225">참조 된 엔터티의 특정 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-225">The specific type of the referenced entity.</span></span> <span data-ttu-id="8a9c3-226">엔터티 집합의 요소 형식과 동일한 계층의 엔터티 형식 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-226">This must be an entity type from the same hierarchy as the entity set's element type.</span></span></param>
        <param name="keyValues"><span data-ttu-id="8a9c3-227">컬렉션인 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />키 값을 제공 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-227">A collection of <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that provide the key values.</span></span> <span data-ttu-id="8a9c3-228">이러한 식은 일치 해야 (개수, 형식 및 순서가) 참조 된 엔터티 형식의 키 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-228">These expressions must match (in number, type, and order) the key properties of the referenced entity type.</span></span></param>
        <summary><span data-ttu-id="8a9c3-229">새 <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> 키 값을 기반으로 지정 된 형식의 특정 엔터티에 대 한 참조를 인코딩하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-229">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity of a given type based on key values.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-230">지정된 된 엔터티 집합에서 지정 된 키 값을 사용 하 여 요소를 참조 하는 새 DbRefExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-230">A new DbRefExpression that references the element with the specified key values in the given entity set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-231"><paramref name="entitySet" /> 또는 <paramref name="entityType" /> 가 null 또는 <paramref name="keyValues" /> 가 null 이거나 null을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-231"><paramref name="entitySet" /> or <paramref name="entityType" /> is null, or <paramref name="keyValues" /> is null or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-232"><paramref name="keyValues" />의 횟수가 <paramref name="entitySet" />의 요소 형식에 선언된 키 멤버의 횟수와 일치하지 않거나 <paramref name="keyValues" />에 해당 키 멤버의 형식과 호환되지 않는 결과 형식이 있는 식이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-232">The count of <paramref name="keyValues" /> does not match the count of key members declared by the <paramref name="entitySet" />'s element type, or <paramref name="keyValues" /> contains an expression with a result type that is not compatible with the type of the corresponding key member.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CrossApply">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8a9c3-233">새로 만듭니다 <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> 평가 되는 지정 된 <paramref name="apply" /> 지정된 된 입력의 각 요소에 한 번씩 식 집합을 해당 입력을 사용 하 여 행의 컬렉션을 생성 및 apply 열입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-233">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CrossApply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbApplyExpression CrossApply (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt;&gt; apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbApplyExpression CrossApply(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt;&gt; apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CrossApply (source As DbExpression, apply As Func(Of DbExpression, KeyValuePair(Of String, DbExpression))) As DbApplyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbApplyExpression ^ CrossApply(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt;&gt; ^ apply);" />
      <MemberSignature Language="F#" Value="static member CrossApply : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbExpression&gt;&gt; -&gt; System.Data.Common.CommandTrees.DbApplyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply (source, apply)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbApplyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="apply" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8a9c3-234"><see cref="T:System.Data.Common.CommandTrees.DbExpression" /> 입력된 집합을 지정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-234">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span></span></param>
        <param name="apply"><span data-ttu-id="8a9c3-235">입력된 집합의 각 멤버에 대해 한 번씩 확인할 논리를 지정 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-235">A method that specifies the logic to evaluate once for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="8a9c3-236">새로 만듭니다 <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> 평가 되는 지정 된 <paramref name="apply" /> 지정된 된 입력의 각 요소에 한 번씩 식 집합을 해당 입력을 사용 하 여 행의 컬렉션을 생성 및 apply 열입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-236">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span> <span data-ttu-id="8a9c3-237">행 <paramref name="apply" /> 빈 집합으로 계산 되는 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-237">Rows for which <paramref name="apply" /> evaluates to an empty set are not included.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-238">지정 된 사용 되는 새 DbApplyExpression 입력 및 적용 및 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> CrossApply의 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-238">An new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossApply.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-239">결과 <paramref name="apply" /> 이름이 나 식이 null이 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-239">The result of <paramref name="apply" /> contains a name or expression that is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-240">결과 <paramref name="apply" /> 이름이 나 식 바인딩에서 유효 하지 않은 식이 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-240">The result of <paramref name="apply" /> contains a name or expression that is not valid in an expression binding.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CrossApply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbApplyExpression CrossApply (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpressionBinding apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbApplyExpression CrossApply(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpressionBinding apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CrossApply (input As DbExpressionBinding, apply As DbExpressionBinding) As DbApplyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbApplyExpression ^ CrossApply(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpressionBinding ^ apply);" />
      <MemberSignature Language="F#" Value="static member CrossApply : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpressionBinding -&gt; System.Data.Common.CommandTrees.DbApplyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply (input, apply)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbApplyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="apply" Type="System.Data.Common.CommandTrees.DbExpressionBinding" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="8a9c3-241"><see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> 입력된 집합을 지정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-241">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the input set.</span></span></param>
        <param name="apply"><span data-ttu-id="8a9c3-242"><see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> 입력된 집합의 각 멤버에 대 한 번씩 확인할 논리를 지정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-242">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies logic to evaluate once for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="8a9c3-243">새로 만듭니다 <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> 평가 되는 지정 된 <paramref name="apply" /> 지정된 된 입력의 각 요소에 한 번씩 식 집합을 해당 입력을 사용 하 여 행의 컬렉션을 생성 및 apply 열입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-243">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span> <span data-ttu-id="8a9c3-244">행 <paramref name="apply" /> 빈 집합으로 계산 되는 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-244">Rows for which <paramref name="apply" /> evaluates to an empty set are not included.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-245">지정 된 사용 되는 새 DbApplyExpression 입력 및 적용 및 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> CrossApply의 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-245">An new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossApply.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-246"><paramref name="input" /> 또는 <paramref name="apply" />이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-246"><paramref name="input" /> or <paramref name="apply" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CrossJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbCrossJoinExpression CrossJoin (System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt; inputs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbCrossJoinExpression CrossJoin(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpressionBinding&gt; inputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})" />
      <MemberSignature Language="VB.NET" Value="Public Function CrossJoin (inputs As IEnumerable(Of DbExpressionBinding)) As DbCrossJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbCrossJoinExpression ^ CrossJoin(System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpressionBinding ^&gt; ^ inputs);" />
      <MemberSignature Language="F#" Value="static member CrossJoin : seq&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt; -&gt; System.Data.Common.CommandTrees.DbCrossJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin inputs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbCrossJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputs" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt;" />
      </Parameters>
      <Docs>
        <param name="inputs"><span data-ttu-id="8a9c3-247">입력된 집합을 지정 하는 식 바인딩의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-247">A list of expression bindings that specifies the input sets.</span></span></param>
        <summary><span data-ttu-id="8a9c3-248">새 <see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" /> 입력된 식 바인딩의 목록으로 지정 된 집합을 무조건 조인 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-248">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" /> that unconditionally joins the sets specified by the list of input expression bindings.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-249">새 DbCrossJoinExpression와는 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> 입력된 집합의 무조건 조인을 나타내는 CrossJoin의 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-249">A new DbCrossJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossJoin, that represents the unconditional join of the input sets.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-250"><paramref name="inputs" /> 가 null 이거나 null 요소를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-250"><paramref name="inputs" /> is null or contains null element.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-251"><paramref name="inputs" /> 두 개 미만의 식 바인딩을 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-251"><paramref name="inputs" /> contains fewer than 2 expression bindings.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Deref">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbDerefExpression Deref (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbDerefExpression Deref(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Deref (argument As DbExpression) As DbDerefExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbDerefExpression ^ Deref(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member Deref : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbDerefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbDerefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="8a9c3-252"><see cref="T:System.Data.Common.CommandTrees.DbExpression" /> 는 참조를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-252">An <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that provides the reference.</span></span> <span data-ttu-id="8a9c3-253">이 식에는 참조 형식이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-253">This expression must have a reference Type.</span></span></param>
        <summary><span data-ttu-id="8a9c3-254">새 <see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" /> 참조 식을 특정 엔터티를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-254">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" /> that retrieves a specific Entity given a reference expression.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-255">지정된 된 엔터티를 검색 하는 새 DbDerefExpression입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-255">A new DbDerefExpression that retrieves the specified Entity.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-256"><paramref name="argument" />가 null인 경우</span><span class="sxs-lookup"><span data-stu-id="8a9c3-256"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-257"><paramref name="argument" /> 참조 결과 형식이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-257"><paramref name="argument" /> does not have a reference result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Distinct">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbDistinctExpression Distinct (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbDistinctExpression Distinct(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Distinct (argument As DbExpression) As DbDistinctExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbDistinctExpression ^ Distinct(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member Distinct : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbDistinctExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbDistinctExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="8a9c3-258">고유 작업을 수행 하는 집합을 정의 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-258">An expression that defines the set over which to perfom the distinct operation.</span></span></param>
        <summary><span data-ttu-id="8a9c3-259">새 <see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" /> 지정된 된 집합 인수에서 중복을 제거 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-259">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" /> that removes duplicates from the given set argument.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-260">지정된 된 집합 인수에 적용 된 고유한 작업을 나타내는 새 DbDistinctExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-260">A new DbDistinctExpression that represents the distinct operation applied to the specified set argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-261"><paramref name="argument" />가 null인 경우</span><span class="sxs-lookup"><span data-stu-id="8a9c3-261"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-262"><paramref name="argument" />에 컬렉션 결과 형식이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-262"><paramref name="argument" /> does not have a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Divide (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Divide(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Divide (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Divide(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Divide : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbArithmeticExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="8a9c3-263">왼쪽된 인수를 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-263">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="8a9c3-264">오른쪽 인수를 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-264">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="8a9c3-265">새 <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> 왼쪽된 인수를 오른쪽 인수로 나누는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-265">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that divides the left argument by the right argument.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-266">나누기 연산을 나타내는 하는 새 DbArithmeticExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-266">A new DbArithmeticExpression representing the division operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-267"><paramref name="left" /> 또는 <paramref name="right" />이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-267"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-268">일반적인 숫자 결과 형식이 존재 하지 않습니다 <paramref name="left" /> 또는 <paramref name="right" />합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-268">No common numeric result type exists between <paramref name="left" /> or <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Element">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbElementExpression Element (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbElementExpression Element(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Element (argument As DbExpression) As DbElementExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbElementExpression ^ Element(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member Element : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbElementExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbElementExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="8a9c3-269">입력된 집합을 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-269">An expression that specifies the input set.</span></span></param>
        <summary><span data-ttu-id="8a9c3-270">새 <see cref="T:System.Data.Common.CommandTrees.DbElementExpression" /> 집합을 singleton으로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-270">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbElementExpression" /> that converts a set into a singleton.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-271">DbElementExpression 나타내는 집합 인수를 singleton으로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-271">A DbElementExpression that represents the conversion of the set argument to a singleton.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-272"><paramref name="argument" />가 null인 경우</span><span class="sxs-lookup"><span data-stu-id="8a9c3-272"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-273"><paramref name="argument" />에 컬렉션 결과 형식이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-273"><paramref name="argument" /> does not have a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equal">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression Equal (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression Equal(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Equal (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ Equal(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Equal : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbComparisonExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="8a9c3-274">왼쪽된 인수를 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-274">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="8a9c3-275">오른쪽 인수를 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-275">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="8a9c3-276">새 <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> 왼쪽 인수와 오른쪽 인수가 같은지 비교 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-276">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that compares the left and right arguments for equality.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-277">새 DbComparisonExpression 중 하나로 같음 비교를 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-277">A new DbComparisonExpression representing the equality comparison.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-278"><paramref name="left" /> 또는 <paramref name="right" />이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-278"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-279">공통의 같음 호환 결과 형식이 없는 사이 존재 <paramref name="left" /> 고 <paramref name="right" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-279">No common equality-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Except">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExceptExpression Except (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExceptExpression Except(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Except (left As DbExpression, right As DbExpression) As DbExceptExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExceptExpression ^ Except(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Except : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbExceptExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExceptExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="8a9c3-280">왼쪽을 정의 하는 식 인수를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-280">An expression that defines the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="8a9c3-281">오른쪽을 정의 하는 식 인수를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-281">An expression that defines the right set argument.</span></span></param>
        <summary><span data-ttu-id="8a9c3-282">새 <see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" /> 빼기 왼쪽된 집합 인수에서 오른쪽 집합 인수를 계산 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-282">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" /> that computes the subtraction of the right set argument from the left set argument.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-283">오른쪽 인수와에서 왼쪽 인수의 차이 나타내는 새 DbExceptExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-283">A new DbExceptExpression that represents the difference of the left argument from the right argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-284"><paramref name="left" /> 또는 <paramref name="right" />이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-284"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-285">공통 컬렉션 결과 형식이 존재 하지 않습니다 <paramref name="left" /> 고 <paramref name="right" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-285">No common collection result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpression Exists (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpression Exists(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Exists (argument As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpression ^ Exists(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member Exists : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="8a9c3-286">입력된 집합을 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-286">An expression that specifies the input set.</span></span></param>
        <summary><span data-ttu-id="8a9c3-287">새 <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> 지정된 된 집합 인수가 비어 있지 않은 인지를 결정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-287">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that determines whether the specified set argument is non-empty.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-288">새 <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> 새 적용할 <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> 지정 된 인수를 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-288">A new <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> applied to a new <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> with the specified argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-289"><paramref name="argument" />가 null인 경우</span><span class="sxs-lookup"><span data-stu-id="8a9c3-289"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-290"><paramref name="argument" />에 컬렉션 결과 형식이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-290"><paramref name="argument" /> does not have a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="False">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbConstantExpression False { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Data.Common.CommandTrees.DbConstantExpression False" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property False As DbConstantExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Data::Common::CommandTrees::DbConstantExpression ^ False { System::Data::Common::CommandTrees::DbConstantExpression ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.False : System.Data.Common.CommandTrees.DbConstantExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbConstantExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a9c3-291">가져옵니다를 <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> 부울 값을 사용 하 여 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-291">Gets a <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the Boolean value <see langword="false" />.</span></span></summary>
        <value><span data-ttu-id="8a9c3-292">A <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> 부울 값을 사용 하 여 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-292">A <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the Boolean value <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFilterExpression Filter (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFilterExpression Filter(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpression predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Filter (input As DbExpressionBinding, predicate As DbExpression) As DbFilterExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFilterExpression ^ Filter(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpression ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Filter : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFilterExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter (input, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFilterExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="predicate" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="8a9c3-293">입력된 집합을 지정 하는 식 바인딩입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-293">An expression binding that specifies the input set.</span></span></param>
        <param name="predicate"><span data-ttu-id="8a9c3-294">입력된 집합의 각 멤버에 대해 평가할 조건자를 나타내는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-294">An expression representing a predicate to evaluate for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="8a9c3-295">새 <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> 주어진된 입력 지정된 된 조건자를 사용 하 여 집합의 요소를 필터링 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-295">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> that filters the elements in the given input set using the specified predicate.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-296">필터링 된 집합을 생성 하는 새 DbFilterExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-296">A new DbFilterExpression that produces the filtered set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-297"><paramref name="input" /> 또는 <paramref name="predicate" />이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-297"><paramref name="input" /> or <paramref name="predicate" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-298"><paramref name="predicate" />에 부울 결과 형식이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-298"><paramref name="predicate" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FullOuterJoin">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8a9c3-299">FullOuterJoin을 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />로 사용하여 지정된 조인 조건에서 왼쪽 및 오른쪽 식으로 지정된 집합을 조인하는 새 <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-299">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using FullOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FullOuterJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FullOuterJoin (left As DbExpression, right As DbExpression, joinCondition As Func(Of DbExpression, DbExpression, DbExpression)) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ FullOuterJoin(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ joinCondition);" />
      <MemberSignature Language="F#" Value="static member FullOuterJoin : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin (left, right, joinCondition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="joinCondition" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="8a9c3-300">왼쪽 집합 인수를 지정하는 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-300">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="8a9c3-301">오른쪽 집합 인수를 지정하는 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-301">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the right set argument.</span></span></param>
        <param name="joinCondition"><span data-ttu-id="8a9c3-302">조인할 조건을 나타내는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-302">A method representing the condition on which to join.</span></span> <span data-ttu-id="8a9c3-303">이 메서드는 조인 조건의 논리를 제공하는 Boolean 결과 형식이 포함된 식을 생성해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-303">This method must produce an expression with a Boolean result type that provides the logic of the join condition.</span></span></param>
        <summary><span data-ttu-id="8a9c3-304">FullOuterJoin을 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />로 사용하여 지정된 조인 조건에서 왼쪽 및 오른쪽 식으로 지정된 집합을 조인하는 새 <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-304">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using FullOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-305">지정된 조인 조건에서 왼쪽 및 오른쪽 입력 집합에 적용된 전체 외부 조인 작업을 나타내는, FullOuterJoin의 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />를 사용하는 새 DbJoinExpression입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-305">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of FullOuterJoin, that represents the full outer join operation applied to the left and right input sets under the given join condition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-306"><paramref name="joinCondition" />에서 생성된 식이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-306">The expression produced by <paramref name="joinCondition" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-307"><paramref name="joinCondition" />에서 생성된 식에 부울 결과 형식이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-307">The expression produced by <paramref name="joinCondition" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FullOuterJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin(class System.Data.Common.CommandTrees.DbExpressionBinding left, class System.Data.Common.CommandTrees.DbExpressionBinding right, class System.Data.Common.CommandTrees.DbExpression joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FullOuterJoin (left As DbExpressionBinding, right As DbExpressionBinding, joinCondition As DbExpression) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ FullOuterJoin(System::Data::Common::CommandTrees::DbExpressionBinding ^ left, System::Data::Common::CommandTrees::DbExpressionBinding ^ right, System::Data::Common::CommandTrees::DbExpression ^ joinCondition);" />
      <MemberSignature Language="F#" Value="static member FullOuterJoin : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin (left, right, joinCondition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpressionBinding" />
        <Parameter Name="joinCondition" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="8a9c3-308"><see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> 왼쪽 집합 인수를 지정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-308">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="8a9c3-309"><see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> 오른쪽 집합 인수를 지정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-309">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the right set argument.</span></span></param>
        <param name="joinCondition"><span data-ttu-id="8a9c3-310">조인할 조건을 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-310">An expression that specifies the condition on which to join.</span></span></param>
        <summary><span data-ttu-id="8a9c3-311">새로 만듭니다 <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> 왼쪽 및 오른쪽 식 바인딩에 지정 된 조인 조건에서 FullOuterJoin으로를 사용 하 여 지정 된 집합을 조인 하는 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-311">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expression bindings, on the specified join condition, using FullOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-312">지정된 조인 조건에서 왼쪽 및 오른쪽 입력 집합에 적용된 전체 외부 조인 작업을 나타내는, FullOuterJoin의 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />를 사용하는 새 DbJoinExpression입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-312">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of FullOuterJoin, that represents the full outer join operation applied to the left and right     input sets under the given join condition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-313"><paramref name="left" />하십시오 <paramref name="right" /> 또는 <paramref name="joinCondition" /> null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-313"><paramref name="left" />,  <paramref name="right" /> or <paramref name="joinCondition" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-314"><paramref name="joinCondition" />에서 생성된 식에 부울 결과 형식이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-314">The expression produced by <paramref name="joinCondition" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEntityRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbEntityRefExpression GetEntityRef (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbEntityRefExpression GetEntityRef(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEntityRef (argument As DbExpression) As DbEntityRefExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbEntityRefExpression ^ GetEntityRef(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member GetEntityRef : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbEntityRefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbEntityRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="8a9c3-315">엔터티를 제공 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-315">The expression that provides the entity.</span></span> <span data-ttu-id="8a9c3-316">이 식에 엔터티 결과 형식이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-316">This expression must have an entity result type.</span></span></param>
        <summary><span data-ttu-id="8a9c3-317">새 <see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" /> 구조적 형식의 지정 된 엔터티에 대 한 참조를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-317">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" /> that retrieves the ref of the specifed entity in structural form.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-318">지정 된 엔터티에 대 한 참조를 검색 하는 새 DbEntityRefExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-318">A new DbEntityRefExpression that retrieves a reference to the specified entity.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-319"><paramref name="argument" />가 null인 경우</span><span class="sxs-lookup"><span data-stu-id="8a9c3-319"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-320"><paramref name="argument" /> 엔터티 결과 형식이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-320"><paramref name="argument" /> does not have an entity result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetRefKey">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefKeyExpression GetRefKey (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefKeyExpression GetRefKey(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRefKey (argument As DbExpression) As DbRefKeyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefKeyExpression ^ GetRefKey(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member GetRefKey : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbRefKeyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefKeyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="8a9c3-321">참조를 제공 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-321">The expression that provides the reference.</span></span> <span data-ttu-id="8a9c3-322">이 식에는 참조 엔터티 요소 형식 가진 형식이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-322">This expression must have a reference Type with an Entity element type.</span></span></param>
        <summary><span data-ttu-id="8a9c3-323">새 <see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" /> 구조적 형식의 지정 된 참조 키 값을 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-323">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" /> that retrieves the key values of the specifed reference in structural form.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-324">지정한 참조의 키 값을 검색 하는 새 DbRefKeyExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-324">A new DbRefKeyExpression that retrieves the key values of the specified reference.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-325"><paramref name="argument" />가 null인 경우</span><span class="sxs-lookup"><span data-stu-id="8a9c3-325"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-326"><paramref name="argument" /> 참조 결과 형식이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-326"><paramref name="argument" /> does not have a reference result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GreaterThan">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression GreaterThan (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression GreaterThan(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GreaterThan (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ GreaterThan(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member GreaterThan : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbComparisonExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="8a9c3-327">왼쪽된 인수를 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-327">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="8a9c3-328">오른쪽 인수를 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-328">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="8a9c3-329">새 <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> 왼쪽된 인수가 오른쪽 인수 보다 큰지 여부를 결정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-329">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that determines whether the left argument is greater than the right argument.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-330">큼을 나타내는 새 DbComparisonExpression는-보다 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-330">A new DbComparisonExpression representing the greater-than comparison.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-331"><paramref name="left" /> 또는 <paramref name="right" />이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-331"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-332">일반적인 순서 비교 가능 결과 형식이 존재 하지 않습니다 <paramref name="left" /> 고 <paramref name="right" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-332">No common order-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression GreaterThanOrEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression GreaterThanOrEqual(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GreaterThanOrEqual (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ GreaterThanOrEqual(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member GreaterThanOrEqual : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbComparisonExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="8a9c3-333">왼쪽된 인수를 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-333">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="8a9c3-334">오른쪽 인수를 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-334">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="8a9c3-335">새 <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> 왼쪽된 인수가 오른쪽 인수 보다 크거나 같은 경우 인지를 결정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-335">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that determines whether the left argument is greater than or equal to the right argument.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-336">새 DbComparisonExpression 중 하나로 큰 또는 같음 비교를 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-336">A new DbComparisonExpression representing the greater-than-or-equal-to comparison.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-337"><paramref name="left" /> 또는 <paramref name="right" />이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-337"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-338">일반적인 순서 비교 가능 결과 형식이 존재 하지 않습니다 <paramref name="left" /> 고 <paramref name="right" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-338">No common order-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBind">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBind (this System.Data.Common.CommandTrees.DbExpression input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBind(class System.Data.Common.CommandTrees.DbExpression input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBind (input As DbExpression) As DbGroupExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbGroupExpressionBinding ^ GroupBind(System::Data::Common::CommandTrees::DbExpression ^ input);" />
      <MemberSignature Language="F#" Value="static member GroupBind : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbGroupExpressionBinding" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbGroupExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="8a9c3-339">바인딩할 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-339">The expression to bind.</span></span></param>
        <summary><span data-ttu-id="8a9c3-340">생성 된 변수 및 그룹 변수 이름을 사용 하 여 지정된 된 식을 바인딩하는 새 그룹 식 바인딩을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-340">Creates a new group expression binding that uses generated variable and group variable names to bind the given expression.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-341">지정된 된 식 및 생성 된 변수 이름 및 그룹 변수 이름을 사용 하 여 새 그룹 식 바인딩.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-341">A new group expression binding with the specified expression and a generated variable name and group variable name.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-342"><paramref name="input" />가 null인 경우</span><span class="sxs-lookup"><span data-stu-id="8a9c3-342"><paramref name="input" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-343"><paramref name="input" />에 컬렉션 결과 형식이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-343"><paramref name="input" /> does not have a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBindAs">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBindAs (this System.Data.Common.CommandTrees.DbExpression input, string varName, string groupVarName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBindAs(class System.Data.Common.CommandTrees.DbExpression input, string varName, string groupVarName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBindAs (input As DbExpression, varName As String, groupVarName As String) As DbGroupExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbGroupExpressionBinding ^ GroupBindAs(System::Data::Common::CommandTrees::DbExpression ^ input, System::String ^ varName, System::String ^ groupVarName);" />
      <MemberSignature Language="F#" Value="static member GroupBindAs : System.Data.Common.CommandTrees.DbExpression * string * string -&gt; System.Data.Common.CommandTrees.DbGroupExpressionBinding" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs (input, varName, groupVarName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbGroupExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="varName" Type="System.String" />
        <Parameter Name="groupVarName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="8a9c3-344">바인딩할 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-344">The expression to bind.</span></span></param>
        <param name="varName"><span data-ttu-id="8a9c3-345">바인딩에 대 한 사용 해야 하는 변수 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-345">The variable name that should be used for the binding.</span></span></param>
        <param name="groupVarName"><span data-ttu-id="8a9c3-346">새 그룹 식 바인딩입니다 group by 식에 사용 되는 경우 그룹 참조를 사용 해야 하는 변수 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-346">The variable name that should be used to refer to the group when the new group expression binding is used in a group-by expression.</span></span></param>
        <summary><span data-ttu-id="8a9c3-347">새 <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /> 지정 된 식을 바인딩하는 지정 된 변수 이름 및 그룹 변수 이름을 사용 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-347">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /> that uses the specified variable name and group variable names to bind the given expression.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-348">지정 된 식, 변수 이름 및 그룹 변수 이름을 사용 하 여 새 그룹 식 바인딩.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-348">A new group expression binding with the specified expression, variable name and group variable name.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-349"><paramref name="input" />하십시오 <paramref name="varName" /> 또는 <paramref name="groupVarName" /> null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-349"><paramref name="input" />,  <paramref name="varName" /> or <paramref name="groupVarName" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-350"><paramref name="input" />에 컬렉션 결과 형식이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-350"><paramref name="input" /> does not have a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbGroupByExpression GroupBy (this System.Data.Common.CommandTrees.DbGroupExpressionBinding input, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt;&gt; keys, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbAggregate&gt;&gt; aggregates);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbGroupByExpression GroupBy(class System.Data.Common.CommandTrees.DbGroupExpressionBinding input, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt;&gt; keys, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbAggregate&gt;&gt; aggregates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy (input As DbGroupExpressionBinding, keys As IEnumerable(Of KeyValuePair(Of String, DbExpression)), aggregates As IEnumerable(Of KeyValuePair(Of String, DbAggregate))) As DbGroupByExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbGroupByExpression ^ GroupBy(System::Data::Common::CommandTrees::DbGroupExpressionBinding ^ input, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt;&gt; ^ keys, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbAggregate ^&gt;&gt; ^ aggregates);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Data.Common.CommandTrees.DbGroupExpressionBinding * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbExpression&gt;&gt; * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbAggregate&gt;&gt; -&gt; System.Data.Common.CommandTrees.DbGroupByExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy (input, keys, aggregates)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbGroupByExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbGroupExpressionBinding" RefType="this" />
        <Parameter Name="keys" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;&gt;" />
        <Parameter Name="aggregates" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbAggregate&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="8a9c3-351"><see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /> 입력된 집합을 지정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-351">A <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /> that specifies the input set.</span></span></param>
        <param name="keys"><span data-ttu-id="8a9c3-352">그룹화 열을 정의 하는 문자열 식 쌍의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-352">A list of string-expression pairs that define the grouping columns.</span></span></param>
        <param name="aggregates"><span data-ttu-id="8a9c3-353">적용할 집계를 지정 하는 식의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-353">A list of expressions that specify aggregates to apply.</span></span></param>
        <summary><span data-ttu-id="8a9c3-354">새 <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" /> 입력 지정된 된 그룹 키에 따라 집합의 요소를 그룹화 하 고 지정 된 집계를 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-354">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" /> that groups the elements of the input set according to the specified group keys and applies the given aggregates.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-355">지정 된 입력된 집합, 그룹화 키 및 집계를 사용 하 여 새 DbGroupByExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-355">A new DbGroupByExpression with the specified input set, grouping keys and aggregates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a9c3-356">DbGroupByExpression 키 목록을 또는 비워 집계 목록 둘 다를 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-356">DbGroupByExpression allows either the list of keys or the list of aggregates to be empty, but not both.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-357"><paramref name="input" />를 <paramref name="keys" /> 또는 <paramref name="aggregates" /> 가 null <paramref name="keys" /> 식이나 null 열 키를 포함 또는 <paramref name="aggregates" /> null 집계 열 이름 또는 집계가 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-357"><paramref name="input" />,  <paramref name="keys" /> or <paramref name="aggregates" /> is null,  <paramref name="keys" /> contains a null column key or expression, or <paramref name="aggregates" /> contains a null aggregate column name or aggregate.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-358">둘 다 <paramref name="keys" /> 고 <paramref name="aggregates" /> 비어 있거나 잘못 되었거나 중복 된 열 이름이 지정 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-358">Both <paramref name="keys" /> and <paramref name="aggregates" /> are empty, or an invalid or duplicate column name was specified.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="InnerJoin">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8a9c3-359">새로 만듭니다 <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> InnerJoin을 사용 하 여 지정 된 조인 조건에서 왼쪽 및 오른쪽 식에 지정 된 집합을 조인 하는 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-359">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InnerJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression InnerJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression InnerJoin(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function InnerJoin (left As DbExpression, right As DbExpression, joinCondition As Func(Of DbExpression, DbExpression, DbExpression)) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ InnerJoin(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ joinCondition);" />
      <MemberSignature Language="F#" Value="static member InnerJoin : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin (left, right, joinCondition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="joinCondition" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="8a9c3-360">왼쪽 집합 인수를 지정하는 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-360">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="8a9c3-361">오른쪽 집합 인수를 지정하는 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-361">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the right set argument.</span></span></param>
        <param name="joinCondition"><span data-ttu-id="8a9c3-362">조인할 조건을 나타내는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-362">A method representing the condition on which to join.</span></span> <span data-ttu-id="8a9c3-363">이 메서드는 조인 조건의 논리를 제공하는 Boolean 결과 형식이 포함된 식을 생성해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-363">This method must produce an expression with a Boolean result type that provides the logic of the join condition.</span></span></param>
        <summary><span data-ttu-id="8a9c3-364">새로 만듭니다 <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> InnerJoin을 사용 하 여 지정 된 조인 조건에서 왼쪽 및 오른쪽 식에 지정 된 집합을 조인 하는 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-364">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-365">새 DbJoinExpression을 사용 하 여는 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> 지정된 된 조인 조건에서 왼쪽 및 오른쪽 입력된 집합에 적용 되는 내부 조인 연산을 나타내는 InnerJoin의 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-365">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of InnerJoin, that represents the inner join operation applied to the left and right input sets under the given join condition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-366"><paramref name="joinCondition" />에서 생성된 식이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-366">The expression produced by <paramref name="joinCondition" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-367"><paramref name="joinCondition" />에서 생성된 식에 부울 결과 형식이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-367">The expression produced by <paramref name="joinCondition" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InnerJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression InnerJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression InnerJoin(class System.Data.Common.CommandTrees.DbExpressionBinding left, class System.Data.Common.CommandTrees.DbExpressionBinding right, class System.Data.Common.CommandTrees.DbExpression joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function InnerJoin (left As DbExpressionBinding, right As DbExpressionBinding, joinCondition As DbExpression) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ InnerJoin(System::Data::Common::CommandTrees::DbExpressionBinding ^ left, System::Data::Common::CommandTrees::DbExpressionBinding ^ right, System::Data::Common::CommandTrees::DbExpression ^ joinCondition);" />
      <MemberSignature Language="F#" Value="static member InnerJoin : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin (left, right, joinCondition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpressionBinding" />
        <Parameter Name="joinCondition" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="8a9c3-368"><see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> 왼쪽 집합 인수를 지정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-368">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="8a9c3-369"><see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> 오른쪽 집합 인수를 지정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-369">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the right set argument.</span></span></param>
        <param name="joinCondition"><span data-ttu-id="8a9c3-370">조인할 조건을 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-370">An expression that specifies the condition on which to join.</span></span></param>
        <summary><span data-ttu-id="8a9c3-371">새로 만듭니다 <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> 왼쪽 및 오른쪽 식 바인딩에 지정 된 조인 조건에서 InnerJoin을 사용 하 여 지정 된 집합을 조인 하는 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-371">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expression bindings, on the specified join condition, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-372">지정된 조인 조건에서 왼쪽 및 오른쪽 입력 집합에 적용된 내부 조인 작업을 나타내는, InnerJoin의 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />를 사용하는 새 DbJoinExpression입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-372">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of InnerJoin, that represents the inner join operation applied to the left and right     input sets under the given join condition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-373"><paramref name="left" />하십시오 <paramref name="right" /> 또는 <paramref name="joinCondition" /> null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-373"><paramref name="left" />,  <paramref name="right" /> or <paramref name="joinCondition" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-374"><paramref name="joinCondition" />에 부울 결과 형식이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-374"><paramref name="joinCondition" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIntersectExpression Intersect (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIntersectExpression Intersect(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Intersect (left As DbExpression, right As DbExpression) As DbIntersectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIntersectExpression ^ Intersect(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Intersect : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbIntersectExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIntersectExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="8a9c3-375">왼쪽을 정의 하는 식 인수를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-375">An expression that defines the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="8a9c3-376">오른쪽을 정의 하는 식 인수를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-376">An expression that defines the right set argument.</span></span></param>
        <summary><span data-ttu-id="8a9c3-377">새 <see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" /> 왼쪽의 교집합을 계산 하 고 오른쪽 인수를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-377">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" /> that computes the intersection of the left and right set arguments.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-378">왼쪽 및 오른쪽 인수의 교집합을 나타내는 새 DbIntersectExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-378">A new DbIntersectExpression that represents the intersection of the left and right arguments.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-379"><paramref name="left" /> 또는 <paramref name="right" />이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-379"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-380">공통 컬렉션 결과 형식이 존재 하지 않습니다 <paramref name="left" /> 또는 <paramref name="right" />합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-380">No common collection result type exists between <paramref name="left" /> or <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invoke">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8a9c3-381">새 <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> 지정 된 인수에 지정 된 람다 함수의 응용 프로그램을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-381">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> representing the application of the specified Lambda function to the given arguments.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambdaExpression Invoke (this System.Data.Common.CommandTrees.DbLambda lambda, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambdaExpression Invoke(class System.Data.Common.CommandTrees.DbLambda lambda, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Invoke (lambda As DbLambda, arguments As IEnumerable(Of DbExpression)) As DbLambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLambdaExpression ^ Invoke(System::Data::Common::CommandTrees::DbLambda ^ lambda, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member Invoke : System.Data.Common.CommandTrees.DbLambda * seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbLambdaExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke (lambda, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lambda" Type="System.Data.Common.CommandTrees.DbLambda" RefType="this" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="lambda"><span data-ttu-id="8a9c3-382"><see cref="T:System.Data.Common.CommandTrees.DbLambda" /> 적용할 람다 함수를 나타내는 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-382">A <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> instance representing the Lambda function to apply.</span></span></param>
        <param name="arguments"><span data-ttu-id="8a9c3-383">목록 인수를 제공 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-383">A list of expressions that provide the arguments.</span></span></param>
        <summary><span data-ttu-id="8a9c3-384">새 <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> 지정 된 인수에 지정 된 람다 함수의 응용 프로그램을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-384">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> representing the application of the specified Lambda function to the given arguments.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-385">람다 함수 응용 프로그램을 나타내는 하는 새 DbLambdaExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-385">A new DbLambdaExpression representing the Lambda function application.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-386"><paramref name="lambda" /> 또는 <paramref name="arguments" />이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-386"><paramref name="lambda" /> or <paramref name="arguments" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-387">수가 <paramref name="arguments" /> 에서 선언 된 변수의 수와 같지 않습니다 <paramref name="lambda" />, 또는 <paramref name="arguments" /> 해당 변수 형식과 승격 가능한 결과 형식이 있는 식을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-387">The count of <paramref name="arguments" /> does not equal the number of variables declared by <paramref name="lambda" />, or <paramref name="arguments" /> contains an expression that has a result type that is not equal or promotable to the corresponding variable type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambdaExpression Invoke (this System.Data.Common.CommandTrees.DbLambda lambda, params System.Data.Common.CommandTrees.DbExpression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambdaExpression Invoke(class System.Data.Common.CommandTrees.DbLambda lambda, class System.Data.Common.CommandTrees.DbExpression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Invoke (lambda As DbLambda, ParamArray arguments As DbExpression()) As DbLambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLambdaExpression ^ Invoke(System::Data::Common::CommandTrees::DbLambda ^ lambda, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member Invoke : System.Data.Common.CommandTrees.DbLambda * System.Data.Common.CommandTrees.DbExpression[] -&gt; System.Data.Common.CommandTrees.DbLambdaExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke (lambda, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lambda" Type="System.Data.Common.CommandTrees.DbLambda" RefType="this" />
        <Parameter Name="arguments" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="lambda"><span data-ttu-id="8a9c3-388"><see cref="T:System.Data.Common.CommandTrees.DbLambda" /> 적용할 람다 함수를 나타내는 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-388">A <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> instance representing the Lambda function to apply.</span></span></param>
        <param name="arguments"><span data-ttu-id="8a9c3-389">인수를 제공 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-389">Expressions that provide the arguments.</span></span></param>
        <summary><span data-ttu-id="8a9c3-390">새 <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> 지정 된 인수에 지정 된 람다 함수의 응용 프로그램을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-390">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> representing the application of the specified Lambda function to the given arguments.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-391">람다 함수 응용 프로그램을 나타내는 하는 새 DbLambdaExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-391">A new DbLambdaExpression representing the Lambda function application.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-392"><paramref name="lambda" /> 또는 <paramref name="arguments" />이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-392"><paramref name="lambda" /> or <paramref name="arguments" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-393">수가 <paramref name="arguments" /> 에서 선언 된 변수의 수와 같지 않습니다 <paramref name="lambda" />, 또는 <paramref name="arguments" /> 해당 변수 형식과 승격 가능한 결과 형식이 있는 식을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-393">The count of <paramref name="arguments" /> does not equal the number of variables declared by <paramref name="lambda" />, or <paramref name="arguments" /> contains an expression that has a result type that is not equal or promotable to the corresponding variable type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Invoke (this System.Data.Metadata.Edm.EdmFunction function, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Invoke(class System.Data.Metadata.Edm.EdmFunction function, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Invoke (function As EdmFunction, arguments As IEnumerable(Of DbExpression)) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Invoke(System::Data::Metadata::Edm::EdmFunction ^ function, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member Invoke : System.Data.Metadata.Edm.EdmFunction * seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke (function, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Data.Metadata.Edm.EdmFunction" RefType="this" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="function"><span data-ttu-id="8a9c3-394">호출할 함수의 메타데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-394">Metadata for the function to invoke.</span></span></param>
        <param name="arguments"><span data-ttu-id="8a9c3-395">함수에 인수를 제공 하는 식의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-395">A list of expressions that provide the arguments to the function.</span></span></param>
        <summary><span data-ttu-id="8a9c3-396">지정된 인수를 사용하여 지정된 함수의 호출을 나타내는 새 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-396">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> representing the invocation of the specified function with the given arguments.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-397">함수 호출을 나타내는 새 DbFunctionExpression입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-397">A new DbFunctionExpression representing the function invocation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-398"><paramref name="function" />이 null이거나 <paramref name="arguments" />가 null이거나 null을 포함하는 경우</span><span class="sxs-lookup"><span data-stu-id="8a9c3-398"><paramref name="function" /> is null, or <paramref name="arguments" /> is null or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-399"><paramref name="arguments" />의 개수가 <paramref name="function" />에서 선언된 매개 변수의 수와 같지 않거나 <paramref name="arguments" />에 해당 함수 매개 변수 형식과 같지 않거나 해당 매개 변수 형식으로 승격할 수 없는 결과 형식의 식이 포함되어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="8a9c3-399">The count of <paramref name="arguments" /> does not equal the number of parameters declared by <paramref name="function" />, or <paramref name="arguments" /> contains an expression that has a result type that is not equal or promotable to the corresponding function parameter type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Invoke (this System.Data.Metadata.Edm.EdmFunction function, params System.Data.Common.CommandTrees.DbExpression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Invoke(class System.Data.Metadata.Edm.EdmFunction function, class System.Data.Common.CommandTrees.DbExpression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Invoke (function As EdmFunction, ParamArray arguments As DbExpression()) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Invoke(System::Data::Metadata::Edm::EdmFunction ^ function, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member Invoke : System.Data.Metadata.Edm.EdmFunction * System.Data.Common.CommandTrees.DbExpression[] -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke (function, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Data.Metadata.Edm.EdmFunction" RefType="this" />
        <Parameter Name="arguments" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="function"><span data-ttu-id="8a9c3-400">호출할 함수의 메타데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-400">Metadata for the function to invoke.</span></span></param>
        <param name="arguments"><span data-ttu-id="8a9c3-401">함수에 인수를 제공하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-401">Expressions that provide the arguments to the function.</span></span></param>
        <summary><span data-ttu-id="8a9c3-402">지정된 인수를 사용하여 지정된 함수의 호출을 나타내는 새 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-402">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> representing the invocation of the specified function with the given arguments.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-403">함수 호출을 나타내는 새 DbFunctionExpression입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-403">A new DbFunctionExpression representing the function invocation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-404"><paramref name="function" />이 null이거나 <paramref name="arguments" />가 null이거나 null을 포함하는 경우</span><span class="sxs-lookup"><span data-stu-id="8a9c3-404"><paramref name="function" /> is null, or <paramref name="arguments" /> is null or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-405"><paramref name="arguments" />의 개수가 <paramref name="function" />에서 선언된 매개 변수의 수와 같지 않거나 <paramref name="arguments" />에 해당 함수 매개 변수 형식과 같지 않거나 해당 매개 변수 형식으로 승격할 수 없는 결과 형식의 식이 포함되어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="8a9c3-405">The count of <paramref name="arguments" /> does not equal the number of parameters declared by <paramref name="function" />, or <paramref name="arguments" /> contains an expression that has a result type that is not equal or promotable to the corresponding function parameter type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIsEmptyExpression IsEmpty (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIsEmptyExpression IsEmpty(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsEmpty (argument As DbExpression) As DbIsEmptyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIsEmptyExpression ^ IsEmpty(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member IsEmpty : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbIsEmptyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIsEmptyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="8a9c3-406">입력된 집합을 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-406">An expression that specifies the input set.</span></span></param>
        <summary><span data-ttu-id="8a9c3-407">새 <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> 지정된 된 집합 인수가 빈 집합 인지를 결정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-407">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> that determines whether the specified set argument is an empty set.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-408">지정 된 인수를 사용 하 여 새 DbIsEmptyExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-408">A new DbIsEmptyExpression with the specified argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-409"><paramref name="argument" />가 null인 경우</span><span class="sxs-lookup"><span data-stu-id="8a9c3-409"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-410"><paramref name="argument" />에 컬렉션 결과 형식이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-410"><paramref name="argument" /> does not have a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIsNullExpression IsNull (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIsNullExpression IsNull(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsNull (argument As DbExpression) As DbIsNullExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIsNullExpression ^ IsNull(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member IsNull : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbIsNullExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIsNullExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="8a9c3-411">인수를 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-411">An expression that specifies the argument.</span></span></param>
        <summary><span data-ttu-id="8a9c3-412">새 <see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" /> 지정된 된 인수가 null 인지 여부를 결정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-412">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" /> that determines whether the specified argument is null.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-413">지정 된 인수를 사용 하 여 새 DbIsNullExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-413">A new DbIsNullExpression with the specified argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-414"><paramref name="argument" />가 null인 경우</span><span class="sxs-lookup"><span data-stu-id="8a9c3-414"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-415"><paramref name="argument" /> 컬렉션 결과 형식이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-415"><paramref name="argument" /> has a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsOf">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIsOfExpression IsOf (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIsOfExpression IsOf(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsOf (argument As DbExpression, type As TypeUsage) As DbIsOfExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIsOfExpression ^ IsOf(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ type);" />
      <MemberSignature Language="F#" Value="static member IsOf : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbIsOfExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf (argument, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIsOfExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="8a9c3-416">인스턴스를 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-416">An expression that specifies the instance.</span></span></param>
        <param name="type"><span data-ttu-id="8a9c3-417">인스턴스의 결과 형식을 비교할 형식을 지정 하는 메타 데이터를 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-417">Type metadata that specifies the type that the instance's result type should be compared to.</span></span></param>
        <summary><span data-ttu-id="8a9c3-418">새 <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> 주어진된 인수가 지정된 된 형식 또는 하위 형식 인지 여부를 결정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-418">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> that determines whether the given argument is of the specified type or a subtype.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-419">지정 된 인스턴스 및 형식과 DbExpressionKind IsOf를 사용 하 여 새 DbIsOfExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-419">A new DbIsOfExpression with the specified instance and type and DbExpressionKind IsOf.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a9c3-420">DbIsOfExpression 있어야 `argument` 다형 결과 형식이, 그리고 `type` 해당 결과 형식과 동일한 형식 계층 구조의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-420">DbIsOfExpression requires that `argument` has a polymorphic result type, and that `type` is a type from the same type hierarchy as that result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-421"><paramref name="argument" /> 또는 <paramref name="type" />이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-421"><paramref name="argument" /> or <paramref name="type" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-422"><paramref name="type" /> 결과 형식과 동일한 형식 계층 구조에 없는 <paramref name="argument" />합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-422"><paramref name="type" /> is not in the same type hierarchy as the result type of <paramref name="argument" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsOfOnly">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIsOfExpression IsOfOnly (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIsOfExpression IsOfOnly(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsOfOnly (argument As DbExpression, type As TypeUsage) As DbIsOfExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIsOfExpression ^ IsOfOnly(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ type);" />
      <MemberSignature Language="F#" Value="static member IsOfOnly : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbIsOfExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly (argument, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIsOfExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="8a9c3-423">인스턴스를 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-423">An expression that specifies the instance.</span></span></param>
        <param name="type"><span data-ttu-id="8a9c3-424">인스턴스의 결과 형식을 비교할 형식을 지정 하는 메타 데이터를 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-424">Type metadata that specifies the type that the instance's result type should be compared to.</span></span></param>
        <summary><span data-ttu-id="8a9c3-425">새 <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> 결정 하는 식이 지정된 된 형식 및 해당 형식 (하위 없습니다)만 지정 된 인수 인지 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-425">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> expression that determines whether the given argument is of the specified type, and only that type (not a subtype).</span></span></summary>
        <returns><span data-ttu-id="8a9c3-426">지정 된 인스턴스 및 형식과 DbExpressionKind IsOfOnly를 사용 하 여 새 DbIsOfExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-426">A new DbIsOfExpression with the specified instance and type and DbExpressionKind IsOfOnly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a9c3-427">DbIsOfExpression 있어야 `argument` 다형 결과 형식이, 그리고 `type` 해당 결과 형식과 동일한 형식 계층 구조의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-427">DbIsOfExpression requires that `argument` has a polymorphic result type, and that `type` is a type from the same type hierarchy as that result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-428"><paramref name="argument" /> 또는 <paramref name="type" />이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-428"><paramref name="argument" /> or <paramref name="type" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-429"><paramref name="type" /> 결과 형식과 동일한 형식 계층 구조에 없는 <paramref name="argument" />합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-429"><paramref name="type" /> is not in the same type hierarchy as the result type of <paramref name="argument" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression Join (this System.Data.Common.CommandTrees.DbExpression outer, System.Data.Common.CommandTrees.DbExpression inner, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; outerKey, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; innerKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression Join(class System.Data.Common.CommandTrees.DbExpression outer, class System.Data.Common.CommandTrees.DbExpression inner, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; outerKey, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; innerKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Join (outer As DbExpression, inner As DbExpression, outerKey As Func(Of DbExpression, DbExpression), innerKey As Func(Of DbExpression, DbExpression)) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ Join(System::Data::Common::CommandTrees::DbExpression ^ outer, System::Data::Common::CommandTrees::DbExpression ^ inner, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ outerKey, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ innerKey);" />
      <MemberSignature Language="F#" Value="static member Join : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join (outer, inner, outerKey, innerKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outer" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="inner" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="outerKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="innerKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="outer"><span data-ttu-id="8a9c3-430">외부 집합 인수를 지정하는 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-430">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the outer set argument.</span></span></param>
        <param name="inner"><span data-ttu-id="8a9c3-431">내부 집합 인수를 지정하는 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-431">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the inner set argument.</span></span></param>
        <param name="outerKey"><span data-ttu-id="8a9c3-432">외부 집합의 요소에서 외부 키 값이 파생되는 방법을 지정하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-432">A method that specifies how the outer key value should be derived from an element of the outer set.</span></span></param>
        <param name="innerKey"><span data-ttu-id="8a9c3-433">내부 집합의 요소에서 내부 키 값이 파생되는 방법을 지정하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-433">A method that specifies how the inner key value should be derived from an element of the inner set.</span></span></param>
        <summary><span data-ttu-id="8a9c3-434">지정된 외부 및 내부 키 간에 같음 조건으로 외부 및 내부 식에 지정된 집합에 조인되고 InnerJoin을 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />로 사용하는 새 <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-434">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the outer and inner expressions, on an equality condition between the specified outer and inner keys, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-435">외부 키 값과 내부 키 값이 같은지 비교하는 조인 조건에 따라 왼쪽 및 오른쪽 입력 집합에 적용되는 내부 조인 연산을 나타내는 InnerJoin의 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />를 사용하는 새 DbJoinExpression입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-435">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of InnerJoin, that represents the inner join operation applied to the left and right input sets under a join condition that compares the outer and inner key values for equality.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-436"><paramref name="outerKey" /> 또는 <paramref name="innerKey" />에서 생성된 식이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-436">The expression produced by <paramref name="outerKey" /> or <paramref name="innerKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-437"><paramref name="outerKey" /> 및 <paramref name="innerKey" />에서 생성된 식이 같은지 비교할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-437">The expressions produced by <paramref name="outerKey" /> and <paramref name="innerKey" /> are not comparable for equality.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Join&lt;TSelector&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression Join&lt;TSelector&gt; (this System.Data.Common.CommandTrees.DbExpression outer, System.Data.Common.CommandTrees.DbExpression inner, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; outerKey, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; innerKey, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression Join&lt;TSelector&gt;(class System.Data.Common.CommandTrees.DbExpression outer, class System.Data.Common.CommandTrees.DbExpression inner, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; outerKey, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; innerKey, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, !!TSelector&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Join(Of TSelector) (outer As DbExpression, inner As DbExpression, outerKey As Func(Of DbExpression, DbExpression), innerKey As Func(Of DbExpression, DbExpression), selector As Func(Of DbExpression, DbExpression, TSelector)) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSelector&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ Join(System::Data::Common::CommandTrees::DbExpression ^ outer, System::Data::Common::CommandTrees::DbExpression ^ inner, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ outerKey, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ innerKey, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, TSelector&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Join : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression, 'Selector&gt; -&gt; System.Data.Common.CommandTrees.DbProjectExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join (outer, inner, outerKey, innerKey, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSelector" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="inner" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="outerKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="innerKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="selector" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSelector"><span data-ttu-id="8a9c3-438"><paramref name="selector" />의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-438">The type of the <paramref name="selector" />.</span></span></typeparam>
        <param name="outer"><span data-ttu-id="8a9c3-439">외부 집합 인수를 지정하는 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-439">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the outer set argument.</span></span></param>
        <param name="inner"><span data-ttu-id="8a9c3-440">내부 집합 인수를 지정하는 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-440">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the inner set argument.</span></span></param>
        <param name="outerKey"><span data-ttu-id="8a9c3-441">외부 집합의 요소에서 외부 키 값이 파생되는 방법을 지정하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-441">A method that specifies how the outer key value should be derived from an element of the outer set.</span></span></param>
        <param name="innerKey"><span data-ttu-id="8a9c3-442">내부 집합의 요소에서 내부 키 값이 파생되는 방법을 지정하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-442">A method that specifies how the inner key value should be derived from an element of the inner set.</span></span></param>
        <param name="selector"><span data-ttu-id="8a9c3-443">내부 및 외부 집합의 요소에서 결과 집합의 요소가 파생되는 방법을 지정하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-443">A method that specifies how an element of the result set should be derived from elements of the inner and outer sets.</span></span> <span data-ttu-id="8a9c3-444">이 메서드는 조인과 호환되는 형식의 인스턴스를 생성해야 하며 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />로 확인될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-444">This method must produce an instance of a type that is compatible with Join and can be resolved into a <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span></span> <span data-ttu-id="8a9c3-445"><c>TSelector</c>에 대한 호환성 요구 사항은 설명 단원에 나와 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-445">Compatibility requirements for <c>TSelector</c> are described in remarks.</span></span></param>
        <summary><span data-ttu-id="8a9c3-446">외부 및 내부 식에 지정되고 지정된 외부 및 내부 키 간에 같음 조건으로 조인된 집합에 InnerJoin을 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />로 사용하여 지정된 선택기를 화면에 표시하는 새 <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" />을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-446">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> that projects the specified selector over the sets specified by the outer and inner expressions, joined on an equality condition between the specified outer and inner keys, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-447">지정된 선택기를 프로젝션으로 사용하여 새 DbJoinExpression을 해당 입력으로 사용하는 새 DbProjectExpression입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-447">A new DbProjectExpression with the specified selector as its projection, and a new DbJoinExpression as its input.</span></span> <span data-ttu-id="8a9c3-448">입력 DbJoinExpression은 외부 키 값과 내부 키 값이 같은지 비교하는 조인 조건에 따라 왼쪽 및 오른쪽 입력 집합에 적용되는 내부 조인 연산을 나타내는 InnerJoin의 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />로 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-448">The input DbJoinExpression is created with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of InnerJoin, that represents the inner join operation applied to the left and right input sets under a join condition that compares the outer and inner key values for equality.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a9c3-449">조인과 호환 되도록 `TSelector` 에서 파생 되어야 합니다 <xref:System.Data.Common.CommandTrees.DbExpression>, 또는 DbExpression 파생 속성이 있는 익명 형식 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-449">To be compatible with Join, `TSelector` must be derived from <xref:System.Data.Common.CommandTrees.DbExpression>,     or must be an anonymous type with DbExpression-derived properties.</span></span> <span data-ttu-id="8a9c3-450">에 대 한 지원 되는 형식의 예는 `TSelector`:</span><span class="sxs-lookup"><span data-stu-id="8a9c3-450">The following are examples of supported types for `TSelector`:</span></span>  
  
```  
outer.Join(inner, o => o.Property("ID"), i => i.Property("ID"), (o, i) => o.Property("Name"))  
```  
  
 <span data-ttu-id="8a9c3-451">(`TSelector` 는 <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span><span class="sxs-lookup"><span data-stu-id="8a9c3-451">(`TSelector` is <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span></span>  
  
```  
outer.Join(inner, o => o.Property("ID"), i => i.Property("ID"), (o, i) => new { OName = o.Property("Name"), IName = i.Property("Name") })  
```  
  
 <span data-ttu-id="8a9c3-452">(`TSelector` 는 DbExpression 파생 속성이 있는 익명 형식).</span><span class="sxs-lookup"><span data-stu-id="8a9c3-452">(`TSelector` is an anonymous type with DbExpression-derived properties).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-453">DbExpression으로 변환한 후 <paramref name="selector" />의 결과가 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-453">The result of <paramref name="selector" /> is null after conversion to DbExpression.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-454"><paramref name="Selector" />의 결과가 SelectMany와 호환되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-454">The result of <paramref name="Selector" /> is not compatible with SelectMany.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Lambda">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8a9c3-455">지정된 인라인 람다 함수 구현 및 정식 매개 변수를 사용하여 <see cref="T:System.Data.Common.CommandTrees.DbLambda" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-455">Creates a <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> with the specified inline Lambda function implementation and formal parameters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambda Lambda (System.Data.Common.CommandTrees.DbExpression body, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt; variables);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambda Lambda(class System.Data.Common.CommandTrees.DbExpression body, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt; variables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Function Lambda (body As DbExpression, variables As IEnumerable(Of DbVariableReferenceExpression)) As DbLambda" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbLambda ^ Lambda(System::Data::Common::CommandTrees::DbExpression ^ body, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbVariableReferenceExpression ^&gt; ^ variables);" />
      <MemberSignature Language="F#" Value="static member Lambda : System.Data.Common.CommandTrees.DbExpression * seq&lt;System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt; -&gt; System.Data.Common.CommandTrees.DbLambda" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda (body, variables)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambda</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="variables" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="body"><span data-ttu-id="8a9c3-456">람다 함수의 논리를 정의 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-456">An expression that defines the logic of the Lambda function.</span></span></param>
        <param name="variables"><span data-ttu-id="8a9c3-457">람다 함수의 정식 매개 변수를 나타내는 <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-457">A <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> collection that represents the formal parameters to the Lambda function.</span></span> <span data-ttu-id="8a9c3-458">이러한 변수는에서 사용 하기에 적합 합니다 <paramref name="body" /> 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-458">These variables are valid for use in the <paramref name="body" /> expression.</span></span></param>
        <summary><span data-ttu-id="8a9c3-459">지정된 인라인 람다 함수 구현 및 정식 매개 변수를 사용하여 <see cref="T:System.Data.Common.CommandTrees.DbLambda" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-459">Creates a <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> with the specified inline Lambda function implementation and formal parameters.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-460">인라인 지정 된 본문 및 정식 매개 변수를 사용 하 여 람다 함수를 설명 하는 새 DbLambda입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-460">A new DbLambda that describes an inline Lambda function with the specified body and formal parameters.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-461"><paramref name="variables" /> 가 null 이거나 null을 포함 하거나 <paramref name="body" /> null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-461"><paramref name="variables" /> is null or contains null, or <paramref name="body" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-462"><paramref name="variables" /> 변수 이름이 같은 둘 이상의 요소가 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-462"><paramref name="variables" /> contains more than one element with the same variable name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambda Lambda (System.Data.Common.CommandTrees.DbExpression body, params System.Data.Common.CommandTrees.DbVariableReferenceExpression[] variables);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambda Lambda(class System.Data.Common.CommandTrees.DbExpression body, class System.Data.Common.CommandTrees.DbVariableReferenceExpression[] variables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Lambda (body As DbExpression, ParamArray variables As DbVariableReferenceExpression()) As DbLambda" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbLambda ^ Lambda(System::Data::Common::CommandTrees::DbExpression ^ body, ... cli::array &lt;System::Data::Common::CommandTrees::DbVariableReferenceExpression ^&gt; ^ variables);" />
      <MemberSignature Language="F#" Value="static member Lambda : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbVariableReferenceExpression[] -&gt; System.Data.Common.CommandTrees.DbLambda" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda (body, variables)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambda</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="variables" Type="System.Data.Common.CommandTrees.DbVariableReferenceExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="body"><span data-ttu-id="8a9c3-463">람다 함수의 논리를 정의 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-463">An expression that defines the logic of the Lambda function.</span></span></param>
        <param name="variables"><span data-ttu-id="8a9c3-464">람다 함수의 정식 매개 변수를 나타내는 <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-464">A <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> collection that represents the formal parameters to the Lambda function.</span></span> <span data-ttu-id="8a9c3-465">이러한 변수는에서 사용 하기에 적합 합니다 <paramref name="body" /> 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-465">These variables are valid for use in the <paramref name="body" /> expression.</span></span></param>
        <summary><span data-ttu-id="8a9c3-466">지정된 인라인 람다 함수 구현 및 정식 매개 변수를 사용하여 <see cref="T:System.Data.Common.CommandTrees.DbLambda" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-466">Creates a <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> with the specified inline Lambda function implementation and formal parameters.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-467">인라인 지정 된 본문 및 정식 매개 변수를 사용 하 여 람다 함수를 설명 하는 새 DbLambda입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-467">A new DbLambda that describes an inline Lambda function with the specified body and formal parameters.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-468"><paramref name="variables" /> 가 null 이거나 null을 포함 하거나 <paramref name="body" /> null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-468"><paramref name="variables" /> is null or contains null, or <paramref name="body" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-469"><paramref name="variables" /> 변수 이름이 같은 둘 이상의 요소가 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-469"><paramref name="variables" /> contains more than one element with the same variable name.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="LeftOuterJoin">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8a9c3-470">만듭니다 <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> LeftOuterJoin으로를 사용 하 여 지정 된 조인 조건에서 왼쪽 및 오른쪽 식에 지정 된 집합을 조인 하는 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-470">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using LeftOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LeftOuterJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LeftOuterJoin (left As DbExpression, right As DbExpression, joinCondition As Func(Of DbExpression, DbExpression, DbExpression)) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ LeftOuterJoin(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ joinCondition);" />
      <MemberSignature Language="F#" Value="static member LeftOuterJoin : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin (left, right, joinCondition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="joinCondition" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="8a9c3-471">왼쪽 집합 인수를 지정하는 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-471">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="8a9c3-472">오른쪽 집합 인수를 지정하는 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-472">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the right set argument.</span></span></param>
        <param name="joinCondition"><span data-ttu-id="8a9c3-473">조인할 조건을 나타내는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-473">A method representing the condition on which to join.</span></span> <span data-ttu-id="8a9c3-474">이 메서드는 조인 조건의 논리를 제공하는 Boolean 결과 형식이 포함된 식을 생성해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-474">This method must produce an expression with a Boolean result type that provides the logic of the join condition.</span></span></param>
        <summary><span data-ttu-id="8a9c3-475">만듭니다 <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> LeftOuterJoin으로를 사용 하 여 지정 된 조인 조건에서 왼쪽 및 오른쪽 식에 지정 된 집합을 조인 하는 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-475">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using LeftOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-476">새 DbJoinExpression와는 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> 의 지정된 된 조인 조건에서 왼쪽 및 오른쪽 입력된 집합에 적용 하는 왼쪽된 우선 외부 조인 작업을 나타내는, LeftOuterJoin 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-476">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of LeftOuterJoin, that represents the left outer join operation applied to the left and right input sets under the given join condition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-477"><paramref name="joinCondition" />에서 생성된 식이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-477">The expression produced by <paramref name="joinCondition" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-478"><paramref name="joinCondition" />에서 생성된 식에 부울 결과 형식이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-478">The expression produced by <paramref name="joinCondition" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LeftOuterJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin(class System.Data.Common.CommandTrees.DbExpressionBinding left, class System.Data.Common.CommandTrees.DbExpressionBinding right, class System.Data.Common.CommandTrees.DbExpression joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LeftOuterJoin (left As DbExpressionBinding, right As DbExpressionBinding, joinCondition As DbExpression) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ LeftOuterJoin(System::Data::Common::CommandTrees::DbExpressionBinding ^ left, System::Data::Common::CommandTrees::DbExpressionBinding ^ right, System::Data::Common::CommandTrees::DbExpression ^ joinCondition);" />
      <MemberSignature Language="F#" Value="static member LeftOuterJoin : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin (left, right, joinCondition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpressionBinding" />
        <Parameter Name="joinCondition" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="8a9c3-479"><see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> 왼쪽 집합 인수를 지정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-479">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="8a9c3-480"><see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> 오른쪽 집합 인수를 지정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-480">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the right set argument.</span></span></param>
        <param name="joinCondition"><span data-ttu-id="8a9c3-481">조인할 조건을 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-481">An expression that specifies the condition on which to join.</span></span></param>
        <summary><span data-ttu-id="8a9c3-482">새로 만듭니다 <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> 왼쪽 및 오른쪽 식 바인딩에 지정 된 조인 조건에서 LeftOuterJoin으로를 사용 하 여 지정 된 집합을 조인 하는 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-482">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expression bindings, on the specified join condition, using LeftOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-483">지정된 조인 조건에서 왼쪽 및 오른쪽 입력 집합에 적용된 왼쪽 외부 조인 작업을 나타내는, LeftOuterJoin의 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />를 사용하는 새 DbJoinExpression입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-483">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of LeftOuterJoin, that represents the left outer join operation applied to the left and right     input sets under the given join condition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-484"><paramref name="left" />하십시오 <paramref name="right" /> 또는 <paramref name="joinCondition" /> null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-484"><paramref name="left" />,  <paramref name="right" /> or <paramref name="joinCondition" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-485"><paramref name="joinCondition" />에 부울 결과 형식이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-485"><paramref name="joinCondition" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LessThan">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression LessThan (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression LessThan(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LessThan (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ LessThan(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member LessThan : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbComparisonExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="8a9c3-486">왼쪽된 인수를 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-486">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="8a9c3-487">오른쪽 인수를 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-487">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="8a9c3-488">새 <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> 왼쪽된 인수가 오른쪽 인수 보다 작은지 여부를 결정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-488">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that determines whether the left argument is less than the right argument.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-489">작음 나타내는 하는 새 DbComparisonExpression-보다 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-489">A new DbComparisonExpression representing the less-than comparison.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-490"><paramref name="left" /> 또는 <paramref name="right" />이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-490"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-491">일반적인 순서 비교 가능 결과 형식이 존재 하지 않습니다 <paramref name="left" /> 고 <paramref name="right" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-491">No common order-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression LessThanOrEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression LessThanOrEqual(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LessThanOrEqual (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ LessThanOrEqual(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member LessThanOrEqual : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbComparisonExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="8a9c3-492">왼쪽된 인수를 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-492">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="8a9c3-493">오른쪽 인수를 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-493">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="8a9c3-494">새 <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> 왼쪽된 인수가 오른쪽 인수 보다 작거나 인지 여부를 결정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-494">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that determines whether the left argument is less than or equal to the right argument.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-495">새 DbComparisonExpression 중 하나로 없는 보다-또는-같음 비교를 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-495">A new DbComparisonExpression representing the less-than-or-equal-to comparison.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-496"><paramref name="left" /> 또는 <paramref name="right" />이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-496"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-497">모두 같음 및 순서 호환 공통의 결과 형식이 없는 사이 존재 <paramref name="left" /> 고 <paramref name="right" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-497">No common result type that is both equality- and order-comparable exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Like">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8a9c3-498">새 <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> 지정된 된 입력된 문자열을 주어진된 패턴과 비교 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-498">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> that compares the specified input string to the given pattern.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Like">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLikeExpression Like (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLikeExpression Like(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Common.CommandTrees.DbExpression pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Like (argument As DbExpression, pattern As DbExpression) As DbLikeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLikeExpression ^ Like(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ pattern);" />
      <MemberSignature Language="F#" Value="static member Like : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbLikeExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like (argument, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLikeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="pattern" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="8a9c3-499">입력된 문자열을 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-499">An expression that specifies the input string.</span></span></param>
        <param name="pattern"><span data-ttu-id="8a9c3-500">패턴 문자열을 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-500">An expression that specifies the pattern string.</span></span></param>
        <summary><span data-ttu-id="8a9c3-501">새 <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> 지정된 된 입력된 문자열을 주어진된 패턴과 비교 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-501">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> that compares the specified input string to the given pattern.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-502">지정된 된 입력, 패턴 및 null 이스케이프를 사용 하 여 새 DbLikeExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-502">A new DbLikeExpression with the specified input, pattern and a null escape.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-503"><paramref name="Argument" /> 또는 <paramref name="pattern" />이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-503"><paramref name="Argument" /> or <paramref name="pattern" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-504"><paramref name="Argument" /> 또는 <paramref name="pattern" /> 문자열 결과 형식이 없는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-504"><paramref name="Argument" /> or <paramref name="pattern" /> does not have a string result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Like">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLikeExpression Like (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression pattern, System.Data.Common.CommandTrees.DbExpression escape);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLikeExpression Like(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Common.CommandTrees.DbExpression pattern, class System.Data.Common.CommandTrees.DbExpression escape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Like (argument As DbExpression, pattern As DbExpression, escape As DbExpression) As DbLikeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLikeExpression ^ Like(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ pattern, System::Data::Common::CommandTrees::DbExpression ^ escape);" />
      <MemberSignature Language="F#" Value="static member Like : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbLikeExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like (argument, pattern, escape)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLikeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="pattern" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="escape" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="8a9c3-505">입력된 문자열을 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-505">An expression that specifies the input string.</span></span></param>
        <param name="pattern"><span data-ttu-id="8a9c3-506">패턴 문자열을 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-506">An expression that specifies the pattern string.</span></span></param>
        <param name="escape"><span data-ttu-id="8a9c3-507">이스케이프 문자열을 지정 하는 선택적 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-507">An optional expression that specifies the escape string.</span></span></param>
        <summary><span data-ttu-id="8a9c3-508">새 <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> 선택적 이스케이프를 사용 하 여 지정 된 패턴에 지정된 된 입력된 문자열을 비교 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-508">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> that compares the specified input string to the given pattern using the optional escape.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-509">지정 된 입력, 패턴 및 이스케이프를 사용 하 여 새 DbLikeExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-509">A new DbLikeExpression with the specified input, pattern and escape.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-510"><paramref name="argument" />, <paramref name="pattern" /> 또는 <paramref name="escape" />이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-510"><paramref name="argument" />,   <paramref name="pattern" /> or <paramref name="escape" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-511"><paramref name="argument" />하십시오 <paramref name="pattern" /> 또는 <paramref name="escape" /> 문자열 결과 형식이 없는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-511"><paramref name="argument" />,   <paramref name="pattern" /> or <paramref name="escape" /> does not have a string result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Limit">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLimitExpression Limit (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLimitExpression Limit(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Common.CommandTrees.DbExpression count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Limit (argument As DbExpression, count As DbExpression) As DbLimitExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLimitExpression ^ Limit(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ count);" />
      <MemberSignature Language="F#" Value="static member Limit : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbLimitExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit (argument, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLimitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="count" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="8a9c3-512">입력 컬렉션을 지정하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-512">An expression that specifies the input collection.</span></span></param>
        <param name="count"><span data-ttu-id="8a9c3-513">제한 값을 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-513">An expression that specifies the limit value.</span></span></param>
        <summary><span data-ttu-id="8a9c3-514">새 <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> 지정 된 개수 제한 값 인수 컬렉션의 요소 수로 제한 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-514">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> that restricts the number of elements in the Argument collection to the specified count Limit value.</span></span> <span data-ttu-id="8a9c3-515">동급된 결과 출력에 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-515">Tied results are not included in the output.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-516">포함 하지 않는 개수 제한 값 및 지정 된 인수를 사용 하 여 새 DbLimitExpression 결과 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-516">A new DbLimitExpression with the specified argument and count limit values that does not include tied results.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-517"><paramref name="argument" /> 또는 <paramref name="count" />이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-517"><paramref name="argument" /> or <paramref name="count" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-518"><paramref name="argument" /> 컬렉션 결과 형식이 없는 또는 <paramref name="count" /> 64 비트 정수 형식과 동일 하거나 승격 가능한 결과 형식이 없는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-518"><paramref name="argument" /> does not have a collection result type, or <paramref name="count" /> does not have a result type that is equal or promotable to a 64-bit integer type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Minus">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Minus (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Minus(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Minus (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Minus(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Minus : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbArithmeticExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="8a9c3-519">왼쪽된 인수를 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-519">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="8a9c3-520">오른쪽 인수를 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-520">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="8a9c3-521">새 <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> 왼쪽된 인수에서 오른쪽 인수를 빼는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-521">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that subtracts the right argument from the left argument.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-522">새 DbArithmeticExpression 중 하나로 빼기 연산을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-522">A new DbArithmeticExpression representing the subtraction operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-523"><paramref name="left" /> 또는 <paramref name="right" />이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-523"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-524">일반적인 숫자 결과 형식이 존재 하지 않습니다 <paramref name="left" /> 고 <paramref name="right" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-524">No common numeric result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Modulo">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Modulo (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Modulo(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Modulo (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Modulo(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Modulo : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbArithmeticExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="8a9c3-525">왼쪽된 인수를 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-525">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="8a9c3-526">오른쪽 인수를 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-526">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="8a9c3-527">새 <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> 왼쪽된 인수가 오른쪽 인수로 나눈 나머지를 계산 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-527">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that computes the remainder of the left argument divided by the right argument.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-528">새 DbArithmeticExpression 나타내는 모듈로 작업 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-528">A new DbArithmeticExpression representing the modulo operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-529"><paramref name="left" /> 또는 <paramref name="right" />이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-529"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-530">일반적인 숫자 결과 형식이 존재 하지 않습니다 <paramref name="left" /> 고 <paramref name="right" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-530">No common numeric result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Multiply (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Multiply(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Multiply (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Multiply(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Multiply : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbArithmeticExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="8a9c3-531">왼쪽된 인수를 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-531">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="8a9c3-532">오른쪽 인수를 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-532">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="8a9c3-533">새 <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> 왼쪽된 인수를 오른쪽 인수와 곱하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-533">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that multiplies the left argument by the right argument.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-534">곱하기 연산을 나타내는 하는 새 DbArithmeticExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-534">A new DbArithmeticExpression representing the multiplication operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-535"><paramref name="left" /> 또는 <paramref name="right" />이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-535"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-536">일반적인 숫자 결과 형식이 존재 하지 않습니다 <paramref name="left" /> 고 <paramref name="right" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-536">No common numeric result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Navigate">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8a9c3-537">새 <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> 나타내는 컴퍼지션 이나 연결 관계를 탐색 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-537">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> representing the navigation of a composition or association relationship.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate (this System.Data.Common.CommandTrees.DbExpression navigateFrom, System.Data.Metadata.Edm.RelationshipEndMember fromEnd, System.Data.Metadata.Edm.RelationshipEndMember toEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate(class System.Data.Common.CommandTrees.DbExpression navigateFrom, class System.Data.Metadata.Edm.RelationshipEndMember fromEnd, class System.Data.Metadata.Edm.RelationshipEndMember toEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Navigate (navigateFrom As DbExpression, fromEnd As RelationshipEndMember, toEnd As RelationshipEndMember) As DbRelationshipNavigationExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRelationshipNavigationExpression ^ Navigate(System::Data::Common::CommandTrees::DbExpression ^ navigateFrom, System::Data::Metadata::Edm::RelationshipEndMember ^ fromEnd, System::Data::Metadata::Edm::RelationshipEndMember ^ toEnd);" />
      <MemberSignature Language="F#" Value="static member Navigate : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.RelationshipEndMember * System.Data.Metadata.Edm.RelationshipEndMember -&gt; System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate (navigateFrom, fromEnd, toEnd)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRelationshipNavigationExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigateFrom" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="fromEnd" Type="System.Data.Metadata.Edm.RelationshipEndMember" />
        <Parameter Name="toEnd" Type="System.Data.Metadata.Edm.RelationshipEndMember" />
      </Parameters>
      <Docs>
        <param name="navigateFrom"><span data-ttu-id="8a9c3-538">탐색이 발생할 시작 인스턴스를 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-538">An expression that specifies the instance from which navigation should occur.</span></span></param>
        <param name="fromEnd"><span data-ttu-id="8a9c3-539">탐색이 발생할 시작 관계의 끝을 나타내는 속성에 대 한 메타 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-539">Metadata for the property that represents the end of the relationship from which navigation should occur.</span></span></param>
        <param name="toEnd"><span data-ttu-id="8a9c3-540">탐색이 수행 하는 관계의 끝을 나타내는 속성에 대 한 메타 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-540">Metadata for the property that represents the end of the relationship to which navigation should occur.</span></span></param>
        <summary><span data-ttu-id="8a9c3-541">새 <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> 나타내는 컴퍼지션 이나 연결 관계를 탐색 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-541">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> representing the navigation of a composition or association relationship.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-542">지정 된 탐색을 나타내는 새 DbRelationshipNavigationExpression를에서 지정 된 탐색 소스 인스턴스에서 지정 된 관계 형식의 관계 end입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-542">A new DbRelationshipNavigationExpression representing the navigation of the specified from and to relation ends of the specified relation type from the specified navigation source instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a9c3-543"><xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression> 항상 탐색이 참조에서 발생할 것을 요구 하므로 `navigateFrom` 항상 참조 결과 형식이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-543"><xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression> requires that navigation always occur from a reference, and so `navigateFrom` must always have a reference result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-544"><paramref name="fromEnd" />하십시오 <paramref name="toEnd" /> 또는 <paramref name="navigateFrom" /> null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-544"><paramref name="fromEnd" />,  <paramref name="toEnd" /> or <paramref name="navigateFrom" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-545"><paramref name="fromEnd" /> 및 <paramref name="toEnd" /> 동일한 관계 형식으로 선언 되지 않은 또는 <paramref name="navigateFrom" /> 결과 형식이 속성 형식과 호환 되지 않는 <paramref name="fromEnd" />합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-545"><paramref name="fromEnd" /> and <paramref name="toEnd" /> are not declared by the same relationship type, or <paramref name="navigateFrom" /> has a result type that is not compatible with the property type of <paramref name="fromEnd" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate (this System.Data.Metadata.Edm.RelationshipType type, string fromEndName, string toEndName, System.Data.Common.CommandTrees.DbExpression navigateFrom);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate(class System.Data.Metadata.Edm.RelationshipType type, string fromEndName, string toEndName, class System.Data.Common.CommandTrees.DbExpression navigateFrom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Navigate (type As RelationshipType, fromEndName As String, toEndName As String, navigateFrom As DbExpression) As DbRelationshipNavigationExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRelationshipNavigationExpression ^ Navigate(System::Data::Metadata::Edm::RelationshipType ^ type, System::String ^ fromEndName, System::String ^ toEndName, System::Data::Common::CommandTrees::DbExpression ^ navigateFrom);" />
      <MemberSignature Language="F#" Value="static member Navigate : System.Data.Metadata.Edm.RelationshipType * string * string * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate (type, fromEndName, toEndName, navigateFrom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRelationshipNavigationExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Metadata.Edm.RelationshipType" RefType="this" />
        <Parameter Name="fromEndName" Type="System.String" />
        <Parameter Name="toEndName" Type="System.String" />
        <Parameter Name="navigateFrom" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="8a9c3-546">관계를 나타내는 관계 형식의 메타 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-546">Metadata for the relation type that represents the relationship.</span></span></param>
        <param name="fromEndName"><span data-ttu-id="8a9c3-547">탐색이 발생할 시작 관계의 끝을 나타내는 관계 형식의 속성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-547">The name of the property of the relation type that represents the end of the relationship from which navigation should occur.</span></span></param>
        <param name="toEndName"><span data-ttu-id="8a9c3-548">탐색이 수행 하는 관계의 끝을 나타내는 관계 형식의 속성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-548">The name of the property of the relation type that represents the end of the relationship to which navigation should occur.</span></span></param>
        <param name="navigateFrom"><span data-ttu-id="8a9c3-549">식의 인스턴스를 지정는 탐색이 시작에서 발생 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-549">An expression the specifies the instance from which naviagtion should occur.</span></span></param>
        <summary><span data-ttu-id="8a9c3-550">새 <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> 나타내는 컴퍼지션 이나 연결 관계를 탐색 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-550">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> representing the navigation of a composition or association relationship.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-551">지정 된 탐색을 나타내는 새 DbRelationshipNavigationExpression를에서 지정 된 탐색 소스 인스턴스에서 지정 된 관계 형식의 관계 end입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-551">A new DbRelationshipNavigationExpression representing the navigation of the specified from and to relation ends of the specified relation type from the specified navigation source instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a9c3-552"><xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression> 항상 탐색이 참조에서 발생할 것을 요구 하므로 `navigateFrom` 항상 참조 결과 형식이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-552"><xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression> requires that navigation always occur from a reference, and so `navigateFrom` must always have a reference result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-553"><paramref name="type" />를 <paramref name="fromEndName" />, <paramref name="toEndName" /> 또는 <paramref name="navigateFrom" /> null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-553"><paramref name="type" />,  <paramref name="fromEndName" />,  <paramref name="toEndName" /> or <paramref name="navigateFrom" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-554"><paramref name="type" /> 이 명령 트리의 메타 데이터 작업 영역과 연결 되어 있지 않습니다 또는 <paramref name="navigateFrom" /> 는 다른 명령 트리와 연결 또는 <paramref name="type" /> 이름의 관계 종료 속성을 선언 하지 않습니다 <paramref name="toEndName" /> 하거나 <paramref name="fromEndName" />, 또는 <paramref name="navigateFrom" /> 결과가 이름의 관계 end 속성의 속성 형식과 호환 되지 않는 형식이 <paramref name="fromEndName" />합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-554"><paramref name="type" /> is not associated with this command tree's metadata workspace or <paramref name="navigateFrom" /> is associated with a different command tree, or <paramref name="type" /> does not declare a relation end property with name <paramref name="toEndName" /> or <paramref name="fromEndName" />, or <paramref name="navigateFrom" /> has a result type that is not compatible with the property type of the relation end property with name <paramref name="fromEndName" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Negate (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Negate(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Negate (argument As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Negate(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member Negate : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbArithmeticExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="8a9c3-555">인수를 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-555">An expression that specifies the argument.</span></span></param>
        <summary><span data-ttu-id="8a9c3-556">새 <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> 인수의 값을 부정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-556">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that negates the value of the argument.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-557">부정 연산을 나타내는 하는 새 DbArithmeticExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-557">A new DbArithmeticExpression representing the negation operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-558"><paramref name="argument" />가 null인 경우</span><span class="sxs-lookup"><span data-stu-id="8a9c3-558"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-559">숫자 결과 형식이 존재 하지 않습니다에 대 한 <paramref name="argument" />합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-559">No numeric result type exists for <paramref name="argument" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="New">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8a9c3-560">새 <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-560">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression New (this System.Data.Metadata.Edm.TypeUsage instanceType, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression New(class System.Data.Metadata.Edm.TypeUsage instanceType, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function New (instanceType As TypeUsage, arguments As IEnumerable(Of DbExpression)) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ New(System::Data::Metadata::Edm::TypeUsage ^ instanceType, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member New : System.Data.Metadata.Edm.TypeUsage * seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbNewInstanceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New (instanceType, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="instanceType"><span data-ttu-id="8a9c3-561">새 인스턴스의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-561">The type of the new instance.</span></span></param>
        <param name="arguments"><span data-ttu-id="8a9c3-562">식 값의 새 인스턴스를 지정 하는 인스턴스의 형식에 따라 해석 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-562">Expressions that specify values of the new instances, interpreted according to the instance's type.</span></span></param>
        <summary><span data-ttu-id="8a9c3-563">새 <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-563">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span></span> <span data-ttu-id="8a9c3-564">형식 인수가 컬렉션 형식이 면 인수 컬렉션의 요소를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-564">If the type argument is a collection type, the arguments specify the elements of the collection.</span></span> <span data-ttu-id="8a9c3-565">그렇지 않으면 인수가 새 인스턴스에서 속성 또는 열 값으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-565">Otherwise the arguments are used as property or column values in the new instance.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-566">지정 된 형식 및 인수를 사용 하는 새 DbNewInstanceExpression입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-566">A new DbNewInstanceExpression with the specified type and arguments.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a9c3-567">하는 경우 `instanceType` 이 컬렉션 형식인 모든 식에 `arguments` 의 요소 형식으로 승격할 수 있는 결과 형식이 있어야 합니다.는 `instanceType`합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-567">If `instanceType` is a collection type then every expression in `arguments` must have a result type that is promotable to the element type of the `instanceType`.</span></span> <span data-ttu-id="8a9c3-568">하는 경우 `instanceType` 행 형식인 `arguments` 행 형식에 열 및 각 식의 결과 형식은 해당 열의 형식과 동일 하거나 승격 가능한 이어야 합니다 하는 만큼 식이 포함 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-568">If `instanceType` is a row type,  `arguments` must contain as many expressions as there are columns in the row type, and the result type of each expression must be equal or promotable to the type of the corresponding column.</span></span> <span data-ttu-id="8a9c3-569">열을 선언 하지 않는 행 형식은 잘못 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-569">A row type that does not declare any columns is invalid.</span></span> <span data-ttu-id="8a9c3-570">하는 경우 `instanceType` 는 엔터티 형식이 `arguments` 만큼 식이 속성 형식으로 정의 되며 각 식의 결과 형식은 동일 하거나 승격 가능한 해당 속성의 형식 이어야 합니다 포함 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-570">If `instanceType` is an entity type,  `arguments` must contain as many expressions as there are properties defined by the type, and the result type of each expression must be equal or promotable to the type of the corresponding property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-571"><paramref name="instanceType" /> 또는 <paramref name="arguments" /> 가 null 또는 <paramref name="arguments" /> null을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-571"><paramref name="instanceType" /> or <paramref name="arguments" /> is null, or <paramref name="arguments" /> contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-572"><paramref name="arguments" />가 비어 있거나 포함된 식의 결과 형식이 <paramref name="instanceType" />의 요구 사항과 일치하지 않습니다. 자세한 내용은 설명 부분을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-572"><paramref name="arguments" /> is empty or the result types of the contained expressions do not match the requirements of <paramref name="instanceType" /> (as explained in the remarks section).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression New (this System.Data.Metadata.Edm.TypeUsage instanceType, params System.Data.Common.CommandTrees.DbExpression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression New(class System.Data.Metadata.Edm.TypeUsage instanceType, class System.Data.Common.CommandTrees.DbExpression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function New (instanceType As TypeUsage, ParamArray arguments As DbExpression()) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ New(System::Data::Metadata::Edm::TypeUsage ^ instanceType, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member New : System.Data.Metadata.Edm.TypeUsage * System.Data.Common.CommandTrees.DbExpression[] -&gt; System.Data.Common.CommandTrees.DbNewInstanceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New (instanceType, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
        <Parameter Name="arguments" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instanceType"><span data-ttu-id="8a9c3-573">새 인스턴스의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-573">The type of the new instance.</span></span></param>
        <param name="arguments"><span data-ttu-id="8a9c3-574">식 값의 새 인스턴스를 지정 하는 인스턴스의 형식에 따라 해석 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-574">Expressions that specify values of the new instances, interpreted according to the instance's type.</span></span></param>
        <summary><span data-ttu-id="8a9c3-575">새 <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-575">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span></span> <span data-ttu-id="8a9c3-576">형식 인수가 컬렉션 형식이 면 인수 컬렉션의 요소를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-576">If the type argument is a collection type, the arguments specify the elements of the collection.</span></span> <span data-ttu-id="8a9c3-577">그렇지 않으면 인수가 새 인스턴스에서 속성 또는 열 값으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-577">Otherwise the arguments are used as property or column values in the new instance.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-578">지정 된 형식 및 인수를 사용 하는 새 DbNewInstanceExpression입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-578">A new DbNewInstanceExpression with the specified type and arguments.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a9c3-579">하는 경우 `instanceType` 이 컬렉션 형식인 모든 식에 `arguments` 의 요소 형식으로 승격할 수 있는 결과 형식이 있어야 합니다.는 `instanceType`합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-579">If `instanceType` is a collection type then every expression in `arguments` must have a result type that is promotable to the element type of the `instanceType`.</span></span> <span data-ttu-id="8a9c3-580">하는 경우 `instanceType` 행 형식인 `arguments` 행 형식에 열 및 각 식의 결과 형식은 해당 열의 형식과 동일 하거나 승격 가능한 이어야 합니다 하는 만큼 식이 포함 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-580">If `instanceType` is a row type,  `arguments` must contain as many expressions as there are columns in the row type, and the result type of each expression must be equal or promotable to the type of the corresponding column.</span></span> <span data-ttu-id="8a9c3-581">열을 선언 하지 않는 행 형식은 잘못 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-581">A row type that does not declare any columns is invalid.</span></span> <span data-ttu-id="8a9c3-582">하는 경우 `instanceType` 는 엔터티 형식이 `arguments` 만큼 식이 속성 형식으로 정의 되며 각 식의 결과 형식은 동일 하거나 승격 가능한 해당 속성의 형식 이어야 합니다 포함 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-582">If `instanceType` is an entity type,  `arguments` must contain as many expressions as there are properties defined by the type, and the result type of each expression must be equal or promotable to the type of the corresponding property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-583"><paramref name="instanceType" /> 또는 <paramref name="arguments" /> 가 null 또는 <paramref name="arguments" /> null을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-583"><paramref name="instanceType" /> or <paramref name="arguments" /> is null, or <paramref name="arguments" /> contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-584"><paramref name="arguments" />가 비어 있거나 포함된 식의 결과 형식이 <paramref name="instanceType" />의 요구 사항과 일치하지 않습니다. 자세한 내용은 설명 부분을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-584"><paramref name="arguments" /> is empty or the result types of the contained expressions do not match the requirements of <paramref name="instanceType" /> (as explained in the remarks section).</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="NewCollection">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8a9c3-585">새 <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> 생성 하는 지정 된 요소를 포함 하는 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-585">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that constructs a collection containing the specified elements.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="NewCollection">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection (System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; elements);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; elements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Function NewCollection (elements As IEnumerable(Of DbExpression)) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ NewCollection(System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ elements);" />
      <MemberSignature Language="F#" Value="static member NewCollection : seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbNewInstanceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection elements" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elements" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="elements"><span data-ttu-id="8a9c3-586">목록 컬렉션의 요소를 제공 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-586">A list of expressions that provide the elements of the collection.</span></span></param>
        <summary><span data-ttu-id="8a9c3-587">새 <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> 생성 하는 지정 된 요소를 포함 하는 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-587">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that constructs a collection containing the specified elements.</span></span> <span data-ttu-id="8a9c3-588">컬렉션의 형식 요소의 일반적인 형식을 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-588">The type of the collection is based on the common type of the elements.</span></span> <span data-ttu-id="8a9c3-589">기본 요소 형식이 있는 경우 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-589">If no common element type exists an exception is thrown.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-590">지정 된 컬렉션 형식 및 인수를 사용 하는 새 DbNewInstanceExpression입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-590">A new DbNewInstanceExpression with the specified collection type and arguments.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-591"><paramref name="elements" /> 가 null 이거나 null을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-591"><paramref name="elements" /> is null, or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-592"><paramref name="elements" /> 비어 있거나 공통의 결과 형식이 없는 식이 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-592"><paramref name="elements" /> is empty or contains expressions for which no common result type exists.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NewCollection">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection (params System.Data.Common.CommandTrees.DbExpression[] elements);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection(class System.Data.Common.CommandTrees.DbExpression[] elements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Function NewCollection (ParamArray elements As DbExpression()) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ NewCollection(... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ elements);" />
      <MemberSignature Language="F#" Value="static member NewCollection : System.Data.Common.CommandTrees.DbExpression[] -&gt; System.Data.Common.CommandTrees.DbNewInstanceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection elements" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elements" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="elements"><span data-ttu-id="8a9c3-593">목록 컬렉션의 요소를 제공 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-593">A list of expressions that provide the elements of the collection.</span></span></param>
        <summary><span data-ttu-id="8a9c3-594">새 <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> 생성 하는 지정 된 요소를 포함 하는 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-594">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that constructs a collection containing the specified elements.</span></span> <span data-ttu-id="8a9c3-595">컬렉션의 형식 요소의 일반적인 형식을 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-595">The type of the collection is based on the common type of the elements.</span></span> <span data-ttu-id="8a9c3-596">기본 요소 형식이 있는 경우 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-596">If no common element type exists an exception is thrown.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-597">지정 된 컬렉션 형식 및 인수를 사용 하는 새 DbNewInstanceExpression입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-597">A new DbNewInstanceExpression with the specified collection type and arguments.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-598"><paramref name="elements" /> 이 null 이거나 null이 포함 된...</span><span class="sxs-lookup"><span data-stu-id="8a9c3-598"><paramref name="elements" /> is null, or contains null..</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-599"><paramref name="elements" /> 비어 있거나 공통의 결과 형식이 없는 식이 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-599"><paramref name="elements" /> is empty or contains expressions for which no common result type exists.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NewEmptyCollection">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewEmptyCollection (this System.Data.Metadata.Edm.TypeUsage collectionType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression NewEmptyCollection(class System.Data.Metadata.Edm.TypeUsage collectionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NewEmptyCollection (collectionType As TypeUsage) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ NewEmptyCollection(System::Data::Metadata::Edm::TypeUsage ^ collectionType);" />
      <MemberSignature Language="F#" Value="static member NewEmptyCollection : System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbNewInstanceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection collectionType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collectionType"><span data-ttu-id="8a9c3-600">만들 컬렉션의 형식 메타 데이터</span><span class="sxs-lookup"><span data-stu-id="8a9c3-600">The type metadata for the collection to create</span></span></param>
        <summary><span data-ttu-id="8a9c3-601">새 <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> 는 지정 된 컬렉션 형식의 빈 컬렉션을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-601">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that constructs an empty collection of the specified collection type.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-602">지정 된 컬렉션 형식 및 빈 사용 하는 새 DbNewInstanceExpression <paramref name="Arguments" /> 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-602">A new DbNewInstanceExpression with the specified collection type and an empty <paramref name="Arguments" /> list.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-603"><paramref name="collectionType" />가 null인 경우</span><span class="sxs-lookup"><span data-stu-id="8a9c3-603"><paramref name="collectionType" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-604"><paramref name="collectionType" /> 컬렉션 형식이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-604"><paramref name="collectionType" /> is not a collection type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NewRow">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewRow (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt;&gt; columnValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression NewRow(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt;&gt; columnValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})" />
      <MemberSignature Language="VB.NET" Value="Public Function NewRow (columnValues As IEnumerable(Of KeyValuePair(Of String, DbExpression))) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ NewRow(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt;&gt; ^ columnValues);" />
      <MemberSignature Language="F#" Value="static member NewRow : seq&lt;System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbExpression&gt;&gt; -&gt; System.Data.Common.CommandTrees.DbNewInstanceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow columnValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnValues" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="columnValues"><span data-ttu-id="8a9c3-605">구조와 행의 값을 정의 하는 문자열 DbExpression 키-값 쌍의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-605">A list of string-DbExpression key-value pairs that defines the structure and values of the row.</span></span></param>
        <summary><span data-ttu-id="8a9c3-606">새 <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> 지정 된 명명 된 열 및 식으로 지정 된 주어진된 값을 사용 하 여 행을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-606">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that produces a row with the specified named columns and the given values, specified as expressions.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-607">행의 생성을 나타내는 새 DbNewInstanceExpression입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-607">A new DbNewInstanceExpression that represents the construction of the row.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-608"><paramref name="columnValues" /> 가 null 이거나 null 열 이름이 나 식이 있는 요소를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-608"><paramref name="columnValues" /> is null or contains an element with a null column name or expression.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-609"><paramref name="columnValues" /> 비어 있거나 중복 또는 잘못 된 열 이름을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-609"><paramref name="columnValues" /> is empty, or contains a duplicate or invalid column name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Not">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNotExpression Not (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNotExpression Not(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Not (argument As DbExpression) As DbNotExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNotExpression ^ Not(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member Not : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbNotExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNotExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="8a9c3-610">인수를 지정 하는 부울 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-610">A Boolean expression that specifies the argument.</span></span></param>
        <summary><span data-ttu-id="8a9c3-611">만듭니다는 <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> 지정 된 인수의 논리 부정 연산을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-611">Creates a <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> that performs the logical negation of the given argument.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-612">지정 된 인수를 사용 하 여 새 DbNotExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-612">A new DbNotExpression with the specified argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-613"><paramref name="argument" />가 null인 경우</span><span class="sxs-lookup"><span data-stu-id="8a9c3-613"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-614"><paramref name="argument" />에 부울 결과 형식이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-614"><paramref name="argument" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NotEqual">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression NotEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression NotEqual(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NotEqual (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ NotEqual(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member NotEqual : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbComparisonExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="8a9c3-615">왼쪽된 인수를 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-615">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="8a9c3-616">오른쪽 인수를 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-616">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="8a9c3-617">새 <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> 왼쪽 인수와 오른쪽 인수가 같지 않은지 비교 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-617">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that compares the left and right arguments for inequality.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-618">새 DbComparisonExpression 중 하나로 같지 않음 비교를 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-618">A new DbComparisonExpression representing the inequality comparison.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-619"><paramref name="left" /> 또는 <paramref name="right" />이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-619"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-620">공통의 같음 호환 결과 형식이 없는 사이 존재 <paramref name="left" /> 고 <paramref name="right" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-620">No common equality-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNullExpression Null (this System.Data.Metadata.Edm.TypeUsage nullType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNullExpression Null(class System.Data.Metadata.Edm.TypeUsage nullType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Null (nullType As TypeUsage) As DbNullExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNullExpression ^ Null(System::Data::Metadata::Edm::TypeUsage ^ nullType);" />
      <MemberSignature Language="F#" Value="static member Null : System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbNullExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null nullType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNullExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nullType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
      </Parameters>
      <Docs>
        <param name="nullType"><span data-ttu-id="8a9c3-621">Null 값의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-621">The type of the null value.</span></span></param>
        <summary><span data-ttu-id="8a9c3-622">새 <see cref="T:System.Data.Common.CommandTrees.DbNullExpression" />, 형식화 된 null 값을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-622">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNullExpression" />, which represents a typed null value.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-623">DbNullExpression의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-623">An instance of DbNullExpression.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-624"><paramref name="nullType" />가 null인 경우</span><span class="sxs-lookup"><span data-stu-id="8a9c3-624"><paramref name="nullType" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OfType">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbOfTypeExpression OfType (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbOfTypeExpression OfType(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OfType (argument As DbExpression, type As TypeUsage) As DbOfTypeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbOfTypeExpression ^ OfType(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ type);" />
      <MemberSignature Language="F#" Value="static member OfType : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbOfTypeExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType (argument, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbOfTypeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="8a9c3-625"><see cref="T:System.Data.Common.CommandTrees.DbExpression" /> 입력된 집합을 지정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-625">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span></span></param>
        <param name="type"><span data-ttu-id="8a9c3-626">입력된 집합의 요소를 결과 집합에 포함할 수 있어야 하는 형식에 대 한 메타 데이터를 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-626">Type metadata for the type that elements of the input set must have to be included in the resulting set.</span></span></param>
        <summary><span data-ttu-id="8a9c3-627">새 <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /> 지정 된 형식의 된 지정된 된 입력의 요소로 구성 된 집합을 설정 하는 생성 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-627">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /> that produces a set consisting of the elements of the given input set that are of the specified type.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-628">지정된 된 집합 인수 및 형식과의 ExpressionKind를 사용 하 여는 새 DbOfTypeExpression <see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfType" />합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-628">A new DbOfTypeExpression with the specified set argument and type, and an ExpressionKind of <see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a9c3-629">Dboftypeexpression `argument` 컬렉션 결과 형식이 다형 요소 형식을, 및을 사용 하 여 `type` 해당 요소 형식과 동일한 형식 계층 구조의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-629">DbOfTypeExpression requires that `argument` has a collection result type with a polymorphic element type, and that `type` is a type from the same type hierarchy as that element type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-630"><paramref name="argument" /> 또는 <paramref name="type" />이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-630"><paramref name="argument" /> or <paramref name="type" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-631"><paramref name="argument" /> 컬렉션 결과 형식이 없는 또는 <paramref name="type" /> 컬렉션 결과 형식의 요소 형식과 동일한 형식 계층 구조에서 형식이 아닌 <paramref name="argument" />합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-631"><paramref name="argument" /> does not have a collection result type, or <paramref name="type" /> is not a type in the same type hierarchy as the element type of the collection result type of <paramref name="argument" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OfTypeOnly">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbOfTypeExpression OfTypeOnly (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbOfTypeExpression OfTypeOnly(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OfTypeOnly (argument As DbExpression, type As TypeUsage) As DbOfTypeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbOfTypeExpression ^ OfTypeOnly(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ type);" />
      <MemberSignature Language="F#" Value="static member OfTypeOnly : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbOfTypeExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly (argument, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbOfTypeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="8a9c3-632"><see cref="T:System.Data.Common.CommandTrees.DbExpression" /> 입력된 집합을 지정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-632">An <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span></span></param>
        <param name="type"><span data-ttu-id="8a9c3-633">결과 집합에 포함 될 입력된 집합의 요소가 정확히 일치 해야 하는 형식에 대 한 메타 데이터를 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-633">Type metadata for the type that elements of the input set must match exactly to be included in the resulting set.</span></span></param>
        <summary><span data-ttu-id="8a9c3-634">새 <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /> 정확 하 게 지정 된 형식의 된 지정된 된 입력의 요소로 구성 된 집합을 설정 하는 생성 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-634">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /> that produces a set consisting of the elements of the given input set that are of exactly the specified type.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-635">지정된 된 집합 인수 및 형식과의 ExpressionKind를 사용 하 여는 새 DbOfTypeExpression <see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfTypeOnly" />합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-635">A new DbOfTypeExpression with the specified set argument and type, and an ExpressionKind of <see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfTypeOnly" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a9c3-636">Dboftypeexpression `argument` 컬렉션 결과 형식이 다형 요소 형식을, 및을 사용 하 여 `type` 해당 요소 형식과 동일한 형식 계층 구조의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-636">DbOfTypeExpression requires that `argument` has a collection result type with a polymorphic element type, and that `type` is a type from the same type hierarchy as that element type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-637"><paramref name="argument" /> 또는 <paramref name="type" />이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-637"><paramref name="argument" /> or <paramref name="type" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-638"><paramref name="argument" /> 컬렉션 결과 형식이 없는 또는 <paramref name="type" /> 컬렉션 결과 형식의 요소 형식과 동일한 형식 계층 구조에서 형식이 아닌 <paramref name="argument" />합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-638"><paramref name="argument" /> does not have a collection result type, or <paramref name="type" /> is not a type in the same type hierarchy as the element type of the collection result type of <paramref name="argument" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Or">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbOrExpression Or (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbOrExpression Or(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Or (left As DbExpression, right As DbExpression) As DbOrExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbOrExpression ^ Or(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Or : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbOrExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbOrExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="8a9c3-639">왼쪽된 인수를 지정 하는 부울 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-639">A Boolean expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="8a9c3-640">오른쪽 인수를 지정 하는 부울 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-640">A Boolean expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="8a9c3-641">만듭니다는 <see cref="T:System.Data.Common.CommandTrees.DbOrExpression" /> 논리 Or은 왼쪽 및 오른쪽 인수의 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-641">Creates an <see cref="T:System.Data.Common.CommandTrees.DbOrExpression" /> that performs the logical Or of the left and right arguments.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-642">지정된 된 인수를 사용 하 여 새 DbOrExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-642">A new DbOrExpression with the specified arguments.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-643"><paramref name="left" /> 또는 <paramref name="right" />이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-643"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-644"><paramref name="left" /> 또는 <paramref name="right" /> 에 부울 결과 형식이 없는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-644"><paramref name="left" /> or <paramref name="right" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderBy">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8a9c3-645">새 <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> 오름차순 정렬 순서와 기본 데이터 정렬을 사용 하 여 지정 된 정렬 키를 설정 하는 지정된 된 입력을 정렬 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-645">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with ascending sort order and default collation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression OrderBy (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression OrderBy(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy (source As DbExpression, sortKey As Func(Of DbExpression, DbExpression)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ OrderBy(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey);" />
      <MemberSignature Language="F#" Value="static member OrderBy : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy (source, sortKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8a9c3-646">입력된 집합을 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-646">An expression that specifies the input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="8a9c3-647">지정 된 입력된 집합의 멤버에서 정렬 키 식을 파생 시키는 방법을 지정 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-647">A method that specifies how to derive the sort key expression given a member of the input set.</span></span> <span data-ttu-id="8a9c3-648">이 메서드는 정렬 하는 순서 비교 가능 결과 형식이 있는 식을 생성 해야 키 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-648">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <summary><span data-ttu-id="8a9c3-649">새 <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> 오름차순 정렬 순서와 기본 데이터 정렬을 사용 하 여 지정 된 정렬 키를 설정 하는 지정된 된 입력을 정렬 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-649">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with ascending sort order and default collation.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-650">Order by 작업을 나타내는 새 DbSortExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-650">A new DbSortExpression that represents the order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-651"><paramref name="sortKey" />에서 생성된 식이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-651">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-652">생성 된 식이 <paramref name="sortKey" /> 순서 비교 가능 결과 형식이 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-652">The expression produced by <paramref name="sortKey" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OrderBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression OrderBy (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression OrderBy(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy (source As DbExpression, sortKey As Func(Of DbExpression, DbExpression), collation As String) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ OrderBy(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey, System::String ^ collation);" />
      <MemberSignature Language="F#" Value="static member OrderBy : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * string -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy (source, sortKey, collation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8a9c3-653">입력된 집합을 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-653">An expression that specifies the input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="8a9c3-654">지정 된 입력된 집합의 멤버에서 정렬 키 식을 파생 시키는 방법을 지정 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-654">A method that specifies how to derive the sort key expression given a member of the input set.</span></span> <span data-ttu-id="8a9c3-655">이 메서드는 정렬 하는 순서 비교 가능 결과 형식이 있는 식을 생성 해야 키 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-655">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <param name="collation"><span data-ttu-id="8a9c3-656">에 대 한 데이터 정렬입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-656">The collation to sort under.</span></span></param>
        <summary><span data-ttu-id="8a9c3-657">새 <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> 오름차순으로 정렬 하 고 지정 된 데이터 정렬을 사용 하 여 지정 된 정렬 키를 설정 하는 지정된 된 입력을 정렬 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-657">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with ascending sort order and the specified collation.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-658">Order by 작업을 나타내는 새 DbSortExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-658">A new DbSortExpression that represents the order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-659"><paramref name="sortKey" />에서 생성된 식이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-659">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-660"><paramref name="sortKey" />에서 생성된 식이 순서 비교 가능한 문자열 결과 형식이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="8a9c3-660">The expression produced by <paramref name="sortKey" /> does not have an order-comparable string result type.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8a9c3-661"><paramref name="collation" /> 가 비어 있거나 공백 문자만 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-661"><paramref name="collation" /> is empty or contains only space characters.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderByDescending">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8a9c3-662">새 <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> 내림차순 정렬 순서와 기본 데이터 정렬을 사용 하 여 지정 된 정렬 키를 설정 하는 지정된 된 입력을 정렬 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-662">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with descending sort order and default collation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderByDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression OrderByDescending (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression OrderByDescending(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending (source As DbExpression, sortKey As Func(Of DbExpression, DbExpression)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ OrderByDescending(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey);" />
      <MemberSignature Language="F#" Value="static member OrderByDescending : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending (source, sortKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8a9c3-663">입력된 집합을 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-663">An expression that specifies the input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="8a9c3-664">지정 된 입력된 집합의 멤버에서 정렬 키 식을 파생 시키는 방법을 지정 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-664">A method that specifies how to derive the sort key expression given a member of the input set.</span></span> <span data-ttu-id="8a9c3-665">이 메서드는 정렬 하는 순서 비교 가능 결과 형식이 있는 식을 생성 해야 키 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-665">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <summary><span data-ttu-id="8a9c3-666">새 <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> 내림차순 정렬 순서와 기본 데이터 정렬을 사용 하 여 지정 된 정렬 키를 설정 하는 지정된 된 입력을 정렬 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-666">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with descending sort order and default collation.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-667">Order by 작업을 나타내는 새 DbSortExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-667">A new DbSortExpression that represents the order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-668"><paramref name="sortKey" />에서 생성된 식이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-668">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-669">생성 된 식이 <paramref name="sortKey" /> 순서 비교 가능 결과 형식이 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-669">The expression produced by <paramref name="sortKey" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OrderByDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression OrderByDescending (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression OrderByDescending(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending (source As DbExpression, sortKey As Func(Of DbExpression, DbExpression), collation As String) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ OrderByDescending(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey, System::String ^ collation);" />
      <MemberSignature Language="F#" Value="static member OrderByDescending : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * string -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending (source, sortKey, collation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8a9c3-670">입력된 집합을 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-670">An expression that specifies the input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="8a9c3-671">지정 된 입력된 집합의 멤버에서 정렬 키 식을 파생 시키는 방법을 지정 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-671">A method that specifies how to derive the sort key expression given a member of the input set.</span></span> <span data-ttu-id="8a9c3-672">이 메서드는 정렬 하는 순서 비교 가능 결과 형식이 있는 식을 생성 해야 키 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-672">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <param name="collation"><span data-ttu-id="8a9c3-673">에 대 한 데이터 정렬입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-673">The collation to sort under.</span></span></param>
        <summary><span data-ttu-id="8a9c3-674">새 <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> 내림차순 정렬 순서와 지정 된 데이터 정렬을 사용 하 여 지정 된 정렬 키를 설정 하는 지정된 된 입력을 정렬 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-674">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with descending sort order and the specified collation.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-675">Order by 작업을 나타내는 새 DbSortExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-675">A new DbSortExpression that represents the order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-676"><paramref name="sortKey" />에서 생성된 식이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-676">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-677"><paramref name="sortKey" />에서 생성된 식이 순서 비교 가능한 문자열 결과 형식이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="8a9c3-677">The expression produced by <paramref name="sortKey" /> does not have an order-comparable string result type.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8a9c3-678"><paramref name="collation" /> 가 비어 있거나 공백 문자만 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-678"><paramref name="collation" /> is empty or contains only space characters.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OuterApply">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8a9c3-679">새로 만듭니다 <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> 평가 되는 지정 된 <paramref name="apply" /> 지정된 된 입력의 각 요소에 한 번씩 식 집합을 해당 입력을 사용 하 여 행의 컬렉션을 생성 및 apply 열입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-679">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OuterApply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbApplyExpression OuterApply (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt;&gt; apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbApplyExpression OuterApply(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt;&gt; apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OuterApply (source As DbExpression, apply As Func(Of DbExpression, KeyValuePair(Of String, DbExpression))) As DbApplyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbApplyExpression ^ OuterApply(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt;&gt; ^ apply);" />
      <MemberSignature Language="F#" Value="static member OuterApply : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbExpression&gt;&gt; -&gt; System.Data.Common.CommandTrees.DbApplyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply (source, apply)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbApplyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="apply" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8a9c3-680"><see cref="T:System.Data.Common.CommandTrees.DbExpression" /> 입력된 집합을 지정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-680">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span></span></param>
        <param name="apply"><span data-ttu-id="8a9c3-681">입력된 집합의 각 멤버에 대해 한 번씩 확인할 논리를 지정 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-681">A method that specifies the logic to evaluate once for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="8a9c3-682">새로 만듭니다 <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> 평가 되는 지정 된 <paramref name="apply" /> 지정된 된 입력의 각 요소에 한 번씩 식 집합을 해당 입력을 사용 하 여 행의 컬렉션을 생성 및 apply 열입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-682">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span> <span data-ttu-id="8a9c3-683">행 <paramref name="apply" /> 빈 집합으로 평가의 apply 열 값이 있는 <see langword="null" />합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-683">Rows for which <paramref name="apply" /> evaluates to an empty set have an apply column value of <see langword="null" />.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-684">지정 된 사용 되는 새 DbApplyExpression 입력 및 적용 및 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> OuterApply의 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-684">An new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of OuterApply.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-685">결과 <paramref name="apply" /> 이름이 나 식이 null이 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-685">The result of <paramref name="apply" /> contains a name or expression that is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-686">결과 <paramref name="apply" /> 이름이 나 식 바인딩에서 유효 하지 않은 식이 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-686">The result of <paramref name="apply" /> contains a name or expression that is not valid in an expression binding.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OuterApply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbApplyExpression OuterApply (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpressionBinding apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbApplyExpression OuterApply(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpressionBinding apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OuterApply (input As DbExpressionBinding, apply As DbExpressionBinding) As DbApplyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbApplyExpression ^ OuterApply(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpressionBinding ^ apply);" />
      <MemberSignature Language="F#" Value="static member OuterApply : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpressionBinding -&gt; System.Data.Common.CommandTrees.DbApplyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply (input, apply)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbApplyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="apply" Type="System.Data.Common.CommandTrees.DbExpressionBinding" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="8a9c3-687"><see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> 입력된 집합을 지정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-687">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the input set.</span></span></param>
        <param name="apply"><span data-ttu-id="8a9c3-688"><see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> 입력된 집합의 각 멤버에 대 한 번씩 확인할 논리를 지정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-688">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies logic to evaluate once for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="8a9c3-689">새로 만듭니다 <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> 평가 되는 지정 된 <paramref name="apply" /> 지정된 된 입력의 각 요소에 한 번씩 식 집합을 해당 입력을 사용 하 여 행의 컬렉션을 생성 및 apply 열입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-689">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span> <span data-ttu-id="8a9c3-690">행 <paramref name="apply" /> 빈 집합으로 평가의 apply 열 값이 있는 <see langword="null" />합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-690">Rows for which <paramref name="apply" /> evaluates to an empty set have an apply column value of <see langword="null" />.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-691">지정 된 사용 되는 새 DbApplyExpression 입력 및 적용 및 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> OuterApply의 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-691">An new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of OuterApply.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-692"><paramref name="input" /> 또는 <paramref name="apply" />이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-692"><paramref name="input" /> or <paramref name="apply" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Parameter">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbParameterReferenceExpression Parameter (this System.Data.Metadata.Edm.TypeUsage type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbParameterReferenceExpression Parameter(class System.Data.Metadata.Edm.TypeUsage type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Parameter (type As TypeUsage, name As String) As DbParameterReferenceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbParameterReferenceExpression ^ Parameter(System::Data::Metadata::Edm::TypeUsage ^ type, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member Parameter : System.Data.Metadata.Edm.TypeUsage * string -&gt; System.Data.Common.CommandTrees.DbParameterReferenceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter (type, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbParameterReferenceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="8a9c3-693">참조 된 매개 변수의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-693">The type of the referenced parameter.</span></span></param>
        <param name="name"><span data-ttu-id="8a9c3-694">참조된 매개 변수의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-694">The name of the referenced parameter.</span></span></param>
        <summary><span data-ttu-id="8a9c3-695">새 <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> 지정한 이름과 형식을 가진 매개 변수를 참조 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-695">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> that references a parameter with the specified name and type.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-696">지정한 이름과 형식을 가진 매개 변수에 대 한 참조를 나타내는 DbParameterReferenceExpression입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-696">A DbParameterReferenceExpression that represents a reference to a parameter with the specified name and type.</span></span> <span data-ttu-id="8a9c3-697">식의 결과 형식은 동일 됩니다 <paramref name="type" />합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-697">The result type of the expression will be the same as <paramref name="type" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Plus">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Plus (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Plus(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Plus (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Plus(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Plus : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbArithmeticExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="8a9c3-698">왼쪽된 인수를 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-698">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="8a9c3-699">오른쪽 인수를 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-699">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="8a9c3-700">새 <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> 왼쪽된 인수가 오른쪽 인수를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-700">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that adds the left argument to the right argument.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-701">더하기 연산을 나타내는 하는 새 DbArithmeticExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-701">A new DbArithmeticExpression representing the addition operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-702"><paramref name="left" /> 또는 <paramref name="right" />이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-702"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-703">일반적인 숫자 결과 형식이 존재 하지 않습니다 <paramref name="left" /> 고 <paramref name="right" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-703">No common numeric result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Project">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression Project (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression projection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression Project(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpression projection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Project (input As DbExpressionBinding, projection As DbExpression) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ Project(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpression ^ projection);" />
      <MemberSignature Language="F#" Value="static member Project : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbProjectExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project (input, projection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="projection" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="8a9c3-704">입력된 집합을 지정 하는 식 바인딩입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-704">An expression binding that specifies the input set.</span></span></param>
        <param name="projection"><span data-ttu-id="8a9c3-705">식 집합에 대 한 프로젝트입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-705">An expression to project over the set.</span></span></param>
        <summary><span data-ttu-id="8a9c3-706">새 <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> 주어진된 입력된 집합에 대해 지정된 된 식을 투영 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-706">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> that projects the specified expression over the given input set.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-707">프로젝션 작업을 나타내는 새 DbProjectExpression입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-707">A new DbProjectExpression that represents the projection operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-708"><paramref name="input" /> 또는 <paramref name="projection" />이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-708"><paramref name="input" /> or <paramref name="projection" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Property">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8a9c3-709">새 <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> 지정된 된 속성의 검색을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-709">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the specified property.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.EdmProperty propertyMetadata);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbPropertyExpression Property(class System.Data.Common.CommandTrees.DbExpression instance, class System.Data.Metadata.Edm.EdmProperty propertyMetadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EdmProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Property (instance As DbExpression, propertyMetadata As EdmProperty) As DbPropertyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbPropertyExpression ^ Property(System::Data::Common::CommandTrees::DbExpression ^ instance, System::Data::Metadata::Edm::EdmProperty ^ propertyMetadata);" />
      <MemberSignature Language="F#" Value="static member Property : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.EdmProperty -&gt; System.Data.Common.CommandTrees.DbPropertyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property (instance, propertyMetadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbPropertyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="propertyMetadata" Type="System.Data.Metadata.Edm.EdmProperty" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="8a9c3-710">속성을 검색할 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-710">The instance from which to retrieve the property.</span></span> <span data-ttu-id="8a9c3-711">속성이 정적인 경우에 null 일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-711">May be null if the property is static.</span></span></param>
        <param name="propertyMetadata"><span data-ttu-id="8a9c3-712">검색할 속성의 메타 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-712">Metadata for the property to retrieve.</span></span></param>
        <summary><span data-ttu-id="8a9c3-713">새 <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> 지정된 된 속성의 검색을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-713">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the specified property.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-714">속성 검색을 나타내는 새 DbPropertyExpression입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-714">A new DbPropertyExpression representing the property retrieval.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-715"><paramref name="propertyMetadata" /> 가 null 또는 <paramref name="instance" /> 가 null 이며 속성이 정적 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-715"><paramref name="propertyMetadata" /> is null or <paramref name="instance" /> is null and the property is not static.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.NavigationProperty navigationProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbPropertyExpression Property(class System.Data.Common.CommandTrees.DbExpression instance, class System.Data.Metadata.Edm.NavigationProperty navigationProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.NavigationProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbPropertyExpression ^ Property(System::Data::Common::CommandTrees::DbExpression ^ instance, System::Data::Metadata::Edm::NavigationProperty ^ navigationProperty);" />
      <MemberSignature Language="F#" Value="static member Property : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.NavigationProperty -&gt; System.Data.Common.CommandTrees.DbPropertyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property (instance, navigationProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbPropertyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="navigationProperty" Type="System.Data.Metadata.Edm.NavigationProperty" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="8a9c3-716">탐색 속성을 검색할 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-716">The instance from which to retrieve the navigation property.</span></span></param>
        <param name="navigationProperty"><span data-ttu-id="8a9c3-717">검색할 탐색 속성에 대 한 메타 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-717">Metadata for the navigation property to retrieve.</span></span></param>
        <summary><span data-ttu-id="8a9c3-718">새 <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> 지정된 된 탐색 속성의 검색을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-718">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the specified navigation property.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-719">탐색 속성 검색을 나타내는 새 DbPropertyExpression입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-719">A new DbPropertyExpression representing the navigation property retrieval.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-720"><paramref name="navigationProperty" /> 또는 <paramref name="instance" />이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-720"><paramref name="navigationProperty" /> or <paramref name="instance" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.RelationshipEndMember relationshipEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbPropertyExpression Property(class System.Data.Common.CommandTrees.DbExpression instance, class System.Data.Metadata.Edm.RelationshipEndMember relationshipEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Property (instance As DbExpression, relationshipEnd As RelationshipEndMember) As DbPropertyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbPropertyExpression ^ Property(System::Data::Common::CommandTrees::DbExpression ^ instance, System::Data::Metadata::Edm::RelationshipEndMember ^ relationshipEnd);" />
      <MemberSignature Language="F#" Value="static member Property : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.RelationshipEndMember -&gt; System.Data.Common.CommandTrees.DbPropertyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property (instance, relationshipEnd)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbPropertyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="relationshipEnd" Type="System.Data.Metadata.Edm.RelationshipEndMember" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="8a9c3-721">관계 end 멤버를 검색할 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-721">The instance from which to retrieve the relationship end member.</span></span></param>
        <param name="relationshipEnd"><span data-ttu-id="8a9c3-722">검색할 관계 end 멤버에 대 한 메타 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-722">Metadata for the relationship end member to retrieve.</span></span></param>
        <summary><span data-ttu-id="8a9c3-723">새 <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> 지정 된 관계 end 멤버의 검색을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-723">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the specified relationship end member.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-724">관계 end 멤버 검색을 나타내는 새 DbPropertyExpression입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-724">A new DbPropertyExpression representing the relationship end member retrieval.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-725"><paramref name="relationshipEnd" /> 가 null 또는 <paramref name="instance" /> 가 null 이며 속성이 정적 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-725"><paramref name="relationshipEnd" /> is null or <paramref name="instance" /> is null and the property is not static.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbPropertyExpression Property(class System.Data.Common.CommandTrees.DbExpression instance, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Property (instance As DbExpression, propertyName As String) As DbPropertyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbPropertyExpression ^ Property(System::Data::Common::CommandTrees::DbExpression ^ instance, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="static member Property : System.Data.Common.CommandTrees.DbExpression * string -&gt; System.Data.Common.CommandTrees.DbPropertyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property (instance, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbPropertyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="8a9c3-726">속성을 검색할 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-726">The instance from which to retrieve the property.</span></span></param>
        <param name="propertyName"><span data-ttu-id="8a9c3-727">검색할 속성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-727">The name of the property to retrieve.</span></span></param>
        <summary><span data-ttu-id="8a9c3-728">새 <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> 주어진 인스턴스에서 지정 된 이름 가진 인스턴스 속성의 검색을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-728">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the instance property with the specified name from the given instance.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-729">속성 검색을 나타내는 새 DbPropertyExpression입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-729">A new DbPropertyExpression that represents the property retrieval.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-730"><paramref name="propertyName" /> 가 null 또는 <paramref name="instance" /> 가 null 이며 속성이 정적 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-730"><paramref name="propertyName" /> is null or <paramref name="instance" /> is null and the property is not static.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8a9c3-731">형식에 의해 지정된 된 이름 가진 속성이 선언 된 <paramref name="instance" />합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-731">No property with the specified name is declared by the type of <paramref name="instance" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RefFromKey">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8a9c3-732">새 <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> 키 값을 기반으로 특정 엔터티에 대 한 참조를 인코딩하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-732">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific Entity based on key values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RefFromKey">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression RefFromKey (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Common.CommandTrees.DbExpression keyRow);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression RefFromKey(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Common.CommandTrees.DbExpression keyRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ RefFromKey(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Data::Common::CommandTrees::DbExpression ^ keyRow);" />
      <MemberSignature Language="F#" Value="static member RefFromKey : System.Data.Metadata.Edm.EntitySet * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbRefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey (entitySet, keyRow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="keyRow" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="8a9c3-733">참조 된 요소가 상주 하는 엔터티 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-733">The Entity set in which the referenced element resides.</span></span></param>
        <param name="keyRow"><span data-ttu-id="8a9c3-734"><see cref="T:System.Data.Common.CommandTrees.DbExpression" /> (개수, 형식 및 순서가)에서 일치 하는 열을 사용 하 여 레코드를 생성 하는 참조 된 엔터티 형식의 키 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-734">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that constructs a record with columns that match (in number, type, and order) the Key properties of the referenced Entity type.</span></span></param>
        <summary><span data-ttu-id="8a9c3-735">새 <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> 키 값을 기반으로 특정 엔터티에 대 한 참조를 인코딩하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-735">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific Entity based on key values.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-736">지정된 된 엔터티 집합에서 지정 된 키 값을 사용 하 여 요소를 참조 하는 새 DbRefExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-736">A new DbRefExpression that references the element with the specified key values in the given Entity set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a9c3-737">`keyRow` 지정된 된 엔터티 내에서 참조 된 엔터티를 식별 하는 키 값을 지정 하는 식이 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-737">`keyRow` should be an expression that specifies the key values that identify the referenced entity within the given entity set.</span></span> <span data-ttu-id="8a9c3-738">결과 형식은 `keyRow` 정의한 각 키 속성에 대 한 해당 열을 포함 해야 `entitySet's` 엔터티 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-738">The result type of `keyRow` should contain a corresponding column for each key property defined by `entitySet's` entity type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-739"><paramref name="entitySet" /> 또는 <paramref name="keyRow" />이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-739"><paramref name="entitySet" /> or <paramref name="keyRow" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-740"><paramref name="keyRow" /> 참조 된 엔터티 집합의 엔터티 형식의 키 속성과 일치 하는 레코드 결과 형식이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-740"><paramref name="keyRow" /> does not have a record result type that matches the key properties of the referenced entity set's entity type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RefFromKey">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression RefFromKey (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Common.CommandTrees.DbExpression keyRow, System.Data.Metadata.Edm.EntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression RefFromKey(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Common.CommandTrees.DbExpression keyRow, class System.Data.Metadata.Edm.EntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ RefFromKey(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Data::Common::CommandTrees::DbExpression ^ keyRow, System::Data::Metadata::Edm::EntityType ^ entityType);" />
      <MemberSignature Language="F#" Value="static member RefFromKey : System.Data.Metadata.Edm.EntitySet * System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.EntityType -&gt; System.Data.Common.CommandTrees.DbRefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey (entitySet, keyRow, entityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="keyRow" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="entityType" Type="System.Data.Metadata.Edm.EntityType" />
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="8a9c3-741">참조 된 요소가 상주 하는 엔터티 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-741">The Entity set in which the referenced element resides.</span></span></param>
        <param name="keyRow"><span data-ttu-id="8a9c3-742"><see cref="T:System.Data.Common.CommandTrees.DbExpression" /> (개수, 형식 및 순서가)에서 일치 하는 열을 사용 하 여 레코드를 생성 하는 참조 된 엔터티 형식의 키 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-742">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that constructs a record with columns that match (in number, type, and order) the Key properties of the referenced Entity type.</span></span></param>
        <param name="entityType"><span data-ttu-id="8a9c3-743">참조 해야 하는 엔터티의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-743">The type of the Entity that the reference should refer to.</span></span></param>
        <summary><span data-ttu-id="8a9c3-744">새 <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> 키 값을 기반으로 특정 엔터티에 대 한 참조를 인코딩하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-744">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific Entity based on key values.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-745">지정된 된 엔터티 집합에서 지정 된 키 값을 사용 하 여 요소를 참조 하는 새 DbRefExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-745">A new DbRefExpression that references the element with the specified key values in the given Entity set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a9c3-746">`keyRow` 지정된 된 엔터티 내에서 참조 된 엔터티를 식별 하는 키 값을 지정 하는 식이 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-746">`keyRow` should be an expression that specifies the key values that identify the referenced entity within the given entity set.</span></span> <span data-ttu-id="8a9c3-747">결과 형식은 `keyRow` 정의한 각 키 속성에 대 한 해당 열을 포함 해야 `entitySet's` 엔터티 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-747">The result type of `keyRow` should contain a corresponding column for each key property defined by `entitySet's` entity type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-748"><paramref name="entitySet" />하십시오 <paramref name="keyRow" /> 또는 <paramref name="entityType" /> null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-748"><paramref name="entitySet" />,  <paramref name="keyRow" /> or <paramref name="entityType" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-749"><paramref name="entityType" /> 엔터티 집합의 엔터티 형식과 동일한 형식 계층 구조에 없는 또는 <paramref name="keyRow" /> 참조 된 엔터티 집합의 엔터티 형식의 키 속성과 일치 하는 레코드 결과 형식이 없는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-749"><paramref name="entityType" /> is not in the same type hierarchy as the entity set's entity type, or <paramref name="keyRow" /> does not have a record result type that matches the key properties of the referenced entity set's entity type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Scan">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbScanExpression Scan (this System.Data.Metadata.Edm.EntitySetBase targetSet);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbScanExpression Scan(class System.Data.Metadata.Edm.EntitySetBase targetSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(System.Data.Metadata.Edm.EntitySetBase)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Scan (targetSet As EntitySetBase) As DbScanExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbScanExpression ^ Scan(System::Data::Metadata::Edm::EntitySetBase ^ targetSet);" />
      <MemberSignature Language="F#" Value="static member Scan : System.Data.Metadata.Edm.EntitySetBase -&gt; System.Data.Common.CommandTrees.DbScanExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan targetSet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbScanExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetSet" Type="System.Data.Metadata.Edm.EntitySetBase" RefType="this" />
      </Parameters>
      <Docs>
        <param name="targetSet"><span data-ttu-id="8a9c3-750">참조할 엔터티 또는 관계 집합에 대 한 메타 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-750">Metadata for the entity or relationship set to reference.</span></span></param>
        <summary><span data-ttu-id="8a9c3-751">새 <see cref="T:System.Data.Common.CommandTrees.DbScanExpression" /> 지정된 된 엔터티 또는 관계 집합을 참조 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-751">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbScanExpression" /> that references the specified entity or relationship set.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-752">지정된 된 엔터티 또는 관계 집합을 기반으로 새 DbScanExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-752">A new DbScanExpression based on the specified entity or relationship set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-753"><paramref name="targetSet" />가 null인 경우</span><span class="sxs-lookup"><span data-stu-id="8a9c3-753"><paramref name="targetSet" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Select&lt;TProjection&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression Select&lt;TProjection&gt; (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,TProjection&gt; projection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression Select&lt;TProjection&gt;(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, !!TProjection&gt; projection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Select(Of TProjection) (source As DbExpression, projection As Func(Of DbExpression, TProjection)) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TProjection&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ Select(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, TProjection&gt; ^ projection);" />
      <MemberSignature Language="F#" Value="static member Select : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, 'Projection&gt; -&gt; System.Data.Common.CommandTrees.DbProjectExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select (source, projection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProjection" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="projection" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,TProjection&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TProjection"><span data-ttu-id="8a9c3-754">메서드 결과 형식 <paramref name="projection" />합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-754">The method result type of <paramref name="projection" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8a9c3-755">입력된 집합을 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-755">An expression that specifies the input set.</span></span></param>
        <param name="projection"><span data-ttu-id="8a9c3-756">지정 된 입력된 집합의 멤버에서 투영 된 식을 파생 시키는 방법을 지정 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-756">A method that specifies how to derive the projected expression given a member of the input set.</span></span> <span data-ttu-id="8a9c3-757">이 메서드는 호환 되는 형식의 인스턴스를 생성 해야 선택한으로 확인 될 수는 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-757">This method must produce an instance of a type that is compatible with Select and can be resolved into a <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span></span> <span data-ttu-id="8a9c3-758"><c>TProjection</c>에 대한 호환성 요구 사항은 설명에 설명되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-758">Compatibility requirements for <c>TProjection</c> are described in remarks.</span></span></param>
        <summary><span data-ttu-id="8a9c3-759">새 <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> 주어진된 입력된 집합에 대해 지정된 된 식을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-759">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> that selects the specified expression over the given input set.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-760">선택 작업을 나타내는 새 DbProjectExpression입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-760">A new DbProjectExpression that represents the select operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a9c3-761">호환 되도록 Select가 있는 `TProjection` 에서 파생 되어야 합니다 <xref:System.Data.Common.CommandTrees.DbExpression>, 또는 DbExpression 파생 속성이 있는 익명 형식 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-761">To be compatible with Select, `TProjection` must be derived from <xref:System.Data.Common.CommandTrees.DbExpression>,     or must be an anonymous type with DbExpression-derived properties.</span></span> <span data-ttu-id="8a9c3-762">에 대 한 지원 되는 형식의 예는 `TProjection`:</span><span class="sxs-lookup"><span data-stu-id="8a9c3-762">The following are examples of supported types for `TProjection`:</span></span>  
  
```  
source.Select(x => x.Property("Name"))  
```  
  
 <span data-ttu-id="8a9c3-763">`TProjection` <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span><span class="sxs-lookup"><span data-stu-id="8a9c3-763">`TProjection` is <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span></span>  
  
```  
source.Select(x => new { Name = x.Property("Name") })  
```  
  
 <span data-ttu-id="8a9c3-764">(`TProjection` DbExpression에서 파생 된 속성을 가진 익명 형식만).</span><span class="sxs-lookup"><span data-stu-id="8a9c3-764">(`TProjection` is an anonymous type with a DbExpression-derived property).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-765">결과 <paramref name="projection" /> null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-765">The result of <paramref name="projection" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SelectMany">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression SelectMany (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression SelectMany(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany (source As DbExpression, apply As Func(Of DbExpression, DbExpression)) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ SelectMany(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ apply);" />
      <MemberSignature Language="F#" Value="static member SelectMany : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbProjectExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany (source, apply)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="apply" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8a9c3-766"><see cref="T:System.Data.Common.CommandTrees.DbExpression" /> 입력된 집합을 지정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-766">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span></span></param>
        <param name="apply"><span data-ttu-id="8a9c3-767">입력된 집합의 각 멤버에 대해 한 번씩 확인할 논리를 나타내는 메서드.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-767">A method that represents the logic to evaluate once for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="8a9c3-768">새로 만듭니다 <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> 평가 되는 지정 된 <paramref name="apply" /> 지정된 된 입력의 각 요소에 한 번씩 식 집합을 해당 입력을 사용 하 여 행의 컬렉션을 생성 및 apply 열입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-768">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span> <span data-ttu-id="8a9c3-769">행 <paramref name="apply" /> 빈 집합으로 계산 되는 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-769">Rows for which <paramref name="apply" /> evaluates to an empty set are not included.</span></span> <span data-ttu-id="8a9c3-770">그러면 각 행에서 <paramref name="apply" /> 열을 선택하여 전체 <paramref name="apply" /> 결과 컬렉션을 생성하는 <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" />이 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-770">A <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> is then created that selects the <paramref name="apply" /> column from each row, producing the overall collection of <paramref name="apply" /> results.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-771">지정 된 입력 및 적용 하는 새로운 DbApplyExpression에서 apply 열을 선택 하는 새 DbProjectExpression 및 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> CrossApply의 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-771">An new DbProjectExpression that selects the apply column from a new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossApply.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-772"><paramref name="apply" />에서 생성된 식이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-772">The expression produced by <paramref name="apply" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-773">생성 된 식이 <paramref name="apply" /> 컬렉션 형식이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-773">The expression produced by <paramref name="apply" /> does not have a collection type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SelectMany&lt;TSelector&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression SelectMany&lt;TSelector&gt; (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; apply, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression SelectMany&lt;TSelector&gt;(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; apply, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, !!TSelector&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSelector) (source As DbExpression, apply As Func(Of DbExpression, DbExpression), selector As Func(Of DbExpression, DbExpression, TSelector)) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSelector&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ SelectMany(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ apply, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, TSelector&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member SelectMany : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression, 'Selector&gt; -&gt; System.Data.Common.CommandTrees.DbProjectExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany (source, apply, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSelector" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="apply" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="selector" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSelector"><span data-ttu-id="8a9c3-774">메서드 결과 형식 <paramref name="selector" />합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-774">The method result type of <paramref name="selector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8a9c3-775"><see cref="T:System.Data.Common.CommandTrees.DbExpression" /> 입력된 집합을 지정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-775">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span></span></param>
        <param name="apply"><span data-ttu-id="8a9c3-776">입력된 집합의 각 멤버에 대해 한 번씩 확인할 논리를 나타내는 메서드.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-776">A method that represents the logic to evaluate once for each member of the input set.</span></span></param>
        <param name="selector"><span data-ttu-id="8a9c3-777">결과의 요소를 설정 하는 방법을 지정 하는 메서드입니다 입력 요소의 지정 된 파생 되어야 하 고 집합을 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-777">A method that specifies how an element of the result set should be derived given an element of the input and apply sets.</span></span> <span data-ttu-id="8a9c3-778">이 메서드는 SelectMany와 호환 되는 형식의 인스턴스를 생성 해야 하 고으로 확인 될 수는 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-778">This method must produce an instance of a type that is compatible with SelectMany and can be resolved into a <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span></span> <span data-ttu-id="8a9c3-779"><c>TSelector</c>에 대한 호환성 요구 사항은 설명 단원에 나와 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-779">Compatibility requirements for <c>TSelector</c> are described in remarks.</span></span></param>
        <summary><span data-ttu-id="8a9c3-780">새로 만듭니다 <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> 평가 되는 지정 된 <paramref name="apply" /> 지정된 된 입력의 각 요소에 한 번씩 식 집합을 해당 입력을 사용 하 여 행의 컬렉션을 생성 및 apply 열입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-780">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span> <span data-ttu-id="8a9c3-781">행 <paramref name="apply" /> 빈 집합으로 계산 되는 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-781">Rows for which <paramref name="apply" /> evaluates to an empty set are not included.</span></span> <span data-ttu-id="8a9c3-782">A <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> 는 선택 된 만들어지고 <paramref name="selector" /> 각 행에서 결과의 전체 컬렉션을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-782">A <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> is then created that selects the specified <paramref name="selector" /> over each row, producing the overall collection of results.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-783">지정된 된 입력을 사용 하 여는 새로운 DbApplyExpression에서 지정된 된 선택기의 결과 선택 및 적용 하는 새 DbProjectExpression 및 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> CrossApply의 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-783">An new DbProjectExpression that selects the result of the given selector from a new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossApply.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a9c3-784">SelectMany와 호환 되도록 `TSelector` 에서 파생 되어야 합니다 <xref:System.Data.Common.CommandTrees.DbExpression>, 또는 DbExpression 파생 속성이 있는 익명 형식 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-784">To be compatible with SelectMany, `TSelector` must be derived from <xref:System.Data.Common.CommandTrees.DbExpression>,     or must be an anonymous type with DbExpression-derived properties.</span></span> <span data-ttu-id="8a9c3-785">에 대 한 지원 되는 형식의 예는 `TSelector`:</span><span class="sxs-lookup"><span data-stu-id="8a9c3-785">The following are examples of supported types for `TSelector`:</span></span>  
  
```  
source.SelectMany(x => x.Property("RelatedCollection"), (source, apply) => apply.Property("Name"))  
```  
  
 <span data-ttu-id="8a9c3-786">(`TSelector` 는 <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span><span class="sxs-lookup"><span data-stu-id="8a9c3-786">(`TSelector` is <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span></span>  
  
```  
source.SelectMany(x => x.Property("RelatedCollection"), (source, apply) => new { SourceName = source.Property("Name"), RelatedName = apply.Property("Name") })  
```  
  
 <span data-ttu-id="8a9c3-787">(`TSelector` 는 DbExpression 파생 속성이 있는 익명 형식).</span><span class="sxs-lookup"><span data-stu-id="8a9c3-787">(`TSelector` is an anonymous type with DbExpression-derived properties).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-788">결과 <paramref name="selector" /> DbExpression으로 변환한에서 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-788">The result of <paramref name="selector" /> is null on conversion to DbExpression.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-789">생성 된 식이 <paramref name="apply" /> 컬렉션 형식이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-789">The expression produced by <paramref name="apply" /> does not have a collection type.</span></span> <span data-ttu-id="8a9c3-790">컬렉션 형식이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-790">does not have a collection type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Skip">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8a9c3-791">새 <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> 주어진된 입력 지정 된 개수의 요소를 건너뛰기 전에 지정 된 정렬 사양을 기준 집합을 정렬 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-791">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> that sorts the given input set by the given sort specifications before skipping the specified number of elements.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSkipExpression Skip (this System.Data.Common.CommandTrees.DbSortExpression argument, System.Data.Common.CommandTrees.DbExpression count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSkipExpression Skip(class System.Data.Common.CommandTrees.DbSortExpression argument, class System.Data.Common.CommandTrees.DbExpression count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Skip (argument As DbSortExpression, count As DbExpression) As DbSkipExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSkipExpression ^ Skip(System::Data::Common::CommandTrees::DbSortExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ count);" />
      <MemberSignature Language="F#" Value="static member Skip : System.Data.Common.CommandTrees.DbSortExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbSkipExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip (argument, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSkipExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" />
        <Parameter Name="count" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="8a9c3-792"><see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> 정렬된 입력된 집합을 지정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-792">A <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that specifies the sorted input set.</span></span></param>
        <param name="count"><span data-ttu-id="8a9c3-793">식의 정렬 된 집합에서 건너뛸 요소 수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-793">An expression the specifies how many elements of the ordered set to skip.</span></span></param>
        <summary><span data-ttu-id="8a9c3-794">새 <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> 는 지정된 된 정렬된 입력된 집합에서 지정 된 개수의 요소를 건너뜁니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-794">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> that skips the specified number of elements from the given sorted input set.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-795">Skip 작업을 나타내는 새 DbSkipExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-795">A new DbSkipExpression that represents the skip operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-796"><paramref name="argument" /> 또는 <paramref name="count" />이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-796"><paramref name="argument" /> or <paramref name="count" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-797"><paramref name="count" /> 아닙니다 <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> 또는 <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> 또는 64 비트 정수 형식 승격 가능한 결과 형식이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-797"><paramref name="count" /> is not <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> or <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> or has a result type that is not equal or promotable to a 64-bit integer type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSkipExpression Skip (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder, System.Data.Common.CommandTrees.DbExpression count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSkipExpression Skip(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder, class System.Data.Common.CommandTrees.DbExpression count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Skip (input As DbExpressionBinding, sortOrder As IEnumerable(Of DbSortClause), count As DbExpression) As DbSkipExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSkipExpression ^ Skip(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbSortClause ^&gt; ^ sortOrder, System::Data::Common::CommandTrees::DbExpression ^ count);" />
      <MemberSignature Language="F#" Value="static member Skip : System.Data.Common.CommandTrees.DbExpressionBinding * seq&lt;System.Data.Common.CommandTrees.DbSortClause&gt; * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbSkipExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip (input, sortOrder, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSkipExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="sortOrder" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbSortClause&gt;" />
        <Parameter Name="count" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="8a9c3-798">입력된 집합을 지정 하는 식 바인딩입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-798">An expression binding that specifies the input set.</span></span></param>
        <param name="sortOrder"><span data-ttu-id="8a9c3-799">입력된 집합의 요소를 정렬 해야 하는 방법을 결정 하는 정렬 사양의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-799">A list of sort specifications that determine how the elements of the input set should be sorted.</span></span></param>
        <param name="count"><span data-ttu-id="8a9c3-800">식의 정렬 된 집합에서 건너뛸 요소 수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-800">An expression the specifies how many elements of the ordered set to skip.</span></span></param>
        <summary><span data-ttu-id="8a9c3-801">새 <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> 주어진된 입력 지정 된 개수의 요소를 건너뛰기 전에 지정 된 정렬 사양을 기준 집합을 정렬 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-801">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> that sorts the given input set by the given sort specifications before skipping the specified number of elements.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-802">Skip 작업을 나타내는 새 DbSkipExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-802">A new DbSkipExpression that represents the skip operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-803"><paramref name="input" /><paramref name="sortOrder" /> 하거나 <paramref name="count" /> 가 null 또는 <paramref name="sortOrder" /> null을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-803"><paramref name="input" />,  <paramref name="sortOrder" /> or <paramref name="count" /> is null, or <paramref name="sortOrder" /> contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-804"><paramref name="sortOrder" /> 비어 또는 <paramref name="count" /> 아닙니다 <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> 또는 <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> 또는 64 비트 정수 형식 승격 가능한 결과 형식이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-804"><paramref name="sortOrder" /> is empty, or <paramref name="count" /> is not <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> or <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> or has a result type that is not equal or promotable to a 64-bit integer type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression Sort (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression Sort(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sort (input As DbExpressionBinding, sortOrder As IEnumerable(Of DbSortClause)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ Sort(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbSortClause ^&gt; ^ sortOrder);" />
      <MemberSignature Language="F#" Value="static member Sort : System.Data.Common.CommandTrees.DbExpressionBinding * seq&lt;System.Data.Common.CommandTrees.DbSortClause&gt; -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort (input, sortOrder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="sortOrder" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbSortClause&gt;" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="8a9c3-805">입력된 집합을 지정 하는 식 바인딩입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-805">An expression binding that specifies the input set.</span></span></param>
        <param name="sortOrder"><span data-ttu-id="8a9c3-806">입력된 집합의 요소를 정렬 해야 하는 방법을 결정 하는 정렬 사양의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-806">A list of sort specifications that determine how the elements of the input set should be sorted.</span></span></param>
        <summary><span data-ttu-id="8a9c3-807">새 <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> 설정 된 지정 된 정렬 사양을 기준으로 주어진된 입력을 정렬 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-807">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort specifications.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-808">정렬 작업을 나타내는 새 DbSortExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-808">A new DbSortExpression that represents the sort operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-809"><paramref name="input" /> 또는 <paramref name="sortOrder" /> 가 null 또는 <paramref name="sortOrder" /> null을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-809"><paramref name="input" /> or <paramref name="sortOrder" /> is null, or <paramref name="sortOrder" /> contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-810"><paramref name="sortOrder" />가 비어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="8a9c3-810"><paramref name="sortOrder" /> is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Take">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLimitExpression Take (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLimitExpression Take(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Common.CommandTrees.DbExpression count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Take (argument As DbExpression, count As DbExpression) As DbLimitExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLimitExpression ^ Take(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ count);" />
      <MemberSignature Language="F#" Value="static member Take : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbLimitExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take (argument, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLimitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="count" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="8a9c3-811">입력 컬렉션을 지정하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-811">An expression that specifies the input collection.</span></span></param>
        <param name="count"><span data-ttu-id="8a9c3-812">제한 값을 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-812">An expression that specifies the limit value.</span></span></param>
        <summary><span data-ttu-id="8a9c3-813">새 <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> 지정 된 개수 제한 값 인수 컬렉션의 요소 수로 제한 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-813">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> that restricts the number of elements in the Argument collection to the specified count Limit value.</span></span> <span data-ttu-id="8a9c3-814">동급된 결과 출력에 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-814">Tied results are not included in the output.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-815">포함 하지 않는 개수 제한 값 및 지정 된 인수를 사용 하 여 새 DbLimitExpression 결과 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-815">A new DbLimitExpression with the specified argument and count limit values that does not include tied results.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-816"><paramref name="argument" /> 또는 <paramref name="count" />이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-816"><paramref name="argument" /> or <paramref name="count" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-817"><paramref name="argument" /> 컬렉션 결과 형식이 없는 <paramref name="count" /> 64 비트 정수 형식과 동일 하거나 승격 가능한 결과 형식이 없는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-817"><paramref name="argument" /> does not have a collection result type,  <paramref name="count" /> does not have a result type that is equal or promotable to a 64-bit integer type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenBy">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8a9c3-818">새 <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> 지정된 된 정렬의 정렬 순서를 포함 하는 정렬 순서를 사용 하 여 기본 데이터 정렬 및 오름차순의 지정 된 정렬 키와 함께 집합을 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-818">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with default collation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression ThenBy (this System.Data.Common.CommandTrees.DbSortExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression ThenBy(class System.Data.Common.CommandTrees.DbSortExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy (source As DbSortExpression, sortKey As Func(Of DbExpression, DbExpression)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ ThenBy(System::Data::Common::CommandTrees::DbSortExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey);" />
      <MemberSignature Language="F#" Value="static member ThenBy : System.Data.Common.CommandTrees.DbSortExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy (source, sortKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8a9c3-819">정렬된 입력된 집합을 지정 하는 DbSortExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-819">A DbSortExpression that specifies the ordered input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="8a9c3-820">지정 된 입력된 집합의 멤버에서 추가적인 정렬 키 식을 파생 시키는 방법을 지정 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-820">A method that specifies how to derive the additional sort key expression given a member of the input set.</span></span> <span data-ttu-id="8a9c3-821">이 메서드는 정렬 하는 순서 비교 가능 결과 형식이 있는 식을 생성 해야 키 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-821">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <summary><span data-ttu-id="8a9c3-822">새 <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> 지정된 된 정렬의 정렬 순서를 포함 하는 정렬 순서를 사용 하 여 기본 데이터 정렬 및 오름차순의 지정 된 정렬 키와 함께 집합을 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-822">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with default collation.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-823">새로운 전체 순서별 작업을 나타내는 새 DbSortExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-823">A new DbSortExpression that represents the new overall order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-824"><paramref name="sortKey" />에서 생성된 식이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-824">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-825"><paramref name="sortKey" /> 순서 비교 가능 결과 형식이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-825"><paramref name="sortKey" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ThenBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression ThenBy (this System.Data.Common.CommandTrees.DbSortExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression ThenBy(class System.Data.Common.CommandTrees.DbSortExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy (source As DbSortExpression, sortKey As Func(Of DbExpression, DbExpression), collation As String) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ ThenBy(System::Data::Common::CommandTrees::DbSortExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey, System::String ^ collation);" />
      <MemberSignature Language="F#" Value="static member ThenBy : System.Data.Common.CommandTrees.DbSortExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * string -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy (source, sortKey, collation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8a9c3-826">정렬된 입력된 집합을 지정 하는 DbSortExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-826">A DbSortExpression that specifies the ordered input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="8a9c3-827">지정 된 입력된 집합의 멤버에서 추가적인 정렬 키 식을 파생 시키는 방법을 지정 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-827">A method that specifies how to derive the additional sort key expression given a member of the input set.</span></span> <span data-ttu-id="8a9c3-828">이 메서드는 정렬 하는 순서 비교 가능 결과 형식이 있는 식을 생성 해야 키 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-828">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <param name="collation"><span data-ttu-id="8a9c3-829">에 대 한 데이터 정렬입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-829">The collation to sort under.</span></span></param>
        <summary><span data-ttu-id="8a9c3-830">새 <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> 지정된 된 정렬의 정렬 순서를 포함 하는 정렬 순서를 사용 하 여 지정 된 데이터 정렬 및 오름차순의 지정 된 정렬 키와 함께 집합을 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-830">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with the specified collation.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-831">새로운 전체 순서별 작업을 나타내는 새 DbSortExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-831">A new DbSortExpression that represents the new overall order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-832"><paramref name="sortKey" />에서 생성된 식이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-832">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-833"><paramref name="sortKey" />에서 생성된 식이 순서 비교 가능한 문자열 결과 형식이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="8a9c3-833">The expression produced by <paramref name="sortKey" /> does not have an order-comparable string result type.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8a9c3-834"><paramref name="collation" /> 가 비어 있거나 공백 문자만 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-834"><paramref name="collation" /> is empty or contains only space characters.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenByDescending">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8a9c3-835">새 <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> 지정된 된 정렬의 정렬 순서를 포함 하는 정렬 순서를 사용 하 여 기본 데이터 정렬 및 내림차순의 지정 된 정렬 키와 함께 집합을 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-835">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with default collation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenByDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression ThenByDescending (this System.Data.Common.CommandTrees.DbSortExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression ThenByDescending(class System.Data.Common.CommandTrees.DbSortExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending (source As DbSortExpression, sortKey As Func(Of DbExpression, DbExpression)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ ThenByDescending(System::Data::Common::CommandTrees::DbSortExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey);" />
      <MemberSignature Language="F#" Value="static member ThenByDescending : System.Data.Common.CommandTrees.DbSortExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending (source, sortKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8a9c3-836">정렬된 입력된 집합을 지정 하는 DbSortExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-836">A DbSortExpression that specifies the ordered input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="8a9c3-837">지정 된 입력된 집합의 멤버에서 추가적인 정렬 키 식을 파생 시키는 방법을 지정 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-837">A method that specifies how to derive the additional sort key expression given a member of the input set.</span></span> <span data-ttu-id="8a9c3-838">이 메서드는 정렬 하는 순서 비교 가능 결과 형식이 있는 식을 생성 해야 키 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-838">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <summary><span data-ttu-id="8a9c3-839">새 <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> 지정된 된 정렬의 정렬 순서를 포함 하는 정렬 순서를 사용 하 여 기본 데이터 정렬 및 내림차순의 지정 된 정렬 키와 함께 집합을 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-839">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with default collation.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-840">새로운 전체 순서별 작업을 나타내는 새 DbSortExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-840">A new DbSortExpression that represents the new overall order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-841"><paramref name="sortKey" />에서 생성된 식이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-841">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-842">생성 된 식이 <paramref name="sortKey" /> 순서 비교 가능 결과 형식이 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-842">The expression produced by <paramref name="sortKey" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ThenByDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression ThenByDescending (this System.Data.Common.CommandTrees.DbSortExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression ThenByDescending(class System.Data.Common.CommandTrees.DbSortExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending (source As DbSortExpression, sortKey As Func(Of DbExpression, DbExpression), collation As String) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ ThenByDescending(System::Data::Common::CommandTrees::DbSortExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey, System::String ^ collation);" />
      <MemberSignature Language="F#" Value="static member ThenByDescending : System.Data.Common.CommandTrees.DbSortExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * string -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending (source, sortKey, collation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8a9c3-843">정렬된 입력된 집합을 지정 하는 DbSortExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-843">A DbSortExpression that specifies the ordered input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="8a9c3-844">지정 된 입력된 집합의 멤버에서 추가적인 정렬 키 식을 파생 시키는 방법을 지정 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-844">A method that specifies how to derive the additional sort key expression given a member of the input set.</span></span> <span data-ttu-id="8a9c3-845">이 메서드는 정렬 하는 순서 비교 가능 결과 형식이 있는 식을 생성 해야 키 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-845">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <param name="collation"><span data-ttu-id="8a9c3-846">에 대 한 데이터 정렬입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-846">The collation to sort under.</span></span></param>
        <summary><span data-ttu-id="8a9c3-847">새 <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> 지정된 된 정렬의 정렬 순서를 포함 하는 정렬 순서를 사용 하 여 지정 된 데이터 정렬 및 내림차순의 지정 된 정렬 키와 함께 집합을 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-847">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with the specified collation.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-848">새로운 전체 순서별 작업을 나타내는 새 DbSortExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-848">A new DbSortExpression that represents the new overall order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-849"><paramref name="sortKey" />에서 생성된 식이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-849">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-850"><paramref name="sortKey" />에서 생성된 식이 순서 비교 가능한 문자열 결과 형식이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="8a9c3-850">The expression produced by <paramref name="sortKey" /> does not have an order-comparable string result type.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8a9c3-851"><paramref name="collation" /> 가 비어 있거나 공백 문자만 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-851"><paramref name="collation" /> is empty or contains only space characters.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToSortClause">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8a9c3-852">새 <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> 오름차순 정렬 순서와 기본 데이터 정렬을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-852">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with an ascending sort order and default collation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToSortClause">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortClause ToSortClause (this System.Data.Common.CommandTrees.DbExpression key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortClause ToSortClause(class System.Data.Common.CommandTrees.DbExpression key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToSortClause (key As DbExpression) As DbSortClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortClause ^ ToSortClause(System::Data::Common::CommandTrees::DbExpression ^ key);" />
      <MemberSignature Language="F#" Value="static member ToSortClause : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbSortClause" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="8a9c3-853">정렬 키를 정의 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-853">The expression that defines the sort key.</span></span></param>
        <summary><span data-ttu-id="8a9c3-854">새 <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> 오름차순 정렬 순서와 기본 데이터 정렬을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-854">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with an ascending sort order and default collation.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-855">지정 된 정렬 키 및 오름차순으로 정렬 하는 새 정렬 절.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-855">A new sort clause with the given sort key and ascending sort order.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-856"><paramref name="key" />가 null인 경우</span><span class="sxs-lookup"><span data-stu-id="8a9c3-856"><paramref name="key" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-857"><paramref name="key" /> 순서 비교 가능 결과 형식이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-857"><paramref name="key" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSortClause">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortClause ToSortClause (this System.Data.Common.CommandTrees.DbExpression key, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortClause ToSortClause(class System.Data.Common.CommandTrees.DbExpression key, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToSortClause (key As DbExpression, collation As String) As DbSortClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortClause ^ ToSortClause(System::Data::Common::CommandTrees::DbExpression ^ key, System::String ^ collation);" />
      <MemberSignature Language="F#" Value="static member ToSortClause : System.Data.Common.CommandTrees.DbExpression * string -&gt; System.Data.Common.CommandTrees.DbSortClause" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause (key, collation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="8a9c3-858">정렬 키를 정의 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-858">The expression that defines the sort key.</span></span></param>
        <param name="collation"><span data-ttu-id="8a9c3-859">에 대 한 데이터 정렬입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-859">The collation to sort under.</span></span></param>
        <summary><span data-ttu-id="8a9c3-860">새 <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> 오름차순 정렬 순서와 지정 된 데이터 정렬을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-860">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with an ascending sort order and the specified collation.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-861">지정 된 정렬 키 및 데이터 정렬 및 오름차순으로 정렬 하는 새 정렬 절.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-861">A new sort clause with the given sort key and collation, and ascending sort order.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-862"><paramref name="key" />가 null인 경우</span><span class="sxs-lookup"><span data-stu-id="8a9c3-862"><paramref name="key" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8a9c3-863"><paramref name="collation" /> 가 비어 있거나 공백 문자만 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-863"><paramref name="collation" /> is empty or contains only space characters.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-864"><paramref name="key" /> 순서 비교 가능 결과 형식이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-864"><paramref name="key" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToSortClauseDescending">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8a9c3-865">새 <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> 내림차순 정렬 순서와 기본 데이터 정렬을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-865">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with a descending sort order and default collation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToSortClauseDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending (this System.Data.Common.CommandTrees.DbExpression key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending(class System.Data.Common.CommandTrees.DbExpression key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToSortClauseDescending (key As DbExpression) As DbSortClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortClause ^ ToSortClauseDescending(System::Data::Common::CommandTrees::DbExpression ^ key);" />
      <MemberSignature Language="F#" Value="static member ToSortClauseDescending : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbSortClause" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="8a9c3-866">정렬 키를 정의 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-866">The expression that defines the sort key.</span></span></param>
        <summary><span data-ttu-id="8a9c3-867">새 <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> 내림차순 정렬 순서와 기본 데이터 정렬을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-867">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with a descending sort order and default collation.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-868">지정 된 정렬 키 및 내림차순으로 정렬 하는 새 정렬 절.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-868">A new sort clause with the given sort key and descending sort order.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-869"><paramref name="key" />가 null인 경우</span><span class="sxs-lookup"><span data-stu-id="8a9c3-869"><paramref name="key" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-870"><paramref name="key" /> 순서 비교 가능 결과 형식이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-870"><paramref name="key" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSortClauseDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending (this System.Data.Common.CommandTrees.DbExpression key, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending(class System.Data.Common.CommandTrees.DbExpression key, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToSortClauseDescending (key As DbExpression, collation As String) As DbSortClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortClause ^ ToSortClauseDescending(System::Data::Common::CommandTrees::DbExpression ^ key, System::String ^ collation);" />
      <MemberSignature Language="F#" Value="static member ToSortClauseDescending : System.Data.Common.CommandTrees.DbExpression * string -&gt; System.Data.Common.CommandTrees.DbSortClause" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending (key, collation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="8a9c3-871">정렬 키를 정의 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-871">The expression that defines the sort key.</span></span></param>
        <param name="collation"><span data-ttu-id="8a9c3-872">에 대 한 데이터 정렬입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-872">The collation to sort under.</span></span></param>
        <summary><span data-ttu-id="8a9c3-873">새 <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> 내림차순 정렬 순서 및 지정 된 데이터 정렬을 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-873">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with a descending sort order and the specified collation.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-874">지정 된 정렬 키 및 데이터 정렬 및 내림차순 정렬 순서를 사용 하 여 새 정렬 절.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-874">A new sort clause with the given sort key and collation, and descending sort order.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-875"><paramref name="key" />가 null인 경우</span><span class="sxs-lookup"><span data-stu-id="8a9c3-875"><paramref name="key" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8a9c3-876"><paramref name="collation" /> 가 비어 있거나 공백 문자만 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-876"><paramref name="collation" /> is empty or contains only space characters.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-877"><paramref name="key" /> 순서 비교 가능 결과 형식이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-877"><paramref name="key" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TreatAs">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbTreatExpression TreatAs (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage treatType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbTreatExpression TreatAs(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage treatType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TreatAs (argument As DbExpression, treatType As TypeUsage) As DbTreatExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbTreatExpression ^ TreatAs(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ treatType);" />
      <MemberSignature Language="F#" Value="static member TreatAs : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbTreatExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs (argument, treatType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbTreatExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="treatType" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="8a9c3-878">인스턴스를 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-878">An expression that specifies the instance.</span></span></param>
        <param name="treatType"><span data-ttu-id="8a9c3-879">입력 처리에 대 한 메타 데이터-형식으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-879">Type metadata for the treat-as type.</span></span></param>
        <summary><span data-ttu-id="8a9c3-880">새 <see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-880">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" />.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-881">지정 된 인수 및 형식을 사용 하 여 새 DbTreatExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-881">A new DbTreatExpression with the specified argument and type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a9c3-882">Dbtreatexpression은 `argument` 다형 결과 형식이, 그리고 `treatType` 해당 결과 형식과 동일한 형식 계층 구조의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-882">DbTreatExpression requires that `argument` has a polymorphic result type, and that `treatType` is a type from the same type hierarchy as that result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-883"><paramref name="argument" /> 또는 <paramref name="treatType" />이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-883"><paramref name="argument" /> or <paramref name="treatType" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-884"><paramref name="treatType" /> 결과 형식과 동일한 형식 계층 구조에 없는 <paramref name="argument" />합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-884"><paramref name="treatType" /> is not in the same type hierarchy as the result type of <paramref name="argument" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="True">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbConstantExpression True { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Data.Common.CommandTrees.DbConstantExpression True" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property True As DbConstantExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Data::Common::CommandTrees::DbConstantExpression ^ True { System::Data::Common::CommandTrees::DbConstantExpression ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.True : System.Data.Common.CommandTrees.DbConstantExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbConstantExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a9c3-885">가져옵니다를 <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> 부울 값을 사용 하 여 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-885">Gets a <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the Boolean value <see langword="true" />.</span></span></summary>
        <value><span data-ttu-id="8a9c3-886">A <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> 부울 값을 사용 하 여 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-886">A <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the Boolean value <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnaryMinus">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression UnaryMinus (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression UnaryMinus(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UnaryMinus (argument As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ UnaryMinus(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member UnaryMinus : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbArithmeticExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="8a9c3-887">인수를 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-887">An expression that specifies the argument.</span></span></param>
        <summary><span data-ttu-id="8a9c3-888">새 <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> 인수의 값을 부정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-888">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that negates the value of the argument.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-889">부정 연산을 나타내는 하는 새 DbArithmeticExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-889">A new DbArithmeticExpression representing the negation operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-890"><paramref name="argument" />가 null인 경우</span><span class="sxs-lookup"><span data-stu-id="8a9c3-890"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-891">숫자 결과 형식이 존재 하지 않습니다에 대 한 <paramref name="argument" />합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-891">No numeric result type exists for <paramref name="argument" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpression Union (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpression Union(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Union (left As DbExpression, right As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpression ^ Union(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Union : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="8a9c3-892">왼쪽을 정의 하는 식 인수를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-892">An expression that defines the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="8a9c3-893">오른쪽을 정의 하는 식 인수를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-893">An expression that defines the right set argument.</span></span></param>
        <summary><span data-ttu-id="8a9c3-894">새 <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> 왼쪽의 합집합을 계산 하는 및 오른쪽 집합 인수의 중복 항목을 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-894">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that computes the union of the left and right set arguments with duplicates removed.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-895">중복 항목 없이 왼쪽 및 오른쪽 인수의 합집합을 계산하는 새 DbExpression입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-895">A new DbExpression that computes the union, without duplicates, of the left and right arguments.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-896"><paramref name="left" /> 또는 <paramref name="right" />이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-896"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-897">같음 호환 요소 형식이 있는 공통적인 컬렉션 결과 형식이 없습니다 사이 존재 <paramref name="left" /> 고 <paramref name="right" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-897">No common collection result type with an equality-comparable element type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UnionAll">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbUnionAllExpression UnionAll (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbUnionAllExpression UnionAll(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UnionAll (left As DbExpression, right As DbExpression) As DbUnionAllExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbUnionAllExpression ^ UnionAll(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member UnionAll : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbUnionAllExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbUnionAllExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="8a9c3-898">왼쪽을 정의 하는 식 인수를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-898">An expression that defines the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="8a9c3-899">오른쪽을 정의 하는 식 인수를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-899">An expression that defines the right set argument.</span></span></param>
        <summary><span data-ttu-id="8a9c3-900">새 <see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" /> 왼쪽 및 오른쪽 집합 인수의 합집합을 계산 하 고 중복 제거 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-900">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" /> that computes the union of the left and right set arguments and does not remove duplicates.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-901">중복 항목을 포함하여 왼쪽 및 오른쪽 인수의 합집합을 계산하는 새 DbUnionAllExpression입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-901">A new DbUnionAllExpression that union, including duplicates, of the left and right arguments.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-902"><paramref name="left" /> 또는 <paramref name="right" />이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-902"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-903">같음 호환 요소 형식이 있는 공통적인 컬렉션 결과 형식이 없습니다 사이 존재 <paramref name="left" /> 고 <paramref name="right" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-903">No common collection result type with an equality-comparable element type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Variable">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbVariableReferenceExpression Variable (this System.Data.Metadata.Edm.TypeUsage type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbVariableReferenceExpression Variable(class System.Data.Metadata.Edm.TypeUsage type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Variable (type As TypeUsage, name As String) As DbVariableReferenceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbVariableReferenceExpression ^ Variable(System::Data::Metadata::Edm::TypeUsage ^ type, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member Variable : System.Data.Metadata.Edm.TypeUsage * string -&gt; System.Data.Common.CommandTrees.DbVariableReferenceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable (type, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbVariableReferenceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="8a9c3-904">참조 되는 변수의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-904">The type of the referenced variable.</span></span></param>
        <param name="name"><span data-ttu-id="8a9c3-905">참조되는 변수의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-905">The name of the referenced variable.</span></span></param>
        <summary><span data-ttu-id="8a9c3-906">새 <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> 지정한 이름과 형식을 사용 하 여 변수를 참조 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-906">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> that references a variable with the specified name and type.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-907">지정한 이름 및 형식 변수에 대 한 참조를 나타내는 DbVariableReferenceExpression입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-907">A DbVariableReferenceExpression that represents a reference to a variable with the specified name and type.</span></span> <span data-ttu-id="8a9c3-908">식의 결과 형식은 동일 됩니다 <paramref name="type" />합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-908">The result type of the expression will be the same as <paramref name="type" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFilterExpression Where (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFilterExpression Where(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Where (source As DbExpression, predicate As Func(Of DbExpression, DbExpression)) As DbFilterExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFilterExpression ^ Where(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Where : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbFilterExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFilterExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8a9c3-909">입력된 집합을 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-909">An expression that specifies the input set.</span></span></param>
        <param name="predicate"><span data-ttu-id="8a9c3-910">입력된 집합의 각 멤버에 대해 평가할 조건자를 나타내는 메서드.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-910">A method representing the predicate to evaluate for each member of the input set.</span></span>    <span data-ttu-id="8a9c3-911">이 메서드는 조건자 논리를 제공 하는 부울 결과 형식이 있는 식을 생성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-911">This method must produce an expression with a Boolean result type that provides the predicate logic.</span></span></param>
        <summary><span data-ttu-id="8a9c3-912">새 <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> 주어진된 입력 지정된 된 조건자를 사용 하 여 집합의 요소를 필터링 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-912">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> that filters the elements in the given input set using the specified predicate.</span></span></summary>
        <returns><span data-ttu-id="8a9c3-913">모든 작업을 나타내는 새 DbQuantifierExpression 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-913">A new DbQuantifierExpression that represents the Any operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a9c3-914"><paramref name="predicate" />에서 생성된 식이 null입니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-914">The expression produced by <paramref name="predicate" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a9c3-915"><paramref name="predicate" />에서 생성된 식에 부울 결과 형식이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8a9c3-915">The expression produced by <paramref name="predicate" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>