<Type Name="BinaryServerFormatterSink" FullName="System.Runtime.Remoting.Channels.BinaryServerFormatterSink">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="73c054ec4a72d0340422b0170b08b9ff44a3a044" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37467938" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class BinaryServerFormatterSink : System.Runtime.Remoting.Channels.IChannelSinkBase, System.Runtime.Remoting.Channels.IServerChannelSink" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BinaryServerFormatterSink extends System.Object implements class System.Runtime.Remoting.Channels.IChannelSinkBase, class System.Runtime.Remoting.Channels.IServerChannelSink" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" />
  <TypeSignature Language="VB.NET" Value="Public Class BinaryServerFormatterSink&#xA;Implements IChannelSinkBase, IServerChannelSink" />
  <TypeSignature Language="C++ CLI" Value="public ref class BinaryServerFormatterSink : System::Runtime::Remoting::Channels::IChannelSinkBase, System::Runtime::Remoting::Channels::IServerChannelSink" />
  <TypeSignature Language="F#" Value="type BinaryServerFormatterSink = class&#xA;    interface IServerChannelSink&#xA;    interface IChannelSinkBase" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Remoting</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannelSinkBase</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IServerChannelSink</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="47d29-101">
        <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" />를 사용하는 서버 포맷터 싱크를 구현합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="47d29-101">Provides the implementation for a server formatter sink that uses the <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d29-102">적절 한 포맷터 싱크에 도달할 때까지 요청 스트림을 서버 채널 싱크를 통해 서버 전송 싱크로에서 전파 됩니다.</span><span class="sxs-lookup"><span data-stu-id="47d29-102">The request stream propagates from the server transport sink through the server channel sinks until it reaches the appropriate formatter sink.</span></span> <span data-ttu-id="47d29-103">포맷터 싱크는 메시지를 deserialize 하 고 파이프라인을 통해 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="47d29-103">The formatter sink deserializes the message and passes it through the pipeline.</span></span> <span data-ttu-id="47d29-104">채널 싱크 체인의 끝에 삽입 하는 특수 디스패치 싱크를 <xref:System.Runtime.Remoting.Channels.ChannelServices.CreateServerChannelSinkChain%2A?displayProperty=nameWithType> 서버 채널 싱크 체인을 만드는 서버 채널에서 호출 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="47d29-104">A special dispatch sink is inserted at the end of the channel sink chain by the <xref:System.Runtime.Remoting.Channels.ChannelServices.CreateServerChannelSinkChain%2A?displayProperty=nameWithType> method, which is called by server channels to create the server channel sink chains.</span></span> <span data-ttu-id="47d29-105">메시지 디스패치 싱크가 도달 하면 디스패치 싱크가 메시지를 원격 인프라로 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="47d29-105">When the message reaches the dispatch sink, the dispatch sink passes the message to the remoting infrastructure.</span></span>  
  
 <span data-ttu-id="47d29-106">다음 표에서 싱크에 현재 싱크 공급자를 지정할 수 있는 구성 속성을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="47d29-106">The following table shows the sink configuration properties that can be specified for the current sink provider.</span></span>  
  
|<span data-ttu-id="47d29-107">속성</span><span class="sxs-lookup"><span data-stu-id="47d29-107">Property</span></span>|<span data-ttu-id="47d29-108">설명</span><span class="sxs-lookup"><span data-stu-id="47d29-108">Description</span></span>|  
|--------------|-----------------|  
|`includeVersions`|<span data-ttu-id="47d29-109">포맷터가 버전 지정 정보를 포함 하는지 여부를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="47d29-109">Specifies whether the formatter will include versioning information.</span></span> <span data-ttu-id="47d29-110">값 `true` 또는 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="47d29-110">Values `true` or `false`.</span></span>|  
|`strictBinding`|<span data-ttu-id="47d29-111">버전 정보 없이 형식 이름 및 어셈블리 이름만을 사용하기 전에 버전 정보가 존재하는 경우, 받는 포맷터가 먼저 완벽한 버전 정보를 사용하여 형식을 식별함을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="47d29-111">Indicates that a receiving formatter will first try to identify the type using complete version information if it exists before using only the type name and assembly name without version information.</span></span> <span data-ttu-id="47d29-112">값 `true` 또는 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="47d29-112">Values `true` or `false`.</span></span> <span data-ttu-id="47d29-113">두 시스템 제공 포맷터의 기본값은 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="47d29-113">The default for both system-provided formatters is `false`.</span></span>|  
|`typeFilterLevel`|<span data-ttu-id="47d29-114">서버 채널에서 시도하는 자동 deserialization 수준을 지정하는 문자열 값입니다.</span><span class="sxs-lookup"><span data-stu-id="47d29-114">A string value that specifies the level of automatic deserialization that a server channel attempts.</span></span> <span data-ttu-id="47d29-115">지원 되는 값은 `Low` (기본값) 및 `Full`합니다.</span><span class="sxs-lookup"><span data-stu-id="47d29-115">Supported values are `Low` (the default) and `Full`.</span></span> <span data-ttu-id="47d29-116">Deserialization 수준에 대 한 자세한 내용은 참조 하세요 [ &#91; \<topic://cpconAutomaticDeserializationInNETRemoting >&#93;](http://msdn.microsoft.com/library/313a0e88-5b2b-4a17-8391-0ddf9f7a787b)합니다.</span><span class="sxs-lookup"><span data-stu-id="47d29-116">For details about deserialization levels, see [&#91;\<topic://cpconAutomaticDeserializationInNETRemoting>&#93;](http://msdn.microsoft.com/library/313a0e88-5b2b-4a17-8391-0ddf9f7a787b).</span></span><br /><br /> <span data-ttu-id="47d29-117">이 속성은.NET Framework 플랫폼의 버전 1.1 에서만 지원: Windows 98, Windows NT 4.0, Windows Millennium Edition, Windows 2000, Windows XP Home Edition, Windows XP Professional 및 Windows Server 2003 제품군입니다.</span><span class="sxs-lookup"><span data-stu-id="47d29-117">This property is supported only by the .NET Framework version 1.1 on the following platforms: Windows 98, Windows NT 4.0, Windows Millennium Edition, Windows 2000, Windows XP Home Edition, Windows XP Professional, and Windows Server 2003 family.</span></span>|  
  
> [!IMPORTANT]
>  <span data-ttu-id="47d29-118">신뢰할 수 없는 데이터 나 안전 하지 않은 채널을 통해이 개체의 인스턴스를 사용 하 여 보안 위험이 초래 됩니다.</span><span class="sxs-lookup"><span data-stu-id="47d29-118">Using an instance of this object with untrusted data or across an unsecure channel is a security risk.</span></span> <span data-ttu-id="47d29-119">신뢰할 수 있는 데이터만 사용 및 보안 채널을 통해이 개체를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="47d29-119">Use this object only with trusted data and across a secure channel.</span></span> <span data-ttu-id="47d29-120">자세한 내용은 [데이터 유효성 검사](https://www.owasp.org/index.php/Data_Validation)합니다.</span><span class="sxs-lookup"><span data-stu-id="47d29-120">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryServerFormatterSink (System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol protocol, System.Runtime.Remoting.Channels.IServerChannelSink nextSink, System.Runtime.Remoting.Channels.IChannelReceiver receiver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Runtime.Remoting.Channels.BinaryServerFormatterSink/Protocol protocol, class System.Runtime.Remoting.Channels.IServerChannelSink nextSink, class System.Runtime.Remoting.Channels.IChannelReceiver receiver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.#ctor(System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol,System.Runtime.Remoting.Channels.IServerChannelSink,System.Runtime.Remoting.Channels.IChannelReceiver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BinaryServerFormatterSink(System::Runtime::Remoting::Channels::BinaryServerFormatterSink::Protocol protocol, System::Runtime::Remoting::Channels::IServerChannelSink ^ nextSink, System::Runtime::Remoting::Channels::IChannelReceiver ^ receiver);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.BinaryServerFormatterSink : System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol * System.Runtime.Remoting.Channels.IServerChannelSink * System.Runtime.Remoting.Channels.IChannelReceiver -&gt; System.Runtime.Remoting.Channels.BinaryServerFormatterSink" Usage="new System.Runtime.Remoting.Channels.BinaryServerFormatterSink (protocol, nextSink, receiver)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="protocol" Type="System.Runtime.Remoting.Channels.BinaryServerFormatterSink+Protocol" />
        <Parameter Name="nextSink" Type="System.Runtime.Remoting.Channels.IServerChannelSink" />
        <Parameter Name="receiver" Type="System.Runtime.Remoting.Channels.IChannelReceiver" />
      </Parameters>
      <Docs>
        <param name="protocol">
          <span data-ttu-id="47d29-121">
            <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol" />의 현재 인스턴스와 함께 사용될 <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d29-121">The <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol" /> that will be used with the current instance of <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" />.</span>
          </span>
        </param>
        <param name="nextSink">
          <span data-ttu-id="47d29-122">채널 싱크 체인의 다음 싱크입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d29-122">The next sink in the channel sink chain.</span>
          </span>
        </param>
        <param name="receiver">
          <span data-ttu-id="47d29-123">
            <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" />의 새 인스턴스에 의해 serialize되는 메시지를 받을 채널을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d29-123">Indicates the channel that will receive the messages that are serialized by the new instance of <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d29-124">
            <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d29-124">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncProcessResponse">
      <MemberSignature Language="C#" Value="public void AsyncProcessResponse (System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers, System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AsyncProcessResponse(class System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, class System.Runtime.Remoting.Messaging.IMessage msg, class System.Runtime.Remoting.Channels.ITransportHeaders headers, class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AsyncProcessResponse(System::Runtime::Remoting::Channels::IServerResponseChannelSinkStack ^ sinkStack, System::Object ^ state, System::Runtime::Remoting::Messaging::IMessage ^ msg, System::Runtime::Remoting::Channels::ITransportHeaders ^ headers, System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="abstract member AsyncProcessResponse : System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack * obj * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders * System.IO.Stream -&gt; unit&#xA;override this.AsyncProcessResponse : System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack * obj * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders * System.IO.Stream -&gt; unit" Usage="binaryServerFormatterSink.AsyncProcessResponse (sinkStack, state, msg, headers, stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sinkStack" Type="System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="headers" Type="System.Runtime.Remoting.Channels.ITransportHeaders" />
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="sinkStack">
          <span data-ttu-id="47d29-125">서버 전송 싱크로 다시 향하는 싱크 스택입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d29-125">A stack of sinks that is leading back to the server transport sink.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="47d29-126">요청측에서 생성되고 응답측에서 필요로 하는 현재 싱크와 관련된 정보입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d29-126">Information that is associated with the current sink, generated on the request side, and needed on the response side.</span>
          </span>
        </param>
        <param name="msg">
          <span data-ttu-id="47d29-127">응답 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d29-127">The response message.</span>
          </span>
        </param>
        <param name="headers">
          <span data-ttu-id="47d29-128">클라이언트로 보내는 반환 메시지에 추가할 헤더입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d29-128">The headers to add to the return message that is heading to the client.</span>
          </span>
        </param>
        <param name="stream">
          <span data-ttu-id="47d29-129">전송 싱크로 다시 향하는 스트림입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d29-129">The stream that is heading back to the transport sink.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d29-130">비동기적으로 보내지는 메서드 호출의 응답을 처리하도록 요청합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d29-130">Requests processing of the response from a method call that is sent asynchronously.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Runtime.Remoting.Channels.ServerChannelSinkStack" />
        <altmember cref="M:System.Runtime.Remoting.Channels.ServerChannelSinkStack.Push(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetResponseStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetResponseStream (System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetResponseStream(class System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, class System.Runtime.Remoting.Messaging.IMessage msg, class System.Runtime.Remoting.Channels.ITransportHeaders headers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetResponseStream (sinkStack As IServerResponseChannelSinkStack, state As Object, msg As IMessage, headers As ITransportHeaders) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetResponseStream(System::Runtime::Remoting::Channels::IServerResponseChannelSinkStack ^ sinkStack, System::Object ^ state, System::Runtime::Remoting::Messaging::IMessage ^ msg, System::Runtime::Remoting::Channels::ITransportHeaders ^ headers);" />
      <MemberSignature Language="F#" Value="abstract member GetResponseStream : System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack * obj * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders -&gt; System.IO.Stream&#xA;override this.GetResponseStream : System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack * obj * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders -&gt; System.IO.Stream" Usage="binaryServerFormatterSink.GetResponseStream (sinkStack, state, msg, headers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sinkStack" Type="System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="headers" Type="System.Runtime.Remoting.Channels.ITransportHeaders" />
      </Parameters>
      <Docs>
        <param name="sinkStack">
          <span data-ttu-id="47d29-131">서버 전송 싱크로 다시 향하는 싱크 스택입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d29-131">A stack of sinks that is leading back to the server transport sink.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="47d29-132">요청측에서 생성되고 응답측에서 필요로 하는 현재 싱크와 관련된 정보입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d29-132">Information that is associated with the current sink, generated on the request side, and needed on the response side.</span>
          </span>
        </param>
        <param name="msg">
          <span data-ttu-id="47d29-133">serialize할 응답 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d29-133">The response message to serialize.</span>
          </span>
        </param>
        <param name="headers">
          <span data-ttu-id="47d29-134">클라이언트로 향하는 응답 스트림에 넣을 헤더입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d29-134">The headers to put in the response stream to the client.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d29-135">제공된 응답 메시지가 serialize될 <see cref="T:System.IO.Stream" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d29-135">Returns the <see cref="T:System.IO.Stream" /> onto which the provided response message is to be serialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47d29-136">제공된 응답 메시지가 serialize될 <see cref="T:System.IO.Stream" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d29-136">The <see cref="T:System.IO.Stream" /> onto which the provided response message is to be serialized.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d29-137">이 메서드는 응답 스트림에 작성 해야 하는 경우 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="47d29-137">This method is called when a response stream needs to be created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextChannelSink">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Channels.IServerChannelSink NextChannelSink { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Remoting.Channels.IServerChannelSink NextChannelSink" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.NextChannelSink" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextChannelSink As IServerChannelSink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Remoting::Channels::IServerChannelSink ^ NextChannelSink { System::Runtime::Remoting::Channels::IServerChannelSink ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextChannelSink : System.Runtime.Remoting.Channels.IServerChannelSink" Usage="System.Runtime.Remoting.Channels.BinaryServerFormatterSink.NextChannelSink" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Channels.IServerChannelSink</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47d29-138">싱크 체인의 다음 <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSink" />를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d29-138">Gets the next <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSink" /> in the sink chain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47d29-139">싱크 체인의 다음 <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSink" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d29-139">The next <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSink" /> in the sink chain.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessMessage">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Channels.ServerProcessing ProcessMessage (System.Runtime.Remoting.Channels.IServerChannelSinkStack sinkStack, System.Runtime.Remoting.Messaging.IMessage requestMsg, System.Runtime.Remoting.Channels.ITransportHeaders requestHeaders, System.IO.Stream requestStream, out System.Runtime.Remoting.Messaging.IMessage responseMsg, out System.Runtime.Remoting.Channels.ITransportHeaders responseHeaders, out System.IO.Stream responseStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Runtime.Remoting.Channels.ServerProcessing ProcessMessage(class System.Runtime.Remoting.Channels.IServerChannelSinkStack sinkStack, class System.Runtime.Remoting.Messaging.IMessage requestMsg, class System.Runtime.Remoting.Channels.ITransportHeaders requestHeaders, class System.IO.Stream requestStream, [out] class System.Runtime.Remoting.Messaging.IMessage&amp; responseMsg, [out] class System.Runtime.Remoting.Channels.ITransportHeaders&amp; responseHeaders, [out] class System.IO.Stream&amp; responseStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ProcessMessage (sinkStack As IServerChannelSinkStack, requestMsg As IMessage, requestHeaders As ITransportHeaders, requestStream As Stream, ByRef responseMsg As IMessage, ByRef responseHeaders As ITransportHeaders, ByRef responseStream As Stream) As ServerProcessing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::Channels::ServerProcessing ProcessMessage(System::Runtime::Remoting::Channels::IServerChannelSinkStack ^ sinkStack, System::Runtime::Remoting::Messaging::IMessage ^ requestMsg, System::Runtime::Remoting::Channels::ITransportHeaders ^ requestHeaders, System::IO::Stream ^ requestStream, [Runtime::InteropServices::Out] System::Runtime::Remoting::Messaging::IMessage ^ % responseMsg, [Runtime::InteropServices::Out] System::Runtime::Remoting::Channels::ITransportHeaders ^ % responseHeaders, [Runtime::InteropServices::Out] System::IO::Stream ^ % responseStream);" />
      <MemberSignature Language="F#" Value="abstract member ProcessMessage : System.Runtime.Remoting.Channels.IServerChannelSinkStack * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders * System.IO.Stream *  *  *  -&gt; System.Runtime.Remoting.Channels.ServerProcessing&#xA;override this.ProcessMessage : System.Runtime.Remoting.Channels.IServerChannelSinkStack * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders * System.IO.Stream *  *  *  -&gt; System.Runtime.Remoting.Channels.ServerProcessing" Usage="binaryServerFormatterSink.ProcessMessage (sinkStack, requestMsg, requestHeaders, requestStream, responseMsg, responseHeaders, responseStream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Channels.ServerProcessing</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sinkStack" Type="System.Runtime.Remoting.Channels.IServerChannelSinkStack" />
        <Parameter Name="requestMsg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="requestHeaders" Type="System.Runtime.Remoting.Channels.ITransportHeaders" />
        <Parameter Name="requestStream" Type="System.IO.Stream" />
        <Parameter Name="responseMsg" Type="System.Runtime.Remoting.Messaging.IMessage&amp;" RefType="out" />
        <Parameter Name="responseHeaders" Type="System.Runtime.Remoting.Channels.ITransportHeaders&amp;" RefType="out" />
        <Parameter Name="responseStream" Type="System.IO.Stream&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="sinkStack">
          <span data-ttu-id="47d29-140">현재 싱크를 호출한 채널 싱크의 스택입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d29-140">A stack of channel sinks that called the current sink.</span>
          </span>
        </param>
        <param name="requestMsg">
          <span data-ttu-id="47d29-141">해당 요청을 포함하는 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d29-141">The message that contains the request.</span>
          </span>
        </param>
        <param name="requestHeaders">
          <span data-ttu-id="47d29-142">클라이언트로부터 들어오는 메시지에서 가져온 헤더입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d29-142">Headers that are retrieved from the incoming message from the client.</span>
          </span>
        </param>
        <param name="requestStream">
          <span data-ttu-id="47d29-143">처리되어 deserialization 싱크로 전달되어야 할 스트림입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d29-143">The stream that needs to be processed and passed on to the deserialization sink.</span>
          </span>
        </param>
        <param name="responseMsg">
          <span data-ttu-id="47d29-144">이 메서드가 반환하면 응답 메시지를 보유하는 <see cref="T:System.Runtime.Remoting.Messaging.IMessage" />를 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d29-144">When this method returns, contains a <see cref="T:System.Runtime.Remoting.Messaging.IMessage" /> that holds the response message.</span>
          </span>
          <span data-ttu-id="47d29-145">이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d29-145">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <param name="responseHeaders">
          <span data-ttu-id="47d29-146">이 메서드가 반환될 때 클라이언트로 보내는 반환 메시지에 추가될 헤더가 들어 있는 <see cref="T:System.Runtime.Remoting.Channels.ITransportHeaders" />를 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d29-146">When this method returns, contains a <see cref="T:System.Runtime.Remoting.Channels.ITransportHeaders" /> that holds the headers to add to the return message that is heading to the client.</span>
          </span>
          <span data-ttu-id="47d29-147">이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d29-147">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <param name="responseStream">
          <span data-ttu-id="47d29-148">이 메서드가 반환될 때 전송 싱크로 향하는 <see cref="T:System.IO.Stream" />을 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d29-148">When this method returns, contains a <see cref="T:System.IO.Stream" /> that is heading to the transport sink.</span>
          </span>
          <span data-ttu-id="47d29-149">이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d29-149">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d29-150">현재 싱크에서 메시지 처리를 요청합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d29-150">Requests message processing from the current sink.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47d29-151">메시지 처리 방법에 대한 정보를 제공하는 <see cref="T:System.Runtime.Remoting.Channels.ServerProcessing" /> 상태 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d29-151">A <see cref="T:System.Runtime.Remoting.Channels.ServerProcessing" /> status value that provides information about how the message was processed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d29-152">프록시 작업 메시지에 대해 호출 되는 메서드 호출을 변환 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="47d29-152">The proxy's job is to convert a method call that is invoked on it into a message.</span></span> <span data-ttu-id="47d29-153">구현 하는 메시지를 <xref:System.Runtime.Remoting.Messaging.IMessage> 인터페이스를 호출 하 여 서버 쪽 클라이언트 쪽에서 전달 됩니다 <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> 메시지 싱크 개체에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="47d29-153">The message, which implements the <xref:System.Runtime.Remoting.Messaging.IMessage> interface, is passed from the client end to the server end by invoking <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> on message sink objects.</span></span> <span data-ttu-id="47d29-154">즉, 모든 메시지 싱크 호출에 대 한 책임 지는 메시지 싱크를 함께 연결 <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> 에서 현재 메시지 싱크와 해당 작업을 마친 후 다음 메시지 싱크 합니다.</span><span class="sxs-lookup"><span data-stu-id="47d29-154">Message sinks are chained together, which means that every message sink is responsible for calling <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> on the next message sink after the current message sink has finished its work.</span></span> <span data-ttu-id="47d29-155">예를 들어 동기화와 관련 된 메시지 싱크를 획득 또는 해제 하 고 다운스트림 메시지 싱크를 위임 된 잠금이 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47d29-155">For instance, a synchronization-related message sink might cause a lock to be acquired or released and delegated to the downstream message sink.</span></span>  
  
 <span data-ttu-id="47d29-156">포맷터 채널 싱크 보낼 채널을 통해 호출 해야 하는 메시지를 가져옵니다 하는 경우 <xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A>, 메시지를 매개 변수로 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="47d29-156">When the formatter channel sink gets a message that needs to be sent over the channel, it calls <xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A>, passing the message as a parameter.</span></span> <span data-ttu-id="47d29-157">포맷터 싱크는 전송 헤더 배열 및 호출에 다음 만듭니다 <xref:System.Runtime.Remoting.Channels.IClientChannelSink.GetRequestStream%2A> 포맷터 싱크의 합니다.</span><span class="sxs-lookup"><span data-stu-id="47d29-157">The formatter sink then creates the transport header array and calls <xref:System.Runtime.Remoting.Channels.IClientChannelSink.GetRequestStream%2A> on the formatter sink.</span></span> <span data-ttu-id="47d29-158">이 호출은 싱크 체인으로 전달 되 고 싱크는 포맷터 싱크를 다시 전달 되는 요청 스트림을 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47d29-158">This call is forwarded down the sink chain, and any sink can create a request stream that will be passed back to the formatter sink.</span></span> <span data-ttu-id="47d29-159">이 호출이 반환, 메시지를 serialize <xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A> 싱크 체인에 있는 첫 번째 체인에서 호출 되 고 메시지 채널 싱크로 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="47d29-159">After this call returns, the message is serialized, <xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A> is called on the first chain in the sink chain, and the message is passed to the channel sinks.</span></span>  
  
 <span data-ttu-id="47d29-160">채널 싱크 메시지가 스트림에 데이터를 쓸, 헤더 배열에 헤더를 추가 고 호출을 다음 싱크로 전달 하기 전에 싱크 스택에 추가 되도록 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47d29-160">After the channel sinks get the message, they can write data to the stream, add headers to the header array, and add themselves to the sink stack before forwarding the call to the next sink.</span></span> <span data-ttu-id="47d29-161">호출 전송 싱크 체인의 끝에 도달 하면 전송 싱크에서 헤더를 보내고 서버로 싱크에서 채널을 통해 메시지를 직렬화 합니다.</span><span class="sxs-lookup"><span data-stu-id="47d29-161">When the call reaches the transport sink at the end of the chain, the transport sink sends the headers and serialized message over the channel to the server, where the process is reversed.</span></span>  
  
 <span data-ttu-id="47d29-162">서버 쪽에 메시지를 가져오면 전송 싱크로 헤더 검색 serialize 된 스트림에서 메시지 및 포맷터 싱크에 도달할 때까지 싱크 체인을 통해 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="47d29-162">When the message gets to the server side, the transport sink retrieves the headers and serialized message from the stream and forwards these through the sink chain until the formatter sink is reached.</span></span> <span data-ttu-id="47d29-163">포맷터 싱크는 다음 메시지를 deserialize 하 고 원격 인프라에 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="47d29-163">The formatter sink then deserializes the message and forwards it to the remoting infrastructure.</span></span> <span data-ttu-id="47d29-164">그런 다음 원격 인프라 메서드 호출으로 메시지를 변환 하 고 서버 개체를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="47d29-164">Then, the remoting infrastructure turns the message into a method call, and calls the server object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Properties" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IDictionary ^ Properties { System::Collections::IDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.IDictionary" Usage="System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47d29-165">현재 채널 싱크에 대한 속성의 <see cref="T:System.Collections.IDictionary" />를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d29-165">Gets a <see cref="T:System.Collections.IDictionary" /> of properties for the current channel sink.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47d29-166">현재 채널 싱크에 대한 속성의 <see cref="T:System.Collections.IDictionary" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d29-166">A <see cref="T:System.Collections.IDictionary" /> of properties for the current channel sink.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d29-167">자세한 내용은 [ &#91; \<topic://cpconchannelformatterconfigurationproperties >&#93;](http://msdn.microsoft.com/library/226ecf74-ebbd-4ea0-a701-dcf4441deefe)합니다.</span><span class="sxs-lookup"><span data-stu-id="47d29-167">For more information, see [&#91;\<topic://cpconchannelformatterconfigurationproperties>&#93;](http://msdn.microsoft.com/library/226ecf74-ebbd-4ea0-a701-dcf4441deefe).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeFilterLevel">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.Formatters.TypeFilterLevel TypeFilterLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.Formatters.TypeFilterLevel TypeFilterLevel" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.TypeFilterLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeFilterLevel As TypeFilterLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::Formatters::TypeFilterLevel TypeFilterLevel { System::Runtime::Serialization::Formatters::TypeFilterLevel get(); void set(System::Runtime::Serialization::Formatters::TypeFilterLevel value); };" />
      <MemberSignature Language="F#" Value="member this.TypeFilterLevel : System.Runtime.Serialization.Formatters.TypeFilterLevel with get, set" Usage="System.Runtime.Remoting.Channels.BinaryServerFormatterSink.TypeFilterLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.TypeFilterLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47d29-168">
            <see langword="TypeFilterLevel" />가 수행하는 자동 deserialization의 <see langword="BinaryServerFormatterSink" /> 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d29-168">Gets or sets the <see langword="TypeFilterLevel" /> value of automatic deserialization that the <see langword="BinaryServerFormatterSink" /> performs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47d29-169">현재 자동 deserialization 수준을 나타내는 <see langword="TypeFilterLevel" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d29-169">The <see langword="TypeFilterLevel" /> that represents the current automatic deserialization level.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d29-170">지원 되는 값은 `Low` (기본값) 및 `Full`합니다.</span><span class="sxs-lookup"><span data-stu-id="47d29-170">Supported values are `Low` (the default) and `Full`.</span></span> <span data-ttu-id="47d29-171">Deserialization 수준에 대 한 자세한 내용은 참조 하세요 [.NET Remoting에서의 자동 Deserialization](http://msdn.microsoft.com/library/313a0e88-5b2b-4a17-8391-0ddf9f7a787b)합니다.</span><span class="sxs-lookup"><span data-stu-id="47d29-171">For details about deserialization levels, see [Automatic Deserialization in .NET Remoting](http://msdn.microsoft.com/library/313a0e88-5b2b-4a17-8391-0ddf9f7a787b).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>