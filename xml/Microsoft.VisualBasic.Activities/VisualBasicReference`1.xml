<Type Name="VisualBasicReference&lt;TResult&gt;" FullName="Microsoft.VisualBasic.Activities.VisualBasicReference&lt;TResult&gt;">
  <TypeSignature Language="C#" Value="public sealed class VisualBasicReference&lt;TResult&gt; : System.Activities.CodeActivity&lt;System.Activities.Location&lt;TResult&gt;&gt;, System.Activities.Expressions.ITextExpression, System.Activities.XamlIntegration.IValueSerializableExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit VisualBasicReference`1&lt;TResult&gt; extends System.Activities.CodeActivity`1&lt;class System.Activities.Location`1&lt;!TResult&gt;&gt; implements class System.Activities.Expressions.ITextExpression, class System.Activities.XamlIntegration.IValueSerializableExpression" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class VisualBasicReference(Of TResult)&#xA;Inherits CodeActivity(Of Location(Of TResult))&#xA;Implements ITextExpression, IValueSerializableExpression" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TResult&gt;&#xA;public ref class VisualBasicReference sealed : System::Activities::CodeActivity&lt;System::Activities::Location&lt;TResult&gt; ^&gt;, System::Activities::Expressions::ITextExpression, System::Activities::XamlIntegration::IValueSerializableExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TResult" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Activities.CodeActivity&lt;System.Activities.Location&lt;TResult&gt;&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TResult">System.Activities.Location&lt;TResult&gt;</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Activities.Expressions.ITextExpression</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Activities.XamlIntegration.IValueSerializableExpression</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TResult"><span data-ttu-id="ce6f8-101">식의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="ce6f8-101">The type of the expression.</span></span></typeparam>
    <summary><span data-ttu-id="ce6f8-102"><see cref="F:System.Activities.ArgumentDirection.Out" /> 인수의 바인딩을 지원하며 l-value로 계산되는 Visual Basic 구문의 식을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="ce6f8-102">Contains an expression in Visual Basic syntax that evaluates to an l-value, which supports binding of the <see cref="F:System.Activities.ArgumentDirection.Out" /> arguments.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce6f8-103">엔터티 공급자에 LINQ를 사용 하 여 LINQ 식을 평가 하는이 작업 합니다.</span><span class="sxs-lookup"><span data-stu-id="ce6f8-103">This activity uses the LINQ to Entity provider to evaluate LINQ expressions.</span></span> <span data-ttu-id="ce6f8-104">ADO.Net 엔터티 데이터 모델에서 평가할 수 있는이 활동에 사용 된 LINQ 식을 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="ce6f8-104">Any LINQ expressions used with this activity must be evaluatable by the ADO.Net Entity Data Model.</span></span> <span data-ttu-id="ce6f8-105">예를 들어 LINQ 식 활동, 변수 또는 인수 워크플로 자체의 참조를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="ce6f8-105">For example, LINQ expressions cannot be used to reference activities, variables, or arguments of the workflow itself.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ce6f8-106"><see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="ce6f8-106">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualBasicReference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Activities.VisualBasicReference`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualBasicReference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ce6f8-107"><see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="ce6f8-107">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualBasicReference (string expressionText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string expressionText) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Activities.VisualBasicReference`1.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expressionText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualBasicReference(System::String ^ expressionText);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expressionText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expressionText"><span data-ttu-id="ce6f8-108">Visual Basic 구문의 식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="ce6f8-108">The expression string in Visual Basic syntax.</span></span></param>
        <summary><span data-ttu-id="ce6f8-109">특정 식을 사용하여 <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="ce6f8-109">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" /> class using the specific expression.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheMetadata">
      <MemberSignature Language="C#" Value="protected override void CacheMetadata (System.Activities.CodeActivityMetadata metadata);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CacheMetadata(valuetype System.Activities.CodeActivityMetadata metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Activities.VisualBasicReference`1.CacheMetadata(System.Activities.CodeActivityMetadata)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CacheMetadata (metadata As CodeActivityMetadata)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CacheMetadata(System::Activities::CodeActivityMetadata metadata);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.CodeActivityMetadata" />
      </Parameters>
      <Docs>
        <param name="metadata">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertToString">
      <MemberSignature Language="C#" Value="public bool CanConvertToString (System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertToString(class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Activities.VisualBasicReference`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanConvertToString (context As IValueSerializerContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertToString(System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.XamlIntegration.IValueSerializableExpression.CanConvertToString(System.Windows.Markup.IValueSerializerContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="ce6f8-110">변환에 사용되는 컨텍스트 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="ce6f8-110">The context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="ce6f8-111"><see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" />를 <see cref="T:System.String" />으로 변환할 수 있는지 여부를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="ce6f8-111">Determines whether the <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" /> can be converted into a <see cref="T:System.String" />.</span></span></summary>
        <returns>
          <span data-ttu-id="ce6f8-112"><see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" />을 문자열로 변환할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ce6f8-112"><see langword="true" /> if the <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" /> can be converted into a string; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce6f8-113">이 메서드는 항상 `true`을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="ce6f8-113">This method always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ConvertToString(class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Activities.VisualBasicReference`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (context As IValueSerializerContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ConvertToString(System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.XamlIntegration.IValueSerializableExpression.ConvertToString(System.Windows.Markup.IValueSerializerContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="ce6f8-114">변환에 사용되는 컨텍스트 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="ce6f8-114">The context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="ce6f8-115"><see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" />을 <see cref="T:System.String" />으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="ce6f8-115">Converts the <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" /> to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="ce6f8-116"><see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" />의 문자열 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="ce6f8-116">A string representation of the <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce6f8-117">문자열 표현은 대괄호로 묶은 <xref:Microsoft.VisualBasic.Activities.VisualBasicReference%601.ExpressionText%2A>로 구성됩니다.</span><span class="sxs-lookup"><span data-stu-id="ce6f8-117">The string representation consists of the <xref:Microsoft.VisualBasic.Activities.VisualBasicReference%601.ExpressionText%2A> surrounded by brackets.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected override System.Activities.Location&lt;TResult&gt; Execute (System.Activities.CodeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Activities.Location`1&lt;!TResult&gt; Execute(class System.Activities.CodeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Activities.VisualBasicReference`1.Execute(System.Activities.CodeActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Execute (context As CodeActivityContext) As Location(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Activities::Location&lt;TResult&gt; ^ Execute(System::Activities::CodeActivityContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Location&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.CodeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpressionText">
      <MemberSignature Language="C#" Value="public string ExpressionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpressionText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Activities.VisualBasicReference`1.ExpressionText" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpressionText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExpressionText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce6f8-118">이 <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" />가 나타내는 Visual Basic 식을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="ce6f8-118">Gets or set the Visual Basic expression represented by this <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" />.</span></span></summary>
        <value><span data-ttu-id="ce6f8-119">Visual Basic 식입니다.</span><span class="sxs-lookup"><span data-stu-id="ce6f8-119">The Visual Basic expression.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpressionTree">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression GetExpressionTree ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression GetExpressionTree() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Activities.VisualBasicReference`1.GetExpressionTree" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExpressionTree () As Expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Linq::Expressions::Expression ^ GetExpressionTree();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Expressions.ITextExpression.GetExpressionTree</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ce6f8-120">참조에 사용된 식 트리를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ce6f8-120">Gets the expression tree used in the reference.</span></span></summary>
        <returns><span data-ttu-id="ce6f8-121">참조에 사용된 식 트리입니다.</span><span class="sxs-lookup"><span data-stu-id="ce6f8-121">The expression tree used in the reference.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public string Language { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Language" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Activities.VisualBasicReference`1.Language" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Language As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Language { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Activities.Expressions.ITextExpression.Language</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce6f8-122">참조에 사용되는 언어를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ce6f8-122">Gets the language used in the reference.</span></span></summary>
        <value><span data-ttu-id="ce6f8-123">참조에 사용되는 언어입니다.</span><span class="sxs-lookup"><span data-stu-id="ce6f8-123">The language used in the reference.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresCompilation">
      <MemberSignature Language="C#" Value="public bool RequiresCompilation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresCompilation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Activities.VisualBasicReference`1.RequiresCompilation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequiresCompilation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequiresCompilation { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Activities.Expressions.ITextExpression.RequiresCompilation</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce6f8-124">참조에 컴파일이 필요한지 여부를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ce6f8-124">Gets whether the reference requires compilation.</span></span></summary>
        <value>
          <span data-ttu-id="ce6f8-125">참조에 컴파일이 필요하면 <see langword="True" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ce6f8-125"><see langword="True" /> if the reference requires compilation; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>