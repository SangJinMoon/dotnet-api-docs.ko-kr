<Type Name="FileRecordSequence" FullName="System.IO.Log.FileRecordSequence">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4c853a66a932592421edbe6cd06c3f5073c2580e" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37654520" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class FileRecordSequence : IDisposable, System.IO.Log.IRecordSequence" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FileRecordSequence extends System.Object implements class System.IDisposable, class System.IO.Log.IRecordSequence" />
  <TypeSignature Language="DocId" Value="T:System.IO.Log.FileRecordSequence" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FileRecordSequence&#xA;Implements IDisposable, IRecordSequence" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileRecordSequence sealed : IDisposable, System::IO::Log::IRecordSequence" />
  <TypeSignature Language="F#" Value="type FileRecordSequence = class&#xA;    interface IRecordSequence&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Log</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IO.Log.IRecordSequence</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="61767-101">Implements an <see cref="T:System.IO.Log.IRecordSequence" /> on top of a file.</span>
      <span class="sxs-lookup">
        <span data-stu-id="61767-101">Implements an <see cref="T:System.IO.Log.IRecordSequence" /> on top of a file.</span>
      </span>
      <span data-ttu-id="61767-102">This class cannot be inherited.</span>
      <span class="sxs-lookup">
        <span data-stu-id="61767-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61767-103"><xref:System.IO.Log.FileRecordSequence>는 파일 시스템에서 간단한 로그 파일에 기반을 둔 레코드 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="61767-103">The <xref:System.IO.Log.FileRecordSequence> is a record sequence based on a single log file in the file system.</span></span> <span data-ttu-id="61767-104">이 시퀀스는 간단한 파일 기반 로그 위에 <xref:System.IO.Log.IRecordSequence> 인터페이스를 간단히 구현한 것입니다.</span><span class="sxs-lookup"><span data-stu-id="61767-104">It is a simple implementation of the <xref:System.IO.Log.IRecordSequence> interface, on top of a simple file-based log.</span></span>  
  
 <span data-ttu-id="61767-105">파일 기반 로그를 조작하려면 <xref:System.IO.Log.FileRecordSequence>가 생성되는 시점에 파일 시스템 보안에서 규정하는 대로, 응용 프로그램을 실행하는 계정에 충분한 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-105">To manipulate a file-based log, the account that your application is running in must have sufficient privileges, as dictated by the file system security at the time the <xref:System.IO.Log.FileRecordSequence> is constructed.</span></span> <span data-ttu-id="61767-106">또한 생성 시점에 FullTrust가 요청되며,</span><span class="sxs-lookup"><span data-stu-id="61767-106">In addition, a demand for FullTrust is made at construction time.</span></span> <span data-ttu-id="61767-107">그 후 Windows 보안 모델에 따라 권한 확인 결과가 캐시됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-107">The permission verification results are cached thereafter in keeping with the Windows security model.</span></span> <span data-ttu-id="61767-108">레코드 시퀀스의 내용을 권한 없는 사용자에게 실수로 공개하지 않도록 주의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-108">You should ensure that you do not accidentally expose the contents of the record sequence to an unauthorized user.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61767-109">다음 예제에서는 레코드 시퀀스를 만들어 레코드를 추가한 후 레코드를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-109">The following example creates a record sequence, appends record to it, and finally reads the records.</span></span>  
  
 [!code-csharp[IRecordSequence#1](~/samples/snippets/csharp/VS_Snippets_CFX/irecordsequence/cs/readrecord.cs#1)]
 [!code-vb[IRecordSequence#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/irecordsequence/vb/readrecord.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="61767-110">Initializes a new instance of the <see cref="T:System.IO.Log.FileRecordSequence" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-110">Initializes a new instance of the <see cref="T:System.IO.Log.FileRecordSequence" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileRecordSequence (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileRecordSequence(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.IO.Log.FileRecordSequence : string -&gt; System.IO.Log.FileRecordSequence" Usage="new System.IO.Log.FileRecordSequence path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="61767-111">A relative or absolute path for the file that this <see cref="T:System.IO.Log.FileRecordSequence" /> instance will encapsulate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-111">A relative or absolute path for the file that this <see cref="T:System.IO.Log.FileRecordSequence" /> instance will encapsulate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61767-112">Initializes a new instance of the <see cref="T:System.IO.Log.FileRecordSequence" /> class with a specified file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-112">Initializes a new instance of the <see cref="T:System.IO.Log.FileRecordSequence" /> class with a specified file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61767-113">이 생성자는 파일에 대한 읽기/쓰기 액세스 권한을 만들고 공유 읽기 액세스를 사용하여 파일을 엽니다.</span><span class="sxs-lookup"><span data-stu-id="61767-113">This constructor creates read/write access to the file, and opens the file with share Read access.</span></span> <span data-ttu-id="61767-114">따라서 이 <xref:System.IO.Log.FileRecordSequence> 인스턴스가 삭제될 때까지 이 프로세스 또는 다른 프로세스에서 파일에 쓰기 위해 시도하는 파일 열기 요청은 실패하지만 읽기 시도는 성공합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-114">This means that requests to open the file for writing by this or another process fails until this <xref:System.IO.Log.FileRecordSequence> instance has been disposed of, but read attempts will succeed.</span></span> <span data-ttu-id="61767-115">`path`를 찾을 수 없으면 0바이트 크기의 새 파일이 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="61767-115">If `path` is not found, a new file is created with a size of 0 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61767-116">다음 예제에서는 레코드 시퀀스를 만들어 레코드를 추가한 후 레코드를 읽고 마지막으로 시퀀스를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-116">The following example creates a record sequence, appends record to it, reads the records, and finally diposes the sequence.</span></span>  
  
 [!code-csharp[IRecordSequence#1](~/samples/snippets/csharp/VS_Snippets_CFX/irecordsequence/cs/readrecord.cs#1)]
 [!code-vb[IRecordSequence#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/irecordsequence/vb/readrecord.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61767-117">The file specified by <paramref name="path" /> is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-117">The file specified by <paramref name="path" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="61767-118">The file specified by <paramref name="path" /> cannot be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-118">The file specified by <paramref name="path" /> cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="61767-119">The request cannot be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-119">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="61767-120">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-120">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="61767-121">Access for the specified log store is denied by the operating system.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-121">Access for the specified log store is denied by the operating system.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileRecordSequence (string path, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.#ctor(System.String,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, access As FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileRecordSequence(System::String ^ path, System::IO::FileAccess access);" />
      <MemberSignature Language="F#" Value="new System.IO.Log.FileRecordSequence : string * System.IO.FileAccess -&gt; System.IO.Log.FileRecordSequence" Usage="new System.IO.Log.FileRecordSequence (path, access)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="61767-122">A relative or absolute path for the file that this <see cref="T:System.IO.Log.FileRecordSequence" /> instance will encapsulate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-122">A relative or absolute path for the file that this <see cref="T:System.IO.Log.FileRecordSequence" /> instance will encapsulate.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="61767-123">A valid <see cref="T:System.IO.FileAccess" /> value that controls the kind of access users have to a log file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-123">A valid <see cref="T:System.IO.FileAccess" /> value that controls the kind of access users have to a log file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61767-124">Initializes a new instance of the <see cref="T:System.IO.Log.FileRecordSequence" /> class with a specified file and an access mode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-124">Initializes a new instance of the <see cref="T:System.IO.Log.FileRecordSequence" /> class with a specified file and an access mode.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61767-125">The file specified by <paramref name="path" /> is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-125">The file specified by <paramref name="path" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="61767-126">The file specified by <paramref name="path" /> cannot be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-126">The file specified by <paramref name="path" /> cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="61767-127">The request cannot be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-127">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="61767-128">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-128">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="61767-129">Access for the specified log store is denied by the operating system.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-129">Access for the specified log store is denied by the operating system.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileRecordSequence (string path, System.IO.FileAccess access, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileAccess access, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.#ctor(System.String,System.IO.FileAccess,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, access As FileAccess, size As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileRecordSequence(System::String ^ path, System::IO::FileAccess access, int size);" />
      <MemberSignature Language="F#" Value="new System.IO.Log.FileRecordSequence : string * System.IO.FileAccess * int -&gt; System.IO.Log.FileRecordSequence" Usage="new System.IO.Log.FileRecordSequence (path, access, size)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="61767-130">A relative or absolute path for the file that this <see cref="T:System.IO.Log.FileRecordSequence" /> instance will encapsulate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-130">A relative or absolute path for the file that this <see cref="T:System.IO.Log.FileRecordSequence" /> instance will encapsulate.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="61767-131">A valid <see cref="T:System.IO.FileAccess" /> value that controls the kind of access users have to a log file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-131">A valid <see cref="T:System.IO.FileAccess" /> value that controls the kind of access users have to a log file.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="61767-132">The size of the log file to be opened.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-132">The size of the log file to be opened.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61767-133">Initializes a new instance of the <see cref="T:System.IO.Log.FileRecordSequence" /> class with a specified file, an access mode, and a file size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-133">Initializes a new instance of the <see cref="T:System.IO.Log.FileRecordSequence" /> class with a specified file, an access mode, and a file size.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61767-134">One or more of the parameters are out of the valid range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-134">One or more of the parameters are out of the valid range.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61767-135">The file specified by <paramref name="path" /> is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-135">The file specified by <paramref name="path" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="61767-136">The file specified by <paramref name="path" /> cannot be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-136">The file specified by <paramref name="path" /> cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="61767-137">The request cannot be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-137">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="61767-138">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-138">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="61767-139">Access for the specified log store is denied by the operating system.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-139">Access for the specified log store is denied by the operating system.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AdvanceBaseSequenceNumber">
      <MemberSignature Language="C#" Value="public void AdvanceBaseSequenceNumber (System.IO.Log.SequenceNumber newBaseSequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AdvanceBaseSequenceNumber(valuetype System.IO.Log.SequenceNumber newBaseSequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.AdvanceBaseSequenceNumber(System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AdvanceBaseSequenceNumber (newBaseSequenceNumber As SequenceNumber)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AdvanceBaseSequenceNumber(System::IO::Log::SequenceNumber newBaseSequenceNumber);" />
      <MemberSignature Language="F#" Value="abstract member AdvanceBaseSequenceNumber : System.IO.Log.SequenceNumber -&gt; unit&#xA;override this.AdvanceBaseSequenceNumber : System.IO.Log.SequenceNumber -&gt; unit" Usage="fileRecordSequence.AdvanceBaseSequenceNumber newBaseSequenceNumber" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.AdvanceBaseSequenceNumber(System.IO.Log.SequenceNumber)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newBaseSequenceNumber" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="newBaseSequenceNumber">
          <span data-ttu-id="61767-140">The new base sequence number of the record sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-140">The new base sequence number of the record sequence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61767-141">Moves the base sequence number of the log forward.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-141">Moves the base sequence number of the log forward.</span>
          </span>
          <span data-ttu-id="61767-142">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-142">This method cannot be inherited.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61767-143">
            <paramref name="newBaseSequenceNumber" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-143">
              <paramref name="newBaseSequenceNumber" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61767-144">
            <paramref name="newBaseSequenceNumber" /> is not between the base and last sequence numbers of this sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-144">
              <paramref name="newBaseSequenceNumber" /> is not between the base and last sequence numbers of this sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="61767-145">An I/O error occurred while modifying the sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-145">An I/O error occurred while modifying the sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61767-146">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-146">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="61767-147">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-147">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Append">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="61767-148">Writes a log record to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-148">Writes a log record to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="61767-149">다음 예제에서는 레코드 시퀀스를 만들어 레코드를 추가한 후 레코드를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-149">The following example creates a record sequence, appends record to it, and finally reads the records.</span></span>  
  
 [!code-csharp[IRecordSequence#0](~/samples/snippets/csharp/VS_Snippets_CFX/irecordsequence/cs/readrecord.cs#0)]
 [!code-vb[IRecordSequence#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/irecordsequence/vb/readrecord.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Append(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions);" />
      <MemberSignature Language="F#" Value="abstract member Append : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions -&gt; System.IO.Log.SequenceNumber&#xA;override this.Append : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.Append (data, nextUndoRecord, previousRecord, recordAppendOptions)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="61767-150">A list of byte array segments that will be concatenated and appended as the record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-150">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="61767-151">The sequence number of the next record in the user-specified order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-151">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="61767-152">The sequence number of the next record in Previous order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-152">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="61767-153">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-153">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61767-154">Writes a log record to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-154">Writes a log record to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          </span>
          <span data-ttu-id="61767-155">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-155">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61767-156">The sequence number of the appended log record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-156">The sequence number of the appended log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61767-157">`data` 매개 변수에 포함된 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-157">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="61767-158">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-158">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="61767-159">일반적으로 이 메서드는 레코드를 쓰기 전에 완료됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-159">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="61767-160">레코드가 기록되도록 하려면 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 매개 변수를 사용하여 `recordAppendOptions` 플래그를 지정하거나, <xref:System.IO.Log.FileRecordSequence.Flush%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-160">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61767-161">다음 예제에서는 레코드 시퀀스를 만들어 레코드를 추가한 후 레코드를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-161">The following example creates a record sequence, appends record to it, and finally reads the records.</span></span>  
  
 [!code-csharp[FileRecordSequence#0](~/samples/snippets/csharp/VS_Snippets_CFX/filerecordsequence/cs/filerecordsequence.cs#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61767-162">One or more of the arguments are <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-162">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61767-163">One or more of the arguments are out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-163">One or more of the arguments are out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="61767-164">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-164">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="61767-165">The request could not be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-165">The request could not be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61767-166">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-166">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="61767-167">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-167">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="61767-168">The record sequence is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-168">The record sequence is full.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Append(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions);" />
      <MemberSignature Language="F#" Value="abstract member Append : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions -&gt; System.IO.Log.SequenceNumber&#xA;override this.Append : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.Append (data, nextUndoRecord, previousRecord, recordAppendOptions)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="61767-169">A list of byte array segments that will be concatenated and appended as the record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-169">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="61767-170">The sequence number of the next record in the user-specified order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-170">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="61767-171">The sequence number of the next record in Previous order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-171">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="61767-172">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-172">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61767-173">Writes a log record to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-173">Writes a log record to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          </span>
          <span data-ttu-id="61767-174">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-174">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61767-175">The sequence number of the appended log record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-175">The sequence number of the appended log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61767-176">`data` 매개 변수에 포함된 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-176">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="61767-177">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-177">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="61767-178">일반적으로 이 메서드는 레코드를 쓰기 전에 완료됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-178">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="61767-179">레코드가 기록되도록 하려면 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 매개 변수를 사용하여 `recordAppendOptions` 플래그를 지정하거나, <xref:System.IO.Log.FileRecordSequence.Flush%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-179">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61767-180">다음 예제에서는 이 메서드를 사용하여 레코드 시퀀스를 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="61767-180">The following example shows how you can create a record sequence with this method.</span></span>  
  
 [!code-csharp[IRecordSequence#3](~/samples/snippets/csharp/VS_Snippets_CFX/irecordsequence/cs/readrecord.cs#3)] 
 [!code-vb[IRecordSequence#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/irecordsequence/vb/readrecord.vb#3)]   
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61767-181">One or more of the arguments are <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-181">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61767-182">One or more of the arguments are out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-182">One or more of the arguments are out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="61767-183">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-183">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="61767-184">The request could not be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-184">The request could not be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61767-185">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-185">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="61767-186">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-186">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="61767-187">The record sequence is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-187">The record sequence is full.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Append(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member Append : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber&#xA;override this.Append : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.Append (data, nextUndoRecord, previousRecord, recordAppendOptions, reservations)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="61767-188">A list of byte array segments that will be concatenated and appended as the record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-188">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="61767-189">The sequence number of the next record in the user-specified order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-189">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="61767-190">The sequence number of the next record in Previous order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-190">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="61767-191">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-191">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="61767-192">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-192">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61767-193">Writes a log record to the <see cref="T:System.IO.Log.FileRecordSequence" />, using space previously reserved in the sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-193">Writes a log record to the <see cref="T:System.IO.Log.FileRecordSequence" />, using space previously reserved in the sequence.</span>
          </span>
          <span data-ttu-id="61767-194">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-194">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61767-195">The sequence number of the appended log record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-195">The sequence number of the appended log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61767-196">`data` 매개 변수에 포함된 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-196">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="61767-197">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-197">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="61767-198">추가된 레코드는 `reservations` 매개 변수로 지정된 예약을 사용하여 이전에 예약된 공간을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-198">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="61767-199">추가 작업이 성공하면 데이터가 포함될 수 있는 가장 작은 예약 영역을 사용하고 해당 예약 영역이 컬렉션에서 제거됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-199">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="61767-200">일반적으로 이 메서드는 레코드를 쓰기 전에 완료됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-200">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="61767-201">레코드가 기록되도록 하려면 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 매개 변수를 사용하여 `recordAppendOptions` 플래그를 지정하거나, <xref:System.IO.Log.FileRecordSequence.Flush%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-201">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61767-202">One or more of the arguments are <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-202">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61767-203">One or more of the arguments are out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-203">One or more of the arguments are out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61767-204">
            <paramref name="reservations" /> was not created by this record sequence..</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-204">
              <paramref name="reservations" /> was not created by this record sequence..</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="61767-205">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-205">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="61767-206">The request could not be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-206">The request could not be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61767-207">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-207">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="61767-208">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-208">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="61767-209">The record sequence is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-209">The record sequence is full.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException">
          <span data-ttu-id="61767-210">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-210">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Append(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member Append : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber&#xA;override this.Append : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.Append (data, nextUndoRecord, previousRecord, recordAppendOptions, reservations)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="61767-211">A list of byte array segments that will be concatenated and appended as the record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-211">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="61767-212">The sequence number of the next record in the user-specified order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-212">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="61767-213">The sequence number of the next record in Previous order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-213">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="61767-214">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-214">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="61767-215">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-215">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61767-216">Writes a log record to the <see cref="T:System.IO.Log.FileRecordSequence" />, using space previously reserved in the sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-216">Writes a log record to the <see cref="T:System.IO.Log.FileRecordSequence" />, using space previously reserved in the sequence.</span>
          </span>
          <span data-ttu-id="61767-217">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-217">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61767-218">The sequence number of the appended log record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-218">The sequence number of the appended log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61767-219">`data` 매개 변수에 포함된 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-219">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="61767-220">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-220">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="61767-221">추가된 레코드는 `reservations` 매개 변수로 지정된 예약을 사용하여 이전에 예약된 공간을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-221">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="61767-222">추가 작업이 성공하면 데이터가 포함될 수 있는 가장 작은 예약 영역을 사용하고 해당 예약 영역이 컬렉션에서 제거됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-222">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="61767-223">일반적으로 이 메서드는 레코드를 쓰기 전에 완료됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-223">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="61767-224">레코드가 기록되도록 하려면 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 매개 변수를 사용하여 `recordAppendOptions` 플래그를 지정하거나, <xref:System.IO.Log.FileRecordSequence.Flush%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-224">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61767-225">One or more of the arguments are <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-225">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61767-226">One or more of the arguments are out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-226">One or more of the arguments are out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61767-227">
            <paramref name="reservations" /> was not created by this record sequence..</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-227">
              <paramref name="reservations" /> was not created by this record sequence..</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="61767-228">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-228">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="61767-229">The request could not be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-229">The request could not be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61767-230">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-230">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="61767-231">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-231">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="61767-232">The record sequence is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-232">The record sequence is full.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException">
          <span data-ttu-id="61767-233">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-233">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BaseSequenceNumber">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber BaseSequenceNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.SequenceNumber BaseSequenceNumber" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRecordSequence.BaseSequenceNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseSequenceNumber As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::SequenceNumber BaseSequenceNumber { System::IO::Log::SequenceNumber get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseSequenceNumber : System.IO.Log.SequenceNumber" Usage="System.IO.Log.FileRecordSequence.BaseSequenceNumber" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.BaseSequenceNumber</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61767-234">Gets the sequence number of the first valid record in the current <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-234">Gets the sequence number of the first valid record in the current <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61767-235">
            <see cref="T:System.IO.Log.FileRecordSequence" />에서 유효한 레코드에 해당하는 가장 작은 시퀀스 번호입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-235">The lowest sequence number that corresponds to a valid record in the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61767-236">유효한 시퀀스 번호는 <xref:System.IO.Log.FileRecordSequence.BaseSequenceNumber%2A>보다 크거나 같고 <xref:System.IO.Log.FileRecordSequence.LastSequenceNumber%2A>보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-236">Valid sequence numbers are greater than or equal to <xref:System.IO.Log.FileRecordSequence.BaseSequenceNumber%2A> and less than <xref:System.IO.Log.FileRecordSequence.LastSequenceNumber%2A>.</span></span> <span data-ttu-id="61767-237">그 외의 다른 시퀀스 번호는 유효하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-237">All other sequence numbers are invalid.</span></span>  
  
 <span data-ttu-id="61767-238">이 속성의 값은 <xref:System.IO.Log.FileRecordSequence.WriteRestartArea%2A> 또는 <xref:System.IO.Log.FileRecordSequence.AdvanceBaseSequenceNumber%2A> 메서드를 호출하여 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-238">The value of this property can be changed by calling the <xref:System.IO.Log.FileRecordSequence.WriteRestartArea%2A> or <xref:System.IO.Log.FileRecordSequence.AdvanceBaseSequenceNumber%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61767-239">다음 예제에서는 루프에서 <xref:System.IO.Log.FileRecordSequence.BaseSequenceNumber%2A>를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="61767-239">The following example shows using <xref:System.IO.Log.FileRecordSequence.BaseSequenceNumber%2A> in a loop:</span></span>  
  
 [!code-csharp[IRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/irecordsequence/cs/readrecord.cs#2)]
 [!code-vb[IRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/irecordsequence/vb/readrecord.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61767-240">The property was accessed after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-240">The property was accessed after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAppend">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="61767-241">Begins an asynchronous append operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-241">Begins an asynchronous append operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * AsyncCallback * obj -&gt; IAsyncResult" Usage="fileRecordSequence.BeginAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="61767-242">A list of byte array segments that will be concatenated and appended as the record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-242">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="61767-243">The sequence number of the next record in the user-specified order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-243">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="61767-244">The sequence number of the next record in Previous order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-244">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="61767-245">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-245">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="61767-246">An optional asynchronous callback, to be called when the append is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-246">An optional asynchronous callback, to be called when the append is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="61767-247">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-247">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61767-248">Begins an asynchronous append operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-248">Begins an asynchronous append operation.</span>
          </span>
          <span data-ttu-id="61767-249">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-249">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61767-250">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-250">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61767-251">이 메서드에서 반환한 <xref:System.IAsyncResult>를 <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> 메서드에 전달하여 추가 작업이 완료되었고 리소스를 적절하게 해제할 수 있음을 확인해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-251">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method, to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="61767-252">비동기 추가 중에 오류가 발생한 경우 이 메서드에서 반환된 <xref:System.IO.Log.FileRecordSequence.EndAppend%2A>를 사용하여 <xref:System.IAsyncResult> 메서드를 호출하기 전에는 예외가 throw되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-252">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="61767-253">`data` 매개 변수에 포함된 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-253">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="61767-254">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-254">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="61767-255">일반적으로 이 메서드는 레코드를 쓰기 전에 완료됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-255">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="61767-256">레코드가 기록되도록 하려면 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 매개 변수를 사용하여 `recordAppendOptions` 플래그를 지정하거나, <xref:System.IO.Log.FileRecordSequence.Flush%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-256">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61767-257">One or more of the arguments are <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-257">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61767-258">One or more of the arguments are out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-258">One or more of the arguments are out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="61767-259">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-259">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="61767-260">The request cannot be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-260">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61767-261">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-261">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="61767-262">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-262">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="61767-263">The record sequence is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-263">The record sequence is full.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * AsyncCallback * obj -&gt; IAsyncResult" Usage="fileRecordSequence.BeginAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="61767-264">A list of byte array segments that will be concatenated and appended as the record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-264">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="61767-265">The sequence number of the next record in the user-specified order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-265">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="61767-266">The sequence number of the next record in Previous order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-266">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="61767-267">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-267">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="61767-268">An optional asynchronous callback, to be called when the append is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-268">An optional asynchronous callback, to be called when the append is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="61767-269">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-269">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61767-270">Begins an asynchronous append operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-270">Begins an asynchronous append operation.</span>
          </span>
          <span data-ttu-id="61767-271">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-271">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61767-272">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-272">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61767-273">이 메서드에서 반환한 <xref:System.IAsyncResult>를 <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> 메서드에 전달하여 추가 작업이 완료되었고 리소스를 적절하게 해제할 수 있음을 확인해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-273">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method, to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="61767-274">비동기 추가 중에 오류가 발생한 경우 이 메서드에서 반환된 <xref:System.IO.Log.FileRecordSequence.EndAppend%2A>를 사용하여 <xref:System.IAsyncResult> 메서드를 호출하기 전에는 예외가 throw되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-274">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="61767-275">`data` 매개 변수에 포함된 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-275">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="61767-276">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-276">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="61767-277">일반적으로 이 메서드는 레코드를 쓰기 전에 완료됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-277">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="61767-278">레코드가 기록되도록 하려면 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 매개 변수를 사용하여 `recordAppendOptions` 플래그를 지정하거나, <xref:System.IO.Log.FileRecordSequence.Flush%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-278">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61767-279">One or more of the arguments are <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-279">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61767-280">One or more of the arguments are out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-280">One or more of the arguments are out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="61767-281">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-281">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="61767-282">The request cannot be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-282">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61767-283">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-283">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="61767-284">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-284">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="61767-285">The record sequence is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-285">The record sequence is full.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult" Usage="fileRecordSequence.BeginAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservations, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="61767-286">A list of byte array segments that will be concatenated and appended as the record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-286">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="61767-287">The sequence number of the next record in the user-specified order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-287">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="61767-288">The sequence number of the next record in Previous order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-288">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="61767-289">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-289">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="61767-290">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-290">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="61767-291">An optional asynchronous callback, to be called when the append is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-291">An optional asynchronous callback, to be called when the append is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="61767-292">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-292">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61767-293">Begins an asynchronous append operation using space previously reserved in the sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-293">Begins an asynchronous append operation using space previously reserved in the sequence.</span>
          </span>
          <span data-ttu-id="61767-294">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-294">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61767-295">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-295">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61767-296">이 메서드에서 반환한 <xref:System.IAsyncResult>를 <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> 메서드에 전달하여 추가 작업이 완료되었고 리소스를 적절하게 해제할 수 있음을 확인해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-296">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method, to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="61767-297">비동기 추가 중에 오류가 발생한 경우 이 메서드에서 반환된 <xref:System.IO.Log.FileRecordSequence.EndAppend%2A>를 사용하여 <xref:System.IAsyncResult> 메서드를 호출하기 전에는 예외가 throw되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-297">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="61767-298">`data` 매개 변수에 포함된 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-298">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="61767-299">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-299">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="61767-300">추가된 레코드는 `reservations` 매개 변수로 지정된 예약을 사용하여 이전에 예약된 공간을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-300">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="61767-301">추가 작업이 성공하면 데이터가 포함될 수 있는 가장 작은 예약 영역을 사용하고 해당 예약 영역이 컬렉션에서 제거됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-301">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="61767-302">일반적으로 이 메서드는 레코드를 쓰기 전에 완료됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-302">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="61767-303">레코드가 기록되도록 하려면 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 매개 변수를 사용하여 `recordAppendOptions` 플래그를 지정하거나, <xref:System.IO.Log.FileRecordSequence.Flush%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-303">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61767-304">One or more of the arguments are <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-304">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61767-305">One or more of the arguments are out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-305">One or more of the arguments are out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61767-306">
            <paramref name="reservations" /> was not created by this record sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-306">
              <paramref name="reservations" /> was not created by this record sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="61767-307">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-307">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="61767-308">The request cannot be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-308">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61767-309">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-309">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="61767-310">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-310">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="61767-311">The record sequence is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-311">The record sequence is full.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException">
          <span data-ttu-id="61767-312">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-312">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult" Usage="fileRecordSequence.BeginAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservations, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="61767-313">A list of byte array segments that will be concatenated and appended as the record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-313">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="61767-314">The sequence number of the next record in the user-specified order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-314">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="61767-315">The sequence number of the next record in Previous order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-315">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="61767-316">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-316">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="61767-317">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-317">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="61767-318">An optional asynchronous callback, to be called when the append is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-318">An optional asynchronous callback, to be called when the append is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="61767-319">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-319">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61767-320">Begins an asynchronous append operation using space previously reserved in the sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-320">Begins an asynchronous append operation using space previously reserved in the sequence.</span>
          </span>
          <span data-ttu-id="61767-321">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-321">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61767-322">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-322">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61767-323">이 메서드에서 반환한 <xref:System.IAsyncResult>를 <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> 메서드에 전달하여 추가 작업이 완료되었고 리소스를 적절하게 해제할 수 있음을 확인해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-323">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method, to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="61767-324">비동기 추가 중에 오류가 발생한 경우 이 메서드에서 반환된 <xref:System.IO.Log.FileRecordSequence.EndAppend%2A>를 사용하여 <xref:System.IAsyncResult> 메서드를 호출하기 전에는 예외가 throw되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-324">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="61767-325">`data` 매개 변수에 포함된 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-325">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="61767-326">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-326">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="61767-327">추가된 레코드는 `reservations` 매개 변수로 지정된 예약을 사용하여 이전에 예약된 공간을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-327">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="61767-328">추가 작업이 성공하면 데이터가 포함될 수 있는 가장 작은 예약 영역을 사용하고 해당 예약 영역이 컬렉션에서 제거됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-328">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="61767-329">일반적으로 이 메서드는 레코드를 쓰기 전에 완료됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-329">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="61767-330">레코드가 기록되도록 하려면 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 매개 변수를 사용하여 `recordAppendOptions` 플래그를 지정하거나, <xref:System.IO.Log.FileRecordSequence.Flush%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-330">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61767-331">One or more of the arguments are <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-331">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61767-332">One or more of the arguments are out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-332">One or more of the arguments are out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61767-333">
            <paramref name="reservations" /> was not created by this record sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-333">
              <paramref name="reservations" /> was not created by this record sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="61767-334">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-334">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="61767-335">The request cannot be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-335">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61767-336">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-336">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="61767-337">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-337">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="61767-338">The record sequence is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-338">The record sequence is full.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException">
          <span data-ttu-id="61767-339">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-339">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginFlush">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginFlush (System.IO.Log.SequenceNumber sequenceNumber, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginFlush(valuetype System.IO.Log.SequenceNumber sequenceNumber, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginFlush(System.IO.Log.SequenceNumber,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginFlush(System::IO::Log::SequenceNumber sequenceNumber, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginFlush : System.IO.Log.SequenceNumber * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginFlush : System.IO.Log.SequenceNumber * AsyncCallback * obj -&gt; IAsyncResult" Usage="fileRecordSequence.BeginFlush (sequenceNumber, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginFlush(System.IO.Log.SequenceNumber,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequenceNumber" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sequenceNumber">
          <span data-ttu-id="61767-340">The sequence number of the latest record that must be written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-340">The sequence number of the latest record that must be written.</span>
          </span>
          <span data-ttu-id="61767-341">If <see cref="T:System.IO.Log.SequenceNumber" /> is invalid, then all records must be written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-341">If <see cref="T:System.IO.Log.SequenceNumber" /> is invalid, then all records must be written.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="61767-342">An optional asynchronous callback, to be called when the flush is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-342">An optional asynchronous callback, to be called when the flush is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="61767-343">A user-provided object that distinguishes this particular asynchronous flush request from other requests.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-343">A user-provided object that distinguishes this particular asynchronous flush request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61767-344">Begins an asynchronous flush operation, using space previously reserved in the sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-344">Begins an asynchronous flush operation, using space previously reserved in the sequence.</span>
          </span>
          <span data-ttu-id="61767-345">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-345">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61767-346">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous flush operation, which could still be pending.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-346">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous flush operation, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61767-347">현재 메서드에서 반환된 <xref:System.IAsyncResult>를 <xref:System.IO.Log.FileRecordSequence.EndFlush%2A> 메서드에 전달하여 플러시를 완료하고 리소스를 적절하게 해제해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-347">You should pass the <xref:System.IAsyncResult> returned by the current method to the <xref:System.IO.Log.FileRecordSequence.EndFlush%2A> method to ensure that the flush completes and resources are freed appropriately.</span></span> <span data-ttu-id="61767-348">비동기 플러시 중에 오류가 발생하는 경우 이 메서드에서 반환된 <xref:System.IO.Log.FileRecordSequence.EndFlush%2A>를 사용하여 <xref:System.IAsyncResult> 메서드를 호출하기 전에는 예외가 throw되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-348">If an error occurs during an asynchronous flush, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndFlush%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="61767-349">이 메서드를 호출하면 <xref:System.IO.Log.FileRecordSequence>에 추가된 모든 레코드가 영속적으로 기록됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-349">Calling this method ensures that all records that have been appended to the <xref:System.IO.Log.FileRecordSequence> are durably written.</span></span>  
  
 <span data-ttu-id="61767-350">레코드 시퀀스가 삭제되었거나 잘못된 인수를 전달하는 경우 이 작업 내에서 즉시 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-350">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="61767-351">비동기 플러시 요청 중에 발생한 오류(예: I/O 요청 중의 디스크 오류)로 인해 <xref:System.IO.Log.FileRecordSequence.EndFlush%2A> 메서드를 호출할 때 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-351">Errors that occurred during an asynchronous flush request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.FileRecordSequence.EndFlush%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61767-352">One or more of the arguments is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-352">One or more of the arguments is invalid.</span>
          </span>
          <span data-ttu-id="61767-353">
            <paramref name="sequenceNumber" /> is not valid for this sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-353">
              <paramref name="sequenceNumber" /> is not valid for this sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61767-354">
            <paramref name="sequenceNumber" /> is not between the base and last sequence numbers of this sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-354">
              <paramref name="sequenceNumber" /> is not between the base and last sequence numbers of this sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="61767-355">An I/O error occurred while flushing the data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-355">An I/O error occurred while flushing the data.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61767-356">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-356">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="61767-357">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-357">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginReserveAndAppend">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="61767-358">Begins an asynchronous reserve and append operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-358">Begins an asynchronous reserve and append operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginReserveAndAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReserveAndAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, long[] reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginReserveAndAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginReserveAndAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, cli::array &lt;long&gt; ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginReserveAndAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginReserveAndAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] * AsyncCallback * obj -&gt; IAsyncResult" Usage="fileRecordSequence.BeginReserveAndAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservationCollection, reservations, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="61767-359">A list of byte array segments that will be concatenated and appended as the record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-359">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="61767-360">The sequence number of the next record in the user-specified order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-360">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="61767-361">The sequence number of the next record in Previous order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-361">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="61767-362">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-362">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="reservationCollection">
          <span data-ttu-id="61767-363">The reservation collection to make reservations in.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-363">The reservation collection to make reservations in.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="61767-364">The reservations to make, in bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-364">The reservations to make, in bytes.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="61767-365">An optional asynchronous callback, to be called when the append is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-365">An optional asynchronous callback, to be called when the append is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="61767-366">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-366">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61767-367">Begins an asynchronous reserve and append operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-367">Begins an asynchronous reserve and append operation.</span>
          </span>
          <span data-ttu-id="61767-368">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-368">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61767-369">An <see cref="T:System.IAsyncResult" /> that represents this asynchronous operation, which could still be pending.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-369">An <see cref="T:System.IAsyncResult" /> that represents this asynchronous operation, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61767-370">이 메서드에서 반환한 <xref:System.IAsyncResult>를 <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> 메서드에 전달하여 추가 작업이 완료되었고 리소스를 적절하게 해제할 수 있음을 확인해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-370">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method, to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="61767-371">비동기 추가 중에 오류가 발생한 경우 이 메서드에서 반환된 <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A>를 사용하여 <xref:System.IAsyncResult> 메서드를 호출하기 전에는 예외가 throw되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-371">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="61767-372">`data` 매개 변수에 포함된 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-372">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="61767-373">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-373">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="61767-374">지정된 예약은 레코드 추가 작업이 포함된 원자 단위 작업에서 제공된 예약 컬렉션에 추가됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-374">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="61767-375">추가가 실패하면 공간이 예약되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-375">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="61767-376">일반적으로 이 메서드는 레코드를 쓰기 전에 완료될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-376">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="61767-377">레코드가 기록되도록 하려면 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 매개 변수를 사용하여 `recordAppendOptions` 플래그를 지정하거나, <xref:System.IO.Log.FileRecordSequence.Flush%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-377">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 <span data-ttu-id="61767-378">레코드 시퀀스가 삭제되었거나 잘못된 인수를 전달하는 경우 이 작업 내에서 즉시 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-378">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="61767-379">비동기 추가 요청 중에 발생한 오류(예: I/O 요청 중의 디스크 오류)는 <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> 메서드를 호출할 때 예외로 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-379">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61767-380">One or more of the arguments are <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-380">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61767-381">One or more of the arguments are out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-381">One or more of the arguments are out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61767-382">
            <paramref name="reservations" /> was not created by this record sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-382">
              <paramref name="reservations" /> was not created by this record sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="61767-383">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-383">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="61767-384">The request could not be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-384">The request could not be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61767-385">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-385">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="61767-386">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-386">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="61767-387">The record sequence is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-387">The record sequence is full.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException">
          <span data-ttu-id="61767-388">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-388">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReserveAndAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReserveAndAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, long[] reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginReserveAndAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginReserveAndAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, cli::array &lt;long&gt; ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginReserveAndAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginReserveAndAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] * AsyncCallback * obj -&gt; IAsyncResult" Usage="fileRecordSequence.BeginReserveAndAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservationCollection, reservations, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="61767-389">A list of byte array segments that will be concatenated and appended as the record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-389">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="61767-390">The sequence number of the next record in the user-specified order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-390">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="61767-391">The sequence number of the next record in Previous order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-391">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="61767-392">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-392">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="reservationCollection">
          <span data-ttu-id="61767-393">The reservation collection to make reservations in.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-393">The reservation collection to make reservations in.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="61767-394">The reservations to make, in bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-394">The reservations to make, in bytes.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="61767-395">An optional asynchronous callback, to be called when the append is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-395">An optional asynchronous callback, to be called when the append is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="61767-396">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-396">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61767-397">Begins an asynchronous reserve and append operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-397">Begins an asynchronous reserve and append operation.</span>
          </span>
          <span data-ttu-id="61767-398">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-398">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61767-399">An <see cref="T:System.IAsyncResult" /> that represents this asynchronous operation, which could still be pending.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-399">An <see cref="T:System.IAsyncResult" /> that represents this asynchronous operation, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61767-400">이 메서드에서 반환한 <xref:System.IAsyncResult>를 <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> 메서드에 전달하여 추가 작업이 완료되었고 리소스를 적절하게 해제할 수 있음을 확인해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-400">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method, to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="61767-401">비동기 추가 중에 오류가 발생한 경우 이 메서드에서 반환된 <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A>를 사용하여 <xref:System.IAsyncResult> 메서드를 호출하기 전에는 예외가 throw되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-401">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="61767-402">`data` 매개 변수에 포함된 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-402">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="61767-403">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-403">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="61767-404">지정된 예약은 레코드 추가 작업이 포함된 원자 단위 작업에서 제공된 예약 컬렉션에 추가됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-404">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="61767-405">추가가 실패하면 공간이 예약되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-405">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="61767-406">일반적으로 이 메서드는 레코드를 쓰기 전에 완료될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-406">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="61767-407">레코드가 기록되도록 하려면 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 매개 변수를 사용하여 `recordAppendOptions` 플래그를 지정하거나, <xref:System.IO.Log.FileRecordSequence.Flush%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-407">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 <span data-ttu-id="61767-408">레코드 시퀀스가 삭제되었거나 잘못된 인수를 전달하는 경우 이 작업 내에서 즉시 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-408">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="61767-409">비동기 추가 요청 중에 발생한 오류(예: I/O 요청 중의 디스크 오류)는 <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> 메서드를 호출할 때 예외로 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-409">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61767-410">One or more of the arguments are <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-410">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61767-411">One or more of the arguments are out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-411">One or more of the arguments are out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61767-412">
            <paramref name="reservations" /> was not created by this record sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-412">
              <paramref name="reservations" /> was not created by this record sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="61767-413">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-413">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="61767-414">The request could not be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-414">The request could not be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61767-415">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-415">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="61767-416">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-416">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="61767-417">The record sequence is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-417">The record sequence is full.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException">
          <span data-ttu-id="61767-418">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-418">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginWriteRestartArea">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="61767-419">Begins an asynchronous restart area write operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-419">Begins an asynchronous restart area write operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginWriteRestartArea">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWriteRestartArea (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum, System.IO.Log.ReservationCollection reservation, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum, class System.IO.Log.ReservationCollection reservation, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWriteRestartArea (data As ArraySegment(Of Byte), newBaseSeqNum As SequenceNumber, reservation As ReservationCollection, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginWriteRestartArea(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber newBaseSeqNum, System::IO::Log::ReservationCollection ^ reservation, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginWriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginWriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult" Usage="fileRecordSequence.BeginWriteRestartArea (data, newBaseSeqNum, reservation, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservation" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="61767-420">A list of byte array segments that will be concatenated and appended as the record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-420">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="newBaseSeqNum">
          <span data-ttu-id="61767-421">The new base sequence number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-421">The new base sequence number.</span>
          </span>
          <span data-ttu-id="61767-422">The specified sequence number must be greater than or equal to the current base sequence number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-422">The specified sequence number must be greater than or equal to the current base sequence number.</span>
          </span>
        </param>
        <param name="reservation">
          <span data-ttu-id="61767-423">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-423">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="61767-424">An optional asynchronous callback, to be called when the restart area write is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-424">An optional asynchronous callback, to be called when the restart area write is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="61767-425">A user-provided object that distinguishes this particular asynchronous restart area write request from other requests.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-425">A user-provided object that distinguishes this particular asynchronous restart area write request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61767-426">Begins an asynchronous restart area write operation, using space previously reserved in the sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-426">Begins an asynchronous restart area write operation, using space previously reserved in the sequence.</span>
          </span>
          <span data-ttu-id="61767-427">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-427">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61767-428">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous restart area write operation, which could still be pending.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-428">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous restart area write operation, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61767-429">이 메서드에서 반환된 <xref:System.IAsyncResult>를 <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> 메서드에 전달하여 재시작 영역 쓰기 작업을 완료하고 리소스를 적절하게 해제할 수 있도록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-429">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> method, to assure that the restart area write operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="61767-430">비동기 재시작 영역 쓰기 작업 중에 오류가 발생한 경우 이 메서드에서 반환된 <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A>를 사용하여 <xref:System.IAsyncResult> 메서드를 호출하기 전에는 예외가 throw되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-430">If an error has occurred during an asynchronous restart area write operation, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="61767-431">`data` 매개 변수에 포함된 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-431">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="61767-432">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-432">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="61767-433">작업이 성공적으로 완료되면 기준 세그먼트 번호가 업데이트된 것입니다.</span><span class="sxs-lookup"><span data-stu-id="61767-433">When the operation successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="61767-434">새 기준 시퀀스 번호보다 작은 시퀀스 번호를 가진 모든 로그 레코드에 액세스할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-434">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="61767-435"><xref:System.IO.Log.ReservationCollection>을 지정하는 경우 쓴 재시작 영역은 컬렉션에 포함된 예약을 사용하여 이전에 예약된 공간을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-435">If a <xref:System.IO.Log.ReservationCollection> is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="61767-436">메서드가 성공하면 데이터가 포함될 수 있는 가장 작은 예약을 사용하고 해당 예약이 컬렉션에서 제거됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-436">If the method succeeds, it will consume the smallest reservation that can hold the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="61767-437">레코드 시퀀스가 삭제되었거나 잘못된 인수를 전달하는 경우 이 작업 내에서 즉시 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-437">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="61767-438">비동기 추가 요청 중에 발생한 오류(예: I/O 요청 중의 디스크 오류)는 <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> 메서드를 호출할 때 예외로 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-438">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61767-439">One or more of the arguments are <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-439">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61767-440">
            <paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-440">
              <paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span>
          </span>
          <span data-ttu-id="61767-441">-or-  A new or existing archive tail or base of the active log is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-441">-or-  A new or existing archive tail or base of the active log is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61767-442">
            <paramref name="reservations" /> was not created by this record sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-442">
              <paramref name="reservations" /> was not created by this record sequence.</span>
          </span>
          <span data-ttu-id="61767-443">-or-  <paramref name="newBaseSeqNum" /> is not valid for this sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-443">-or-  <paramref name="newBaseSeqNum" /> is not valid for this sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="61767-444">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-444">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="61767-445">The request cannot be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-445">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61767-446">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-446">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="61767-447">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-447">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="61767-448">The record sequence is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-448">The record sequence is full.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException">
          <span data-ttu-id="61767-449">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-449">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWriteRestartArea">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum, System.IO.Log.ReservationCollection reservation, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum, class System.IO.Log.ReservationCollection reservation, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWriteRestartArea (data As IList(Of ArraySegment(Of Byte)), newBaseSeqNum As SequenceNumber, reservation As ReservationCollection, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginWriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber newBaseSeqNum, System::IO::Log::ReservationCollection ^ reservation, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginWriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginWriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult" Usage="fileRecordSequence.BeginWriteRestartArea (data, newBaseSeqNum, reservation, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservation" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="61767-450">A list of byte array segments that will be concatenated and appended as the record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-450">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="newBaseSeqNum">
          <span data-ttu-id="61767-451">The new base sequence number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-451">The new base sequence number.</span>
          </span>
          <span data-ttu-id="61767-452">The specified sequence number must be greater than or equal to the current base sequence number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-452">The specified sequence number must be greater than or equal to the current base sequence number.</span>
          </span>
        </param>
        <param name="reservation">
          <span data-ttu-id="61767-453">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-453">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="61767-454">An optional asynchronous callback, to be called when the restart area write is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-454">An optional asynchronous callback, to be called when the restart area write is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="61767-455">A user-provided object that distinguishes this particular asynchronous restart area write request from other requests.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-455">A user-provided object that distinguishes this particular asynchronous restart area write request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61767-456">Begins an asynchronous restart area write operation, using space previously reserved in the sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-456">Begins an asynchronous restart area write operation, using space previously reserved in the sequence.</span>
          </span>
          <span data-ttu-id="61767-457">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-457">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61767-458">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous restart area write operation, which could still be pending.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-458">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous restart area write operation, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61767-459">이 메서드에서 반환된 <xref:System.IAsyncResult>를 <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> 메서드에 전달하여 재시작 영역 쓰기 작업을 완료하고 리소스를 적절하게 해제할 수 있도록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-459">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> method, to assure that the restart area write operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="61767-460">비동기 재시작 영역 쓰기 작업 중에 오류가 발생한 경우 이 메서드에서 반환된 <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A>를 사용하여 <xref:System.IAsyncResult> 메서드를 호출하기 전에는 예외가 throw되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-460">If an error has occurred during an asynchronous restart area write operation, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="61767-461">`data` 매개 변수에 포함된 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-461">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="61767-462">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-462">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="61767-463">작업이 성공적으로 완료되면 기준 세그먼트 번호가 업데이트된 것입니다.</span><span class="sxs-lookup"><span data-stu-id="61767-463">When the operation successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="61767-464">새 기준 시퀀스 번호보다 작은 시퀀스 번호를 가진 모든 로그 레코드에 액세스할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-464">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="61767-465"><xref:System.IO.Log.ReservationCollection>을 지정하는 경우 쓴 재시작 영역은 컬렉션에 포함된 예약을 사용하여 이전에 예약된 공간을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-465">If a <xref:System.IO.Log.ReservationCollection> is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="61767-466">메서드가 성공하면 데이터가 포함될 수 있는 가장 작은 예약을 사용하고 해당 예약이 컬렉션에서 제거됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-466">If the method succeeds, it will consume the smallest reservation that can hold the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="61767-467">레코드 시퀀스가 삭제되었거나 잘못된 인수를 전달하는 경우 이 작업 내에서 즉시 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-467">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="61767-468">비동기 추가 요청 중에 발생한 오류(예: I/O 요청 중의 디스크 오류)는 <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> 메서드를 호출할 때 예외로 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-468">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61767-469">One or more of the arguments are <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-469">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61767-470">
            <paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-470">
              <paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span>
          </span>
          <span data-ttu-id="61767-471">-or-  A new or existing archive tail or base of the active log is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-471">-or-  A new or existing archive tail or base of the active log is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61767-472">
            <paramref name="reservations" /> was not created by this record sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-472">
              <paramref name="reservations" /> was not created by this record sequence.</span>
          </span>
          <span data-ttu-id="61767-473">-or-  <paramref name="newBaseSeqNum" /> is not valid for this sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-473">-or-  <paramref name="newBaseSeqNum" /> is not valid for this sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="61767-474">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-474">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="61767-475">The request cannot be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-475">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61767-476">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-476">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="61767-477">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-477">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="61767-478">The record sequence is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-478">The record sequence is full.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException">
          <span data-ttu-id="61767-479">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-479">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateReservationCollection">
      <MemberSignature Language="C#" Value="public System.IO.Log.ReservationCollection CreateReservationCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Log.ReservationCollection CreateReservationCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.CreateReservationCollection" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateReservationCollection () As ReservationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::ReservationCollection ^ CreateReservationCollection();" />
      <MemberSignature Language="F#" Value="abstract member CreateReservationCollection : unit -&gt; System.IO.Log.ReservationCollection&#xA;override this.CreateReservationCollection : unit -&gt; System.IO.Log.ReservationCollection" Usage="fileRecordSequence.CreateReservationCollection " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.CreateReservationCollection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.ReservationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="61767-480">Creates a new <see cref="T:System.IO.Log.ReservationCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-480">Creates a new <see cref="T:System.IO.Log.ReservationCollection" />.</span>
          </span>
          <span data-ttu-id="61767-481">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-481">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61767-482">The newly created <see cref="T:System.IO.Log.ReservationCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-482">The newly created <see cref="T:System.IO.Log.ReservationCollection" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="61767-483">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-483">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="fileRecordSequence.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="61767-484">Immediately releases the unmanaged resources used by an object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-484">Immediately releases the unmanaged resources used by an object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="61767-485">An I/O error occurred while flushing the data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-485">An I/O error occurred while flushing the data.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61767-486">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-486">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="61767-487">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-487">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndAppend (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndAppend(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.EndAppend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndAppend (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber EndAppend(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndAppend : IAsyncResult -&gt; System.IO.Log.SequenceNumber&#xA;override this.EndAppend : IAsyncResult -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.EndAppend result" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.EndAppend(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="61767-488">A reference to the outstanding asynchronous I/O request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-488">A reference to the outstanding asynchronous I/O request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61767-489">Ends an asynchronous append operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-489">Ends an asynchronous append operation.</span>
          </span>
          <span data-ttu-id="61767-490">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-490">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61767-491">The sequence number of the appended log record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-491">The sequence number of the appended log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61767-492">이 메서드는 I/O 작업이 완료될 때까지 차단됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-492">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="61767-493">비동기 쓰기 요청 중에 발생하는 오류(예: I/O 요청 중의 디스크 오류)는 <xref:System.IO.Log.FileRecordSequence.EndAppend%2A>를 호출할 때 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-493">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> is called.</span></span>  
  
 <span data-ttu-id="61767-494">이 메서드는 <xref:System.IAsyncResult> 메서드에서 반환된 <xref:System.IO.Log.FileRecordSequence.BeginAppend%2A>마다 정확히 한 번만 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-494">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.FileRecordSequence.BeginAppend%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61767-495">
            <paramref name="result" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-495">
              <paramref name="result" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61767-496">
            <see langword="End" /> has already been called for this asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-496">
              <see langword="End" /> has already been called for this asynchronous operation.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="61767-497">The request cannot be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-497">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61767-498">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-498">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="61767-499">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-499">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndFlush">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndFlush (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndFlush(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.EndFlush(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndFlush (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber EndFlush(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndFlush : IAsyncResult -&gt; System.IO.Log.SequenceNumber&#xA;override this.EndFlush : IAsyncResult -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.EndFlush result" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.EndFlush(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="61767-500">A reference to the outstanding asynchronous I/O request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-500">A reference to the outstanding asynchronous I/O request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61767-501">Ends an asynchronous flush operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-501">Ends an asynchronous flush operation.</span>
          </span>
          <span data-ttu-id="61767-502">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-502">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61767-503">The sequence number of the last record written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-503">The sequence number of the last record written.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61767-504">이 메서드는 I/O 작업이 완료될 때까지 차단됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-504">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="61767-505">비동기 플러시 요청 중에 발생하는 오류(예: I/O 요청 중의 디스크 오류)는 <xref:System.IO.Log.FileRecordSequence.EndFlush%2A>를 호출할 때 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-505">Errors that occur during an asynchronous flush request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.FileRecordSequence.EndFlush%2A> is called.</span></span>  
  
 <span data-ttu-id="61767-506">이 메서드는 <xref:System.IAsyncResult> 메서드에서 반환된 <xref:System.IO.Log.FileRecordSequence.BeginFlush%2A>마다 정확히 한 번만 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-506">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.FileRecordSequence.BeginFlush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61767-507">
            <paramref name="result" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-507">
              <paramref name="result" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61767-508">
            <see langword="End" /> has already been called for this asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-508">
              <see langword="End" /> has already been called for this asynchronous operation.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="61767-509">The request cannot be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-509">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61767-510">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-510">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="61767-511">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-511">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndReserveAndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndReserveAndAppend (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndReserveAndAppend(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.EndReserveAndAppend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReserveAndAppend (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber EndReserveAndAppend(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndReserveAndAppend : IAsyncResult -&gt; System.IO.Log.SequenceNumber&#xA;override this.EndReserveAndAppend : IAsyncResult -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.EndReserveAndAppend result" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.EndReserveAndAppend(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="61767-512">A reference to the outstanding asynchronous I/O request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-512">A reference to the outstanding asynchronous I/O request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61767-513">Ends an asynchronous reserve and append operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-513">Ends an asynchronous reserve and append operation.</span>
          </span>
          <span data-ttu-id="61767-514">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-514">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61767-515">The sequence number of the appended log record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-515">The sequence number of the appended log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61767-516">이 메서드는 I/O 작업이 완료될 때까지 차단됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-516">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="61767-517">비동기 쓰기 요청 중에 발생하는 오류(예: I/O 요청 중의 디스크 오류)는 <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A>를 호출할 때 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-517">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> is called.</span></span>  
  
 <span data-ttu-id="61767-518">이 메서드는 <xref:System.IAsyncResult> 메서드에서 반환된 <xref:System.IO.Log.FileRecordSequence.BeginReserveAndAppend%2A>마다 정확히 한 번만 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-518">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.FileRecordSequence.BeginReserveAndAppend%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61767-519">
            <paramref name="result" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-519">
              <paramref name="result" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61767-520">
            <see langword="End" /> has already been called for this asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-520">
              <see langword="End" /> has already been called for this asynchronous operation.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="61767-521">The request cannot be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-521">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61767-522">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-522">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="61767-523">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-523">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndWriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndWriteRestartArea (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndWriteRestartArea(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.EndWriteRestartArea(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndWriteRestartArea (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber EndWriteRestartArea(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndWriteRestartArea : IAsyncResult -&gt; System.IO.Log.SequenceNumber&#xA;override this.EndWriteRestartArea : IAsyncResult -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.EndWriteRestartArea result" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.EndWriteRestartArea(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="61767-524">A reference to the outstanding asynchronous I/O request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-524">A reference to the outstanding asynchronous I/O request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61767-525">Ends an asynchronous restart area write operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-525">Ends an asynchronous restart area write operation.</span>
          </span>
          <span data-ttu-id="61767-526">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-526">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61767-527">The sequence number of the written log record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-527">The sequence number of the written log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61767-528">이 메서드는 I/O 작업이 완료될 때까지 차단됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-528">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="61767-529">비동기 쓰기 요청 중에 발생하는 오류(예: I/O 요청 중의 디스크 오류)는 <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A>를 호출할 때 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-529">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> is called.</span></span>  
  
 <span data-ttu-id="61767-530">이 메서드는 <xref:System.IAsyncResult> 메서드에서 반환된 <xref:System.IO.Log.FileRecordSequence.BeginWriteRestartArea%2A>마다 정확히 한 번만 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-530">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.FileRecordSequence.BeginWriteRestartArea%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61767-531">
            <paramref name="result" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-531">
              <paramref name="result" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61767-532">
            <see langword="End" /> has already been called for this asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-532">
              <see langword="End" /> has already been called for this asynchronous operation.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="61767-533">The request cannot be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-533">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61767-534">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-534">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="61767-535">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-535">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Flush">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="61767-536">Causes appended records to be durably written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-536">Causes appended records to be durably written.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Function Flush () As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; System.IO.Log.SequenceNumber&#xA;override this.Flush : unit -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.Flush " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Flush</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="61767-537">Ensures that all appended records have been written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-537">Ensures that all appended records have been written.</span>
          </span>
          <span data-ttu-id="61767-538">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-538">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61767-539">The sequence number of the last record written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-539">The sequence number of the last record written.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61767-540">이 메서드를 호출하면 <xref:System.IO.Log.FileRecordSequence>에 추가된 모든 레코드가 영속적으로 기록됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-540">Calling this method ensures that all records that have been appended to the <xref:System.IO.Log.FileRecordSequence> have been durably written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="61767-541">An I/O error occurred while flushing the data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-541">An I/O error occurred while flushing the data.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61767-542">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-542">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="61767-543">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-543">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Flush (System.IO.Log.SequenceNumber sequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Flush(valuetype System.IO.Log.SequenceNumber sequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.Flush(System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Flush(System::IO::Log::SequenceNumber sequenceNumber);" />
      <MemberSignature Language="F#" Value="abstract member Flush : System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber&#xA;override this.Flush : System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.Flush sequenceNumber" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Flush(System.IO.Log.SequenceNumber)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequenceNumber" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="sequenceNumber">
          <span data-ttu-id="61767-544">The sequence number of the latest record that must be written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-544">The sequence number of the latest record that must be written.</span>
          </span>
          <span data-ttu-id="61767-545">If this <see cref="T:System.IO.Log.SequenceNumber" /> is invalid, then all records must be written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-545">If this <see cref="T:System.IO.Log.SequenceNumber" /> is invalid, then all records must be written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61767-546">Ensures that all appended records have been written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-546">Ensures that all appended records have been written.</span>
          </span>
          <span data-ttu-id="61767-547">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-547">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61767-548">The sequence number of the last record written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-548">The sequence number of the last record written.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61767-549">이 메서드를 호출하면 지정된 시퀀스 번호 이하의 시퀀스 번호를 가진 모든 레코드가 영속적으로 기록됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-549">Calling this method ensures that all records with sequence numbers up to and including the specified sequence number have been durably written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61767-550">
            <paramref name="sequenceNumber" /> is not between the base and last sequence numbers of this sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-550">
              <paramref name="sequenceNumber" /> is not between the base and last sequence numbers of this sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61767-551">
            <paramref name="sequenceNumber" /> is not valid for this sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-551">
              <paramref name="sequenceNumber" /> is not valid for this sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="61767-552">An I/O error occurred while flushing the data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-552">An I/O error occurred while flushing the data.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61767-553">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-553">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="61767-554">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-554">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LastSequenceNumber">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber LastSequenceNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.SequenceNumber LastSequenceNumber" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRecordSequence.LastSequenceNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastSequenceNumber As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::SequenceNumber LastSequenceNumber { System::IO::Log::SequenceNumber get(); };" />
      <MemberSignature Language="F#" Value="member this.LastSequenceNumber : System.IO.Log.SequenceNumber" Usage="System.IO.Log.FileRecordSequence.LastSequenceNumber" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.LastSequenceNumber</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61767-555">Gets the sequence number which is greater than the last record appended.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-555">Gets the sequence number which is greater than the last record appended.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61767-556">마지막으로 추가된 레코드보다 큰 시퀀스 번호입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-556">A sequence number which is greater than the last record appended.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61767-557">이 속성에는 마지막으로 추가된 레코드의 시퀀스 번호보다 반드시 큰 시퀀스 번호가 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-557">This property contains a sequence number that is guaranteed to be larger than the sequence number of the last appended record.</span></span> <span data-ttu-id="61767-558">유효한 시퀀스 번호는 <xref:System.IO.Log.FileRecordSequence.BaseSequenceNumber%2A>보다 크거나 같고 <xref:System.IO.Log.FileRecordSequence.LastSequenceNumber%2A>보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-558">Valid sequence numbers are greater than or equal to <xref:System.IO.Log.FileRecordSequence.BaseSequenceNumber%2A> and less than <xref:System.IO.Log.FileRecordSequence.LastSequenceNumber%2A>.</span></span> <span data-ttu-id="61767-559">그 외의 다른 시퀀스 번호는 유효하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-559">All other sequence numbers are invalid.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61767-560">The property was accessed after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-560">The property was accessed after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MaximumRecordLength">
      <MemberSignature Language="C#" Value="public long MaximumRecordLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumRecordLength" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRecordSequence.MaximumRecordLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaximumRecordLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumRecordLength { long get(); };" />
      <MemberSignature Language="F#" Value="member this.MaximumRecordLength : int64" Usage="System.IO.Log.FileRecordSequence.MaximumRecordLength" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.MaximumRecordLength</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61767-561">Gets the size of the largest record that can be appended to or read from this sequence, in bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-561">Gets the size of the largest record that can be appended to or read from this sequence, in bytes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61767-562">이 시퀀스에서 추가하거나 읽을 수 있는 가장 큰 레코드의 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-562">The size of the largest record that can be appended to or read from this sequence, in bytes.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61767-563">The property was accessed after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-563">The property was accessed after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLogRecords">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt; ReadLogRecords (System.IO.Log.SequenceNumber start, System.IO.Log.LogRecordEnumeratorType logRecordEnum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Log.LogRecord&gt; ReadLogRecords(valuetype System.IO.Log.SequenceNumber start, valuetype System.IO.Log.LogRecordEnumeratorType logRecordEnum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.ReadLogRecords(System.IO.Log.SequenceNumber,System.IO.Log.LogRecordEnumeratorType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadLogRecords (start As SequenceNumber, logRecordEnum As LogRecordEnumeratorType) As IEnumerable(Of LogRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::IO::Log::LogRecord ^&gt; ^ ReadLogRecords(System::IO::Log::SequenceNumber start, System::IO::Log::LogRecordEnumeratorType logRecordEnum);" />
      <MemberSignature Language="F#" Value="abstract member ReadLogRecords : System.IO.Log.SequenceNumber * System.IO.Log.LogRecordEnumeratorType -&gt; seq&lt;System.IO.Log.LogRecord&gt;&#xA;override this.ReadLogRecords : System.IO.Log.SequenceNumber * System.IO.Log.LogRecordEnumeratorType -&gt; seq&lt;System.IO.Log.LogRecord&gt;" Usage="fileRecordSequence.ReadLogRecords (start, logRecordEnum)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.ReadLogRecords(System.IO.Log.SequenceNumber,System.IO.Log.LogRecordEnumeratorType)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="logRecordEnum" Type="System.IO.Log.LogRecordEnumeratorType" />
      </Parameters>
      <Docs>
        <param name="start">
          <span data-ttu-id="61767-564">The sequence number of the first record where the reading starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-564">The sequence number of the first record where the reading starts.</span>
          </span>
        </param>
        <param name="logRecordEnum">
          <span data-ttu-id="61767-565">A valid <see cref="T:System.IO.Log.LogRecordEnumeratorType" /> value that specifies the manner (that is, forward or backward) in which records should be read from a <see cref="T:System.IO.Log.LogRecordSequence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-565">A valid <see cref="T:System.IO.Log.LogRecordEnumeratorType" /> value that specifies the manner (that is, forward or backward) in which records should be read from a <see cref="T:System.IO.Log.LogRecordSequence" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61767-566">Returns an enumerable collection of records in the sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-566">Returns an enumerable collection of records in the sequence.</span>
          </span>
          <span data-ttu-id="61767-567">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-567">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61767-568">An enumerable collection of records in the sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-568">An enumerable collection of records in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61767-569">이 메서드는 시퀀스에 있는 레코드의 열거 가능한 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-569">This method returns an enumerable collection of records in the sequence.</span></span> <span data-ttu-id="61767-570">열거되는 레코드의 순서는 `logRecordEnum` 매개 변수의 값에 따라 결정됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-570">The order of the enumerated records depends on the value of the `logRecordEnum` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61767-571">다음 예제에서는 이 메서드를 사용하여 로그 시퀀스에서 레코드를 읽을 수 있는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="61767-571">The following example shows how you can use this method to read the records in a log sequence.</span></span>  
  
 [!code-csharp[IRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/irecordsequence/cs/readrecord.cs#2)]
 [!code-vb[IRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/irecordsequence/vb/readrecord.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61767-572">One or more of the arguments are out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-572">One or more of the arguments are out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="61767-573">The operation cannot be performed because the record sequence was opened with write-only access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-573">The operation cannot be performed because the record sequence was opened with write-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="61767-574">The record sequence is corrupted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-574">The record sequence is corrupted.</span>
          </span>
          <span data-ttu-id="61767-575">-or-  The record was written with an incompatible version of the record sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-575">-or-  The record was written with an incompatible version of the record sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61767-576">The enumeration has ended.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-576">The enumeration has ended.</span>
          </span>
          <span data-ttu-id="61767-577">-or-  The enumeration has not been started.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-577">-or-  The enumeration has not been started.</span>
          </span>
          <span data-ttu-id="61767-578">A call to <see cref="M:System.Collections.IEnumerator.MoveNext" /> must be made.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-578">A call to <see cref="M:System.Collections.IEnumerator.MoveNext" /> must be made.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61767-579">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-579">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="61767-580">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-580">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadRestartAreas">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt; ReadRestartAreas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Log.LogRecord&gt; ReadRestartAreas() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.ReadRestartAreas" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadRestartAreas () As IEnumerable(Of LogRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::IO::Log::LogRecord ^&gt; ^ ReadRestartAreas();" />
      <MemberSignature Language="F#" Value="abstract member ReadRestartAreas : unit -&gt; seq&lt;System.IO.Log.LogRecord&gt;&#xA;override this.ReadRestartAreas : unit -&gt; seq&lt;System.IO.Log.LogRecord&gt;" Usage="fileRecordSequence.ReadRestartAreas " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.ReadRestartAreas</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="61767-581">Returns an enumerable collection of the restart areas in the sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-581">Returns an enumerable collection of the restart areas in the sequence.</span>
          </span>
          <span data-ttu-id="61767-582">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-582">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61767-583">An enumerable collection of the restart areas in the sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-583">An enumerable collection of the restart areas in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61767-584">재시작 영역은 시퀀스 번호의 역순(가장 큰 시퀀스 번호부터 가장 작은 시퀀스 번호까지)으로 열거됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-584">The restart areas are enumerated in reverse sequence number order, that is, from the highest sequence number to the lowest sequence number.</span></span> <span data-ttu-id="61767-585">마지막 시퀀스 번호와 기준 시퀀스 번호 사이의 시퀀스 번호를 가진 재시작 영역만 열거됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-585">Only restart areas with sequence numbers between the last sequence number and the base sequence number are enumerated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="61767-586">The operation cannot be performed because the record sequence was opened with write-only access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-586">The operation cannot be performed because the record sequence was opened with write-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="61767-587">The record sequence is corrupted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-587">The record sequence is corrupted.</span>
          </span>
          <span data-ttu-id="61767-588">-or-  The record was written with an incompatible version of the record sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-588">-or-  The record was written with an incompatible version of the record sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61767-589">The enumeration has ended.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-589">The enumeration has ended.</span>
          </span>
          <span data-ttu-id="61767-590">-or-  The enumeration has not been started.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-590">-or-  The enumeration has not been started.</span>
          </span>
          <span data-ttu-id="61767-591">A call to <see cref="M:System.Collections.IEnumerator.MoveNext" /> must be made.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-591">A call to <see cref="M:System.Collections.IEnumerator.MoveNext" /> must be made.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61767-592">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-592">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="61767-593">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-593">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReserveAndAppend">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="61767-594">Automatically makes a single reservation and appends a record to the sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-594">Automatically makes a single reservation and appends a record to the sequence.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReserveAndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber ReserveAndAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, params long[] reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber ReserveAndAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber ReserveAndAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, ... cli::array &lt;long&gt; ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member ReserveAndAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] -&gt; System.IO.Log.SequenceNumber&#xA;override this.ReserveAndAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.ReserveAndAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservationCollection, reservations)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="61767-595">A list of byte array segments that will be concatenated and appended as the record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-595">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="61767-596">The sequence number of the next record in the user-specified order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-596">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="61767-597">The sequence number of the next record in Previous order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-597">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="61767-598">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-598">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="reservationCollection">
          <span data-ttu-id="61767-599">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the collection to make reservations in.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-599">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the collection to make reservations in.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="61767-600">The reservations to make, in bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-600">The reservations to make, in bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61767-601">Automatically makes a single reservation and appends a record to the sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-601">Automatically makes a single reservation and appends a record to the sequence.</span>
          </span>
          <span data-ttu-id="61767-602">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-602">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61767-603">The sequence number of the appended log record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-603">The sequence number of the appended log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61767-604">`data` 매개 변수에 포함된 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-604">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="61767-605">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-605">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="61767-606">지정된 예약은 레코드 추가 작업이 포함된 원자 단위 작업에서 제공된 예약 컬렉션에 추가됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-606">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="61767-607">추가가 실패하면 공간이 예약되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-607">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="61767-608">일반적으로 이 메서드는 레코드를 쓰기 전에 완료될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-608">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="61767-609">레코드가 기록되도록 하려면 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 매개 변수를 사용하여 `recordAppendOptions` 플래그를 지정하거나, <xref:System.IO.Log.FileRecordSequence.Flush%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-609">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61767-610">One or more of the arguments are <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-610">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61767-611">One or more of the arguments are out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-611">One or more of the arguments are out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61767-612">
            <paramref name="reservations" /> was not created by this record sequence..</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-612">
              <paramref name="reservations" /> was not created by this record sequence..</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="61767-613">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-613">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="61767-614">The request could not be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-614">The request could not be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61767-615">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-615">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="61767-616">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-616">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="61767-617">The record sequence is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-617">The record sequence is full.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReserveAndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber ReserveAndAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, params long[] reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber ReserveAndAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber ReserveAndAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, ... cli::array &lt;long&gt; ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member ReserveAndAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] -&gt; System.IO.Log.SequenceNumber&#xA;override this.ReserveAndAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.ReserveAndAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservationCollection, reservations)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="61767-618">A list of byte array segments that will be concatenated and appended as the record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-618">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="61767-619">The sequence number of the next record in the user-specified order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-619">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="61767-620">The sequence number of the next record in Previous order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-620">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="61767-621">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-621">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="reservationCollection">
          <span data-ttu-id="61767-622">The reservation collection to make reservations in.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-622">The reservation collection to make reservations in.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="61767-623">The reservations to make, in bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-623">The reservations to make, in bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61767-624">Automatically makes a single reservation and appends a record to the sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-624">Automatically makes a single reservation and appends a record to the sequence.</span>
          </span>
          <span data-ttu-id="61767-625">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-625">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61767-626">The sequence number of the appended log record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-626">The sequence number of the appended log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61767-627">`data` 매개 변수에 포함된 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-627">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="61767-628">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-628">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="61767-629">지정된 예약은 레코드 추가 작업이 포함된 원자 단위 작업에서 제공된 예약 컬렉션에 추가됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-629">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="61767-630">추가가 실패하면 공간이 예약되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-630">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="61767-631">일반적으로 이 메서드는 레코드를 쓰기 전에 완료될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-631">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="61767-632">레코드가 기록되도록 하려면 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 매개 변수를 사용하여 `recordAppendOptions` 플래그를 지정하거나, <xref:System.IO.Log.FileRecordSequence.Flush%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-632">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61767-633">One or more of the arguments are <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-633">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61767-634">One or more of the arguments are out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-634">One or more of the arguments are out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61767-635">
            <paramref name="reservations" /> was not created by this record sequence..</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-635">
              <paramref name="reservations" /> was not created by this record sequence..</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="61767-636">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-636">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="61767-637">The request could not be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-637">The request could not be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61767-638">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-638">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="61767-639">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-639">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="61767-640">The record sequence is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-640">The record sequence is full.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReservedBytes">
      <MemberSignature Language="C#" Value="public long ReservedBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ReservedBytes" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRecordSequence.ReservedBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReservedBytes As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ReservedBytes { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ReservedBytes : int64" Usage="System.IO.Log.FileRecordSequence.ReservedBytes" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.ReservedBytes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61767-641">Gets the total number of bytes that have been reserved.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-641">Gets the total number of bytes that have been reserved.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61767-642">이 레코드 시퀀스에서 만들어진 모든 예약의 총 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-642">The total size of all reservations made in this record sequence.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61767-643">The property was accessed after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-643">The property was accessed after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RestartSequenceNumber">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber RestartSequenceNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.SequenceNumber RestartSequenceNumber" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRecordSequence.RestartSequenceNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RestartSequenceNumber As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::SequenceNumber RestartSequenceNumber { System::IO::Log::SequenceNumber get(); };" />
      <MemberSignature Language="F#" Value="member this.RestartSequenceNumber : System.IO.Log.SequenceNumber" Usage="System.IO.Log.FileRecordSequence.RestartSequenceNumber" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.RestartSequenceNumber</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61767-644">Gets the sequence number of the most recently written restart area.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-644">Gets the sequence number of the most recently written restart area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61767-645">가장 최근에 기록된 재시작 영역의 시퀀스 번호입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-645">The sequence number of the most recently written restart area.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61767-646">재시작 영역은 클라이언트의 마지막 검사점 작업을 포함하는 정보를 임시로 저장하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-646">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="61767-647">CLFS(Common Log File System)에서는 적어도 하나의 유효한 영역을 항상 사용할 수 있도록 하기 위해 두 개의 재시작 영역을 유지 관리합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-647">The Common Log File System (CLFS) maintains two restart areas to guarantee that at least one valid area is always available.</span></span> <span data-ttu-id="61767-648">복구가 필요한 경우 CLFS에서는 재시작 영역을 읽고 마지막 검사점 작업에서 데이터를 모두 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-648">When a recovery is necessary, the CLFS reads its restart area and all the data from the last checkpoint operation.</span></span> <span data-ttu-id="61767-649">이 데이터는 트랜잭션 테이블, 더티 페이지 테이블 및 열린 파일 테이블을 복구 프로세스에서 사용할 수 있도록 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-649">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61767-650">The property was accessed after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-650">The property was accessed after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RetryAppend">
      <MemberSignature Language="C#" Value="public bool RetryAppend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RetryAppend" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRecordSequence.RetryAppend" />
      <MemberSignature Language="VB.NET" Value="Public Property RetryAppend As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RetryAppend { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RetryAppend : bool with get, set" Usage="System.IO.Log.FileRecordSequence.RetryAppend" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.RetryAppend</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61767-651">Gets or sets a value indicating whether or not appends are automatically retried if the log is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-651">Gets or sets a value indicating whether or not appends are automatically retried if the log is full.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61767-652">로그가 꽉 차는 경우 추가 작업이 자동으로 다시 시도되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-652">
              <see langword="true" /> if appends are automatically retried if the log is full; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="61767-653">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-653">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61767-654">이 속성의 값이 `true`이고 시퀀스에 충분한 공간이 없기 때문에 <xref:System.IO.Log.FileRecordSequence.Append%2A> 호출이 실패하면 레코드 시퀀스에서 공간을 확보하려고 시도하고 추가 작업을 다시 시도합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-654">If the value of this property is `true`, and an <xref:System.IO.Log.FileRecordSequence.Append%2A> call fails because there is not enough space in the sequence, the record sequence will try to free space and retry the append.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61767-655">The property was accessed after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-655">The property was accessed after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TailPinned">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IO.Log.TailPinnedEventArgs&gt; TailPinned;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IO.Log.TailPinnedEventArgs&gt; TailPinned" />
      <MemberSignature Language="DocId" Value="E:System.IO.Log.FileRecordSequence.TailPinned" />
      <MemberSignature Language="VB.NET" Value="Public Event TailPinned As EventHandler(Of TailPinnedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler&lt;System::IO::Log::TailPinnedEventArgs ^&gt; ^ TailPinned;" />
      <MemberSignature Language="F#" Value="member this.TailPinned : EventHandler&lt;System.IO.Log.TailPinnedEventArgs&gt; " Usage="member this.TailPinned : System.EventHandler&lt;System.IO.Log.TailPinnedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.IO.Log.IRecordSequence.TailPinned</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IO.Log.TailPinnedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61767-656">Occurs when the record sequence determines that the tail must be moved forward.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-656">Occurs when the record sequence determines that the tail must be moved forward.</span>
          </span>
          <span data-ttu-id="61767-657">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-657">This method cannot be inherited.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61767-658">레코드 시퀀스에 공간이 부족하면 이 이벤트를 발생시킬 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-658">You can fire this event when the record sequence has run out of space.</span></span> <span data-ttu-id="61767-659">이 이벤트가 발생하면 공간을 확보하기 위해 시퀀스의 테일(즉, 기준 시퀀스 번호)이 앞으로 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-659">When this event is fired, the tail of the sequence (that is, the base sequence number) is moved forward to free up space.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteRestartArea">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="61767-660">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-660">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61767-661">재시작 영역에는 클라이언트의 마지막 검사점 작업이 포함된 정보를 임시로 저장할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-661">A restart area can be used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="61767-662">복구가 필요할 경우 재시작 영역을 읽고 마지막 검사점 작업에서 모든 데이터를 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-662">When a recovery is necessary, you can read a restart area and retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="61767-663">이 데이터는 트랜잭션 테이블, 더티 페이지 테이블 및 열린 파일 테이블을 복구 프로세스에서 사용할 수 있도록 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-663">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="61767-664">재시작 영역은 <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> 메서드를 사용하여 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-664">A restart area can be read using the <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (ArraySegment&lt;byte&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As ArraySegment(Of Byte)) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(ArraySegment&lt;System::Byte&gt; data);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : ArraySegment&lt;byte&gt; -&gt; System.IO.Log.SequenceNumber&#xA;override this.WriteRestartArea : ArraySegment&lt;byte&gt; -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.WriteRestartArea data" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="61767-665">A list of byte array segments that will be concatenated and appended as the record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-665">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61767-666">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-666">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          </span>
          <span data-ttu-id="61767-667">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-667">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61767-668">The sequence number of the written restart area.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-668">The sequence number of the written restart area.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61767-669">재시작 영역에는 클라이언트의 마지막 검사점 작업이 포함된 정보를 임시로 저장할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-669">A restart area can be used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="61767-670">복구가 필요할 경우 재시작 영역을 읽고 마지막 검사점 작업에서 모든 데이터를 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-670">When a recovery is necessary, you can read a restart area and retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="61767-671">이 데이터는 트랜잭션 테이블, 더티 페이지 테이블 및 열린 파일 테이블을 복구 프로세스에서 사용할 수 있도록 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-671">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="61767-672">재시작 영역은 <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> 메서드를 사용하여 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-672">A restart area can be read using the <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="61767-673">바이트 배열 세그먼트의 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-673">The data in the byte array segments will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="61767-674">재시작 영역을 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-674">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61767-675">One or more of the arguments are <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-675">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="61767-676">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-676">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="61767-677">The request cannot be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-677">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61767-678">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-678">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="61767-679">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-679">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="61767-680">The record sequence is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-680">The record sequence is full.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As IList(Of ArraySegment(Of Byte))) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; -&gt; System.IO.Log.SequenceNumber&#xA;override this.WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.WriteRestartArea data" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="61767-681">A list of byte array segments that will be concatenated and appended as the record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-681">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61767-682">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-682">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          </span>
          <span data-ttu-id="61767-683">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-683">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61767-684">The sequence number of the written restart area.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-684">The sequence number of the written restart area.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61767-685">재시작 영역에는 클라이언트의 마지막 검사점 작업이 포함된 정보를 임시로 저장할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-685">A restart area can be used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="61767-686">복구가 필요할 경우 재시작 영역을 읽고 마지막 검사점 작업에서 모든 데이터를 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-686">When a recovery is necessary, you can read a restart area and retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="61767-687">이 데이터는 트랜잭션 테이블, 더티 페이지 테이블 및 열린 파일 테이블을 복구 프로세스에서 사용할 수 있도록 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-687">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="61767-688">재시작 영역은 <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> 메서드를 사용하여 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-688">A restart area can be read using the <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="61767-689">바이트 배열 세그먼트의 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-689">The data in the byte array segments will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="61767-690">재시작 영역을 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-690">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61767-691">One or more of the arguments are <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-691">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="61767-692">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-692">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="61767-693">The request cannot be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-693">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61767-694">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-694">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="61767-695">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-695">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="61767-696">The record sequence is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-696">The record sequence is full.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As ArraySegment(Of Byte), newBaseSeqNum As SequenceNumber) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber newBaseSeqNum);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber&#xA;override this.WriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.WriteRestartArea (data, newBaseSeqNum)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="61767-697">A list of byte array segments that will be concatenated and appended as the record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-697">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="newBaseSeqNum">
          <span data-ttu-id="61767-698">The new base sequence number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-698">The new base sequence number.</span>
          </span>
          <span data-ttu-id="61767-699">The specified sequence number must be greater than or equal to the current base sequence number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-699">The specified sequence number must be greater than or equal to the current base sequence number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61767-700">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-700">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          </span>
          <span data-ttu-id="61767-701">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-701">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61767-702">The sequence number of the written restart area.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-702">The sequence number of the written restart area.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61767-703">재시작 영역에는 클라이언트의 마지막 검사점 작업이 포함된 정보를 임시로 저장할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-703">A restart area can be used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="61767-704">복구가 필요할 경우 재시작 영역을 읽고 마지막 검사점 작업에서 모든 데이터를 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-704">When a recovery is necessary, you can read a restart area and retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="61767-705">이 데이터는 트랜잭션 테이블, 더티 페이지 테이블 및 열린 파일 테이블을 복구 프로세스에서 사용할 수 있도록 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-705">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="61767-706">재시작 영역은 <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> 메서드를 사용하여 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-706">A restart area can be read using the <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="61767-707">재시작 영역이 기록되면 바이트 배열 세그먼트의 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-707">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="61767-708">재시작 영역을 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-708">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="61767-709">이 메서드가 성공적으로 완료되면 기준 세그먼트 번호가 업데이트된 것입니다.</span><span class="sxs-lookup"><span data-stu-id="61767-709">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="61767-710">새 기준 시퀀스 번호보다 작은 시퀀스 번호를 가진 모든 로그 레코드에 액세스할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-710">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61767-711">One or more of the arguments are <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-711">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61767-712">
            <paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-712">
              <paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span>
          </span>
          <span data-ttu-id="61767-713">-or-  A new or existing archive tail or base of the active log is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-713">-or-  A new or existing archive tail or base of the active log is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61767-714">
            <paramref name="newBaseSeqNum" /> is not valid for this sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-714">
              <paramref name="newBaseSeqNum" /> is not valid for this sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="61767-715">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-715">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="61767-716">The request cannot be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-716">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61767-717">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-717">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="61767-718">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-718">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="61767-719">The record sequence is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-719">The record sequence is full.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As IList(Of ArraySegment(Of Byte)), newBaseSeqNum As SequenceNumber) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber newBaseSeqNum);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber&#xA;override this.WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.WriteRestartArea (data, newBaseSeqNum)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="61767-720">A list of byte array segments that will be concatenated and appended as the record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-720">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="newBaseSeqNum">
          <span data-ttu-id="61767-721">The new base sequence number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-721">The new base sequence number.</span>
          </span>
          <span data-ttu-id="61767-722">The specified sequence number must be greater than or equal to the current base sequence number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-722">The specified sequence number must be greater than or equal to the current base sequence number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61767-723">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-723">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          </span>
          <span data-ttu-id="61767-724">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-724">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61767-725">The sequence number of the written restart area.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-725">The sequence number of the written restart area.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61767-726">재시작 영역에는 클라이언트의 마지막 검사점 작업이 포함된 정보를 임시로 저장할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-726">A restart area can be used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="61767-727">복구가 필요할 경우 재시작 영역을 읽고 마지막 검사점 작업에서 모든 데이터를 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-727">When a recovery is necessary, you can read a restart area and retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="61767-728">이 데이터는 트랜잭션 테이블, 더티 페이지 테이블 및 열린 파일 테이블을 복구 프로세스에서 사용할 수 있도록 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-728">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="61767-729">재시작 영역은 <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> 메서드를 사용하여 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-729">A restart area can be read using the <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="61767-730">재시작 영역이 기록되면 바이트 배열 세그먼트의 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-730">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="61767-731">재시작 영역을 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-731">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="61767-732">이 메서드가 성공적으로 완료되면 기준 세그먼트 번호가 업데이트된 것입니다.</span><span class="sxs-lookup"><span data-stu-id="61767-732">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="61767-733">새 기준 시퀀스 번호보다 작은 시퀀스 번호를 가진 모든 로그 레코드에 액세스할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-733">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61767-734">One or more of the arguments are <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-734">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61767-735">
            <paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-735">
              <paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span>
          </span>
          <span data-ttu-id="61767-736">-or-  A new or existing archive tail or base of the active log is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-736">-or-  A new or existing archive tail or base of the active log is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61767-737">
            <paramref name="newBaseSeqNum" /> is not valid for this sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-737">
              <paramref name="newBaseSeqNum" /> is not valid for this sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="61767-738">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-738">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="61767-739">The request cannot be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-739">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61767-740">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-740">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="61767-741">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-741">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="61767-742">The record sequence is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-742">The record sequence is full.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum, System.IO.Log.ReservationCollection reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum, class System.IO.Log.ReservationCollection reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As ArraySegment(Of Byte), newBaseSeqNum As SequenceNumber, reservations As ReservationCollection) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber newBaseSeqNum, System::IO::Log::ReservationCollection ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber&#xA;override this.WriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.WriteRestartArea (data, newBaseSeqNum, reservations)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="61767-743">A list of byte array segments that will be concatenated and appended as the record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-743">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="newBaseSeqNum">
          <span data-ttu-id="61767-744">The new base sequence number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-744">The new base sequence number.</span>
          </span>
          <span data-ttu-id="61767-745">The specified sequence number must be greater than or equal to the current base sequence number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-745">The specified sequence number must be greater than or equal to the current base sequence number.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="61767-746">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-746">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61767-747">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-747">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          </span>
          <span data-ttu-id="61767-748">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-748">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61767-749">The sequence number of the written restart area.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-749">The sequence number of the written restart area.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61767-750">재시작 영역에는 클라이언트의 마지막 검사점 작업이 포함된 정보를 임시로 저장할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-750">A restart area can be used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="61767-751">복구가 필요할 경우 재시작 영역을 읽고 마지막 검사점 작업에서 모든 데이터를 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-751">When a recovery is necessary, you can read a restart area and retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="61767-752">이 데이터는 트랜잭션 테이블, 더티 페이지 테이블 및 열린 파일 테이블을 복구 프로세스에서 사용할 수 있도록 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-752">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="61767-753">재시작 영역은 <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> 메서드를 사용하여 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-753">A restart area can be read using the <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="61767-754">재시작 영역이 기록되면 바이트 배열 세그먼트의 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-754">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="61767-755">재시작 영역을 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-755">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="61767-756">예약을 지정하는 경우 쓴 재시작 영역은 컬렉션에 포함된 예약을 사용하여 이전에 예약된 공간을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-756">If a reservation is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="61767-757">메서드가 성공하면 데이터가 포함될 수 있는 가장 작은 예약을 사용하고 해당 예약이 컬렉션에서 제거됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-757">If the method succeeds, it will consume the smallest reservation that can contain the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="61767-758">이 메서드가 성공적으로 완료되면 기준 세그먼트 번호가 업데이트된 것입니다.</span><span class="sxs-lookup"><span data-stu-id="61767-758">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="61767-759">새 기준 시퀀스 번호보다 작은 시퀀스 번호를 가진 모든 로그 레코드에 액세스할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-759">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="61767-760">레코드 시퀀스가 삭제되었거나 잘못된 인수를 전달하는 경우 이 작업 내에서 즉시 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-760">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="61767-761">비동기 추가 요청 중에 발생한 오류(예: I/O 요청 중의 디스크 오류)는 <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> 메서드를 호출할 때 예외로 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-761">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61767-762">One or more of the arguments are <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-762">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61767-763">
            <paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-763">
              <paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span>
          </span>
          <span data-ttu-id="61767-764">-or-  A new or existing archive tail or base of the active log is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-764">-or-  A new or existing archive tail or base of the active log is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61767-765">
            <paramref name="reservations" /> was not created by this record sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-765">
              <paramref name="reservations" /> was not created by this record sequence.</span>
          </span>
          <span data-ttu-id="61767-766">-or-  <paramref name="newBaseSeqNum" /> is not valid for this sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-766">-or-  <paramref name="newBaseSeqNum" /> is not valid for this sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="61767-767">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-767">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="61767-768">The request cannot be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-768">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61767-769">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-769">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="61767-770">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-770">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="61767-771">The record sequence is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-771">The record sequence is full.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException">
          <span data-ttu-id="61767-772">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-772">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum, System.IO.Log.ReservationCollection reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum, class System.IO.Log.ReservationCollection reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As IList(Of ArraySegment(Of Byte)), newBaseSeqNum As SequenceNumber, reservations As ReservationCollection) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber newBaseSeqNum, System::IO::Log::ReservationCollection ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber&#xA;override this.WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.WriteRestartArea (data, newBaseSeqNum, reservations)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="61767-773">A list of byte array segments that will be concatenated and appended as the record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-773">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="newBaseSeqNum">
          <span data-ttu-id="61767-774">The new base sequence number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-774">The new base sequence number.</span>
          </span>
          <span data-ttu-id="61767-775">The specified sequence number must be greater than or equal to the current base sequence number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-775">The specified sequence number must be greater than or equal to the current base sequence number.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="61767-776">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-776">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61767-777">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-777">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          </span>
          <span data-ttu-id="61767-778">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-778">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61767-779">The sequence number of the written restart area.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-779">The sequence number of the written restart area.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61767-780">재시작 영역에는 클라이언트의 마지막 검사점 작업이 포함된 정보를 임시로 저장할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-780">A restart area can be used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="61767-781">복구가 필요할 경우 재시작 영역을 읽고 마지막 검사점 작업에서 모든 데이터를 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-781">When a recovery is necessary, you can read a restart area and retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="61767-782">이 데이터는 트랜잭션 테이블, 더티 페이지 테이블 및 열린 파일 테이블을 복구 프로세스에서 사용할 수 있도록 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-782">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="61767-783">재시작 영역은 <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> 메서드를 사용하여 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-783">A restart area can be read using the <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="61767-784">재시작 영역이 기록되면 바이트 배열 세그먼트의 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-784">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="61767-785">재시작 영역을 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-785">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="61767-786">예약을 지정하는 경우 쓴 재시작 영역은 컬렉션에 포함된 예약을 사용하여 이전에 예약된 공간을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="61767-786">If a reservation is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="61767-787">메서드가 성공하면 데이터가 포함될 수 있는 가장 작은 예약을 사용하고 해당 예약이 컬렉션에서 제거됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-787">If the method succeeds, it will consume the smallest reservation that can contain the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="61767-788">이 메서드가 성공적으로 완료되면 기준 세그먼트 번호가 업데이트된 것입니다.</span><span class="sxs-lookup"><span data-stu-id="61767-788">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="61767-789">새 기준 시퀀스 번호보다 작은 시퀀스 번호를 가진 모든 로그 레코드에 액세스할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="61767-789">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="61767-790">레코드 시퀀스가 삭제되었거나 잘못된 인수를 전달하는 경우 이 작업 내에서 즉시 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-790">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="61767-791">비동기 추가 요청 중에 발생한 오류(예: I/O 요청 중의 디스크 오류)는 <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> 메서드를 호출할 때 예외로 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="61767-791">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61767-792">One or more of the arguments are <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-792">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61767-793">
            <paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-793">
              <paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span>
          </span>
          <span data-ttu-id="61767-794">-or-  A new or existing archive tail or base of the active log is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-794">-or-  A new or existing archive tail or base of the active log is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61767-795">
            <paramref name="reservations" /> was not created by this record sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-795">
              <paramref name="reservations" /> was not created by this record sequence.</span>
          </span>
          <span data-ttu-id="61767-796">-or-  <paramref name="newBaseSeqNum" /> is not valid for this sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-796">-or-  <paramref name="newBaseSeqNum" /> is not valid for this sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="61767-797">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-797">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="61767-798">The request cannot be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-798">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61767-799">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-799">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="61767-800">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-800">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="61767-801">The record sequence is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-801">The record sequence is full.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException">
          <span data-ttu-id="61767-802">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61767-802">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>