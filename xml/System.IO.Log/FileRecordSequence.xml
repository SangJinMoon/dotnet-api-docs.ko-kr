<Type Name="FileRecordSequence" FullName="System.IO.Log.FileRecordSequence">
  <TypeSignature Language="C#" Value="public sealed class FileRecordSequence : IDisposable, System.IO.Log.IRecordSequence" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FileRecordSequence extends System.Object implements class System.IDisposable, class System.IO.Log.IRecordSequence" />
  <TypeSignature Language="DocId" Value="T:System.IO.Log.FileRecordSequence" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FileRecordSequence&#xA;Implements IDisposable, IRecordSequence" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileRecordSequence sealed : IDisposable, System::IO::Log::IRecordSequence" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Log</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IO.Log.IRecordSequence</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="57a69-101">파일 위에 <see cref="T:System.IO.Log.IRecordSequence" />를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-101">Implements an <see cref="T:System.IO.Log.IRecordSequence" /> on top of a file.</span></span> <span data-ttu-id="57a69-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a69-103"><xref:System.IO.Log.FileRecordSequence>는 파일 시스템에서 간단한 로그 파일에 기반을 둔 레코드 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-103">The <xref:System.IO.Log.FileRecordSequence> is a record sequence based on a single log file in the file system.</span></span> <span data-ttu-id="57a69-104">이 시퀀스는 간단한 파일 기반 로그 위에 <xref:System.IO.Log.IRecordSequence> 인터페이스를 간단히 구현한 것입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-104">It is a simple implementation of the <xref:System.IO.Log.IRecordSequence> interface, on top of a simple file-based log.</span></span>  
  
 <span data-ttu-id="57a69-105">파일 기반 로그를 조작하려면 <xref:System.IO.Log.FileRecordSequence>가 생성되는 시점에 파일 시스템 보안에서 규정하는 대로, 응용 프로그램을 실행하는 계정에 충분한 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-105">To manipulate a file-based log, the account that your application is running in must have sufficient privileges, as dictated by the file system security at the time the <xref:System.IO.Log.FileRecordSequence> is constructed.</span></span> <span data-ttu-id="57a69-106">또한 생성 시점에 FullTrust가 요청되며,</span><span class="sxs-lookup"><span data-stu-id="57a69-106">In addition, a demand for FullTrust is made at construction time.</span></span> <span data-ttu-id="57a69-107">그 후 Windows 보안 모델에 따라 권한 확인 결과가 캐시됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-107">The permission verification results are cached thereafter in keeping with the Windows security model.</span></span> <span data-ttu-id="57a69-108">레코드 시퀀스의 내용을 권한 없는 사용자에게 실수로 공개하지 않도록 주의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-108">You should ensure that you do not accidentally expose the contents of the record sequence to an unauthorized user.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57a69-109">다음 예제에서는 레코드 시퀀스를 만들어 레코드를 추가한 후 레코드를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-109">The following example creates a record sequence, appends record to it, and finally reads the records.</span></span>  
  
 [!code-csharp[IRecordSequence#1](~/samples/snippets/csharp/VS_Snippets_CFX/irecordsequence/cs/readrecord.cs#1)]
 [!code-vb[IRecordSequence#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/irecordsequence/vb/readrecord.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="57a69-110"><see cref="T:System.IO.Log.FileRecordSequence" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-110">Initializes a new instance of the <see cref="T:System.IO.Log.FileRecordSequence" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileRecordSequence (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileRecordSequence(System::String ^ path);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="57a69-111">이 <see cref="T:System.IO.Log.FileRecordSequence" /> 인스턴스가 캡슐화할 파일의 상대 또는 절대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-111">A relative or absolute path for the file that this <see cref="T:System.IO.Log.FileRecordSequence" /> instance will encapsulate.</span></span></param>
        <summary><span data-ttu-id="57a69-112">지정된 파일을 사용하여 <see cref="T:System.IO.Log.FileRecordSequence" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-112">Initializes a new instance of the <see cref="T:System.IO.Log.FileRecordSequence" /> class with a specified file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a69-113">이 생성자는 파일에 대한 읽기/쓰기 액세스 권한을 만들고 공유 읽기 액세스를 사용하여 파일을 엽니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-113">This constructor creates read/write access to the file, and opens the file with share Read access.</span></span> <span data-ttu-id="57a69-114">따라서 이 <xref:System.IO.Log.FileRecordSequence> 인스턴스가 삭제될 때까지 이 프로세스 또는 다른 프로세스에서 파일에 쓰기 위해 시도하는 파일 열기 요청은 실패하지만 읽기 시도는 성공합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-114">This means that requests to open the file for writing by this or another process fails until this <xref:System.IO.Log.FileRecordSequence> instance has been disposed of, but read attempts will succeed.</span></span> <span data-ttu-id="57a69-115">`path`를 찾을 수 없으면 0바이트 크기의 새 파일이 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-115">If `path` is not found, a new file is created with a size of 0 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57a69-116">다음 예제에서는 레코드 시퀀스를 만들어 레코드를 추가한 후 레코드를 읽고 마지막으로 시퀀스를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-116">The following example creates a record sequence, appends record to it, reads the records, and finally diposes the sequence.</span></span>  
  
 [!code-csharp[IRecordSequence#1](~/samples/snippets/csharp/VS_Snippets_CFX/irecordsequence/cs/readrecord.cs#1)]
 [!code-vb[IRecordSequence#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/irecordsequence/vb/readrecord.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="57a69-117"><paramref name="path" />로 지정된 파일이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-117">The file specified by <paramref name="path" /> is not valid.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="57a69-118"><paramref name="path" />로 지정된 파일을 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-118">The file specified by <paramref name="path" /> cannot be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="57a69-119">예기치 않은 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-119">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="57a69-120">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-120">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="57a69-121">지정된 로그 저장소에 대한 액세스가 운영 체제에서 거부된 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-121">Access for the specified log store is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileRecordSequence (string path, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.#ctor(System.String,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, access As FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileRecordSequence(System::String ^ path, System::IO::FileAccess access);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="57a69-122">이 <see cref="T:System.IO.Log.FileRecordSequence" /> 인스턴스가 캡슐화할 파일의 상대 또는 절대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-122">A relative or absolute path for the file that this <see cref="T:System.IO.Log.FileRecordSequence" /> instance will encapsulate.</span></span></param>
        <param name="access"><span data-ttu-id="57a69-123">로그 파일에 대한 사용자의 액세스 권한 유형을 제어하는 유효한 <see cref="T:System.IO.FileAccess" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-123">A valid <see cref="T:System.IO.FileAccess" /> value that controls the kind of access users have to a log file.</span></span></param>
        <summary><span data-ttu-id="57a69-124">지정된 파일과 액세스 모드를 사용하여 <see cref="T:System.IO.Log.FileRecordSequence" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-124">Initializes a new instance of the <see cref="T:System.IO.Log.FileRecordSequence" /> class with a specified file and an access mode.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="57a69-125"><paramref name="path" />로 지정된 파일이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-125">The file specified by <paramref name="path" /> is not valid.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="57a69-126"><paramref name="path" />로 지정된 파일을 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-126">The file specified by <paramref name="path" /> cannot be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="57a69-127">예기치 않은 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-127">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="57a69-128">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-128">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="57a69-129">지정된 로그 저장소에 대한 액세스가 운영 체제에서 거부된 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-129">Access for the specified log store is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileRecordSequence (string path, System.IO.FileAccess access, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileAccess access, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.#ctor(System.String,System.IO.FileAccess,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, access As FileAccess, size As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileRecordSequence(System::String ^ path, System::IO::FileAccess access, int size);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="57a69-130">이 <see cref="T:System.IO.Log.FileRecordSequence" /> 인스턴스가 캡슐화할 파일의 상대 또는 절대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-130">A relative or absolute path for the file that this <see cref="T:System.IO.Log.FileRecordSequence" /> instance will encapsulate.</span></span></param>
        <param name="access"><span data-ttu-id="57a69-131">로그 파일에 대한 사용자의 액세스 권한 유형을 제어하는 유효한 <see cref="T:System.IO.FileAccess" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-131">A valid <see cref="T:System.IO.FileAccess" /> value that controls the kind of access users have to a log file.</span></span></param>
        <param name="size"><span data-ttu-id="57a69-132">열 로그 파일의 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-132">The size of the log file to be opened.</span></span></param>
        <summary><span data-ttu-id="57a69-133">지정된 파일, 액세스 모드, 파일 크기를 사용하여 <see cref="T:System.IO.Log.FileRecordSequence" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-133">Initializes a new instance of the <see cref="T:System.IO.Log.FileRecordSequence" /> class with a specified file, an access mode, and a file size.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="57a69-134">하나 이상의 매개 변수가 유효 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-134">One or more of the parameters are out of the valid range.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="57a69-135"><paramref name="path" />로 지정된 파일이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-135">The file specified by <paramref name="path" /> is not valid.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="57a69-136"><paramref name="path" />로 지정된 파일을 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-136">The file specified by <paramref name="path" /> cannot be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="57a69-137">예기치 않은 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-137">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="57a69-138">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-138">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="57a69-139">지정된 로그 저장소에 대한 액세스가 운영 체제에서 거부된 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-139">Access for the specified log store is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AdvanceBaseSequenceNumber">
      <MemberSignature Language="C#" Value="public void AdvanceBaseSequenceNumber (System.IO.Log.SequenceNumber newBaseSequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AdvanceBaseSequenceNumber(valuetype System.IO.Log.SequenceNumber newBaseSequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.AdvanceBaseSequenceNumber(System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AdvanceBaseSequenceNumber (newBaseSequenceNumber As SequenceNumber)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AdvanceBaseSequenceNumber(System::IO::Log::SequenceNumber newBaseSequenceNumber);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.AdvanceBaseSequenceNumber(System.IO.Log.SequenceNumber)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newBaseSequenceNumber" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="newBaseSequenceNumber"><span data-ttu-id="57a69-140">레코드 시퀀스의 새 기준 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-140">The new base sequence number of the record sequence.</span></span></param>
        <summary><span data-ttu-id="57a69-141">로그의 기준 시퀀스 번호를 앞으로 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-141">Moves the base sequence number of the log forward.</span></span> <span data-ttu-id="57a69-142">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-142">This method cannot be inherited.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="57a69-143"><paramref name="newBaseSequenceNumber" />이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-143"><paramref name="newBaseSequenceNumber" /> is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="57a69-144"><paramref name="newBaseSequenceNumber" />이 이 시퀀스의 기준 시퀀스 번호와 마지막 시퀀스 번호 사이에 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-144"><paramref name="newBaseSequenceNumber" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="57a69-145">시퀀스를 수정하는 동안 I/O 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-145">An I/O error occurred while modifying the sequence.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57a69-146">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-146">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="57a69-147">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-147">There is not enough memory to continue the execution of the program.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Append">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="57a69-148">로그 레코드를 <see cref="T:System.IO.Log.FileRecordSequence" />에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-148">Writes a log record to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="57a69-149">다음 예제에서는 레코드 시퀀스를 만들어 레코드를 추가한 후 레코드를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-149">The following example creates a record sequence, appends record to it, and finally reads the records.</span></span>  
  
 [!code-csharp[IRecordSequence#0](~/samples/snippets/csharp/VS_Snippets_CFX/irecordsequence/cs/readrecord.cs#0)]
 [!code-vb[IRecordSequence#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/irecordsequence/vb/readrecord.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Append(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="57a69-150">연결하여 레코드로 추가할 바이트 배열 세그먼트의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-150">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="57a69-151">사용자가 지정한 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-151">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="57a69-152">이전 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-152">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="57a69-153">데이터를 쓰는 방법을 지정하는 <see cref="T:System.IO.Log.RecordAppendOptions" />의 유효한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-153">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <summary><span data-ttu-id="57a69-154">로그 레코드를 <see cref="T:System.IO.Log.FileRecordSequence" />에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-154">Writes a log record to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span></span> <span data-ttu-id="57a69-155">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-155">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="57a69-156">추가된 로그 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-156">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a69-157">`data` 매개 변수에 포함된 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-157">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="57a69-158">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-158">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="57a69-159">일반적으로 이 메서드는 레코드를 쓰기 전에 완료됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-159">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="57a69-160">레코드가 기록되도록 하려면 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 매개 변수를 사용하여 `recordAppendOptions` 플래그를 지정하거나, <xref:System.IO.Log.FileRecordSequence.Flush%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-160">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57a69-161">다음 예제에서는 레코드 시퀀스를 만들어 레코드를 추가한 후 레코드를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-161">The following example creates a record sequence, appends record to it, and finally reads the records.</span></span>  
  
 [!code-csharp[FileRecordSequence#0](~/samples/snippets/csharp/VS_Snippets_CFX/filerecordsequence/cs/filerecordsequence.cs#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57a69-162">하나 이상의 인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-162">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="57a69-163">하나 이상의 인수가 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-163">One or more of the arguments are out of range.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="57a69-164">읽기 전용 액세스 권한으로 레코드 시퀀스를 열었으므로 작업을 수행할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-164">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="57a69-165">예기치 못한 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-165">The request could not be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57a69-166">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-166">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="57a69-167">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-167">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="57a69-168">레코드 시퀀스가 꽉 찼습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-168">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Append(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="57a69-169">연결하여 레코드로 추가할 바이트 배열 세그먼트의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-169">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="57a69-170">사용자가 지정한 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-170">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="57a69-171">이전 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-171">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="57a69-172">데이터를 쓰는 방법을 지정하는 <see cref="T:System.IO.Log.RecordAppendOptions" />의 유효한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-172">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <summary><span data-ttu-id="57a69-173">로그 레코드를 <see cref="T:System.IO.Log.FileRecordSequence" />에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-173">Writes a log record to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span></span> <span data-ttu-id="57a69-174">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-174">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="57a69-175">추가된 로그 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-175">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a69-176">`data` 매개 변수에 포함된 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-176">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="57a69-177">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-177">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="57a69-178">일반적으로 이 메서드는 레코드를 쓰기 전에 완료됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-178">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="57a69-179">레코드가 기록되도록 하려면 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 매개 변수를 사용하여 `recordAppendOptions` 플래그를 지정하거나, <xref:System.IO.Log.FileRecordSequence.Flush%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-179">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57a69-180">다음 예제에서는 이 메서드를 사용하여 레코드 시퀀스를 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-180">The following example shows how you can create a record sequence with this method.</span></span>  
  
 [!code-csharp[IRecordSequence#3](~/samples/snippets/csharp/VS_Snippets_CFX/irecordsequence/cs/readrecord.cs#3)] 
 [!code-vb[IRecordSequence#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/irecordsequence/vb/readrecord.vb#3)]   
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57a69-181">하나 이상의 인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-181">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="57a69-182">하나 이상의 인수가 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-182">One or more of the arguments are out of range.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="57a69-183">읽기 전용 액세스 권한으로 레코드 시퀀스를 열었으므로 작업을 수행할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-183">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="57a69-184">예기치 못한 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-184">The request could not be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57a69-185">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-185">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="57a69-186">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-186">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="57a69-187">레코드 시퀀스가 꽉 찼습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-187">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Append(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="57a69-188">연결하여 레코드로 추가할 바이트 배열 세그먼트의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-188">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="57a69-189">사용자가 지정한 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-189">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="57a69-190">이전 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-190">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="57a69-191">데이터를 쓰는 방법을 지정하는 <see cref="T:System.IO.Log.RecordAppendOptions" />의 유효한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-191">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservations"><span data-ttu-id="57a69-192">이 레코드에 사용해야 하는 예약이 포함된 <see cref="T:System.IO.Log.ReservationCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-192">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span></span></param>
        <summary><span data-ttu-id="57a69-193">시퀀스에서 이전에 예약된 공간을 사용하여 로그 레코드를 <see cref="T:System.IO.Log.FileRecordSequence" />에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-193">Writes a log record to the <see cref="T:System.IO.Log.FileRecordSequence" />, using space previously reserved in the sequence.</span></span> <span data-ttu-id="57a69-194">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-194">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="57a69-195">추가된 로그 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-195">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a69-196">`data` 매개 변수에 포함된 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-196">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="57a69-197">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-197">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="57a69-198">추가된 레코드는 `reservations` 매개 변수로 지정된 예약을 사용하여 이전에 예약된 공간을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-198">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="57a69-199">추가 작업이 성공하면 데이터가 포함될 수 있는 가장 작은 예약 영역을 사용하고 해당 예약 영역이 컬렉션에서 제거됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-199">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="57a69-200">일반적으로 이 메서드는 레코드를 쓰기 전에 완료됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-200">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="57a69-201">레코드가 기록되도록 하려면 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 매개 변수를 사용하여 `recordAppendOptions` 플래그를 지정하거나, <xref:System.IO.Log.FileRecordSequence.Flush%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-201">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57a69-202">하나 이상의 인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-202">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="57a69-203">하나 이상의 인수가 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-203">One or more of the arguments are out of range.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="57a69-204">이 레코드 시퀀스에서 <paramref name="reservations" />를 만들 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-204"><paramref name="reservations" /> was not created by this record sequence..</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="57a69-205">읽기 전용 액세스 권한으로 레코드 시퀀스를 열었으므로 작업을 수행할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-205">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="57a69-206">예기치 못한 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-206">The request could not be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57a69-207">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-207">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="57a69-208">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-208">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="57a69-209">레코드 시퀀스가 꽉 찼습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-209">The record sequence is full.</span></span></exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException"><span data-ttu-id="57a69-210"><paramref name="data" />에서 <paramref name="reservations" />에 맞는 크기의 예약을 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-210">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Append(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="57a69-211">연결하여 레코드로 추가할 바이트 배열 세그먼트의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-211">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="57a69-212">사용자가 지정한 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-212">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="57a69-213">이전 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-213">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="57a69-214">데이터를 쓰는 방법을 지정하는 <see cref="T:System.IO.Log.RecordAppendOptions" />의 유효한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-214">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservations"><span data-ttu-id="57a69-215">이 레코드에 사용해야 하는 예약이 포함된 <see cref="T:System.IO.Log.ReservationCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-215">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span></span></param>
        <summary><span data-ttu-id="57a69-216">시퀀스에서 이전에 예약된 공간을 사용하여 로그 레코드를 <see cref="T:System.IO.Log.FileRecordSequence" />에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-216">Writes a log record to the <see cref="T:System.IO.Log.FileRecordSequence" />, using space previously reserved in the sequence.</span></span> <span data-ttu-id="57a69-217">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-217">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="57a69-218">추가된 로그 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-218">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a69-219">`data` 매개 변수에 포함된 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-219">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="57a69-220">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-220">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="57a69-221">추가된 레코드는 `reservations` 매개 변수로 지정된 예약을 사용하여 이전에 예약된 공간을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-221">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="57a69-222">추가 작업이 성공하면 데이터가 포함될 수 있는 가장 작은 예약 영역을 사용하고 해당 예약 영역이 컬렉션에서 제거됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-222">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="57a69-223">일반적으로 이 메서드는 레코드를 쓰기 전에 완료됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-223">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="57a69-224">레코드가 기록되도록 하려면 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 매개 변수를 사용하여 `recordAppendOptions` 플래그를 지정하거나, <xref:System.IO.Log.FileRecordSequence.Flush%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-224">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57a69-225">하나 이상의 인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-225">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="57a69-226">하나 이상의 인수가 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-226">One or more of the arguments are out of range.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="57a69-227">이 레코드 시퀀스에서 <paramref name="reservations" />를 만들 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-227"><paramref name="reservations" /> was not created by this record sequence..</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="57a69-228">읽기 전용 액세스 권한으로 레코드 시퀀스를 열었으므로 작업을 수행할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-228">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="57a69-229">예기치 못한 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-229">The request could not be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57a69-230">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-230">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="57a69-231">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-231">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="57a69-232">레코드 시퀀스가 꽉 찼습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-232">The record sequence is full.</span></span></exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException"><span data-ttu-id="57a69-233"><paramref name="data" />에서 <paramref name="reservations" />에 맞는 크기의 예약을 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-233">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BaseSequenceNumber">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber BaseSequenceNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.SequenceNumber BaseSequenceNumber" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRecordSequence.BaseSequenceNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseSequenceNumber As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::SequenceNumber BaseSequenceNumber { System::IO::Log::SequenceNumber get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.BaseSequenceNumber</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57a69-234">현재 <see cref="T:System.IO.Log.FileRecordSequence" />에서 유효한 첫 번째 레코드의 시퀀스 번호를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-234">Gets the sequence number of the first valid record in the current <see cref="T:System.IO.Log.FileRecordSequence" />.</span></span></summary>
        <value><span data-ttu-id="57a69-235"><see cref="T:System.IO.Log.FileRecordSequence" />에서 유효한 레코드에 해당하는 가장 작은 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-235">The lowest sequence number that corresponds to a valid record in the <see cref="T:System.IO.Log.FileRecordSequence" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a69-236">유효한 시퀀스 번호는 <xref:System.IO.Log.FileRecordSequence.BaseSequenceNumber%2A>보다 크거나 같고 <xref:System.IO.Log.FileRecordSequence.LastSequenceNumber%2A>보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-236">Valid sequence numbers are greater than or equal to <xref:System.IO.Log.FileRecordSequence.BaseSequenceNumber%2A> and less than <xref:System.IO.Log.FileRecordSequence.LastSequenceNumber%2A>.</span></span> <span data-ttu-id="57a69-237">그 외의 다른 시퀀스 번호는 유효하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-237">All other sequence numbers are invalid.</span></span>  
  
 <span data-ttu-id="57a69-238">이 속성의 값은 <xref:System.IO.Log.FileRecordSequence.WriteRestartArea%2A> 또는 <xref:System.IO.Log.FileRecordSequence.AdvanceBaseSequenceNumber%2A> 메서드를 호출하여 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-238">The value of this property can be changed by calling the <xref:System.IO.Log.FileRecordSequence.WriteRestartArea%2A> or <xref:System.IO.Log.FileRecordSequence.AdvanceBaseSequenceNumber%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57a69-239">다음 예제에서는 루프에서 <xref:System.IO.Log.FileRecordSequence.BaseSequenceNumber%2A>를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-239">The following example shows using <xref:System.IO.Log.FileRecordSequence.BaseSequenceNumber%2A> in a loop:</span></span>  
  
 [!code-csharp[IRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/irecordsequence/cs/readrecord.cs#2)]
 [!code-vb[IRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/irecordsequence/vb/readrecord.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57a69-240">시퀀스가 삭제된 후 속성에 액세스한 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-240">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAppend">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="57a69-241">비동기 추가 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-241">Begins an asynchronous append operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="57a69-242">연결하여 레코드로 추가할 바이트 배열 세그먼트의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-242">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="57a69-243">사용자가 지정한 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-243">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="57a69-244">이전 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-244">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="57a69-245">데이터를 쓰는 방법을 지정하는 <see cref="T:System.IO.Log.RecordAppendOptions" />의 유효한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-245">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="callback"><span data-ttu-id="57a69-246">추가가 완료되면 호출되는 선택적 비동기 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-246">An optional asynchronous callback, to be called when the append is complete.</span></span></param>
        <param name="state"><span data-ttu-id="57a69-247">이 특정 비동기 추가 요청을 다른 요청과 구별하는 사용자 제공 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-247">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span></span></param>
        <summary><span data-ttu-id="57a69-248">비동기 추가 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-248">Begins an asynchronous append operation.</span></span> <span data-ttu-id="57a69-249">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-249">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="57a69-250">보류 중일 수 있는 비동기 추가를 나타내는 <see cref="T:System.IAsyncResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-250">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a69-251">이 메서드에서 반환한 <xref:System.IAsyncResult>를 <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> 메서드에 전달하여 추가 작업이 완료되었고 리소스를 적절하게 해제할 수 있음을 확인해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-251">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method, to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="57a69-252">비동기 추가 중에 오류가 발생한 경우 이 메서드에서 반환된 <xref:System.IO.Log.FileRecordSequence.EndAppend%2A>를 사용하여 <xref:System.IAsyncResult> 메서드를 호출하기 전에는 예외가 throw되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-252">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="57a69-253">`data` 매개 변수에 포함된 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-253">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="57a69-254">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-254">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="57a69-255">일반적으로 이 메서드는 레코드를 쓰기 전에 완료됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-255">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="57a69-256">레코드가 기록되도록 하려면 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 매개 변수를 사용하여 `recordAppendOptions` 플래그를 지정하거나, <xref:System.IO.Log.FileRecordSequence.Flush%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-256">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57a69-257">하나 이상의 인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-257">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="57a69-258">하나 이상의 인수가 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-258">One or more of the arguments are out of range.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="57a69-259">읽기 전용 액세스 권한으로 레코드 시퀀스를 열었으므로 작업을 수행할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-259">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="57a69-260">예기치 않은 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-260">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57a69-261">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-261">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="57a69-262">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-262">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="57a69-263">레코드 시퀀스가 꽉 찼습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-263">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="57a69-264">연결하여 레코드로 추가할 바이트 배열 세그먼트의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-264">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="57a69-265">사용자가 지정한 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-265">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="57a69-266">이전 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-266">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="57a69-267">데이터를 쓰는 방법을 지정하는 <see cref="T:System.IO.Log.RecordAppendOptions" />의 유효한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-267">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="callback"><span data-ttu-id="57a69-268">추가가 완료되면 호출되는 선택적 비동기 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-268">An optional asynchronous callback, to be called when the append is complete.</span></span></param>
        <param name="state"><span data-ttu-id="57a69-269">이 특정 비동기 추가 요청을 다른 요청과 구별하는 사용자 제공 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-269">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span></span></param>
        <summary><span data-ttu-id="57a69-270">비동기 추가 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-270">Begins an asynchronous append operation.</span></span> <span data-ttu-id="57a69-271">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-271">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="57a69-272">보류 중일 수 있는 비동기 추가를 나타내는 <see cref="T:System.IAsyncResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-272">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a69-273">이 메서드에서 반환한 <xref:System.IAsyncResult>를 <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> 메서드에 전달하여 추가 작업이 완료되었고 리소스를 적절하게 해제할 수 있음을 확인해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-273">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method, to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="57a69-274">비동기 추가 중에 오류가 발생한 경우 이 메서드에서 반환된 <xref:System.IO.Log.FileRecordSequence.EndAppend%2A>를 사용하여 <xref:System.IAsyncResult> 메서드를 호출하기 전에는 예외가 throw되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-274">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="57a69-275">`data` 매개 변수에 포함된 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-275">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="57a69-276">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-276">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="57a69-277">일반적으로 이 메서드는 레코드를 쓰기 전에 완료됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-277">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="57a69-278">레코드가 기록되도록 하려면 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 매개 변수를 사용하여 `recordAppendOptions` 플래그를 지정하거나, <xref:System.IO.Log.FileRecordSequence.Flush%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-278">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57a69-279">하나 이상의 인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-279">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="57a69-280">하나 이상의 인수가 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-280">One or more of the arguments are out of range.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="57a69-281">읽기 전용 액세스 권한으로 레코드 시퀀스를 열었으므로 작업을 수행할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-281">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="57a69-282">예기치 않은 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-282">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57a69-283">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-283">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="57a69-284">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-284">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="57a69-285">레코드 시퀀스가 꽉 찼습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-285">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="57a69-286">연결하여 레코드로 추가할 바이트 배열 세그먼트의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-286">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="57a69-287">사용자가 지정한 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-287">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="57a69-288">이전 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-288">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="57a69-289">데이터를 쓰는 방법을 지정하는 <see cref="T:System.IO.Log.RecordAppendOptions" />의 유효한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-289">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservations"><span data-ttu-id="57a69-290">이 레코드에 사용해야 하는 예약이 포함된 <see cref="T:System.IO.Log.ReservationCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-290">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span></span></param>
        <param name="callback"><span data-ttu-id="57a69-291">추가가 완료되면 호출되는 선택적 비동기 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-291">An optional asynchronous callback, to be called when the append is complete.</span></span></param>
        <param name="state"><span data-ttu-id="57a69-292">이 특정 비동기 추가 요청을 다른 요청과 구별하는 사용자 제공 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-292">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span></span></param>
        <summary><span data-ttu-id="57a69-293">시퀀스에서 이전에 예약된 공간을 사용하여 비동기 추가 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-293">Begins an asynchronous append operation using space previously reserved in the sequence.</span></span> <span data-ttu-id="57a69-294">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-294">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="57a69-295">보류 중일 수 있는 비동기 추가를 나타내는 <see cref="T:System.IAsyncResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-295">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a69-296">이 메서드에서 반환한 <xref:System.IAsyncResult>를 <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> 메서드에 전달하여 추가 작업이 완료되었고 리소스를 적절하게 해제할 수 있음을 확인해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-296">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method, to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="57a69-297">비동기 추가 중에 오류가 발생한 경우 이 메서드에서 반환된 <xref:System.IO.Log.FileRecordSequence.EndAppend%2A>를 사용하여 <xref:System.IAsyncResult> 메서드를 호출하기 전에는 예외가 throw되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-297">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="57a69-298">`data` 매개 변수에 포함된 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-298">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="57a69-299">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-299">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="57a69-300">추가된 레코드는 `reservations` 매개 변수로 지정된 예약을 사용하여 이전에 예약된 공간을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-300">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="57a69-301">추가 작업이 성공하면 데이터가 포함될 수 있는 가장 작은 예약 영역을 사용하고 해당 예약 영역이 컬렉션에서 제거됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-301">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="57a69-302">일반적으로 이 메서드는 레코드를 쓰기 전에 완료됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-302">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="57a69-303">레코드가 기록되도록 하려면 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 매개 변수를 사용하여 `recordAppendOptions` 플래그를 지정하거나, <xref:System.IO.Log.FileRecordSequence.Flush%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-303">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57a69-304">하나 이상의 인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-304">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="57a69-305">하나 이상의 인수가 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-305">One or more of the arguments are out of range.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="57a69-306">이 레코드 시퀀스를 통해 <paramref name="reservations" />를 만들 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-306"><paramref name="reservations" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="57a69-307">읽기 전용 액세스 권한으로 레코드 시퀀스를 열었으므로 작업을 수행할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-307">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="57a69-308">예기치 않은 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-308">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57a69-309">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-309">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="57a69-310">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-310">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="57a69-311">레코드 시퀀스가 꽉 찼습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-311">The record sequence is full.</span></span></exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException"><span data-ttu-id="57a69-312"><paramref name="data" />에서 <paramref name="reservations" />에 맞는 크기의 예약을 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-312">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="57a69-313">연결하여 레코드로 추가할 바이트 배열 세그먼트의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-313">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="57a69-314">사용자가 지정한 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-314">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="57a69-315">이전 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-315">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="57a69-316">데이터를 쓰는 방법을 지정하는 <see cref="T:System.IO.Log.RecordAppendOptions" />의 유효한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-316">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservations"><span data-ttu-id="57a69-317">이 레코드에 사용해야 하는 예약이 포함된 <see cref="T:System.IO.Log.ReservationCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-317">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span></span></param>
        <param name="callback"><span data-ttu-id="57a69-318">추가가 완료되면 호출되는 선택적 비동기 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-318">An optional asynchronous callback, to be called when the append is complete.</span></span></param>
        <param name="state"><span data-ttu-id="57a69-319">이 특정 비동기 추가 요청을 다른 요청과 구별하는 사용자 제공 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-319">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span></span></param>
        <summary><span data-ttu-id="57a69-320">시퀀스에서 이전에 예약된 공간을 사용하여 비동기 추가 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-320">Begins an asynchronous append operation using space previously reserved in the sequence.</span></span> <span data-ttu-id="57a69-321">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-321">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="57a69-322">보류 중일 수 있는 비동기 추가를 나타내는 <see cref="T:System.IAsyncResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-322">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a69-323">이 메서드에서 반환한 <xref:System.IAsyncResult>를 <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> 메서드에 전달하여 추가 작업이 완료되었고 리소스를 적절하게 해제할 수 있음을 확인해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-323">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method, to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="57a69-324">비동기 추가 중에 오류가 발생한 경우 이 메서드에서 반환된 <xref:System.IO.Log.FileRecordSequence.EndAppend%2A>를 사용하여 <xref:System.IAsyncResult> 메서드를 호출하기 전에는 예외가 throw되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-324">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="57a69-325">`data` 매개 변수에 포함된 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-325">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="57a69-326">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-326">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="57a69-327">추가된 레코드는 `reservations` 매개 변수로 지정된 예약을 사용하여 이전에 예약된 공간을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-327">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="57a69-328">추가 작업이 성공하면 데이터가 포함될 수 있는 가장 작은 예약 영역을 사용하고 해당 예약 영역이 컬렉션에서 제거됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-328">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="57a69-329">일반적으로 이 메서드는 레코드를 쓰기 전에 완료됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-329">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="57a69-330">레코드가 기록되도록 하려면 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 매개 변수를 사용하여 `recordAppendOptions` 플래그를 지정하거나, <xref:System.IO.Log.FileRecordSequence.Flush%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-330">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57a69-331">하나 이상의 인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-331">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="57a69-332">하나 이상의 인수가 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-332">One or more of the arguments are out of range.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="57a69-333">이 레코드 시퀀스를 통해 <paramref name="reservations" />를 만들 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-333"><paramref name="reservations" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="57a69-334">읽기 전용 액세스 권한으로 레코드 시퀀스를 열었으므로 작업을 수행할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-334">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="57a69-335">예기치 않은 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-335">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57a69-336">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-336">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="57a69-337">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-337">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="57a69-338">레코드 시퀀스가 꽉 찼습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-338">The record sequence is full.</span></span></exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException"><span data-ttu-id="57a69-339"><paramref name="data" />에서 <paramref name="reservations" />에 맞는 크기의 예약을 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-339">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginFlush">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginFlush (System.IO.Log.SequenceNumber sequenceNumber, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginFlush(valuetype System.IO.Log.SequenceNumber sequenceNumber, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginFlush(System.IO.Log.SequenceNumber,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginFlush(System::IO::Log::SequenceNumber sequenceNumber, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginFlush(System.IO.Log.SequenceNumber,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequenceNumber" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sequenceNumber"><span data-ttu-id="57a69-340">써야 하는 최신 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-340">The sequence number of the latest record that must be written.</span></span> <span data-ttu-id="57a69-341"><see cref="T:System.IO.Log.SequenceNumber" />가 유효하지 않은 경우 모든 레코드를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-341">If <see cref="T:System.IO.Log.SequenceNumber" /> is invalid, then all records must be written.</span></span></param>
        <param name="callback"><span data-ttu-id="57a69-342">플러시가 완료되면 호출되는 선택적 비동기 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-342">An optional asynchronous callback, to be called when the flush is complete.</span></span></param>
        <param name="state"><span data-ttu-id="57a69-343">이 특정 비동기 플러시 요청을 다른 요청과 구별하는 사용자 제공 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-343">A user-provided object that distinguishes this particular asynchronous flush request from other requests.</span></span></param>
        <summary><span data-ttu-id="57a69-344">시퀀스에서 이전에 예약된 공간을 사용하여 비동기 플러시 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-344">Begins an asynchronous flush operation, using space previously reserved in the sequence.</span></span> <span data-ttu-id="57a69-345">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-345">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="57a69-346">보류 중일 수 있는 비동기 플러시 작업을 나타내는 <see cref="T:System.IAsyncResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-346">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous flush operation, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a69-347">현재 메서드에서 반환된 <xref:System.IAsyncResult>를 <xref:System.IO.Log.FileRecordSequence.EndFlush%2A> 메서드에 전달하여 플러시를 완료하고 리소스를 적절하게 해제해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-347">You should pass the <xref:System.IAsyncResult> returned by the current method to the <xref:System.IO.Log.FileRecordSequence.EndFlush%2A> method to ensure that the flush completes and resources are freed appropriately.</span></span> <span data-ttu-id="57a69-348">비동기 플러시 중에 오류가 발생하는 경우 이 메서드에서 반환된 <xref:System.IO.Log.FileRecordSequence.EndFlush%2A>를 사용하여 <xref:System.IAsyncResult> 메서드를 호출하기 전에는 예외가 throw되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-348">If an error occurs during an asynchronous flush, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndFlush%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="57a69-349">이 메서드를 호출하면 <xref:System.IO.Log.FileRecordSequence>에 추가된 모든 레코드가 영속적으로 기록됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-349">Calling this method ensures that all records that have been appended to the <xref:System.IO.Log.FileRecordSequence> are durably written.</span></span>  
  
 <span data-ttu-id="57a69-350">레코드 시퀀스가 삭제되었거나 잘못된 인수를 전달하는 경우 이 작업 내에서 즉시 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-350">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="57a69-351">비동기 플러시 요청 중에 발생한 오류(예: I/O 요청 중의 디스크 오류)로 인해 <xref:System.IO.Log.FileRecordSequence.EndFlush%2A> 메서드를 호출할 때 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-351">Errors that occurred during an asynchronous flush request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.FileRecordSequence.EndFlush%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="57a69-352">하나 이상의 인수가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-352">One or more of the arguments is invalid.</span></span>  
  
 <span data-ttu-id="57a69-353"><paramref name="sequenceNumber" />이 이 시퀀스에 유효하지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-353"><paramref name="sequenceNumber" /> is not valid for this sequence.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="57a69-354"><paramref name="sequenceNumber" />이 이 시퀀스의 기준 시퀀스 번호와 마지막 시퀀스 번호 사이에 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-354"><paramref name="sequenceNumber" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="57a69-355">데이터를 플러시하는 동안 I/O 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-355">An I/O error occurred while flushing the data.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57a69-356">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-356">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="57a69-357">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-357">There is not enough memory to continue the execution of the program.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginReserveAndAppend">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="57a69-358">비동기 예약 및 추가 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-358">Begins an asynchronous reserve and append operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginReserveAndAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReserveAndAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, long[] reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginReserveAndAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginReserveAndAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, cli::array &lt;long&gt; ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="57a69-359">연결하여 레코드로 추가할 바이트 배열 세그먼트의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-359">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="57a69-360">사용자가 지정한 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-360">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="57a69-361">이전 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-361">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="57a69-362">데이터를 쓰는 방법을 지정하는 <see cref="T:System.IO.Log.RecordAppendOptions" />의 유효한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-362">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservationCollection"><span data-ttu-id="57a69-363">예약을 만들 예약 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-363">The reservation collection to make reservations in.</span></span></param>
        <param name="reservations"><span data-ttu-id="57a69-364">만들 예약(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-364">The reservations to make, in bytes.</span></span></param>
        <param name="callback"><span data-ttu-id="57a69-365">추가가 완료되면 호출되는 선택적 비동기 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-365">An optional asynchronous callback, to be called when the append is complete.</span></span></param>
        <param name="state"><span data-ttu-id="57a69-366">이 특정 비동기 추가 요청을 다른 요청과 구별하는 사용자 제공 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-366">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span></span></param>
        <summary><span data-ttu-id="57a69-367">비동기 예약 및 추가 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-367">Begins an asynchronous reserve and append operation.</span></span> <span data-ttu-id="57a69-368">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-368">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="57a69-369">보류 중일 수 있는 이 비동기 작업을 나타내는 <see cref="T:System.IAsyncResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-369">An <see cref="T:System.IAsyncResult" /> that represents this asynchronous operation, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a69-370">이 메서드에서 반환한 <xref:System.IAsyncResult>를 <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> 메서드에 전달하여 추가 작업이 완료되었고 리소스를 적절하게 해제할 수 있음을 확인해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-370">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method, to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="57a69-371">비동기 추가 중에 오류가 발생한 경우 이 메서드에서 반환된 <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A>를 사용하여 <xref:System.IAsyncResult> 메서드를 호출하기 전에는 예외가 throw되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-371">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="57a69-372">`data` 매개 변수에 포함된 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-372">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="57a69-373">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-373">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="57a69-374">지정된 예약은 레코드 추가 작업이 포함된 원자 단위 작업에서 제공된 예약 컬렉션에 추가됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-374">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="57a69-375">추가가 실패하면 공간이 예약되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-375">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="57a69-376">일반적으로 이 메서드는 레코드를 쓰기 전에 완료될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-376">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="57a69-377">레코드가 기록되도록 하려면 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 매개 변수를 사용하여 `recordAppendOptions` 플래그를 지정하거나, <xref:System.IO.Log.FileRecordSequence.Flush%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-377">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 <span data-ttu-id="57a69-378">레코드 시퀀스가 삭제되었거나 잘못된 인수를 전달하는 경우 이 작업 내에서 즉시 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-378">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="57a69-379">비동기 추가 요청 중에 발생한 오류(예: I/O 요청 중의 디스크 오류)는 <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> 메서드를 호출할 때 예외로 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-379">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57a69-380">하나 이상의 인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-380">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="57a69-381">하나 이상의 인수가 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-381">One or more of the arguments are out of range.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="57a69-382">이 레코드 시퀀스를 통해 <paramref name="reservations" />를 만들 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-382"><paramref name="reservations" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="57a69-383">읽기 전용 액세스 권한으로 레코드 시퀀스를 열었으므로 작업을 수행할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-383">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="57a69-384">예기치 못한 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-384">The request could not be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57a69-385">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-385">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="57a69-386">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-386">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="57a69-387">레코드 시퀀스가 꽉 찼습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-387">The record sequence is full.</span></span></exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException"><span data-ttu-id="57a69-388"><paramref name="data" />에서 <paramref name="reservations" />에 맞는 크기의 예약을 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-388">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReserveAndAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReserveAndAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, long[] reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginReserveAndAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginReserveAndAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, cli::array &lt;long&gt; ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="57a69-389">연결하여 레코드로 추가할 바이트 배열 세그먼트의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-389">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="57a69-390">사용자가 지정한 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-390">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="57a69-391">이전 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-391">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="57a69-392">데이터를 쓰는 방법을 지정하는 <see cref="T:System.IO.Log.RecordAppendOptions" />의 유효한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-392">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservationCollection"><span data-ttu-id="57a69-393">예약을 만들 예약 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-393">The reservation collection to make reservations in.</span></span></param>
        <param name="reservations"><span data-ttu-id="57a69-394">만들 예약(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-394">The reservations to make, in bytes.</span></span></param>
        <param name="callback"><span data-ttu-id="57a69-395">추가가 완료되면 호출되는 선택적 비동기 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-395">An optional asynchronous callback, to be called when the append is complete.</span></span></param>
        <param name="state"><span data-ttu-id="57a69-396">이 특정 비동기 추가 요청을 다른 요청과 구별하는 사용자 제공 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-396">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span></span></param>
        <summary><span data-ttu-id="57a69-397">비동기 예약 및 추가 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-397">Begins an asynchronous reserve and append operation.</span></span> <span data-ttu-id="57a69-398">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-398">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="57a69-399">보류 중일 수 있는 이 비동기 작업을 나타내는 <see cref="T:System.IAsyncResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-399">An <see cref="T:System.IAsyncResult" /> that represents this asynchronous operation, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a69-400">이 메서드에서 반환한 <xref:System.IAsyncResult>를 <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> 메서드에 전달하여 추가 작업이 완료되었고 리소스를 적절하게 해제할 수 있음을 확인해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-400">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method, to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="57a69-401">비동기 추가 중에 오류가 발생한 경우 이 메서드에서 반환된 <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A>를 사용하여 <xref:System.IAsyncResult> 메서드를 호출하기 전에는 예외가 throw되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-401">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="57a69-402">`data` 매개 변수에 포함된 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-402">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="57a69-403">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-403">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="57a69-404">지정된 예약은 레코드 추가 작업이 포함된 원자 단위 작업에서 제공된 예약 컬렉션에 추가됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-404">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="57a69-405">추가가 실패하면 공간이 예약되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-405">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="57a69-406">일반적으로 이 메서드는 레코드를 쓰기 전에 완료될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-406">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="57a69-407">레코드가 기록되도록 하려면 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 매개 변수를 사용하여 `recordAppendOptions` 플래그를 지정하거나, <xref:System.IO.Log.FileRecordSequence.Flush%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-407">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 <span data-ttu-id="57a69-408">레코드 시퀀스가 삭제되었거나 잘못된 인수를 전달하는 경우 이 작업 내에서 즉시 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-408">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="57a69-409">비동기 추가 요청 중에 발생한 오류(예: I/O 요청 중의 디스크 오류)는 <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> 메서드를 호출할 때 예외로 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-409">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57a69-410">하나 이상의 인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-410">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="57a69-411">하나 이상의 인수가 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-411">One or more of the arguments are out of range.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="57a69-412">이 레코드 시퀀스를 통해 <paramref name="reservations" />를 만들 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-412"><paramref name="reservations" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="57a69-413">읽기 전용 액세스 권한으로 레코드 시퀀스를 열었으므로 작업을 수행할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-413">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="57a69-414">예기치 못한 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-414">The request could not be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57a69-415">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-415">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="57a69-416">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-416">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="57a69-417">레코드 시퀀스가 꽉 찼습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-417">The record sequence is full.</span></span></exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException"><span data-ttu-id="57a69-418"><paramref name="data" />에서 <paramref name="reservations" />에 맞는 크기의 예약을 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-418">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginWriteRestartArea">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="57a69-419">비동기 재시작 영역 쓰기 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-419">Begins an asynchronous restart area write operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginWriteRestartArea">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWriteRestartArea (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum, System.IO.Log.ReservationCollection reservation, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum, class System.IO.Log.ReservationCollection reservation, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWriteRestartArea (data As ArraySegment(Of Byte), newBaseSeqNum As SequenceNumber, reservation As ReservationCollection, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginWriteRestartArea(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber newBaseSeqNum, System::IO::Log::ReservationCollection ^ reservation, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservation" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="57a69-420">연결하여 레코드로 추가할 바이트 배열 세그먼트의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-420">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="newBaseSeqNum"><span data-ttu-id="57a69-421">새 기준 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-421">The new base sequence number.</span></span> <span data-ttu-id="57a69-422">지정된 시퀀스 번호는 현재 기준 시퀀스 번호보다 크거나 같아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-422">The specified sequence number must be greater than or equal to the current base sequence number.</span></span></param>
        <param name="reservation"><span data-ttu-id="57a69-423">이 재시작 영역에 사용해야 하는 예약이 포함된 <see cref="T:System.IO.Log.ReservationCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-423">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span></span></param>
        <param name="callback"><span data-ttu-id="57a69-424">재시작 영역 쓰기가 완료되면 호출되는 선택적 비동기 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-424">An optional asynchronous callback, to be called when the restart area write is complete.</span></span></param>
        <param name="state"><span data-ttu-id="57a69-425">이 특정 비동기 재시작 영역 쓰기 요청을 다른 요청과 구별하는 사용자 제공 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-425">A user-provided object that distinguishes this particular asynchronous restart area write request from other requests.</span></span></param>
        <summary><span data-ttu-id="57a69-426">시퀀스에서 이전에 예약된 공간을 사용하여 비동기 재시작 영역 쓰기 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-426">Begins an asynchronous restart area write operation, using space previously reserved in the sequence.</span></span> <span data-ttu-id="57a69-427">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-427">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="57a69-428">보류 중일 수 있는 비동기 재시작 영역 쓰기 작업을 나타내는 <see cref="T:System.IAsyncResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-428">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous restart area write operation, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a69-429">이 메서드에서 반환된 <xref:System.IAsyncResult>를 <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> 메서드에 전달하여 재시작 영역 쓰기 작업을 완료하고 리소스를 적절하게 해제할 수 있도록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-429">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> method, to assure that the restart area write operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="57a69-430">비동기 재시작 영역 쓰기 작업 중에 오류가 발생한 경우 이 메서드에서 반환된 <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A>를 사용하여 <xref:System.IAsyncResult> 메서드를 호출하기 전에는 예외가 throw되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-430">If an error has occurred during an asynchronous restart area write operation, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="57a69-431">`data` 매개 변수에 포함된 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-431">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="57a69-432">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-432">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="57a69-433">작업이 성공적으로 완료되면 기준 세그먼트 번호가 업데이트된 것입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-433">When the operation successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="57a69-434">새 기준 시퀀스 번호보다 작은 시퀀스 번호를 가진 모든 로그 레코드에 액세스할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-434">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="57a69-435"><xref:System.IO.Log.ReservationCollection>을 지정하는 경우 쓴 재시작 영역은 컬렉션에 포함된 예약을 사용하여 이전에 예약된 공간을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-435">If a <xref:System.IO.Log.ReservationCollection> is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="57a69-436">메서드가 성공하면 데이터가 포함될 수 있는 가장 작은 예약을 사용하고 해당 예약이 컬렉션에서 제거됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-436">If the method succeeds, it will consume the smallest reservation that can hold the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="57a69-437">레코드 시퀀스가 삭제되었거나 잘못된 인수를 전달하는 경우 이 작업 내에서 즉시 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-437">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="57a69-438">비동기 추가 요청 중에 발생한 오류(예: I/O 요청 중의 디스크 오류)는 <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> 메서드를 호출할 때 예외로 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-438">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57a69-439">하나 이상의 인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-439">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="57a69-440"><paramref name="newBaseSeqNum" />이 이 시퀀스의 기준 시퀀스 번호와 마지막 시퀀스 번호 사이에 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-440"><paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span></span>  
  
 <span data-ttu-id="57a69-441">또는</span><span class="sxs-lookup"><span data-stu-id="57a69-441">-or-</span></span>  
  
 <span data-ttu-id="57a69-442">활성 로그의 기존 또는 새 아카이브 테일이나 베이스가 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-442">A new or existing archive tail or base of the active log is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="57a69-443">이 레코드 시퀀스를 통해 <paramref name="reservations" />를 만들 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-443"><paramref name="reservations" /> was not created by this record sequence.</span></span>  
  
 <span data-ttu-id="57a69-444">또는</span><span class="sxs-lookup"><span data-stu-id="57a69-444">-or-</span></span>  
  
 <span data-ttu-id="57a69-445"><paramref name="newBaseSeqNum" />이 이 시퀀스에 유효하지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-445"><paramref name="newBaseSeqNum" /> is not valid for this sequence.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="57a69-446">읽기 전용 액세스 권한으로 레코드 시퀀스를 열었으므로 작업을 수행할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-446">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="57a69-447">예기치 않은 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-447">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57a69-448">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-448">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="57a69-449">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-449">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="57a69-450">레코드 시퀀스가 꽉 찼습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-450">The record sequence is full.</span></span></exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException"><span data-ttu-id="57a69-451"><paramref name="data" />에서 <paramref name="reservations" />에 맞는 크기의 예약을 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-451">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWriteRestartArea">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum, System.IO.Log.ReservationCollection reservation, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum, class System.IO.Log.ReservationCollection reservation, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWriteRestartArea (data As IList(Of ArraySegment(Of Byte)), newBaseSeqNum As SequenceNumber, reservation As ReservationCollection, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginWriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber newBaseSeqNum, System::IO::Log::ReservationCollection ^ reservation, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservation" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="57a69-452">연결하여 레코드로 추가할 바이트 배열 세그먼트의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-452">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="newBaseSeqNum"><span data-ttu-id="57a69-453">새 기준 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-453">The new base sequence number.</span></span> <span data-ttu-id="57a69-454">지정된 시퀀스 번호는 현재 기준 시퀀스 번호보다 크거나 같아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-454">The specified sequence number must be greater than or equal to the current base sequence number.</span></span></param>
        <param name="reservation"><span data-ttu-id="57a69-455">이 재시작 영역에 사용해야 하는 예약이 포함된 <see cref="T:System.IO.Log.ReservationCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-455">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span></span></param>
        <param name="callback"><span data-ttu-id="57a69-456">재시작 영역 쓰기가 완료되면 호출되는 선택적 비동기 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-456">An optional asynchronous callback, to be called when the restart area write is complete.</span></span></param>
        <param name="state"><span data-ttu-id="57a69-457">이 특정 비동기 재시작 영역 쓰기 요청을 다른 요청과 구별하는 사용자 제공 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-457">A user-provided object that distinguishes this particular asynchronous restart area write request from other requests.</span></span></param>
        <summary><span data-ttu-id="57a69-458">시퀀스에서 이전에 예약된 공간을 사용하여 비동기 재시작 영역 쓰기 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-458">Begins an asynchronous restart area write operation, using space previously reserved in the sequence.</span></span> <span data-ttu-id="57a69-459">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-459">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="57a69-460">보류 중일 수 있는 비동기 재시작 영역 쓰기 작업을 나타내는 <see cref="T:System.IAsyncResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-460">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous restart area write operation, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a69-461">이 메서드에서 반환된 <xref:System.IAsyncResult>를 <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> 메서드에 전달하여 재시작 영역 쓰기 작업을 완료하고 리소스를 적절하게 해제할 수 있도록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-461">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> method, to assure that the restart area write operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="57a69-462">비동기 재시작 영역 쓰기 작업 중에 오류가 발생한 경우 이 메서드에서 반환된 <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A>를 사용하여 <xref:System.IAsyncResult> 메서드를 호출하기 전에는 예외가 throw되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-462">If an error has occurred during an asynchronous restart area write operation, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="57a69-463">`data` 매개 변수에 포함된 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-463">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="57a69-464">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-464">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="57a69-465">작업이 성공적으로 완료되면 기준 세그먼트 번호가 업데이트된 것입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-465">When the operation successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="57a69-466">새 기준 시퀀스 번호보다 작은 시퀀스 번호를 가진 모든 로그 레코드에 액세스할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-466">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="57a69-467"><xref:System.IO.Log.ReservationCollection>을 지정하는 경우 쓴 재시작 영역은 컬렉션에 포함된 예약을 사용하여 이전에 예약된 공간을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-467">If a <xref:System.IO.Log.ReservationCollection> is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="57a69-468">메서드가 성공하면 데이터가 포함될 수 있는 가장 작은 예약을 사용하고 해당 예약이 컬렉션에서 제거됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-468">If the method succeeds, it will consume the smallest reservation that can hold the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="57a69-469">레코드 시퀀스가 삭제되었거나 잘못된 인수를 전달하는 경우 이 작업 내에서 즉시 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-469">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="57a69-470">비동기 추가 요청 중에 발생한 오류(예: I/O 요청 중의 디스크 오류)는 <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> 메서드를 호출할 때 예외로 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-470">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57a69-471">하나 이상의 인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-471">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="57a69-472"><paramref name="newBaseSeqNum" />이 이 시퀀스의 기준 시퀀스 번호와 마지막 시퀀스 번호 사이에 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-472"><paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span></span>  
  
 <span data-ttu-id="57a69-473">또는</span><span class="sxs-lookup"><span data-stu-id="57a69-473">-or-</span></span>  
  
 <span data-ttu-id="57a69-474">활성 로그의 기존 또는 새 아카이브 테일이나 베이스가 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-474">A new or existing archive tail or base of the active log is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="57a69-475">이 레코드 시퀀스를 통해 <paramref name="reservations" />를 만들 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-475"><paramref name="reservations" /> was not created by this record sequence.</span></span>  
  
 <span data-ttu-id="57a69-476">또는</span><span class="sxs-lookup"><span data-stu-id="57a69-476">-or-</span></span>  
  
 <span data-ttu-id="57a69-477"><paramref name="newBaseSeqNum" />이 이 시퀀스에 유효하지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-477"><paramref name="newBaseSeqNum" /> is not valid for this sequence.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="57a69-478">읽기 전용 액세스 권한으로 레코드 시퀀스를 열었으므로 작업을 수행할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-478">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="57a69-479">예기치 않은 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-479">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57a69-480">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-480">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="57a69-481">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-481">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="57a69-482">레코드 시퀀스가 꽉 찼습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-482">The record sequence is full.</span></span></exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException"><span data-ttu-id="57a69-483"><paramref name="data" />에서 <paramref name="reservations" />에 맞는 크기의 예약을 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-483">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateReservationCollection">
      <MemberSignature Language="C#" Value="public System.IO.Log.ReservationCollection CreateReservationCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Log.ReservationCollection CreateReservationCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.CreateReservationCollection" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateReservationCollection () As ReservationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::ReservationCollection ^ CreateReservationCollection();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.CreateReservationCollection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.ReservationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="57a69-484">새 <see cref="T:System.IO.Log.ReservationCollection" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-484">Creates a new <see cref="T:System.IO.Log.ReservationCollection" />.</span></span> <span data-ttu-id="57a69-485">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-485">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="57a69-486">새로 만든 <see cref="T:System.IO.Log.ReservationCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-486">The newly created <see cref="T:System.IO.Log.ReservationCollection" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="57a69-487">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-487">There is not enough memory to continue the execution of the program.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="57a69-488">개체에서 사용하는 관리되지 않는 리소스를 즉시 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-488">Immediately releases the unmanaged resources used by an object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="57a69-489">데이터를 플러시하는 동안 I/O 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-489">An I/O error occurred while flushing the data.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57a69-490">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-490">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="57a69-491">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-491">There is not enough memory to continue the execution of the program.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndAppend (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndAppend(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.EndAppend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndAppend (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber EndAppend(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.EndAppend(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="57a69-492">처리 중인 비동기 I/O 요청에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-492">A reference to the outstanding asynchronous I/O request.</span></span></param>
        <summary><span data-ttu-id="57a69-493">비동기 추가 작업을 끝냅니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-493">Ends an asynchronous append operation.</span></span> <span data-ttu-id="57a69-494">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-494">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="57a69-495">추가된 로그 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-495">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a69-496">이 메서드는 I/O 작업이 완료될 때까지 차단됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-496">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="57a69-497">비동기 쓰기 요청 중에 발생하는 오류(예: I/O 요청 중의 디스크 오류)는 <xref:System.IO.Log.FileRecordSequence.EndAppend%2A>를 호출할 때 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-497">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> is called.</span></span>  
  
 <span data-ttu-id="57a69-498">이 메서드는 <xref:System.IAsyncResult> 메서드에서 반환된 <xref:System.IO.Log.FileRecordSequence.BeginAppend%2A>마다 정확히 한 번만 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-498">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.FileRecordSequence.BeginAppend%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="57a69-499"><paramref name="result" />이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-499"><paramref name="result" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="57a69-500">이 비동기 작업에 대해 <see langword="End" />가 이미 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-500"><see langword="End" /> has already been called for this asynchronous operation.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="57a69-501">예기치 않은 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-501">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57a69-502">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-502">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="57a69-503">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-503">There is not enough memory to continue the execution of the program.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndFlush">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndFlush (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndFlush(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.EndFlush(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndFlush (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber EndFlush(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.EndFlush(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="57a69-504">처리 중인 비동기 I/O 요청에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-504">A reference to the outstanding asynchronous I/O request.</span></span></param>
        <summary><span data-ttu-id="57a69-505">비동기 플러시 작업을 끝냅니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-505">Ends an asynchronous flush operation.</span></span> <span data-ttu-id="57a69-506">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-506">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="57a69-507">마지막으로 쓴 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-507">The sequence number of the last record written.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a69-508">이 메서드는 I/O 작업이 완료될 때까지 차단됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-508">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="57a69-509">비동기 플러시 요청 중에 발생하는 오류(예: I/O 요청 중의 디스크 오류)는 <xref:System.IO.Log.FileRecordSequence.EndFlush%2A>를 호출할 때 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-509">Errors that occur during an asynchronous flush request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.FileRecordSequence.EndFlush%2A> is called.</span></span>  
  
 <span data-ttu-id="57a69-510">이 메서드는 <xref:System.IAsyncResult> 메서드에서 반환된 <xref:System.IO.Log.FileRecordSequence.BeginFlush%2A>마다 정확히 한 번만 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-510">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.FileRecordSequence.BeginFlush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="57a69-511"><paramref name="result" />이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-511"><paramref name="result" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="57a69-512">이 비동기 작업에 대해 <see langword="End" />가 이미 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-512"><see langword="End" /> has already been called for this asynchronous operation.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="57a69-513">예기치 않은 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-513">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57a69-514">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-514">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="57a69-515">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-515">There is not enough memory to continue the execution of the program.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndReserveAndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndReserveAndAppend (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndReserveAndAppend(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.EndReserveAndAppend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReserveAndAppend (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber EndReserveAndAppend(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.EndReserveAndAppend(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="57a69-516">처리 중인 비동기 I/O 요청에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-516">A reference to the outstanding asynchronous I/O request.</span></span></param>
        <summary><span data-ttu-id="57a69-517">비동기 예약 및 추가 작업을 끝냅니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-517">Ends an asynchronous reserve and append operation.</span></span> <span data-ttu-id="57a69-518">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-518">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="57a69-519">추가된 로그 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-519">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a69-520">이 메서드는 I/O 작업이 완료될 때까지 차단됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-520">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="57a69-521">비동기 쓰기 요청 중에 발생하는 오류(예: I/O 요청 중의 디스크 오류)는 <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A>를 호출할 때 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-521">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> is called.</span></span>  
  
 <span data-ttu-id="57a69-522">이 메서드는 <xref:System.IAsyncResult> 메서드에서 반환된 <xref:System.IO.Log.FileRecordSequence.BeginReserveAndAppend%2A>마다 정확히 한 번만 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-522">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.FileRecordSequence.BeginReserveAndAppend%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="57a69-523"><paramref name="result" />이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-523"><paramref name="result" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="57a69-524">이 비동기 작업에 대해 <see langword="End" />가 이미 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-524"><see langword="End" /> has already been called for this asynchronous operation.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="57a69-525">예기치 않은 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-525">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57a69-526">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-526">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="57a69-527">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-527">There is not enough memory to continue the execution of the program.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndWriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndWriteRestartArea (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndWriteRestartArea(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.EndWriteRestartArea(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndWriteRestartArea (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber EndWriteRestartArea(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.EndWriteRestartArea(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="57a69-528">처리 중인 비동기 I/O 요청에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-528">A reference to the outstanding asynchronous I/O request.</span></span></param>
        <summary><span data-ttu-id="57a69-529">비동기 재시작 영역 쓰기 작업을 끝냅니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-529">Ends an asynchronous restart area write operation.</span></span> <span data-ttu-id="57a69-530">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-530">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="57a69-531">쓴 로그 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-531">The sequence number of the written log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a69-532">이 메서드는 I/O 작업이 완료될 때까지 차단됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-532">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="57a69-533">비동기 쓰기 요청 중에 발생하는 오류(예: I/O 요청 중의 디스크 오류)는 <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A>를 호출할 때 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-533">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> is called.</span></span>  
  
 <span data-ttu-id="57a69-534">이 메서드는 <xref:System.IAsyncResult> 메서드에서 반환된 <xref:System.IO.Log.FileRecordSequence.BeginWriteRestartArea%2A>마다 정확히 한 번만 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-534">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.FileRecordSequence.BeginWriteRestartArea%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="57a69-535"><paramref name="result" />이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-535"><paramref name="result" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="57a69-536">이 비동기 작업에 대해 <see langword="End" />가 이미 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-536"><see langword="End" /> has already been called for this asynchronous operation.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="57a69-537">예기치 않은 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-537">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57a69-538">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-538">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="57a69-539">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-539">There is not enough memory to continue the execution of the program.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Flush">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="57a69-540">추가된 레코드를 영속적으로 씁니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-540">Causes appended records to be durably written.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Function Flush () As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Flush();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Flush</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="57a69-541">추가된 모든 레코드를 썼는지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-541">Ensures that all appended records have been written.</span></span> <span data-ttu-id="57a69-542">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-542">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="57a69-543">마지막으로 쓴 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-543">The sequence number of the last record written.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a69-544">이 메서드를 호출하면 <xref:System.IO.Log.FileRecordSequence>에 추가된 모든 레코드가 영속적으로 기록됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-544">Calling this method ensures that all records that have been appended to the <xref:System.IO.Log.FileRecordSequence> have been durably written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="57a69-545">데이터를 플러시하는 동안 I/O 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-545">An I/O error occurred while flushing the data.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57a69-546">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-546">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="57a69-547">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-547">There is not enough memory to continue the execution of the program.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Flush (System.IO.Log.SequenceNumber sequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Flush(valuetype System.IO.Log.SequenceNumber sequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.Flush(System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Flush(System::IO::Log::SequenceNumber sequenceNumber);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Flush(System.IO.Log.SequenceNumber)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequenceNumber" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="sequenceNumber"><span data-ttu-id="57a69-548">써야 하는 최신 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-548">The sequence number of the latest record that must be written.</span></span> <span data-ttu-id="57a69-549">이 <see cref="T:System.IO.Log.SequenceNumber" />가 유효하지 않은 경우 모든 레코드를 써야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-549">If this <see cref="T:System.IO.Log.SequenceNumber" /> is invalid, then all records must be written.</span></span></param>
        <summary><span data-ttu-id="57a69-550">추가된 모든 레코드를 썼는지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-550">Ensures that all appended records have been written.</span></span> <span data-ttu-id="57a69-551">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-551">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="57a69-552">마지막으로 쓴 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-552">The sequence number of the last record written.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a69-553">이 메서드를 호출하면 지정된 시퀀스 번호 이하의 시퀀스 번호를 가진 모든 레코드가 영속적으로 기록됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-553">Calling this method ensures that all records with sequence numbers up to and including the specified sequence number have been durably written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="57a69-554"><paramref name="sequenceNumber" />이 이 시퀀스의 기준 시퀀스 번호와 마지막 시퀀스 번호 사이에 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-554"><paramref name="sequenceNumber" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="57a69-555"><paramref name="sequenceNumber" />이 이 시퀀스에 유효하지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-555"><paramref name="sequenceNumber" /> is not valid for this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="57a69-556">데이터를 플러시하는 동안 I/O 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-556">An I/O error occurred while flushing the data.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57a69-557">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-557">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="57a69-558">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-558">There is not enough memory to continue the execution of the program.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LastSequenceNumber">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber LastSequenceNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.SequenceNumber LastSequenceNumber" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRecordSequence.LastSequenceNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastSequenceNumber As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::SequenceNumber LastSequenceNumber { System::IO::Log::SequenceNumber get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.LastSequenceNumber</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57a69-559">마지막으로 추가된 레코드보다 큰 시퀀스 번호를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-559">Gets the sequence number which is greater than the last record appended.</span></span></summary>
        <value><span data-ttu-id="57a69-560">마지막으로 추가된 레코드보다 큰 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-560">A sequence number which is greater than the last record appended.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a69-561">이 속성에는 마지막으로 추가된 레코드의 시퀀스 번호보다 반드시 큰 시퀀스 번호가 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-561">This property contains a sequence number that is guaranteed to be larger than the sequence number of the last appended record.</span></span> <span data-ttu-id="57a69-562">유효한 시퀀스 번호는 <xref:System.IO.Log.FileRecordSequence.BaseSequenceNumber%2A>보다 크거나 같고 <xref:System.IO.Log.FileRecordSequence.LastSequenceNumber%2A>보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-562">Valid sequence numbers are greater than or equal to <xref:System.IO.Log.FileRecordSequence.BaseSequenceNumber%2A> and less than <xref:System.IO.Log.FileRecordSequence.LastSequenceNumber%2A>.</span></span> <span data-ttu-id="57a69-563">그 외의 다른 시퀀스 번호는 유효하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-563">All other sequence numbers are invalid.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57a69-564">시퀀스가 삭제된 후 속성에 액세스한 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-564">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MaximumRecordLength">
      <MemberSignature Language="C#" Value="public long MaximumRecordLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumRecordLength" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRecordSequence.MaximumRecordLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaximumRecordLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumRecordLength { long get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.MaximumRecordLength</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57a69-565">이 시퀀스에 추가하거나 읽을 수 있는 가장 큰 레코드의 크기(바이트)를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-565">Gets the size of the largest record that can be appended to or read from this sequence, in bytes.</span></span></summary>
        <value><span data-ttu-id="57a69-566">이 시퀀스에서 추가하거나 읽을 수 있는 가장 큰 레코드의 크기(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-566">The size of the largest record that can be appended to or read from this sequence, in bytes.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57a69-567">시퀀스가 삭제된 후 속성에 액세스한 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-567">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLogRecords">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt; ReadLogRecords (System.IO.Log.SequenceNumber start, System.IO.Log.LogRecordEnumeratorType logRecordEnum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Log.LogRecord&gt; ReadLogRecords(valuetype System.IO.Log.SequenceNumber start, valuetype System.IO.Log.LogRecordEnumeratorType logRecordEnum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.ReadLogRecords(System.IO.Log.SequenceNumber,System.IO.Log.LogRecordEnumeratorType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadLogRecords (start As SequenceNumber, logRecordEnum As LogRecordEnumeratorType) As IEnumerable(Of LogRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::IO::Log::LogRecord ^&gt; ^ ReadLogRecords(System::IO::Log::SequenceNumber start, System::IO::Log::LogRecordEnumeratorType logRecordEnum);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.ReadLogRecords(System.IO.Log.SequenceNumber,System.IO.Log.LogRecordEnumeratorType)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="logRecordEnum" Type="System.IO.Log.LogRecordEnumeratorType" />
      </Parameters>
      <Docs>
        <param name="start"><span data-ttu-id="57a69-568">읽기가 시작되는 첫 번째 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-568">The sequence number of the first record where the reading starts.</span></span></param>
        <param name="logRecordEnum"><span data-ttu-id="57a69-569"><see cref="T:System.IO.Log.LogRecordEnumeratorType" />에서 레코드를 읽는 방식(즉 앞으로 또는 뒤로)을 지정하는 유효한 <see cref="T:System.IO.Log.LogRecordSequence" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-569">A valid <see cref="T:System.IO.Log.LogRecordEnumeratorType" /> value that specifies the manner (that is, forward or backward) in which records should be read from a <see cref="T:System.IO.Log.LogRecordSequence" />.</span></span></param>
        <summary><span data-ttu-id="57a69-570">시퀀스에 있는 레코드의 열거 가능한 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-570">Returns an enumerable collection of records in the sequence.</span></span> <span data-ttu-id="57a69-571">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-571">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="57a69-572">시퀀스에 있는 레코드의 열거 가능한 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-572">An enumerable collection of records in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a69-573">이 메서드는 시퀀스에 있는 레코드의 열거 가능한 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-573">This method returns an enumerable collection of records in the sequence.</span></span> <span data-ttu-id="57a69-574">열거되는 레코드의 순서는 `logRecordEnum` 매개 변수의 값에 따라 결정됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-574">The order of the enumerated records depends on the value of the `logRecordEnum` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57a69-575">다음 예제에서는 이 메서드를 사용하여 로그 시퀀스에서 레코드를 읽을 수 있는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-575">The following example shows how you can use this method to read the records in a log sequence.</span></span>  
  
 [!code-csharp[IRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/irecordsequence/cs/readrecord.cs#2)]
 [!code-vb[IRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/irecordsequence/vb/readrecord.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="57a69-576">하나 이상의 인수가 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-576">One or more of the arguments are out of range.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="57a69-577">쓰기 전용 액세스 권한으로 레코드 시퀀스를 열었으므로 작업을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-577">The operation cannot be performed because the record sequence was opened with write-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="57a69-578">레코드 시퀀스가 손상된 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-578">The record sequence is corrupted.</span></span>  
  
 <span data-ttu-id="57a69-579">또는</span><span class="sxs-lookup"><span data-stu-id="57a69-579">-or-</span></span>  
  
 <span data-ttu-id="57a69-580">호환되지 않는 버전의 레코드 시퀀스를 사용하여 레코드를 쓴 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-580">The record was written with an incompatible version of the record sequence.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="57a69-581">열거형이 끝난 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-581">The enumeration has ended.</span></span>  
  
 <span data-ttu-id="57a69-582">또는</span><span class="sxs-lookup"><span data-stu-id="57a69-582">-or-</span></span>  
  
 <span data-ttu-id="57a69-583">열거형이 시작되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-583">The enumeration has not been started.</span></span> <span data-ttu-id="57a69-584"><see cref="M:System.Collections.IEnumerator.MoveNext" />를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-584">A call to <see cref="M:System.Collections.IEnumerator.MoveNext" /> must be made.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57a69-585">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-585">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="57a69-586">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-586">There is not enough memory to continue the execution of the program.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadRestartAreas">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt; ReadRestartAreas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Log.LogRecord&gt; ReadRestartAreas() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.ReadRestartAreas" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadRestartAreas () As IEnumerable(Of LogRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::IO::Log::LogRecord ^&gt; ^ ReadRestartAreas();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.ReadRestartAreas</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="57a69-587">시퀀스에 있는 재시작 영역의 열거 가능한 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-587">Returns an enumerable collection of the restart areas in the sequence.</span></span> <span data-ttu-id="57a69-588">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-588">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="57a69-589">시퀀스에 있는 재시작 영역의 열거 가능한 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-589">An enumerable collection of the restart areas in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a69-590">재시작 영역은 시퀀스 번호의 역순(가장 큰 시퀀스 번호부터 가장 작은 시퀀스 번호까지)으로 열거됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-590">The restart areas are enumerated in reverse sequence number order, that is, from the highest sequence number to the lowest sequence number.</span></span> <span data-ttu-id="57a69-591">마지막 시퀀스 번호와 기준 시퀀스 번호 사이의 시퀀스 번호를 가진 재시작 영역만 열거됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-591">Only restart areas with sequence numbers between the last sequence number and the base sequence number are enumerated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="57a69-592">쓰기 전용 액세스 권한으로 레코드 시퀀스를 열었으므로 작업을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-592">The operation cannot be performed because the record sequence was opened with write-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="57a69-593">레코드 시퀀스가 손상된 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-593">The record sequence is corrupted.</span></span>  
  
 <span data-ttu-id="57a69-594">또는</span><span class="sxs-lookup"><span data-stu-id="57a69-594">-or-</span></span>  
  
 <span data-ttu-id="57a69-595">호환되지 않는 버전의 레코드 시퀀스를 사용하여 레코드를 쓴 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-595">The record was written with an incompatible version of the record sequence.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="57a69-596">열거형이 끝난 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-596">The enumeration has ended.</span></span>  
  
 <span data-ttu-id="57a69-597">또는</span><span class="sxs-lookup"><span data-stu-id="57a69-597">-or-</span></span>  
  
 <span data-ttu-id="57a69-598">열거형이 시작되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-598">The enumeration has not been started.</span></span> <span data-ttu-id="57a69-599"><see cref="M:System.Collections.IEnumerator.MoveNext" />를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-599">A call to <see cref="M:System.Collections.IEnumerator.MoveNext" /> must be made.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57a69-600">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-600">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="57a69-601">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-601">There is not enough memory to continue the execution of the program.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReserveAndAppend">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="57a69-602">자동으로 단일 예약을 만들고 시퀀스에 레코드를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-602">Automatically makes a single reservation and appends a record to the sequence.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReserveAndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber ReserveAndAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, params long[] reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber ReserveAndAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber ReserveAndAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, ... cli::array &lt;long&gt; ^ reservations);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="57a69-603">연결하여 레코드로 추가할 바이트 배열 세그먼트의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-603">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="57a69-604">사용자가 지정한 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-604">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="57a69-605">이전 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-605">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="57a69-606">데이터를 쓰는 방법을 지정하는 <see cref="T:System.IO.Log.RecordAppendOptions" />의 유효한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-606">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservationCollection"><span data-ttu-id="57a69-607">예약을 만들 컬렉션이 포함된 <see cref="T:System.IO.Log.ReservationCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-607">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the collection to make reservations in.</span></span></param>
        <param name="reservations"><span data-ttu-id="57a69-608">만들 예약(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-608">The reservations to make, in bytes.</span></span></param>
        <summary><span data-ttu-id="57a69-609">자동으로 단일 예약을 만들고 시퀀스에 레코드를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-609">Automatically makes a single reservation and appends a record to the sequence.</span></span> <span data-ttu-id="57a69-610">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-610">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="57a69-611">추가된 로그 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-611">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a69-612">`data` 매개 변수에 포함된 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-612">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="57a69-613">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-613">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="57a69-614">지정된 예약은 레코드 추가 작업이 포함된 원자 단위 작업에서 제공된 예약 컬렉션에 추가됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-614">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="57a69-615">추가가 실패하면 공간이 예약되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-615">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="57a69-616">일반적으로 이 메서드는 레코드를 쓰기 전에 완료될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-616">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="57a69-617">레코드가 기록되도록 하려면 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 매개 변수를 사용하여 `recordAppendOptions` 플래그를 지정하거나, <xref:System.IO.Log.FileRecordSequence.Flush%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-617">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57a69-618">하나 이상의 인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-618">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="57a69-619">하나 이상의 인수가 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-619">One or more of the arguments are out of range.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="57a69-620">이 레코드 시퀀스에서 <paramref name="reservations" />를 만들 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-620"><paramref name="reservations" /> was not created by this record sequence..</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="57a69-621">읽기 전용 액세스 권한으로 레코드 시퀀스를 열었으므로 작업을 수행할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-621">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="57a69-622">예기치 못한 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-622">The request could not be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57a69-623">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-623">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="57a69-624">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-624">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="57a69-625">레코드 시퀀스가 꽉 찼습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-625">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReserveAndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber ReserveAndAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, params long[] reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber ReserveAndAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber ReserveAndAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, ... cli::array &lt;long&gt; ^ reservations);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="57a69-626">연결하여 레코드로 추가할 바이트 배열 세그먼트의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-626">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="57a69-627">사용자가 지정한 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-627">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="57a69-628">이전 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-628">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="57a69-629">데이터를 쓰는 방법을 지정하는 <see cref="T:System.IO.Log.RecordAppendOptions" />의 유효한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-629">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservationCollection"><span data-ttu-id="57a69-630">예약을 만들 예약 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-630">The reservation collection to make reservations in.</span></span></param>
        <param name="reservations"><span data-ttu-id="57a69-631">만들 예약(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-631">The reservations to make, in bytes.</span></span></param>
        <summary><span data-ttu-id="57a69-632">자동으로 단일 예약을 만들고 시퀀스에 레코드를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-632">Automatically makes a single reservation and appends a record to the sequence.</span></span> <span data-ttu-id="57a69-633">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-633">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="57a69-634">추가된 로그 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-634">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a69-635">`data` 매개 변수에 포함된 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-635">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="57a69-636">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-636">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="57a69-637">지정된 예약은 레코드 추가 작업이 포함된 원자 단위 작업에서 제공된 예약 컬렉션에 추가됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-637">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="57a69-638">추가가 실패하면 공간이 예약되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-638">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="57a69-639">일반적으로 이 메서드는 레코드를 쓰기 전에 완료될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-639">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="57a69-640">레코드가 기록되도록 하려면 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 매개 변수를 사용하여 `recordAppendOptions` 플래그를 지정하거나, <xref:System.IO.Log.FileRecordSequence.Flush%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-640">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57a69-641">하나 이상의 인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-641">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="57a69-642">하나 이상의 인수가 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-642">One or more of the arguments are out of range.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="57a69-643">이 레코드 시퀀스에서 <paramref name="reservations" />를 만들 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-643"><paramref name="reservations" /> was not created by this record sequence..</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="57a69-644">읽기 전용 액세스 권한으로 레코드 시퀀스를 열었으므로 작업을 수행할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-644">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="57a69-645">예기치 못한 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-645">The request could not be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57a69-646">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-646">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="57a69-647">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-647">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="57a69-648">레코드 시퀀스가 꽉 찼습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-648">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReservedBytes">
      <MemberSignature Language="C#" Value="public long ReservedBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ReservedBytes" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRecordSequence.ReservedBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReservedBytes As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ReservedBytes { long get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.ReservedBytes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57a69-649">예약된 총 바이트 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-649">Gets the total number of bytes that have been reserved.</span></span></summary>
        <value><span data-ttu-id="57a69-650">이 레코드 시퀀스에서 만들어진 모든 예약의 총 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-650">The total size of all reservations made in this record sequence.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57a69-651">시퀀스가 삭제된 후 속성에 액세스한 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-651">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RestartSequenceNumber">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber RestartSequenceNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.SequenceNumber RestartSequenceNumber" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRecordSequence.RestartSequenceNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RestartSequenceNumber As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::SequenceNumber RestartSequenceNumber { System::IO::Log::SequenceNumber get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.RestartSequenceNumber</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57a69-652">가장 최근에 쓴 재시작 영역의 시퀀스 번호를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-652">Gets the sequence number of the most recently written restart area.</span></span></summary>
        <value><span data-ttu-id="57a69-653">가장 최근에 기록된 재시작 영역의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-653">The sequence number of the most recently written restart area.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a69-654">재시작 영역은 클라이언트의 마지막 검사점 작업을 포함하는 정보를 임시로 저장하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-654">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="57a69-655">CLFS(Common Log File System)에서는 적어도 하나의 유효한 영역을 항상 사용할 수 있도록 하기 위해 두 개의 재시작 영역을 유지 관리합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-655">The Common Log File System (CLFS) maintains two restart areas to guarantee that at least one valid area is always available.</span></span> <span data-ttu-id="57a69-656">복구가 필요한 경우 CLFS에서는 재시작 영역을 읽고 마지막 검사점 작업에서 데이터를 모두 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-656">When a recovery is necessary, the CLFS reads its restart area and all the data from the last checkpoint operation.</span></span> <span data-ttu-id="57a69-657">이 데이터는 트랜잭션 테이블, 더티 페이지 테이블 및 열린 파일 테이블을 복구 프로세스에서 사용할 수 있도록 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-657">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57a69-658">시퀀스가 삭제된 후 속성에 액세스한 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-658">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RetryAppend">
      <MemberSignature Language="C#" Value="public bool RetryAppend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RetryAppend" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRecordSequence.RetryAppend" />
      <MemberSignature Language="VB.NET" Value="Public Property RetryAppend As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RetryAppend { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.RetryAppend</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57a69-659">로그가 꽉 차는 경우 추가 작업이 자동으로 다시 시도되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-659">Gets or sets a value indicating whether or not appends are automatically retried if the log is full.</span></span></summary>
        <value>
          <span data-ttu-id="57a69-660">로그가 꽉 차는 경우 추가 작업이 자동으로 다시 시도되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-660"><see langword="true" /> if appends are automatically retried if the log is full; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="57a69-661">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-661">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a69-662">이 속성의 값이 `true`이고 시퀀스에 충분한 공간이 없기 때문에 <xref:System.IO.Log.FileRecordSequence.Append%2A> 호출이 실패하면 레코드 시퀀스에서 공간을 확보하려고 시도하고 추가 작업을 다시 시도합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-662">If the value of this property is `true`, and an <xref:System.IO.Log.FileRecordSequence.Append%2A> call fails because there is not enough space in the sequence, the record sequence will try to free space and retry the append.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57a69-663">시퀀스가 삭제된 후 속성에 액세스한 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-663">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TailPinned">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IO.Log.TailPinnedEventArgs&gt; TailPinned;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IO.Log.TailPinnedEventArgs&gt; TailPinned" />
      <MemberSignature Language="DocId" Value="E:System.IO.Log.FileRecordSequence.TailPinned" />
      <MemberSignature Language="VB.NET" Value="Public Event TailPinned As EventHandler(Of TailPinnedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler&lt;System::IO::Log::TailPinnedEventArgs ^&gt; ^ TailPinned;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.IO.Log.IRecordSequence.TailPinned</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IO.Log.TailPinnedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57a69-664">레코드 시퀀스에서 테일이 앞으로 이동해야 한다고 결정하면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-664">Occurs when the record sequence determines that the tail must be moved forward.</span></span> <span data-ttu-id="57a69-665">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-665">This method cannot be inherited.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a69-666">레코드 시퀀스에 공간이 부족하면 이 이벤트를 발생시킬 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-666">You can fire this event when the record sequence has run out of space.</span></span> <span data-ttu-id="57a69-667">이 이벤트가 발생하면 공간을 확보하기 위해 시퀀스의 테일(즉, 기준 시퀀스 번호)이 앞으로 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-667">When this event is fired, the tail of the sequence (that is, the base sequence number) is moved forward to free up space.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteRestartArea">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="57a69-668"><see cref="T:System.IO.Log.FileRecordSequence" />에 재시작 영역을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-668">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a69-669">재시작 영역에는 클라이언트의 마지막 검사점 작업이 포함된 정보를 임시로 저장할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-669">A restart area can be used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="57a69-670">복구가 필요할 경우 재시작 영역을 읽고 마지막 검사점 작업에서 모든 데이터를 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-670">When a recovery is necessary, you can read a restart area and retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="57a69-671">이 데이터는 트랜잭션 테이블, 더티 페이지 테이블 및 열린 파일 테이블을 복구 프로세스에서 사용할 수 있도록 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-671">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="57a69-672">재시작 영역은 <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> 메서드를 사용하여 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-672">A restart area can be read using the <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (ArraySegment&lt;byte&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As ArraySegment(Of Byte)) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(ArraySegment&lt;System::Byte&gt; data);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="57a69-673">연결하여 레코드로 추가할 바이트 배열 세그먼트의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-673">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <summary><span data-ttu-id="57a69-674"><see cref="T:System.IO.Log.FileRecordSequence" />에 재시작 영역을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-674">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span></span> <span data-ttu-id="57a69-675">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-675">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="57a69-676">쓴 재시작 영역의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-676">The sequence number of the written restart area.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a69-677">재시작 영역에는 클라이언트의 마지막 검사점 작업이 포함된 정보를 임시로 저장할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-677">A restart area can be used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="57a69-678">복구가 필요할 경우 재시작 영역을 읽고 마지막 검사점 작업에서 모든 데이터를 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-678">When a recovery is necessary, you can read a restart area and retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="57a69-679">이 데이터는 트랜잭션 테이블, 더티 페이지 테이블 및 열린 파일 테이블을 복구 프로세스에서 사용할 수 있도록 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-679">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="57a69-680">재시작 영역은 <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> 메서드를 사용하여 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-680">A restart area can be read using the <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="57a69-681">바이트 배열 세그먼트의 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-681">The data in the byte array segments will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="57a69-682">재시작 영역을 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-682">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57a69-683">하나 이상의 인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-683">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="57a69-684">읽기 전용 액세스 권한으로 레코드 시퀀스를 열었으므로 작업을 수행할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-684">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="57a69-685">예기치 않은 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-685">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57a69-686">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-686">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="57a69-687">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-687">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="57a69-688">레코드 시퀀스가 꽉 찼습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-688">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As IList(Of ArraySegment(Of Byte))) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="57a69-689">연결하여 레코드로 추가할 바이트 배열 세그먼트의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-689">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <summary><span data-ttu-id="57a69-690"><see cref="T:System.IO.Log.FileRecordSequence" />에 재시작 영역을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-690">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span></span> <span data-ttu-id="57a69-691">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-691">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="57a69-692">쓴 재시작 영역의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-692">The sequence number of the written restart area.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a69-693">재시작 영역에는 클라이언트의 마지막 검사점 작업이 포함된 정보를 임시로 저장할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-693">A restart area can be used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="57a69-694">복구가 필요할 경우 재시작 영역을 읽고 마지막 검사점 작업에서 모든 데이터를 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-694">When a recovery is necessary, you can read a restart area and retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="57a69-695">이 데이터는 트랜잭션 테이블, 더티 페이지 테이블 및 열린 파일 테이블을 복구 프로세스에서 사용할 수 있도록 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-695">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="57a69-696">재시작 영역은 <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> 메서드를 사용하여 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-696">A restart area can be read using the <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="57a69-697">바이트 배열 세그먼트의 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-697">The data in the byte array segments will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="57a69-698">재시작 영역을 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-698">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57a69-699">하나 이상의 인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-699">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="57a69-700">읽기 전용 액세스 권한으로 레코드 시퀀스를 열었으므로 작업을 수행할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-700">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="57a69-701">예기치 않은 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-701">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57a69-702">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-702">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="57a69-703">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-703">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="57a69-704">레코드 시퀀스가 꽉 찼습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-704">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As ArraySegment(Of Byte), newBaseSeqNum As SequenceNumber) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber newBaseSeqNum);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="57a69-705">연결하여 레코드로 추가할 바이트 배열 세그먼트의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-705">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="newBaseSeqNum"><span data-ttu-id="57a69-706">새 기준 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-706">The new base sequence number.</span></span> <span data-ttu-id="57a69-707">지정된 시퀀스 번호는 현재 기준 시퀀스 번호보다 크거나 같아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-707">The specified sequence number must be greater than or equal to the current base sequence number.</span></span></param>
        <summary><span data-ttu-id="57a69-708"><see cref="T:System.IO.Log.FileRecordSequence" />에 재시작 영역을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-708">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span></span> <span data-ttu-id="57a69-709">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-709">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="57a69-710">쓴 재시작 영역의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-710">The sequence number of the written restart area.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a69-711">재시작 영역에는 클라이언트의 마지막 검사점 작업이 포함된 정보를 임시로 저장할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-711">A restart area can be used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="57a69-712">복구가 필요할 경우 재시작 영역을 읽고 마지막 검사점 작업에서 모든 데이터를 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-712">When a recovery is necessary, you can read a restart area and retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="57a69-713">이 데이터는 트랜잭션 테이블, 더티 페이지 테이블 및 열린 파일 테이블을 복구 프로세스에서 사용할 수 있도록 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-713">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="57a69-714">재시작 영역은 <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> 메서드를 사용하여 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-714">A restart area can be read using the <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="57a69-715">재시작 영역이 기록되면 바이트 배열 세그먼트의 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-715">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="57a69-716">재시작 영역을 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-716">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="57a69-717">이 메서드가 성공적으로 완료되면 기준 세그먼트 번호가 업데이트된 것입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-717">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="57a69-718">새 기준 시퀀스 번호보다 작은 시퀀스 번호를 가진 모든 로그 레코드에 액세스할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-718">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57a69-719">하나 이상의 인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-719">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="57a69-720"><paramref name="newBaseSeqNum" />이 이 시퀀스의 기준 시퀀스 번호와 마지막 시퀀스 번호 사이에 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-720"><paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span></span>  
  
 <span data-ttu-id="57a69-721">또는</span><span class="sxs-lookup"><span data-stu-id="57a69-721">-or-</span></span>  
  
 <span data-ttu-id="57a69-722">활성 로그의 기존 또는 새 아카이브 테일이나 베이스가 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-722">A new or existing archive tail or base of the active log is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="57a69-723"><paramref name="newBaseSeqNum" />이 이 시퀀스에 유효하지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-723"><paramref name="newBaseSeqNum" /> is not valid for this sequence.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="57a69-724">읽기 전용 액세스 권한으로 레코드 시퀀스를 열었으므로 작업을 수행할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-724">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="57a69-725">예기치 않은 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-725">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57a69-726">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-726">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="57a69-727">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-727">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="57a69-728">레코드 시퀀스가 꽉 찼습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-728">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As IList(Of ArraySegment(Of Byte)), newBaseSeqNum As SequenceNumber) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber newBaseSeqNum);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="57a69-729">연결하여 레코드로 추가할 바이트 배열 세그먼트의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-729">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="newBaseSeqNum"><span data-ttu-id="57a69-730">새 기준 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-730">The new base sequence number.</span></span> <span data-ttu-id="57a69-731">지정된 시퀀스 번호는 현재 기준 시퀀스 번호보다 크거나 같아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-731">The specified sequence number must be greater than or equal to the current base sequence number.</span></span></param>
        <summary><span data-ttu-id="57a69-732"><see cref="T:System.IO.Log.FileRecordSequence" />에 재시작 영역을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-732">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span></span> <span data-ttu-id="57a69-733">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-733">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="57a69-734">쓴 재시작 영역의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-734">The sequence number of the written restart area.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a69-735">재시작 영역에는 클라이언트의 마지막 검사점 작업이 포함된 정보를 임시로 저장할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-735">A restart area can be used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="57a69-736">복구가 필요할 경우 재시작 영역을 읽고 마지막 검사점 작업에서 모든 데이터를 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-736">When a recovery is necessary, you can read a restart area and retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="57a69-737">이 데이터는 트랜잭션 테이블, 더티 페이지 테이블 및 열린 파일 테이블을 복구 프로세스에서 사용할 수 있도록 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-737">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="57a69-738">재시작 영역은 <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> 메서드를 사용하여 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-738">A restart area can be read using the <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="57a69-739">재시작 영역이 기록되면 바이트 배열 세그먼트의 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-739">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="57a69-740">재시작 영역을 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-740">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="57a69-741">이 메서드가 성공적으로 완료되면 기준 세그먼트 번호가 업데이트된 것입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-741">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="57a69-742">새 기준 시퀀스 번호보다 작은 시퀀스 번호를 가진 모든 로그 레코드에 액세스할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-742">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57a69-743">하나 이상의 인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-743">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="57a69-744"><paramref name="newBaseSeqNum" />이 이 시퀀스의 기준 시퀀스 번호와 마지막 시퀀스 번호 사이에 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-744"><paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span></span>  
  
 <span data-ttu-id="57a69-745">또는</span><span class="sxs-lookup"><span data-stu-id="57a69-745">-or-</span></span>  
  
 <span data-ttu-id="57a69-746">활성 로그의 기존 또는 새 아카이브 테일이나 베이스가 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-746">A new or existing archive tail or base of the active log is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="57a69-747"><paramref name="newBaseSeqNum" />이 이 시퀀스에 유효하지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-747"><paramref name="newBaseSeqNum" /> is not valid for this sequence.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="57a69-748">읽기 전용 액세스 권한으로 레코드 시퀀스를 열었으므로 작업을 수행할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-748">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="57a69-749">예기치 않은 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-749">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57a69-750">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-750">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="57a69-751">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-751">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="57a69-752">레코드 시퀀스가 꽉 찼습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-752">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum, System.IO.Log.ReservationCollection reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum, class System.IO.Log.ReservationCollection reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As ArraySegment(Of Byte), newBaseSeqNum As SequenceNumber, reservations As ReservationCollection) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber newBaseSeqNum, System::IO::Log::ReservationCollection ^ reservations);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="57a69-753">연결하여 레코드로 추가할 바이트 배열 세그먼트의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-753">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="newBaseSeqNum"><span data-ttu-id="57a69-754">새 기준 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-754">The new base sequence number.</span></span> <span data-ttu-id="57a69-755">지정된 시퀀스 번호는 현재 기준 시퀀스 번호보다 크거나 같아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-755">The specified sequence number must be greater than or equal to the current base sequence number.</span></span></param>
        <param name="reservations"><span data-ttu-id="57a69-756">이 재시작 영역에 사용해야 하는 예약이 포함된 <see cref="T:System.IO.Log.ReservationCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-756">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span></span></param>
        <summary><span data-ttu-id="57a69-757"><see cref="T:System.IO.Log.FileRecordSequence" />에 재시작 영역을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-757">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span></span> <span data-ttu-id="57a69-758">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-758">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="57a69-759">쓴 재시작 영역의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-759">The sequence number of the written restart area.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a69-760">재시작 영역에는 클라이언트의 마지막 검사점 작업이 포함된 정보를 임시로 저장할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-760">A restart area can be used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="57a69-761">복구가 필요할 경우 재시작 영역을 읽고 마지막 검사점 작업에서 모든 데이터를 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-761">When a recovery is necessary, you can read a restart area and retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="57a69-762">이 데이터는 트랜잭션 테이블, 더티 페이지 테이블 및 열린 파일 테이블을 복구 프로세스에서 사용할 수 있도록 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-762">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="57a69-763">재시작 영역은 <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> 메서드를 사용하여 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-763">A restart area can be read using the <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="57a69-764">재시작 영역이 기록되면 바이트 배열 세그먼트의 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-764">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="57a69-765">재시작 영역을 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-765">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="57a69-766">예약을 지정하는 경우 쓴 재시작 영역은 컬렉션에 포함된 예약을 사용하여 이전에 예약된 공간을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-766">If a reservation is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="57a69-767">메서드가 성공하면 데이터가 포함될 수 있는 가장 작은 예약을 사용하고 해당 예약이 컬렉션에서 제거됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-767">If the method succeeds, it will consume the smallest reservation that can contain the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="57a69-768">이 메서드가 성공적으로 완료되면 기준 세그먼트 번호가 업데이트된 것입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-768">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="57a69-769">새 기준 시퀀스 번호보다 작은 시퀀스 번호를 가진 모든 로그 레코드에 액세스할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-769">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="57a69-770">레코드 시퀀스가 삭제되었거나 잘못된 인수를 전달하는 경우 이 작업 내에서 즉시 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-770">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="57a69-771">비동기 추가 요청 중에 발생한 오류(예: I/O 요청 중의 디스크 오류)는 <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> 메서드를 호출할 때 예외로 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-771">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57a69-772">하나 이상의 인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-772">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="57a69-773"><paramref name="newBaseSeqNum" />이 이 시퀀스의 기준 시퀀스 번호와 마지막 시퀀스 번호 사이에 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-773"><paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span></span>  
  
 <span data-ttu-id="57a69-774">또는</span><span class="sxs-lookup"><span data-stu-id="57a69-774">-or-</span></span>  
  
 <span data-ttu-id="57a69-775">활성 로그의 기존 또는 새 아카이브 테일이나 베이스가 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-775">A new or existing archive tail or base of the active log is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="57a69-776">이 레코드 시퀀스를 통해 <paramref name="reservations" />를 만들 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-776"><paramref name="reservations" /> was not created by this record sequence.</span></span>  
  
 <span data-ttu-id="57a69-777">또는</span><span class="sxs-lookup"><span data-stu-id="57a69-777">-or-</span></span>  
  
 <span data-ttu-id="57a69-778"><paramref name="newBaseSeqNum" />이 이 시퀀스에 유효하지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-778"><paramref name="newBaseSeqNum" /> is not valid for this sequence.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="57a69-779">읽기 전용 액세스 권한으로 레코드 시퀀스를 열었으므로 작업을 수행할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-779">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="57a69-780">예기치 않은 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-780">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57a69-781">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-781">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="57a69-782">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-782">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="57a69-783">레코드 시퀀스가 꽉 찼습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-783">The record sequence is full.</span></span></exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException"><span data-ttu-id="57a69-784"><paramref name="data" />에서 <paramref name="reservations" />에 맞는 크기의 예약을 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-784">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum, System.IO.Log.ReservationCollection reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum, class System.IO.Log.ReservationCollection reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As IList(Of ArraySegment(Of Byte)), newBaseSeqNum As SequenceNumber, reservations As ReservationCollection) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber newBaseSeqNum, System::IO::Log::ReservationCollection ^ reservations);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="57a69-785">연결하여 레코드로 추가할 바이트 배열 세그먼트의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-785">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="newBaseSeqNum"><span data-ttu-id="57a69-786">새 기준 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-786">The new base sequence number.</span></span> <span data-ttu-id="57a69-787">지정된 시퀀스 번호는 현재 기준 시퀀스 번호보다 크거나 같아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-787">The specified sequence number must be greater than or equal to the current base sequence number.</span></span></param>
        <param name="reservations"><span data-ttu-id="57a69-788">이 재시작 영역에 사용해야 하는 예약이 포함된 <see cref="T:System.IO.Log.ReservationCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-788">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span></span></param>
        <summary><span data-ttu-id="57a69-789"><see cref="T:System.IO.Log.FileRecordSequence" />에 재시작 영역을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-789">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span></span> <span data-ttu-id="57a69-790">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-790">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="57a69-791">쓴 재시작 영역의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-791">The sequence number of the written restart area.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a69-792">재시작 영역에는 클라이언트의 마지막 검사점 작업이 포함된 정보를 임시로 저장할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-792">A restart area can be used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="57a69-793">복구가 필요할 경우 재시작 영역을 읽고 마지막 검사점 작업에서 모든 데이터를 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-793">When a recovery is necessary, you can read a restart area and retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="57a69-794">이 데이터는 트랜잭션 테이블, 더티 페이지 테이블 및 열린 파일 테이블을 복구 프로세스에서 사용할 수 있도록 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-794">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="57a69-795">재시작 영역은 <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> 메서드를 사용하여 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-795">A restart area can be read using the <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="57a69-796">재시작 영역이 기록되면 바이트 배열 세그먼트의 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-796">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="57a69-797">재시작 영역을 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-797">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="57a69-798">예약을 지정하는 경우 쓴 재시작 영역은 컬렉션에 포함된 예약을 사용하여 이전에 예약된 공간을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-798">If a reservation is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="57a69-799">메서드가 성공하면 데이터가 포함될 수 있는 가장 작은 예약을 사용하고 해당 예약이 컬렉션에서 제거됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-799">If the method succeeds, it will consume the smallest reservation that can contain the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="57a69-800">이 메서드가 성공적으로 완료되면 기준 세그먼트 번호가 업데이트된 것입니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-800">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="57a69-801">새 기준 시퀀스 번호보다 작은 시퀀스 번호를 가진 모든 로그 레코드에 액세스할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-801">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="57a69-802">레코드 시퀀스가 삭제되었거나 잘못된 인수를 전달하는 경우 이 작업 내에서 즉시 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-802">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="57a69-803">비동기 추가 요청 중에 발생한 오류(예: I/O 요청 중의 디스크 오류)는 <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> 메서드를 호출할 때 예외로 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-803">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57a69-804">하나 이상의 인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-804">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="57a69-805"><paramref name="newBaseSeqNum" />이 이 시퀀스의 기준 시퀀스 번호와 마지막 시퀀스 번호 사이에 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-805"><paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span></span>  
  
 <span data-ttu-id="57a69-806">또는</span><span class="sxs-lookup"><span data-stu-id="57a69-806">-or-</span></span>  
  
 <span data-ttu-id="57a69-807">활성 로그의 기존 또는 새 아카이브 테일이나 베이스가 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-807">A new or existing archive tail or base of the active log is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="57a69-808">이 레코드 시퀀스를 통해 <paramref name="reservations" />를 만들 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-808"><paramref name="reservations" /> was not created by this record sequence.</span></span>  
  
 <span data-ttu-id="57a69-809">또는</span><span class="sxs-lookup"><span data-stu-id="57a69-809">-or-</span></span>  
  
 <span data-ttu-id="57a69-810"><paramref name="newBaseSeqNum" />이 이 시퀀스에 유효하지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-810"><paramref name="newBaseSeqNum" /> is not valid for this sequence.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="57a69-811">읽기 전용 액세스 권한으로 레코드 시퀀스를 열었으므로 작업을 수행할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-811">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="57a69-812">예기치 않은 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-812">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57a69-813">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-813">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="57a69-814">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-814">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="57a69-815">레코드 시퀀스가 꽉 찼습니다.</span><span class="sxs-lookup"><span data-stu-id="57a69-815">The record sequence is full.</span></span></exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException"><span data-ttu-id="57a69-816"><paramref name="data" />에서 <paramref name="reservations" />에 맞는 크기의 예약을 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="57a69-816">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>