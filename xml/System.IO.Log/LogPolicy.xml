<Type Name="LogPolicy" FullName="System.IO.Log.LogPolicy">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f6f26968506e22d1bff99070c32e5c7bce03347d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36485726" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class LogPolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LogPolicy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Log.LogPolicy" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LogPolicy" />
  <TypeSignature Language="C++ CLI" Value="public ref class LogPolicy sealed" />
  <TypeSignature Language="F#" Value="type LogPolicy = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Log</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="64e46-101">Represents the policy associated with a <see cref="T:System.IO.Log.LogStore" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="64e46-101">Represents the policy associated with a <see cref="T:System.IO.Log.LogStore" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e46-102">정책은 <xref:System.IO.Log.LogStore> 인스턴스와 해당 클라이언트가 따라야 할 규칙의 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="64e46-102">A policy is a set of rules to be followed by a <xref:System.IO.Log.LogStore> instance and its clients.</span></span> <span data-ttu-id="64e46-103"><xref:System.IO.Log.LogPolicy> 인스턴스는 특정 <xref:System.IO.Log.LogStore>와 연결된 정책을 검사하고 수정하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="64e46-103">A <xref:System.IO.Log.LogPolicy> instance is used to examine and modify the policy associated with a specific <xref:System.IO.Log.LogStore>.</span></span> <span data-ttu-id="64e46-104">정책에서는 허용 가능한 최소 및 최대 로그 크기나 <xref:System.IO.Log.LogStore> 인스턴스가 증가할 수 있는 방법을 설명할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="64e46-104">A policy can describe the minimum and maximum allowable log sizes, or how the <xref:System.IO.Log.LogStore> instance is allowed to grow.</span></span> <span data-ttu-id="64e46-105">또한 <xref:System.IO.Log.LogStore> 인스턴스를 보관할 수 있는지 여부도 제어할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="64e46-105">In addition, you can also control whether a <xref:System.IO.Log.LogStore> instance can be archived.</span></span>  
  
 <span data-ttu-id="64e46-106">속성을 변경한 후에는 <xref:System.IO.Log.LogPolicy.Commit%2A> 메서드를 사용하여 변경 내용을 <xref:System.IO.Log.LogStore>에 적용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="64e46-106">After changing any of the properties, you should use the <xref:System.IO.Log.LogPolicy.Commit%2A> method to ensure that the changes are applied to the <xref:System.IO.Log.LogStore>.</span></span> <span data-ttu-id="64e46-107"><xref:System.IO.Log.LogPolicy.Refresh%2A> 메서드를 호출하여 변경 내용을 취소하거나 최신 정책을 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="64e46-107">You can call the <xref:System.IO.Log.LogPolicy.Refresh%2A> method to discard changes or to get the most current policy.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64e46-108">이 예제에서는 <xref:System.IO.Log.LogPolicy> 클래스를 사용하여 로그 레코드 시퀀스에 대한 정책을 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="64e46-108">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AutoGrow">
      <MemberSignature Language="C#" Value="public bool AutoGrow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGrow" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.AutoGrow" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoGrow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoGrow { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGrow : bool with get, set" Usage="System.IO.Log.LogPolicy.AutoGrow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64e46-109">Gets or sets a value indicating whether the <see cref="T:System.IO.Log.LogStore" /> can grow automatically.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e46-109">Gets or sets a value indicating whether the <see cref="T:System.IO.Log.LogStore" /> can grow automatically.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64e46-110">
            <see langword="true" /> 크기가 자동으로 증가할 수 있으면 <see cref="T:System.IO.Log.LogStore" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e46-110">
              <see langword="true" /> if the <see cref="T:System.IO.Log.LogStore" /> can grow its size automatically; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="64e46-111">이 예제에서는 <xref:System.IO.Log.LogPolicy> 클래스를 사용하여 로그 레코드 시퀀스에 대한 정책을 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="64e46-111">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoShrinkPercentage">
      <MemberSignature Language="C#" Value="public int AutoShrinkPercentage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AutoShrinkPercentage" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.AutoShrinkPercentage" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoShrinkPercentage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AutoShrinkPercentage { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.AutoShrinkPercentage : int with get, set" Usage="System.IO.Log.LogPolicy.AutoShrinkPercentage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64e46-112">Gets or sets the percentage of free space the <see cref="T:System.IO.Log.LogStore" /> can shrink.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e46-112">Gets or sets the percentage of free space the <see cref="T:System.IO.Log.LogStore" /> can shrink.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64e46-113">
            <see cref="T:System.IO.Log.LogStore" />에서 줄일 수 있는 여유 공간의 백분율입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e46-113">The percentage of free space the <see cref="T:System.IO.Log.LogStore" /> can shrink.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e46-114"><xref:System.IO.Log.LogStore>의 여유 공간 크기가 이 속성으로 지정된 크기보다 크면 <xref:System.IO.Log.LogStore> 속성으로 지정된 크기에 도달할 때까지 <xref:System.IO.Log.LogPolicy.MinimumExtentCount%2A>에서 크기를 자동으로 줄입니다.</span><span class="sxs-lookup"><span data-stu-id="64e46-114">When the amount of free space in the <xref:System.IO.Log.LogStore> is greater than the amount specified by this property, the <xref:System.IO.Log.LogStore> automatically reduces its size until it reaches the size specified by the <xref:System.IO.Log.LogPolicy.MinimumExtentCount%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64e46-115">이 예제에서는 <xref:System.IO.Log.LogPolicy> 클래스를 사용하여 로그 레코드 시퀀스에 대한 정책을 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="64e46-115">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Commit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogPolicy.Commit" />
      <MemberSignature Language="VB.NET" Value="Public Sub Commit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Commit();" />
      <MemberSignature Language="F#" Value="member this.Commit : unit -&gt; unit" Usage="logPolicy.Commit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="64e46-116">Sets this policy as the current policy for the <see cref="T:System.IO.Log.LogStore" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e46-116">Sets this policy as the current policy for the <see cref="T:System.IO.Log.LogStore" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e46-117">변경한 후에는 <xref:System.IO.Log.LogPolicy.Commit%2A>를 호출하여 변경 내용을 기록해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="64e46-117">You must call <xref:System.IO.Log.LogPolicy.Commit%2A> after making any changes to ensure that the changes are recorded.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64e46-118">이 예제에서는 <xref:System.IO.Log.LogPolicy> 클래스를 사용하여 로그 레코드 시퀀스에 대한 정책을 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="64e46-118">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="64e46-119">The set of policies installed on the log is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e46-119">The set of policies installed on the log is invalid.</span>
          </span>
          <span data-ttu-id="64e46-120">-or-  A policy of the log prevented this operation from completing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e46-120">-or-  A policy of the log prevented this operation from completing.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="64e46-121">The request could not be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e46-121">The request could not be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="64e46-122">Setting this policy is not supported on the current platform.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e46-122">Setting this policy is not supported on the current platform.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="64e46-123">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e46-123">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="64e46-124">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e46-124">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="64e46-125">The new extent prefix is invalid or too long.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e46-125">The new extent prefix is invalid or too long.</span>
          </span>
          <span data-ttu-id="64e46-126">A valid prefix must be provided.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e46-126">A valid prefix must be provided.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="64e46-127">The record sequence is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e46-127">The record sequence is full.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="64e46-128">Access for the specified log store is denied by the operating system.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e46-128">Access for the specified log store is denied by the operating system.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GrowthRate">
      <MemberSignature Language="C#" Value="public System.IO.Log.PolicyUnit GrowthRate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.PolicyUnit GrowthRate" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.GrowthRate" />
      <MemberSignature Language="VB.NET" Value="Public Property GrowthRate As PolicyUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::PolicyUnit GrowthRate { System::IO::Log::PolicyUnit get(); void set(System::IO::Log::PolicyUnit value); };" />
      <MemberSignature Language="F#" Value="member this.GrowthRate : System.IO.Log.PolicyUnit with get, set" Usage="System.IO.Log.LogPolicy.GrowthRate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.PolicyUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64e46-129">Gets or sets the rate of automatic growth of the <see cref="T:System.IO.Log.LogStore" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e46-129">Gets or sets the rate of automatic growth of the <see cref="T:System.IO.Log.LogStore" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64e46-130">
            <see cref="T:System.IO.Log.LogStore" />의 자동 증가 비율입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e46-130">The rate of automatic growth of the <see cref="T:System.IO.Log.LogStore" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e46-131"><xref:System.IO.Log.LogStore>가 꽉 차면 이 정책 값에 따라 추가할 수 있는 공간의 크기가 결정됩니다.</span><span class="sxs-lookup"><span data-stu-id="64e46-131">When the <xref:System.IO.Log.LogStore> becomes full, this policy value determines how much more space can be added.</span></span> <span data-ttu-id="64e46-132">공간을 추가하면 <xref:System.IO.Log.LogStore>의 범위 수가 <xref:System.IO.Log.LogPolicy.MaximumExtentCount%2A>를 초과하는 경우에는 공간이 추가되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="64e46-132">Space will not be added if it causes the number of extents in the <xref:System.IO.Log.LogStore> to exceed <xref:System.IO.Log.LogPolicy.MaximumExtentCount%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64e46-133">이 예제에서는 <xref:System.IO.Log.LogPolicy> 클래스를 사용하여 로그 레코드 시퀀스에 대한 정책을 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="64e46-133">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumExtentCount">
      <MemberSignature Language="C#" Value="public int MaximumExtentCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumExtentCount" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.MaximumExtentCount" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumExtentCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaximumExtentCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumExtentCount : int with get, set" Usage="System.IO.Log.LogPolicy.MaximumExtentCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64e46-134">Gets or sets the maximum number of <see cref="T:System.IO.Log.LogExtent" /> instances the <see cref="T:System.IO.Log.LogStore" /> can contain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e46-134">Gets or sets the maximum number of <see cref="T:System.IO.Log.LogExtent" /> instances the <see cref="T:System.IO.Log.LogStore" /> can contain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64e46-135">
            <see cref="T:System.IO.Log.LogExtent" />에 포함될 수 있는 최대 <see cref="T:System.IO.Log.LogStore" /> 인스턴스 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e46-135">The maximum number of <see cref="T:System.IO.Log.LogExtent" /> instances the <see cref="T:System.IO.Log.LogStore" /> can contain.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="64e46-136">이 예제에서는 <xref:System.IO.Log.LogPolicy> 클래스를 사용하여 로그 레코드 시퀀스에 대한 정책을 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="64e46-136">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumExtentCount">
      <MemberSignature Language="C#" Value="public int MinimumExtentCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumExtentCount" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.MinimumExtentCount" />
      <MemberSignature Language="VB.NET" Value="Public Property MinimumExtentCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinimumExtentCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinimumExtentCount : int with get, set" Usage="System.IO.Log.LogPolicy.MinimumExtentCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64e46-137">Gets or sets the minimum number of <see cref="T:System.IO.Log.LogExtent" /> instances the <see cref="T:System.IO.Log.LogStore" /> can contain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e46-137">Gets or sets the minimum number of <see cref="T:System.IO.Log.LogExtent" /> instances the <see cref="T:System.IO.Log.LogStore" /> can contain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64e46-138">
            <see cref="T:System.IO.Log.LogExtent" />에 포함될 수 있는 최소 <see cref="T:System.IO.Log.LogStore" /> 인스턴스 수를 지정하는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e46-138">An integer that specifies the minimum number of <see cref="T:System.IO.Log.LogExtent" /> instances the <see cref="T:System.IO.Log.LogStore" /> can contain.</span>
          </span>
          <span data-ttu-id="64e46-139">CLFS를 사용하려면 최소 범위 수가 2개여야 하므로 이 값은 2 이상이어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e46-139">Since the CLFS requires that the minimum extent count to be 2 extents, this value should be at least 2.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="64e46-140">이 예제에서는 <xref:System.IO.Log.LogPolicy> 클래스를 사용하여 로그 레코드 시퀀스에 대한 정책을 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="64e46-140">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewExtentPrefix">
      <MemberSignature Language="C#" Value="public string NewExtentPrefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewExtentPrefix" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.NewExtentPrefix" />
      <MemberSignature Language="VB.NET" Value="Public Property NewExtentPrefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NewExtentPrefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NewExtentPrefix : string with get, set" Usage="System.IO.Log.LogPolicy.NewExtentPrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64e46-141">Gets or sets the prefix string for automatically created extents.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e46-141">Gets or sets the prefix string for automatically created extents.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64e46-142">자동으로 만들어진 범위에 대한 접두사 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e46-142">The prefix string for automatically created extents.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e46-143">이 문자열에는 새 범위가 만들어진 디렉터리의 전체 경로가 포함될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="64e46-143">This string can contain a full path to the directory where the new extent is created.</span></span> <span data-ttu-id="64e46-144">범위의 기본 경로는 기본 <xref:System.IO.Log.LogStore> 파일이 포함된 디렉터리입니다.</span><span class="sxs-lookup"><span data-stu-id="64e46-144">The default path to the extent is the directory that contains the base <xref:System.IO.Log.LogStore> file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64e46-145">이 예제에서는 <xref:System.IO.Log.LogPolicy> 클래스를 사용하여 로그 레코드 시퀀스에 대한 정책을 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="64e46-145">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextExtentSuffix">
      <MemberSignature Language="C#" Value="public long NextExtentSuffix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 NextExtentSuffix" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.NextExtentSuffix" />
      <MemberSignature Language="VB.NET" Value="Public Property NextExtentSuffix As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long NextExtentSuffix { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.NextExtentSuffix : int64 with get, set" Usage="System.IO.Log.LogPolicy.NextExtentSuffix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64e46-146">Gets or sets the suffix number for new extents.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e46-146">Gets or sets the suffix number for new extents.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64e46-147">새 범위에 대한 접미사 번호입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e46-147">The suffix number for new extents.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="64e46-148">이 예제에서는 <xref:System.IO.Log.LogPolicy> 클래스를 사용하여 로그 레코드 시퀀스에 대한 정책을 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="64e46-148">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PinnedTailThreshold">
      <MemberSignature Language="C#" Value="public System.IO.Log.PolicyUnit PinnedTailThreshold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.PolicyUnit PinnedTailThreshold" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.PinnedTailThreshold" />
      <MemberSignature Language="VB.NET" Value="Public Property PinnedTailThreshold As PolicyUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::PolicyUnit PinnedTailThreshold { System::IO::Log::PolicyUnit get(); void set(System::IO::Log::PolicyUnit value); };" />
      <MemberSignature Language="F#" Value="member this.PinnedTailThreshold : System.IO.Log.PolicyUnit with get, set" Usage="System.IO.Log.LogPolicy.PinnedTailThreshold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.PolicyUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64e46-149">Gets or sets the amount of space that the <see cref="E:System.IO.Log.LogRecordSequence.TailPinned" /> event requires for advancing the base of the log.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e46-149">Gets or sets the amount of space that the <see cref="E:System.IO.Log.LogRecordSequence.TailPinned" /> event requires for advancing the base of the log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64e46-150">로그의 기준을 앞으로 이동하기 위해 <see cref="E:System.IO.Log.LogRecordSequence.TailPinned" /> 이벤트에 필요한 공간의 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e46-150">The amount of space that the <see cref="E:System.IO.Log.LogRecordSequence.TailPinned" /> event requires for advancing the base of the log.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e46-151">공간의 크기는 백분율 단위나 CLFS의 가장 가까운 컨테이너로 반올림된 바이트 단위로 표현될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="64e46-151">The amount of space can be expressed in percentage, or in bytes which is rounded off to the nearest containers in CLFS.</span></span> <span data-ttu-id="64e46-152">기본값은 35%입니다.</span><span class="sxs-lookup"><span data-stu-id="64e46-152">The default is 35 percent.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64e46-153">이 예제에서는 <xref:System.IO.Log.LogPolicy> 클래스를 사용하여 로그 레코드 시퀀스에 대한 정책을 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="64e46-153">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogPolicy.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberSignature Language="F#" Value="member this.Refresh : unit -&gt; unit" Usage="logPolicy.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="64e46-154">Reads the current policy for the <see cref="T:System.IO.Log.LogStore" />, discarding any changes that may have been made.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e46-154">Reads the current policy for the <see cref="T:System.IO.Log.LogStore" />, discarding any changes that may have been made.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="64e46-155">이 예제에서는 <xref:System.IO.Log.LogPolicy> 클래스를 사용하여 로그 레코드 시퀀스에 대한 정책을 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="64e46-155">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="64e46-156">The set of policies installed on the log is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e46-156">The set of policies installed on the log is invalid.</span>
          </span>
          <span data-ttu-id="64e46-157">-or-  A policy of the log prevented this operation from completing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e46-157">-or-  A policy of the log prevented this operation from completing.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="64e46-158">The request could not be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e46-158">The request could not be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="64e46-159">Setting this policy is not supported on the current platform.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e46-159">Setting this policy is not supported on the current platform.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="64e46-160">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e46-160">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="64e46-161">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e46-161">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="64e46-162">The record sequence is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e46-162">The record sequence is full.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="64e46-163">Access for the specified log store is denied by the operating system.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e46-163">Access for the specified log store is denied by the operating system.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>