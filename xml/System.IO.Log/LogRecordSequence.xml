<Type Name="LogRecordSequence" FullName="System.IO.Log.LogRecordSequence">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7156e4e610a9d14909a701b75c25fcdefeaf4c8c" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37655530" /></Metadata><TypeSignature Language="C#" Value="public sealed class LogRecordSequence : IDisposable, System.IO.Log.IRecordSequence" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LogRecordSequence extends System.Object implements class System.IDisposable, class System.IO.Log.IRecordSequence" />
  <TypeSignature Language="DocId" Value="T:System.IO.Log.LogRecordSequence" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LogRecordSequence&#xA;Implements IDisposable, IRecordSequence" />
  <TypeSignature Language="C++ CLI" Value="public ref class LogRecordSequence sealed : IDisposable, System::IO::Log::IRecordSequence" />
  <TypeSignature Language="F#" Value="type LogRecordSequence = class&#xA;    interface IRecordSequence&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Log</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IO.Log.IRecordSequence</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="e7bfe-101"><see cref="T:System.IO.Log.LogStore" />에 저장된 레코드 시퀀스를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-101">Represents a record sequence stored in a <see cref="T:System.IO.Log.LogStore" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7bfe-102"><xref:System.IO.Log.LogRecordSequence> 클래스는 CLFS(Common Log File System) 로그 위에 레코드 시퀀스 인터페이스의 구현을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-102">The <xref:System.IO.Log.LogRecordSequence> class provides an implementation of the record sequence interface on top of a Common Log File System (CLFS) log.</span></span> <span data-ttu-id="e7bfe-103">이 클래스는 표준 레코드 기반 기능 외에도, 로그 공간이 부족해지는 상태를 방지하고 동일한 물리적 파일에서 클라이언트를 멀티플렉싱하기 위한 정책 모델을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-103">In addition to the standard record-oriented features, it provides a policy model for avoiding log-full conditions, and multiplexing of clients on the same physical file.</span></span> <span data-ttu-id="e7bfe-104">이 클래스는 CLFS 로그 파일을 직접 조작하고 관리하는 데 필요한 인터페이스를 제공하는 <xref:System.IO.Log.LogStore> 클래스와 함께 작동합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-104">It works with the <xref:System.IO.Log.LogStore> class, which provides an interface for directly manipulating and managing a CLFS log file.</span></span> <span data-ttu-id="e7bfe-105"><xref:System.IO.Log.LogStore> 클래스와 <xref:System.IO.Log.LogRecordSequence> 클래스의 관계는 디스크 파일과 <xref:System.IO.FileStream> 개체의 관계와 유사합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-105">The relationship between the <xref:System.IO.Log.LogStore> class and the <xref:System.IO.Log.LogRecordSequence> class is similar to the relationship between a disk file and a <xref:System.IO.FileStream> object.</span></span> <span data-ttu-id="e7bfe-106">디스크 파일은 실제 스토리지를 제공하고 길이 및 마지막 액세스 시간과 같은 특성이 있으며, <xref:System.IO.FileStream> 개체는 파일에서 읽고 파일에 쓰는 데 사용할 수 있는 파일에 대한 뷰를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-106">The disk file provides the concrete storage, and has attributes such as length and last access time; while the <xref:System.IO.FileStream> object provides a view on the file that can be used to read from it and write to it.</span></span> <span data-ttu-id="e7bfe-107">이와 마찬가지로 <xref:System.IO.Log.LogStore> 클래스는 정책 및 디스크 범위 컬렉션과 같은 특성을 가지며, <xref:System.IO.Log.LogRecordSequence> 클래스는 데이터를 읽고 쓰기 위한 레코드 기반 메커니즘을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-107">Similarly, the <xref:System.IO.Log.LogStore> class has attributes like a policy and a collection of disk extents; and the <xref:System.IO.Log.LogRecordSequence> class provides a record-oriented mechanism for reading and writing data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7bfe-108">다음 예제에서는 <xref:System.IO.Log.LogRecordSequence> 클래스를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-108">This example shows how to use the <xref:System.IO.Log.LogRecordSequence> class:</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#0)]
 [!code-vb[S_UELogRecordSequence#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e7bfe-109"><see cref="T:System.IO.Log.LogRecordSequence" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-109">Initializes a new instance of the <see cref="T:System.IO.Log.LogRecordSequence" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LogRecordSequence (System.IO.Log.LogStore logStore);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Log.LogStore logStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.#ctor(System.IO.Log.LogStore)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LogRecordSequence(System::IO::Log::LogStore ^ logStore);" />
      <MemberSignature Language="F#" Value="new System.IO.Log.LogRecordSequence : System.IO.Log.LogStore -&gt; System.IO.Log.LogRecordSequence" Usage="new System.IO.Log.LogRecordSequence logStore" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="logStore" Type="System.IO.Log.LogStore" />
      </Parameters>
      <Docs>
        <param name="logStore"><span data-ttu-id="e7bfe-110">이 레코드 시퀀스에서 사용해야 하는 <see cref="T:System.IO.Log.LogStore" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-110">The <see cref="T:System.IO.Log.LogStore" /> that this record sequence should use.</span></span></param>
        <summary><span data-ttu-id="e7bfe-111">지정된 로그 저장소를 사용하여 <see cref="T:System.IO.Log.LogRecordSequence" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-111">Initializes a new instance of the <see cref="T:System.IO.Log.LogRecordSequence" /> class with the specified log store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7bfe-112">버퍼 크기에 따라 추가하거나 읽을 수 있는 최대 레코드 크기가 결정됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-112">The buffer size determines the maximum size of the record that can be appended or read.</span></span> <span data-ttu-id="e7bfe-113">이 생성자에는 기본값 64가 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-113">In this constructor, a default value of 64 is set.</span></span> <span data-ttu-id="e7bfe-114">원하는 버퍼 수는 10으로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-114">The desired number of buffers is set to 10.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7bfe-115"><paramref name="logStore" />이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-115"><paramref name="logStore" /> is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LogRecordSequence (string path, System.IO.FileMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, mode As FileMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LogRecordSequence(System::String ^ path, System::IO::FileMode mode);" />
      <MemberSignature Language="F#" Value="new System.IO.Log.LogRecordSequence : string * System.IO.FileMode -&gt; System.IO.Log.LogRecordSequence" Usage="new System.IO.Log.LogRecordSequence (path, mode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="e7bfe-116">열려는 로그 저장소의 기본 파일에 대한 상대 또는 절대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-116">A relative or absolute path for the base file of the log store to open.</span></span></param>
        <param name="mode"><span data-ttu-id="e7bfe-117">저장소를 열거나 만드는 방법을 결정하는 <see cref="T:System.IO.FileMode" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-117">One of the <see cref="T:System.IO.FileMode" /> values that determines how to open or create the store.</span></span></param>
        <summary><span data-ttu-id="e7bfe-118">지정된 로그 저장소 경로와 액세스 모드를 사용하여 <see cref="T:System.IO.Log.LogRecordSequence" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-118">Initializes a new instance of the <see cref="T:System.IO.Log.LogRecordSequence" /> class with a specified path to the log store and the access mode.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7bfe-119">이 생성자는 지정된 경로와 모드를 사용하여 여는 새 <xref:System.IO.Log.LogRecordSequence> 개체에서 새로운 <xref:System.IO.Log.LogStore>를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-119">This constructor initializes a new <xref:System.IO.Log.LogRecordSequence> on a new <xref:System.IO.Log.LogStore> object that it opens with the specified path and mode.</span></span> <span data-ttu-id="e7bfe-120">저장소에 대한 읽기/쓰기 액세스 권한이 제공되며 저장소는 읽기 권한을 공유하여 열립니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-120">It is given read/write access to the store, and the store is opened sharing Read access.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7bfe-121"><paramref name="path" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-121"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7bfe-122"><paramref name="path" />가 빈 문자열("")인 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-122"><paramref name="path" /> is an empty string ("").</span></span>  
  
<span data-ttu-id="e7bfe-123">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-123">-or-</span></span> 
 <span data-ttu-id="e7bfe-124"><paramref name="path" />에 공백만 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-124"><paramref name="path" /> contains only white space.</span></span>  
  
<span data-ttu-id="e7bfe-125">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-125">-or-</span></span> 
 <span data-ttu-id="e7bfe-126"><paramref name="path" />에 하나 이상의 잘못된 문자가 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-126"><paramref name="path" /> contains one or more invalid characters.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7bfe-127"><paramref name="mode" />에 잘못된 값이 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-127"><paramref name="mode" /> contains an invalid value.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="e7bfe-128">파일을 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-128">The file cannot be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7bfe-129">로그 저장소를 열 때 I/O 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-129">An I/O error occurs when opening the log store.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e7bfe-130">지정된 로그 시퀀스에 대한 액세스가 운영 체제에서 거부되는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-130">Access for the specified log sequence is denied by the operating system.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e7bfe-131">이 작업이 지원되지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-131">This operation is not supported.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7bfe-132">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-132">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="e7bfe-133">필요한 CLFS(Common Log File System) 구성 요소가 설치되어 있지 않기 때문에 <see cref="T:System.IO.Log.LogRecordSequence" />를 사용할 수 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-133"><see cref="T:System.IO.Log.LogRecordSequence" /> cannot be used because the required Common Log File System (CLFS) component is not installed.</span></span> <span data-ttu-id="e7bfe-134">사용 중인 플랫폼에 대한 CLFS 구성 요소가 있으면 해당 구성 요소를 설치하거나, <see cref="T:System.IO.Log.FileRecordSequence" /> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-134">Install the CLFS component if it is available for your platform, or use the <see cref="T:System.IO.Log.FileRecordSequence" /> class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LogRecordSequence (System.IO.Log.LogStore logStore, int bufferSize, int bufferCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Log.LogStore logStore, int32 bufferSize, int32 bufferCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.#ctor(System.IO.Log.LogStore,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LogRecordSequence(System::IO::Log::LogStore ^ logStore, int bufferSize, int bufferCount);" />
      <MemberSignature Language="F#" Value="new System.IO.Log.LogRecordSequence : System.IO.Log.LogStore * int * int -&gt; System.IO.Log.LogRecordSequence" Usage="new System.IO.Log.LogRecordSequence (logStore, bufferSize, bufferCount)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="logStore" Type="System.IO.Log.LogStore" />
        <Parameter Name="bufferSize" Type="System.Int32" />
        <Parameter Name="bufferCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="logStore"><span data-ttu-id="e7bfe-135">이 레코드 시퀀스에서 사용해야 하는 <see cref="T:System.IO.Log.LogStore" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-135">The <see cref="T:System.IO.Log.LogStore" /> that this record sequence should use.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="e7bfe-136">원하는 버퍼 크기(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-136">The desired buffer size in bytes.</span></span> <span data-ttu-id="e7bfe-137">버퍼 크기에 따라 추가하거나 읽을 수 있는 최대 레코드 크기가 결정됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-137">The buffer size determines the maximum size of the record that can be appended or read.</span></span></param>
        <param name="bufferCount"><span data-ttu-id="e7bfe-138">원하는 버퍼 수입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-138">The desired number of buffers.</span></span></param>
        <summary><span data-ttu-id="e7bfe-139">지정된 로그 저장소, 각 레코드의 버퍼 크기, 버퍼 수를 사용하여 <see cref="T:System.IO.Log.LogRecordSequence" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-139">Initializes a new instance of the <see cref="T:System.IO.Log.LogRecordSequence" /> class with the specified log store, buffer size for each record, and buffer number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7bfe-140">`bufferSize`와 `bufferCount`의 값을 지정하려 할 때 `bufferSize`와 `bufferCount`에 각각 기본값 64와 기본값 10을 사용하지 않으려는 경우 이 생성자를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-140">Use this constructor if you want to specify values for `bufferSize` and `bufferCount` and do not want to use the default value of 64 for `bufferSize` and 10 for `bufferCount`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7bfe-141"><paramref name="logStore" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-141"><paramref name="logStore" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7bfe-142"><paramref name="bufferSize" />가 음수이거나 0인 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-142"><paramref name="bufferSize" /> is negative or zero.</span></span>  
  
<span data-ttu-id="e7bfe-143">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-143">-or-</span></span> 
 <span data-ttu-id="e7bfe-144"><paramref name="bufferCount" />가 음수이거나 0인 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-144"><paramref name="bufferCount" /> is negative or zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LogRecordSequence (string path, System.IO.FileMode mode, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, mode As FileMode, access As FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LogRecordSequence(System::String ^ path, System::IO::FileMode mode, System::IO::FileAccess access);" />
      <MemberSignature Language="F#" Value="new System.IO.Log.LogRecordSequence : string * System.IO.FileMode * System.IO.FileAccess -&gt; System.IO.Log.LogRecordSequence" Usage="new System.IO.Log.LogRecordSequence (path, mode, access)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="e7bfe-145">열려는 로그 저장소의 기본 파일에 대한 상대 또는 절대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-145">A relative or absolute path for the base file of the log store to open.</span></span></param>
        <param name="mode"><span data-ttu-id="e7bfe-146">저장소를 열거나 만드는 방법을 결정하는 <see cref="T:System.IO.FileMode" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-146">One of the <see cref="T:System.IO.FileMode" /> values that determines how to open or create the store.</span></span></param>
        <param name="access"><span data-ttu-id="e7bfe-147"><see cref="T:System.IO.FileAccess" />에서 파일에 액세스할 수 있는 방법을 결정하는 <see cref="T:System.IO.Log.LogStore" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-147">One of the <see cref="T:System.IO.FileAccess" /> values that determines how the file can be accessed by the <see cref="T:System.IO.Log.LogStore" />.</span></span></param>
        <summary><span data-ttu-id="e7bfe-148">지정된 로그 저장소 경로와 액세스 및 공유 모드를 사용하여 <see cref="T:System.IO.Log.LogRecordSequence" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-148">Initializes a new instance of the <see cref="T:System.IO.Log.LogRecordSequence" /> class with a specified path to the log store and the access and share modes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7bfe-149">이 생성자는 지정된 경로, 모드, 액세스를 사용하여, 생성자에서 여는 새 <xref:System.IO.Log.LogRecordSequence> 개체의 새로운 <xref:System.IO.Log.LogStore>를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-149">This constructor initializes a new <xref:System.IO.Log.LogRecordSequence> on a new <xref:System.IO.Log.LogStore> object that it opens with the specified path, mode, and access.</span></span> <span data-ttu-id="e7bfe-150">저장소는 읽기 권한을 공유하여 열립니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-150">The store is opened sharing Read access.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7bfe-151"><paramref name="path" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-151"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7bfe-152"><paramref name="path" />가 빈 문자열("")인 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-152"><paramref name="path" /> is an empty string ("").</span></span>  
  
<span data-ttu-id="e7bfe-153">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-153">-or-</span></span> 
 <span data-ttu-id="e7bfe-154"><paramref name="path" />에 공백만 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-154"><paramref name="path" /> contains only white space.</span></span>  
  
<span data-ttu-id="e7bfe-155">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-155">-or-</span></span> 
 <span data-ttu-id="e7bfe-156"><paramref name="path" />에 하나 이상의 잘못된 문자가 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-156"><paramref name="path" /> contains one or more invalid characters.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7bfe-157"><paramref name="mode" />에 잘못된 값이 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-157"><paramref name="mode" /> contains an invalid value.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="e7bfe-158">파일을 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-158">The file cannot be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7bfe-159">로그 저장소를 열 때 I/O 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-159">An I/O error occurs when opening the log store.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e7bfe-160">지정된 로그 시퀀스에 대한 액세스가 운영 체제에서 거부되는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-160">Access for the specified log sequence is denied by the operating system.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e7bfe-161">이 작업이 지원되지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-161">This operation is not supported.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7bfe-162">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-162">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="e7bfe-163">필요한 CLFS(Common Log File System) 구성 요소가 설치되어 있지 않기 때문에 <see cref="T:System.IO.Log.LogRecordSequence" />를 사용할 수 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-163"><see cref="T:System.IO.Log.LogRecordSequence" /> cannot be used because the required Common Log File System (CLFS) component is not installed.</span></span> <span data-ttu-id="e7bfe-164">사용 중인 플랫폼에 대한 CLFS 구성 요소가 있으면 해당 구성 요소를 설치하거나, <see cref="T:System.IO.Log.FileRecordSequence" /> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-164">Install the CLFS component if it is available for your platform, or use the <see cref="T:System.IO.Log.FileRecordSequence" /> class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LogRecordSequence (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare share) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, mode As FileMode, access As FileAccess, share As FileShare)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LogRecordSequence(System::String ^ path, System::IO::FileMode mode, System::IO::FileAccess access, System::IO::FileShare share);" />
      <MemberSignature Language="F#" Value="new System.IO.Log.LogRecordSequence : string * System.IO.FileMode * System.IO.FileAccess * System.IO.FileShare -&gt; System.IO.Log.LogRecordSequence" Usage="new System.IO.Log.LogRecordSequence (path, mode, access, share)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="share" Type="System.IO.FileShare" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="e7bfe-165">열려는 로그 저장소의 기본 파일에 대한 상대 또는 절대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-165">A relative or absolute path for the base file of the log store to open.</span></span></param>
        <param name="mode"><span data-ttu-id="e7bfe-166">저장소를 열거나 만드는 방법을 결정하는 <see cref="T:System.IO.FileMode" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-166">One of the <see cref="T:System.IO.FileMode" /> values that determines how to open or create the store.</span></span></param>
        <param name="access"><span data-ttu-id="e7bfe-167"><see cref="T:System.IO.FileAccess" />에서 파일에 액세스할 수 있는 방법을 결정하는 <see cref="T:System.IO.Log.LogStore" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-167">One of the <see cref="T:System.IO.FileAccess" /> values that determines how the file can be accessed by the <see cref="T:System.IO.Log.LogStore" />.</span></span></param>
        <param name="share"><span data-ttu-id="e7bfe-168">로그 저장소가 프로세스 간에 공유되는 방법을 결정하는 <see cref="T:System.IO.FileShare" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-168">One of the <see cref="T:System.IO.FileShare" /> values that determines how the log store will be shared among processes.</span></span></param>
        <summary><span data-ttu-id="e7bfe-169">지정된 로그 저장소 경로와 액세스 모드를 사용하여 <see cref="T:System.IO.Log.LogRecordSequence" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-169">Initializes a new instance of the <see cref="T:System.IO.Log.LogRecordSequence" /> class with a specified path to the log store and the access mode.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7bfe-170">이 생성자는 지정된 경로, 모드, 액세스를 사용하여, 생성자에서 여는 새 <xref:System.IO.Log.LogRecordSequence> 개체의 새로운 <xref:System.IO.Log.LogStore>를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-170">This constructor initializes a new <xref:System.IO.Log.LogRecordSequence> on a new <xref:System.IO.Log.LogStore> object that it opens with the specified path, mode, and access.</span></span> <span data-ttu-id="e7bfe-171">저장소는 지정된 액세스 권한을 공유하여 열립니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-171">The store is opened sharing the specified access.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7bfe-172">다음 예제에서는 이 <xref:System.IO.Log.LogRecordSequence> 생성자를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-172">This example shows how to use this <xref:System.IO.Log.LogRecordSequence> constructor:</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#1)]
 [!code-vb[S_UELogRecordSequence#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7bfe-173"><paramref name="path" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-173"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7bfe-174"><paramref name="path" />가 빈 문자열("")인 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-174"><paramref name="path" /> is an empty string ("").</span></span>  
  
<span data-ttu-id="e7bfe-175">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-175">-or-</span></span> 
 <span data-ttu-id="e7bfe-176"><paramref name="path" />에 공백만 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-176"><paramref name="path" /> contains only white space.</span></span>  
  
<span data-ttu-id="e7bfe-177">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-177">-or-</span></span> 
 <span data-ttu-id="e7bfe-178"><paramref name="path" />에 하나 이상의 잘못된 문자가 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-178"><paramref name="path" /> contains one or more invalid characters.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7bfe-179"><paramref name="mode" />에 잘못된 값이 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-179"><paramref name="mode" /> contains an invalid value.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="e7bfe-180">파일을 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-180">The file cannot be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7bfe-181">로그 저장소를 열 때 I/O 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-181">An I/O error occurs when opening the log store.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e7bfe-182">지정된 로그 시퀀스에 대한 액세스가 운영 체제에서 거부되는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-182">Access for the specified log sequence is denied by the operating system.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e7bfe-183">이 작업이 지원되지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-183">This operation is not supported.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7bfe-184">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-184">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="e7bfe-185">필요한 CLFS(Common Log File System) 구성 요소가 설치되어 있지 않기 때문에 <see cref="T:System.IO.Log.LogRecordSequence" />를 사용할 수 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-185"><see cref="T:System.IO.Log.LogRecordSequence" /> cannot be used because the required Common Log File System (CLFS) component is not installed.</span></span> <span data-ttu-id="e7bfe-186">사용 중인 플랫폼에 대한 CLFS 구성 요소가 있으면 해당 구성 요소를 설치하거나, <see cref="T:System.IO.Log.FileRecordSequence" /> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-186">Install the CLFS component if it is available for your platform, or use the <see cref="T:System.IO.Log.FileRecordSequence" /> class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LogRecordSequence (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share, int bufferSize, int bufferCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare share, int32 bufferSize, int32 bufferCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, mode As FileMode, access As FileAccess, share As FileShare, bufferSize As Integer, bufferCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LogRecordSequence(System::String ^ path, System::IO::FileMode mode, System::IO::FileAccess access, System::IO::FileShare share, int bufferSize, int bufferCount);" />
      <MemberSignature Language="F#" Value="new System.IO.Log.LogRecordSequence : string * System.IO.FileMode * System.IO.FileAccess * System.IO.FileShare * int * int -&gt; System.IO.Log.LogRecordSequence" Usage="new System.IO.Log.LogRecordSequence (path, mode, access, share, bufferSize, bufferCount)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="share" Type="System.IO.FileShare" />
        <Parameter Name="bufferSize" Type="System.Int32" />
        <Parameter Name="bufferCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="e7bfe-187">열려는 로그 저장소의 기본 파일에 대한 상대 또는 절대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-187">A relative or absolute path for the base file of the log store to open.</span></span></param>
        <param name="mode"><span data-ttu-id="e7bfe-188">저장소를 열거나 만드는 방법을 결정하는 <see cref="T:System.IO.FileMode" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-188">One of the <see cref="T:System.IO.FileMode" /> values that determines how to open or create the store.</span></span></param>
        <param name="access"><span data-ttu-id="e7bfe-189"><see cref="T:System.IO.FileAccess" />에서 파일에 액세스할 수 있는 방법을 결정하는 <see cref="T:System.IO.Log.LogStore" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-189">One of the <see cref="T:System.IO.FileAccess" /> values that determines how the file can be accessed by the <see cref="T:System.IO.Log.LogStore" />.</span></span></param>
        <param name="share"><span data-ttu-id="e7bfe-190">로그 저장소가 프로세스 간에 공유되는 방법을 결정하는 <see cref="T:System.IO.FileShare" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-190">One of the <see cref="T:System.IO.FileShare" /> values that determines how the log store will be shared among processes.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="e7bfe-191">원하는 버퍼 크기(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-191">The desired buffer size in bytes.</span></span> <span data-ttu-id="e7bfe-192">버퍼 크기에 따라 추가하거나 읽을 수 있는 최대 레코드 크기가 결정됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-192">The buffer size determines the maximum size of the record that can be appended or read.</span></span></param>
        <param name="bufferCount"><span data-ttu-id="e7bfe-193">원하는 버퍼 수입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-193">The desired number of buffers.</span></span></param>
        <summary><span data-ttu-id="e7bfe-194">지정된 로그 저장소 경로, 파일 사용 권한, 액세스 및 공유 모드, 레코드의 버퍼 크기 및 수를 사용하여 <see cref="T:System.IO.Log.LogRecordSequence" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-194">Initializes a new instance of the <see cref="T:System.IO.Log.LogRecordSequence" /> class with a specified path to the log store, file permission, access and share modes, and the buffer size and count for records.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7bfe-195">이 생성자는 지정된 경로, 모드, 액세스를 사용하여, 생성자에서 여는 새 <xref:System.IO.Log.LogRecordSequence> 개체의 새로운 <xref:System.IO.Log.LogStore>를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-195">This constructor initializes a new <xref:System.IO.Log.LogRecordSequence> on a new <xref:System.IO.Log.LogStore> object that it opens with the specified path, mode, and access.</span></span> <span data-ttu-id="e7bfe-196">저장소는 지정된 액세스 권한을 공유하여 열립니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-196">The store is opened sharing the specified access.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7bfe-197"><paramref name="path" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-197"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7bfe-198"><paramref name="path" />가 빈 문자열("")인 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-198"><paramref name="path" /> is an empty string ("").</span></span>  
  
<span data-ttu-id="e7bfe-199">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-199">-or-</span></span> 
 <span data-ttu-id="e7bfe-200"><paramref name="path" />에 공백만 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-200"><paramref name="path" /> contains only white space.</span></span>  
  
<span data-ttu-id="e7bfe-201">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-201">-or-</span></span> 
 <span data-ttu-id="e7bfe-202"><paramref name="path" />에 하나 이상의 잘못된 문자가 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-202"><paramref name="path" /> contains one or more invalid characters.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7bfe-203"><paramref name="mode" />에 잘못된 값이 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-203"><paramref name="mode" /> contains an invalid value.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="e7bfe-204">파일을 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-204">The file cannot be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7bfe-205">로그 저장소를 열 때 I/O 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-205">An I/O error occurs when opening the log store.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e7bfe-206">지정된 로그 시퀀스에 대한 액세스가 운영 체제에서 거부되는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-206">Access for the specified log sequence is denied by the operating system.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e7bfe-207">이 작업이 지원되지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-207">This operation is not supported.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7bfe-208">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-208">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="e7bfe-209">필요한 CLFS(Common Log File System) 구성 요소가 설치되어 있지 않기 때문에 <see cref="T:System.IO.Log.LogRecordSequence" />를 사용할 수 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-209"><see cref="T:System.IO.Log.LogRecordSequence" /> cannot be used because the required Common Log File System (CLFS) component is not installed.</span></span> <span data-ttu-id="e7bfe-210">사용 중인 플랫폼에 대한 CLFS 구성 요소가 있으면 해당 구성 요소를 설치하거나, <see cref="T:System.IO.Log.FileRecordSequence" /> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-210">Install the CLFS component if it is available for your platform, or use the <see cref="T:System.IO.Log.FileRecordSequence" /> class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LogRecordSequence (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share, int bufferSize, int bufferCount, System.Security.AccessControl.FileSecurity fileSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare share, int32 bufferSize, int32 bufferCount, class System.Security.AccessControl.FileSecurity fileSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Int32,System.Security.AccessControl.FileSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LogRecordSequence(System::String ^ path, System::IO::FileMode mode, System::IO::FileAccess access, System::IO::FileShare share, int bufferSize, int bufferCount, System::Security::AccessControl::FileSecurity ^ fileSecurity);" />
      <MemberSignature Language="F#" Value="new System.IO.Log.LogRecordSequence : string * System.IO.FileMode * System.IO.FileAccess * System.IO.FileShare * int * int * System.Security.AccessControl.FileSecurity -&gt; System.IO.Log.LogRecordSequence" Usage="new System.IO.Log.LogRecordSequence (path, mode, access, share, bufferSize, bufferCount, fileSecurity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="share" Type="System.IO.FileShare" />
        <Parameter Name="bufferSize" Type="System.Int32" />
        <Parameter Name="bufferCount" Type="System.Int32" />
        <Parameter Name="fileSecurity" Type="System.Security.AccessControl.FileSecurity" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="e7bfe-211">열려는 로그 저장소의 기본 파일에 대한 상대 또는 절대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-211">A relative or absolute path for the base file of the log store to open.</span></span></param>
        <param name="mode"><span data-ttu-id="e7bfe-212">저장소를 열거나 만드는 방법을 결정하는 유효한 <see cref="T:System.IO.FileMode" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-212">A valid <see cref="T:System.IO.FileMode" /> value that determines how to open or create the store.</span></span></param>
        <param name="access"><span data-ttu-id="e7bfe-213">로그 저장소에 액세스할 수 있는 방법을 결정하는 유효한 <see cref="T:System.IO.FileAccess" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-213">A valid <see cref="T:System.IO.FileAccess" /> value that determines how the log store can be accessed.</span></span></param>
        <param name="share"><span data-ttu-id="e7bfe-214">로그 저장소가 프로세스 간에 공유되는 방법을 결정하는 유효한 <see cref="T:System.IO.FileShare" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-214">A valid <see cref="T:System.IO.FileShare" /> value that determines how the log store will be shared among processes.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="e7bfe-215">원하는 버퍼 크기(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-215">The desired buffer size in bytes.</span></span> <span data-ttu-id="e7bfe-216">버퍼 크기에 따라 추가하거나 읽을 수 있는 최대 레코드 크기가 결정됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-216">The buffer size determines the maximum size of the record that can be appended or read.</span></span></param>
        <param name="bufferCount"><span data-ttu-id="e7bfe-217">원하는 버퍼 수입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-217">The desired number of buffers.</span></span></param>
        <param name="fileSecurity"><span data-ttu-id="e7bfe-218">저장소를 만들어야 하는 경우 새로 만든 저장소에 설정할 보안을 지정하는 유효한 <see cref="T:System.Security.AccessControl.FileSecurity" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-218">A valid <see cref="T:System.Security.AccessControl.FileSecurity" /> value that specifies the security to set on the newly created store if the store must be created.</span></span></param>
        <summary><span data-ttu-id="e7bfe-219"><see cref="T:System.IO.Log.LogRecordSequence" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-219">Initializes a new instance of the <see cref="T:System.IO.Log.LogRecordSequence" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7bfe-220"><paramref name="path" />로 지정된 파일이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-220">The file specified by <paramref name="path" /> is not valid.</span></span>  
  
<span data-ttu-id="e7bfe-221">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-221">-or-</span></span> 
<span data-ttu-id="e7bfe-222">지정된 로그 저장소 파일 이름이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-222">The specified log store file name is not valid.</span></span>  
  
<span data-ttu-id="e7bfe-223">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-223">-or-</span></span> 
 <span data-ttu-id="e7bfe-224"><paramref name="mode" /> 값이 <see cref="F:System.IO.FileMode.CreateNew" />이고 쓰기 액세스 권한 없이 사용할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-224"><paramref name="mode" /> has a value of <see cref="F:System.IO.FileMode.CreateNew" />, and cannot be used without write access.</span></span>  
  
<span data-ttu-id="e7bfe-225">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-225">-or-</span></span> 
 <span data-ttu-id="e7bfe-226"><paramref name="mode" /> 값이 <see cref="F:System.IO.FileMode.OpenOrCreate" />이고 쓰기 액세스 권한 없이 사용할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-226"><paramref name="mode" /> has a value of <see cref="F:System.IO.FileMode.OpenOrCreate" />, and cannot be used without write access.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7bfe-227">하나 이상의 인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-227">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7bfe-228">하나 이상의 인수가 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-228">One or more of the arguments are out of range.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="e7bfe-229"><paramref name="path" />로 지정된 파일을 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-229">The file specified by <paramref name="path" /> cannot be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7bfe-230">예기치 못한 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-230">The request could not be performed because of an unexpected I/O exception.</span></span>  
  
<span data-ttu-id="e7bfe-231">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-231">-or-</span></span> 
<span data-ttu-id="e7bfe-232"><paramref name="path" />로 지정된 파일을 다른 프로세스에서 사용 중이기 때문에 액세스할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-232">The file specified by <paramref name="path" /> cannot be accessed because it is in use by another process.</span></span>  
  
<span data-ttu-id="e7bfe-233">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-233">-or-</span></span> 
<span data-ttu-id="e7bfe-234"><paramref name="path" />로 지정된 파일이나 디렉터리가 이미 있기 때문에 해당 파일을 만들 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-234">The file specified by <paramref name="path" /> cannot be created because the file or directory already exists.</span></span>  
  
<span data-ttu-id="e7bfe-235">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-235">-or-</span></span> 
<span data-ttu-id="e7bfe-236">로그 핸들을 스레드 풀에 바인딩할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-236">The log handle could not be bound to the thread pool.</span></span>  
  
<span data-ttu-id="e7bfe-237">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-237">-or-</span></span> 
<span data-ttu-id="e7bfe-238">지정된 로그 파일 형식이나 버전이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-238">The specified log file format or version is invalid.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e7bfe-239">이 작업이 지원되지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-239">This operation is not supported.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7bfe-240">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-240">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7bfe-241">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-241">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="e7bfe-242">필요한 CLFS(Common Log File System) 구성 요소가 설치되어 있지 않기 때문에 <see cref="T:System.IO.Log.LogRecordSequence" />를 사용할 수 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-242"><see cref="T:System.IO.Log.LogRecordSequence" /> cannot be used because the required Common Log File System (CLFS) component is not installed.</span></span> <span data-ttu-id="e7bfe-243">사용 중인 플랫폼에 대한 CLFS 구성 요소가 있으면 해당 구성 요소를 설치하거나, <see cref="T:System.IO.Log.FileRecordSequence" /> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-243">Install the CLFS component if it is available for your platform, or use the <see cref="T:System.IO.Log.FileRecordSequence" /> class.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7bfe-244">레코드 시퀀스가 꽉 찼습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-244">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e7bfe-245">지정된 로그 시퀀스에 대한 액세스가 운영 체제에서 거부되는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-245">Access for the specified log sequence is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AdvanceBaseSequenceNumber">
      <MemberSignature Language="C#" Value="public void AdvanceBaseSequenceNumber (System.IO.Log.SequenceNumber newBaseSequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AdvanceBaseSequenceNumber(valuetype System.IO.Log.SequenceNumber newBaseSequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.AdvanceBaseSequenceNumber(System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AdvanceBaseSequenceNumber (newBaseSequenceNumber As SequenceNumber)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AdvanceBaseSequenceNumber(System::IO::Log::SequenceNumber newBaseSequenceNumber);" />
      <MemberSignature Language="F#" Value="abstract member AdvanceBaseSequenceNumber : System.IO.Log.SequenceNumber -&gt; unit&#xA;override this.AdvanceBaseSequenceNumber : System.IO.Log.SequenceNumber -&gt; unit" Usage="logRecordSequence.AdvanceBaseSequenceNumber newBaseSequenceNumber" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.AdvanceBaseSequenceNumber(System.IO.Log.SequenceNumber)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newBaseSequenceNumber" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="newBaseSequenceNumber"><span data-ttu-id="e7bfe-246">로그에 대한 새 기준 <see cref="T:System.IO.Log.SequenceNumber" />를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-246">Specifies the new base <see cref="T:System.IO.Log.SequenceNumber" /> for the log.</span></span> <span data-ttu-id="e7bfe-247">이 번호는 로그의 현재 기준 시퀀스 번호부터 마지막 시퀀스 번호까지의 범위 내에 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-247">This must lie in the range between the current base sequence number and the last sequence number of the log inclusively.</span></span></param>
        <summary><span data-ttu-id="e7bfe-248">로그의 기준 시퀀스 번호를 앞으로 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-248">Moves the base sequence number of the log forward.</span></span> <span data-ttu-id="e7bfe-249">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-249">This method cannot be inherited.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7bfe-250">이 메서드는 레코드에서 공간을 확보하기 위해 주로 <xref:System.IO.Log.LogRecordSequence.TailPinned> 이벤트와 함께 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-250">This method is often used with the <xref:System.IO.Log.LogRecordSequence.TailPinned> event to free up space in a record.</span></span> <span data-ttu-id="e7bfe-251"><xref:System.IO.Log.LogRecordSequence.TailPinned> 이벤트는 공간을 확보하기 위해 시퀀스의 테일(기준 시퀀스 번호)을 앞으로 이동해야 함을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-251">The <xref:System.IO.Log.LogRecordSequence.TailPinned> event indicates that the tail of the sequence (that is, the base sequence number) needs to be moved forward to free up space.</span></span> <span data-ttu-id="e7bfe-252">공간 확보는 <xref:System.IO.Log.LogRecordSequence.WriteRestartArea%2A> 메서드를 사용하여 재시작 영역을 쓰거나, 로그를 자르고 <xref:System.IO.Log.LogRecordSequence.AdvanceBaseSequenceNumber%2A> 메서드를 사용하여 로그의 기준 시퀀스 번호를 `newBaseSequenceNumber` 매개 변수에 지정된 번호로 앞당겨서 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-252">Freeing space can be done by either writing restart areas using the <xref:System.IO.Log.LogRecordSequence.WriteRestartArea%2A> method, or truncating the log and using the <xref:System.IO.Log.LogRecordSequence.AdvanceBaseSequenceNumber%2A> method to advance the base sequence number of a log to the one specified by the `newBaseSequenceNumber` parameter.</span></span> <span data-ttu-id="e7bfe-253">예제 부분의 코드 샘플에서는 두 번째 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-253">The code sample in the Example section demonstrates the second approach.</span></span>  
  
 <span data-ttu-id="e7bfe-254">이 메서드를 호출하는 것은 재시작 레코드를 로그에 쓰지 않는다는 점을 제외하고 <xref:System.IO.Log.LogRecordSequence.WriteRestartArea%2A> 메서드를 사용하여 새 기준 시퀀스 번호를 설정하는 것과 동일합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-254">Note that calling this method is the same as setting a new base sequence number using the <xref:System.IO.Log.LogRecordSequence.WriteRestartArea%2A> method, except that no restart record is written to the log.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7bfe-255">다음 예제에서는 <xref:System.IO.Log.LogRecordSequence.AdvanceBaseSequenceNumber%2A> 메서드를 <xref:System.IO.Log.LogRecordSequence.TailPinned> 이벤트와 함께 사용하여 로그 시퀀스에서 공간을 확보하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-255">This example shows how to use the <xref:System.IO.Log.LogRecordSequence.AdvanceBaseSequenceNumber%2A> method with the <xref:System.IO.Log.LogRecordSequence.TailPinned> event to free up space in a log sequence.</span></span>  
  
```  
recordSequence.RetryAppend = true;  
recordSequence.TailPinned += new EventHandler<TailPinnedEventArgs>(HandleTailPinned);  
  
void HandleTailPinned(object sender, TailPinnedEventArgs tailPinnedEventArgs)  
{  
   // tailPinnedEventArgs.TargetSequenceNumber is the target   
   // sequence number to free up space to.    
   // However, this sequence number is not necessarily valid.  We have  
   // to use this sequence number as a starting point for finding a  
   // valid point within the log to advance toward. You need to  
   // identify a record with a sequence number equal to, or greater  
   // than TargetSequenceNumber; let's call this   
   // realTargetSequenceNumber. Once found, move the base  
  
   recordSequence.AdvanceBaseSequenceNumber(realTargetSequenceNumber);  
  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7bfe-256"><paramref name="newBaseSequenceNumber" />이 이 시퀀스에 유효하지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-256"><paramref name="newBaseSequenceNumber" /> is not valid for this sequence.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7bfe-257">활성 로그의 기존 또는 새 아카이브 테일이나 베이스가 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-257">A new or existing archive tail or base of the active log is invalid.</span></span>  
  
<span data-ttu-id="e7bfe-258">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-258">-or-</span></span> 
 <span data-ttu-id="e7bfe-259"><paramref name="newBaseSequenceNumber" />이 이 시퀀스의 기준 시퀀스 번호와 마지막 시퀀스 번호 사이에 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-259"><paramref name="newBaseSequenceNumber" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7bfe-260">예기치 못한 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-260">The request could not be performed because of an unexpected I/O exception.</span></span>  
  
<span data-ttu-id="e7bfe-261">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-261">-or-</span></span> 
<span data-ttu-id="e7bfe-262">I/O 디바이스 오류 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-262">The request could not be performed because of an I/O device error.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e7bfe-263">지정된 로그에 범위가 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-263">The specified log does not have any extents.</span></span> <span data-ttu-id="e7bfe-264">레코드 시퀀스를 사용하기 전에 범위를 하나 이상 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-264">One or more extents must be created before a record sequence may be used.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7bfe-265">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-265">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7bfe-266">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-266">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e7bfe-267">지정된 로그 시퀀스에 대한 액세스가 운영 체제에서 거부되는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-267">Access for the specified log sequence is denied by the operating system.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7bfe-268">레코드 시퀀스가 꽉 찼습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-268">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Append">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e7bfe-269">로그 레코드를 <see cref="T:System.IO.Log.IRecordSequence" />에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-269">Writes a log record to the <see cref="T:System.IO.Log.IRecordSequence" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e7bfe-270">다음 예제에서는 <xref:System.IO.Log.LogRecordSequence.Append%2A> 멤버를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-270">This example shows how to use the <xref:System.IO.Log.LogRecordSequence.Append%2A> member</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#5)]
 [!code-vb[S_UELogRecordSequence#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Append(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions);" />
      <MemberSignature Language="F#" Value="abstract member Append : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions -&gt; System.IO.Log.SequenceNumber&#xA;override this.Append : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions -&gt; System.IO.Log.SequenceNumber" Usage="logRecordSequence.Append (data, nextUndoRecord, previousRecord, recordAppendOptions)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="e7bfe-271">연결하여 레코드로 추가할 바이트 배열 세그먼트의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-271">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="e7bfe-272">사용자가 지정한 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-272">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="e7bfe-273">이전 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-273">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="e7bfe-274">데이터를 쓰는 방법을 지정하는 <see cref="T:System.IO.Log.RecordAppendOptions" />의 유효한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-274">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <summary><span data-ttu-id="e7bfe-275">로그 레코드를 <see cref="T:System.IO.Log.LogRecordSequence" />에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-275">Writes a log record to the <see cref="T:System.IO.Log.LogRecordSequence" />.</span></span> <span data-ttu-id="e7bfe-276">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-276">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7bfe-277">추가된 로그 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-277">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7bfe-278">`data` 매개 변수에 포함된 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-278">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e7bfe-279">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-279">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="e7bfe-280">일반적으로 이 메서드는 레코드를 쓰기 전에 완료됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-280">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="e7bfe-281">레코드가 기록되도록 하려면 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 매개 변수를 사용하여 `recordAppendOptions` 플래그를 지정하거나, <xref:System.IO.Log.LogRecordSequence.Flush%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-281">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.LogRecordSequence.Flush%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7bfe-282">다음 예제에서는 이 메서드를 사용하여 로그 레코드를 시퀀스에 추가하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-282">The following example demonstrates how to use this method to append a log record to the sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#13](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mymultiplexlog.cs#13)]
 [!code-vb[S_UELogRecordSequence#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mymultiplexlog.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7bfe-283"><paramref name="userRecord" /> 또는 <paramref name="previousRecord" />가 이 시퀀스에 부적합한 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-283"><paramref name="userRecord" /> or <paramref name="previousRecord" /> is not valid for this sequence.</span></span>  
  
<span data-ttu-id="e7bfe-284">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-284">-or-</span></span> 
 <span data-ttu-id="e7bfe-285"><paramref name="data" />가 최대 레코드 크기보다 커서 추가할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-285"><paramref name="data" /> cannot be appended because it is larger than the maximum record size.</span></span>  
  
<span data-ttu-id="e7bfe-286">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-286">-or-</span></span> 
 <span data-ttu-id="e7bfe-287">이 레코드 시퀀스를 통해 <paramref name="reservations" />를 만들 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-287"><paramref name="reservations" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7bfe-288">하나 이상의 인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-288">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7bfe-289"><paramref name="userRecord" /> 또는 <paramref name="previousRecord" />가 이 시퀀스의 기준 시퀀스 번호와 마지막 시퀀스 번호 사이에 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-289"><paramref name="userRecord" /> or <paramref name="previousRecord" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7bfe-290">예기치 못한 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-290">The request could not be performed because of an unexpected I/O exception.</span></span>  
  
<span data-ttu-id="e7bfe-291">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-291">-or-</span></span> 
<span data-ttu-id="e7bfe-292">I/O 디바이스 오류 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-292">The request could not be performed because of an I/O device error.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e7bfe-293">읽기 전용 액세스 권한으로 레코드 시퀀스를 열었으므로 작업을 수행할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-293">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7bfe-294">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-294">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7bfe-295">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-295">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7bfe-296">레코드 시퀀스가 꽉 찬 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-296">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e7bfe-297">지정된 로그 시퀀스에 대한 액세스가 운영 체제에서 거부되는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-297">Access for the specified log sequence is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber userRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber userRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Append(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber userRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions);" />
      <MemberSignature Language="F#" Value="abstract member Append : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions -&gt; System.IO.Log.SequenceNumber&#xA;override this.Append : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions -&gt; System.IO.Log.SequenceNumber" Usage="logRecordSequence.Append (data, userRecord, previousRecord, recordAppendOptions)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="userRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="e7bfe-298">연결하여 레코드로 추가할 바이트 배열 세그먼트의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-298">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="userRecord"><span data-ttu-id="e7bfe-299">사용자가 지정한 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-299">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="e7bfe-300">이전 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-300">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="e7bfe-301">데이터를 쓰는 방법을 지정하는 <see cref="T:System.IO.Log.RecordAppendOptions" />의 유효한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-301">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <summary><span data-ttu-id="e7bfe-302">로그 레코드를 <see cref="T:System.IO.Log.IRecordSequence" />에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-302">Appends a log record to the <see cref="T:System.IO.Log.IRecordSequence" />.</span></span> <span data-ttu-id="e7bfe-303">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-303">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7bfe-304">추가된 로그 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-304">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7bfe-305">`data` 매개 변수에 포함된 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-305">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e7bfe-306">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-306">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="e7bfe-307">일반적으로 이 메서드는 레코드를 쓰기 전에 완료됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-307">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="e7bfe-308">레코드가 기록되도록 하려면 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 매개 변수를 사용하여 `recordAppendOptions` 플래그를 지정하거나, <xref:System.IO.Log.LogRecordSequence.Flush%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-308">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.LogRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7bfe-309"><paramref name="userRecord" /> 또는 <paramref name="previousRecord" />가 이 시퀀스에 부적합한 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-309"><paramref name="userRecord" /> or <paramref name="previousRecord" /> is not valid for this sequence.</span></span>  
  
<span data-ttu-id="e7bfe-310">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-310">-or-</span></span> 
 <span data-ttu-id="e7bfe-311"><paramref name="data" />가 최대 레코드 크기보다 커서 추가할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-311"><paramref name="data" /> cannot be appended because it is larger than the maximum record size.</span></span>  
  
<span data-ttu-id="e7bfe-312">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-312">-or-</span></span> 
 <span data-ttu-id="e7bfe-313">이 레코드 시퀀스를 통해 <paramref name="reservations" />를 만들 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-313"><paramref name="reservations" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7bfe-314">하나 이상의 인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-314">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7bfe-315"><paramref name="userRecord" /> 또는 <paramref name="previousRecord" />가 이 시퀀스의 기준 시퀀스 번호와 마지막 시퀀스 번호 사이에 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-315"><paramref name="userRecord" /> or <paramref name="previousRecord" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7bfe-316">예기치 못한 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-316">The request could not be performed because of an unexpected I/O exception.</span></span>  
  
<span data-ttu-id="e7bfe-317">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-317">-or-</span></span> 
<span data-ttu-id="e7bfe-318">I/O 디바이스 오류 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-318">The request could not be performed because of an I/O device error.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e7bfe-319">읽기 전용 액세스 권한으로 레코드 시퀀스를 열었으므로 작업을 수행할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-319">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7bfe-320">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-320">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7bfe-321">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-321">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7bfe-322">레코드 시퀀스가 꽉 찬 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-322">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e7bfe-323">지정된 로그 시퀀스에 대한 액세스가 운영 체제에서 거부되는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-323">Access for the specified log sequence is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Append(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member Append : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber&#xA;override this.Append : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber" Usage="logRecordSequence.Append (data, nextUndoRecord, previousRecord, recordAppendOptions, reservations)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="e7bfe-324">연결하여 레코드로 추가할 바이트 배열 세그먼트의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-324">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="e7bfe-325">사용자가 지정한 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-325">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="e7bfe-326">이전 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-326">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="e7bfe-327">데이터를 쓰는 방법을 지정하는 <see cref="T:System.IO.Log.RecordAppendOptions" />의 유효한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-327">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservations"><span data-ttu-id="e7bfe-328">이 레코드에 사용해야 하는 예약이 포함된 <see cref="T:System.IO.Log.ReservationCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-328">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span></span></param>
        <summary><span data-ttu-id="e7bfe-329">시퀀스에서 이전에 예약된 공간을 사용하여 로그 레코드를 <see cref="T:System.IO.Log.IRecordSequence" />에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-329">Appends a log record to the <see cref="T:System.IO.Log.IRecordSequence" />, using space previously reserved in the sequence.</span></span> <span data-ttu-id="e7bfe-330">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-330">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7bfe-331">추가된 로그 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-331">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7bfe-332">`data` 매개 변수에 포함된 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-332">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e7bfe-333">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-333">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="e7bfe-334">추가된 레코드는 `reservations` 매개 변수로 지정된 예약을 사용하여 이전에 예약된 공간을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-334">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="e7bfe-335">추가 작업이 성공하면 데이터가 포함될 수 있는 가장 작은 예약 영역을 사용하고 해당 예약 영역이 컬렉션에서 제거됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-335">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="e7bfe-336">일반적으로 이 메서드는 레코드를 쓰기 전에 완료됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-336">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="e7bfe-337">레코드가 기록되도록 하려면 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 매개 변수를 사용하여 `recordAppendOptions` 플래그를 지정하거나, <xref:System.IO.Log.LogRecordSequence.Flush%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-337">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.LogRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7bfe-338"><paramref name="userRecord" /> 또는 <paramref name="previousRecord" />가 이 시퀀스에 부적합한 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-338"><paramref name="userRecord" /> or <paramref name="previousRecord" /> is not valid for this sequence.</span></span>  
  
<span data-ttu-id="e7bfe-339">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-339">-or-</span></span> 
 <span data-ttu-id="e7bfe-340"><paramref name="data" />가 최대 레코드 크기보다 커서 추가할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-340"><paramref name="data" /> cannot be appended because it is larger than the maximum record size.</span></span>  
  
<span data-ttu-id="e7bfe-341">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-341">-or-</span></span> 
 <span data-ttu-id="e7bfe-342">이 레코드 시퀀스를 통해 <paramref name="reservations" />를 만들 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-342"><paramref name="reservations" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7bfe-343">하나 이상의 인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-343">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7bfe-344"><paramref name="userRecord" /> 또는 <paramref name="previousRecord" />가 이 시퀀스의 기준 시퀀스 번호와 마지막 시퀀스 번호 사이에 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-344"><paramref name="userRecord" /> or <paramref name="previousRecord" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7bfe-345">예기치 못한 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-345">The request could not be performed because of an unexpected I/O exception.</span></span>  
  
<span data-ttu-id="e7bfe-346">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-346">-or-</span></span> 
<span data-ttu-id="e7bfe-347">I/O 디바이스 오류 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-347">The request could not be performed because of an I/O device error.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e7bfe-348">읽기 전용 액세스 권한으로 레코드 시퀀스를 열었으므로 작업을 수행할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-348">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7bfe-349">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-349">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7bfe-350">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-350">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7bfe-351">레코드 시퀀스가 꽉 찬 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-351">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e7bfe-352">지정된 로그 시퀀스에 대한 액세스가 운영 체제에서 거부되는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-352">Access for the specified log sequence is denied by the operating system.</span></span></exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException"><span data-ttu-id="e7bfe-353"><paramref name="data" />에서 <paramref name="reservations" />에 맞는 크기의 예약을 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-353">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber userRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber userRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Append(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber userRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member Append : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber&#xA;override this.Append : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber" Usage="logRecordSequence.Append (data, userRecord, previousRecord, recordAppendOptions, reservations)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="userRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="e7bfe-354">연결하여 레코드로 추가할 바이트 배열 세그먼트의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-354">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="userRecord"><span data-ttu-id="e7bfe-355">사용자가 지정한 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-355">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="e7bfe-356">이전 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-356">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="e7bfe-357">데이터를 쓰는 방법을 지정하는 <see cref="T:System.IO.Log.RecordAppendOptions" />의 유효한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-357">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservations"><span data-ttu-id="e7bfe-358">이 레코드에 사용해야 하는 예약이 포함된 <see cref="T:System.IO.Log.ReservationCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-358">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span></span></param>
        <summary><span data-ttu-id="e7bfe-359">시퀀스에서 이전에 예약된 공간을 사용하여 로그 레코드를 <see cref="T:System.IO.Log.IRecordSequence" />에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-359">Appends a log record to the <see cref="T:System.IO.Log.IRecordSequence" />, using space previously reserved in the sequence.</span></span> <span data-ttu-id="e7bfe-360">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-360">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7bfe-361">추가된 로그 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-361">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7bfe-362">`data` 매개 변수에 포함된 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-362">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e7bfe-363">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-363">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="e7bfe-364">추가된 레코드는 `reservations` 매개 변수로 지정된 예약을 사용하여 이전에 예약된 공간을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-364">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="e7bfe-365">추가 작업이 성공하면 데이터가 포함될 수 있는 가장 작은 예약 영역을 사용하고 해당 예약 영역이 컬렉션에서 제거됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-365">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="e7bfe-366">일반적으로 이 메서드는 레코드를 쓰기 전에 완료됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-366">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="e7bfe-367">레코드가 기록되도록 하려면 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 매개 변수를 사용하여 `recordAppendOptions` 플래그를 지정하거나, <xref:System.IO.Log.IRecordSequence.Flush%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-367">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7bfe-368"><paramref name="userRecord" /> 또는 <paramref name="previousRecord" />가 이 시퀀스에 부적합한 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-368"><paramref name="userRecord" /> or <paramref name="previousRecord" /> is not valid for this sequence.</span></span>  
  
<span data-ttu-id="e7bfe-369">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-369">-or-</span></span> 
 <span data-ttu-id="e7bfe-370"><paramref name="data" />가 최대 레코드 크기보다 커서 추가할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-370"><paramref name="data" /> cannot be appended because it is larger than the maximum record size.</span></span>  
  
<span data-ttu-id="e7bfe-371">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-371">-or-</span></span> 
 <span data-ttu-id="e7bfe-372">이 레코드 시퀀스를 통해 <paramref name="reservations" />를 만들 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-372"><paramref name="reservations" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7bfe-373">하나 이상의 인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-373">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7bfe-374"><paramref name="userRecord" /> 또는 <paramref name="previousRecord" />가 이 시퀀스의 기준 시퀀스 번호와 마지막 시퀀스 번호 사이에 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-374"><paramref name="userRecord" /> or <paramref name="previousRecord" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7bfe-375">예기치 못한 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-375">The request could not be performed because of an unexpected I/O exception.</span></span>  
  
<span data-ttu-id="e7bfe-376">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-376">-or-</span></span> 
<span data-ttu-id="e7bfe-377">I/O 디바이스 오류 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-377">The request could not be performed because of an I/O device error.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e7bfe-378">읽기 전용 액세스 권한으로 레코드 시퀀스를 열었으므로 작업을 수행할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-378">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7bfe-379">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-379">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7bfe-380">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-380">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7bfe-381">레코드 시퀀스가 꽉 찬 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-381">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e7bfe-382">지정된 로그 시퀀스에 대한 액세스가 운영 체제에서 거부되는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-382">Access for the specified log sequence is denied by the operating system.</span></span></exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException"><span data-ttu-id="e7bfe-383"><paramref name="data" />에서 <paramref name="reservations" />에 맞는 크기의 예약을 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-383">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BaseSequenceNumber">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber BaseSequenceNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.SequenceNumber BaseSequenceNumber" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogRecordSequence.BaseSequenceNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseSequenceNumber As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::SequenceNumber BaseSequenceNumber { System::IO::Log::SequenceNumber get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseSequenceNumber : System.IO.Log.SequenceNumber" Usage="System.IO.Log.LogRecordSequence.BaseSequenceNumber" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.BaseSequenceNumber</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7bfe-384">현재 <see cref="T:System.IO.Log.LogRecordSequence" />에서 유효한 첫 번째 레코드의 시퀀스 번호를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-384">Gets the sequence number of the first valid record in the current <see cref="T:System.IO.Log.LogRecordSequence" />.</span></span></summary>
        <value><span data-ttu-id="e7bfe-385"><see cref="T:System.IO.Log.LogRecordSequence" />에서 유효한 레코드에 해당하는 가장 작은 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-385">The lowest sequence number that corresponds to a valid record in the <see cref="T:System.IO.Log.LogRecordSequence" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7bfe-386">유효한 시퀀스 번호는 <xref:System.IO.Log.LogRecordSequence.BaseSequenceNumber%2A>보다 크거나 같고 <xref:System.IO.Log.LogRecordSequence.LastSequenceNumber%2A>보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-386">Valid sequence numbers are greater than or equal to <xref:System.IO.Log.LogRecordSequence.BaseSequenceNumber%2A> and less than <xref:System.IO.Log.LogRecordSequence.LastSequenceNumber%2A>.</span></span>  
  
 <span data-ttu-id="e7bfe-387"><xref:System.IO.Log.LogRecordSequence.WriteRestartArea%2A> 메서드 또는 <xref:System.IO.Log.LogRecordSequence.AdvanceBaseSequenceNumber%2A> 메서드를 호출하여 이 속성의 값을 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-387">The value of this property can be changed by calling the <xref:System.IO.Log.LogRecordSequence.WriteRestartArea%2A> method or <xref:System.IO.Log.LogRecordSequence.AdvanceBaseSequenceNumber%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7bfe-388">다음 예제에서는 루프에서 <xref:System.IO.Log.LogRecordSequence.BaseSequenceNumber%2A> 멤버를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-388">This example shows how to use the <xref:System.IO.Log.LogRecordSequence.BaseSequenceNumber%2A> member in a loop.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#10](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mymultiplexlog.cs#10)]
 [!code-vb[S_UELogRecordSequence#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mymultiplexlog.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7bfe-389">시퀀스가 삭제된 후 속성에 액세스한 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-389">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAppend">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e7bfe-390">비동기 추가 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-390">Begins an asynchronous append operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * AsyncCallback * obj -&gt; IAsyncResult" Usage="logRecordSequence.BeginAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="e7bfe-391">연결하여 레코드로 추가할 바이트 배열 세그먼트의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-391">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="e7bfe-392">사용자가 지정한 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-392">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="e7bfe-393">이전 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-393">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="e7bfe-394">데이터를 쓰는 방법을 지정하는 <see cref="T:System.IO.Log.RecordAppendOptions" />의 유효한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-394">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="callback"><span data-ttu-id="e7bfe-395">추가가 완료되면 호출되는 선택적 비동기 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-395">An optional asynchronous callback, to be called when the append is complete.</span></span></param>
        <param name="state"><span data-ttu-id="e7bfe-396">이 특정 비동기 추가 요청을 다른 요청과 구별하는 사용자 제공 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-396">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span></span></param>
        <summary><span data-ttu-id="e7bfe-397">비동기 추가 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-397">Begins an asynchronous append operation.</span></span> <span data-ttu-id="e7bfe-398">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-398">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7bfe-399">보류 중일 수 있는 비동기 추가를 나타내는 <see cref="T:System.IAsyncResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-399">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7bfe-400">이 메서드에서 반환된 <xref:System.IAsyncResult>를 <xref:System.IO.Log.LogRecordSequence.EndAppend%2A> 메서드에 전달하여 추가 작업을 완료하고 리소스를 적절하게 해제할 수 있도록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-400">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.LogRecordSequence.EndAppend%2A> method to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="e7bfe-401">비동기 추가 중에 오류가 발생한 경우 이 메서드에서 반환된 <xref:System.IO.Log.LogRecordSequence.EndAppend%2A>를 사용하여 <xref:System.IAsyncResult> 메서드를 호출하기 전에는 예외가 throw되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-401">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.LogRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="e7bfe-402">`data` 매개 변수에 포함된 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-402">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e7bfe-403">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-403">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="e7bfe-404">일반적으로 이 메서드는 레코드를 쓰기 전에 완료됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-404">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="e7bfe-405">레코드가 기록되도록 하려면 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 매개 변수를 사용하여 `recordAppendOptions` 플래그를 지정하거나, <xref:System.IO.Log.LogRecordSequence.Flush%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-405">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.LogRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7bfe-406"><paramref name="nextUndoRecord" /> 또는 <paramref name="previousRecord" />가 이 시퀀스에 부적합한 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-406"><paramref name="nextUndoRecord" /> or <paramref name="previousRecord" /> is not valid for this sequence.</span></span>  
  
<span data-ttu-id="e7bfe-407">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-407">-or-</span></span> 
 <span data-ttu-id="e7bfe-408"><paramref name="data" />가 최대 레코드 크기보다 커서 추가할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-408"><paramref name="data" /> cannot be appended because it is larger than the maximum record size.</span></span>  
  
<span data-ttu-id="e7bfe-409">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-409">-or-</span></span> 
 <span data-ttu-id="e7bfe-410">이 레코드 시퀀스를 통해 <paramref name="reservations" />를 만들 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-410"><paramref name="reservations" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7bfe-411">하나 이상의 인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-411">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7bfe-412"><paramref name="nextUndoRecord" /> 또는 <paramref name="previousRecord" />가 이 시퀀스의 기준 시퀀스 번호와 마지막 시퀀스 번호 사이에 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-412"><paramref name="nextUndoRecord" /> or <paramref name="previousRecord" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7bfe-413">예기치 못한 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-413">The request could not be performed because of an unexpected I/O exception.</span></span>  
  
<span data-ttu-id="e7bfe-414">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-414">-or-</span></span> 
<span data-ttu-id="e7bfe-415">I/O 디바이스 오류 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-415">The request could not be performed because of an I/O device error.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e7bfe-416">읽기 전용 액세스 권한으로 레코드 시퀀스를 열었으므로 작업을 수행할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-416">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7bfe-417">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-417">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7bfe-418">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-418">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7bfe-419">레코드 시퀀스가 꽉 찬 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-419">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e7bfe-420">지정된 로그 시퀀스에 대한 액세스가 운영 체제에서 거부되는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-420">Access for the specified log sequence is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber userRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber userRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber userRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * AsyncCallback * obj -&gt; IAsyncResult" Usage="logRecordSequence.BeginAppend (data, userRecord, previousRecord, recordAppendOptions, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="userRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="e7bfe-421">연결하여 레코드로 추가할 바이트 배열 세그먼트의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-421">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="userRecord"><span data-ttu-id="e7bfe-422">사용자가 지정한 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-422">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="e7bfe-423">이전 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-423">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="e7bfe-424">데이터를 쓰는 방법을 지정하는 <see cref="T:System.IO.Log.RecordAppendOptions" />의 유효한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-424">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="callback"><span data-ttu-id="e7bfe-425">추가가 완료되면 호출되는 선택적 비동기 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-425">An optional asynchronous callback, to be called when the append is complete.</span></span></param>
        <param name="state"><span data-ttu-id="e7bfe-426">이 특정 비동기 추가 요청을 다른 요청과 구별하는 사용자 제공 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-426">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span></span></param>
        <summary><span data-ttu-id="e7bfe-427">비동기 추가 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-427">Begins an asynchronous append operation.</span></span> <span data-ttu-id="e7bfe-428">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-428">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7bfe-429">보류 중일 수 있는 비동기 추가를 나타내는 <see cref="T:System.IAsyncResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-429">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7bfe-430">이 메서드에서 반환된 <xref:System.IAsyncResult>를 <xref:System.IO.Log.LogRecordSequence.EndAppend%2A> 메서드에 전달하여 추가 작업을 완료하고 리소스를 적절하게 해제할 수 있도록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-430">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.LogRecordSequence.EndAppend%2A> method to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="e7bfe-431">비동기 추가 중에 오류가 발생한 경우 이 메서드에서 반환된 <xref:System.IO.Log.LogRecordSequence.EndAppend%2A>를 사용하여 <xref:System.IAsyncResult> 메서드를 호출하기 전에는 예외가 throw되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-431">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.LogRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="e7bfe-432">`data` 매개 변수에 포함된 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-432">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e7bfe-433">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-433">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="e7bfe-434">일반적으로 이 메서드는 레코드를 쓰기 전에 완료됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-434">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="e7bfe-435">레코드가 기록되도록 하려면 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 매개 변수를 사용하여 `recordAppendOptions` 플래그를 지정하거나, <xref:System.IO.Log.LogRecordSequence.Flush%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-435">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.LogRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7bfe-436"><paramref name="userRecord" /> 또는 <paramref name="previousRecord" />가 이 시퀀스에 부적합한 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-436"><paramref name="userRecord" /> or <paramref name="previousRecord" /> is not valid for this sequence.</span></span>  
  
<span data-ttu-id="e7bfe-437">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-437">-or-</span></span> 
 <span data-ttu-id="e7bfe-438"><paramref name="data" />가 최대 레코드 크기보다 커서 추가할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-438"><paramref name="data" /> cannot be appended because it is larger than the maximum record size.</span></span>  
  
<span data-ttu-id="e7bfe-439">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-439">-or-</span></span> 
 <span data-ttu-id="e7bfe-440">이 레코드 시퀀스를 통해 <paramref name="reservations" />를 만들 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-440"><paramref name="reservations" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7bfe-441">하나 이상의 인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-441">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7bfe-442"><paramref name="userRecord" /> 또는 <paramref name="previousRecord" />가 이 시퀀스의 기준 시퀀스 번호와 마지막 시퀀스 번호 사이에 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-442"><paramref name="userRecord" /> or <paramref name="previousRecord" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7bfe-443">예기치 못한 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-443">The request could not be performed because of an unexpected I/O exception.</span></span>  
  
<span data-ttu-id="e7bfe-444">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-444">-or-</span></span> 
<span data-ttu-id="e7bfe-445">I/O 디바이스 오류 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-445">The request could not be performed because of an I/O device error.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e7bfe-446">읽기 전용 액세스 권한으로 레코드 시퀀스를 열었으므로 작업을 수행할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-446">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7bfe-447">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-447">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7bfe-448">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-448">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7bfe-449">레코드 시퀀스가 꽉 찬 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-449">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e7bfe-450">지정된 로그 시퀀스에 대한 액세스가 운영 체제에서 거부되는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-450">Access for the specified log sequence is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult" Usage="logRecordSequence.BeginAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservations, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="e7bfe-451">연결하여 레코드로 추가할 바이트 배열 세그먼트의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-451">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="e7bfe-452">사용자가 지정한 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-452">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="e7bfe-453">이전 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-453">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="e7bfe-454">데이터를 쓰는 방법을 지정하는 <see cref="T:System.IO.Log.RecordAppendOptions" />의 유효한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-454">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservations"><span data-ttu-id="e7bfe-455">이 레코드에 사용해야 하는 예약이 포함된 <see cref="T:System.IO.Log.ReservationCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-455">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span></span></param>
        <param name="callback"><span data-ttu-id="e7bfe-456">추가가 완료되면 호출되는 선택적 비동기 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-456">An optional asynchronous callback, to be called when the append is complete.</span></span></param>
        <param name="state"><span data-ttu-id="e7bfe-457">이 특정 비동기 추가 요청을 다른 요청과 구별하는 사용자 제공 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-457">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span></span></param>
        <summary><span data-ttu-id="e7bfe-458">비동기 추가 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-458">Begins an asynchronous append operation.</span></span> <span data-ttu-id="e7bfe-459">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-459">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7bfe-460">보류 중일 수 있는 비동기 추가를 나타내는 <see cref="T:System.IAsyncResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-460">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7bfe-461">이 메서드에서 반환된 <xref:System.IAsyncResult>를 <xref:System.IO.Log.LogRecordSequence.EndAppend%2A> 메서드에 전달하여 추가 작업을 완료하고 리소스를 적절하게 해제할 수 있도록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-461">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.LogRecordSequence.EndAppend%2A> method to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="e7bfe-462">비동기 추가 중에 오류가 발생한 경우 이 메서드에서 반환된 <xref:System.IO.Log.LogRecordSequence.EndAppend%2A>를 사용하여 <xref:System.IAsyncResult> 메서드를 호출하기 전에는 예외가 throw되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-462">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.LogRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="e7bfe-463">`data` 매개 변수에 포함된 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-463">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e7bfe-464">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-464">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="e7bfe-465">추가된 레코드는 `reservations` 매개 변수로 지정된 예약을 사용하여 이전에 예약된 공간을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-465">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="e7bfe-466">추가 작업이 성공하면 데이터가 포함될 수 있는 가장 작은 예약 영역을 사용하고 해당 예약 영역이 컬렉션에서 제거됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-466">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="e7bfe-467">일반적으로 이 메서드는 레코드를 쓰기 전에 완료됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-467">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="e7bfe-468">레코드가 기록되도록 하려면 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 매개 변수를 사용하여 `recordAppendOptions` 플래그를 지정하거나, <xref:System.IO.Log.LogRecordSequence.Flush%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-468">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.LogRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7bfe-469"><paramref name="userRecord" /> 또는 <paramref name="previousRecord" />가 이 시퀀스에 부적합한 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-469"><paramref name="userRecord" /> or <paramref name="previousRecord" /> is not valid for this sequence.</span></span>  
  
<span data-ttu-id="e7bfe-470">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-470">-or-</span></span> 
 <span data-ttu-id="e7bfe-471"><paramref name="data" />가 최대 레코드 크기보다 커서 추가할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-471"><paramref name="data" /> cannot be appended because it is larger than the maximum record size.</span></span>  
  
<span data-ttu-id="e7bfe-472">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-472">-or-</span></span> 
 <span data-ttu-id="e7bfe-473">이 레코드 시퀀스를 통해 <paramref name="reservations" />를 만들 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-473"><paramref name="reservations" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7bfe-474">하나 이상의 인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-474">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7bfe-475"><paramref name="userRecord" /> 또는 <paramref name="previousRecord" />가 이 시퀀스의 기준 시퀀스 번호와 마지막 시퀀스 번호 사이에 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-475"><paramref name="userRecord" /> or <paramref name="previousRecord" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7bfe-476">예기치 못한 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-476">The request could not be performed because of an unexpected I/O exception.</span></span>  
  
<span data-ttu-id="e7bfe-477">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-477">-or-</span></span> 
<span data-ttu-id="e7bfe-478">I/O 디바이스 오류 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-478">The request could not be performed because of an I/O device error.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e7bfe-479">읽기 전용 액세스 권한으로 레코드 시퀀스를 열었으므로 작업을 수행할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-479">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7bfe-480">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-480">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7bfe-481">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-481">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7bfe-482">레코드 시퀀스가 꽉 찬 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-482">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e7bfe-483">지정된 로그 시퀀스에 대한 액세스가 운영 체제에서 거부되는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-483">Access for the specified log sequence is denied by the operating system.</span></span></exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException"><span data-ttu-id="e7bfe-484"><paramref name="data" />에서 <paramref name="reservations" />에 맞는 크기의 예약을 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-484">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber userRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber userRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber userRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult" Usage="logRecordSequence.BeginAppend (data, userRecord, previousRecord, recordAppendOptions, reservations, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="userRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="e7bfe-485">연결하여 레코드로 추가할 바이트 배열 세그먼트의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-485">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="userRecord"><span data-ttu-id="e7bfe-486">사용자가 지정한 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-486">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="e7bfe-487">이전 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-487">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="e7bfe-488">데이터를 쓰는 방법을 지정하는 <see cref="T:System.IO.Log.RecordAppendOptions" />의 유효한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-488">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservations"><span data-ttu-id="e7bfe-489">이 레코드에 사용해야 하는 예약이 포함된 <see cref="T:System.IO.Log.ReservationCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-489">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span></span></param>
        <param name="callback"><span data-ttu-id="e7bfe-490">추가가 완료되면 호출되는 선택적 비동기 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-490">An optional asynchronous callback, to be called when the append is complete.</span></span></param>
        <param name="state"><span data-ttu-id="e7bfe-491">이 특정 비동기 추가 요청을 다른 요청과 구별하는 사용자 제공 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-491">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span></span></param>
        <summary><span data-ttu-id="e7bfe-492">비동기 추가 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-492">Begins an asynchronous append operation.</span></span> <span data-ttu-id="e7bfe-493">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-493">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7bfe-494">보류 중일 수 있는 비동기 추가를 나타내는 <see cref="T:System.IAsyncResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-494">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7bfe-495">이 메서드에서 반환된 <xref:System.IAsyncResult>를 <xref:System.IO.Log.LogRecordSequence.EndAppend%2A> 메서드에 전달하여 추가 작업을 완료하고 리소스를 적절하게 해제할 수 있도록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-495">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.LogRecordSequence.EndAppend%2A> method to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="e7bfe-496">비동기 추가 중에 오류가 발생한 경우 이 메서드에서 반환된 <xref:System.IO.Log.LogRecordSequence.EndAppend%2A>를 사용하여 <xref:System.IAsyncResult> 메서드를 호출하기 전에는 예외가 throw되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-496">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.LogRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="e7bfe-497">`data` 매개 변수에 포함된 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-497">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e7bfe-498">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-498">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="e7bfe-499">추가된 레코드는 `reservations` 매개 변수로 지정된 예약을 사용하여 이전에 예약된 공간을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-499">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="e7bfe-500">추가 작업이 성공하면 데이터가 포함될 수 있는 가장 작은 예약 영역을 사용하고 해당 예약 영역이 컬렉션에서 제거됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-500">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="e7bfe-501">일반적으로 이 메서드는 레코드를 쓰기 전에 완료됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-501">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="e7bfe-502">레코드가 기록되도록 하려면 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 매개 변수를 사용하여 `recordAppendOptions` 플래그를 지정하거나, <xref:System.IO.Log.LogRecordSequence.Flush%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-502">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.LogRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7bfe-503"><paramref name="userRecord" /> 또는 <paramref name="previousRecord" />가 이 시퀀스에 부적합한 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-503"><paramref name="userRecord" /> or <paramref name="previousRecord" /> is not valid for this sequence.</span></span>  
  
<span data-ttu-id="e7bfe-504">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-504">-or-</span></span> 
 <span data-ttu-id="e7bfe-505"><paramref name="data" />가 최대 레코드 크기보다 커서 추가할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-505"><paramref name="data" /> cannot be appended because it is larger than the maximum record size.</span></span>  
  
<span data-ttu-id="e7bfe-506">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-506">-or-</span></span> 
 <span data-ttu-id="e7bfe-507">이 레코드 시퀀스를 통해 <paramref name="reservations" />를 만들 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-507"><paramref name="reservations" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7bfe-508">하나 이상의 인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-508">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7bfe-509"><paramref name="userRecord" /> 또는 <paramref name="previousRecord" />가 이 시퀀스의 기준 시퀀스 번호와 마지막 시퀀스 번호 사이에 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-509"><paramref name="userRecord" /> or <paramref name="previousRecord" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7bfe-510">예기치 못한 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-510">The request could not be performed because of an unexpected I/O exception.</span></span>  
  
<span data-ttu-id="e7bfe-511">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-511">-or-</span></span> 
<span data-ttu-id="e7bfe-512">I/O 디바이스 오류 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-512">The request could not be performed because of an I/O device error.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e7bfe-513">읽기 전용 액세스 권한으로 레코드 시퀀스를 열었으므로 작업을 수행할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-513">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7bfe-514">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-514">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7bfe-515">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-515">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7bfe-516">레코드 시퀀스가 꽉 찬 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-516">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e7bfe-517">지정된 로그 시퀀스에 대한 액세스가 운영 체제에서 거부되는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-517">Access for the specified log sequence is denied by the operating system.</span></span></exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException"><span data-ttu-id="e7bfe-518"><paramref name="data" />에서 <paramref name="reservations" />에 맞는 크기의 예약을 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-518">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginFlush">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginFlush (System.IO.Log.SequenceNumber sequenceNumber, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginFlush(valuetype System.IO.Log.SequenceNumber sequenceNumber, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.BeginFlush(System.IO.Log.SequenceNumber,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginFlush(System::IO::Log::SequenceNumber sequenceNumber, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginFlush : System.IO.Log.SequenceNumber * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginFlush : System.IO.Log.SequenceNumber * AsyncCallback * obj -&gt; IAsyncResult" Usage="logRecordSequence.BeginFlush (sequenceNumber, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginFlush(System.IO.Log.SequenceNumber,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequenceNumber" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sequenceNumber"><span data-ttu-id="e7bfe-519">써야 하는 최신 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-519">The sequence number of the latest record that must be written.</span></span> <span data-ttu-id="e7bfe-520">이 <see cref="T:System.IO.Log.SequenceNumber" />가 유효하지 않은 경우 모든 레코드를 써야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-520">If this <see cref="T:System.IO.Log.SequenceNumber" /> is invalid, then all records must be written.</span></span></param>
        <param name="callback"><span data-ttu-id="e7bfe-521">플러시가 완료되면 호출되는 선택적 비동기 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-521">An optional asynchronous callback, to be called when the flush is complete.</span></span></param>
        <param name="state"><span data-ttu-id="e7bfe-522">이 특정 비동기 플러시 요청을 다른 요청과 구별하는 사용자 제공 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-522">A user-provided object that distinguishes this particular asynchronous flush request from other requests.</span></span></param>
        <summary><span data-ttu-id="e7bfe-523">시퀀스에서 이전에 예약된 공간을 사용하여 비동기 플러시 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-523">Begins an asynchronous flush operation, using space previously reserved in the sequence.</span></span> <span data-ttu-id="e7bfe-524">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-524">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7bfe-525">보류 중일 수 있는 비동기 플러시 작업을 나타내는 <see cref="T:System.IAsyncResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-525">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous flush operation, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7bfe-526">현재 메서드에서 반환된 <xref:System.IAsyncResult>를 <xref:System.IO.Log.LogRecordSequence.EndFlush%2A> 메서드에 전달하여 플러시를 완료하고 리소스를 적절하게 해제해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-526">You should pass the <xref:System.IAsyncResult> returned by the current method to the <xref:System.IO.Log.LogRecordSequence.EndFlush%2A> method to ensure that the flush completes and resources are freed appropriately.</span></span> <span data-ttu-id="e7bfe-527">비동기 플러시 중에 오류가 발생하는 경우 이 메서드에서 반환된 <xref:System.IO.Log.LogRecordSequence.EndFlush%2A>를 사용하여 <xref:System.IAsyncResult> 메서드를 호출하기 전에는 예외가 throw되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-527">If an error occurs during an asynchronous flush, an exception is not thrown until the <xref:System.IO.Log.LogRecordSequence.EndFlush%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="e7bfe-528">이 메서드를 호출하면 <xref:System.IO.Log.LogRecordSequence>에 추가된 모든 레코드가 영속적으로 기록됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-528">Calling this method ensures that all records that have been appended to the <xref:System.IO.Log.LogRecordSequence> are durably written.</span></span>  
  
 <span data-ttu-id="e7bfe-529">레코드 시퀀스가 삭제되었거나 잘못된 인수를 전달하는 경우 이 작업 내에서 즉시 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-529">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="e7bfe-530">비동기 플러시 요청 중에 발생한 오류(예: I/O 요청 중의 디스크 오류)로 인해 <xref:System.IO.Log.LogRecordSequence.EndFlush%2A> 메서드를 호출할 때 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-530">Errors that occurred during an asynchronous flush request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.LogRecordSequence.EndFlush%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7bfe-531"><paramref name="sequenceNumber" />이 이 시퀀스에 유효하지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-531"><paramref name="sequenceNumber" /> is not valid for this sequence.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7bfe-532"><paramref name="sequenceNumber" />이 이 시퀀스의 기준 시퀀스 번호와 마지막 시퀀스 번호 사이에 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-532"><paramref name="sequenceNumber" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7bfe-533">예기치 못한 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-533">The request could not be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e7bfe-534">지정된 로그에 범위가 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-534">The specified log does not have any extents.</span></span> <span data-ttu-id="e7bfe-535">레코드 시퀀스를 사용하려면 먼저 범위를 하나 이상 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-535">One or more extents must be created before a record sequence can be used.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e7bfe-536">읽기 전용 액세스 권한으로 레코드 시퀀스를 열었으므로 작업을 수행할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-536">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7bfe-537">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-537">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7bfe-538">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-538">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7bfe-539">레코드 시퀀스가 꽉 찬 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-539">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e7bfe-540">지정된 로그 시퀀스에 대한 액세스가 운영 체제에서 거부되는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-540">Access for the specified log sequence is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginReserveAndAppend">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e7bfe-541">비동기 예약 및 추가 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-541">Begins an asynchronous reserve and append operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginReserveAndAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReserveAndAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, long[] reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginReserveAndAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginReserveAndAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, cli::array &lt;long&gt; ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginReserveAndAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginReserveAndAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] * AsyncCallback * obj -&gt; IAsyncResult" Usage="logRecordSequence.BeginReserveAndAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservationCollection, reservations, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="e7bfe-542">연결하여 레코드로 추가할 바이트 배열 세그먼트의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-542">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="e7bfe-543">사용자가 지정한 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-543">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="e7bfe-544">이전 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-544">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="e7bfe-545">데이터를 쓰는 방법을 지정하는 <see cref="T:System.IO.Log.RecordAppendOptions" />의 유효한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-545">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservationCollection"><span data-ttu-id="e7bfe-546">예약을 만들 예약 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-546">The reservation collection to make reservations in.</span></span></param>
        <param name="reservations"><span data-ttu-id="e7bfe-547">만들 예약(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-547">The reservations to make, in bytes.</span></span></param>
        <param name="callback"><span data-ttu-id="e7bfe-548">추가가 완료되면 호출되는 선택적 비동기 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-548">An optional asynchronous callback, to be called when the append is complete.</span></span></param>
        <param name="state"><span data-ttu-id="e7bfe-549">이 특정 비동기 추가 요청을 다른 요청과 구별하는 사용자 제공 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-549">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span></span></param>
        <summary><span data-ttu-id="e7bfe-550">비동기 예약 및 추가 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-550">Begins an asynchronous reserve and append operation.</span></span> <span data-ttu-id="e7bfe-551">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-551">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7bfe-552">보류 중일 수 있는 이 비동기 작업을 나타내는 <see cref="T:System.IAsyncResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-552">An <see cref="T:System.IAsyncResult" /> that represents this asynchronous operation, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7bfe-553">이 메서드에서 반환된 <xref:System.IAsyncResult>를 <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A> 메서드에 전달하여 추가 작업을 완료하고 리소스를 적절하게 해제할 수 있도록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-553">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A> method to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="e7bfe-554">비동기 추가 중에 오류가 발생한 경우 이 메서드에서 반환된 <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A>를 사용하여 <xref:System.IAsyncResult> 메서드를 호출하기 전에는 예외가 throw되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-554">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="e7bfe-555">`data` 매개 변수에 포함된 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-555">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e7bfe-556">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-556">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="e7bfe-557">지정된 예약은 레코드 추가 작업이 포함된 원자 단위 작업에서 제공된 예약 컬렉션에 추가됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-557">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="e7bfe-558">추가가 실패하면 공간이 예약되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-558">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="e7bfe-559">일반적으로 이 메서드는 레코드를 쓰기 전에 완료될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-559">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="e7bfe-560">레코드가 기록되도록 하려면 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 매개 변수를 사용하여 `recordAppendOptions` 플래그를 지정하거나, <xref:System.IO.Log.LogRecordSequence.Flush%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-560">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.LogRecordSequence.Flush%2A> method.</span></span>  
  
 <span data-ttu-id="e7bfe-561">레코드 시퀀스가 삭제되었거나 잘못된 인수를 전달하는 경우 이 작업 내에서 즉시 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-561">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="e7bfe-562">비동기 추가 요청 중에 발생한 오류(예: I/O 요청 중의 디스크 오류)는 <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A> 메서드를 호출할 때 예외로 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-562">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7bfe-563"><paramref name="userRecord" /> 또는 <paramref name="previousRecord" />가 이 시퀀스에 부적합한 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-563"><paramref name="userRecord" /> or <paramref name="previousRecord" /> is not valid for this sequence.</span></span>  
  
<span data-ttu-id="e7bfe-564">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-564">-or-</span></span> 
 <span data-ttu-id="e7bfe-565"><paramref name="data" />가 최대 레코드 크기보다 커서 추가할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-565"><paramref name="data" /> cannot be appended because it is larger than the maximum record size.</span></span>  
  
<span data-ttu-id="e7bfe-566">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-566">-or-</span></span> 
 <span data-ttu-id="e7bfe-567">이 레코드 시퀀스를 통해 <paramref name="reservations" />를 만들 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-567"><paramref name="reservations" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7bfe-568">하나 이상의 인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-568">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7bfe-569"><paramref name="userRecord" /> 또는 <paramref name="previousRecord" />가 이 시퀀스의 기준 시퀀스 번호와 마지막 시퀀스 번호 사이에 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-569"><paramref name="userRecord" /> or <paramref name="previousRecord" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7bfe-570">예기치 못한 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-570">The request could not be performed because of an unexpected I/O exception.</span></span>  
  
<span data-ttu-id="e7bfe-571">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-571">-or-</span></span> 
<span data-ttu-id="e7bfe-572">I/O 디바이스 오류 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-572">The request could not be performed because of an I/O device error.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e7bfe-573">읽기 전용 액세스 권한으로 레코드 시퀀스를 열었으므로 작업을 수행할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-573">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7bfe-574">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-574">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7bfe-575">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-575">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7bfe-576">레코드 시퀀스가 꽉 찬 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-576">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e7bfe-577">지정된 로그 시퀀스에 대한 액세스가 운영 체제에서 거부되는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-577">Access for the specified log sequence is denied by the operating system.</span></span></exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException"><span data-ttu-id="e7bfe-578"><paramref name="data" />에서 <paramref name="reservations" />에 맞는 크기의 예약을 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-578">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReserveAndAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReserveAndAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber userRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, long[] reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginReserveAndAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber userRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginReserveAndAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber userRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, cli::array &lt;long&gt; ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginReserveAndAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginReserveAndAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] * AsyncCallback * obj -&gt; IAsyncResult" Usage="logRecordSequence.BeginReserveAndAppend (data, userRecord, previousRecord, recordAppendOptions, reservationCollection, reservations, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="userRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="e7bfe-579">연결하여 레코드로 추가할 바이트 배열 세그먼트의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-579">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="userRecord"><span data-ttu-id="e7bfe-580">사용자가 지정한 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-580">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="e7bfe-581">이전 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-581">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="e7bfe-582">데이터를 쓰는 방법을 지정하는 <see cref="T:System.IO.Log.RecordAppendOptions" />의 유효한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-582">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservationCollection"><span data-ttu-id="e7bfe-583">예약을 만들 예약 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-583">The reservation collection to make reservations in.</span></span></param>
        <param name="reservations"><span data-ttu-id="e7bfe-584">만들 예약(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-584">The reservations to make, in bytes.</span></span></param>
        <param name="callback"><span data-ttu-id="e7bfe-585">추가가 완료되면 호출되는 선택적 비동기 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-585">An optional asynchronous callback, to be called when the append is complete.</span></span></param>
        <param name="state"><span data-ttu-id="e7bfe-586">이 특정 비동기 추가 요청을 다른 요청과 구별하는 사용자 제공 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-586">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span></span></param>
        <summary><span data-ttu-id="e7bfe-587">비동기 예약 및 추가 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-587">Begins an asynchronous reserve and append operation.</span></span> <span data-ttu-id="e7bfe-588">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-588">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7bfe-589">보류 중일 수 있는 이 비동기 작업을 나타내는 <see cref="T:System.IAsyncResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-589">An <see cref="T:System.IAsyncResult" /> that represents this asynchronous operation, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7bfe-590">이 메서드에서 반환된 <xref:System.IAsyncResult>를 <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A> 메서드에 전달하여 추가 작업을 완료하고 리소스를 적절하게 해제할 수 있도록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-590">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A> method to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="e7bfe-591">비동기 추가 중에 오류가 발생한 경우 이 메서드에서 반환된 <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A>를 사용하여 <xref:System.IAsyncResult> 메서드를 호출하기 전에는 예외가 throw되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-591">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="e7bfe-592">`data` 매개 변수에 포함된 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-592">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e7bfe-593">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-593">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="e7bfe-594">지정된 예약은 레코드 추가 작업이 포함된 원자 단위 작업에서 제공된 예약 컬렉션에 추가됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-594">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="e7bfe-595">추가가 실패하면 공간이 예약되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-595">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="e7bfe-596">일반적으로 이 메서드는 레코드를 쓰기 전에 완료될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-596">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="e7bfe-597">레코드가 기록되도록 하려면 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 매개 변수를 사용하여 `recordAppendOptions` 플래그를 지정하거나, <xref:System.IO.Log.LogRecordSequence.Flush%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-597">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.LogRecordSequence.Flush%2A> method.</span></span>  
  
 <span data-ttu-id="e7bfe-598">레코드 시퀀스가 삭제되었거나 잘못된 인수를 전달하는 경우 이 작업 내에서 즉시 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-598">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="e7bfe-599">비동기 추가 요청 중에 발생한 오류(예: I/O 요청 중의 디스크 오류)는 <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A> 메서드를 호출할 때 예외로 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-599">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7bfe-600">하나 이상의 인수가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-600">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7bfe-601">레코드를 추가하는 동안 I/O 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-601">An I/O error occurred while appending the record.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7bfe-602">레코드 시퀀스에서 새 레코드를 포함하거나 예약을 만들 충분한 여유 공간을 만들 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-602">The record sequence could not make enough free space to contain the new record, or to make the reservation.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7bfe-603">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-603">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginWriteRestartArea">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e7bfe-604">비동기 재시작 영역 쓰기 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-604">Begins an asynchronous restart area write operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginWriteRestartArea">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWriteRestartArea (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum, System.IO.Log.ReservationCollection reservation, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum, class System.IO.Log.ReservationCollection reservation, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWriteRestartArea (data As ArraySegment(Of Byte), newBaseSeqNum As SequenceNumber, reservation As ReservationCollection, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginWriteRestartArea(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber newBaseSeqNum, System::IO::Log::ReservationCollection ^ reservation, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginWriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginWriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult" Usage="logRecordSequence.BeginWriteRestartArea (data, newBaseSeqNum, reservation, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservation" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="e7bfe-605">연결하여 레코드로 추가할 바이트 배열 세그먼트입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-605">Byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="newBaseSeqNum"><span data-ttu-id="e7bfe-606">새 기준 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-606">The new base sequence number.</span></span> <span data-ttu-id="e7bfe-607">지정된 시퀀스 번호는 현재 기준 시퀀스 번호보다 크거나 같아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-607">The specified sequence number must be greater than or equal to the current base sequence number.</span></span></param>
        <param name="reservation"><span data-ttu-id="e7bfe-608">이 재시작 영역에 사용해야 하는 예약이 포함된 <see cref="T:System.IO.Log.ReservationCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-608">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span></span></param>
        <param name="callback"><span data-ttu-id="e7bfe-609">재시작 영역 쓰기가 완료되면 호출되는 선택적 비동기 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-609">An optional asynchronous callback, to be called when the restart area write is complete.</span></span></param>
        <param name="state"><span data-ttu-id="e7bfe-610">이 특정 비동기 재시작 영역 쓰기 요청을 다른 요청과 구별하는 사용자 제공 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-610">A user-provided object that distinguishes this particular asynchronous restart area write request from other requests.</span></span></param>
        <summary><span data-ttu-id="e7bfe-611">시퀀스에서 이전에 예약된 공간을 사용하여 비동기 재시작 영역 쓰기 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-611">Begins an asynchronous restart area write operation, using space previously reserved in the sequence.</span></span> <span data-ttu-id="e7bfe-612">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-612">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7bfe-613">보류 중일 수 있는 비동기 재시작 영역 쓰기 작업을 나타내는 <see cref="T:System.IAsyncResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-613">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous restart area write operation, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7bfe-614">이 메서드에서 반환된 <xref:System.IAsyncResult>를 <xref:System.IO.Log.LogRecordSequence.EndWriteRestartArea%2A> 메서드에 전달하여 재시작 영역 쓰기 작업을 완료하고 리소스를 적절하게 해제할 수 있도록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-614">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.LogRecordSequence.EndWriteRestartArea%2A> method to ensure that the restart area write operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="e7bfe-615">비동기 재시작 영역 쓰기 작업 중에 오류가 발생한 경우 이 메서드에서 반환된 <xref:System.IO.Log.LogRecordSequence.EndWriteRestartArea%2A>를 사용하여 <xref:System.IAsyncResult> 메서드를 호출하기 전에는 예외가 throw되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-615">If an error has occurred during an asynchronous restart area write operation, an exception is not thrown until the <xref:System.IO.Log.LogRecordSequence.EndWriteRestartArea%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="e7bfe-616">`data` 매개 변수에 포함된 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-616">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e7bfe-617">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-617">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="e7bfe-618">작업이 성공적으로 완료되면 기준 세그먼트 번호가 업데이트된 것입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-618">When the operation successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="e7bfe-619">새 기준 시퀀스 번호보다 작은 시퀀스 번호를 가진 모든 로그 레코드에 액세스할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-619">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="e7bfe-620"><xref:System.IO.Log.ReservationCollection>을 지정하는 경우 쓴 재시작 영역은 컬렉션에 포함된 예약을 사용하여 이전에 예약된 공간을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-620">If a <xref:System.IO.Log.ReservationCollection> is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="e7bfe-621">메서드가 성공하면 데이터가 포함될 수 있는 가장 작은 예약을 사용하고 해당 예약이 컬렉션에서 제거됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-621">If the method succeeds, it will consume the smallest reservation that can hold the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="e7bfe-622">레코드 시퀀스가 삭제되었거나 잘못된 인수를 전달하는 경우 이 작업 내에서 즉시 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-622">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="e7bfe-623">비동기 추가 요청 중에 발생한 오류(예: I/O 요청 중의 디스크 오류)는 <xref:System.IO.Log.LogRecordSequence.EndWriteRestartArea%2A> 메서드를 호출할 때 예외로 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-623">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.LogRecordSequence.EndWriteRestartArea%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7bfe-624"><paramref name="newBaseSeqNum" />이 이 시퀀스에 유효하지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-624"><paramref name="newBaseSeqNum" /> is not valid for this sequence.</span></span>  
  
<span data-ttu-id="e7bfe-625">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-625">-or-</span></span> 
<span data-ttu-id="e7bfe-626">지정된 로그 열거형 시작 시퀀스 번호가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-626">The specified log enumeration start sequence number is invalid.</span></span>  
  
<span data-ttu-id="e7bfe-627">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-627">-or-</span></span> 
 <span data-ttu-id="e7bfe-628"><paramref name="data" />가 최대 레코드 크기보다 커서 추가할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-628"><paramref name="data" /> cannot be appended because it is larger than the maximum record size.</span></span>  
  
<span data-ttu-id="e7bfe-629">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-629">-or-</span></span> 
 <span data-ttu-id="e7bfe-630">이 레코드 시퀀스를 통해 <paramref name="reservation" />를 만들 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-630"><paramref name="reservation" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7bfe-631">매개 변수 중 하나 이상이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-631">One or more of the parameters is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7bfe-632">활성 로그의 기존 또는 새 아카이브 테일이나 베이스가 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-632">A new or existing archive tail or base of the active log is invalid.</span></span>  
  
<span data-ttu-id="e7bfe-633">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-633">-or-</span></span> 
 <span data-ttu-id="e7bfe-634"><paramref name="newBaseSeqNum" />이 이 시퀀스의 기준 시퀀스 번호와 마지막 시퀀스 번호 사이에 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-634"><paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7bfe-635">예기치 못한 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-635">The request could not be performed because of an unexpected I/O exception.</span></span>  
  
<span data-ttu-id="e7bfe-636">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-636">-or-</span></span> 
<span data-ttu-id="e7bfe-637">I/O 디바이스 오류 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-637">The request could not be performed because of an I/O device error.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7bfe-638">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-638">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7bfe-639">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-639">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e7bfe-640">지정된 로그 시퀀스에 대한 액세스가 운영 체제에서 거부되는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-640">Access for the specified log sequence is denied by the operating system.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7bfe-641">레코드 시퀀스가 꽉 찼습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-641">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWriteRestartArea">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum, System.IO.Log.ReservationCollection reservationCollection, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum, class System.IO.Log.ReservationCollection reservationCollection, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginWriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber newBaseSeqNum, System::IO::Log::ReservationCollection ^ reservationCollection, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginWriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginWriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult" Usage="logRecordSequence.BeginWriteRestartArea (data, newBaseSeqNum, reservationCollection, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="e7bfe-642">연결하여 레코드로 추가할 바이트 배열 세그먼트의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-642">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="newBaseSeqNum"><span data-ttu-id="e7bfe-643">새 기준 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-643">The new base sequence number.</span></span> <span data-ttu-id="e7bfe-644">지정된 시퀀스 번호는 현재 기준 시퀀스 번호보다 크거나 같아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-644">The specified sequence number must be greater than or equal to the current base sequence number.</span></span></param>
        <param name="reservationCollection"><span data-ttu-id="e7bfe-645">이 재시작 영역에 사용해야 하는 예약이 포함된 <see cref="T:System.IO.Log.ReservationCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-645">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span></span></param>
        <param name="callback"><span data-ttu-id="e7bfe-646">재시작 영역 쓰기가 완료되면 호출되는 선택적 비동기 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-646">An optional asynchronous callback, to be called when the restart area write is complete.</span></span></param>
        <param name="state"><span data-ttu-id="e7bfe-647">이 특정 비동기 재시작 영역 쓰기 요청을 다른 요청과 구별하는 사용자 제공 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-647">A user-provided object that distinguishes this particular asynchronous restart area write request from other requests.</span></span></param>
        <summary><span data-ttu-id="e7bfe-648">시퀀스에서 이전에 예약된 공간을 사용하여 비동기 재시작 영역 쓰기 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-648">Begins an asynchronous restart area write operation, using space previously reserved in the sequence.</span></span> <span data-ttu-id="e7bfe-649">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-649">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7bfe-650">보류 중일 수 있는 비동기 재시작 영역 쓰기 작업을 나타내는 <see cref="T:System.IAsyncResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-650">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous restart area write operation, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7bfe-651">이 메서드에서 반환된 <xref:System.IAsyncResult>를 <xref:System.IO.Log.LogRecordSequence.EndWriteRestartArea%2A> 메서드에 전달하여 재시작 영역 쓰기 작업을 완료하고 리소스를 적절하게 해제할 수 있도록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-651">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.LogRecordSequence.EndWriteRestartArea%2A> method to ensure that the restart area write operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="e7bfe-652">비동기 재시작 영역 쓰기 작업 중에 오류가 발생한 경우 이 메서드에서 반환된 <xref:System.IO.Log.LogRecordSequence.EndWriteRestartArea%2A>를 사용하여 <xref:System.IAsyncResult> 메서드를 호출하기 전에는 예외가 throw되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-652">If an error has occurred during an asynchronous restart area write operation, an exception is not thrown until the <xref:System.IO.Log.LogRecordSequence.EndWriteRestartArea%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="e7bfe-653">`data` 매개 변수에 포함된 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-653">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e7bfe-654">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-654">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="e7bfe-655">작업이 성공적으로 완료되면 기준 세그먼트 번호가 업데이트된 것입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-655">When the operation successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="e7bfe-656">새 기준 시퀀스 번호보다 작은 시퀀스 번호를 가진 모든 로그 레코드에 액세스할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-656">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="e7bfe-657"><xref:System.IO.Log.ReservationCollection>을 지정하는 경우 쓴 재시작 영역은 컬렉션에 포함된 예약을 사용하여 이전에 예약된 공간을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-657">If a <xref:System.IO.Log.ReservationCollection> is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="e7bfe-658">메서드가 성공하면 데이터가 포함될 수 있는 가장 작은 예약을 사용하고 해당 예약이 컬렉션에서 제거됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-658">If the method succeeds, it will consume the smallest reservation that can hold the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="e7bfe-659">레코드 시퀀스가 삭제되었거나 잘못된 인수를 전달하는 경우 이 작업 내에서 즉시 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-659">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="e7bfe-660">비동기 추가 요청 중에 발생한 오류(예: I/O 요청 중의 디스크 오류)는 <xref:System.IO.Log.LogRecordSequence.EndWriteRestartArea%2A> 메서드를 호출할 때 예외로 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-660">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.LogRecordSequence.EndWriteRestartArea%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7bfe-661"><paramref name="newBaseSeqNum" />이 이 시퀀스에 유효하지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-661"><paramref name="newBaseSeqNum" /> is not valid for this sequence.</span></span>  
  
<span data-ttu-id="e7bfe-662">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-662">-or-</span></span> 
<span data-ttu-id="e7bfe-663">지정된 로그 열거형 시작 시퀀스 번호가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-663">The specified log enumeration start sequence number is invalid.</span></span>  
  
<span data-ttu-id="e7bfe-664">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-664">-or-</span></span> 
 <span data-ttu-id="e7bfe-665"><paramref name="data" />가 최대 레코드 크기보다 커서 추가할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-665"><paramref name="data" /> cannot be appended because it is larger than the maximum record size.</span></span>  
  
<span data-ttu-id="e7bfe-666">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-666">-or-</span></span> 
 <span data-ttu-id="e7bfe-667">이 레코드 시퀀스를 통해 <paramref name="reservationCollection" />를 만들 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-667"><paramref name="reservationCollection" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7bfe-668">매개 변수 중 하나 이상이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-668">One or more of the parameters is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7bfe-669">활성 로그의 기존 또는 새 아카이브 테일이나 베이스가 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-669">A new or existing archive tail or base of the active log is invalid.</span></span>  
  
<span data-ttu-id="e7bfe-670">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-670">-or-</span></span> 
 <span data-ttu-id="e7bfe-671"><paramref name="newBaseSeqNum" />이 이 시퀀스의 기준 시퀀스 번호와 마지막 시퀀스 번호 사이에 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-671"><paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7bfe-672">예기치 못한 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-672">The request could not be performed because of an unexpected I/O exception.</span></span>  
  
<span data-ttu-id="e7bfe-673">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-673">-or-</span></span> 
<span data-ttu-id="e7bfe-674">I/O 디바이스 오류 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-674">The request could not be performed because of an I/O device error.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7bfe-675">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-675">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7bfe-676">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-676">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e7bfe-677">지정된 로그 시퀀스에 대한 액세스가 운영 체제에서 거부되는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-677">Access for the specified log sequence is denied by the operating system.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7bfe-678">레코드 시퀀스가 꽉 찼습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-678">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateReservationCollection">
      <MemberSignature Language="C#" Value="public System.IO.Log.ReservationCollection CreateReservationCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Log.ReservationCollection CreateReservationCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.CreateReservationCollection" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateReservationCollection () As ReservationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::ReservationCollection ^ CreateReservationCollection();" />
      <MemberSignature Language="F#" Value="abstract member CreateReservationCollection : unit -&gt; System.IO.Log.ReservationCollection&#xA;override this.CreateReservationCollection : unit -&gt; System.IO.Log.ReservationCollection" Usage="logRecordSequence.CreateReservationCollection " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.CreateReservationCollection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.ReservationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e7bfe-679">새 <see cref="T:System.IO.Log.ReservationCollection" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-679">Creates a new <see cref="T:System.IO.Log.ReservationCollection" />.</span></span> <span data-ttu-id="e7bfe-680">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-680">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7bfe-681">새로 만든 <see cref="T:System.IO.Log.ReservationCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-681">The newly created <see cref="T:System.IO.Log.ReservationCollection" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e7bfe-682">예약은 다음 예제에 나와 있는 것처럼 두 가지 방법으로 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-682">Reservations can be performed in two ways as shown in the following examples.</span></span> <span data-ttu-id="e7bfe-683">확실한 처리를 위해 예제의 방법을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-683">You can adopt the practices in the samples for robust processing.</span></span> <span data-ttu-id="e7bfe-684">이 작업은 CLFS 기반 <xref:System.IO.Log.LogRecordSequence> 클래스를 사용할 때만 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-684">Notice that this task can only be performed when using the CLFS-based <xref:System.IO.Log.LogRecordSequence> class.</span></span>  
  
```  
//Using the ReserveAndAppend Method  
ReservationCollection reservations = recordSequence.CreateReservationCollection();  
long[] lengthOfUndoRecords = new long[] { 1000 };  
recordSequence.ReserveAndAppend(recordData,  
                                                     userSqn,  
                                                     previousSqn,  
                                                     RecordSequenceAppendOptions.None,  
                                                     reservations,  
                                                     lengthOfUndoRecords);  
recordSequence.Append(undoRecordData,    // If necessary …  
                                    userSqn,  
                                    previousSqn,  
                                    RecordSequenceAppendOptions.ForceFlush,  
                                    reservations);  
  
// Using the Manual Approach  
ReservationCollection reservations = recordSequence.CreateReservationCollection();  
reservations.Add(lengthOfUndoRecord);  
try  
{  
   recordSequence.Append(recordData, userSqn, previousSqn, RecordAppendOptions.None);  
}  
catch (Exception)  
{  
   reservations.Remove(lengthOfUndoRecord);  
   throw;  
}  
  
recordSequence.Append(undoRecordData, userSqn, previousSqn, RecordAppendOptions.ForceFlush, reservations);  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7bfe-685">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-685">There is not enough memory to continue the execution of the program.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="logRecordSequence.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e7bfe-686">구성 요소에서 사용하는 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-686">Releases the resources used by the component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e7bfe-687">이 예제에 사용 하는 방법을 보여 줍니다 <xref:System.IO.Log.LogRecordSequence.Dispose%2A> 리소스를 해제 합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-687">This example shows how to use <xref:System.IO.Log.LogRecordSequence.Dispose%2A> to release resources:</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#11](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mymultiplexlog.cs#11)]
 [!code-vb[S_UELogRecordSequence#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mymultiplexlog.vb#11)]  
  
 [!code-csharp[S_UELogRecordSequence#12](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mymultiplexlog.cs#12)] 
 [!code-vb[S_UELogRecordSequence#12](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mymultiplexlog.vb#12)]   
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7bfe-688">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-688">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7bfe-689">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-689">There is not enough memory to continue the execution of the program.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndAppend (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndAppend(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.EndAppend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndAppend (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber EndAppend(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndAppend : IAsyncResult -&gt; System.IO.Log.SequenceNumber&#xA;override this.EndAppend : IAsyncResult -&gt; System.IO.Log.SequenceNumber" Usage="logRecordSequence.EndAppend result" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.EndAppend(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="e7bfe-690">처리 중인 비동기 I/O 요청에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-690">A reference to the outstanding asynchronous I/O request.</span></span></param>
        <summary><span data-ttu-id="e7bfe-691">비동기 추가 작업을 끝냅니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-691">Ends an asynchronous append operation.</span></span> <span data-ttu-id="e7bfe-692">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-692">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7bfe-693">추가된 로그 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-693">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7bfe-694">이 메서드는 I/O 작업이 완료될 때까지 차단됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-694">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="e7bfe-695">비동기 쓰기 요청 중에 발생하는 오류(예: I/O 요청 중의 디스크 오류)는 <xref:System.IO.Log.LogRecordSequence.EndAppend%2A>를 호출할 때 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-695">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.LogRecordSequence.EndAppend%2A> is called.</span></span>  
  
 <span data-ttu-id="e7bfe-696">이 메서드는 <xref:System.IAsyncResult> 메서드에서 반환된 <xref:System.IO.Log.LogRecordSequence.BeginAppend%2A>마다 정확히 한 번만 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-696">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.LogRecordSequence.BeginAppend%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7bfe-697"><paramref name="result" />이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-697"><paramref name="result" /> is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7bfe-698">예기치 못한 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-698">The request could not be performed because of an unexpected I/O exception.</span></span>  
  
<span data-ttu-id="e7bfe-699">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-699">-or-</span></span> 
<span data-ttu-id="e7bfe-700">I/O 디바이스 오류 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-700">The request could not be performed because of an I/O device error.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e7bfe-701">이 비동기 작업에 대해 <see langword="End" />가 이미 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-701"><see langword="End" /> has already been called for this asynchronous operation.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e7bfe-702">읽기 전용 액세스 권한으로 레코드 시퀀스를 열었으므로 작업을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-702">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7bfe-703">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-703">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7bfe-704">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-704">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7bfe-705">레코드 시퀀스가 꽉 찬 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-705">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e7bfe-706">지정된 로그 시퀀스에 대한 액세스가 운영 체제에서 거부되는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-706">Access for the specified log sequence is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndFlush">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndFlush (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndFlush(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.EndFlush(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndFlush (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber EndFlush(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndFlush : IAsyncResult -&gt; System.IO.Log.SequenceNumber&#xA;override this.EndFlush : IAsyncResult -&gt; System.IO.Log.SequenceNumber" Usage="logRecordSequence.EndFlush result" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.EndFlush(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="e7bfe-707">처리 중인 비동기 I/O 요청에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-707">A reference to the outstanding asynchronous I/O request.</span></span></param>
        <summary><span data-ttu-id="e7bfe-708">비동기 플러시 작업을 끝냅니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-708">Ends an asynchronous flush operation.</span></span> <span data-ttu-id="e7bfe-709">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-709">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7bfe-710">마지막으로 쓴 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-710">The sequence number of the last record written.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7bfe-711">이 메서드는 I/O 작업이 완료될 때까지 차단됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-711">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="e7bfe-712">비동기 플러시 요청 중에 발생하는 오류(예: I/O 요청 중의 디스크 오류)는 <xref:System.IO.Log.LogRecordSequence.EndFlush%2A>를 호출할 때 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-712">Errors that occur during an asynchronous flush request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.LogRecordSequence.EndFlush%2A> is called.</span></span>  
  
 <span data-ttu-id="e7bfe-713">이 메서드는 <xref:System.IAsyncResult> 메서드에서 반환된 <xref:System.IO.Log.LogRecordSequence.BeginFlush%2A>마다 정확히 한 번만 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-713">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.LogRecordSequence.BeginFlush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7bfe-714"><paramref name="result" />이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-714"><paramref name="result" /> is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7bfe-715">예기치 못한 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-715">The request could not be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e7bfe-716">이 비동기 작업에 대해 <see langword="End" />가 이미 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-716"><see langword="End" /> has already been called for this asynchronous operation.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e7bfe-717">읽기 전용 액세스 권한으로 레코드 시퀀스를 열었으므로 작업을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-717">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7bfe-718">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-718">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7bfe-719">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-719">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7bfe-720">레코드 시퀀스가 꽉 찬 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-720">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e7bfe-721">지정된 로그 시퀀스에 대한 액세스가 운영 체제에서 거부되는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-721">Access for the specified log sequence is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndReserveAndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndReserveAndAppend (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndReserveAndAppend(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.EndReserveAndAppend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReserveAndAppend (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber EndReserveAndAppend(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndReserveAndAppend : IAsyncResult -&gt; System.IO.Log.SequenceNumber&#xA;override this.EndReserveAndAppend : IAsyncResult -&gt; System.IO.Log.SequenceNumber" Usage="logRecordSequence.EndReserveAndAppend result" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.EndReserveAndAppend(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="e7bfe-722">처리 중인 비동기 I/O 요청에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-722">A reference to the outstanding asynchronous I/O request.</span></span></param>
        <summary><span data-ttu-id="e7bfe-723">비동기 예약 및 추가 작업을 끝냅니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-723">Ends an asynchronous reserve and append operation.</span></span> <span data-ttu-id="e7bfe-724">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-724">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7bfe-725">추가된 로그 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-725">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7bfe-726">이 메서드는 I/O 작업이 완료될 때까지 차단됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-726">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="e7bfe-727">비동기 쓰기 요청 중에 발생하는 오류(예: I/O 요청 중의 디스크 오류)는 <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A>를 호출할 때 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-727">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A> is called.</span></span>  
  
 <span data-ttu-id="e7bfe-728">이 메서드는 <xref:System.IAsyncResult> 메서드에서 반환된 <xref:System.IO.Log.LogRecordSequence.BeginReserveAndAppend%2A>마다 정확히 한 번만 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-728">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.LogRecordSequence.BeginReserveAndAppend%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7bfe-729"><paramref name="result" />이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-729"><paramref name="result" /> is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7bfe-730">예기치 못한 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-730">The request could not be performed because of an unexpected I/O exception.</span></span>  
  
<span data-ttu-id="e7bfe-731">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-731">-or-</span></span> 
<span data-ttu-id="e7bfe-732">I/O 디바이스 오류 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-732">The request could not be performed because of an I/O device error.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e7bfe-733">이 비동기 작업에 대해 <see langword="End" />가 이미 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-733"><see langword="End" /> has already been called for this asynchronous operation.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e7bfe-734">읽기 전용 액세스 권한으로 레코드 시퀀스를 열었으므로 작업을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-734">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7bfe-735">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-735">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7bfe-736">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-736">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7bfe-737">레코드 시퀀스가 꽉 찬 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-737">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e7bfe-738">지정된 로그 시퀀스에 대한 액세스가 운영 체제에서 거부되는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-738">Access for the specified log sequence is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndWriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndWriteRestartArea (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndWriteRestartArea(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.EndWriteRestartArea(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndWriteRestartArea (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber EndWriteRestartArea(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndWriteRestartArea : IAsyncResult -&gt; System.IO.Log.SequenceNumber&#xA;override this.EndWriteRestartArea : IAsyncResult -&gt; System.IO.Log.SequenceNumber" Usage="logRecordSequence.EndWriteRestartArea result" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.EndWriteRestartArea(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="e7bfe-739">처리 중인 비동기 I/O 요청에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-739">A reference to the outstanding asynchronous I/O request.</span></span></param>
        <summary><span data-ttu-id="e7bfe-740">비동기 재시작 영역 쓰기 작업을 끝냅니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-740">Ends an asynchronous restart area write operation.</span></span> <span data-ttu-id="e7bfe-741">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-741">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7bfe-742">쓴 로그 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-742">The sequence number of the written log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7bfe-743">이 메서드는 I/O 작업이 완료될 때까지 차단됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-743">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="e7bfe-744">비동기 쓰기 요청 중에 발생하는 오류(예: I/O 요청 중의 디스크 오류)는 <xref:System.IO.Log.LogRecordSequence.EndWriteRestartArea%2A>를 호출할 때 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-744">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.LogRecordSequence.EndWriteRestartArea%2A> is called.</span></span>  
  
 <span data-ttu-id="e7bfe-745">이 메서드는 <xref:System.IAsyncResult> 메서드에서 반환된 <xref:System.IO.Log.LogRecordSequence.BeginWriteRestartArea%2A>마다 정확히 한 번만 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-745">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.LogRecordSequence.BeginWriteRestartArea%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7bfe-746"><paramref name="result" />가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-746"><paramref name="result" /> is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7bfe-747">활성 로그의 기존 또는 새 아카이브 테일이나 베이스가 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-747">A new or existing archive tail or base of the active log is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7bfe-748">예기치 못한 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-748">The request could not be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e7bfe-749">이 비동기 작업에 대해 <see langword="End" />가 이미 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-749"><see langword="End" /> has already been called for this asynchronous operation.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7bfe-750">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-750">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7bfe-751">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-751">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e7bfe-752">지정된 로그 시퀀스에 대한 액세스가 운영 체제에서 거부되는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-752">Access for the specified log sequence is denied by the operating system.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7bfe-753">레코드 시퀀스가 꽉 찼습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-753">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Flush">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e7bfe-754">추가된 레코드를 영속적으로 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-754">Writes appended records durably</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Function Flush () As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; System.IO.Log.SequenceNumber&#xA;override this.Flush : unit -&gt; System.IO.Log.SequenceNumber" Usage="logRecordSequence.Flush " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Flush</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e7bfe-755">추가된 모든 레코드를 썼는지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-755">Ensures that all appended records have been written.</span></span> <span data-ttu-id="e7bfe-756">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-756">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7bfe-757">마지막으로 쓴 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-757">The sequence number of the last record written.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7bfe-758">이 메서드를 호출하면 <xref:System.IO.Log.LogRecordSequence>에 추가된 모든 레코드가 영속적으로 기록됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-758">Calling this method ensures that all records that have been appended to the <xref:System.IO.Log.LogRecordSequence> have been durably written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7bfe-759">데이터를 플러시하는 동안 I/O 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-759">An I/O error occurred while flushing the data.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7bfe-760">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-760">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e7bfe-761">이 작업이 지원되지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-761">This operation is not supported.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7bfe-762">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-762">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e7bfe-763">지정된 로그 시퀀스에 대한 액세스가 운영 체제에서 거부되는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-763">Access for the specified log sequence is denied by the operating system.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7bfe-764">레코드 시퀀스에서 새 재시작 영역을 포함할 충분한 여유 공간을 만들 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-764">The record sequence could not make enough free space to contain the new restart area.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e7bfe-765">지정된 로그에 범위가 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-765">The specified log does not have any extents.</span></span> <span data-ttu-id="e7bfe-766">레코드 시퀀스를 사용하려면 먼저 범위를 하나 이상 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-766">One or more extents must be created before a record sequence can be used.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Flush (System.IO.Log.SequenceNumber sequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Flush(valuetype System.IO.Log.SequenceNumber sequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.Flush(System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Flush(System::IO::Log::SequenceNumber sequenceNumber);" />
      <MemberSignature Language="F#" Value="abstract member Flush : System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber&#xA;override this.Flush : System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber" Usage="logRecordSequence.Flush sequenceNumber" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Flush(System.IO.Log.SequenceNumber)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequenceNumber" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="sequenceNumber"><span data-ttu-id="e7bfe-767">써야 하는 최신 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-767">The sequence number of the latest record that must be written.</span></span> <span data-ttu-id="e7bfe-768">이 <see cref="T:System.IO.Log.SequenceNumber" />가 유효하지 않은 경우 모든 레코드를 써야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-768">If this <see cref="T:System.IO.Log.SequenceNumber" /> is invalid, then all records must be written.</span></span></param>
        <summary><span data-ttu-id="e7bfe-769">지정된 시퀀스 번호까지 추가된 모든 레코드를 영속적으로 썼는지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-769">Ensures that all appended records up to and including the record with the specified sequence number have been durably written.</span></span> <span data-ttu-id="e7bfe-770">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-770">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7bfe-771">마지막으로 쓴 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-771">The sequence number of the last record written.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7bfe-772">이 메서드를 호출하면 지정된 시퀀스 번호 이하의 시퀀스 번호를 가진 모든 레코드가 영속적으로 기록됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-772">Calling this method ensures that all records with sequence numbers up to and including the specified sequence number have been durably written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7bfe-773"><paramref name="sequenceNumber" />이 이 시퀀스에 유효하지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-773"><paramref name="sequenceNumber" /> is not valid for this sequence.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7bfe-774"><paramref name="sequenceNumber" />이 이 시퀀스의 기준 시퀀스 번호와 마지막 시퀀스 번호 사이에 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-774"><paramref name="sequenceNumber" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7bfe-775">예기치 못한 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-775">The request could not be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e7bfe-776">지정된 로그에 범위가 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-776">The specified log does not have any extents.</span></span> <span data-ttu-id="e7bfe-777">레코드 시퀀스를 사용하려면 먼저 범위를 하나 이상 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-777">One or more extents must be created before a record sequence can be used.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e7bfe-778">읽기 전용 액세스 권한으로 레코드 시퀀스를 열었으므로 작업을 수행할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-778">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7bfe-779">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-779">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7bfe-780">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-780">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7bfe-781">레코드 시퀀스가 꽉 찬 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-781">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e7bfe-782">지정된 로그 시퀀스에 대한 액세스가 운영 체제에서 거부되는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-782">Access for the specified log sequence is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LastSequenceNumber">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber LastSequenceNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.SequenceNumber LastSequenceNumber" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogRecordSequence.LastSequenceNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastSequenceNumber As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::SequenceNumber LastSequenceNumber { System::IO::Log::SequenceNumber get(); };" />
      <MemberSignature Language="F#" Value="member this.LastSequenceNumber : System.IO.Log.SequenceNumber" Usage="System.IO.Log.LogRecordSequence.LastSequenceNumber" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.LastSequenceNumber</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7bfe-783">마지막으로 추가된 레코드보다 큰 시퀀스 번호를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-783">Gets the sequence number which is greater than the last record appended</span></span></summary>
        <value><span data-ttu-id="e7bfe-784">마지막으로 추가된 레코드보다 큰 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-784">A sequence number which is greater than the last record appended.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7bfe-785">이 속성에는 마지막으로 추가된 레코드의 시퀀스 번호보다 반드시 큰 시퀀스 번호가 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-785">This property contains a sequence number that is guaranteed to be larger than the sequence number of the last appended record.</span></span> <span data-ttu-id="e7bfe-786">유효한 시퀀스 번호는 <xref:System.IO.Log.LogRecordSequence.BaseSequenceNumber%2A>보다 크거나 같고 <xref:System.IO.Log.LogRecordSequence.LastSequenceNumber%2A>보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-786">Valid sequence numbers are greater than or equal to <xref:System.IO.Log.LogRecordSequence.BaseSequenceNumber%2A> and less than <xref:System.IO.Log.LogRecordSequence.LastSequenceNumber%2A>.</span></span> <span data-ttu-id="e7bfe-787">그 외의 다른 시퀀스 번호는 유효하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-787">All other sequence numbers are invalid.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7bfe-788">시퀀스가 삭제된 후 속성에 액세스한 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-788">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LogStore">
      <MemberSignature Language="C#" Value="public System.IO.Log.LogStore LogStore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Log.LogStore LogStore" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogRecordSequence.LogStore" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogStore As LogStore" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::LogStore ^ LogStore { System::IO::Log::LogStore ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogStore : System.IO.Log.LogStore" Usage="System.IO.Log.LogRecordSequence.LogStore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.LogStore</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7bfe-789">이 레코드 시퀀스의 데이터가 포함된 <see cref="T:System.IO.Log.LogStore" />를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-789">Gets the <see cref="T:System.IO.Log.LogStore" /> that contains the data for this record sequence.</span></span> <span data-ttu-id="e7bfe-790">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-790">This method cannot be inherited.</span></span></summary>
        <value><span data-ttu-id="e7bfe-791">이 레코드 시퀀스의 데이터가 포함된 <see cref="T:System.IO.Log.LogStore" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-791">The <see cref="T:System.IO.Log.LogStore" /> that contains the data for this record sequence.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e7bfe-792">다음 예제에서는 <xref:System.IO.Log.LogRecordSequence.LogStore%2A> 멤버를 사용하여 범위를 추가하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-792">This example shows how to use the <xref:System.IO.Log.LogRecordSequence.LogStore%2A> member to add extents.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#11](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mymultiplexlog.cs#11)]
 [!code-vb[S_UELogRecordSequence#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mymultiplexlog.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumRecordLength">
      <MemberSignature Language="C#" Value="public long MaximumRecordLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumRecordLength" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogRecordSequence.MaximumRecordLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaximumRecordLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumRecordLength { long get(); };" />
      <MemberSignature Language="F#" Value="member this.MaximumRecordLength : int64" Usage="System.IO.Log.LogRecordSequence.MaximumRecordLength" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.MaximumRecordLength</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7bfe-793">이 레코드 시퀀스에 추가할 수 있는 최대 레코드 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-793">Gets the maximum size of a record that can be added to this record sequence.</span></span></summary>
        <value><span data-ttu-id="e7bfe-794">이 레코드 시퀀스에 추가할 수 있는 최대 레코드 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-794">The maximum size of a record that can be added to this record sequence.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadLogRecords">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt; ReadLogRecords (System.IO.Log.SequenceNumber start, System.IO.Log.LogRecordEnumeratorType logRecordEnum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Log.LogRecord&gt; ReadLogRecords(valuetype System.IO.Log.SequenceNumber start, valuetype System.IO.Log.LogRecordEnumeratorType logRecordEnum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.ReadLogRecords(System.IO.Log.SequenceNumber,System.IO.Log.LogRecordEnumeratorType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadLogRecords (start As SequenceNumber, logRecordEnum As LogRecordEnumeratorType) As IEnumerable(Of LogRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::IO::Log::LogRecord ^&gt; ^ ReadLogRecords(System::IO::Log::SequenceNumber start, System::IO::Log::LogRecordEnumeratorType logRecordEnum);" />
      <MemberSignature Language="F#" Value="abstract member ReadLogRecords : System.IO.Log.SequenceNumber * System.IO.Log.LogRecordEnumeratorType -&gt; seq&lt;System.IO.Log.LogRecord&gt;&#xA;override this.ReadLogRecords : System.IO.Log.SequenceNumber * System.IO.Log.LogRecordEnumeratorType -&gt; seq&lt;System.IO.Log.LogRecord&gt;" Usage="logRecordSequence.ReadLogRecords (start, logRecordEnum)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.ReadLogRecords(System.IO.Log.SequenceNumber,System.IO.Log.LogRecordEnumeratorType)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="logRecordEnum" Type="System.IO.Log.LogRecordEnumeratorType" />
      </Parameters>
      <Docs>
        <param name="start"><span data-ttu-id="e7bfe-795">읽기가 시작되는 첫 번째 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-795">The sequence number of the first record where the reading starts.</span></span></param>
        <param name="logRecordEnum"><span data-ttu-id="e7bfe-796"><see cref="T:System.IO.Log.LogRecordEnumeratorType" />에서 레코드를 읽는 방식(즉 앞으로 또는 뒤로)을 지정하는 유효한 <see cref="T:System.IO.Log.LogRecordSequence" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-796">A valid <see cref="T:System.IO.Log.LogRecordEnumeratorType" /> value that specifies the manner (that is, forward or backward) in which records should be read from a <see cref="T:System.IO.Log.LogRecordSequence" />.</span></span></param>
        <summary><span data-ttu-id="e7bfe-797">시퀀스에 있는 레코드의 열거 가능한 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-797">Returns an enumerable collection of records in the sequence.</span></span> <span data-ttu-id="e7bfe-798">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-798">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7bfe-799">시퀀스에 있는 레코드의 열거 가능한 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-799">An enumerable collection of records in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7bfe-800">이 메서드는 시퀀스에 있는 레코드의 열거 가능한 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-800">This method returns an enumerable collection of records in the sequence.</span></span> <span data-ttu-id="e7bfe-801">열거되는 레코드의 순서는 `logRecordEnum` 매개 변수의 값에 따라 결정됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-801">The order of the enumerated records depends on the value of the `logRecordEnum` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7bfe-802">다음 예제에서는 루프에서 <xref:System.IO.Log.LogRecordSequence.ReadLogRecords%2A>를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-802">This example shows how to use <xref:System.IO.Log.LogRecordSequence.ReadLogRecords%2A> in a loop.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#10](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mymultiplexlog.cs#10)]
 [!code-vb[S_UELogRecordSequence#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mymultiplexlog.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7bfe-803"><paramref name="start" />이 이 시퀀스에 유효하지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-803"><paramref name="start" /> is not valid for this sequence.</span></span>  
  
<span data-ttu-id="e7bfe-804">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-804">-or-</span></span> 
 <span data-ttu-id="e7bfe-805"><paramref name="logRecordEnum" />이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-805"><paramref name="logRecordEnum" /> is invalid.</span></span>  
  
<span data-ttu-id="e7bfe-806">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-806">-or-</span></span> 
<span data-ttu-id="e7bfe-807">컬렉션에서 지정된 요소를 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-807">The specified element was not found in the collection.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7bfe-808"><paramref name="start" />이 이 시퀀스의 기준 시퀀스 번호와 마지막 시퀀스 번호 사이에 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-808"><paramref name="start" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7bfe-809">예기치 못한 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-809">The request could not be performed because of an unexpected I/O exception.</span></span>  
  
<span data-ttu-id="e7bfe-810">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-810">-or-</span></span> 
<span data-ttu-id="e7bfe-811">I/O 디바이스 오류 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-811">The request could not be performed because of an I/O device error.</span></span>  
  
<span data-ttu-id="e7bfe-812">-또는-</span><span class="sxs-lookup"><span data-stu-id="e7bfe-812">-or</span></span> 
<span data-ttu-id="e7bfe-813">로그 레코드 쓰기에 사용된 버퍼 크기가 로그 레코드 읽기에 사용되는 버퍼 크기보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-813">The buffer size used to write the log record is larger than the buffer size being used to read it.</span></span>  
  
<span data-ttu-id="e7bfe-814">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-814">-or-</span></span> 
<span data-ttu-id="e7bfe-815">레코드 시퀀스가 손상된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-815">The record sequence is corrupted.</span></span>  
  
<span data-ttu-id="e7bfe-816">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-816">-or-</span></span> 
<span data-ttu-id="e7bfe-817">지정된 로그 파일 형식이나 버전이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-817">The specified log file format or version is invalid.</span></span>  
  
<span data-ttu-id="e7bfe-818">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-818">-or-</span></span> 
<span data-ttu-id="e7bfe-819">호환되지 않는 버전의 레코드 시퀀스를 사용하여 레코드를 쓴 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-819">The record was written with an incompatible version of the record sequence.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e7bfe-820">열거형이 시작되지 않았기 때문에 연산이 잘못된 경우.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-820">The operation is invalid because the enumeration has not been started.</span></span> <span data-ttu-id="e7bfe-821"><see cref="M:System.Collections.IEnumerator.MoveNext" />를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-821">A call to <see cref="M:System.Collections.IEnumerator.MoveNext" /> must be made.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7bfe-822">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-822">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7bfe-823">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-823">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e7bfe-824">지정된 로그 시퀀스에 대한 액세스가 운영 체제에서 거부되는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-824">Access for the specified log sequence is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadRestartAreas">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt; ReadRestartAreas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Log.LogRecord&gt; ReadRestartAreas() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.ReadRestartAreas" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadRestartAreas () As IEnumerable(Of LogRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::IO::Log::LogRecord ^&gt; ^ ReadRestartAreas();" />
      <MemberSignature Language="F#" Value="abstract member ReadRestartAreas : unit -&gt; seq&lt;System.IO.Log.LogRecord&gt;&#xA;override this.ReadRestartAreas : unit -&gt; seq&lt;System.IO.Log.LogRecord&gt;" Usage="logRecordSequence.ReadRestartAreas " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.ReadRestartAreas</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e7bfe-825">시퀀스에 있는 재시작 영역의 열거 가능한 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-825">Returns an enumerable collection of the restart areas in the sequence.</span></span> <span data-ttu-id="e7bfe-826">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-826">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7bfe-827">시퀀스에 있는 재시작 영역의 열거 가능한 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-827">An enumerable collection of the restart areas in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7bfe-828">재시작 영역은 시퀀스 번호의 역순(가장 큰 시퀀스 번호부터 가장 작은 시퀀스 번호까지)으로 열거됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-828">The restart areas are enumerated in reverse sequence number order, that is, from the highest sequence number to the lowest sequence number.</span></span> <span data-ttu-id="e7bfe-829">마지막 시퀀스 번호와 기준 시퀀스 번호 사이의 시퀀스 번호를 가진 재시작 영역만 열거됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-829">Only restart areas with sequence numbers between the last sequence number and the base sequence number are enumerated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7bfe-830"><paramref name="start" />이 이 시퀀스의 기준 시퀀스 번호와 마지막 시퀀스 번호 사이에 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-830"><paramref name="start" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7bfe-831">예기치 못한 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-831">The request could not be performed because of an unexpected I/O exception.</span></span>  
  
<span data-ttu-id="e7bfe-832">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-832">-or-</span></span> 
<span data-ttu-id="e7bfe-833">I/O 디바이스 오류 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-833">The request could not be performed because of an I/O device error.</span></span>  
  
<span data-ttu-id="e7bfe-834">-또는-</span><span class="sxs-lookup"><span data-stu-id="e7bfe-834">-or</span></span> 
<span data-ttu-id="e7bfe-835">로그 레코드 쓰기에 사용된 버퍼 크기가 로그 레코드 읽기에 사용되는 버퍼 크기보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-835">The buffer size used to write the log record is larger than the buffer size being used to read it.</span></span>  
  
<span data-ttu-id="e7bfe-836">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-836">-or-</span></span> 
<span data-ttu-id="e7bfe-837">레코드 시퀀스가 손상된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-837">The record sequence is corrupted.</span></span>  
  
<span data-ttu-id="e7bfe-838">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-838">-or-</span></span> 
<span data-ttu-id="e7bfe-839">지정된 로그 파일 형식이나 버전이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-839">The specified log file format or version is invalid.</span></span>  
  
<span data-ttu-id="e7bfe-840">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-840">-or-</span></span> 
<span data-ttu-id="e7bfe-841">호환되지 않는 버전의 레코드 시퀀스를 사용하여 레코드를 쓴 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-841">The record was written with an incompatible version of the record sequence.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e7bfe-842">열거형이 시작되지 않았기 때문에 연산이 잘못된 경우.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-842">The operation is invalid because the enumeration has not been started.</span></span> <span data-ttu-id="e7bfe-843"><see cref="M:System.Collections.IEnumerator.MoveNext" />를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-843">A call to <see cref="M:System.Collections.IEnumerator.MoveNext" /> must be made.</span></span>  
  
<span data-ttu-id="e7bfe-844">-또는-</span><span class="sxs-lookup"><span data-stu-id="e7bfe-844">-or</span></span> 
<span data-ttu-id="e7bfe-845">열거형이 끝난 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-845">The enumeration has ended.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7bfe-846">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-846">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7bfe-847">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-847">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e7bfe-848">지정된 로그 시퀀스에 대한 액세스가 운영 체제에서 거부되는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-848">Access for the specified log sequence is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReserveAndAppend">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e7bfe-849">자동으로 단일 예약을 만들고 시퀀스에 레코드를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-849">Automatically makes a single reservation and appends a record to the sequence.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReserveAndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber ReserveAndAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, params long[] reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber ReserveAndAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber ReserveAndAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, ... cli::array &lt;long&gt; ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member ReserveAndAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] -&gt; System.IO.Log.SequenceNumber&#xA;override this.ReserveAndAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] -&gt; System.IO.Log.SequenceNumber" Usage="logRecordSequence.ReserveAndAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservationCollection, reservations)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="e7bfe-850">연결하여 레코드로 추가할 바이트 배열 세그먼트의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-850">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="e7bfe-851">사용자가 지정한 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-851">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="e7bfe-852">이전 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-852">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="e7bfe-853">데이터를 쓰는 방법을 지정하는 <see cref="T:System.IO.Log.RecordAppendOptions" />의 유효한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-853">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservationCollection"><span data-ttu-id="e7bfe-854">예약을 만들 컬렉션이 포함된 <see cref="T:System.IO.Log.ReservationCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-854">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the collection to make reservations in.</span></span></param>
        <param name="reservations"><span data-ttu-id="e7bfe-855">만들 예약(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-855">The reservations to make, in bytes.</span></span></param>
        <summary><span data-ttu-id="e7bfe-856">자동으로 단일 예약을 만들고 시퀀스에 레코드를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-856">Automatically makes a single reservation and appends a record to the sequence.</span></span> <span data-ttu-id="e7bfe-857">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-857">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7bfe-858">추가된 로그 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-858">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7bfe-859">`data` 매개 변수에 포함된 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-859">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e7bfe-860">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-860">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="e7bfe-861">지정된 예약은 레코드 추가 작업이 포함된 원자 단위 작업에서 제공된 예약 컬렉션에 추가됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-861">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="e7bfe-862">추가가 실패하면 공간이 예약되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-862">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="e7bfe-863">일반적으로 이 메서드는 레코드를 쓰기 전에 완료될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-863">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="e7bfe-864">레코드가 기록되도록 하려면 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 매개 변수를 사용하여 `recordAppendOptions` 플래그를 지정하거나, <xref:System.IO.Log.LogRecordSequence.Flush%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-864">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.LogRecordSequence.Flush%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7bfe-865">다음 예제에서는 이 메서드를 사용하여 예약하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-865">The following example shows how to use this method to make reservations.</span></span> <span data-ttu-id="e7bfe-866">이 작업은 CLFS 기반 <xref:System.IO.Log.LogRecordSequence> 클래스를 사용할 때만 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-866">Notice that this task can only be performed when using the CLFS-based <xref:System.IO.Log.LogRecordSequence> class.</span></span>  
  
```  
ReservationCollection reservations = recordSequence.CreateReservationCollection();  
long[] lengthOfUndoRecords = new long[] { 1000 };  
recordSequence.ReserveAndAppend(recordData,  
                                                     userSqn,  
                                                     previousSqn,  
                                                     RecordSequenceAppendOptions.None,  
                                                     reservations,  
                                                     lengthOfUndoRecords);  
recordSequence.Append(undoRecordData,    // If necessary …  
                                    userSqn,  
                                    previousSqn,  
                                    RecordSequenceAppendOptions.ForceFlush,  
                                    reservations);  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7bfe-867"><paramref name="nextUndoRecord" /> 또는 <paramref name="previousRecord" />가 이 시퀀스에 부적합한 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-867"><paramref name="nextUndoRecord" /> or <paramref name="previousRecord" /> is not valid for this sequence.</span></span>  
  
<span data-ttu-id="e7bfe-868">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-868">-or-</span></span> 
 <span data-ttu-id="e7bfe-869"><paramref name="data" />가 최대 레코드 크기보다 커서 추가할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-869"><paramref name="data" /> cannot be appended because it is larger than the maximum record size.</span></span>  
  
<span data-ttu-id="e7bfe-870">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-870">-or-</span></span> 
 <span data-ttu-id="e7bfe-871">이 레코드 시퀀스를 통해 <paramref name="reservations" />를 만들 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-871"><paramref name="reservations" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7bfe-872">하나 이상의 인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-872">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7bfe-873"><paramref name="nextUndoRecord" /> 또는 <paramref name="previousRecord" />가 이 시퀀스의 기준 시퀀스 번호와 마지막 시퀀스 번호 사이에 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-873"><paramref name="nextUndoRecord" /> or <paramref name="previousRecord" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7bfe-874">예기치 못한 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-874">The request could not be performed because of an unexpected I/O exception.</span></span>  
  
<span data-ttu-id="e7bfe-875">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-875">-or-</span></span> 
<span data-ttu-id="e7bfe-876">I/O 디바이스 오류 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-876">The request could not be performed because of an I/O device error.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e7bfe-877">읽기 전용 액세스 권한으로 레코드 시퀀스를 열었으므로 작업을 수행할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-877">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7bfe-878">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-878">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7bfe-879">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-879">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7bfe-880">레코드 시퀀스가 꽉 찬 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-880">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e7bfe-881">지정된 로그 시퀀스에 대한 액세스가 운영 체제에서 거부되는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-881">Access for the specified log sequence is denied by the operating system.</span></span></exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException"><span data-ttu-id="e7bfe-882"><paramref name="data" />에서 <paramref name="reservations" />에 맞는 크기의 예약을 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-882">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReserveAndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber ReserveAndAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber userRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, params long[] reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber ReserveAndAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber userRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber ReserveAndAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber userRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, ... cli::array &lt;long&gt; ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member ReserveAndAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] -&gt; System.IO.Log.SequenceNumber&#xA;override this.ReserveAndAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] -&gt; System.IO.Log.SequenceNumber" Usage="logRecordSequence.ReserveAndAppend (data, userRecord, previousRecord, recordAppendOptions, reservationCollection, reservations)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="userRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="e7bfe-883">연결하여 레코드로 추가할 바이트 배열 세그먼트의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-883">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="userRecord"><span data-ttu-id="e7bfe-884">사용자가 지정한 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-884">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="e7bfe-885">이전 순서에서 다음 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-885">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="e7bfe-886">데이터를 쓰는 방법을 지정하는 <see cref="T:System.IO.Log.RecordAppendOptions" />의 유효한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-886">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservationCollection"><span data-ttu-id="e7bfe-887">예약을 만들 예약 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-887">The reservation collection to make reservations in.</span></span></param>
        <param name="reservations"><span data-ttu-id="e7bfe-888">만들 예약(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-888">The reservations to make, in bytes.</span></span></param>
        <summary><span data-ttu-id="e7bfe-889">자동으로 단일 예약을 만들고 시퀀스에 레코드를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-889">Automatically makes a single reservation and appends a record to the sequence.</span></span> <span data-ttu-id="e7bfe-890">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-890">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7bfe-891">추가된 로그 레코드의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-891">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7bfe-892">`data` 매개 변수에 포함된 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-892">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e7bfe-893">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-893">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="e7bfe-894">지정된 예약은 레코드 추가 작업이 포함된 원자 단위 작업에서 제공된 예약 컬렉션에 추가됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-894">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="e7bfe-895">추가가 실패하면 공간이 예약되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-895">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="e7bfe-896">일반적으로 이 메서드는 레코드를 쓰기 전에 완료될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-896">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="e7bfe-897">레코드가 기록되도록 하려면 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 매개 변수를 사용하여 `recordAppendOptions` 플래그를 지정하거나, <xref:System.IO.Log.LogRecordSequence.Flush%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-897">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.LogRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7bfe-898">하나 이상의 인수가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-898">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7bfe-899">레코드를 추가하는 동안 I/O 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-899">An I/O error occurred while appending the record.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7bfe-900">레코드 시퀀스에서 새 레코드를 포함하거나 예약을 만들 충분한 여유 공간을 만들 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-900">The record sequence could not make enough free space to contain the new record, or to make the reservation.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7bfe-901">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-901">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7bfe-902">하나 이상의 인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-902">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7bfe-903"><paramref name="userRecord" /> 또는 <paramref name="previousRecord" />가 이 시퀀스의 기준 시퀀스 번호와 마지막 시퀀스 번호 사이에 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-903"><paramref name="userRecord" /> or <paramref name="previousRecord" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e7bfe-904">읽기 전용 액세스 권한으로 레코드 시퀀스를 열었으므로 작업을 수행할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-904">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7bfe-905">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-905">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e7bfe-906">지정된 로그 시퀀스에 대한 액세스가 운영 체제에서 거부되는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-906">Access for the specified log sequence is denied by the operating system.</span></span></exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException"><span data-ttu-id="e7bfe-907"><paramref name="data" />에서 <paramref name="reservations" />에 맞는 크기의 예약을 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-907">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReservedBytes">
      <MemberSignature Language="C#" Value="public long ReservedBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ReservedBytes" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogRecordSequence.ReservedBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReservedBytes As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ReservedBytes { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ReservedBytes : int64" Usage="System.IO.Log.LogRecordSequence.ReservedBytes" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.ReservedBytes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7bfe-908">예약된 총 바이트 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-908">Gets the total number of bytes that have been reserved.</span></span></summary>
        <value><span data-ttu-id="e7bfe-909">이 레코드 시퀀스에서 만들어진 모든 예약의 총 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-909">The total size of all reservations made in this record sequence.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7bfe-910">시퀀스가 삭제된 후 속성에 액세스한 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-910">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RestartSequenceNumber">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber RestartSequenceNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.SequenceNumber RestartSequenceNumber" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogRecordSequence.RestartSequenceNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RestartSequenceNumber As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::SequenceNumber RestartSequenceNumber { System::IO::Log::SequenceNumber get(); };" />
      <MemberSignature Language="F#" Value="member this.RestartSequenceNumber : System.IO.Log.SequenceNumber" Usage="System.IO.Log.LogRecordSequence.RestartSequenceNumber" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.RestartSequenceNumber</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7bfe-911">로그 끝과 가장 가까운 재시작 영역의 시퀀스 번호를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-911">Gets the sequence number of the restart area closest to the end of the log.</span></span></summary>
        <value><span data-ttu-id="e7bfe-912">로그 끝과 가장 가까운 재시작 영역의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-912">The sequence number of the restart area closest to the end of the log.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7bfe-913">재시작 영역은 클라이언트의 마지막 검사점 작업을 포함하는 정보를 임시로 저장하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-913">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="e7bfe-914">CLFS(Common Log File System)에서는 적어도 하나의 유효한 영역을 항상 사용할 수 있도록 하기 위해 두 개의 재시작 영역을 유지 관리합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-914">The Common Log File System (CLFS) maintains two restart areas to guarantee that at least one valid area is always available.</span></span> <span data-ttu-id="e7bfe-915">복구가 필요한 경우 CLFS에서는 재시작 영역을 읽고 마지막 검사점 작업에서 데이터를 모두 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-915">When a recovery is necessary, the CLFS reads its restart area and all the data from the last checkpoint operation.</span></span> <span data-ttu-id="e7bfe-916">이 데이터는 트랜잭션 테이블, 더티 페이지 테이블 및 열린 파일 테이블을 복구 프로세스에서 사용할 수 있도록 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-916">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="e7bfe-917"><xref:System.IO.Log.LogRecordSequence.SetLastRecord%2A> 메서드를 사용하여 가장 최근에 쓴 재시작 영역을 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-917">Using the <xref:System.IO.Log.LogRecordSequence.SetLastRecord%2A> method, you can remove the most recently written restart area.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7bfe-918">시퀀스가 삭제된 후 속성에 액세스한 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-918">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RetryAppend">
      <MemberSignature Language="C#" Value="public bool RetryAppend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RetryAppend" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogRecordSequence.RetryAppend" />
      <MemberSignature Language="VB.NET" Value="Public Property RetryAppend As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RetryAppend { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RetryAppend : bool with get, set" Usage="System.IO.Log.LogRecordSequence.RetryAppend" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.RetryAppend</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7bfe-919">로그가 꽉 차는 경우 추가 작업이 자동으로 다시 시도되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-919">Gets or sets a value indicating whether or not appends are automatically retried if the log is full.</span></span></summary>
        <value><span data-ttu-id="e7bfe-920">로그가 꽉 차는 경우 추가 작업이 자동으로 다시 시도되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-920"><see langword="true" /> if appends are automatically retried if the log is full; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e7bfe-921">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-921">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7bfe-922">이 속성의 값이 `true`이고 시퀀스에 충분한 공간이 없기 때문에 <xref:System.IO.Log.LogRecordSequence.Append%2A> 호출이 실패하면 레코드 시퀀스에서 공간을 확보하려고 시도하고 추가 작업을 다시 시도합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-922">If the value of this property is `true`, and an <xref:System.IO.Log.LogRecordSequence.Append%2A> call fails because there is not enough space in the sequence, the record sequence will try to free space and retry the append.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7bfe-923">다음 예제에서는 <xref:System.IO.Log.LogRecordSequence.RetryAppend%2A> 속성을 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-923">This example shows how to use the <xref:System.IO.Log.LogRecordSequence.RetryAppend%2A> property.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#3)]
 [!code-vb[S_UELogRecordSequence#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7bfe-924">시퀀스가 삭제된 후 속성에 액세스한 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-924">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetLastRecord">
      <MemberSignature Language="C#" Value="public void SetLastRecord (System.IO.Log.SequenceNumber sequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLastRecord(valuetype System.IO.Log.SequenceNumber sequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.SetLastRecord(System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLastRecord(System::IO::Log::SequenceNumber sequenceNumber);" />
      <MemberSignature Language="F#" Value="member this.SetLastRecord : System.IO.Log.SequenceNumber -&gt; unit" Usage="logRecordSequence.SetLastRecord sequenceNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequenceNumber" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="sequenceNumber"><span data-ttu-id="e7bfe-925"><see cref="T:System.IO.Log.LogRecordSequence" />에 있는 마지막 신규 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-925">The new last sequence number in the <see cref="T:System.IO.Log.LogRecordSequence" />.</span></span>  
  
<span data-ttu-id="e7bfe-926">이 번호는 해당 시점에 로그에 있는 유효한 현재 레코드를 참조해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-926">This should refer to a current valid record   currently in the log.</span></span></param>
        <summary><span data-ttu-id="e7bfe-927"><see cref="T:System.IO.Log.LogRecordSequence" />에서 마지막 레코드를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-927">Sets the last record in the <see cref="T:System.IO.Log.LogRecordSequence" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7bfe-928">지정된 시퀀스 번호는 기준 시퀀스 번호보다 커야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-928">The specified sequence number must be larger than the base sequence number.</span></span>  
  
 <span data-ttu-id="e7bfe-929">이 메서드가 완료되면 지정된 시퀀스 번호보다 큰 시퀀스 번호를 사용하여 이전에 추가한 모든 레코드에 액세스할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-929">When this method completes, all records that had previously been appended with sequence numbers greater than the specified sequence number are inaccessible.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7bfe-930"><paramref name="sequenceNumber" />이 이 시퀀스에 유효하지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-930"><paramref name="sequenceNumber" /> is not valid for this sequence.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7bfe-931">활성 로그의 기존 또는 새 아카이브 테일이나 베이스가 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-931">A new or existing archive tail or base of the active log is invalid.</span></span>  
  
<span data-ttu-id="e7bfe-932">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-932">-or-</span></span> 
 <span data-ttu-id="e7bfe-933"><paramref name="sequenceNumber" />이 이 시퀀스의 기준 시퀀스 번호와 마지막 시퀀스 번호 사이에 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-933"><paramref name="sequenceNumber" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7bfe-934">예기치 못한 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-934">The request could not be performed because of an unexpected I/O exception.</span></span>  
  
<span data-ttu-id="e7bfe-935">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-935">-or-</span></span> 
<span data-ttu-id="e7bfe-936">로그의 끝에 도달한 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-936">The end of the log has been reached.</span></span>  
  
<span data-ttu-id="e7bfe-937">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-937">-or-</span></span> 
<span data-ttu-id="e7bfe-938">지정된 로그 파일 형식이나 버전이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-938">The specified log file format or version is invalid.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7bfe-939">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-939">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7bfe-940">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-940">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e7bfe-941">지정된 로그 시퀀스에 대한 액세스가 운영 체제에서 거부되는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-941">Access for the specified log sequence is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TailPinned">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IO.Log.TailPinnedEventArgs&gt; TailPinned;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IO.Log.TailPinnedEventArgs&gt; TailPinned" />
      <MemberSignature Language="DocId" Value="E:System.IO.Log.LogRecordSequence.TailPinned" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TailPinned As EventHandler(Of TailPinnedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler&lt;System::IO::Log::TailPinnedEventArgs ^&gt; ^ TailPinned;" />
      <MemberSignature Language="F#" Value="member this.TailPinned : EventHandler&lt;System.IO.Log.TailPinnedEventArgs&gt; " Usage="member this.TailPinned : System.EventHandler&lt;System.IO.Log.TailPinnedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.IO.Log.IRecordSequence.TailPinned</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IO.Log.TailPinnedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7bfe-942">시퀀스의 테일을 이동해야 함을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-942">Signals the need to move the tail of the sequence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7bfe-943">레코드 시퀀스에 공간이 부족하면 이 이벤트를 발생시킬 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-943">You can fire this event when the record sequence has run out of space.</span></span> <span data-ttu-id="e7bfe-944">이 이벤트가 발생하면 공간을 확보하기 위해 시퀀스의 테일(즉, 기준 시퀀스 번호)이 앞으로 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-944">When this event is fired, the tail of the sequence (that is, the base sequence number) is moved forward to free up space.</span></span>  
  
 <span data-ttu-id="e7bfe-945">이 이벤트는 레코드 시퀀스에서 어떤 이유로든 공간을 확보해야 한다고 결정하면 언제든지 실행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-945">The event can be fired at any time when the record sequence decides that it must free up space, for any reason.</span></span> <span data-ttu-id="e7bfe-946">예를 들어, CLFS 정책 엔진은 동일한 로그 파일을 공유하는 두 로그 클라이언트의 테일이 너무 멀리 떨어져 있는 것이 확인되면 이벤트를 실행하도록 결정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-946">For example, the CLFS policy engine may decide to fire the event when it determines that the tails of two log clients sharing the same log file are too far apart.</span></span> <span data-ttu-id="e7bfe-947">공간 확보는 재시작 영역을 쓰거나, 로그의 뒷부분을 잘라낸 후 <xref:System.IO.Log.LogRecordSequence.AdvanceBaseSequenceNumber%2A> 메서드를 사용하여 공간을 지움으로써 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-947">Freeing space can be done by either writing restart areas, or truncating the log and using the <xref:System.IO.Log.LogRecordSequence.AdvanceBaseSequenceNumber%2A> method to clear space.</span></span> <span data-ttu-id="e7bfe-948">예제 부분의 코드 샘플에서는 두 번째 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-948">The code sample in the Example section demonstrates the second approach.</span></span>  
  
 <span data-ttu-id="e7bfe-949"><xref:System.IO.Log.FileRecordSequence.WriteRestartArea%2A> 이벤트 외부에서 <xref:System.IO.Log.LogRecordSequence.TailPinned> 메서드를 호출하여 공간을 확보할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-949">You can also call the <xref:System.IO.Log.FileRecordSequence.WriteRestartArea%2A> method outside of the <xref:System.IO.Log.LogRecordSequence.TailPinned> event to free space.</span></span> <span data-ttu-id="e7bfe-950">재시작 영역은 다른 로그 처리 시스템의 검사점과 비슷합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-950">A restart area is similar to a checkpoint in other log processing systems.</span></span> <span data-ttu-id="e7bfe-951">이 메서드를 호출하면 애플리케이션에서는 재시작 영역 전의 모든 이전 레코드가 완전히 완료되었으며 이후 레코드 추가에 사용할 수 있다고 간주합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-951">Calling this method indicates that the application considers all prior records before the restart area as fully completed, and usable for future record appends.</span></span> <span data-ttu-id="e7bfe-952">다른 레코드와 마찬가지로, 이 메서드가 기록한 레코드가 작동하려면 로그에 실제 빈 공간이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-952">Similar to any other records, the record written by this method requires actual free space in the log to function.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7bfe-953">다음 예제에서는 <xref:System.IO.Log.LogRecordSequence.TailPinned> 이벤트를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-953">This example shows how to use the <xref:System.IO.Log.LogRecordSequence.TailPinned> event.</span></span>  
  
```  
recordSequence.RetryAppend = true;  
recordSequence.TailPinned += new EventHandler<TailPinnedEventArgs>(HandleTailPinned);  
  
void HandleTailPinned(object sender, TailPinnedEventArgs tailPinnedEventArgs)  
{  
   // tailPinnedEventArgs.TargetSequenceNumber is the target   
   // sequence number to free up space to.    
   // However, this sequence number is not necessarily valid.  We have  
   // to use this sequence number as a starting point for finding a  
   // valid point within the log to advance toward. You need to  
   // identify a record with a sequence number equal to, or greater  
   // than TargetSequenceNumber; let's call this   
   // realTargetSequenceNumber. Once found, move the base  
  
   recordSequence.AdvanceBaseSequenceNumber(realTargetSequenceNumber);  
  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteRestartArea">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e7bfe-954"><see cref="T:System.IO.Log.LogRecordSequence" />에 재시작 영역을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-954">Writes a restart area to the <see cref="T:System.IO.Log.LogRecordSequence" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7bfe-955">재시작 영역은 클라이언트의 마지막 검사점 작업을 포함하는 정보를 임시로 저장하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-955">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="e7bfe-956">CLFS(Common Log File System)에서는 적어도 하나의 유효한 영역을 항상 사용할 수 있도록 하기 위해 두 개의 재시작 영역을 유지 관리합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-956">The Common Log File System (CLFS) maintains two restart areas to guarantee that at least one valid area is always available.</span></span> <span data-ttu-id="e7bfe-957">복구가 필요한 경우 CLFS에서는 재시작 영역을 읽고 마지막 검사점 작업에서 데이터를 모두 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-957">When a recovery is necessary, the CLFS reads its restart area and all the data from the last checkpoint operation.</span></span> <span data-ttu-id="e7bfe-958">이 데이터는 트랜잭션 테이블, 더티 페이지 테이블 및 열린 파일 테이블을 복구 프로세스에서 사용할 수 있도록 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-958">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="e7bfe-959">재시작 영역은 <xref:System.IO.Log.LogRecordSequence.ReadRestartAreas%2A> 메서드를 사용하여 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-959">A restart area can be read using the <xref:System.IO.Log.LogRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (ArraySegment&lt;byte&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As ArraySegment(Of Byte)) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(ArraySegment&lt;System::Byte&gt; data);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : ArraySegment&lt;byte&gt; -&gt; System.IO.Log.SequenceNumber&#xA;override this.WriteRestartArea : ArraySegment&lt;byte&gt; -&gt; System.IO.Log.SequenceNumber" Usage="logRecordSequence.WriteRestartArea data" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="e7bfe-960">연결하여 레코드로 추가할 배열 세그먼트입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-960">An array segment that will be concatenated and appended as the record.</span></span></param>
        <summary><span data-ttu-id="e7bfe-961"><see cref="T:System.IO.Log.LogRecordSequence" />에 재시작 영역을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-961">Writes a restart area to the <see cref="T:System.IO.Log.LogRecordSequence" />.</span></span> <span data-ttu-id="e7bfe-962">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-962">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7bfe-963">쓴 재시작 영역의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-963">The sequence number of the written restart area.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7bfe-964">재시작 영역은 클라이언트의 마지막 검사점 작업을 포함하는 정보를 임시로 저장하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-964">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="e7bfe-965">CLFS(Common Log File System)에서는 적어도 하나의 유효한 영역을 항상 사용할 수 있도록 하기 위해 두 개의 재시작 영역을 유지 관리합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-965">The Common Log File System (CLFS) maintains two restart areas to guarantee that at least one valid area is always available.</span></span> <span data-ttu-id="e7bfe-966">복구가 필요한 경우 CLFS에서는 재시작 영역을 읽고 마지막 검사점 작업에서 데이터를 모두 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-966">When a recovery is necessary, the CLFS reads its restart area and all the data from the last checkpoint operation.</span></span> <span data-ttu-id="e7bfe-967">이 데이터는 트랜잭션 테이블, 더티 페이지 테이블 및 열린 파일 테이블을 복구 프로세스에서 사용할 수 있도록 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-967">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="e7bfe-968">재시작 영역은 <xref:System.IO.Log.LogRecordSequence.ReadRestartAreas%2A> 메서드를 사용하여 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-968">A restart area can be read using the <xref:System.IO.Log.LogRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="e7bfe-969">바이트 배열 세그먼트의 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-969">The data in the byte array segments will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e7bfe-970">재시작 영역을 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-970">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7bfe-971">하나 이상의 인수가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-971">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7bfe-972">재시작 영역을 쓰는 동안 I/O 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-972">An I/O error occurred while writing the restart area.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7bfe-973">레코드 시퀀스에서 새 재시작 영역을 포함할 충분한 여유 공간을 만들 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-973">The record sequence could not make enough free space to contain the new restart area.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7bfe-974">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-974">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7bfe-975">하나 이상의 인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-975">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e7bfe-976">지정된 로그 시퀀스에 대한 액세스가 운영 체제에서 거부되는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-976">Access for the specified log sequence is denied by the operating system.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7bfe-977">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-977">There is not enough memory to continue the execution of the program.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As IList(Of ArraySegment(Of Byte))) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; -&gt; System.IO.Log.SequenceNumber&#xA;override this.WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; -&gt; System.IO.Log.SequenceNumber" Usage="logRecordSequence.WriteRestartArea data" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="e7bfe-978">연결하여 레코드로 추가할 바이트 배열 세그먼트의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-978">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <summary><span data-ttu-id="e7bfe-979"><see cref="T:System.IO.Log.LogRecordSequence" />에 재시작 영역을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-979">Writes a restart area to the <see cref="T:System.IO.Log.LogRecordSequence" />.</span></span> <span data-ttu-id="e7bfe-980">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-980">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7bfe-981">쓴 재시작 영역의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-981">The sequence number of the written restart area.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7bfe-982">재시작 영역은 클라이언트의 마지막 검사점 작업을 포함하는 정보를 임시로 저장하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-982">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="e7bfe-983">CLFS(Common Log File System)에서는 적어도 하나의 유효한 영역을 항상 사용할 수 있도록 하기 위해 두 개의 재시작 영역을 유지 관리합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-983">The Common Log File System (CLFS) maintains two restart areas to guarantee that at least one valid area is always available.</span></span> <span data-ttu-id="e7bfe-984">복구가 필요한 경우 CLFS에서는 재시작 영역을 읽고 마지막 검사점 작업에서 데이터를 모두 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-984">When a recovery is necessary, the CLFS reads its restart area and all the data from the last checkpoint operation.</span></span> <span data-ttu-id="e7bfe-985">이 데이터는 트랜잭션 테이블, 더티 페이지 테이블 및 열린 파일 테이블을 복구 프로세스에서 사용할 수 있도록 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-985">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="e7bfe-986">재시작 영역은 <xref:System.IO.Log.LogRecordSequence.ReadRestartAreas%2A> 메서드를 사용하여 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-986">A restart area can be read using the <xref:System.IO.Log.LogRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="e7bfe-987">바이트 배열 세그먼트의 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-987">The data in the byte array segments will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e7bfe-988">재시작 영역을 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-988">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7bfe-989">하나 이상의 인수가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-989">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7bfe-990">재시작 영역을 쓰는 동안 I/O 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-990">An I/O error occurred while writing the restart area.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7bfe-991">레코드 시퀀스에서 새 재시작 영역을 포함할 충분한 여유 공간을 만들 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-991">The record sequence could not make enough free space to contain the new restart area.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7bfe-992">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-992">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7bfe-993">하나 이상의 인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-993">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e7bfe-994">지정된 로그 시퀀스에 대한 액세스가 운영 체제에서 거부되는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-994">Access for the specified log sequence is denied by the operating system.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7bfe-995">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-995">There is not enough memory to continue the execution of the program.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As ArraySegment(Of Byte), newBaseSeqNum As SequenceNumber) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber newBaseSeqNum);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber&#xA;override this.WriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber" Usage="logRecordSequence.WriteRestartArea (data, newBaseSeqNum)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="e7bfe-996">연결하여 레코드로 추가할 바이트 배열 세그먼트의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-996">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="newBaseSeqNum"><span data-ttu-id="e7bfe-997">새 기준 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-997">The new base sequence number.</span></span> <span data-ttu-id="e7bfe-998">지정된 시퀀스 번호는 현재 기준 시퀀스 번호보다 크거나 같아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-998">The specified sequence number must be greater than or equal to the current base sequence number.</span></span></param>
        <summary><span data-ttu-id="e7bfe-999">재시작 영역을 <see cref="T:System.IO.Log.LogRecordSequence" />에 쓰고 기준 시퀀스 번호를 업데이트합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-999">Writes a restart area to the <see cref="T:System.IO.Log.LogRecordSequence" /> and updates the base sequence number.</span></span> <span data-ttu-id="e7bfe-1000">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1000">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7bfe-1001">쓴 재시작 영역의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1001">The sequence number of the written restart area.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7bfe-1002">재시작 영역은 클라이언트의 마지막 검사점 작업을 포함하는 정보를 임시로 저장하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1002">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="e7bfe-1003">CLFS(Common Log File System)에서는 적어도 하나의 유효한 영역을 항상 사용할 수 있도록 하기 위해 두 개의 재시작 영역을 유지 관리합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1003">The Common Log File System (CLFS) maintains two restart areas to guarantee that at least one valid area is always available.</span></span> <span data-ttu-id="e7bfe-1004">복구가 필요한 경우 CLFS에서는 재시작 영역을 읽고 마지막 검사점 작업에서 데이터를 모두 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1004">When a recovery is necessary, the CLFS reads its restart area and all the data from the last checkpoint operation.</span></span> <span data-ttu-id="e7bfe-1005">이 데이터는 트랜잭션 테이블, 더티 페이지 테이블 및 열린 파일 테이블을 복구 프로세스에서 사용할 수 있도록 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1005">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="e7bfe-1006">재시작 영역은 <xref:System.IO.Log.LogRecordSequence.ReadRestartAreas%2A> 메서드를 사용하여 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1006">A restart area can be read using the <xref:System.IO.Log.LogRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="e7bfe-1007">재시작 영역이 기록되면 바이트 배열 세그먼트의 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1007">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e7bfe-1008">재시작 영역을 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1008">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="e7bfe-1009">이 메서드가 성공적으로 완료되면 기준 세그먼트 번호가 업데이트된 것입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1009">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="e7bfe-1010">새 기준 시퀀스 번호보다 작은 시퀀스 번호를 가진 모든 로그 레코드에 액세스할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1010">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="e7bfe-1011">레코드 시퀀스가 삭제되었거나 잘못된 인수를 전달하는 경우 이 작업 내에서 즉시 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1011">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="e7bfe-1012">비동기 추가 요청 중에 발생한 오류(예: I/O 요청 중의 디스크 오류)는 <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A> 메서드를 호출할 때 예외로 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1012">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7bfe-1013">하나 이상의 인수가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1013">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7bfe-1014">재시작 영역을 쓰는 동안 I/O 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1014">An I/O error occurred while writing the restart area.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7bfe-1015">레코드 시퀀스에서 새 재시작 영역을 포함할 충분한 여유 공간을 만들 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1015">The record sequence could not make enough free space to contain the new restart area.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7bfe-1016">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1016">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As IList(Of ArraySegment(Of Byte)), newBaseSeqNum As SequenceNumber) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber newBaseSeqNum);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber&#xA;override this.WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber" Usage="logRecordSequence.WriteRestartArea (data, newBaseSeqNum)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="e7bfe-1017">연결하여 레코드로 추가할 바이트 배열 세그먼트의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1017">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="newBaseSeqNum"><span data-ttu-id="e7bfe-1018">새 기준 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1018">The new base sequence number.</span></span> <span data-ttu-id="e7bfe-1019">지정된 시퀀스 번호는 현재 기준 시퀀스 번호보다 크거나 같아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1019">The specified sequence number must be greater than or equal to the current base sequence number.</span></span></param>
        <summary><span data-ttu-id="e7bfe-1020">재시작 영역을 <see cref="T:System.IO.Log.LogRecordSequence" />에 쓰고 기준 시퀀스 번호를 업데이트합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1020">Writes a restart area to the <see cref="T:System.IO.Log.LogRecordSequence" /> and updates the base sequence number.</span></span> <span data-ttu-id="e7bfe-1021">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1021">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7bfe-1022">쓴 재시작 영역의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1022">The sequence number of the written restart area.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7bfe-1023">재시작 영역은 클라이언트의 마지막 검사점 작업을 포함하는 정보를 임시로 저장하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1023">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="e7bfe-1024">CLFS(Common Log File System)에서는 적어도 하나의 유효한 영역을 항상 사용할 수 있도록 하기 위해 두 개의 재시작 영역을 유지 관리합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1024">The Common Log File System (CLFS) maintains two restart areas to guarantee that at least one valid area is always available.</span></span> <span data-ttu-id="e7bfe-1025">복구가 필요한 경우 CLFS에서는 재시작 영역을 읽고 마지막 검사점 작업에서 데이터를 모두 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1025">When a recovery is necessary, the CLFS reads its restart area and all the data from the last checkpoint operation.</span></span> <span data-ttu-id="e7bfe-1026">이 데이터는 트랜잭션 테이블, 더티 페이지 테이블 및 열린 파일 테이블을 복구 프로세스에서 사용할 수 있도록 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1026">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="e7bfe-1027">재시작 영역은 <xref:System.IO.Log.LogRecordSequence.ReadRestartAreas%2A> 메서드를 사용하여 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1027">A restart area can be read using the <xref:System.IO.Log.LogRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="e7bfe-1028">재시작 영역이 기록되면 바이트 배열 세그먼트의 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1028">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e7bfe-1029">재시작 영역을 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1029">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="e7bfe-1030">이 메서드가 성공적으로 완료되면 기준 세그먼트 번호가 업데이트된 것입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1030">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="e7bfe-1031">새 기준 시퀀스 번호보다 작은 시퀀스 번호를 가진 모든 로그 레코드에 액세스할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1031">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="e7bfe-1032">레코드 시퀀스가 삭제되었거나 잘못된 인수를 전달하는 경우 이 작업 내에서 즉시 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1032">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="e7bfe-1033">비동기 추가 요청 중에 발생한 오류(예: I/O 요청 중의 디스크 오류)는 <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A> 메서드를 호출할 때 예외로 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1033">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7bfe-1034">하나 이상의 인수가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1034">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7bfe-1035">재시작 영역을 쓰는 동안 I/O 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1035">An I/O error occurred while writing the restart area.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7bfe-1036">레코드 시퀀스에서 새 재시작 영역을 포함할 충분한 여유 공간을 만들 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1036">The record sequence could not make enough free space to contain the new restart area.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7bfe-1037">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1037">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum, System.IO.Log.ReservationCollection reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum, class System.IO.Log.ReservationCollection reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As ArraySegment(Of Byte), newBaseSeqNum As SequenceNumber, reservations As ReservationCollection) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber newBaseSeqNum, System::IO::Log::ReservationCollection ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber&#xA;override this.WriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber" Usage="logRecordSequence.WriteRestartArea (data, newBaseSeqNum, reservations)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="e7bfe-1038">연결하여 레코드로 추가할 바이트 배열 세그먼트의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1038">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="newBaseSeqNum"><span data-ttu-id="e7bfe-1039">새 기준 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1039">The new base sequence number.</span></span> <span data-ttu-id="e7bfe-1040">지정된 시퀀스 번호는 현재 기준 시퀀스 번호보다 크거나 같아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1040">The specified sequence number must be greater than or equal to the current base sequence number.</span></span></param>
        <param name="reservations"><span data-ttu-id="e7bfe-1041">이 재시작 영역에 사용해야 하는 예약이 포함된 <see cref="T:System.IO.Log.ReservationCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1041">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span></span></param>
        <summary><span data-ttu-id="e7bfe-1042">예약을 사용하여 재시작 영역을 <see cref="T:System.IO.Log.LogRecordSequence" />에 쓰고 기준 시퀀스 번호를 업데이트합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1042">Writes a restart area to the <see cref="T:System.IO.Log.LogRecordSequence" /> using a reservation, and updates the base sequence number.</span></span> <span data-ttu-id="e7bfe-1043">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1043">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7bfe-1044">쓴 재시작 영역의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1044">The sequence number of the written restart area.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7bfe-1045">재시작 영역은 클라이언트의 마지막 검사점 작업을 포함하는 정보를 임시로 저장하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1045">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="e7bfe-1046">CLFS(Common Log File System)에서는 적어도 하나의 유효한 영역을 항상 사용할 수 있도록 하기 위해 두 개의 재시작 영역을 유지 관리합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1046">The Common Log File System (CLFS) maintains two restart areas to guarantee that at least one valid area is always available.</span></span> <span data-ttu-id="e7bfe-1047">복구가 필요한 경우 CLFS에서는 재시작 영역을 읽고 마지막 검사점 작업에서 데이터를 모두 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1047">When a recovery is necessary, the CLFS reads its restart area and all the data from the last checkpoint operation.</span></span> <span data-ttu-id="e7bfe-1048">이 데이터는 트랜잭션 테이블, 더티 페이지 테이블 및 열린 파일 테이블을 복구 프로세스에서 사용할 수 있도록 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1048">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="e7bfe-1049">재시작 영역은 <xref:System.IO.Log.LogRecordSequence.ReadRestartAreas%2A> 메서드를 사용하여 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1049">A restart area can be read using the <xref:System.IO.Log.LogRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="e7bfe-1050">재시작 영역이 기록되면 바이트 배열 세그먼트의 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1050">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e7bfe-1051">재시작 영역을 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1051">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="e7bfe-1052">예약을 지정하는 경우 쓴 재시작 영역은 컬렉션에 포함된 예약을 사용하여 이전에 예약된 공간을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1052">If a reservation is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="e7bfe-1053">메서드가 성공하면 데이터가 포함될 수 있는 가장 작은 예약을 사용하고 해당 예약이 컬렉션에서 제거됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1053">If the method succeeds, it will consume the smallest reservation that can contain the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="e7bfe-1054">이 메서드가 성공적으로 완료되면 기준 세그먼트 번호가 업데이트된 것입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1054">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="e7bfe-1055">새 기준 시퀀스 번호보다 작은 시퀀스 번호를 가진 모든 로그 레코드에 액세스할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1055">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="e7bfe-1056">레코드 시퀀스가 삭제되었거나 잘못된 인수를 전달하는 경우 이 작업 내에서 즉시 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1056">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="e7bfe-1057">비동기 추가 요청 중에 발생한 오류(예: I/O 요청 중의 디스크 오류)는 <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A> 메서드를 호출할 때 예외로 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1057">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7bfe-1058">하나 이상의 인수가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1058">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7bfe-1059">재시작 영역을 쓰는 동안 I/O 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1059">An I/O error occurred while writing the restart area.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7bfe-1060">레코드 시퀀스에서 새 재시작 영역을 포함할 충분한 여유 공간을 만들 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1060">The record sequence could not make enough free space to contain the new restart area.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7bfe-1061">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1061">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum, System.IO.Log.ReservationCollection reservationCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum, class System.IO.Log.ReservationCollection reservationCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber newBaseSeqNum, System::IO::Log::ReservationCollection ^ reservationCollection);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber&#xA;override this.WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber" Usage="logRecordSequence.WriteRestartArea (data, newBaseSeqNum, reservationCollection)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="e7bfe-1062">연결하여 레코드로 추가할 바이트 배열 세그먼트의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1062">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="newBaseSeqNum"><span data-ttu-id="e7bfe-1063">새 기준 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1063">The new base sequence number.</span></span> <span data-ttu-id="e7bfe-1064">지정된 시퀀스 번호는 현재 기준 시퀀스 번호보다 크거나 같아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1064">The specified sequence number must be greater than or equal to the current base sequence number.</span></span></param>
        <param name="reservationCollection"><span data-ttu-id="e7bfe-1065">이 재시작 영역에 사용해야 하는 예약이 포함된 <see cref="T:System.IO.Log.ReservationCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1065">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span></span></param>
        <summary><span data-ttu-id="e7bfe-1066">예약을 사용하여 재시작 영역을 <see cref="T:System.IO.Log.LogRecordSequence" />에 쓰고 기준 시퀀스 번호를 업데이트합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1066">Writes a restart area to the <see cref="T:System.IO.Log.LogRecordSequence" /> using a reservation, and updates the base sequence number.</span></span> <span data-ttu-id="e7bfe-1067">이 메서드는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1067">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7bfe-1068">쓴 재시작 영역의 시퀀스 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1068">The sequence number of the written restart area.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7bfe-1069">재시작 영역은 클라이언트의 마지막 검사점 작업을 포함하는 정보를 임시로 저장하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1069">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="e7bfe-1070">CLFS(Common Log File System)에서는 적어도 하나의 유효한 영역을 항상 사용할 수 있도록 하기 위해 두 개의 재시작 영역을 유지 관리합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1070">The Common Log File System (CLFS) maintains two restart areas to guarantee that at least one valid area is always available.</span></span> <span data-ttu-id="e7bfe-1071">복구가 필요한 경우 CLFS에서는 재시작 영역을 읽고 마지막 검사점 작업에서 데이터를 모두 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1071">When a recovery is necessary, the CLFS reads its restart area and all the data from the last checkpoint operation.</span></span> <span data-ttu-id="e7bfe-1072">이 데이터는 트랜잭션 테이블, 더티 페이지 테이블 및 열린 파일 테이블을 복구 프로세스에서 사용할 수 있도록 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1072">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="e7bfe-1073">재시작 영역은 <xref:System.IO.Log.LogRecordSequence.ReadRestartAreas%2A> 메서드를 사용하여 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1073">A restart area can be read using the <xref:System.IO.Log.LogRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="e7bfe-1074">재시작 영역이 기록되면 바이트 배열 세그먼트의 데이터는 레코드로 추가하기 위한 단일 바이트 배열로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1074">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e7bfe-1075">재시작 영역을 읽을 때 데이터를 배열 세그먼트로 다시 분할할 수 있는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1075">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="e7bfe-1076">예약을 지정하는 경우 쓴 재시작 영역은 컬렉션에 포함된 예약을 사용하여 이전에 예약된 공간을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1076">If a reservation is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="e7bfe-1077">메서드가 성공하면 데이터가 포함될 수 있는 가장 작은 예약을 사용하고 해당 예약이 컬렉션에서 제거됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1077">If the method succeeds, it will consume the smallest reservation that can contain the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="e7bfe-1078">이 메서드가 성공적으로 완료되면 기준 세그먼트 번호가 업데이트된 것입니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1078">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="e7bfe-1079">새 기준 시퀀스 번호보다 작은 시퀀스 번호를 가진 모든 로그 레코드에 액세스할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1079">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="e7bfe-1080">레코드 시퀀스가 삭제되었거나 잘못된 인수를 전달하는 경우 이 작업 내에서 즉시 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1080">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="e7bfe-1081">비동기 추가 요청 중에 발생한 오류(예: I/O 요청 중의 디스크 오류)는 <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A> 메서드를 호출할 때 예외로 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1081">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7bfe-1082"><paramref name="newBaseSeqNum" />이 이 시퀀스에 유효하지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1082"><paramref name="newBaseSeqNum" /> is not valid for this sequence.</span></span>  
  
<span data-ttu-id="e7bfe-1083">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1083">-or-</span></span> 
<span data-ttu-id="e7bfe-1084">지정된 로그 열거형 시작 시퀀스 번호가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1084">The specified log enumeration start sequence number is invalid.</span></span>  
  
<span data-ttu-id="e7bfe-1085">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1085">-or-</span></span> 
 <span data-ttu-id="e7bfe-1086"><paramref name="data" />가 최대 레코드 크기보다 커서 추가할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1086"><paramref name="data" /> cannot be appended because it is larger than the maximum record size.</span></span>  
  
<span data-ttu-id="e7bfe-1087">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1087">-or-</span></span> 
 <span data-ttu-id="e7bfe-1088">이 레코드 시퀀스를 통해 <paramref name="reservationCollection" />를 만들 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1088"><paramref name="reservationCollection" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7bfe-1089">매개 변수 중 하나 이상이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1089">One or more of the parameters is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7bfe-1090">활성 로그의 기존 또는 새 아카이브 테일이나 베이스가 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1090">A new or existing archive tail or base of the active log is invalid.</span></span>  
  
<span data-ttu-id="e7bfe-1091">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1091">-or-</span></span> 
 <span data-ttu-id="e7bfe-1092"><paramref name="newBaseSeqNum" />이 이 시퀀스의 기준 시퀀스 번호와 마지막 시퀀스 번호 사이에 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1092"><paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7bfe-1093">예기치 못한 I/O 예외 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1093">The request could not be performed because of an unexpected I/O exception.</span></span>  
  
<span data-ttu-id="e7bfe-1094">또는</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1094">-or-</span></span> 
<span data-ttu-id="e7bfe-1095">I/O 디바이스 오류 때문에 요청을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1095">The request could not be performed because of an I/O device error.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7bfe-1096">시퀀스가 삭제된 후 메서드가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1096">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7bfe-1097">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1097">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e7bfe-1098">지정된 로그 시퀀스에 대한 액세스가 운영 체제에서 거부되는 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1098">Access for the specified log sequence is denied by the operating system.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7bfe-1099">레코드 시퀀스가 꽉 찬 경우</span><span class="sxs-lookup"><span data-stu-id="e7bfe-1099">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>