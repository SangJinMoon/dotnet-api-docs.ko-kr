<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="FileRegion.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac597adf32bba0b47a322332d0aabb49cf760232b10.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">97adf32bba0b47a322332d0aabb49cf760232b10</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.Log.FileRegion">
          <source>Represents a region of a file to be archived.</source>
          <target state="translated">보관할 파일의 영역을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.IO.Log.FileRegion">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Log.FileRegion">
          <source>A <ph id="ph1">&lt;xref:System.IO.Log.LogArchiveSnapshot&gt;</ph> object contains the information necessary to generate a consistent backup of the data in a <ph id="ph2">&lt;xref:System.IO.Log.LogStore&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Log.LogArchiveSnapshot&gt;</ph> 개체에는 <ph id="ph2">&lt;xref:System.IO.Log.LogStore&gt;</ph>에 일관성 있는 데이터 백업을 생성하는 데 필요한 정보가 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Log.FileRegion">
          <source>The actual data is contained in the enumerable collection of <ph id="ph1">&lt;xref:System.IO.Log.FileRegion&gt;</ph> objects returned by the <ph id="ph2">&lt;xref:System.IO.Log.LogArchiveSnapshot.ArchiveRegions%2A&gt;</ph> property.</source>
          <target state="translated">실제 데이터는 <ph id="ph1">&lt;xref:System.IO.Log.FileRegion&gt;</ph> 속성에서 반환하는 <ph id="ph2">&lt;xref:System.IO.Log.LogArchiveSnapshot.ArchiveRegions%2A&gt;</ph> 개체의 열거 가능한 컬렉션에 들어 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Log.FileRegion">
          <source>Each <ph id="ph1">&lt;xref:System.IO.Log.FileRegion&gt;</ph> instance represents a sequence of bytes in a file that must be archived.</source>
          <target state="translated">각 <ph id="ph1">&lt;xref:System.IO.Log.FileRegion&gt;</ph> 인스턴스는 보관해야 하는 파일의 바이트 시퀀스를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Log.FileRegion">
          <source>The following example demonstrates how to archive a log store to XML using the <ph id="ph1">&lt;xref:System.IO.Log.LogStore&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Log.FileRegion&gt;</ph> classes.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.IO.Log.LogStore&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.Log.FileRegion&gt;</ph> 클래스를 사용하여 로그 저장소를 XML로 보관하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="P:System.IO.Log.FileRegion.FileLength">
          <source>Gets the length of the file in bytes.</source>
          <target state="translated">파일의 길이(바이트)를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Log.FileRegion.FileLength">
          <source>The length of the file in bytes.</source>
          <target state="translated">파일의 길이(바이트)입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Log.FileRegion.FileLength">
          <source>This property returns the length of the entire file instead of that of a single region in the file.</source>
          <target state="translated">이 속성은 파일에 있는 단일 영역의 길이 대신 전체 파일의 길이를 반환합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Log.FileRegion.FileLength">
          <source>The length of the region in the file can be found by examining the <ph id="ph1">&lt;xref:System.IO.Log.LogStore.Length%2A&gt;</ph> property of the stream returned by the <ph id="ph2">&lt;xref:System.IO.Log.FileRegion.GetStream%2A&gt;</ph> method.</source>
          <target state="translated">파일에 있는 영역의 길이는 <ph id="ph1">&lt;xref:System.IO.Log.LogStore.Length%2A&gt;</ph> 메서드에서 반환하는 스트림의 <ph id="ph2">&lt;xref:System.IO.Log.FileRegion.GetStream%2A&gt;</ph> 속성을 확인하여 찾을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Log.FileRegion.FileLength">
          <source>The following example demonstrates how to archive a log store to XML using the <ph id="ph1">&lt;xref:System.IO.Log.LogStore&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Log.FileRegion&gt;</ph> classes.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.IO.Log.LogStore&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.Log.FileRegion&gt;</ph> 클래스를 사용하여 로그 저장소를 XML로 보관하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.IO.Log.FileRegion.GetStream">
          <source>Returns a stream that can be used to read the data to be archived.</source>
          <target state="translated">보관할 데이터를 읽는 데 사용할 수 있는 스트림을 반환합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.IO.Log.FileRegion.GetStream">
          <source>A stream that contains the data to be archived.</source>
          <target state="translated">보관할 데이터를 포함하는 스트림입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Log.FileRegion.GetStream">
          <source>The following example demonstrates how to archive a log store to XML using the <ph id="ph1">&lt;xref:System.IO.Log.LogStore&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Log.FileRegion&gt;</ph> classes.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.IO.Log.LogStore&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.Log.FileRegion&gt;</ph> 클래스를 사용하여 로그 저장소를 XML로 보관하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.IO.Log.FileRegion.GetStream">
          <source>The request could not be performed because of an unexpected I/O exception.</source>
          <target state="translated">예기치 못한 I/O 예외 때문에 요청을 수행할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.IO.Log.FileRegion.GetStream">
          <source>The operation is not supported.</source>
          <target state="translated">작업이 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.IO.Log.FileRegion.GetStream">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">시퀀스가 삭제된 후 메서드가 호출된 경우</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.IO.Log.FileRegion.GetStream">
          <source>There is not enough memory to continue the execution of the program.</source>
          <target state="translated">메모리가 부족하여 프로그램을 계속 실행할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.IO.Log.FileRegion.GetStream">
          <source>Access for the specified log store is denied by the operating system.</source>
          <target state="translated">지정된 로그 저장소에 대한 액세스가 운영 체제에서 거부된 경우</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.IO.Log.FileRegion.Offset">
          <source>Gets the offset into the file where the data begins.</source>
          <target state="translated">데이터가 시작되는 파일의 오프셋을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Log.FileRegion.Offset">
          <source>The offset into the file where the data begins.</source>
          <target state="translated">데이터가 시작되는 파일의 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Log.FileRegion.Offset">
          <source>The following example demonstrates how to archive a log store to XML using the <ph id="ph1">&lt;xref:System.IO.Log.LogStore&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Log.FileRegion&gt;</ph> classes.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.IO.Log.LogStore&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.Log.FileRegion&gt;</ph> 클래스를 사용하여 로그 저장소를 XML로 보관하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.IO.Log.FileRegion.Path">
          <source>Gets the fully qualified location of the file containing this region.</source>
          <target state="translated">이 영역을 포함하는 파일의 정규화된 위치를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Log.FileRegion.Path">
          <source>The fully qualified location of the file containing this region.</source>
          <target state="translated">이 영역을 포함하는 파일의 정규화된 위치입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Log.FileRegion.Path">
          <source>The following example demonstrates how to archive a log store to XML using the <ph id="ph1">&lt;xref:System.IO.Log.LogStore&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Log.FileRegion&gt;</ph> classes.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.IO.Log.LogStore&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.Log.FileRegion&gt;</ph> 클래스를 사용하여 로그 저장소를 XML로 보관하는 방법을 보여 줍니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>