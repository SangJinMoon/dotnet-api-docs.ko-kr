<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="LogRecord.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50cb974a8902cc06f6b643ea85411d60e6ccc09f7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0cb974a8902cc06f6b643ea85411d60e6ccc09f7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.Log.LogRecord">
          <source>Represents a log record that has been appended to a sequence.</source>
          <target state="translated">시퀀스에 추가된 로그 레코드를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.IO.Log.LogRecord.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Log.LogRecord" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Log.LogRecord" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="P:System.IO.Log.LogRecord.Data">
          <source>When overridden in a derived class, gets a stream that contains the record data.</source>
          <target state="translated">파생 클래스에서 재정의되는 경우 레코드 데이터를 포함하는 스트림을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Log.LogRecord.Data">
          <source>A stream that contains the record data.</source>
          <target state="translated">레코드 데이터를 포함하는 스트림입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="P:System.IO.Log.LogRecord.Data">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Log.LogRecord" /&gt;</ph> has been disposed of.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Log.LogRecord" /&gt;</ph>가 삭제된 경우</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.IO.Log.LogRecord.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.IO.Log.LogRecord" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.IO.Log.LogRecord" /&gt;</ph>에서 사용하는 모든 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Log.LogRecord.Dispose">
          <source>You should call this method when you finish using the <ph id="ph1">&lt;xref:System.IO.Log.LogRecord&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Log.LogRecord&gt;</ph> 인스턴스를 사용한 후에 이 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Log.LogRecord.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.IO.Log.LogRecord.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.IO.Log.LogRecord&gt;</ph> instance in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Log.LogRecord.Dispose%2A&gt;</ph> 메서드를 사용하면 <ph id="ph2">&lt;xref:System.IO.Log.LogRecord&gt;</ph> 인스턴스가 사용할 수 없는 상태가 됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Log.LogRecord.Dispose">
          <source>After calling this method, you must release all references to the <ph id="ph1">&lt;xref:System.IO.Log.LogRecord&gt;</ph> instance, so that the garbage collector can reclaim the memory that the <ph id="ph2">&lt;xref:System.IO.Log.LogRecord&gt;</ph> instance was occupying.</source>
          <target state="translated">이 메서드를 호출한 후에 가비지 수집기가 <ph id="ph1">&lt;xref:System.IO.Log.LogRecord&gt;</ph> 인스턴스에서 차지한 메모리를 회수할 수 있도록 <ph id="ph2">&lt;xref:System.IO.Log.LogRecord&gt;</ph> 인스턴스에 대한 모든 참조를 해제해야 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Log.LogRecord.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.IO.Log.LogRecord.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.IO.Log.LogRecord&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Log.LogRecord.Dispose%2A&gt;</ph> 인스턴스에 대한 마지막 참조를 해제하기 전에는 반드시 <ph id="ph2">&lt;xref:System.IO.Log.LogRecord&gt;</ph>를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Log.LogRecord.Dispose">
          <source>Otherwise, the resources it is using cannot be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.IO.Log.LogRecord&gt;</ph> instance's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">이렇게 하지 않으면 가비지 수집기가 <ph id="ph1">&lt;xref:System.IO.Log.LogRecord&gt;</ph> 인스턴스의 <ph id="ph2">`Finalize`</ph> 메서드를 호출할 때까지 사용 중인 리소스가 해제될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.IO.Log.LogRecord.Previous">
          <source>When overridden in a derived class, gets the sequence number of the previous record.</source>
          <target state="translated">파생 클래스에서 재정의되는 경우 이전 레코드의 시퀀스 번호를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Log.LogRecord.Previous">
          <source>The sequence number of the previous record.</source>
          <target state="translated">이전 레코드의 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Log.LogRecord.Previous">
          <source>The value of this property is the sequence number that was provided as the <ph id="ph1">`previousUndoRecord`</ph> parameter in the <ph id="ph2">&lt;xref:System.IO.Log.IRecordSequence.Append%2A&gt;</ph> method.</source>
          <target state="translated">이 속성의 값은 <ph id="ph1">`previousUndoRecord`</ph> 메서드에서 <ph id="ph2">&lt;xref:System.IO.Log.IRecordSequence.Append%2A&gt;</ph> 매개 변수로 제공된 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Log.LogRecord.Previous">
          <source>Aside from its use in enumeration, this sequence number is treated as opaque by the record sequence.</source>
          <target state="translated">이 시퀀스 번호는 열거형에서의 사용을 제외하고 레코드 시퀀스에서 불투명한 값으로 처리됩니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.IO.Log.LogRecord.SequenceNumber">
          <source>When overridden in a derived class, gets the sequence number of this record.</source>
          <target state="translated">파생 클래스에서 재정의되는 경우 이 레코드의 시퀀스 번호를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Log.LogRecord.SequenceNumber">
          <source>The sequence number of this record.</source>
          <target state="translated">이 레코드의 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.IO.Log.LogRecord.User">
          <source>When overridden in a derived class, gets the sequence number of the next record.</source>
          <target state="translated">파생 클래스에서 재정의되는 경우 다음 레코드의 시퀀스 번호를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Log.LogRecord.User">
          <source>The sequence number of the next record in the user-specified chain.</source>
          <target state="translated">사용자가 지정한 체인에서 다음 레코드의 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Log.LogRecord.User">
          <source>The value of this property is the sequence number that was provided as the <ph id="ph1">`nextUndoRecord`</ph> parameter in the <ph id="ph2">&lt;xref:System.IO.Log.IRecordSequence.Append%2A&gt;</ph> method.</source>
          <target state="translated">이 속성의 값은 <ph id="ph1">`nextUndoRecord`</ph> 메서드에서 <ph id="ph2">&lt;xref:System.IO.Log.IRecordSequence.Append%2A&gt;</ph> 매개 변수로 제공된 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Log.LogRecord.User">
          <source>Aside from its use in enumeration, this sequence number is treated as opaque by the record sequence.</source>
          <target state="translated">이 시퀀스 번호는 열거형에서의 사용을 제외하고 레코드 시퀀스에서 불투명한 값으로 처리됩니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>