<Type Name="DefaultAuthenticationEventHandler" FullName="System.Web.Security.DefaultAuthenticationEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c47c5d60cae4a606dec1baa73aed4ebc507f1055" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30545007" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void DefaultAuthenticationEventHandler(object sender, DefaultAuthenticationEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DefaultAuthenticationEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.DefaultAuthenticationEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub DefaultAuthenticationEventHandler(sender As Object, e As DefaultAuthenticationEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void DefaultAuthenticationEventHandler(System::Object ^ sender, DefaultAuthenticationEventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Web.Security.DefaultAuthenticationEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">이벤트 소스입니다.</param>
    <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Web.Security.DefaultAuthenticationEventArgs" />입니다.</param>
    <summary>
      <see cref="T:System.Web.Security.DefaultAuthenticationModule" />의 **DefaultAuthentication_OnAuthenticate** 이벤트를 처리하는 메서드를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.DefaultAuthenticationEventHandler> 대리자에 대해 정의 된는 <xref:System.Web.Security.DefaultAuthenticationModule.Authenticate> 의 이벤트는 <xref:System.Web.Security.DefaultAuthenticationModule> 클래스입니다. 에 액세스할 수 있습니다는 <xref:System.Web.Security.DefaultAuthenticationModule.Authenticate> 의 이벤트는 <xref:System.Web.Security.DefaultAuthenticationModule> 라는 서브루틴을 지정 하 여 클래스 **DefaultAuthentication_OnAuthenticate** ASP.NET 응용 프로그램의 Global.asax 파일에 있습니다. <xref:System.Web.Security.DefaultAuthenticationModule.Authenticate> 후에 이벤트가 발생는 <xref:System.Web.HttpApplication.AuthenticateRequest> 이벤트 되어 있는지 확인 하는 데 사용 되 고는 <xref:System.Web.HttpContext.User%2A> 현재 <xref:System.Web.HttpContext> 채워집니다는 <xref:System.Security.Principal.IPrincipal> 개체입니다.  
  
 사용할 수 있습니다는 <xref:System.Web.Security.DefaultAuthenticationEventArgs.Context%2A> 속성은 <xref:System.Web.Security.DefaultAuthenticationEventArgs> 개체에 제공 되는 **DefaultAuthentication_OnAuthenticate** 설정 하는 이벤트는 <xref:System.Web.HttpContext.User%2A> 현재 <xref:System.Web.HttpContext> 를사용자지정<xref:System.Security.Principal.IPrincipal>개체입니다. 에 대 한 값을 지정 하지 않으면는 <xref:System.Web.HttpContext.User%2A> 속성의는 <xref:System.Web.HttpContext> 중에 제공 되는 **DefaultAuthentication_OnAuthenticate** 이벤트에는 <xref:System.Web.Security.DefaultAuthenticationModule> 설정는 <xref:System.Web.HttpContext.User%2A> 는 속성<xref:System.Web.HttpContext>에 <xref:System.Security.Principal.GenericPrincipal> 사용자 정보를 포함 하는 개체입니다.  
  
 **DefaultAuthentication_OnAuthenticate** 후에 이벤트가 발생 된 <xref:System.Web.HttpApplication.AuthenticateRequest> 이벤트 하기 전에 <xref:System.Web.HttpApplication.AuthorizeRequest> 이벤트입니다. 거부 하거나 응용 프로그램에 대 한 액세스 허용 사용자 이름에 따라는 섹션이 있는 경우 수정 된 <xref:System.Web.HttpContext.User%2A> 현재 <xref:System.Web.HttpContext> 응용 프로그램의 동작에 영향을 줄 수 있습니다. 수 있도록 하는 동안 설정 된 사용자 이름에서 **DefaultAuthentication_OnAuthenticate** 이벤트 구성에서 섹션을 지정 하는 경우 것으로 간주 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 **DefaultAuthentication_OnAuthenticate** 테스트 하는 이벤트 여부는 <xref:System.Web.HttpContext.User%2A> 현재 <xref:System.Web.HttpContext> 은 `null`합니다. 속성을 `null`, 샘플 집합은 <xref:System.Web.HttpContext.User%2A> 현재 <xref:System.Web.HttpContext> 에 <xref:System.Security.Principal.GenericPrincipal> 개체, 여기서는 <xref:System.Security.Principal.GenericPrincipal.Identity%2A> 의 <xref:System.Security.Principal.GenericPrincipal> 개체는는 <xref:System.Security.Principal.GenericIdentity> 와 <xref:System.Security.Principal.GenericIdentity.Name%2A> "기본값의 값 ".  
  
> [!NOTE]
>  **DefaultAuthentication_OnAuthenticate** 이벤트가 발생 하기 전에 <xref:System.Web.HttpApplication.AuthorizeRequest> 이벤트입니다. 결과적으로 설정 하는 경우는 <xref:System.Web.HttpContext.User%2A> 현재 <xref:System.Web.HttpContext> 을 사용자 지정 id 응용 프로그램의 동작이 낮아질 수 있습니다. 예를 들어, 사용 하는 경우는 <xref:System.Web.Security.FormsAuthentication> 클래스는 인증 된 사용자에 게 부여 액세스 사이트에 섹션을 사용 하 고 지정 하 여 `<deny users="?" />`, 사용자는 이름, 해야 하는 대로이 샘플 무시 되는 요소 하면는 "default"입니다. 지정 하면 대신 `<deny users="default" />` 인증 된 사용자만 사이트에 액세스할 수 있도록 합니다.  
  
 [!code-csharp[System.Web.Security.DefaultAuthenticationModule#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.DefaultAuthenticationModule/CS/global.asax#1)]
 [!code-vb[System.Web.Security.DefaultAuthenticationModule#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.DefaultAuthenticationModule/VB/global.asax#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>