<Type Name="AuthorizationStoreRoleProvider" FullName="System.Web.Security.AuthorizationStoreRoleProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="23dd5c2cefcf21cd1bf6e2a7acccc3a0e1c3d50f" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37750687" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AuthorizationStoreRoleProvider : System.Web.Security.RoleProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AuthorizationStoreRoleProvider extends System.Web.Security.RoleProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.AuthorizationStoreRoleProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class AuthorizationStoreRoleProvider&#xA;Inherits RoleProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class AuthorizationStoreRoleProvider : System::Web::Security::RoleProvider" />
  <TypeSignature Language="F#" Value="type AuthorizationStoreRoleProvider = class&#xA;    inherit RoleProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Security.RoleProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Manages storage of role-membership information for an ASP.NET application in an authorization-manager policy store, either in an XML file, in an Active Directory, or on an Active Directory Application Mode server.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 클래스에서 사용 되는 <xref:System.Web.Security.Roles> 및 <xref:System.Web.Security.RolePrincipal> 를 관리자 권한 부여 저장소를 사용 하 여 ASP.NET 응용 프로그램 역할-관리 서비스를 제공 하는 클래스입니다. 응용 프로그램에 대 한 다양 한 수준의 권한 부여를 지정 하려면 역할 관리를 사용할 수 있습니다. 권한 부여 관리자 Microsoft Management Console을 사용 하 여 액세스할 수 있습니다.  
  
 <xref:System.Web.Security.AuthorizationStoreRoleProvider> 개체 모두 Windows 인증과 함께 작동 하 고 인증 모드를 형성 합니다.  
  
 구성할 수는 <xref:System.Web.Security.AuthorizationStoreRoleProvider> XML 파일을 로컬 또는 Active Directory 또는 Active Directory 응용 프로그램 모드 (ADAM) 서버를 사용 하는 개체입니다. 로컬 파일을 사용 하는 경우 연결 문자열은 다음 예제와 같아야 합니다.  
  
```  
msxml://<path to xml file>  
```  
  
 로컬 파일 디렉터리 트리를 ASP.NET 웹 응용 프로그램에 저장 된 경우 물결표를 사용할 수 있습니다 ("~") 문자를 루트 디렉터리를 나타냅니다. 예를 들어 로컬 파일을 웹 응용 프로그램의 데이터 디렉터리에 저장 되도록 나타내려면 다음 예제와 비슷한 연결 문자열을 사용 합니다.  
  
 `msxml://~\App_Data\datafilename.xml`  
  
> [!IMPORTANT]
>  웹 응용 프로그램 디렉터리에 XML 데이터 파일을 저장 하는 것은 잠재적 보안 위협을입니다. 기본적으로 IIS는 웹에 XML 데이터 파일을 제공 합니다. ASP.NET 응용 프로그램에서 로컬 데이터 파일을 사용 하는 경우 보안 향상을 위해 데이터 파일을 저장 해야 합니다 `App_Data` 디렉터리입니다. 에 저장 된 파일을 `App_Data` 디렉터리 웹에 제공 되지 것입니다.  
  
 Active Directory 또는 ADAM 서버에 대 한 정책 저장소를 사용 하는 경우 연결 문자열에는 다음 예와 비슷해야 합니다.  
  
 `msldap://myserver/CN=MyAzManStore,OU=MyOU,DC=MyDomain,DC=MyDC,DC=Com`  
  
 예외에 대 한 설명서에 나열 <xref:System.Web.Security.AuthorizationStoreRoleProvider> 개체 메서드는에 의해 발생 하는 예외는 <xref:System.Web.Security.AuthorizationStoreRoleProvider> 개체입니다. 공급자가 기본 인증 관리자 런타임에 의존 하므로 <xref:System.Runtime.InteropServices.COMException> 예외 수 때마다 발생 합니다 <xref:System.Web.Security.AuthorizationStoreRoleProvider> 개체 인증 관리자 런타임 메서드 호출을 전달 합니다.  
  
> [!IMPORTANT]
>  <xref:System.Web.Security.AuthorizationStoreRoleProvider> 개체 부분 신뢰 환경에서 실행 하기 위한 요구 사항은:  
>   
>  ASP.NET 응용 프로그램에서 파일 I/O 권한이 현재 신뢰 수준 정책 파일 기반 저장소를 사용 하 여 결정할 때 여부 및 공급자가 쓰기 작업 수입니다. ASP.NET 응용 프로그램 정책 저장소에서 데이터를 읽는 파일에 대 한 권한이 읽기 있어야 하며 새 정보를 저장 하거나 정책 저장소의 기존 정보를 업데이트 하려면 쓰기 권한이 있어야 합니다. 기본 보통 신뢰 정책 파일 해당 응용 프로그램 디렉터리에는 ASP.NET 응용 프로그램 읽기/쓰기 권한을 제공합니다. 기본 낮은 신뢰 정책 파일 읽기 권한을 해당 응용 프로그램 디렉터리에 ASP.NET 응용 프로그램에만 제공 합니다. 또한 ASP.NET 응용 프로그램을 실행 중인 프로세스 id를 읽거나 쓸 정책 파일을 파일 시스템 권한이 있어야 합니다.  
>   
>  ASP.NET 응용 프로그램 때문에 비관리 코드 권한이 필요한 Active Directory 또는 ADAM 서버를 사용 하는 경우 내부 <xref:System.Web.Security.AuthorizationStoreRoleProvider> 개체 코드는 COM interop를 사용 합니다.  
>   
>  사용 하는 경우는 <xref:System.Web.Security.AuthorizationStoreRoleProvider> ASP.NET 외부에서 개체 호출 코드에서 비관리 코드 권한이 필요 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하도록 설정 된 Web.config 파일을 <xref:System.Web.Security.AuthorizationStoreRoleProvider> 역할 관리에 대 한 합니다.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="AuthorizationServices" connectionString="msxml://~\App_Data\SampleStore.xml" />  
  </connectionStrings>  
  
  <system.web>  
  
    <authentication mode="Windows" />  
    <identity impersonate="true" />  
  
    <roleManager defaultProvider="AuthorizationStoreRoleProvider"   
      enabled="true"  
      cacheRolesInCookie="true"  
      cookieName=".ASPROLES"  
      cookieTimeout="30"  
      cookiePath="/"  
      cookieRequireSSL="false"  
      cookieSlidingExpiration="true"  
      cookieProtection="All" >  
      <providers>  
        <clear />  
          <add  
            name="AuthorizationStoreRoleProvider"  
            type="System.Web.Security.AuthorizationStoreRoleProvider"  
            connectionStringName="AuthorizationServices"  
            applicationName="SampleApplication"   
            cacheRefreshInterval="60"  
            scopeName="" />  
      </providers>  
    </roleManager>  
  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AuthorizationStoreRoleProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AuthorizationStoreRoleProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.AuthorizationStoreRoleProvider.%23ctor%2A> 의 인스턴스를 만드는 ASP.NET에서 생성자를 호출 합니다 <xref:System.Web.Security.AuthorizationStoreRoleProvider> 응용 프로그램에 대 한 구성에 지정 된 클래스입니다. 코드에서 사용할이 생성자를 사용 하는 것이 없습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddUsersToRoles">
      <MemberSignature Language="C#" Value="public override void AddUsersToRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddUsersToRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.AddUsersToRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddUsersToRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AddUsersToRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="override this.AddUsersToRoles : string[] * string[] -&gt; unit" Usage="authorizationStoreRoleProvider.AddUsersToRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">A string array of user names to be added to the specified roles.</param>
        <param name="roleNames">A string array of role names to add the specified user names to.</param>
        <summary>Adds the specified user names to each of the specified roles.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.AuthorizationStoreRoleProvider.AddUsersToRoles%2A> 메서드를 호출 합니다 <xref:System.Web.Security.Roles> ASP.NET 응용 프로그램의 구성 파일 (Web.config)에서 지정한 권한 부여 관리자 데이터 저장소에서 하나 이상의 역할을 사용 하 여 하나 이상의 사용자를 연결 하는 클래스입니다. 이 메서드는 합니다 <xref:System.Web.Security.Roles.AddUserToRole%2A?displayProperty=nameWithType>, <xref:System.Web.Security.Roles.AddUserToRoles%2A?displayProperty=nameWithType>, <xref:System.Web.Security.Roles.AddUsersToRole%2A?displayProperty=nameWithType>, 및 <xref:System.Web.Security.Roles.AddUsersToRoles%2A?displayProperty=nameWithType> 메서드를 <xref:System.Web.Security.Roles> 클래스입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 하나 이상의 사용자 역할에 추가 하거나 역할에서 사용자를 제거 합니다. 역할 관리를 사용 하도록 설정 하는 Web.config 파일의 예제를 참조 하세요. <xref:System.Web.Security.AuthorizationStoreRoleProvider>합니다.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">One of the specified user names is <see langword="null" />.  -or-  One of the specified role names is <see langword="null" />.  -or-  <paramref name="usernames" /> is <see langword="null" />.  -or-  <paramref name="roleNames" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">One of the specified user names is an empty string or contains a comma (,).  -or-  One of the specified role names is an empty string or contains a comma (,).  -or-  <paramref name="usernames" /> contains a duplicate element.  -or-  <paramref name="roleNames" /> contains a duplicate element.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">The configured <see langword="applicationName" /> was not found.  -or-  The configured <see langword="scopeName" /> was not found.  -or-  The authorization-manager runtime is not installed on the server.</exception>
        <exception cref="T:System.IO.FileNotFoundException">The <see langword="connectionStringName" /> attribute references a connection string to a file that does not exist.</exception>
        <exception cref="T:System.Web.HttpException">The <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> instance is configured with a file-based policy store, and read access to the file is not allowed at the current trust level.</exception>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the authorization store application for which to store and retrieve role information.</summary>
        <value>권한 부여의 이름을 저장 하 고 역할 정보를 검색 하는 응용 프로그램을 저장 합니다. 기본값은는 <see cref="P:System.Web.HttpRequest.ApplicationPath" /> 현재 속성 값 <see cref="P:System.Web.HttpContext.Request" />합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> 에서 사용 되는 <xref:System.Web.Security.AuthorizationStoreRoleProvider> 여러 ASP.NET을 사용 하도록 설정 하는 다른 권한 부여 관리자 응용 프로그램을 사용 하 여 사용자 및 역할을 연결할 동일한 권한 부여 관리자 정책을 사용 하 여 응용 프로그램 없이 역할 정보를 저장할 저장소 중복 역할 이름 간의 충돌을 일으키지 합니다. 로 인해 여러 ASP.NET 응용 프로그램에서 동일한 값을 지정 하 여 동일한 정책 저장소를 사용할 수는 또는 <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> 속성입니다. 합니다 <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> 속성을 프로그래밍 방식으로 설정할 수 있습니다. 또는 사용 하 여 응용 프로그램의 Web.config 파일에서 선언적으로 설정할 수 있습니다는 `applicationName` 특성입니다.  
  
 에 대 한 값을 지정 하지 않으면를 `applicationName` Web.config 파일의 특성에에서 해당 <xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=nameWithType> 현재 속성 값 <xref:System.Web.HttpContext.Request%2A?displayProperty=nameWithType> 개체를 사용 합니다.  
  
> [!NOTE]
>  권한 부여 관리자 응용 프로그램 이름에 포함 된 "/" 문자를 포함할 수 없습니다는 <xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=nameWithType> 속성입니다. 결과적으로, 기본값이 <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> 권한 부여 관리자 응용 프로그램 이름으로 속성을 사용할 수 없습니다 및 응용 프로그램의 Web.config 파일은 항상 지정 해야는 `applicationName` 특성을 `provider` 구성 요소 프로그램 <xref:System.Web.Security.AuthorizationStoreRoleProvider> 인스턴스.  
  
> [!CAUTION]
>  단일 기본 역할 공급자 인스턴스를 모든 제공한 요청에 대 한 사용 되기 때문에 <xref:System.Web.HttpApplication> 개체를 여러 요청이 동시에 실행을 설정 하려고 할 수 있습니다는 <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> 속성 값입니다. 합니다 <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> 속성은 여러 쓰기 작업에 대해 안전 하 고 변경 하는 스레드는 <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> 여러 사용자가 응용 프로그램의 경우 속성 값이 예기치 않은 동작이 발생할 수 있습니다. 사용자가 설정할 수 있는 코드를 작성 하지 않는 것이 좋습니다는 <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> 속성 필요한 경우가 아니면 합니다. 응용 프로그램의 예로 설정 하는 경우는 <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> 속성 해야 할 수 있습니다 여러 응용 프로그램에 대 한 역할 데이터를 관리 하는 관리 응용 프로그램입니다. 단일 사용자 응용 프로그램 및 웹 응용 프로그램이 아닙니다. 이러한 응용 프로그램 이어야 합니다.  
  
   
  
## Examples  
 다음 예제에서는 요소를 `system.web` ASP.NET 응용 프로그램에 대 한 Web.config 파일의 섹션입니다. 응용 프로그램의 지정 <xref:System.Web.Security.AuthorizationStoreRoleProvider> 집합과 인스턴스를 <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> 속성을 `MyApplication`입니다.  
  
```  
<roleManager defaultProvider="AuthorizationStoreProvider"   
  enabled="true"  
  cacheRolesInCookie="true"  
  cookieName=".ASPROLES"  
  cookieTimeout="30"  
  cookiePath="/"  
  cookieRequireSSL="false"  
  cookieSlidingExpiration="true"  
  cookieProtection="All" >  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.AuthorizationStoreRoleProvider"  
      connectionStringName="AuthorizationStoreServices"   
      scopeName="MyScope"  
      applicationName="MyApplication" />  
  </providers>  
</roleManager>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">An attempt was made to set the <see cref="P:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName" /> to a string that is longer than 256 characters.</exception>
      </Docs>
    </Member>
    <Member MemberName="CacheRefreshInterval">
      <MemberSignature Language="C#" Value="public int CacheRefreshInterval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheRefreshInterval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.AuthorizationStoreRoleProvider.CacheRefreshInterval" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CacheRefreshInterval As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CacheRefreshInterval { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CacheRefreshInterval : int" Usage="System.Web.Security.AuthorizationStoreRoleProvider.CacheRefreshInterval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of minutes between refreshes of the cache of the policy-store data.</summary>
        <value>캐시 된 정책 저장소 데이터의 새로 고침 간격 (분) 수입니다. 기본값은 60입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRole">
      <MemberSignature Language="C#" Value="public override void CreateRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CreateRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.CreateRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CreateRole (roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CreateRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.CreateRole : string -&gt; unit" Usage="authorizationStoreRoleProvider.CreateRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">The name of the role to create.</param>
        <summary>Adds a new role to the role authorization-manager policy store.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.Security.AuthorizationStoreRoleProvider.CreateRole%2A> 메서드를 호출 합니다 <xref:System.Web.Security.Roles> ASP.NET 응용 프로그램의 구성 파일 (Web.config)에서 지정한 권한 부여 관리자 데이터 저장소에서 역할을 만드는 클래스입니다.  
  
 역할 이름은 대/소문자 구분 하지 않습니다.  
  
   
  
## Examples  
 다음 코드 예제는 권한 부여 관리자 정책 저장소의 새 역할을 만듭니다. 역할 관리를 사용 하도록 설정 하는 Web.config 파일의 예제를 참조 하세요. <xref:System.Web.Security.AuthorizationStoreRoleProvider>합니다.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> is an empty string.  -or-  <paramref name="roleName" /> contains a comma.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">The configured <see langword="applicationName" /> was not found.  -or-  The configured <see langword="scopeName" /> was not found.  -or-  The authorization-manager runtime is not installed on the server.</exception>
        <exception cref="T:System.IO.FileNotFoundException">The <see langword="connectionStringName" /> attribute references a connection string to a file that does not exist.</exception>
        <exception cref="T:System.Web.HttpException">The <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> instance is configured with a file-based policy store, and read access to the file is not allowed at the current trust level.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteRole">
      <MemberSignature Language="C#" Value="public override bool DeleteRole (string roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteRole(string roleName, bool throwOnPopulatedRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.DeleteRole(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteRole (roleName As String, throwOnPopulatedRole As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool DeleteRole(System::String ^ roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="F#" Value="override this.DeleteRole : string * bool -&gt; bool" Usage="authorizationStoreRoleProvider.DeleteRole (roleName, throwOnPopulatedRole)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="throwOnPopulatedRole" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="roleName">The name of the role to delete.</param>
        <param name="throwOnPopulatedRole">If <see langword="true" />, throws an exception if <c>roleName</c> has one or more members.</param>
        <summary>Removes a role from the authorization-manager policy store.</summary>
        <returns>
          <see langword="true" /> if the role was deleted; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.AuthorizationStoreRoleProvider.DeleteRole%2A> 메서드를 호출 합니다 <xref:System.Web.Security.Roles> ASP.NET 응용 프로그램의 구성 파일 (Web.config)에 지정 된 권한 부여 관리자 정책 저장소에서 역할을 삭제 하는 클래스입니다. 역할을 삭제 하면 해당 역할에 연결 된 사용자 목록은 정책 저장소에서도 삭제 됩니다. 데이터베이스에서 사용자 정보를 받지 않습니다.  
  
 하는 경우 `throwOnPopulatedRole` 됩니다 `true`, 예외가 throw 됩니다 및 역할을 구분 하는 경우 역할 삭제 되지 것입니다는 `roleName` 매개 변수는 하나 이상의 멤버입니다. 하는 경우 `throwOnPopulatedRole` 는 `false`, 여부 비어 있는지 여부를 역할 삭제 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 권한 부여 관리자 정책 저장소에서 역할을 삭제 합니다. 역할 관리를 사용 하도록 설정 하는 Web.config 파일의 예제를 참조 하세요. <xref:System.Web.Security.AuthorizationStoreRoleProvider>합니다.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/deleterolecs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/deleterolevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> is an empty string.  -or-  <paramref name="roleName" /> contains a comma.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="roleName" /> has one or more members and <paramref name="throwOnPopulatedRole" /> is <see langword="true" />.  -or-  The configured <see langword="applicationName" /> was not found.  -or-  The configured <see langword="scopeName" /> was not found.  -or-  The authorization-manager runtime is not installed on the server.</exception>
        <exception cref="T:System.IO.FileNotFoundException">The <see langword="connectionStringName" /> attribute references a connection string to a file that does not exist.</exception>
        <exception cref="T:System.Web.HttpException">The <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> instance is configured with a file-based policy store, and read access to the file is not allowed at the current trust level.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] FindUsersInRole (string roleName, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] FindUsersInRole(string roleName, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.FindUsersInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersInRole (roleName As String, usernameToMatch As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ FindUsersInRole(System::String ^ roleName, System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="override this.FindUsersInRole : string * string -&gt; string[]" Usage="authorizationStoreRoleProvider.FindUsersInRole (roleName, usernameToMatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">The role to search in.</param>
        <param name="usernameToMatch">The user name to search for.</param>
        <summary>This method is not supported by the authorization store role provider.</summary>
        <returns>A string array containing the names of all the users whose user name matches <paramref name="usernameToMatch" /> and who are members of the specified role.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">An unsupported method was called.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAllRoles">
      <MemberSignature Language="C#" Value="public override string[] GetAllRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetAllRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.GetAllRoles" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetAllRoles();" />
      <MemberSignature Language="F#" Value="override this.GetAllRoles : unit -&gt; string[]" Usage="authorizationStoreRoleProvider.GetAllRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets a list of all the roles for the application.</summary>
        <returns>A string array containing the names of all the roles stored in the authorization-manager policy store for a particular application.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.Security.AuthorizationStoreRoleProvider.GetAllRoles%2A> 메서드를 호출 합니다 <xref:System.Web.Security.Roles> ASP.NET 응용 프로그램의 구성 파일 (Web.config)에 지정 된 권한 부여 관리자 정책 저장소의 모든 역할 목록을 검색 하는 클래스입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 합니다 <xref:System.Web.Security.Roles.GetAllRoles%2A> 응용 프로그램에 대 한 역할 목록을 가져오고 결과를 바인딩하는 메서드를 <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> 제어 합니다. 역할 관리를 사용 하도록 설정 하는 Web.config 파일의 예제를 참조 하세요. <xref:System.Web.Security.AuthorizationStoreRoleProvider>합니다.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">The configured <see langword="applicationName" /> was not found.  -or-  The configured <see langword="scopeName" /> was not found.  -or-  The authorization-manager runtime is not installed on the server.</exception>
        <exception cref="T:System.IO.FileNotFoundException">The <see langword="connectionStringName" /> attribute references a connection string to a file that does not exist.</exception>
        <exception cref="T:System.Web.HttpException">The <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> instance is configured with a file-based policy store, and read access to the file is not allowed at the current trust level.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRolesForUser">
      <MemberSignature Language="C#" Value="public override string[] GetRolesForUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetRolesForUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.GetRolesForUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRolesForUser (username As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetRolesForUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="override this.GetRolesForUser : string -&gt; string[]" Usage="authorizationStoreRoleProvider.GetRolesForUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user to return a list of roles for.</param>
        <summary>Gets a list of the roles that a user is in.</summary>
        <returns>A string array containing the names of all the roles that the specified user is in.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.Security.AuthorizationStoreRoleProvider.GetRolesForUser%2A> 메서드를 호출 합니다 <xref:System.Web.Security.Roles> ASP.NET 응용 프로그램의 구성 파일 (Web.config)에 지정 된 권한 부여 관리자 정책 저장소에서 지정된 된 사용자 역할의 목록을 검색 하는 클래스입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 합니다 <xref:System.Web.Security.Roles.GetRolesForUser%2A> 지정 된 사용자 역할의 목록을 검색 하는 방법에 바인딩합니다를 <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> 컨트롤입니다. 역할 관리를 사용 하도록 설정 하는 Web.config 파일의 예제를 참조 하세요. <xref:System.Web.Security.AuthorizationStoreRoleProvider>합니다.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/ViewRolescs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/ViewRolesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> contains a comma.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">The configured <see langword="applicationName" /> was not found.  -or-  The configured <see langword="scopeName" /> was not found.  -or-  The authorization-manager runtime is not installed on the server.</exception>
        <exception cref="T:System.IO.FileNotFoundException">The <see langword="connectionStringName" /> attribute references a connection string to a file that does not exist.</exception>
        <exception cref="T:System.Web.HttpException">The <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> instance is configured with a file-based policy store, and read access to the file is not allowed at the current trust level.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] GetUsersInRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetUsersInRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUsersInRole (roleName As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetUsersInRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.GetUsersInRole : string -&gt; string[]" Usage="authorizationStoreRoleProvider.GetUsersInRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">The name of the role to get the list of users for.</param>
        <summary>Gets a list of users in the specified role.</summary>
        <returns>A string array containing the names of all the users who are members of the specified role.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole%2A> 메서드를 호출 합니다 <xref:System.Web.Security.Roles> ASP.NET 응용 프로그램의 구성 파일 (Web.config)에 지정 된 권한 부여 관리자 정책 저장소의 지정 된 역할에 연결 된 사용자 목록을 검색 하는 클래스입니다.  
  
 <xref:System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole%2A> 메서드 지정 된 권한 부여 관리자 역할에 직접 포함 된 사용자 이름을 반환 합니다 `roleName` 매개 변수입니다. 기본 권한 부여-관리자 API에 의해 호출 된 <xref:System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole%2A> 메서드 그룹 확장을 지원 하지 않으므로 중첩 된 NT 그룹, 중첩 된 권한 부여 관리자 그룹 및 LDAP 쿼리 그룹에 포함 된 사용자가 반환 되지 것입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 합니다 <xref:System.Web.Security.Roles.GetUsersInRole%2A> 메서드를 특정 역할에 사용자의 목록을 가져오고 결과를 바인딩하는 <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> 제어 합니다. 역할 관리를 사용 하도록 설정 하는 Web.config 파일의 예제를 참조 하세요. <xref:System.Web.Security.AuthorizationStoreRoleProvider>합니다.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> is an empty string.  -or-  <paramref name="roleName" /> contains a comma.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">The configured <see langword="applicationName" /> was not found.  -or-  The configured <see langword="scopeName" /> was not found.  -or-  The authorization-manager runtime is not installed on the server.</exception>
        <exception cref="T:System.IO.FileNotFoundException">The <see langword="connectionStringName" /> attribute references a connection string to a file that does not exist.</exception>
        <exception cref="T:System.Web.HttpException">The <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> instance is configured with a file-based policy store, and read access to the file is not allowed at the current trust level.</exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="authorizationStoreRoleProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">The name of the <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> instance to initialize.</param>
        <param name="config">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> that contains the names and values of configuration options for the role provider.</param>
        <summary>Initializes the authorization-manager role provider with the property values specified in the ASP.NET application's configuration file. This method is not intended to be used directly from your code.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.Security.AuthorizationStoreRoleProvider.Initialize%2A> 메서드 초기화를 <xref:System.Web.Security.AuthorizationStoreRoleProvider> 속성을 사용 하 여 값 ASP.NET 응용 프로그램 구성 파일 (Web.config)에 지정 하며 코드에서 직접 사용할 수 없습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="config" /> is <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">The <see langword="connectionStringName" /> attribute is empty or does not exist in the [connectionStrings Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/b6ffbb2e-a4d1-410e-8f7e-9755e92c65de) configuration section.  -or-  The configured <see langword="applicationName" /> is longer than 256 characters.  -or-  The configuration for this <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> instance contains an unrecognized attribute.</exception>
        <exception cref="T:System.Web.HttpException">The ASP.NET application is not running at <see cref="F:System.Web.AspNetHostingPermissionLevel.Low" /> trust or higher.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public override bool IsUserInRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsUserInRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.IsUserInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsUserInRole (username As String, roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsUserInRole(System::String ^ username, System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.IsUserInRole : string * string -&gt; bool" Usage="authorizationStoreRoleProvider.IsUserInRole (username, roleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user name to search for.</param>
        <param name="roleName">The role to search in.</param>
        <summary>Gets a value indicating whether the specified user is in the specified role.</summary>
        <returns>
          <see langword="true" /> if the specified user name is in the specified role; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.AuthorizationStoreRoleProvider.IsUserInRole%2A> 메서드를 호출 합니다 <xref:System.Web.Security.Roles> 클래스 및 <xref:System.Security.Principal.IPrincipal.IsInRole%2A> 메서드를 <xref:System.Web.UI.Page.User%2A?displayProperty=nameWithType> 사용자 역할에 ASP.NET 응용 프로그램에 지정 된 권한 부여 관리자 데이터 저장소를 사용 하 여 연결 되는지 여부를 결정 하는 속성 구성 파일 (Web.config)입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 프로그래밍 방식으로 사용자 역할을 볼 수 있도록 허용 하기 전에 로그온 한 사용자를 관리자 역할에 있는지 여부를 확인 합니다. 역할 관리를 사용 하도록 설정 하는 Web.config 파일의 예제를 참조 하세요. <xref:System.Web.Security.AuthorizationStoreRoleProvider>합니다.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/ViewRolescs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/ViewRolesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.  -or  <paramref name="roleName" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> is an empty string.  -or-  <paramref name="roleName" /> contains a comma.  -or-  <paramref name="username" /> contains a comma.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">The configured <see langword="applicationName" /> was not found.  -or-  The configured <see langword="scopeName" /> was not found.  -or-  The authorization-manager runtime is not installed on the server.</exception>
        <exception cref="T:System.IO.FileNotFoundException">The <see langword="connectionStringName" /> attribute references a connection string to a file that does not exist.</exception>
        <exception cref="T:System.Web.HttpException">The <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> instance is configured with a file-based policy store, and read access to the file is not allowed at the current trust level.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveUsersFromRoles">
      <MemberSignature Language="C#" Value="public override void RemoveUsersFromRoles (string[] userNames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveUsersFromRoles(string[] userNames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveUsersFromRoles (userNames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveUsersFromRoles(cli::array &lt;System::String ^&gt; ^ userNames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="override this.RemoveUsersFromRoles : string[] * string[] -&gt; unit" Usage="authorizationStoreRoleProvider.RemoveUsersFromRoles (userNames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userNames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="userNames">A string array of user names to be removed from the specified roles.</param>
        <param name="roleNames">A string array of role names to remove the specified user names from.</param>
        <summary>Removes the specified user names from the specified roles.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.AuthorizationStoreRoleProvider.RemoveUsersFromRoles%2A> 메서드를 호출 합니다 <xref:System.Web.Security.Roles> 클래스는 ASP.NET 응용 프로그램의 구성 파일 (Web.config)에 지정 된 권한 부여 관리자 정책 저장소에 하나 이상의 역할에서 하나 이상의 사용자를 제거 합니다. 이 메서드는 합니다 <xref:System.Web.Security.Roles.RemoveUserFromRole%2A>, <xref:System.Web.Security.Roles.RemoveUserFromRoles%2A>, <xref:System.Web.Security.Roles.RemoveUsersFromRole%2A>, 및 <xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A> 메서드를 <xref:System.Web.Security.Roles> 클래스입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 하나 이상의 사용자 역할에 추가 하거나 역할에서 사용자를 제거 합니다. 역할 관리를 사용 하도록 설정 하는 Web.config 파일의 예제를 참조 하세요. <xref:System.Web.Security.AuthorizationStoreRoleProvider>합니다.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">One of the specified user names is <see langword="null" />.  -or-  One of the specified role names is <see langword="null" />.  -or-  <paramref name="userNames" /> is <see langword="null" />.  -or-  <paramref name="roleNames" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">One of the specified user names is an empty string or contains a comma.  -or-  One of the specified role names is an empty string or contains a comma.  -or-  <paramref name="userNames" /> contains a duplicate element.  -or-  <paramref name="roleNames" /> contains a duplicate element.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">The configured <see langword="applicationName" /> was not found.  -or-  The configured <see langword="scopeName" /> was not found.  -or-  The authorization-manager runtime is not installed on the server.</exception>
        <exception cref="T:System.IO.FileNotFoundException">The <see langword="connectionStringName" /> attribute references a connection string to a file that does not exist.</exception>
        <exception cref="T:System.Web.HttpException">The <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> instance is configured with a file-based policy store, and read access to the file is not allowed at the current trust level.</exception>
      </Docs>
    </Member>
    <Member MemberName="RoleExists">
      <MemberSignature Language="C#" Value="public override bool RoleExists (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool RoleExists(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.RoleExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function RoleExists (roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool RoleExists(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.RoleExists : string -&gt; bool" Usage="authorizationStoreRoleProvider.RoleExists roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">The name of the role to search for in the authorization-manager policy store.</param>
        <summary>Gets a value indicating whether the specified role name already exists in the authorization-manager policy store.</summary>
        <returns>
          <see langword="true" /> if the role name already exists in the authorization-manager policy store; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.Security.AuthorizationStoreRoleProvider.RoleExists%2A> 메서드를 호출 합니다 <xref:System.Web.Security.Roles> 역할 이름을 ASP.NET 응용 프로그램의 구성 파일 (Web.config)에 지정 된 권한 부여 관리자 데이터 저장소에 있는지 여부를 결정 하는 클래스입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.Security.Roles.RoleExists%2A> 역할 이름이 역할을 만들기 전에 이미 있는지 여부를 결정 하는 방법입니다. 역할 관리를 사용 하도록 설정 하는 Web.config 파일의 예제를 참조 하세요. <xref:System.Web.Security.AuthorizationStoreRoleProvider>합니다.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> is an empty string.  -or-  <paramref name="roleName" /> contains a comma.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">The configured <see langword="applicationName" /> was not found.  -or-  The configured <see langword="scopeName" /> was not found.  -or-  The authorization-manager runtime is not installed on the server.</exception>
        <exception cref="T:System.IO.FileNotFoundException">The <see langword="connectionStringName" /> attribute references a connection string to a file that does not exist.</exception>
        <exception cref="T:System.Web.HttpException">The <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> instance is configured with a file-based policy store, and read access to the file is not allowed at the current trust level.</exception>
      </Docs>
    </Member>
    <Member MemberName="ScopeName">
      <MemberSignature Language="C#" Value="public string ScopeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScopeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName" />
      <MemberSignature Language="VB.NET" Value="Public Property ScopeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScopeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScopeName : string with get, set" Usage="System.Web.Security.AuthorizationStoreRoleProvider.ScopeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the scope name for the authorization store.</summary>
        <value>권한 부여 저장소에 대 한 범위 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> 를 사용 하 여 속성을 설정할 수 있습니다 합니다 `scopeName` 구성 특성의 공급자 인스턴스에 대 한는 `providers` 구성 섹션의 섹션입니다.  
  
> [!CAUTION]
>  단일 기본 역할 공급자 인스턴스를 모든 제공한 요청에 대 한 사용 되기 때문에 <xref:System.Web.HttpApplication> 개체를 여러 요청이 동시에 실행을 설정 하려고 할 수 있습니다는 <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> 속성 값입니다. 합니다 <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> 속성은 여러 쓰기 작업에 대해 안전 하 고 변경 하는 스레드는 <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> 여러 사용자가 응용 프로그램의 경우 속성 값이 예기치 않은 동작이 발생할 수 있습니다. 사용자가 설정할 수 있는 코드를 작성 하지 않는 것이 좋습니다는 <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> 속성 필요한 경우가 아니면 합니다. 응용 프로그램의 예로 설정 하는 경우는 <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> 속성 해야 할 수 있습니다 여러 응용 프로그램에 대 한 역할 데이터를 관리 하는 관리 응용 프로그램입니다. 단일 사용자 응용 프로그램 및 웹 응용 프로그램이 아닙니다. 이러한 응용 프로그램 이어야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>