<Type Name="Membership" FullName="System.Web.Security.Membership">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2a836f4057bc6bc438b9dfd085e7d6d677be8366" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36597230" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Membership" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Membership extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.Membership" />
  <TypeSignature Language="VB.NET" Value="Public Class Membership" />
  <TypeSignature Language="C++ CLI" Value="public ref class Membership abstract sealed" />
  <TypeSignature Language="F#" Value="type Membership = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Validates user credentials and manages user settings. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership> 클래스 ASP.NET 응용 프로그램에서 사용자 자격 증명의 유효성을 검사 하 고 암호와 같은 사용자 설정 관리 및 전자 메일 주소를 사용 합니다. <xref:System.Web.Security.Membership> 클래스는 자체적으로 또는 함께에서 사용할 수는 <xref:System.Web.Security.FormsAuthentication> 웹 응용 프로그램 또는 사이트의 사용자를 인증에 대 한 전체 시스템을 만들 수 있습니다. <xref:System.Web.UI.WebControls.Login> 컨트롤 캡슐화는 <xref:System.Web.Security.Membership> 사용자 유효성을 검사 하는 편리한 메커니즘을 제공 하는 클래스입니다.  
  
> [!NOTE]
>  ASP.NET 멤버 자격 기능에 익숙한 경우 참조 [멤버 자격 소개](http://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980) 계속 하기 전에. 목록이 구성원 자격과 관련 된 다른 항목에 대 한 참조 [멤버 자격을 사용 하 여 사용자 관리](http://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd)합니다.  
  
 <xref:System.Web.Security.Membership> 클래스에 대 한 기능을 제공 합니다.  
  
-   새 사용자 만들기  
  
-   Microsoft SQL Server 또는 대체 데이터 저장소에 멤버 등록 정보 (사용자 이름, 암호, 전자 메일 주소 및 지원 데이터)를 저장 합니다.  
  
-   사이트를 방문 하는 사용자를 인증 합니다. 프로그래밍 방식으로 사용자를 인증할 수 또는 사용할 수 있습니다는 <xref:System.Web.UI.WebControls.Login> 거의 없거나 전혀 없이 코드를 필요로 하는 완전 한 인증 시스템을 만들 수 있습니다.  
  
-   암호 관리는 만들기, 변경, 검색 및 다시 설정 하 포함 등에입니다. 필요에 따라 암호 질문을 암호를 잊은 사용자에 대 한 암호 재설정 및 검색 요청을 인증에 대 한 대답을 요구 하도록 ASP.NET 멤버 자격을 구성할 수 있습니다.  
  
 ASP.NET 멤버 자격에 대 한 ASP.NET 인증의 독립적인 기능 이지만, 사이트에 대 한 권한 부여 서비스를 제공 하도록 ASP.NET 역할 관리와 통합할 수 있습니다. 멤버 자격 ASP.NET 사용자와도 통합 될 수 <xref:System.Web.Profile> 개별 사용자에 게 맞출 수 있는 응용 프로그램별 사용자 지정을 할 수 있도록 합니다. 자세한 내용은 참조 [역할 관리 이해](http://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6) 및 [ASP.NET 프로필 속성 개요](http://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d)합니다.  
  
 <xref:System.Web.Security.Membership> 멤버 자격 공급자는 데이터 소스와 통신을 사용 하 여 클래스입니다. .NET framework는 <xref:System.Web.Security.SqlMembershipProvider>, Microsoft SQL Server 데이터베이스에 사용자 정보를 저장 하는 및 <xref:System.Web.Security.ActiveDirectoryMembershipProvider>, Active Directory 또는 Active Directory ADAM (Application Mode) 서버에 사용자 정보를 저장할 수 있습니다. 사용할 수 있는 대체 데이터 소스와 통신 하는 사용자 지정 멤버 자격 공급자를 구현할 수도 있습니다는 <xref:System.Web.Security.Membership> 클래스입니다. 사용자 지정 멤버 자격 공급자 상속는 <xref:System.Web.Security.MembershipProvider> 추상 클래스입니다. 자세한 내용은 참조 [멤버 자격 공급자 구현](http://msdn.microsoft.com/library/d8658b8e-c962-4f64-95e1-4acce35e4582)합니다.  
  
 기본적으로 ASP.NET 멤버 자격 모든 ASP.NET 응용 프로그램에 사용 됩니다. 기본 멤버 자격 공급자는 <xref:System.Web.Security.SqlMembershipProvider> 이름으로 컴퓨터 구성에 지정 된 `AspNetSqlProvider`합니다. 기본 인스턴스는 <xref:System.Web.Security.SqlMembershipProvider> Microsoft SQL Server의 로컬 인스턴스에 연결 하도록 구성 되어 있습니다.  
  
 지정 하는 기본 설정을 수정할 수 있습니다는 <xref:System.Web.Security.SqlMembershipProvider> 이외의 `AspNetSqlProvider` 기본 공급자로 인스턴스를 지정 하거나 사용자 지정 공급자의 인스턴스를 Web.config 파일을 사용 하 여 ASP.NET 응용 프로그램에 대 한 기본 공급자입니다. Web.config 파일에서 구성 섹션을 사용 하 여 웹 응용 프로그램에 대 한 ASP.NET 멤버 자격 구성을 지정할 수 있습니다. 사용할 수는 `providers` 외 기본 공급자의 다른 멤버 자격 공급자를 지정 하려면 섹션의 하위 섹션. 다음 단원이 현재 응용 프로그램 구성에서 기본 멤버 자격 공급자를 제거 하 고 새 공급자의 이름으로 추가 하는 예를 들어 `SqlProvider` 라는 SQL Server 인스턴스에 연결 하 `AspSqlServer`합니다.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=AspSqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
      <providers>  
        <remove name="AspNetSqlProvider" />  
        <add name="SqlProvider"  
          type="System.Web.Security.SqlMembershipProvider"  
          connectionStringName="SqlServices"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="true"  
          requiresQuestionAndAnswer="true"  
          passwordFormat="Hashed"  
          applicationName="/" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
   
  
## Examples  
 다음 코드 예제에서는 폼 인증 및 ASP.NET 멤버 자격을 사용 하도록 구성 된 ASP.NET 응용 프로그램에 대 한 로그인 페이지를 보여 줍니다. 제공 된 사용자 자격 증명이 유효 하지 하는 경우 사용자에 게 메시지가 표시 됩니다. 그렇지 않으면, 사용자가 원래 요청 된 URL로 리디렉션됩니다를 사용 하 여 <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> 메서드.  
  
> [!NOTE]
>  ASP.NET login 컨트롤 (<xref:System.Web.UI.WebControls.Login>, <xref:System.Web.UI.WebControls.LoginView>, <xref:System.Web.UI.WebControls.LoginStatus>, <xref:System.Web.UI.WebControls.LoginName>, 및 <xref:System.Web.UI.WebControls.PasswordRecovery>) 거의 모든 사용자에 게 자격 및 멤버 자격 시스템에서 자격 증명 유효성을 검사 하는 데 필요한 논리 및 될 수 있습니다 프로그래밍 방식으로 검사를 사용 하 여 대신 사용 되는 <xref:System.Web.Security.Membership> 클래스입니다.  
  
> [!IMPORTANT]
>  이 예제에서는 잠재적인 보안 문제가 사용자 입력을 허용 하는 텍스트 상자가 포함 되어 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public static string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.Membership.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the application.</summary>
        <value>응용 프로그램의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.ApplicationName%2A> 응용 프로그램에 따라 사용자를 식별 하는 데 사용 됩니다. 즉, 동일한 사용자 이름을 다른 지정 하는 여러 ASP.NET 응용 프로그램에 대 한 데이터베이스에 존재할 수 있습니다 <xref:System.Web.Security.Membership.ApplicationName%2A>합니다. 이렇게 하면 여러 응용 프로그램이 동일한 데이터베이스를 사용 하 여 중복 된 사용자 이름 충돌을 일으키지 않고 사용자 정보를 저장할 수 있습니다. 여러 ASP.NET 응용 프로그램 같은 지정 하 여 동일한 사용자 데이터베이스를 사용할 수 또는 <xref:System.Web.Security.Membership.ApplicationName%2A>합니다. <xref:System.Web.Security.Membership.ApplicationName%2A> 웹 응용 프로그램에 대 한 구성에서 프로그래밍 방식으로 또는 선언적으로 설정할 수 있습니다.  
  
> [!CAUTION]
>  단일 기본 멤버 자격 공급자 인스턴스는 모든 요청에 의해 처리에 사용 되므로 <xref:System.Web.HttpApplication> 개체를 동시에 실행 하 고 설정 하는 여러 요청을 할 수 있습니다는 <xref:System.Web.Security.Membership.ApplicationName%2A> 속성 값입니다. <xref:System.Web.Security.Membership.ApplicationName%2A> 속성은 스레드가 여러 쓰기에 대 한 안전 하 고 변경 하지는 <xref:System.Web.Security.Membership.ApplicationName%2A> 속성 값에 대 한 응용 프로그램의 여러 사용자가 예기치 않은 동작이 발생할 수 있습니다. 사용자가 설정할 수 있는 코드 작성을 방지 하는 것이 좋습니다는 <xref:System.Web.Security.Membership.ApplicationName%2A> 속성을 필요한 경우가 아니면 합니다. 응용 프로그램의 예에서는 설정 된 <xref:System.Web.Security.Membership.ApplicationName%2A> 속성 필요할 수 있습니다 여러 응용 프로그램에 대 한 멤버 자격 데이터를 관리 하는 관리 응용 프로그램입니다. 단일 사용자 응용 프로그램 및 웹 응용 프로그램이 아닙니다. 이러한 응용 프로그램 이어야 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서 요소를 보여 줍니다.는 `system.web` ASP.NET 응용 프로그램에 대 한 Web.config 파일의 섹션입니다. 사용 하 여 응용 프로그램 지정는 <xref:System.Web.Security.SqlMembershipProvider> 인스턴스는 <xref:System.Web.Security.Membership.ApplicationName%2A> 를 `MyApplication`합니다.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Adds a new user to the data store.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser CreateUser (string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser CreateUser(string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.CreateUser(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUser (username As String, password As String) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password);" />
      <MemberSignature Language="F#" Value="static member CreateUser : string * string -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.CreateUser (username, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user name for the new user.</param>
        <param name="password">The password for the new user.</param>
        <summary>Adds a new user to the data store.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object for the newly created user.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.CreateUser%2A> 데이터 저장소에 새 사용자를 추가 하 고 반환 된 <xref:System.Web.Security.MembershipUser> 새로 만든된 사용자에 대 한 개체입니다. 사용자 만들기에 실패 한 <xref:System.Web.Security.MembershipCreateUserException> throw 됩니다. 검색할 수 있습니다는 <xref:System.Web.Security.MembershipCreateStatus> 에서 값의 <xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A> 속성의는 <xref:System.Web.Security.MembershipCreateUserException> 사용자 만들기에 실패 한 이유를 나타내는입니다.  
  
 멤버 자격 사용자가 만들고 있는에 대 한 참조는 <xref:System.Web.Security.MembershipUser> 개체 해당 사용자에 대 한 해당 사용자에 대 한 설정을 수정할 수 있습니다와 <xref:System.Web.Security.MembershipUser> 공용 메서드 같은 <xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A> 응용 프로그램에 대 한 여기서 <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> 는`true`, 또는의 속성 값을 설정 하 여는 <xref:System.Web.Security.MembershipUser> 개체에 전달 하 여 <xref:System.Web.Security.Membership.UpdateUser%2A> 메서드.  
  
 사용자 응용 프로그램에 대 한 데이터 원본에 이미 있는 경우 얻을 수 있습니다는 <xref:System.Web.Security.MembershipUser> 기존 사용자에 대 한 개체는 <xref:System.Web.Security.Membership.GetUser%2A> 메서드.  
  
 <xref:System.Web.Security.SqlMembershipProvider> 각 사용자에 대 한 고유한 전자 메일 주소를 필요로 하는 옵션을 제공 합니다. 경우는 <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> 속성은 `true`, 중 하나를 사용 해야 합니다는 <xref:System.Web.Security.Membership.CreateUser%2A> 오버 로드를 만드는 사용자에 대 한 전자 메일 주소를 지정할 수 있습니다. 그렇지 않은 경우는 <xref:System.Web.Security.MembershipCreateUserException> throw 됩니다.  
  
 모든 매개 변수 값에서 선행 및 후행 공백이 잘립니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 폼 인증 및 ASP.NET 멤버 자격을 사용 하도록 구성 된 ASP.NET 응용 프로그램에 대 한 새 사용자를 만듭니다. 사용자 만들어지지 않았을 경우 성공적으로, 사용자에 게 메시지가 표시 됩니다. 그렇지 않으면 사용자가 응용 프로그램에 대 한 로그인 페이지로 리디렉션됩니다.  
  
> [!IMPORTANT]
>  이 예제에서는 잠재적인 보안 문제가 사용자 입력을 허용 하는 텍스트 상자가 포함 되어 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[System.Web.Security.Membership#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/createuser2cs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.Membership#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/createuser2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipCreateUserException">The user was not created. Check the <see cref="P:System.Web.Security.MembershipCreateUserException.StatusCode" /> property for a <see cref="T:System.Web.Security.MembershipCreateStatus" /> value.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser CreateUser(string username, string password, string email) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUser (username As String, password As String, email As String) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email);" />
      <MemberSignature Language="F#" Value="static member CreateUser : string * string * string -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.CreateUser (username, password, email)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user name for the new user.</param>
        <param name="password">The password for the new user.</param>
        <param name="email">The email address for the new user.</param>
        <summary>Adds a new user with a specified email address to the data store.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object for the newly created user.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.CreateUser%2A> 데이터 저장소에 새 사용자를 추가 하 고 반환 된 <xref:System.Web.Security.MembershipUser> 새로 만든된 사용자에 대 한 개체입니다. 사용자 만들기에 실패 한 <xref:System.Web.Security.MembershipCreateUserException> throw 됩니다. 검색할 수 있습니다는 <xref:System.Web.Security.MembershipCreateStatus> 에서 값의 <xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A> 속성의는 <xref:System.Web.Security.MembershipCreateUserException> 사용자 만들기에 실패 한 이유를 나타내는입니다.  
  
 멤버 자격 사용자가 만들고 있는에 대 한 참조는 <xref:System.Web.Security.MembershipUser> 개체 해당 사용자에 대 한 해당 사용자에 대 한 설정을 수정할 수 있습니다와 <xref:System.Web.Security.MembershipUser> 공용 메서드 같은 <xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A> 응용 프로그램에 대 한 여기서 <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> 는`true`, 또는의 속성 값을 설정 하 여는 <xref:System.Web.Security.MembershipUser> 개체에 전달 하 여 <xref:System.Web.Security.Membership.UpdateUser%2A> 메서드.  
  
 사용자 응용 프로그램에 대 한 데이터 원본에 이미 있는 경우 얻을 수 있습니다는 <xref:System.Web.Security.MembershipUser> 기존 사용자에 대 한 개체는 <xref:System.Web.Security.Membership.GetUser%2A> 메서드.  
  
 모든 매개 변수 값에서 선행 및 후행 공백이 잘립니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 폼 인증 및 ASP.NET 멤버 자격을 사용 하도록 구성 된 ASP.NET 응용 프로그램에 대 한 새 사용자를 만듭니다. 사용자 만들어지지 않았을 경우 성공적으로, 사용자에 게 메시지가 표시 됩니다. 그렇지 않으면 사용자가 응용 프로그램에 대 한 로그인 페이지로 리디렉션됩니다.  
  
> [!IMPORTANT]
>  이 예제에서는 잠재적인 보안 문제가 사용자 입력을 허용 하는 텍스트 상자가 포함 되어 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[System.Web.Security.Membership#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/createuser1cs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.Membership#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/createuser1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipCreateUserException">The user was not created. Check the <see cref="P:System.Web.Security.MembershipCreateUserException.StatusCode" /> property for a <see cref="T:System.Web.Security.MembershipCreateStatus" /> value.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, out System.Web.Security.MembershipCreateStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, [out] valuetype System.Web.Security.MembershipCreateStatus&amp; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUser (username As String, password As String, email As String, passwordQuestion As String, passwordAnswer As String, isApproved As Boolean, ByRef status As MembershipCreateStatus) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email, System::String ^ passwordQuestion, System::String ^ passwordAnswer, bool isApproved, [Runtime::InteropServices::Out] System::Web::Security::MembershipCreateStatus % status);" />
      <MemberSignature Language="F#" Value="static member CreateUser : string * string * string * string * string * bool *  -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.CreateUser (username, password, email, passwordQuestion, passwordAnswer, isApproved, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="passwordQuestion" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
        <Parameter Name="isApproved" Type="System.Boolean" />
        <Parameter Name="status" Type="System.Web.Security.MembershipCreateStatus&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="username">The user name for the new user.</param>
        <param name="password">The password for the new user.</param>
        <param name="email">The email address for the new user.</param>
        <param name="passwordQuestion">The password-question value for the membership user.</param>
        <param name="passwordAnswer">The password-answer value for the membership user.</param>
        <param name="isApproved">A Boolean that indicates whether the new user is approved to log on.</param>
        <param name="status">A <see cref="T:System.Web.Security.MembershipCreateStatus" /> indicating that the user was created successfully or the reason that creation failed.</param>
        <summary>Adds a new user with specified property values to the data store and returns a status parameter indicating that the user was successfully created or the reason the user creation failed.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object for the newly created user. If no user was created, this method returns <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.CreateUser%2A> 데이터 저장소에 새 사용자를 추가 하 고 반환 된 <xref:System.Web.Security.MembershipUser> 새로 만든된 사용자에 대 한 개체입니다. 사용자 만들기가 실패할 경우 검색할 수 있습니다는 <xref:System.Web.Security.MembershipCreateStatus> 에서 값의 `status` 사용자 만들기에 실패 한 이유를 나타내는 출력 매개 변수입니다.  
  
 <xref:System.Web.Security.Membership.CreateUser%2A> 메서드는 반환 `null` 경우 `password` 은 빈 문자열 또는 `null`, `username` 은 빈 문자열 또는 `null` 쉼표 (,), 포함 또는 `passwordQuestion` 않습니다 `null` 은 빈 문자열 및 또는 `passwordAnswer` 않습니다 `null` 및 빈 문자열을 포함 합니다.  
  
 멤버 자격 사용자가 만들고 있는에 대 한 참조는 <xref:System.Web.Security.MembershipUser> 개체 해당 사용자에 대 한 해당 사용자에 대 한 설정을 수정할 수와 <xref:System.Web.Security.MembershipUser> 공용 메서드의 속성 값을 설정 하 여는 <xref:System.Web.Security.MembershipUser> 개체와 전달 <xref:System.Web.Security.MembershipUser> 개체는 <xref:System.Web.Security.Membership.UpdateUser%2A> 메서드.  
  
 사용자 응용 프로그램에 대 한 데이터 원본에 이미 있는 경우 얻을 수 있습니다는 <xref:System.Web.Security.MembershipUser> 기존 사용자에 대 한 개체는 <xref:System.Web.Security.Membership.GetUser%2A> 메서드.  
  
 모든 문자열 매개 변수 값에서 선행 및 후행 공백이 잘립니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 폼 인증 및 ASP.NET 멤버 자격을 사용 하도록 구성 된 ASP.NET 응용 프로그램에 대 한 새 사용자를 만듭니다. 사용자 만들어지지 않았을 경우 성공적으로, 사용자에 게 메시지가 표시 됩니다. 그렇지 않으면 사용자가 응용 프로그램에 대 한 로그인 페이지로 리디렉션됩니다.  
  
> [!IMPORTANT]
>  이 예제에서는 잠재적인 보안 문제가 사용자 입력을 허용 하는 텍스트 상자가 포함 되어 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/CreateUsercs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/CreateUservb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, [out] valuetype System.Web.Security.MembershipCreateStatus&amp; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUser (username As String, password As String, email As String, passwordQuestion As String, passwordAnswer As String, isApproved As Boolean, providerUserKey As Object, ByRef status As MembershipCreateStatus) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email, System::String ^ passwordQuestion, System::String ^ passwordAnswer, bool isApproved, System::Object ^ providerUserKey, [Runtime::InteropServices::Out] System::Web::Security::MembershipCreateStatus % status);" />
      <MemberSignature Language="F#" Value="static member CreateUser : string * string * string * string * string * bool * obj *  -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.CreateUser (username, password, email, passwordQuestion, passwordAnswer, isApproved, providerUserKey, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="passwordQuestion" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
        <Parameter Name="isApproved" Type="System.Boolean" />
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="status" Type="System.Web.Security.MembershipCreateStatus&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="username">The user name for the new user.</param>
        <param name="password">The password for the new user.</param>
        <param name="email">The email address for the new user.</param>
        <param name="passwordQuestion">The password-question value for the membership user.</param>
        <param name="passwordAnswer">The password-answer value for the membership user.</param>
        <param name="isApproved">A Boolean that indicates whether the new user is approved to log on.</param>
        <param name="providerUserKey">The user identifier for the user that should be stored in the membership data store.</param>
        <param name="status">A <see cref="T:System.Web.Security.MembershipCreateStatus" /> indicating that the user was created successfully or the reason creation failed.</param>
        <summary>Adds a new user with specified property values and a unique identifier to the data store and returns a status parameter indicating that the user was successfully created or the reason the user creation failed.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object for the newly created user. If no user was created, this method returns <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.CreateUser%2A> 데이터 저장소에 새 사용자를 추가 하 고 반환 된 <xref:System.Web.Security.MembershipUser> 새로 만든된 사용자에 대 한 개체입니다. 사용자 만들기가 실패할 경우 검색할 수 있습니다는 <xref:System.Web.Security.MembershipCreateStatus> 에서 값의 `status` 사용자 만들기에 실패 한 이유를 나타내는 출력 매개 변수입니다. 사용 하 여 데이터베이스에 대 한 기본 키 값 등 사용자에 대 한 고유 식별자를 지정할 수는 `providerUserKey` 매개 변수입니다.  
  
 <xref:System.Web.Security.Membership.CreateUser%2A> 메서드는 반환 `null` 경우 `password` 은 빈 문자열 또는 `null`, `username` 은 빈 문자열 또는 `null` 쉼표 (,), 포함 또는 `passwordQuestion` 않습니다 `null` 빈 포함 문자열 또는 `passwordAnswer` 않습니다 `null` 및 빈 문자열을 포함 합니다.  
  
 멤버 자격 사용자가 만들고 있는에 대 한 참조는 <xref:System.Web.Security.MembershipUser> 개체 해당 사용자에 대 한 해당 사용자에 대 한 설정을 수정할 수와 <xref:System.Web.Security.MembershipUser> 공용 메서드의 속성 값을 설정 하 여는 <xref:System.Web.Security.MembershipUser> 개체와 전달 <xref:System.Web.Security.MembershipUser> 개체는 <xref:System.Web.Security.Membership.UpdateUser%2A> 메서드.  
  
 사용자 응용 프로그램에 대 한 데이터 원본에 이미 있는 경우 얻을 수 있습니다는 <xref:System.Web.Security.MembershipUser> 기존 사용자에 대 한 개체는 <xref:System.Web.Security.Membership.GetUser%2A> 메서드.  
  
 모든 문자열 매개 변수 값에서 선행 및 후행 공백이 잘립니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Deletes a user from the database.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteUser">
      <MemberSignature Language="C#" Value="public static bool DeleteUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DeleteUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.DeleteUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteUser (username As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool DeleteUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="static member DeleteUser : string -&gt; bool" Usage="System.Web.Security.Membership.DeleteUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to delete.</param>
        <summary>Deletes a user and any related user data from the database.</summary>
        <returns>
          <see langword="true" /> if the user was deleted; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대 한 데이터베이스에 저장 된 사용자 데이터는 <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, 또는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 사용 하는 개인 설정도 삭제 됩니다는 <xref:System.Web.Security.SqlRoleProvider>, <xref:System.Web.Profile.SqlProfileProvider>, 및 <xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider> 데이터 저장소에 대 한 개체입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 현재 로그온 한 사용자를 삭제 하 고 모든 관련 데이터입니다.  
  
 [!code-aspx-csharp[System.Web.Security.Membership#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/DeleteUsercs.aspx#8)]
 [!code-aspx-vb[System.Web.Security.Membership#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/DeleteUservb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is an empty string or contains a comma (,).</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null." /></exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteUser">
      <MemberSignature Language="C#" Value="public static bool DeleteUser (string username, bool deleteAllRelatedData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DeleteUser(string username, bool deleteAllRelatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteUser (username As String, deleteAllRelatedData As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool DeleteUser(System::String ^ username, bool deleteAllRelatedData);" />
      <MemberSignature Language="F#" Value="static member DeleteUser : string * bool -&gt; bool" Usage="System.Web.Security.Membership.DeleteUser (username, deleteAllRelatedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="deleteAllRelatedData" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to delete.</param>
        <param name="deleteAllRelatedData">
          <see langword="true" /> to delete data related to the user from the database; <see langword="false" /> to leave data related to the user in the database.</param>
        <summary>Deletes a user from the database.</summary>
        <returns>
          <see langword="true" /> if the user was deleted; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 데이터베이스에서 삭제 하는 사용자가 삭제만 구성 된 `applicationName`합니다.  
  
 경우 `deleteAllRelatedData` 은 `true`에 대 한 데이터베이스에 저장 된 사용자 데이터는 <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, 또는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 사용 하는 개인 설정도 삭제 됩니다는 <xref:System.Web.Security.SqlRoleProvider>, <xref:System.Web.Profile.SqlProfileProvider>, 및 <xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider> 용 개체 데이터 저장소입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 현재 로그온 한 사용자를 삭제 하 고 모든 관련 데이터입니다.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/DeleteUsercs.aspx#6)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/DeleteUservb.aspx#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is an empty string or contains a comma (,).</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordReset">
      <MemberSignature Language="C#" Value="public static bool EnablePasswordReset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnablePasswordReset" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.EnablePasswordReset" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnablePasswordReset As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnablePasswordReset { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnablePasswordReset : bool" Usage="System.Web.Security.Membership.EnablePasswordReset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the current membership provider is configured to allow users to reset their passwords.</summary>
        <value>멤버 자격 공급자에서 암호 재설정을 지원하면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 암호 다시 설정 하는 기능 ASP.NET 멤버 자격 사용자가 암호를 잊어버린 경우 또는 현재 암호를 더 이상 사용할 경우 현재 암호를 새 사용자 이름을 임의로 생성 된 암호를 바꿀 수입니다. 암호 형식으로 설정 된 경우이 특히 유용 <xref:System.Web.Security.MembershipPasswordFormat.Hashed>사용자 해시 된 암호 값을 검색할 수 없습니다.  
  
   
  
## Examples  
 다음 코드 예제에서 요소를 보여 줍니다.는 `system.web` ASP.NET 응용 프로그램에 대 한 Web.config 파일의 섹션입니다. 응용 프로그램의 인스턴스를 사용 하도록 지정 된 <xref:System.Web.Security.SqlMembershipProvider> 하 고 암호 재설정을 활성화 합니다.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 다음 코드 예제에서는 먼저 확인 <xref:System.Web.Security.Membership.EnablePasswordReset%2A> 은 `true`, 그런 다음 사용자의 암호를 재설정 하 고 자동으로 생성 되 고 새 암호를 반환 합니다.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ResetPasswordcs.aspx#8)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ResetPasswordvb.aspx#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordRetrieval">
      <MemberSignature Language="C#" Value="public static bool EnablePasswordRetrieval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnablePasswordRetrieval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.EnablePasswordRetrieval" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnablePasswordRetrieval As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnablePasswordRetrieval { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnablePasswordRetrieval : bool" Usage="System.Web.Security.Membership.EnablePasswordRetrieval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the current membership provider is configured to allow users to retrieve their passwords.</summary>
        <value>
          <see langword="true" /> 멤버 자격 공급자; 암호를 검색할 수 있도록 하는 경우 그렇지 않으면 <see langword="false" />합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우 <xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A> 은 `false`, 기본 멤버 자격 공급자를 throw 할 수는 <xref:System.Web.HttpException>합니다.  
  
 .NET Framework에 포함 된 공급자에는 암호 보안을 강화 하기 위해 여러 암호 형식을 지원 합니다. 암호 형식으로 설정 되어 있으면 <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, 데이터베이스에서 기존 암호를 검색할 수 없습니다. <xref:System.Web.Security.MembershipPasswordFormat.Hashed> 암호 형식을 암호 값의 단방향 인코딩을 제공 합니다. 암호는 "해시" 하 고 인증을 위해 데이터베이스에 저장 된 값과 비교 합니다. "해시 된" 값은 원래 암호 값을 검색 하기 위해 인코딩을 해제할 수 없습니다. 자세한 내용은 <xref:System.Web.Security.MembershipPasswordFormat>을 참조하세요.  
  
   
  
## Examples  
 다음 코드 예제에서 요소를 보여 줍니다.는 `system.web` ASP.NET 응용 프로그램에 대 한 Web.config 파일의 섹션입니다. 응용 프로그램의 인스턴스를 사용 하도록 지정 된 <xref:System.Web.Security.SqlMembershipProvider> 암호 검색을 활성화 하 고 있습니다.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="false"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 다음 코드 예제에서는 먼저 확인 <xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A> 은 `true`, 다음의 암호를 지정된 된 사용자 이름 검색 및 지정된 된 사용자에 대 한 전자 메일 주소로 보냅니다.  
  
> [!IMPORTANT]
>  높은 수준의 보안을 요구 하는 사이트에 대 한 암호를 일반 텍스트 전자 메일을 사용 하 여 다시 권장 되지 않습니다. 높은 수준의 보안 사이트에 대 한 SSL과 같은 암호화를 사용 하 여 암호를 반환 하는 것이 좋습니다.  
>   
>  이 예제에는 잠재적인 보안 문제가 사용자 입력을 허용 하는 텍스트 상자가 포함 됩니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindUsersByEmail">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets a collection of membership users where the email address contains the specified email address to match.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindUsersByEmail">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.FindUsersByEmail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersByEmail (emailToMatch As String) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ FindUsersByEmail(System::String ^ emailToMatch);" />
      <MemberSignature Language="F#" Value="static member FindUsersByEmail : string -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.FindUsersByEmail emailToMatch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">The email address to search for.</param>
        <summary>Gets a collection of membership users where the email address contains the specified email address to match.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> that contains all users that match the <paramref name="emailToMatch" /> parameter.  Leading and trailing spaces are trimmed from the <paramref name="emailToMatch" /> parameter value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.FindUsersByEmail%2A> 전자 메일 주소와 일치 하는 제공 된 멤버 자격 사용자의 목록을 반환 `emailToMatch` 구성 된 `applicationName`합니다.  
  
 <xref:System.Web.Security.SqlMembershipProvider> 에 대해 LIKE 절을 사용 하 여 검색 합니다는 `emailToMatch` 매개 변수입니다. 지원 되는 SQL Server에 절에서 사용할 수와 같은 와일드 카드는 `emailToMatch` 매개 변수 값입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.Security.Membership.FindUsersByEmail%2A> 멤버 자격 데이터베이스에서 멤버 자격 사용자 정보를 검색 하는 메서드 사용자 입력을 기반으로 하며 데이터 페이지에 결과 표시 합니다.  
  
> [!IMPORTANT]
>  이 예제에서는 잠재적인 보안 문제가 사용자 입력을 허용 하는 텍스트 상자가 포함 되어 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[System.Web.Security.Membership#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/FindUsersByEmailcs.aspx#9)]
 [!code-aspx-vb[System.Web.Security.Membership#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/FindUsersByEmailvb.aspx#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByEmail">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersByEmail (emailToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ FindUsersByEmail(System::String ^ emailToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member FindUsersByEmail : string * int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.FindUsersByEmail (emailToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">The email address to search for.</param>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">The total number of matched users.</param>
        <summary>Gets a collection of membership users, in a page of data, where the email address contains the specified email address to match.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> that contains a page of <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> objects beginning at the page specified by <paramref name="pageIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.FindUsersByEmail%2A> 전자 메일 주소와 일치 하는 제공 된 멤버 자격 사용자의 목록을 반환 `emailToMatch` 구성 된 `applicationName`합니다.  
  
 <xref:System.Web.Security.SqlMembershipProvider> 에 대해 LIKE 절을 사용 하 여 검색 합니다는 `emailToMatch` 매개 변수입니다. 지원 되는 SQL Server에 절에서 사용할 수와 같은 와일드 카드는 `emailToMatch` 매개 변수 값입니다.  
  
 반환 된 결과 <xref:System.Web.Security.Membership.FindUsersByEmail%2A> 의해 제한 되는 `pageIndex` 및 `pageSize` 매개 변수입니다. `pageSize` 의 최대 수를 식별 하는 매개 변수 <xref:System.Web.Security.MembershipUser> 에서 반환 하는 개체는 <xref:System.Web.Security.MembershipUserCollection>합니다. `pageIndex` 매개 변수는 0에서 첫 번째 페이지를 식별 하는 위치를 반환 하려면 결과 페이지를 식별 합니다. `totalRecords` 매개 변수는 한 `out` 일치 하는 멤버 자격 사용자의 총 수로 설정 된 매개 변수는 `emailToMatch` 값입니다. 예를 들어 13 명의 사용자가 발견 되는 경우 where `emailToMatch` 의 일부 또는 전체 전자 메일 주소와 일치 하 고 `pageIndex` 값이 1는 `pageSize` 5는 <xref:System.Web.Security.MembershipUserCollection> 반환에 6 번째부터 10 번째까지의 사용자는 포함 됩니다. `totalRecords` 13으로 설정 됩니다.  
  
 선행 및 후행 공백이 잘립니다는 `emailToMatch` 매개 변수 값입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.Security.Membership.FindUsersByEmail%2A> 멤버 자격 데이터베이스에서 멤버 자격 사용자 정보를 검색 하는 메서드 사용자 입력을 기반으로 하며 데이터 페이지에 결과 표시 합니다.  
  
> [!IMPORTANT]
>  이 예제에서는 잠재적인 보안 문제가 사용자 입력을 허용 하는 텍스트 상자가 포함 되어 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByEmailcs.aspx#13)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByEmailvb.aspx#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="pageIndex" /> is less than zero.  -or-  <paramref name="pageSize" /> is less than 1.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindUsersByName">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets a collection of membership users where the user name contains the specified user name to match.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindUsersByName">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.FindUsersByName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersByName (usernameToMatch As String) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ FindUsersByName(System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="static member FindUsersByName : string -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.FindUsersByName usernameToMatch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="usernameToMatch">The user name to search for.</param>
        <summary>Gets a collection of membership users where the user name contains the specified user name to match.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> that contains all users that match the <paramref name="usernameToMatch" /> parameter.  Leading and trailing spaces are trimmed from the <paramref name="usernameToMatch" /> parameter value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> 사용자 일치 하는 이름이 제공 된 멤버 자격 사용자의 목록을 반환 `usernameToMatch` 구성 된 `applicationName`합니다.  
  
 <xref:System.Web.Security.SqlMembershipProvider> 에 대해 LIKE 절을 사용 하 여 검색 합니다는 `usernameToMatch` 매개 변수입니다. 지원 되는 SQL Server에 절에서 사용할 수와 같은 와일드 카드는 `usernameToMatch` 매개 변수 값입니다.  
  
 모든 매개 변수 값에서 선행 및 후행 공백이 잘립니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.Security.Membership.FindUsersByName%2A> 멤버 자격 데이터베이스에서 멤버 자격 사용자 정보를 검색 하는 메서드 사용자 입력을 기반으로 하며 데이터 페이지에 결과 표시 합니다.  
  
> [!IMPORTANT]
>  이 예제에서는 잠재적인 보안 문제가 사용자 입력을 허용 하는 텍스트 상자가 포함 되어 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[System.Web.Security.Membership#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/FindUsersByNamecs.aspx#10)]
 [!code-aspx-vb[System.Web.Security.Membership#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/FindUsersByNamevb.aspx#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> is an empty string.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByName">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersByName (usernameToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ FindUsersByName(System::String ^ usernameToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member FindUsersByName : string * int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.FindUsersByName (usernameToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="usernameToMatch">The user name to search for.</param>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">The total number of matched users.</param>
        <summary>Gets a collection of membership users, in a page of data, where the user name contains the specified user name to match.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> that contains a page of <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> objects beginning at the page specified by <paramref name="pageIndex" />.  Leading and trailing spaces are trimmed from the <paramref name="usernameToMatch" /> parameter value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> 사용자 일치 하는 이름이 제공 된 멤버 자격 사용자의 목록을 반환 `usernameToMatch` 구성 된 `applicationName`합니다.  
  
 <xref:System.Web.Security.SqlMembershipProvider> 에 대해 LIKE 절을 사용 하 여 검색 합니다는 `usernameToMatch` 매개 변수입니다. 지원 되는 SQL Server에 절에서 사용할 수와 같은 와일드 카드는 `usernameToMatch` 매개 변수 값입니다.  
  
 반환 된 결과 <xref:System.Web.Security.Membership.FindUsersByName%2A> 의해 제한 되는 `pageIndex` 및 `pageSize` 매개 변수입니다. `pageSize` 의 최대 수를 식별 하는 매개 변수 <xref:System.Web.Security.MembershipUser> 에서 반환 하는 개체는 <xref:System.Web.Security.MembershipUserCollection>합니다. `pageIndex` 매개 변수는 0에서 첫 번째 페이지를 식별 하는 위치를 반환 하려면 결과 페이지를 식별 합니다. `totalRecords` 매개 변수는 한 `out` 일치 하는 멤버 자격 사용자의 총 수로 설정 된 매개 변수는 `usernameToMatch` 값입니다. 예를 들어 13 명의 사용자가 발견 되는 경우 where `usernameToMatch` 의 일부 또는 전체 사용자 이름 일치 및 `pageIndex` 값이 1는 `pageSize` 5는 <xref:System.Web.Security.MembershipUserCollection> 반환에 6 번째부터 10 번째까지의 사용자는 포함 됩니다. `totalRecords` 13으로 설정 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.Security.Membership.FindUsersByName%2A> 멤버 자격 데이터베이스에서 멤버 자격 사용자 정보를 검색 하는 메서드 사용자 입력을 기반으로 하며 데이터 페이지에 결과 표시 합니다.  
  
> [!IMPORTANT]
>  이 예제에서는 잠재적인 보안 문제가 사용자 입력을 허용 하는 텍스트 상자가 포함 되어 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByNamecs.aspx#12)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByNamevb.aspx#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> is an empty string.  -or-  <paramref name="pageIndex" /> is less than zero.  -or-  <paramref name="pageSize" /> is less than 1.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GeneratePassword">
      <MemberSignature Language="C#" Value="public static string GeneratePassword (int length, int numberOfNonAlphanumericCharacters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GeneratePassword(int32 length, int32 numberOfNonAlphanumericCharacters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GeneratePassword (length As Integer, numberOfNonAlphanumericCharacters As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GeneratePassword(int length, int numberOfNonAlphanumericCharacters);" />
      <MemberSignature Language="F#" Value="static member GeneratePassword : int * int -&gt; string" Usage="System.Web.Security.Membership.GeneratePassword (length, numberOfNonAlphanumericCharacters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="numberOfNonAlphanumericCharacters" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">The number of characters in the generated password. The length must be between 1 and 128 characters.</param>
        <param name="numberOfNonAlphanumericCharacters">The minimum number of non-alphanumeric characters (such as @, #, !, %, &amp;, and so on) in the generated password.</param>
        <summary>Generates a random password of the specified length.</summary>
        <returns>A random password of the specified length.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GeneratePassword%2A> 메서드는 임의의 암호를 생성 하는 데 사용 되 고가 가장 많이 사용 되는 <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> 메서드가 새 임시 암호를 사용자에 대 한 암호를 다시 설정 하는 멤버 자격 공급자가 구현 합니다.  
  
 생성된 된 암호는 영숫자 문자 및 다음과 같은 문장 부호에만 포함: `!@#$%^&*()_-+=[{]};:<>|./?`합니다. 생성된 된 암호에 숨김 또는 인쇄할 수 없는 제어 문자가 포함 됩니다.  
  
> [!NOTE]
>  만든 임의의 암호는 <xref:System.Web.Security.Membership.GeneratePassword%2A> 메서드는 정규식에 통과 하지 않을 <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> 속성입니다. 그러나 임의의 암호가 설정 된 기준 충족는 <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A> 속성 및 `numberOfNonAlphanumericCharacters` 매개 변수입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 새 멤버 자격 사용자를 만들고 사용 하 여 <xref:System.Web.Security.Membership.GeneratePassword%2A> 메서드를 사용자에 게 표시 되는 임의 값으로 새 사용자의 암호를 초기화 합니다.  
  
> [!IMPORTANT]
>  이 예제에서는 잠재적인 보안 문제가 사용자 입력을 허용 하는 텍스트 상자가 포함 되어 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[System.Web.Security.Membership#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/GeneratePasswordcs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.Membership#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/GeneratePasswordvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="length" /> is less than 1 or greater than 128 -or-  <paramref name="numberOfNonAlphanumericCharacters" /> is less than 0 or greater than <paramref name="length" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAllUsers">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets a collection of the users in the database.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllUsers">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection GetAllUsers ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection GetAllUsers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetAllUsers" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllUsers () As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ GetAllUsers();" />
      <MemberSignature Language="F#" Value="static member GetAllUsers : unit -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.GetAllUsers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets a collection of all the users in the database.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> of <see cref="T:System.Web.Security.MembershipUser" /> objects representing all of the users in the database.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetAllUsers%2A> 컬렉션으로 응용 프로그램에 대 한 모든 멤버 자격 사용자에 대 한 정보를 반환 <xref:System.Web.Security.MembershipUser> 개체입니다. 사용할 때는 주의 해야는 <xref:System.Web.Security.Membership.GetAllUsers%2A> 메서드는 결과 매우 큰 사용자 데이터베이스와 <xref:System.Web.Security.MembershipUserCollection> ASP.NET 페이지에 응용 프로그램의 성능이 저하 될 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용자 수의 개수와 사용자의 목록을 반환 현재 온라인 상태입니다.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllUsers">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection GetAllUsers(int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllUsers (pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ GetAllUsers(int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member GetAllUsers : int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.GetAllUsers (pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pageIndex">The index of the page of results to return. Use 0 to indicate the first page.</param>
        <param name="pageSize">The size of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="totalRecords">The total number of users.</param>
        <summary>Gets a collection of all the users in the database in pages of data.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> of <see cref="T:System.Web.Security.MembershipUser" /> objects representing all the users in the database for the configured <see langword="applicationName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 반환 된 결과 <xref:System.Web.Security.Membership.GetAllUsers%2A> 의해 제한 되는 `pageIndex` 및 `pageSize` 매개 변수입니다. `pageSize` 의 최대 수를 식별 하는 매개 변수 <xref:System.Web.Security.MembershipUser> 에서 반환 하는 개체는 <xref:System.Web.Security.MembershipUserCollection>합니다. `pageIndex` 매개 변수는 0에서 첫 번째 페이지를 식별 하는 위치를 반환 하려면 결과 페이지를 식별 합니다. `totalRecords` 매개 변수는 한 `out` 구성 된 멤버 자격 사용자의 총 수로 설정 된 매개 변수 `applicationName`합니다. 예를 들어 13 명의 사용자가 구성 된 경우 `applicationName`, 및 `pageIndex` 값이 1는 `pageSize` 5는 <xref:System.Web.Security.MembershipUserCollection> 반환에 6 번째부터 10 번째까지의 사용자는 포함 됩니다. `totalRecords` 13으로 설정 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용자 수의 개수와 데이터 페이지에서 사용자의 목록을 반환 합니다. 현재 온라인 상태입니다.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="pageIndex" /> is less than zero.  -or-  <paramref name="pageSize" /> is less than 1.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfUsersOnline">
      <MemberSignature Language="C#" Value="public static int GetNumberOfUsersOnline ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetNumberOfUsersOnline() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetNumberOfUsersOnline" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumberOfUsersOnline () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetNumberOfUsersOnline();" />
      <MemberSignature Language="F#" Value="static member GetNumberOfUsersOnline : unit -&gt; int" Usage="System.Web.Security.Membership.GetNumberOfUsersOnline " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the number of users currently accessing an application.</summary>
        <returns>The number of users currently accessing an application.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A> 현재 사용자의 수를 반환 <xref:System.Web.Security.Membership.ApplicationName%2A> 마지막 작업 날짜는 덜 현재 시간 보다 큰는 <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>합니다. 마지막 작업 날짜/시간 스탬프 통해 사용자 자격 증명이 확인 되는 경우 현재 날짜와 시간으로 업데이트는 <xref:System.Web.Security.Membership.ValidateUser%2A> 또는 <xref:System.Web.Security.Membership.UpdateUser%2A> 메서드를 호출할 때 또는 <xref:System.Web.Security.Membership.GetUser%2A> 오버 로드 매개 변수 없이 또는 를사용하여하나를`userIsOnline`매개 변수를 날짜/시간 스탬프를 업데이트 해야 함을 지정 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용자 수의 개수와 사용자의 목록을 반환 현재 온라인 상태입니다.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets the information for a membership user from the data source.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser () As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser();" />
      <MemberSignature Language="F#" Value="static member GetUser : unit -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the information from the data source and updates the last-activity date/time stamp for the current logged-on membership user.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object representing the current logged-on user.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser> 데이터 원본에서 사용자 정보를 검색 하 고 만듭니다는 <xref:System.Web.Security.MembershipUser> 반환 된 데이터로 채울 개체입니다. 중 하나를 사용 하는 경우는 <xref:System.Web.Security.Membership.GetUser%2A> 사용 하지 않는 오버 로드는 `username` 매개 변수를 <xref:System.Web.Security.Membership.GetUser%2A> 현재 로그온 한 멤버 자격 사용자에 대 한 정보를 반환 합니다. 현재 로그온 한 멤버 자격 사용자도 식별 되는 <xref:System.Security.Principal.IIdentity.Name%2A> 현재에서 사용자의 <xref:System.Web.HttpContext>합니다.  
  
 여부를 지정할 수 <xref:System.Web.Security.Membership.GetUser%2A> 마지막 작업을 업데이트 하려면 사용자에 대 한 날짜/시간 스탬프를 사용 하 여 검색 되는 `userIsOnline` 매개 변수입니다. <xref:System.Web.Security.Membership.GetUser%2A> 사용 하지 않는 오버 로드는 `userIsOnline` 매개 변수를 `GetUser()` 사용자에 대 한 암시적으로 업데이트의 마지막 작업 날짜/시간 스탬프입니다. `GetUser(System.String)` 및 `GetUser(System.Object)` 는 그렇지 않습니다.  
  
   
  
## Examples  
 다음 코드 예에서는 업데이트의 마지막 작업 날짜/시간 스탬프를 현재 로그온 한 멤버 자격 사용자와 ASP.NET 페이지의 사용자 이름을 표시 합니다.  
  
 [!code-aspx-csharp[System.Web.Security.Membership#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/default1cs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.Membership#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/default1vb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">No membership user is currently logged in.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(bool userIsOnline);" />
      <MemberSignature Language="F#" Value="static member GetUser : bool -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser userIsOnline" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userIsOnline">If <see langword="true" />, updates the last-activity date/time stamp for the specified user.</param>
        <summary>Gets the information from the data source for the current logged-on membership user. Updates the last-activity date/time stamp for the current logged-on membership user, if specified.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object representing the current logged-on user.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A> 메서드는 데이터 원본에서 사용자 정보를 검색 하 고 만듭니다는 <xref:System.Web.Security.MembershipUser> 반환 된 데이터로 채울 개체입니다. 중 하나를 사용 하는 경우는 <xref:System.Web.Security.Membership.GetUser%2A> 사용 하지 않는 오버 로드는 `username` 매개 변수를 <xref:System.Web.Security.Membership.GetUser%2A> 현재 로그온 한 멤버 자격 사용자에 대 한 정보를 반환 합니다. 현재 로그온 한 멤버 자격 사용자도 식별 되는 <xref:System.Security.Principal.IIdentity.Name%2A> 현재에서 사용자의 <xref:System.Web.HttpContext>합니다.  
  
 여부를 지정할 수 <xref:System.Web.Security.Membership.GetUser%2A> 마지막 작업을 업데이트 하려면 사용자에 대 한 날짜/시간 스탬프를 사용 하 여 검색 되는 `userIsOnline` 매개 변수입니다. <xref:System.Web.Security.Membership.GetUser%2A> 사용 하지 않는 오버 로드는 `userIsOnline` 매개 변수를 `GetUser()` 사용자에 대 한 암시적으로 업데이트의 마지막 작업 날짜/시간 스탬프입니다. `GetUser(System.String)` 및 `GetUser(System.Object)` 는 그렇지 않습니다.  
  
   
  
## Examples  
 마지막 작업을 업데이트 하지 않고 ASP.NET 페이지에 현재 로그온 한 멤버 자격 사용자에 대 한 사용자 이름을 다음 코드 예제에서는 표시 날짜/타임 스탬프는 사용자에 대 한 합니다.  
  
 [!code-aspx-csharp[System.Web.Security.Membership#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/default2cs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.Membership#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/default2vb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">No membership user is currently logged in.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (object providerUserKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(object providerUserKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (providerUserKey As Object) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(System::Object ^ providerUserKey);" />
      <MemberSignature Language="F#" Value="static member GetUser : obj -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser providerUserKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerUserKey" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="providerUserKey">The unique user identifier from the membership data source for the user.</param>
        <summary>Gets the information from the data source for the membership user associated with the specified unique identifier.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object representing the user associated with the specified unique identifier.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A> 메서드는 데이터 원본에서 사용자 정보를 검색 하 고 만듭니다는 <xref:System.Web.Security.MembershipUser> 반환 된 데이터로 채울 개체입니다. 사용 하 여 지정 된 데이터 원본의 고유 식별자를 사용 하 여 사용자가 식별 된 `providerUserKey` 매개 변수입니다.  
  
 여부를 지정할 수 <xref:System.Web.Security.Membership.GetUser%2A> 마지막 작업을 업데이트 하려면 날짜/시간 스탬프와 함께 검색 되 고 사용자에 대 한는 `userIsOnline` 매개 변수입니다. <xref:System.Web.Security.Membership.GetUser%2A> 사용 하지 않는 오버 로드는 `userIsOnline` 매개 변수를 `GetUser()` 사용자에 대 한 암시적으로 업데이트의 마지막 작업 날짜/시간 스탬프입니다. `GetUser(System.String)` 및 `GetUser(System.Object)` 하지 않습니다  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerUserKey" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (username As String) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="static member GetUser : string -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to retrieve.</param>
        <summary>Gets the information from the data source for the specified membership user.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object representing the specified user. If the <paramref name="username" /> parameter does not correspond to an existing user, this method returns <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A> 메서드는 데이터 원본에서 사용자 정보를 검색 하 고 만듭니다는 <xref:System.Web.Security.MembershipUser> 반환 된 데이터로 채울 개체입니다. 중 하나를 사용 하는 경우는 <xref:System.Web.Security.Membership.GetUser%2A> 사용 하지 않는 오버 로드는 `username` 매개 변수를 <xref:System.Web.Security.Membership.GetUser%2A> 현재 로그온 한 멤버 자격 사용자에 대 한 정보를 반환 합니다. 현재 로그온 한 멤버 자격 사용자도 식별 되는 <xref:System.Security.Principal.IIdentity.Name%2A> 현재에서 사용자의 <xref:System.Web.HttpContext>합니다.  
  
 여부를 지정할 수 <xref:System.Web.Security.Membership.GetUser%2A> 마지막 작업을 업데이트 하려면 날짜/시간 스탬프와 함께 검색 되 고 사용자에 대 한는 `userIsOnline` 매개 변수입니다. <xref:System.Web.Security.Membership.GetUser%2A> 사용 하지 않는 오버 로드는 `userIsOnline` 매개 변수를 <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=nameWithType> 사용자에 대 한 암시적으로 업데이트의 마지막 작업 날짜/시간 스탬프입니다. <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=nameWithType> 및 <xref:System.Web.Security.Membership.GetUser%2A> 는 그렇지 않습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.Security.Membership.GetUser%2A> 반환 하는 메서드는 <xref:System.Web.Security.MembershipUser> 는 현재 로그온 한 사용자 및 사용자에 대 한 전자 메일 주소 업데이트에 대 한 개체입니다.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/UpdateEmailcs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/UpdateEmailvb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> contains a comma (,).</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(object providerUserKey, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (providerUserKey As Object, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(System::Object ^ providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="F#" Value="static member GetUser : obj * bool -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser (providerUserKey, userIsOnline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="providerUserKey">The unique user identifier from the membership data source for the user.</param>
        <param name="userIsOnline">If <see langword="true" />, updates the last-activity date/time stamp for the specified user.</param>
        <summary>Gets the information from the data source for the membership user associated with the specified unique identifier. Updates the last-activity date/time stamp for the user, if specified.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object representing the user associated with the specified unique identifier.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A> 메서드는 데이터 원본에서 사용자 정보를 검색 하 고 만듭니다는 <xref:System.Web.Security.MembershipUser> 반환 된 데이터로 채울 개체입니다. 사용자에 지정 된 데이터 원본의 고유 식별자로 식별 되는 `providerUserKey` 매개 변수입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerUserKey" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(string username, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (username As String, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(System::String ^ username, bool userIsOnline);" />
      <MemberSignature Language="F#" Value="static member GetUser : string * bool -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser (username, userIsOnline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to retrieve.</param>
        <param name="userIsOnline">If <see langword="true" />, updates the last-activity date/time stamp for the specified user.</param>
        <summary>Gets the information from the data source for the specified membership user. Updates the last-activity date/time stamp for the user, if specified.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object representing the specified user. If the <paramref name="username" /> parameter does not correspond to an existing user, this method returns <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A> 메서드는 데이터 원본에서 사용자 정보를 검색 하 고 만듭니다는 <xref:System.Web.Security.MembershipUser> 반환 된 데이터로 채울 개체입니다.  
  
 중 하나를 사용 하는 경우는 <xref:System.Web.Security.Membership.GetUser%2A> 사용 하지 않는 오버 로드는 `username` 매개 변수를 <xref:System.Web.Security.Membership.GetUser%2A> 현재 로그온 한 멤버 자격 사용자에 대 한 정보를 반환 합니다. 현재 로그온 한 멤버 자격 사용자도 식별 되는 <xref:System.Security.Principal.IIdentity.Name%2A> 현재에서 사용자의 <xref:System.Web.HttpContext>합니다.  
  
 여부를 지정할 수 <xref:System.Web.Security.Membership.GetUser%2A> 마지막 작업을 업데이트 하려면 날짜/시간 스탬프와 함께 검색 되 고 사용자에 대 한는 `userIsOnline` 매개 변수입니다. <xref:System.Web.Security.Membership.GetUser%2A> 사용 하지 않는 오버 로드는 `userIsOnline` 매개 변수를 <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=nameWithType> 사용자에 대 한 암시적으로 업데이트의 마지막 작업 날짜/시간 스탬프입니다. <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=nameWithType> 및 <xref:System.Web.Security.Membership.GetUser%2A> 는 그렇지 않습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 지정 된 사용자 이름에 대 한 암호를 검색 하 고 지정된 된 사용자에 대 한 전자 메일 주소로 보냅니다. 에 대 한 호출 <xref:System.Web.Security.Membership.GetUser%2A> 는 마지막 작업 날짜/시간 스탬프를 지정 합니다. 사용자를 업데이트할 수에 대 한 합니다.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> contains a comma (,).</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUserNameByEmail">
      <MemberSignature Language="C#" Value="public static string GetUserNameByEmail (string emailToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetUserNameByEmail(string emailToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUserNameByEmail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUserNameByEmail (emailToMatch As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetUserNameByEmail(System::String ^ emailToMatch);" />
      <MemberSignature Language="F#" Value="static member GetUserNameByEmail : string -&gt; string" Usage="System.Web.Security.Membership.GetUserNameByEmail emailToMatch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">The email address to search for.</param>
        <summary>Gets a user name where the email address for the user matches the specified email address.</summary>
        <returns>The user name where the email address for the user matches the specified email address. If no match is found, <see langword="null" /> is returned.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUserNameByEmail%2A> 사용자가 사용자 이름을 알 수 없습니다 있지만 전자 메일 주소를 알고 있는 경우에서 멤버 자격 사용자에 대 한 사용자 이름을 검색 하 사용할 수 있습니다. 에 동일한 전자 메일 주소가 둘 이상의 사용자가 데이터 저장소에 나타난 첫 번째 사용자 이름이 반환 됩니다.  
  
 모든 매개 변수 값에서 선행 및 후행 공백이 잘립니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 지정 된 전자 메일 주소에 대 한 사용자 이름을 검색합니다.  
  
> [!IMPORTANT]
>  이 예제에서는 잠재적인 보안 문제가 사용자 입력을 허용 하는 텍스트 상자가 포함 되어 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/GetUserByEmailcs.aspx#7)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/GetUserByEmailvb.aspx#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithmType">
      <MemberSignature Language="C#" Value="public static string HashAlgorithmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string HashAlgorithmType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.HashAlgorithmType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property HashAlgorithmType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ HashAlgorithmType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HashAlgorithmType : string" Usage="System.Web.Security.Membership.HashAlgorithmType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The identifier of the algorithm used to hash passwords.</summary>
        <value>기본 해시 알고리즘을 사용 하려면 암호를 해시, 또는 빈 사용 되는 알고리즘의 식별자입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.HashAlgorithmType%2A> 속성에서 사용 하는 사용자 지정 해시 알고리즘을 식별 하는 <xref:System.Web.Security.Membership> 클래스입니다. 설정한는 <xref:System.Web.Security.Membership.HashAlgorithmType%2A> 사용 하 여 속성의 `hashAlgorithmType` 요소의 특성입니다.  
  
 .NET Framework를 사용 하면 요소 구성 섹션을 사용 하 여 사용자 지정 암호화 클래스를 구성할 수 있습니다. <xref:System.Web.Security.Membership.HashAlgorithmType%2A> 속성 일치 해야 합니다는 `name` 요소에 있는 요소의 특성입니다. 자세한 내용은 참조 [암호화 클래스에 알고리즘 이름 매핑](~/docs/framework/configure-apps/map-algorithm-names-to-cryptography-classes.md)합니다.  
  
 경우는 <xref:System.Web.Security.Membership.HashAlgorithmType%2A> 속성이 설정 되어 있지는 <xref:System.Web.Security.Membership> 에서 설정 하는 해시 알고리즘을 사용 하는 클래스는 `validation` 요소의 특성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxInvalidPasswordAttempts">
      <MemberSignature Language="C#" Value="public static int MaxInvalidPasswordAttempts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MaxInvalidPasswordAttempts" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.MaxInvalidPasswordAttempts" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MaxInvalidPasswordAttempts As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MaxInvalidPasswordAttempts { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxInvalidPasswordAttempts : int" Usage="System.Web.Security.Membership.MaxInvalidPasswordAttempts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of invalid password or password-answer attempts allowed before the membership user is locked out.</summary>
        <value>멤버 자격 사용자를 잠그기 전에 잘못된 암호 또는 암호 대답이 허용되는 횟수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> 속성이와 함께에서 작동 하는 <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> 속성을 사용 하 여 원치 않는 소스 로부터 보호 반복 암호 또는 암호 대답의 멤버 자격 사용자의 추측 하려고 시도 합니다.  
  
 멤버 자격 사용자의 값 보다 크거나 같은 경우에 대 한 잘못 된 암호 또는 암호 대답의 수를 입력 하는 경우는 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> 속성으로 지정 된 분 수에는 <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> 하 여 웹 사이트 속성을 다음 사용자는 계속 액세스할 설정의 <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> 속성을 `true` 사용자에 대 한 호출 하 여 잠금이 해제 될 때까지 <xref:System.Web.Security.MembershipUser.UnlockUser%2A> 메서드.  
  
 올바른 암호 또는 암호 대답의 입력 제공 되지 않은 경우 값의 앞에서 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> 속성에 도달 하면, 잘못 된 시도 횟수를 추적 하는 카운터가 0으로 설정 됩니다.  
  
 잘못 된 암호 및 암호 대답 시도 개별적으로 추적 됩니다. 예를 들어 경우는 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> 속성이 5로 설정 되어 있으면 사용자에 게 올바른 암호를 입력 하 고 잠겨 지기 정확한 암호 대답을 입력 하려면 5 번의 시도 최대 최대 5 개까지 시도 합니다.  
  
 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> 속성 값을 사용 하 여 응용 프로그램 구성에서 설정 된 `maxInvalidPasswordAttempts` 구성 요소의 특성입니다.  
  
 경우는 <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> 속성은 `false`, 잘못 된 암호 대답의 입력 시도가 추적 되지 않습니다.  
  
   
  
## Examples  
 다음 코드 예제에서 요소를 보여 줍니다.는 `system.web` 응용 프로그램의 Web.config 파일의 섹션입니다. 응용 프로그램의 인스턴스를 사용 하도록 지정는 <xref:System.Web.Security.SqlMembershipProvider> 멤버 자격 서비스를 제공 하는 설정 하는 클래스는 `maxInvalidPasswordAttempts` 특성을 잘못 된 시도 횟수를 5 개 및 `passwordAttemptWindow` 을 30 분입니다.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      maxInvalidPasswordAttempts="5"  
      passwordAttemptWindow="30"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredNonAlphanumericCharacters">
      <MemberSignature Language="C#" Value="public static int MinRequiredNonAlphanumericCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MinRequiredNonAlphanumericCharacters As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MinRequiredNonAlphanumericCharacters { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinRequiredNonAlphanumericCharacters : int" Usage="System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the minimum number of special characters that must be present in a valid password.</summary>
        <value>유효한 암호에 사용해야 하는 최소 특수 문자 수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A> 속성에 지정 된 멤버 자격 공급자에 대 한 유효한 암호를 만들기 위해 입력 해야 하는 특수 한 영숫자가 아닌 문자의 최소 수를 반환 합니다.는 <xref:System.Web.Security.Membership.Provider%2A> 속성입니다.  
  
 <xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A> 속성 값을 사용 하 여 응용 프로그램 구성에서 설정 된 `minRequiredNonAlphanumericCharacters` 구성 요소의 특성입니다.  
  
 영숫자가 아닌 문자는 문자는는 <xref:System.Char.IsLetterOrDigit%2A> 메서드 반환 `false`합니다.  
  
   
  
## Examples  
 다음 코드 예제에서 구성 요소를 보여 줍니다.는 `system.web` 응용 프로그램의 Web.config 파일의 섹션입니다. 응용 프로그램의 인스턴스를 사용 하도록 지정 된 <xref:System.Web.Security.SqlMembershipProvider> 멤버 자격 서비스를 제공 하는 설정 하는 클래스는 `minRequiredNonAlphanumericCharacters` 특성을 1 자입니다.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      minRequiredNonAlphanumericCharacters="1"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredPasswordLength">
      <MemberSignature Language="C#" Value="public static int MinRequiredPasswordLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MinRequiredPasswordLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.MinRequiredPasswordLength" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MinRequiredPasswordLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MinRequiredPasswordLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinRequiredPasswordLength : int" Usage="System.Web.Security.Membership.MinRequiredPasswordLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the minimum length required for a password.</summary>
        <value>암호에 필요한 최소 길이입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A> 속성에 지정 된 멤버 자격 공급자에 대 한 유효한 암호를 만들기 위해 입력 해야 하는 문자의 최소 수를 가져옵니다는 <xref:System.Web.Security.Membership.Provider%2A> 속성입니다.  
  
 <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A> 속성 값을 사용 하 여 응용 프로그램 구성에서 설정 된 `minRequiredPasswordLength` 구성 요소의 특성입니다.  
  
   
  
## Examples  
 다음 코드 예제에서 구성 요소를 보여 줍니다.는 `system.web` 응용 프로그램의 Web.config 파일의 섹션입니다. 응용 프로그램의 인스턴스를 사용 하도록 지정 된 <xref:System.Web.Security.SqlMembershipProvider> 멤버 자격 서비스를 제공 하는 설정 하는 클래스는 `minRequiredPasswordLength` 특성을 7 자 합니다.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      minRequiredPasswordLength="7"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordAttemptWindow">
      <MemberSignature Language="C#" Value="public static int PasswordAttemptWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 PasswordAttemptWindow" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.PasswordAttemptWindow" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PasswordAttemptWindow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int PasswordAttemptWindow { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordAttemptWindow : int" Usage="System.Web.Security.Membership.PasswordAttemptWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the time window between which consecutive failed attempts to provide a valid password or password answer are tracked.</summary>
        <value>시간 창 분으로는 연속 실패 올바른 암호를 제공 이나 암호 대답 추적 됩니다. 기본값은 10 분입니다. 현재 실패 한 시도 및 실패 한 마지막 시도 간의 간격 보다 클 경우는 <see cref="P:System.Web.Security.Membership.PasswordAttemptWindow" /> 속성 설정 시도가 실패할된 때마다 첫 번째 시도가 실패 한 것 처럼 처리 됩니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> 속성이와 함께에서 작동 하는 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> 원하지 않는 소스 암호 또는 암호 대답을 통해 멤버 자격 사용자의 추측을 방지할 수 있는 속성에 여러 번 시도 합니다. 사용자가을 사용 하 여 로그인, 변경 또는 암호 다시 설정에 지정된 된 시간 창 내의 특정 시도 연속적으로 번호만 수 있습니다. 에 지정 된이 시간 기간의 길이 <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> 잘못 된 시도 사이 허용 되는 시간 (분)을 식별 하는 속성입니다.  
  
 암호에 저장 된 값과 같으면를 사용자에 수행 하는 연속 된 실패 한 시도 횟수 다시 설정 하는 경우는 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> 속성과 시간 경과 하려고에 지정 된 분 수 보다 작기 때문는 <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> 속성 멤버 자격 사용자가 잠깁니다. 설정 하 여 사용자가 잠겨는 <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> 속성을 `true` 사용자에 대 한 호출 하 여 잠금이 해제 될 때까지 <xref:System.Web.Security.MembershipUser.UnlockUser%2A> 메서드.  
  
 현재 실패 한 시도 및 실패 한 마지막 시도 간의 간격 보다 클 경우는 <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> 속성 설정, 현재 유효 하지 않은 시도 첫 번째 것으로 간주 됩니다. 유효한 암호 대답이 잘못 되었습니다. 허용 된 시도의 최대 수에 도달 하기 전에 제공 되는 경우 잘못 된 암호 대답의 입력 시도 횟수가 0 (영)으로 설정 됩니다. 잘못 된 최대 허용 하기 전에 올바른 암호를 제공 하는 경우 시도 횟수에 도달 하면, 잘못 된 암호 시도 횟수 및 잘못 된 암호 대답의 입력 시도 횟수가 0 (영)으로 설정 됩니다.  
  
 잘못 된 암호 및 암호 대답 시도 횟수는 서로 독립적으로 누적 됩니다. 예를 들어 경우는 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> 5로 설정 하 고 3 개의 잘못 된 암호 시도가 이루어진 두 개의 잘못 된 암호 대답 시도가 다음, 두 개 이상의 잘못 된 암호 시도 (또는 3 개 이상의 잘못 된 암호 대답 시도) 내에서 이루어져야 합니다 <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> 멤버 자격 사용자 잠길 수 있습니다.  
  
 <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> 를 사용 하 여 응용 프로그램 구성에서 속성 값이 설정의 `passwordAttemptWindow` 구성 요소 섹션의 특성입니다.  
  
 경우는 <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> 속성이 `false`, 잘못 된 암호 대답의 입력 시도가 추적 되지 않습니다.  
  
   
  
## Examples  
 다음 코드 예제에서 요소를 보여 줍니다.는 `system.web` ASP.NET 응용 프로그램에 대 한 Web.config 파일의 섹션입니다. 응용 프로그램의 인스턴스를 사용 하도록 지정는 <xref:System.Web.Security.SqlMembershipProvider> 설정 하 고는 `maxInvalidPasswordAttempts` 특성을 잘못 된 시도 횟수를 5 개 및 `passwordAttemptWindow` 을 30 분입니다.  
  
```  
<membership defaultProvider="SqlProvider"   
  userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      maxInvalidPasswordAttempts="5"  
      passwordAttemptWindow="30"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordStrengthRegularExpression">
      <MemberSignature Language="C#" Value="public static string PasswordStrengthRegularExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string PasswordStrengthRegularExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.PasswordStrengthRegularExpression" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PasswordStrengthRegularExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ PasswordStrengthRegularExpression { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordStrengthRegularExpression : string" Usage="System.Web.Security.Membership.PasswordStrengthRegularExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the regular expression used to evaluate a password.</summary>
        <value>암호를 평가하는 데 사용할 정규식입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> 속성에 지정 된 공급자에서 암호 복잡성을 평가 하는 데 사용할 정규식을 가져옵니다는 <xref:System.Web.Security.Membership.Provider%2A> 속성입니다.  
  
 <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> 속성은 사용 하 여 응용 프로그램 구성에서 설정 된 `passwordStrengthRegularExpression` 구성 요소의 특성입니다.  
  
 정규식에 대 한 자세한 내용은 참조 [.NET Framework 정규식](~/docs/standard/base-types/regular-expressions.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서 구성 요소를 보여 줍니다.는 `system.web` 응용 프로그램의 Web.config 파일의 섹션입니다. 응용 프로그램의 인스턴스를 사용 하도록 지정 된 <xref:System.Web.Security.SqlMembershipProvider> 멤버 자격 서비스를 제공 하는 설정 하는 클래스는 `passwordStrengthRegularExpression` 특성 암호의 유효성을 검사 하는 정규식에는 다음 조건을 충족:  
  
-   7 자 보다 큽니다.  
  
-   숫자를 하나 이상 포함 되어 있습니다.  
  
-   하나 이상의 특수 (영숫자가 아닌) 문자를 포함합니다.  
  
 암호에 이러한 조건을 충족 하지 않는 암호 멤버 자격 공급자가 허용 되지 않습니다.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      passwordStrengthRegularExpression=" @\"(?=.{6,})(?=(.*\d){1,})(?=(.*\W){1,})"  
      />  
   </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Security.MembershipProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.Provider" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Provider As MembershipProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Security::MembershipProvider ^ Provider { System::Web::Security::MembershipProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Provider : System.Web.Security.MembershipProvider" Usage="System.Web.Security.Membership.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a reference to the default membership provider for the application.</summary>
        <value>사용 하 여 노출 하는 응용 프로그램에 대 한 기본 멤버 자격 공급자는 <see cref="T:System.Web.Security.MembershipProvider" /> 추상 기본 클래스입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.Provider%2A> 속성을 사용 하면 응용 프로그램에 대 한 기본 멤버 자격 공급자를 직접 참조할 수 있습니다. 이 일반적으로 사용 되지 않는 멤버 자격 공급자의 사용자 지정 멤버에 액세스의 일부가 <xref:System.Web.Security.MembershipProvider> 추상 기본 클래스입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 액세스 기본 <xref:System.Web.Security.SqlMembershipProvider> 사용 하 여 응용 프로그램에 사용할 수는 <xref:System.Web.Security.Membership.Provider%2A> 속성 사용자 지정 값을 결정 하기 위해 <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> 속성입니다.  
  
 [!code-aspx-csharp[System.Web.Security.Membership#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/Providercs.aspx#6)]
 [!code-aspx-vb[System.Web.Security.Membership#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/Providervb.aspx#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipProviderCollection Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Security.MembershipProviderCollection Providers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.Providers" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Providers As MembershipProviderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Security::MembershipProviderCollection ^ Providers { System::Web::Security::MembershipProviderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Providers : System.Web.Security.MembershipProviderCollection" Usage="System.Web.Security.Membership.Providers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipProviderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a collection of the membership providers for the ASP.NET application.</summary>
        <value>A <see cref="T:System.Web.Security.MembershipProviderCollection" /> ASP.NET 응용 프로그램에 대해 구성 된 멤버 자격 공급자의 합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.Providers%2A> 응용 프로그램에 대 한 Web.config 파일 및 모든 응용 프로그램에 대해 Machine.config 파일에 추가 공급자를 포함 하 여 속성 모든 응용 프로그램에 사용 된 멤버 자격 공급자를 참조 합니다. 사용 하 여 응용 프로그램에 대해 사용할 수 있는 어떤 멤버 자격 공급자를 제어할 수 있습니다는 `providers` 응용 프로그램에 대 한 구성 섹션의 요소입니다. 다음 예제를 제거 하는 응용 프로그램에 대 한 Web.config 파일에서 섹션을 설명 하는 예를 들어는 <xref:System.Web.Security.SqlMembershipProvider> 인스턴스 (`AspNetSqlProvider`) 컴퓨터 구성 파일에 지정 하 고 추가 <xref:System.Web.Security.SqlMembershipProvider> 명명 된 인스턴스 `SqlProvider` 으로 응용 프로그램에 대 한 기본 멤버 자격 공급자입니다.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
      <providers>  
        <remove name="AspNetSqlProvider" />  
          <add name="SqlProvider"  
            type="System.Web.Security.SqlMembershipProvider"  
            connectionStringName="SqlServices"  
            enablePasswordRetrieval="false"  
            enablePasswordReset="true"  
            requiresQuestionAndAnswer="true"  
            passwordFormat="Hashed"  
            applicationName="/" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 지정 하는 경우는 [membership 요소 (ASP.NET 설정 스키마)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) 지정 해야 섹션은 `defaultProvider` 특성입니다. 지정 하지 않는 경우는 [membership 요소 (ASP.NET 설정 스키마)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) 섹션 컴퓨터 구성에서 값 Web.config 파일에 사용 되 고 <xref:System.Web.Security.SqlMembershipProvider> 명명 된 인스턴스 `AspNetSqlProvider` 는 로설정됩니다`defaultProvider`.  
  
 공급자에 대 한 강력한 형식의 참조를 가져올 수 있습니다는 <xref:System.Web.Security.Membership.Providers%2A> 이름별으로 멤버 자격 공급자를 인덱싱하고 원하는 형식으로 캐스팅 하는 컬렉션입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 응용 프로그램 및 해당 형식에 대 한 사용 가능한 공급자를 나열 합니다.  
  
 [!code-aspx-csharp[System.Web.Security.Membership#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/Providerscs.aspx#7)]
 [!code-aspx-vb[System.Web.Security.Membership#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/Providersvb.aspx#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public static bool RequiresQuestionAndAnswer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool RequiresQuestionAndAnswer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.RequiresQuestionAndAnswer" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RequiresQuestionAndAnswer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool RequiresQuestionAndAnswer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresQuestionAndAnswer : bool" Usage="System.Web.Security.Membership.RequiresQuestionAndAnswer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the default membership provider requires the user to answer a password question for password reset and retrieval.</summary>
        <value>
          <see langword="true" /> 암호 대답에 필요한 경우 암호 재설정 및 검색 합니다. 그렇지 않으면 <see langword="false" />합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 추가 보안 계층을 사용자의 암호를 다시 설정 하거나 검색할 때 제공 암호 질문 및 대답을 요구 합니다. 사용자 제공할 수 있습니다 질문 및 대답 해당 사용자 이름이 생성 되는 경우를 검색 하거나 잊어버린된 암호를 재설정 나중에 사용할 수 있습니다.  
  
 <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> 때 확인란이 <xref:System.Web.Security.MembershipUser.ResetPassword%2A> 또는 <xref:System.Web.Security.MembershipUser.GetPassword%2A> 라고 합니다. .NET Framework와 함께 제공 되는 공급자를 throw 한 <xref:System.NotSupportedException> 경우 <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> 은 `true` 제공 된 암호 대답이 및 `null`합니다.  
  
 경우 <xref:System.Web.Security.Membership.EnablePasswordReset%2A> 및 <xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A> 모두 `false`, <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> 새 사용자를 만들 때 질문 및 답변의 만들도록 하 계속 사용할 수 있습니다; 그러나 질문 및 답변 사용 되지 것입니다. 질문을 사용 하 여 검색할 수는 <xref:System.Web.Security.MembershipUser> 클래스입니다.  
  
 자세한 내용은 <xref:System.Web.Security.MembershipUser.ResetPassword%2A> 및 <xref:System.Web.Security.MembershipUser.GetPassword%2A>를 참조하세요.  
  
   
  
## Examples  
 다음 코드 예제에서 요소를 보여 줍니다.는 `system.web` ASP.NET 응용 프로그램에 대 한 Web.config 파일의 섹션입니다. 응용 프로그램의 인스턴스를 사용 하도록 지정 된 <xref:System.Web.Security.SqlMembershipProvider>암호 재설정을 활성화 하 고 재설정을 수행할 때 암호 대답을 요구 합니다.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 다음 코드 샘플의 값을 검사 <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> 암호 질문 및 사용자를 만들 때 제공 해야 하는 응답에 대 한 필요한 컨트롤을 추가 합니다.  
  
> [!IMPORTANT]
>  이 예제에는 잠재적인 보안 문제가 사용자 입력을 허용 하는 텍스트 상자가 포함 됩니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/CreateUsercs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/CreateUservb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateUser">
      <MemberSignature Language="C#" Value="public static void UpdateUser (System.Web.Security.MembershipUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdateUser(class System.Web.Security.MembershipUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UpdateUser (user As MembershipUser)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UpdateUser(System::Web::Security::MembershipUser ^ user);" />
      <MemberSignature Language="F#" Value="static member UpdateUser : System.Web.Security.MembershipUser -&gt; unit" Usage="System.Web.Security.Membership.UpdateUser user" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.Web.Security.MembershipUser" />
      </Parameters>
      <Docs>
        <param name="user">A <see cref="T:System.Web.Security.MembershipUser" /> object that represents the user to be updated and the updated information for the user.</param>
        <summary>Updates the database with the information for the specified user.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.UpdateUser%2A> 입력으로 받아들이고는 <xref:System.Web.Security.MembershipUser> 개체 멤버 자격 사용자에 대 한 현재 정보로 채워진 및 데이터 소스의 속성 값으로 업데이트는 <xref:System.Web.Security.MembershipUser> 개체입니다. 새 생성할 수 있습니다 <xref:System.Web.Security.MembershipUser>, 검색 또는 <xref:System.Web.Security.MembershipUser> 개체를 사용 하 여 데이터 원본에 대 한 현재 값으로 채워진는 <xref:System.Web.Security.Membership.GetUser%2A>, <xref:System.Web.Security.Membership.GetAllUsers%2A>, <xref:System.Web.Security.Membership.FindUsersByName%2A>, 또는 <xref:System.Web.Security.Membership.FindUsersByEmail%2A> 메서드.  
  
   
  
## Examples  
 다음 코드 예제에서는 현재 로그온 한 사용자에 대 한 전자 메일 주소를 업데이트합니다.  
  
> [!IMPORTANT]
>  이 예제에서는 잠재적인 보안 문제가 사용자 입력을 허용 하는 텍스트 상자가 포함 되어 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/UpdateEmailcs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/UpdateEmailvb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="user" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UserIsOnlineTimeWindow">
      <MemberSignature Language="C#" Value="public static int UserIsOnlineTimeWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 UserIsOnlineTimeWindow" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.UserIsOnlineTimeWindow" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UserIsOnlineTimeWindow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int UserIsOnlineTimeWindow { int get(); };" />
      <MemberSignature Language="F#" Value="member this.UserIsOnlineTimeWindow : int" Usage="System.Web.Security.Membership.UserIsOnlineTimeWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifies the number of minutes after the last-activity date/time stamp for a user during which the user is considered online.</summary>
        <value>몇 분 후 마지막 작업 날짜/시간 스탬프는 사용자가 온라인 인지 사용자에 대 한 합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> 속성 값을 호출 하는 동안 검사 <xref:System.Web.Security.Membership.GetNumberOfUsersOnline%2A>합니다. 경우는 <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> 사용자는 현재 날짜 및 시간을 뺀 값 보다 크면는 <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> 분에서 값을 사용자에 온라인으로 간주 됩니다. 멤버 자격 사용자를 온라인으로 간주 되는지를 확인할 수 있습니다는 <xref:System.Web.Security.MembershipUser.IsOnline%2A> 의 속성은 <xref:System.Web.Security.MembershipUser> 클래스입니다.  
  
 <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> 하 여 사용자의 자격 증명의 유효성을 검사 하는 경우 사용자가 업데이트 된 <xref:System.Web.Security.Membership.ValidateUser%2A> 메서드. 업데이트할 수도 있습니다는 <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> 중 하나를 호출 하면 멤버 자격 사용자에 대 한는 <xref:System.Web.Security.Membership.GetUser%2A> 오버 로드 합니다. 호출 하는 경우는 <xref:System.Web.Security.Membership.GetUser%2A> 사용 오버 로드는 `userIsOnline` 매개 변수를 값을 지정 `true` 업데이트 하는 <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> 사용자에 대 한 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서 요소를 보여 줍니다.는 `system.web` ASP.NET 응용 프로그램에 대 한 Web.config 파일의 섹션입니다. 응용 프로그램의 인스턴스를 사용 하도록 지정 된 <xref:System.Web.Security.SqlMembershipProvider> 설정는 `userIsOnlineTimeWindow` 특성 20 분을 합니다.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateUser">
      <MemberSignature Language="C#" Value="public static bool ValidateUser (string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ValidateUser(string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.ValidateUser(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ValidateUser (username As String, password As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ValidateUser(System::String ^ username, System::String ^ password);" />
      <MemberSignature Language="F#" Value="static member ValidateUser : string * string -&gt; bool" Usage="System.Web.Security.Membership.ValidateUser (username, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to be validated.</param>
        <param name="password">The password for the specified user.</param>
        <summary>Verifies that the supplied user name and password are valid.</summary>
        <returns>
          <see langword="true" /> if the supplied user name and password are valid; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.ValidateUser%2A> 사용자 이름 및 데이터 원본에서 암호를 확인 하는 쉬운 방법을 제공 합니다. 경우는 `username` 매개 변수는 비어 또는 `null`, <xref:System.Web.HttpException> throw 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 폼 인증을 사용 하도록 구성 된 ASP.NET 응용 프로그램에 대 한 로그인 페이지를 보여 줍니다. 및 <xref:System.Web.Security.Membership> 클래스입니다. 제공 된 사용자 자격 증명이 유효 하지 하는 경우 사용자에 게 메시지가 표시 됩니다. 원래 요청 된 url에서 사용자가 리디렉션되 그렇지 않은 경우는 <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> 메서드.  
  
> [!IMPORTANT]
>  이 예제에서는 잠재적인 보안 문제가 사용자 입력을 허용 하는 텍스트 상자가 포함 되어 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidatingPassword">
      <MemberSignature Language="C#" Value="public static event System.Web.Security.MembershipValidatePasswordEventHandler ValidatingPassword;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Security.MembershipValidatePasswordEventHandler ValidatingPassword" />
      <MemberSignature Language="DocId" Value="E:System.Web.Security.Membership.ValidatingPassword" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event ValidatingPassword As MembershipValidatePasswordEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event System::Web::Security::MembershipValidatePasswordEventHandler ^ ValidatingPassword;" />
      <MemberSignature Language="F#" Value="member this.ValidatingPassword : System.Web.Security.MembershipValidatePasswordEventHandler " Usage="member this.ValidatingPassword : System.Web.Security.MembershipValidatePasswordEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipValidatePasswordEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when a user is created, a password is changed, or a password is reset.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.ValidatingPassword> 이벤트는 발생 때는 <xref:System.Web.Security.MembershipProvider.CreateUser%2A> 메서드를는 <xref:System.Web.Security.MembershipProvider.ChangePassword%2A> 메서드, 또는 <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> 멤버 자격 공급자의 메서드가 호출 됩니다.  
  
 사용할 수는 <xref:System.Web.Security.MembershipProvider.ValidatingPassword> 암호 형식 및 멤버 자격 사용자에 대 한 값을 확인 하는 이벤트입니다.  
  
 현재 취소할 수 있습니다 <xref:System.Web.Security.MembershipProvider.CreateUser%2A>, <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>, 또는 <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> 동작을 설정 하 여는 <xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A> 제공 된 속성 <xref:System.Web.Security.ValidatePasswordEventArgs> 를 `true` 중의 <xref:System.Web.Security.MembershipProvider.ValidatingPassword> 이벤트입니다.  
  
 설정 하 여 현재 작업을 취소 하는 경우는 <xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A> 속성을 `true`를 설정할 수 있습니다는 <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> 제공 된 속성 <xref:System.Web.Security.ValidatePasswordEventArgs> 암호 유효성 검사 실패에 대 한 이유를 설명 하는 예외로 합니다. 호출 하는 메서드는 예외를 throw 하는 <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> 속성이로 설정 합니다. 경우는 <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> 속성은 `null`, 경우 호출자는 일반 암호 유효성 검사 실패 예외를 throw 합니다.  
  
   
  
## Examples  
 다음 코드 예제는 <xref:System.Web.Security.MembershipProvider.ValidatingPassword> 이벤트는 사용자에 대 한 암호의 형식이 유효성 검사 및 암호에 필요한 형식을 따르지 않을 경우 작업을 취소 합니다.  
  
 [!code-csharp[System.Web.Security.Membership#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/CreateUser3cs.aspx#11)]
 [!code-vb[System.Web.Security.Membership#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/CreateUser3vb.aspx#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>