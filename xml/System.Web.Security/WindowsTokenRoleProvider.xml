<Type Name="WindowsTokenRoleProvider" FullName="System.Web.Security.WindowsTokenRoleProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="70d727a2566255c3f062ef9ee9e34c1669a1c534" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36596600" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WindowsTokenRoleProvider : System.Web.Security.RoleProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WindowsTokenRoleProvider extends System.Web.Security.RoleProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.WindowsTokenRoleProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class WindowsTokenRoleProvider&#xA;Inherits RoleProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsTokenRoleProvider : System::Web::Security::RoleProvider" />
  <TypeSignature Language="F#" Value="type WindowsTokenRoleProvider = class&#xA;    inherit RoleProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Security.RoleProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Gets role information for an ASP.NET application from Windows group membership.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.WindowsTokenRoleProvider> 클래스는 Windows 보안 그룹을 기준으로 Windows 사용자에 대 한 역할 정보를 검색 하는 읽기 전용 역할-멤버 자격 공급자입니다. IIS 인증 설정 익명 인증을 해제 하는 여기서 Windows 인증 모드를 사용 하는 ASP.NET 응용 프로그램에서 가장 유용 합니다. ASP.NET 응용 프로그램을 허용 하거나 거부할 사용자의 특정 Windows 그룹 멤버 자격에 따라 액세스를 구성할 수 있습니다.  
  
 사용할 수 없습니다는 <xref:System.Web.Security.WindowsTokenRoleProvider> 만들거나 역할 삭제 또는 Windows 그룹 멤버 자격을 기반으로 하는 역할의 멤버 자격을 수정 하는 클래스입니다. 이 기능은 Windows 운영 체제에 의해 관리 됩니다. <xref:System.Web.Security.WindowsTokenRoleProvider> 클래스는 지원만는 <xref:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole%2A> 및 <xref:System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser%2A> 의 메서드는 <xref:System.Web.Security.RoleProvider> 추상 클래스입니다.  
  
   
  
## Examples  
 다음 예제에서는 ASP.NET 응용 프로그램에 대 한 Web.config 파일을 보여 줍니다. 응용 프로그램이 Windows 인증을 사용 하는지 지정 및 <xref:System.Web.Security.WindowsTokenRoleProvider> Windows 사용자에 대 한 역할 정보를 검색할 수 있습니다. 요소는 BUILTIN\Administrators 그룹의 사용자만 응용 프로그램에 액세스할 수 있는지 지정 합니다.  
  
```  
<configuration>  
  <system.web>  
    <authentication mode="Windows" />  
  
    <authorization>  
      <allow roles="BUILTIN\Administrators" />  
        <deny users="*" />  
      </authorization>  
  
    <roleManager defaultProvider="WindowsProvider"   
      enabled="true"  
      cacheRolesInCookie="false">  
      <providers>  
        <add  
          name="WindowsProvider"  
          type="System.Web.Security.WindowsTokenRoleProvider" />  
      </providers>  
    </roleManager>  
  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsTokenRoleProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.WindowsTokenRoleProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsTokenRoleProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Creates an instance of the <see cref="T:System.Web.Security.WindowsTokenRoleProvider" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.WindowsTokenRoleProvider.%23ctor%2A> 생성자의 인스턴스를 만드는 ASP.NET에서 호출 되는 <xref:System.Web.Security.WindowsTokenRoleProvider> 응용 프로그램에 대 한 구성에 지정 된 대로 클래스입니다. 이 생성자는 사용자 코드에서 사용할 수 없습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddUsersToRoles">
      <MemberSignature Language="C#" Value="public override void AddUsersToRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddUsersToRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddUsersToRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AddUsersToRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="override this.AddUsersToRoles : string[] * string[] -&gt; unit" Usage="windowsTokenRoleProvider.AddUsersToRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">A string array of user names to be added to the specified roles.</param>
        <param name="roleNames">A string array of role names to add the specified user names to.</param>
        <summary>This method is not supported by the Windows token role provider.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는에서 지원 되지 않습니다는 <xref:System.Web.Security.WindowsTokenRoleProvider> 클래스와 항상 throw 한 <xref:System.Configuration.Provider.ProviderException>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">An unsupported method was called.</exception>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.WindowsTokenRoleProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.WindowsTokenRoleProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the application.</summary>
        <value>응용 프로그램의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 와 같은 다른 역할 공급자와 달리는 <xref:System.Web.Security.SqlRoleProvider>, <xref:System.Web.Security.WindowsTokenRoleProvider> 클래스에서 응용 프로그램 역할 정보를 연결 하지 않습니다. 대신, 역할 정보를 로컬 컴퓨터에서 Windows 그룹에서 가져옵니다. 사용 하는 동일한 서버에 여러 응용 프로그램은 <xref:System.Web.Security.WindowsTokenRoleProvider> 클래스 항상 동일한 역할 정보를 공유 합니다. 하지만 `applicationName` 응용 프로그램에 대 한 Web.config 파일에서 구성할 수 있습니다는 <xref:System.Web.Security.WindowsTokenRoleProvider.ApplicationName%2A> 역할 정보를 검색 하는 속성이 사용 되지 않습니다.  
  
   
  
## Examples  
 다음 예제에서는 요소에는 `system.web` ASP.NET 응용 프로그램에 대 한 Web.config 파일의 섹션입니다. 응용 프로그램의 지정 <xref:System.Web.Security.WindowsTokenRoleProvider> 인스턴스는 <xref:System.Web.Security.WindowsTokenRoleProvider.ApplicationName%2A> 속성을 `MyApplication`합니다.  
  
```  
<roleManager defaultProvider="WindowsProvider"   
  enabled="true"  
  cacheRolesInCookie="false">  
  <providers>  
    <add  
      name="WindowsProvider"  
      type="System.Web.Security.WindowsTokenRoleProvider"   
      applicationName="MyApplication" />  
  </providers>  
</roleManager>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">An attempt was made to set the <see cref="P:System.Web.Security.WindowsTokenRoleProvider.ApplicationName" /> property by a caller that does not have <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /> ASP.NET hosting permission.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">An attempt was made to set the <see cref="P:System.Web.Security.WindowsTokenRoleProvider.ApplicationName" /> to a string that is longer than 256 characters.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRole">
      <MemberSignature Language="C#" Value="public override void CreateRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CreateRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.WindowsTokenRoleProvider.CreateRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CreateRole (roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CreateRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.CreateRole : string -&gt; unit" Usage="windowsTokenRoleProvider.CreateRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">The name of the role to create.</param>
        <summary>This method is not supported by the Windows token role provider.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는에서 지원 되지 않습니다는 <xref:System.Web.Security.WindowsTokenRoleProvider> 클래스와 항상 throw 한 <xref:System.Configuration.Provider.ProviderException>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">An unsupported method was called.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteRole">
      <MemberSignature Language="C#" Value="public override bool DeleteRole (string roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteRole(string roleName, bool throwOnPopulatedRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.WindowsTokenRoleProvider.DeleteRole(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteRole (roleName As String, throwOnPopulatedRole As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool DeleteRole(System::String ^ roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="F#" Value="override this.DeleteRole : string * bool -&gt; bool" Usage="windowsTokenRoleProvider.DeleteRole (roleName, throwOnPopulatedRole)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="throwOnPopulatedRole" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="roleName">The name of the role to delete.</param>
        <param name="throwOnPopulatedRole">If <see langword="true" />, an exception will be thrown on an attempt to delete a role that contains one or more members.</param>
        <summary>This method is not supported by the Windows token role provider.</summary>
        <returns>None. The method is not supported by the <see cref="T:System.Web.Security.WindowsTokenRoleProvider" /> class and always throws a <see cref="T:System.Configuration.Provider.ProviderException" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">An unsupported method was called.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] FindUsersInRole (string roleName, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] FindUsersInRole(string roleName, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersInRole (roleName As String, usernameToMatch As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ FindUsersInRole(System::String ^ roleName, System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="override this.FindUsersInRole : string * string -&gt; string[]" Usage="windowsTokenRoleProvider.FindUsersInRole (roleName, usernameToMatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">The role to search in.</param>
        <param name="usernameToMatch">The user name to find in the role.</param>
        <summary>This method is not supported by the Windows token role provider.</summary>
        <returns>None. The method is not supported by the <see cref="T:System.Web.Security.WindowsTokenRoleProvider" /> class and always throws a <see cref="T:System.Configuration.Provider.ProviderException" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">An unsupported method was called.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAllRoles">
      <MemberSignature Language="C#" Value="public override string[] GetAllRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetAllRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.WindowsTokenRoleProvider.GetAllRoles" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetAllRoles();" />
      <MemberSignature Language="F#" Value="override this.GetAllRoles : unit -&gt; string[]" Usage="windowsTokenRoleProvider.GetAllRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This method is not supported by the Windows token role provider.</summary>
        <returns>None. The method is not supported by the <see cref="T:System.Web.Security.WindowsTokenRoleProvider" /> class and always throws a <see cref="T:System.Configuration.Provider.ProviderException" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">An unsupported method was called.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRolesForUser">
      <MemberSignature Language="C#" Value="public override string[] GetRolesForUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetRolesForUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRolesForUser (username As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetRolesForUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="override this.GetRolesForUser : string -&gt; string[]" Usage="windowsTokenRoleProvider.GetRolesForUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user to return the list of Windows groups for in the form DOMAIN\username.</param>
        <summary>Gets a list of the Windows groups that a user is in.</summary>
        <returns>A string array containing the names of all the Windows groups that the specified user is in.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 <xref:System.Web.Security.Roles> 클래스는 Windows 운영 체제에서 Windows 그룹에 지정된 된 사용자가을의 목록을 검색할 수 있습니다. <xref:System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser%2A> LOGON_USER 서버 변수에서 식별 한 대로 현재 로그온 한 사용자에 대 한 메서드를 호출할 수 있습니다. 제공 된 값의 `username` 매개 변수는 현재 로그인 한 사용자의 이름이 아닙니다.는 <xref:System.Configuration.Provider.ProviderException?displayProperty=nameWithType> throw 됩니다.  
  
 자세한 내용은 ASP.NET 및 Windows 인증에 대 한 참조 [ASP.NET 인증](http://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser%2A> 지정 된 사용자 역할의 목록을 검색 하는 메서드를 역할의 목록을 바인딩합니다는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 역할 관리를 사용할 수 있는 Web.config 파일의 예제를 보려면 <xref:System.Web.Security.WindowsTokenRoleProvider>합니다.  
  
 [!code-aspx-csharp[System.Web.Security.WindowsTokenRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.WindowsTokenRoleProvider/CS/viewrolescs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.WindowsTokenRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.WindowsTokenRoleProvider/VB/viewrolesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">The currently executing user does not have an authenticated <see cref="T:System.Security.Principal.WindowsIdentity" /> attached to <see cref="P:System.Web.UI.Page.User" />. For non-HTTP scenarios, the currently executing user does not have an authenticated <see cref="T:System.Security.Principal.WindowsIdentity" /> attached to <see cref="P:System.Threading.Thread.CurrentPrincipal" />.  -or-  <paramref name="username" /> does not match the <see cref="P:System.Security.Principal.WindowsIdentity.Name" /> of the current <see cref="T:System.Security.Principal.WindowsIdentity" />.  -or-  A failure occurred while retrieving the user's Windows group information.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.</exception>
        <exception cref="T:System.Web.HttpException">The trust level is less than <see cref="F:System.Web.AspNetHostingPermissionLevel.Low" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] GetUsersInRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetUsersInRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUsersInRole (roleName As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetUsersInRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.GetUsersInRole : string -&gt; string[]" Usage="windowsTokenRoleProvider.GetUsersInRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">The name of the role to get the list of users for.</param>
        <summary>This method is not supported by the Windows token role provider.</summary>
        <returns>None. The method is not supported by the <see cref="T:System.Web.Security.WindowsTokenRoleProvider" /> class and always throws a <see cref="T:System.Configuration.Provider.ProviderException" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">An unsupported method was called.</exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.WindowsTokenRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="windowsTokenRoleProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">The name of the <see cref="T:System.Web.Security.WindowsTokenRoleProvider" /> instance to initialize.</param>
        <param name="config">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> constructor that contains the names and values of configuration options for the <see cref="T:System.Web.Security.WindowsTokenRoleProvider" /> class.</param>
        <summary>Initializes the Windows token role provider with the property values specified in the configuration file for the ASP.NET application. This method is not intended to be used directly from your code.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.WindowsTokenRoleProvider.Initialize%2A> 메서드를 초기화 하는 <xref:System.Web.Security.WindowsTokenRoleProvider> 속성 값을 가진 클래스는 ASP.NET 응용 프로그램 구성 파일 (Web.config)에 지정 하 고 사용자 코드에서 직접 사용할 수 없습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="config" /> is <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">The <see langword="applicationName" /> attribute in the configuration is longer than 256 characters.  -or-  The application configuration file for this <see cref="T:System.Web.Security.WindowsTokenRoleProvider" /> instance contains an unrecognized attribute.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsUserInRole">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets a value indicating whether the specified user is in the specified built-in Windows role.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public bool IsUserInRole (string username, System.Security.Principal.WindowsBuiltInRole role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsUserInRole(string username, valuetype System.Security.Principal.WindowsBuiltInRole role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(System.String,System.Security.Principal.WindowsBuiltInRole)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUserInRole (username As String, role As WindowsBuiltInRole) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsUserInRole(System::String ^ username, System::Security::Principal::WindowsBuiltInRole role);" />
      <MemberSignature Language="F#" Value="override this.IsUserInRole : string * System.Security.Principal.WindowsBuiltInRole -&gt; bool" Usage="windowsTokenRoleProvider.IsUserInRole (username, role)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="role" Type="System.Security.Principal.WindowsBuiltInRole" />
      </Parameters>
      <Docs>
        <param name="username">The user name to search for in the form DOMAIN\username.</param>
        <param name="role">The Windows role to search in.</param>
        <summary>Gets a value indicating whether the specified user is in the specified built-in Windows role.</summary>
        <returns>
          <see langword="true" /> if the specified user is in the specified Windows role; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole%2A> 메서드를 사용 하면 사용자가에서 설명 하는 일반적인 Windows 역할 중 하나에 있는지 여부를 확인 하는 <xref:System.Security.Principal.WindowsBuiltInRole> 열거형입니다. 이 메서드는 여러 언어로 지역화 되는 응용 프로그램에 유용 합니다. 이 오버 로드는 <xref:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole%2A> 메서드는 없습니다의 일부가 <xref:System.Web.Security.RoleProvider> 기본 클래스 및 캐스팅 하 여 액세스할 수 있습니다는 <xref:System.Web.Security.Roles.Provider%2A> 속성의는 <xref:System.Web.Security.Roles> 으로 클래스는 <xref:System.Web.Security.WindowsTokenRoleProvider> 유형입니다.  
  
 호출할 수 있습니다는 <xref:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole%2A> 메서드는 현재 로그인 한 사용자에 대해서만 LOGON_USER 서버 변수가 명시 합니다. 제공 된 값의 `username` 매개 변수는 현재 로그인 한 사용자의 이름이 아닙니다.는 <xref:System.Web.HttpException> throw 됩니다.  
  
 <xref:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole%2A> 메서드는 LOGON_USER 서버 변수에서 식별 한 현재 로그인 한 사용자만 호출할 수 있습니다. 현재 로그온 된 사용자는 Windows 인증 된 사용자 여야 합니다. ASP.NET 및 Windows 인증에 대 한 자세한 내용은 참조 하십시오. [ASP.NET 인증](http://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 프로그래밍 방식으로 응용 프로그램에 대 한 역할 정보를 볼 수 있도록 허용 하기 전에 현재 로그인 한 사용자가 관리자 역할에 있는지 여부를 확인 합니다. 역할 관리를 사용할 수 있는 Web.config 파일의 예제를 보려면 <xref:System.Web.Security.WindowsTokenRoleProvider>합니다.  
  
 [!code-aspx-csharp[System.Web.Security.WindowsTokenRoleProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.WindowsTokenRoleProvider/CS/ViewRoles2cs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.WindowsTokenRoleProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.WindowsTokenRoleProvider/VB/ViewRoles2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">The currently executing user does not have an authenticated <see cref="T:System.Security.Principal.WindowsIdentity" /> attached to <see cref="P:System.Web.UI.Page.User" />. For non-HTTP scenarios, the currently executing user does not have an authenticated <see cref="T:System.Security.Principal.WindowsIdentity" /> attached to <see cref="P:System.Threading.Thread.CurrentPrincipal" />.  -or-  <paramref name="username" /> does not match the <see cref="P:System.Security.Principal.WindowsIdentity.Name" /> of the current <see cref="T:System.Security.Principal.WindowsIdentity" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public override bool IsUserInRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsUserInRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsUserInRole (username As String, roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsUserInRole(System::String ^ username, System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.IsUserInRole : string * string -&gt; bool" Usage="windowsTokenRoleProvider.IsUserInRole (username, roleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user name to search for in the form DOMAIN\username.</param>
        <param name="roleName">The Windows group to search in the form DOMAIN\rolename.</param>
        <summary>Gets a value indicating whether the specified user is in the specified Windows group.</summary>
        <returns>
          <see langword="true" /> if the specified user name is in the specified Windows group; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole%2A> 메서드는 <xref:System.Web.Security.Roles> 클래스 및 <xref:System.Security.Principal.IPrincipal.IsInRole%2A> 의 메서드는 <xref:System.Web.UI.Page.User%2A> 속성을 사용자가 Windows 그룹에 있는지 여부를 확인 합니다. 호출할 수 있습니다는 <xref:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole%2A> 메서드는 현재 로그인 한 사용자에 대해서만 LOGON_USER 서버 변수가 명시 합니다. 현재 로그온 한 사용자는 Windows 인증 된 사용자 여야 합니다. ASP.NET 및 Windows 인증에 대 한 자세한 내용은 참조 하십시오. [ASP.NET 인증](http://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 프로그래밍 방식으로 응용 프로그램에 대 한 역할 정보를 볼 수 있도록 허용 하기 전에 현재 로그인 한 사용자가 관리자 역할에 있는지 여부를 확인 합니다. 역할 관리를 사용할 수 있는 Web.config 파일의 예제를 보려면 <xref:System.Web.Security.WindowsTokenRoleProvider>합니다.  
  
 [!code-aspx-csharp[System.Web.Security.WindowsTokenRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.WindowsTokenRoleProvider/CS/viewrolescs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.WindowsTokenRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.WindowsTokenRoleProvider/VB/viewrolesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.  -or-  <paramref name="roleName" /> is <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">The currently executing user does not have an authenticated <see cref="T:System.Security.Principal.WindowsIdentity" /> attached to <see cref="P:System.Web.UI.Page.User" />. For non-HTTP scenarios, the currently executing user does not have an authenticated <see cref="T:System.Security.Principal.WindowsIdentity" /> attached to <see cref="P:System.Threading.Thread.CurrentPrincipal" />.  -or-  <paramref name="username" /> does not match the <see cref="P:System.Security.Principal.WindowsIdentity.Name" /> of the current <see cref="T:System.Security.Principal.WindowsIdentity" />.  -or-  A failure occurred while retrieving the user's Windows group information.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveUsersFromRoles">
      <MemberSignature Language="C#" Value="public override void RemoveUsersFromRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveUsersFromRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveUsersFromRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveUsersFromRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="override this.RemoveUsersFromRoles : string[] * string[] -&gt; unit" Usage="windowsTokenRoleProvider.RemoveUsersFromRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">A string array of user names to be added to the specified roles.</param>
        <param name="roleNames">A string array of role names to add the specified user names to.</param>
        <summary>This method is not supported by the Windows token role provider.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는에서 지원 되지 않습니다는 <xref:System.Web.Security.WindowsTokenRoleProvider> 클래스와 항상 throw 한 <xref:System.Configuration.Provider.ProviderException>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">An unsupported method was called.</exception>
      </Docs>
    </Member>
    <Member MemberName="RoleExists">
      <MemberSignature Language="C#" Value="public override bool RoleExists (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool RoleExists(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.WindowsTokenRoleProvider.RoleExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function RoleExists (roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool RoleExists(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.RoleExists : string -&gt; bool" Usage="windowsTokenRoleProvider.RoleExists roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">The name of the role to search for in the data source.</param>
        <summary>This method is not supported by the Windows token role provider.</summary>
        <returns>None. The method is not supported by the <see cref="T:System.Web.Security.WindowsTokenRoleProvider" /> class and always throws a <see cref="T:System.Configuration.Provider.ProviderException" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">An unsupported method was called.</exception>
      </Docs>
    </Member>
  </Members>
</Type>