<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="RoleProvider.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53757f1028efe51406cc012df7b30024bd71a31b6.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3757f1028efe51406cc012df7b30024bd71a31b6</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.Security.RoleProvider">
          <source>Defines the contract that ASP.NET implements to provide role-management services using custom role providers.</source>
          <target state="translated">ASP.NET에서 사용자 지정 역할 공급자를 사용하여 역할 관리 서비스를 제공하기 위해 구현하는 계약을 정의합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Security.RoleProvider">
          <source>ASP.NET role management is designed to enable you to easily use a number of different role providers for your ASP.NET applications.</source>
          <target state="translated">ASP.NET 역할 관리는 ASP.NET 응용 프로그램에 대 한 여러 가지 역할 공급자를 쉽게 사용할 수 있도록 설계 되었습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Security.RoleProvider">
          <source>You can use the supplied role providers that are included with the .NET Framework, or you can implement your own provider.</source>
          <target state="translated">.NET Framework에 포함 되어 있는 제공 된 역할 공급자를 사용 하거나 사용자 고유의 공급자를 구현할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Security.RoleProvider">
          <source>When implementing a custom role provider, you are required to inherit the <ph id="ph1">&lt;xref:System.Web.Security.RoleProvider&gt;</ph> abstract class.</source>
          <target state="translated">상속 해야 사용자 지정 역할 공급자를 구현할 때는 <ph id="ph1">&lt;xref:System.Web.Security.RoleProvider&gt;</ph> 추상 클래스입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Security.RoleProvider">
          <source>There are two primary reasons for creating a custom role provider.</source>
          <target state="translated">사용자 지정 역할 공급자를 만드는 두 가지 주요 이유가 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Security.RoleProvider">
          <source>You need to store role information in a data source that is not supported by the role providers included with the .NET Framework, such as a FoxPro database, an Oracle database, or other data sources.</source>
          <target state="translated">FoxPro 데이터베이스, Oracle 데이터베이스 또는 다른 데이터 원본과 같은.NET Framework에 포함 된 역할 공급자에서 지원 되지 않는 데이터 원본에 역할 정보를 저장 해야 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Security.RoleProvider">
          <source>You need to manage role information using a database schema that is different from the database schema used by the providers that ship with the .NET Framework.</source>
          <target state="translated">.NET Framework와 함께 제공 되는 공급자에서 사용 되는 데이터베이스 스키마와에서는 다른 데이터베이스 스키마를 사용 하 여 역할 정보를 관리 해야 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Security.RoleProvider">
          <source>A common example of this would be role data that already exists in a SQL Server database for a company or Web site.</source>
          <target state="translated">이 일반적인 예로 회사 또는 웹 사이트에 대 한 SQL Server 데이터베이스에 이미 있는 역할 데이터가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Web.Security.RoleProvider.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Security.RoleProvider" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.Security.RoleProvider" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.#ctor">
          <source>You are not required to implement a constructor for a class that inherits the <ph id="ph1">&lt;xref:System.Web.Security.RoleProvider&gt;</ph> abstract class.</source>
          <target state="translated">상속 된 클래스에 대 한 생성자를 구현 하지 않아도 됩니다는 <ph id="ph1">&lt;xref:System.Web.Security.RoleProvider&gt;</ph> 추상 클래스입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.#ctor">
          <source>Initialization values for a <ph id="ph1">&lt;xref:System.Web.Security.RoleProvider&gt;</ph> implementation are passed to the <ph id="ph2">&lt;xref:System.Configuration.Provider.ProviderBase.Initialize%2A&gt;</ph> method implementation.</source>
          <target state="translated">초기화에 대 한 값을 <ph id="ph1">&lt;xref:System.Web.Security.RoleProvider&gt;</ph> 구현에 전달 되는 <ph id="ph2">&lt;xref:System.Configuration.Provider.ProviderBase.Initialize%2A&gt;</ph> 메서드 구현 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Web.Security.RoleProvider.AddUsersToRoles(System.String[],System.String[])">
          <source>A string array of user names to be added to the specified roles.</source>
          <target state="translated">지정된 역할에 추가할 사용자 이름으로 이루어진 문자열 배열입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Web.Security.RoleProvider.AddUsersToRoles(System.String[],System.String[])">
          <source>A string array of the role names to add the specified user names to.</source>
          <target state="translated">지정된 사용자 이름을 추가할 역할 이름으로 이루어진 문자열 배열입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Web.Security.RoleProvider.AddUsersToRoles(System.String[],System.String[])">
          <source>Adds the specified user names to the specified roles for the configured <ph id="ph1">&lt;see langword="applicationName" /&gt;</ph>.</source>
          <target state="translated">구성된 <ph id="ph1">&lt;see langword="applicationName" /&gt;</ph>의 특정 역할에 지정된 사용자 이름을 추가합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.AddUsersToRoles(System.String[],System.String[])">
          <source><ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.AddUsersToRoles%2A&gt;</ph> is called by the <ph id="ph2">&lt;xref:System.Web.Security.Roles&gt;</ph> class to associate the specified users with the specified roles at the data source.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.AddUsersToRoles%2A&gt;</ph> 에 의해 호출 됩니다는 <ph id="ph2">&lt;xref:System.Web.Security.Roles&gt;</ph> 데이터 소스에서 지정 된 역할에 지정된 된 사용자를 연결할 클래스입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.AddUsersToRoles(System.String[],System.String[])">
          <source>Roles are added to the configured <ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.ApplicationName%2A&gt;</ph>.</source>
          <target state="translated">역할은 추가 구성 된에 <ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.ApplicationName%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.AddUsersToRoles(System.String[],System.String[])">
          <source>If any of the specified role names are not found for the configured <ph id="ph1">`applicationName`</ph>, we recommend that your provider throw a <ph id="ph2">&lt;xref:System.Configuration.Provider.ProviderException&gt;</ph>.</source>
          <target state="translated">구성 된 찾을 수 없습니다는 지정 된 역할 이름 중 하나가 <ph id="ph1">`applicationName`</ph>, 공급자를 throw 하는 것이 좋습니다는 <ph id="ph2">&lt;xref:System.Configuration.Provider.ProviderException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.AddUsersToRoles(System.String[],System.String[])">
          <source>If any of the specified user names are not associated with any of the specified role names for the configured <ph id="ph1">`applicationName`</ph>, we recommend that your provider throw a <ph id="ph2">&lt;xref:System.Configuration.Provider.ProviderException&gt;</ph>.</source>
          <target state="translated">구성 된 지정 된 역할 이름 중 연결 된 경우 지정 된 사용자 이름 중 하나가 <ph id="ph1">`applicationName`</ph>, 공급자를 throw 하는 것이 좋습니다는 <ph id="ph2">&lt;xref:System.Configuration.Provider.ProviderException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.AddUsersToRoles(System.String[],System.String[])">
          <source>If any of the specified user names is <ph id="ph1">`null`</ph> or is an empty string, we recommend that your provider throw an exception.</source>
          <target state="translated">지정된 된 사용자 이름 중 하나라도 <ph id="ph1">`null`</ph> 은 빈 문자열 또는 공급자 예외를 throw 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.AddUsersToRoles(System.String[],System.String[])">
          <source>If any of the specified role names is <ph id="ph1">`null`</ph> or is an empty string, we recommend that your provider throw an exception.</source>
          <target state="translated">지정된 된 역할 이름 중 하나라도 <ph id="ph1">`null`</ph> 은 빈 문자열 또는 공급자 예외를 throw 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.AddUsersToRoles(System.String[],System.String[])">
          <source>If your data source supports transactions, we recommend that you include each add operation in a transaction and that you roll back the transaction and throw an exception if any add operation fails.</source>
          <target state="translated">데이터 원본 트랜잭션을 지 원하는 경우 각각 포함 하는 것이 좋습니다 트랜잭션에서 작업을 추가 하 고 트랜잭션 및 추가 작업이 실패할 경우 예외를 throw 하는 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.AddUsersToRoles(System.String[],System.String[])">
          <source>The following code example shows a sample implementation of the <ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.AddUsersToRoles%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는의 샘플 구현을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.AddUsersToRoles%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.Web.Security.RoleProvider.ApplicationName">
          <source>Gets or sets the name of the application to store and retrieve role information for.</source>
          <target state="translated">역할 정보를 저장하거나 검색할 응용 프로그램의 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Security.RoleProvider.ApplicationName">
          <source>The name of the application to store and retrieve role information for.</source>
          <target state="translated">역할 정보를 저장하거나 검색할 응용 프로그램의 이름입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Security.RoleProvider.ApplicationName">
          <source>The <ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.ApplicationName%2A&gt;</ph> is used by the <ph id="ph2">&lt;xref:System.Web.Security.Roles&gt;</ph> class to associate users and roles with different applications.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.ApplicationName%2A&gt;</ph> 에서 사용 되는 <ph id="ph2">&lt;xref:System.Web.Security.Roles&gt;</ph> 사용자 및 역할을 서로 다른 응용 프로그램과 연결 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Security.RoleProvider.ApplicationName">
          <source>This enables multiple applications to use the same database to store user and role information without running into conflicts between duplicate user names or role names.</source>
          <target state="translated">이렇게 하면 여러 응용 프로그램이 동일한 데이터베이스를 사용 하 여 중복 된 사용자 이름이 나 역할 이름 간의 충돌을 일으키지 않고 사용자 및 역할 정보를 저장할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Security.RoleProvider.ApplicationName">
          <source>Multiple ASP.NET applications can use the same database by specifying the same value in the <ph id="ph1">&lt;xref:System.Web.Security.Roles.ApplicationName%2A&gt;</ph> property.</source>
          <target state="translated">여러 ASP.NET 응용 프로그램에서 같은 값을 지정 하 여 동일한 데이터베이스를 사용할 수는 <ph id="ph1">&lt;xref:System.Web.Security.Roles.ApplicationName%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Security.RoleProvider.ApplicationName">
          <source>The <ph id="ph1">&lt;xref:System.Web.Security.Roles.ApplicationName%2A&gt;</ph> property can be set programmatically, or it can be set declaratively in the configuration file for the Web application using the <ph id="ph2">`applicationName`</ph> attribute.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Security.Roles.ApplicationName%2A&gt;</ph> 속성을 프로그래밍 방식으로 설정할 수 있습니다. 또는 사용 하 여 웹 응용 프로그램에 대 한 구성 파일에서 선언적으로 설정할 수 있습니다는 <ph id="ph2">`applicationName`</ph> 특성입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Security.RoleProvider.ApplicationName">
          <source>If no <ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.ApplicationName%2A&gt;</ph> property is specified, we recommend that the <ph id="ph2">&lt;xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A&gt;</ph> property value be used.</source>
          <target state="translated">하지 않으면 <ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.ApplicationName%2A&gt;</ph> 속성을 지정 하는 것이 좋습니다는 <ph id="ph2">&lt;xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A&gt;</ph> 속성 값이 사용 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Security.RoleProvider.ApplicationName">
          <source>The following code example shows a sample implementation of the <ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.ApplicationName%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는의 샘플 구현을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.ApplicationName%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Web.Security.RoleProvider.CreateRole(System.String)">
          <source>The name of the role to create.</source>
          <target state="translated">만들 역할의 이름입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Web.Security.RoleProvider.CreateRole(System.String)">
          <source>Adds a new role to the data source for the configured <ph id="ph1">&lt;see langword="applicationName" /&gt;</ph>.</source>
          <target state="translated">구성된 <ph id="ph1">&lt;see langword="applicationName" /&gt;</ph>의 데이터 원본에 새 역할을 추가합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.CreateRole(System.String)">
          <source><ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.CreateRole%2A&gt;</ph> is called by the <ph id="ph2">&lt;xref:System.Web.Security.Roles.CreateRole%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Web.Security.Roles&gt;</ph> class to add the specified role to the data source for the configured <ph id="ph4">&lt;xref:System.Web.Security.RoleProvider.ApplicationName%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.CreateRole%2A&gt;</ph> 에 의해 호출 됩니다는 <ph id="ph2">&lt;xref:System.Web.Security.Roles.CreateRole%2A&gt;</ph> 의 메서드는 <ph id="ph3">&lt;xref:System.Web.Security.Roles&gt;</ph> 구성 된 데이터 원본에 지정된 된 역할을 추가 하려면 클래스 <ph id="ph4">&lt;xref:System.Web.Security.RoleProvider.ApplicationName%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.CreateRole(System.String)">
          <source>If the specified role name already exists for the configured <ph id="ph1">`applicationName`</ph>, is <ph id="ph2">`null`</ph>, or is an empty string, we recommend that your provider throw an exception.</source>
          <target state="translated">구성 된 지정된 된 역할 이름이 이미 있는 경우 <ph id="ph1">`applicationName`</ph>은 <ph id="ph2">`null`</ph>은 빈 문자열 또는 공급자 예외를 throw 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.CreateRole(System.String)">
          <source>If the specified role name contains a comma, we recommend that your provider throw an exception.</source>
          <target state="translated">지정된 된 역할 이름이 쉼표를 포함 하는 경우 공급자는 예외를 throw를 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.CreateRole(System.String)">
          <source>If your data source restricts the length of the role name, for example, through a fixed-length column of a table in a database, we recommend that you throw an exception if the role name exceeds the maximum length allowed by the data source.</source>
          <target state="translated">데이터 소스 역할 이름의 길이 제한 하는 경우 예를 들어 데이터베이스에 있는 테이블의 고정 길이 열을 통해 것이 좋습니다 역할 이름이 데이터 원본에 의해 허용 된 최대 길이 초과 하는 경우 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.CreateRole(System.String)">
          <source>The following code example shows a sample implementation of the <ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.CreateRole%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는의 샘플 구현을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.CreateRole%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Web.Security.RoleProvider.DeleteRole(System.String,System.Boolean)">
          <source>The name of the role to delete.</source>
          <target state="translated">삭제할 역할의 이름입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Web.Security.RoleProvider.DeleteRole(System.String,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, throw an exception if <bpt id="p1">&lt;c&gt;</bpt>roleName<ept id="p1">&lt;/c&gt;</ept> has one or more members and do not delete <bpt id="p2">&lt;c&gt;</bpt>roleName<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>인 경우 <bpt id="p1">&lt;c&gt;</bpt>roleName<ept id="p1">&lt;/c&gt;</ept>에 멤버가 하나 이상 있으면 예외를 throw하고 <bpt id="p2">&lt;c&gt;</bpt>roleName<ept id="p2">&lt;/c&gt;</ept>을 삭제하지 않습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Web.Security.RoleProvider.DeleteRole(System.String,System.Boolean)">
          <source>Removes a role from the data source for the configured <ph id="ph1">&lt;see langword="applicationName" /&gt;</ph>.</source>
          <target state="translated">구성된 <ph id="ph1">&lt;see langword="applicationName" /&gt;</ph>의 데이터 원본에서 역할을 제거합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Web.Security.RoleProvider.DeleteRole(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the role was successfully deleted; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">역할을 삭제했으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그러지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.DeleteRole(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.DeleteRole%2A&gt;</ph> is called by the <ph id="ph2">&lt;xref:System.Web.Security.Roles.DeleteRole%2A&gt;</ph> and the <ph id="ph3">&lt;xref:System.Web.Security.Roles.DeleteRole%2A&gt;</ph> methods of the <ph id="ph4">&lt;xref:System.Web.Security.Roles&gt;</ph> class to delete the specified role from the data source for the configured <ph id="ph5">&lt;xref:System.Web.Security.RoleProvider.ApplicationName%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.DeleteRole%2A&gt;</ph> 에 의해 호출 됩니다는 <ph id="ph2">&lt;xref:System.Web.Security.Roles.DeleteRole%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Web.Security.Roles.DeleteRole%2A&gt;</ph> 의 메서드는 <ph id="ph4">&lt;xref:System.Web.Security.Roles&gt;</ph> 구성 된 데이터 원본에서 지정된 된 역할을 삭제 하는 클래스 <ph id="ph5">&lt;xref:System.Web.Security.RoleProvider.ApplicationName%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.DeleteRole(System.String,System.Boolean)">
          <source>When you delete a role from the data source, ensure that you also delete any associations between a user name and the deleted role for the configured <ph id="ph1">`applicationName`</ph>.</source>
          <target state="translated">데이터 소스에서 역할을 삭제 하는 경우 사용자 이름 및 구성 된 삭제 된 역할 간의 연결도 삭제 하는 확인 <ph id="ph1">`applicationName`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.DeleteRole(System.String,System.Boolean)">
          <source>If <ph id="ph1">`throwOnPopulatedRole`</ph> is <ph id="ph2">`true`</ph>, and the role identified by the <ph id="ph3">`roleName`</ph> parameter has one or more members, throw a <ph id="ph4">&lt;xref:System.Configuration.Provider.ProviderException&gt;</ph> and do not delete the role.</source>
          <target state="translated">경우 <ph id="ph1">`throwOnPopulatedRole`</ph> 은 <ph id="ph2">`true`</ph>,으로 식별 된 역할는 <ph id="ph3">`roleName`</ph> 매개 변수 하나 또는 그 이상의 구성원이를 throw 한 <ph id="ph4">&lt;xref:System.Configuration.Provider.ProviderException&gt;</ph> 와 역할을 삭제 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.DeleteRole(System.String,System.Boolean)">
          <source>If <ph id="ph1">`throwOnPopulatedRole`</ph> is <ph id="ph2">`false`</ph>, then delete the role whether it is empty or not.</source>
          <target state="translated">경우 <ph id="ph1">`throwOnPopulatedRole`</ph> 은 <ph id="ph2">`false`</ph>, 여부 비어 있는지 여부를 다음 역할을 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.DeleteRole(System.String,System.Boolean)">
          <source>If the specified role name does not exist, is <ph id="ph1">`null`</ph>, or is an empty string, we recommend that your provider throw an exception.</source>
          <target state="translated">지정된 된 역할 이름이 존재 하지 않는 경우는 <ph id="ph1">`null`</ph>은 빈 문자열 또는 공급자 예외를 throw 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.DeleteRole(System.String,System.Boolean)">
          <source>The following code example shows a sample implementation of the <ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.DeleteRole%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는의 샘플 구현을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.DeleteRole%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Web.Security.RoleProvider.FindUsersInRole(System.String,System.String)">
          <source>The role to search in.</source>
          <target state="translated">검색할 역할입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Web.Security.RoleProvider.FindUsersInRole(System.String,System.String)">
          <source>The user name to search for.</source>
          <target state="translated">검색할 사용자 이름입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Web.Security.RoleProvider.FindUsersInRole(System.String,System.String)">
          <source>Gets an array of user names in a role where the user name contains the specified user name to match.</source>
          <target state="translated">지정된 사용자 이름과 일치하는 부분이 사용자 이름에 포함되어 있는 사용자 이름의 배열을 역할에서 가져옵니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Web.Security.RoleProvider.FindUsersInRole(System.String,System.String)">
          <source>A string array containing the names of all the users where the user name matches <ph id="ph1">&lt;paramref name="usernameToMatch" /&gt;</ph> and the user is a member of the specified role.</source>
          <target state="translated">지정된 역할의 멤버이면서 사용자 이름이 <ph id="ph1">&lt;paramref name="usernameToMatch" /&gt;</ph>와 일치하는 모든 사용자의 이름이 포함된 문자열 배열입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.FindUsersInRole(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.FindUsersInRole%2A&gt;</ph> method is called by the <ph id="ph2">&lt;xref:System.Web.Security.Roles&gt;</ph> class and returns a list of users in a role where the user name contains a match of the supplied <ph id="ph3">`usernameToMatch`</ph> for the configured <ph id="ph4">`applicationName`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.FindUsersInRole%2A&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.Web.Security.Roles&gt;</ph> 클래스 및 사용자 이름이 제공 된 일치 하는 항목에 포함 된 역할에 사용자의 목록을 반환 <ph id="ph3">`usernameToMatch`</ph> 구성 된 <ph id="ph4">`applicationName`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.FindUsersInRole(System.String,System.String)">
          <source>Wildcard support is included based on the data source.</source>
          <target state="translated">와일드 카드를 지원 데이터 원본에 따라 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.FindUsersInRole(System.String,System.String)">
          <source>Users are returned in alphabetical order by user name.</source>
          <target state="translated">사용자는 사용자 이름으로 알파벳 순서로 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.FindUsersInRole(System.String,System.String)">
          <source>We recommend that you throw a <ph id="ph1">&lt;xref:System.Configuration.Provider.ProviderException&gt;</ph> if <ph id="ph2">`roleName`</ph> does not exist in the data source.</source>
          <target state="translated">throw 하는 것이 좋습니다는 <ph id="ph1">&lt;xref:System.Configuration.Provider.ProviderException&gt;</ph> 경우 <ph id="ph2">`roleName`</ph> 데이터 원본에 존재 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.FindUsersInRole(System.String,System.String)">
          <source>The following code example shows a sample <ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.FindUsersInRole%2A&gt;</ph> implementation.</source>
          <target state="translated">다음 코드 예제에서는 예제를 보여 줍니다. <ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.FindUsersInRole%2A&gt;</ph> 구현 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Web.Security.RoleProvider.GetAllRoles">
          <source>Gets a list of all the roles for the configured <ph id="ph1">&lt;see langword="applicationName" /&gt;</ph>.</source>
          <target state="translated">구성된 <ph id="ph1">&lt;see langword="applicationName" /&gt;</ph>의 모든 역할 목록을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Web.Security.RoleProvider.GetAllRoles">
          <source>A string array containing the names of all the roles stored in the data source for the configured <ph id="ph1">&lt;see langword="applicationName" /&gt;</ph>.</source>
          <target state="translated">구성된 <ph id="ph1">&lt;see langword="applicationName" /&gt;</ph>의 데이터 소스에 저장된 응용 프로그램의 모든 역할 이름이 포함된 문자열 배열입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.GetAllRoles">
          <source><ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.GetAllRoles%2A&gt;</ph> is called by the <ph id="ph2">&lt;xref:System.Web.Security.Roles.GetAllRoles%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Web.Security.Roles&gt;</ph> class to retrieve a list of role names from the data source.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.GetAllRoles%2A&gt;</ph> 에 의해 호출 됩니다는 <ph id="ph2">&lt;xref:System.Web.Security.Roles.GetAllRoles%2A&gt;</ph> 의 메서드는 <ph id="ph3">&lt;xref:System.Web.Security.Roles&gt;</ph> 역할 이름 목록을 데이터 원본에서 검색할 클래스입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.GetAllRoles">
          <source>Only the roles for the specified <ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.ApplicationName%2A&gt;</ph> are retrieved.</source>
          <target state="translated">지정 된 역할에 대해서만 <ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.ApplicationName%2A&gt;</ph> 검색 됩니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.GetAllRoles">
          <source>If no roles exist for the configured <ph id="ph1">`applicationName`</ph>, we recommend that your provider return a string array with no elements.</source>
          <target state="translated">구성 된 역할이 없으면 <ph id="ph1">`applicationName`</ph>, 공급자에 요소가 없는 문자열 배열을 반환 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.GetAllRoles">
          <source>The following code example shows a sample implementation of the <ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.GetAllRoles%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는의 샘플 구현을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.GetAllRoles%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Web.Security.RoleProvider.GetRolesForUser(System.String)">
          <source>The user to return a list of roles for.</source>
          <target state="translated">역할 목록을 반환할 사용자입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Web.Security.RoleProvider.GetRolesForUser(System.String)">
          <source>Gets a list of the roles that a specified user is in for the configured <ph id="ph1">&lt;see langword="applicationName" /&gt;</ph>.</source>
          <target state="translated">지정된 사용자가 속하는 구성된 <ph id="ph1">&lt;see langword="applicationName" /&gt;</ph>의 역할 목록을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Web.Security.RoleProvider.GetRolesForUser(System.String)">
          <source>A string array containing the names of all the roles that the specified user is in for the configured <ph id="ph1">&lt;see langword="applicationName" /&gt;</ph>.</source>
          <target state="translated">지정된 사용자가 속하는 구성된 <ph id="ph1">&lt;see langword="applicationName" /&gt;</ph>의 모든 역할 이름이 포함된 문자열 배열입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.GetRolesForUser(System.String)">
          <source><ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.GetRolesForUser%2A&gt;</ph> is called by the <ph id="ph2">&lt;xref:System.Web.Security.Roles.GetRolesForUser%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Web.Security.Roles&gt;</ph> class to retrieve the role names that the specified user is associated with from the data source.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.GetRolesForUser%2A&gt;</ph> 에 의해 호출 됩니다는 <ph id="ph2">&lt;xref:System.Web.Security.Roles.GetRolesForUser%2A&gt;</ph> 의 메서드는 <ph id="ph3">&lt;xref:System.Web.Security.Roles&gt;</ph> 클래스를 데이터 소스에서 지정된 된 사용자가 연관 된 역할 이름을 검색 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.GetRolesForUser(System.String)">
          <source>Only the roles for the configured <ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.ApplicationName%2A&gt;</ph> are retrieved.</source>
          <target state="translated">구성 된 역할에 대해서만 <ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.ApplicationName%2A&gt;</ph> 검색 됩니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.GetRolesForUser(System.String)">
          <source>If no roles exist for the specified user for the configured <ph id="ph1">`applicationName`</ph>, we recommend that your provider return a string array with no elements.</source>
          <target state="translated">구성 된 지정 된 사용자 역할이 없으면 <ph id="ph1">`applicationName`</ph>, 공급자에 요소가 없는 문자열 배열을 반환 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.GetRolesForUser(System.String)">
          <source>If the specified user name is <ph id="ph1">`null`</ph> or is an empty string, we recommend that your provider throw an exception.</source>
          <target state="translated">지정한 사용자 이름이 <ph id="ph1">`null`</ph> 은 빈 문자열 또는 공급자 예외를 throw 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.GetRolesForUser(System.String)">
          <source>The following code example shows a sample implementation of the <ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.GetRolesForUser%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는의 샘플 구현을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.GetRolesForUser%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Web.Security.RoleProvider.GetUsersInRole(System.String)">
          <source>The name of the role to get the list of users for.</source>
          <target state="translated">사용자 목록을 가져올 역할의 이름입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Web.Security.RoleProvider.GetUsersInRole(System.String)">
          <source>Gets a list of users in the specified role for the configured <ph id="ph1">&lt;see langword="applicationName" /&gt;</ph>.</source>
          <target state="translated">구성된 <ph id="ph1">&lt;see langword="applicationName" /&gt;</ph>의 지정된 역할에 있는 사용자 목록을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Web.Security.RoleProvider.GetUsersInRole(System.String)">
          <source>A string array containing the names of all the users who are members of the specified role for the configured <ph id="ph1">&lt;see langword="applicationName" /&gt;</ph>.</source>
          <target state="translated">구성된 <ph id="ph1">&lt;see langword="applicationName" /&gt;</ph>의 지정된 역할 멤버에 해당하는 모든 사용자의 이름이 포함된 문자열 배열입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.GetUsersInRole(System.String)">
          <source><ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.GetUsersInRole%2A&gt;</ph> is called by the <ph id="ph2">&lt;xref:System.Web.Security.Roles.GetUsersInRole%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Web.Security.Roles&gt;</ph> class to retrieve the user names associated with a role from the data source.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.GetUsersInRole%2A&gt;</ph> 에 의해 호출 됩니다는 <ph id="ph2">&lt;xref:System.Web.Security.Roles.GetUsersInRole%2A&gt;</ph> 의 메서드는 <ph id="ph3">&lt;xref:System.Web.Security.Roles&gt;</ph> 클래스를 데이터 소스에서 역할에 연결 된 사용자 이름을 검색 합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.GetUsersInRole(System.String)">
          <source>Only the roles for the configured <ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.ApplicationName%2A&gt;</ph> are retrieved.</source>
          <target state="translated">구성 된 역할에 대해서만 <ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.ApplicationName%2A&gt;</ph> 검색 됩니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.GetUsersInRole(System.String)">
          <source>If the specified role name does not exist for the configured <ph id="ph1">`applicationName`</ph> or if it is <ph id="ph2">`null`</ph> or an empty string, we recommend that your provider throw an exception.</source>
          <target state="translated">지정된 된 역할 이름이 구성 된 존재 하지 않는 경우 <ph id="ph1">`applicationName`</ph> 경우 <ph id="ph2">`null`</ph> 또는 빈 문자열이 면 좋습니다 공급자 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.GetUsersInRole(System.String)">
          <source>If no users are associated with the specified role for the configured <ph id="ph1">`applicationName`</ph>, we recommend that your provider return a string array with no elements.</source>
          <target state="translated">사용자가 구성 된 지정 된 역할에 연결 된 경우 <ph id="ph1">`applicationName`</ph>, 공급자에 요소가 없는 문자열 배열을 반환 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.GetUsersInRole(System.String)">
          <source>The following code example shows a sample implementation of the <ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.GetUsersInRole%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는의 샘플 구현을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.GetUsersInRole%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Web.Security.RoleProvider.IsUserInRole(System.String,System.String)">
          <source>The user name to search for.</source>
          <target state="translated">검색할 사용자 이름입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Web.Security.RoleProvider.IsUserInRole(System.String,System.String)">
          <source>The role to search in.</source>
          <target state="translated">검색할 역할입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Web.Security.RoleProvider.IsUserInRole(System.String,System.String)">
          <source>Gets a value indicating whether the specified user is in the specified role for the configured <ph id="ph1">&lt;see langword="applicationName" /&gt;</ph>.</source>
          <target state="translated">구성된 <ph id="ph1">&lt;see langword="applicationName" /&gt;</ph>의 특정 역할에 지정된 사용자가 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Web.Security.RoleProvider.IsUserInRole(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified user is in the specified role for the configured <ph id="ph2">&lt;see langword="applicationName" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">구성된 <ph id="ph1">&lt;see langword="true" /&gt;</ph>의 특정 역할에 지정된 사용자가 있으면 <ph id="ph2">&lt;see langword="applicationName" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.IsUserInRole(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.IsUserInRole%2A&gt;</ph> method is called by the <ph id="ph2">&lt;xref:System.Web.Security.Roles.IsUserInRole%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Web.Security.Roles&gt;</ph> class to determine whether the current logged-on user is associated with a role from the data source for the configured <ph id="ph4">&lt;xref:System.Web.Security.Roles.ApplicationName%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.IsUserInRole%2A&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.Web.Security.Roles.IsUserInRole%2A&gt;</ph> 의 메서드는 <ph id="ph3">&lt;xref:System.Web.Security.Roles&gt;</ph> 구성 된 데이터 원본에서 역할에 연결 된 현재 로그온 한 사용자 인지 확인 하는 클래스 <ph id="ph4">&lt;xref:System.Web.Security.Roles.ApplicationName%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.IsUserInRole(System.String,System.String)">
          <source>If the specified user name is <ph id="ph1">`null`</ph> or is an empty string, we recommend that your provider throw an exception.</source>
          <target state="translated">지정한 사용자 이름이 <ph id="ph1">`null`</ph> 은 빈 문자열 또는 공급자 예외를 throw 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.IsUserInRole(System.String,System.String)">
          <source>If the specified role name is <ph id="ph1">`null`</ph> or is an empty string, we recommend that your provider throw an exception.</source>
          <target state="translated">지정 된 역할 이름이 <ph id="ph1">`null`</ph> 은 빈 문자열 또는 공급자 예외를 throw 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.IsUserInRole(System.String,System.String)">
          <source>The following code example shows a sample implementation of the <ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.IsUserInRole%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는의 샘플 구현을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.IsUserInRole%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Web.Security.RoleProvider.RemoveUsersFromRoles(System.String[],System.String[])">
          <source>A string array of user names to be removed from the specified roles.</source>
          <target state="translated">지정된 역할에서 제거할 사용자 이름으로 이루어진 문자열 배열입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Web.Security.RoleProvider.RemoveUsersFromRoles(System.String[],System.String[])">
          <source>A string array of role names to remove the specified user names from.</source>
          <target state="translated">지정된 사용자 이름을 제거할 역할 이름으로 이루어진 문자열 배열입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Web.Security.RoleProvider.RemoveUsersFromRoles(System.String[],System.String[])">
          <source>Removes the specified user names from the specified roles for the configured <ph id="ph1">&lt;see langword="applicationName" /&gt;</ph>.</source>
          <target state="translated">구성된 <ph id="ph1">&lt;see langword="applicationName" /&gt;</ph>의 특정 역할에서 지정된 사용자 이름을 제거합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.RemoveUsersFromRoles(System.String[],System.String[])">
          <source><ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.RemoveUsersFromRoles%2A&gt;</ph> is called by <ph id="ph2">&lt;xref:System.Web.Security.Roles.RemoveUserFromRole%2A&gt;</ph> , <ph id="ph3">&lt;xref:System.Web.Security.Roles.RemoveUsersFromRole%2A&gt;</ph> , <ph id="ph4">&lt;xref:System.Web.Security.Roles.RemoveUserFromRoles%2A&gt;</ph> , and <ph id="ph5">&lt;xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A&gt;</ph> methods of the <ph id="ph6">&lt;xref:System.Web.Security.Roles&gt;</ph> class to remove the specified users from the specified roles at the data source.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.RemoveUsersFromRoles%2A&gt;</ph> 호출한 <ph id="ph2">&lt;xref:System.Web.Security.Roles.RemoveUserFromRole%2A&gt;</ph> , <ph id="ph3">&lt;xref:System.Web.Security.Roles.RemoveUsersFromRole%2A&gt;</ph> , <ph id="ph4">&lt;xref:System.Web.Security.Roles.RemoveUserFromRoles%2A&gt;</ph> , 및 <ph id="ph5">&lt;xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A&gt;</ph> 의 메서드는 <ph id="ph6">&lt;xref:System.Web.Security.Roles&gt;</ph> 데이터 소스에서 지정된 된 역할에서 지정된 된 사용자를 제거 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.RemoveUsersFromRoles(System.String[],System.String[])">
          <source>Only roles for the configured <ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.ApplicationName%2A&gt;</ph> are modified.</source>
          <target state="translated">구성 된 역할에 대해서만 <ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.ApplicationName%2A&gt;</ph> 수정 됩니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.RemoveUsersFromRoles(System.String[],System.String[])">
          <source>If any of the specified role names are not found for the configured <ph id="ph1">`applicationName`</ph>, we recommend that your provider throw a <ph id="ph2">&lt;xref:System.Configuration.Provider.ProviderException&gt;</ph>.</source>
          <target state="translated">구성 된 찾을 수 없습니다는 지정 된 역할 이름 중 하나가 <ph id="ph1">`applicationName`</ph>, 공급자를 throw 하는 것이 좋습니다는 <ph id="ph2">&lt;xref:System.Configuration.Provider.ProviderException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.RemoveUsersFromRoles(System.String[],System.String[])">
          <source>If any of the specified user names are not associated with any of the specified role names for the configured <ph id="ph1">`applicationName`</ph>, we recommend that your provider throw a <ph id="ph2">&lt;xref:System.Configuration.Provider.ProviderException&gt;</ph>.</source>
          <target state="translated">구성 된 지정 된 역할 이름 중 연결 된 경우 지정 된 사용자 이름 중 하나가 <ph id="ph1">`applicationName`</ph>, 공급자를 throw 하는 것이 좋습니다는 <ph id="ph2">&lt;xref:System.Configuration.Provider.ProviderException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.RemoveUsersFromRoles(System.String[],System.String[])">
          <source>If any of the specified user names is <ph id="ph1">`null`</ph> or is an empty string, we recommend that your provider throw an exception.</source>
          <target state="translated">지정된 된 사용자 이름 중 하나라도 <ph id="ph1">`null`</ph> 은 빈 문자열 또는 공급자 예외를 throw 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.RemoveUsersFromRoles(System.String[],System.String[])">
          <source>If any of the specified role names is <ph id="ph1">`null`</ph> or is an empty string, we recommend that your provider throw an exception.</source>
          <target state="translated">지정된 된 역할 이름 중 하나라도 <ph id="ph1">`null`</ph> 은 빈 문자열 또는 공급자 예외를 throw 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.RemoveUsersFromRoles(System.String[],System.String[])">
          <source>If your data source supports transactions, we recommend that you include each remove operation in a transaction and that you roll back the transaction and throw an exception if any remove operation fails.</source>
          <target state="translated">데이터 원본에서 트랜잭션을 지원 트랜잭션에서 각 제거 작업을 포함 하 고 트랜잭션을 제거 작업이 실패할 경우 예외를 throw 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.RemoveUsersFromRoles(System.String[],System.String[])">
          <source>The following code example shows a sample implementation of the <ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.RemoveUsersFromRoles%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는의 샘플 구현을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.RemoveUsersFromRoles%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Web.Security.RoleProvider.RoleExists(System.String)">
          <source>The name of the role to search for in the data source.</source>
          <target state="translated">데이터 원본에서 검색할 역할의 이름입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Web.Security.RoleProvider.RoleExists(System.String)">
          <source>Gets a value indicating whether the specified role name already exists in the role data source for the configured <ph id="ph1">&lt;see langword="applicationName" /&gt;</ph>.</source>
          <target state="translated">구성된 <ph id="ph1">&lt;see langword="applicationName" /&gt;</ph>의 역할 데이터 소스에 지정된 역할 이름이 이미 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Web.Security.RoleProvider.RoleExists(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the role name already exists in the data source for the configured <ph id="ph2">&lt;see langword="applicationName" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">역할 이름이 구성된 <ph id="ph1">&lt;see langword="true" /&gt;</ph>의 데이터 소스에 이미 있으면 <ph id="ph2">&lt;see langword="applicationName" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.RoleExists(System.String)">
          <source><ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.RoleExists%2A&gt;</ph> is called by the <ph id="ph2">&lt;xref:System.Web.Security.Roles.RoleExists%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Web.Security.Roles&gt;</ph> class to determine whether a role name exists in the data source for the configured <ph id="ph4">&lt;xref:System.Web.Security.Roles.ApplicationName%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.RoleExists%2A&gt;</ph> 에 의해 호출 됩니다는 <ph id="ph2">&lt;xref:System.Web.Security.Roles.RoleExists%2A&gt;</ph> 의 메서드는 <ph id="ph3">&lt;xref:System.Web.Security.Roles&gt;</ph> 역할 이름이 구성 된 데이터 원본에 존재 하는지 확인 하려면 클래스 <ph id="ph4">&lt;xref:System.Web.Security.Roles.ApplicationName%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.RoleExists(System.String)">
          <source>If the specified role name is <ph id="ph1">`null`</ph> or is an empty string, we recommend that your provider throw an exception.</source>
          <target state="translated">지정 된 역할 이름이 <ph id="ph1">`null`</ph> 은 빈 문자열 또는 공급자 예외를 throw 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Security.RoleProvider.RoleExists(System.String)">
          <source>The following code example shows a sample implementation of the <ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.RoleExists%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는의 샘플 구현을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.Security.RoleProvider.RoleExists%2A&gt;</ph> 메서드.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>