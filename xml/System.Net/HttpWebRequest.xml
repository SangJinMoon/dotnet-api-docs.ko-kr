<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HttpWebRequest.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5107dd71aca3fb085e401b8ae985050aee401ff05.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">107dd71aca3fb085e401b8ae985050aee401ff05</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.HttpWebRequest">
          <source>Provides an HTTP-specific implementation of the <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> 클래스의 HTTP 관련 구현을 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> class provides support for the properties and methods defined in <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> and for additional properties and methods that enable the user to interact directly with servers using HTTP.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 에 정의 된 메서드 및 속성에 대 한 클래스는 지원 <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> 및 추가 속성 및 HTTP를 사용 하 여 서버와 직접 상호 작용할 수 있도록 하는 방법에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Do not use the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">사용 하지 않는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.%23ctor%2A&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType&gt;</ph> method to initialize new <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> objects.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType&gt;</ph> 새로운 초기화 하려면 메서드 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>If the scheme for the Uniform Resource Identifier (URI) is <ph id="ph1">`http://`</ph> or <ph id="ph2">`https://`</ph>, <ph id="ph3">&lt;xref:System.Net.WebRequest.Create%2A&gt;</ph> returns an <ph id="ph4">&lt;xref:System.Net.HttpWebRequest&gt;</ph> object.</source>
          <target state="translated">에 식별자 URI (Uniform Resource) 구성표는 경우 <ph id="ph1">`http://`</ph> 또는 <ph id="ph2">`https://`</ph>, <ph id="ph3">&lt;xref:System.Net.WebRequest.Create%2A&gt;</ph> 반환는 <ph id="ph4">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph> method makes a synchronous request to the resource specified in the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.RequestUri%2A&gt;</ph> property and returns an <ph id="ph3">&lt;xref:System.Net.HttpWebResponse&gt;</ph> that contains the response object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph> 메서드에 지정 된 리소스 동기 요청 하는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.RequestUri%2A&gt;</ph> 속성과 반환은 <ph id="ph3">&lt;xref:System.Net.HttpWebResponse&gt;</ph> 응답 개체를 포함 하 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>The response data can be received by using the stream returned by <ph id="ph1">&lt;xref:System.Net.HttpWebResponse.GetResponseStream%2A&gt;</ph>.</source>
          <target state="translated">반환 된 스트림을 사용 하 여 응답 데이터를 받을 수 <ph id="ph1">&lt;xref:System.Net.HttpWebResponse.GetResponseStream%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>If the response object or the response stream is closed, remaining data will be forfeited.</source>
          <target state="translated">응답 개체 또는 응답 스트림에 닫혀 있는 경우 데이터 남은 몰수 됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>The remaining data will be drained and the socket will be re-used for subsequent requests when closing the response object or stream if the following conditions hold: it's a keep-alive or pipelined request, only a small amount of data needs to be received, or the remaining data is received in a small time interval.</source>
          <target state="translated">나머지 데이터는 비워지기 및 다음과 잡지 응답 개체 또는 스트림을 닫을 때 소켓 후속 요청에 다시 사용 됩니다: keep-alive 또는 파이프라인 요청, 적은 양의 데이터를 받을 수 해야 합니다. 또는 작은 시간 간격에서 남아 있는 데이터를 수신 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>If none of the mentioned conditions hold or the drain time is exceeded, the socket will be closed.</source>
          <target state="translated">언급 한 조건이 하나도 없는 보유 하거나 드레이닝 시간 임계값을 초과 하는 경우 소켓을 닫습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>For keep-alive or pipelined connections, we strongly recommend that the application reads the streams until EOF.</source>
          <target state="translated">연결 유지 또는 파이프라인 된 연결에 대 한 응용 프로그램 EOF까지 스트림을 읽는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>This ensures that the socket will be re-used for subsequent requests resulting in better performance and less resources used.</source>
          <target state="translated">이렇게 하면 소켓 덜 사용 되는 리소스 및 성능이 향상으로 인해 발생 하는 후속 요청에 다시 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>When you want to send data to the resource, the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> object to use to send data.</source>
          <target state="translated">리소스에 데이터를 전송 하려는 경우는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> 메서드가 반환 되는 <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> 데이터를 보내는 데 사용할 개체입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.EndGetRequestStream%2A&gt;</ph> methods provide asynchronous access to the send data stream.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.EndGetRequestStream%2A&gt;</ph> 메서드 송신 데이터 스트림에 대 한 비동기 액세스를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>For client authentication with <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>, the client certificate must be installed in the My certificate store of the current user.</source>
          <target state="translated">사용한 클라이언트 인증에 대 한 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>, 클라이언트 인증서를 설치 해야는 현재 사용자의 개인 인증서 저장소입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> class throws a <ph id="ph2">&lt;xref:System.Net.WebException&gt;</ph> when errors occur while accessing a resource.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> throw 클래스는 <ph id="ph2">&lt;xref:System.Net.WebException&gt;</ph> 리소스에 액세스 하는 동안 오류가 발생 한 경우.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebException.Status%2A?displayProperty=nameWithType&gt;</ph> property contains a <ph id="ph2">&lt;xref:System.Net.WebExceptionStatus&gt;</ph> value that indicates the source of the error.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebException.Status%2A?displayProperty=nameWithType&gt;</ph> 속성을 포함 한 <ph id="ph2">&lt;xref:System.Net.WebExceptionStatus&gt;</ph> 오류의 출처를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>When <ph id="ph1">&lt;xref:System.Net.WebException.Status%2A?displayProperty=nameWithType&gt;</ph> is <ph id="ph2">&lt;xref:System.Net.WebExceptionStatus.ProtocolError?displayProperty=nameWithType&gt;</ph>, the <ph id="ph3">&lt;xref:System.Net.WebException.Response%2A&gt;</ph> property contains the <ph id="ph4">&lt;xref:System.Net.HttpWebResponse&gt;</ph> received from the resource.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Net.WebException.Status%2A?displayProperty=nameWithType&gt;</ph> 은 <ph id="ph2">&lt;xref:System.Net.WebExceptionStatus.ProtocolError?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.WebException.Response%2A&gt;</ph> 속성에 포함 된 <ph id="ph4">&lt;xref:System.Net.HttpWebResponse&gt;</ph> 는 리소스에서 받은 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source><ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> exposes common HTTP header values sent to the Internet resource as properties, set by methods, or set by the system; the following table contains a complete list.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 메서드를 설정 하거나; 시스템에서 설정한 속성으로 인터넷 리소스에 보낸, 일반적인 HTTP 헤더 값을 노출 합니다. 다음 표에서 전체 목록을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>You can set other headers in the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Headers%2A&gt;</ph> property as name/value pairs.</source>
          <target state="translated">다른 헤더를 설정할 수는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Headers%2A&gt;</ph> 속성 이름/값 쌍으로 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Note that servers and caches may change or add headers during the request.</source>
          <target state="translated">서버와 캐시가 변경 될 수 있습니다 또는 헤더를 요청 하는 동안 추가 참고 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>The following table lists the HTTP headers that are set either by properties or methods or the system.</source>
          <target state="translated">다음 표에서 속성, 메서드 또는 시스템에 의해 설정 된 HTTP 헤더를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Header</source>
          <target state="translated">Header</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Set by</source>
          <target state="translated">으로 설정</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Accept</source>
          <target state="translated">허용</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Accept%2A&gt;</ph> property.</source>
          <target state="translated">설정한는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Accept%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Connection</source>
          <target state="translated">연결</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Connection%2A&gt;</ph> property, <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.KeepAlive%2A&gt;</ph> property.</source>
          <target state="translated">설정한는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Connection%2A&gt;</ph> 속성 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.KeepAlive%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Content-Length</source>
          <target state="translated">콘텐츠 길이</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> property.</source>
          <target state="translated">설정한는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Content-Type</source>
          <target state="translated">Content-Type</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentType%2A&gt;</ph> property.</source>
          <target state="translated">설정한는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentType%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Expect</source>
          <target state="translated">예상</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Expect%2A&gt;</ph> property.</source>
          <target state="translated">설정한는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Expect%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Date</source>
          <target state="translated">날짜</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Set by the system to current date.</source>
          <target state="translated">현재 날짜를 시스템으로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Host</source>
          <target state="translated">호스트</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Set by the system to current host information.</source>
          <target state="translated">현재 호스트 정보를 시스템으로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>If-Modified-Since</source>
          <target state="translated">If-수정-이후</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.IfModifiedSince%2A&gt;</ph> property.</source>
          <target state="translated">설정한는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.IfModifiedSince%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Range</source>
          <target state="translated">범위</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AddRange%2A&gt;</ph> method.</source>
          <target state="translated">으로 설정 된 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AddRange%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Referer</source>
          <target state="translated">참조 페이지</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Referer%2A&gt;</ph> property.</source>
          <target state="translated">설정한는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Referer%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Transfer-Encoding</source>
          <target state="translated">Transfer-Encoding</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.TransferEncoding%2A&gt;</ph> property (the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph> property must be <ph id="ph3">`true`</ph>).</source>
          <target state="translated">설정한는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.TransferEncoding%2A&gt;</ph> 속성 (의 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph> 속성 이어야 <ph id="ph3">`true`</ph>).</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>User-Agent</source>
          <target state="translated">사용자 에이전트</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.UserAgent%2A&gt;</ph> property.</source>
          <target state="translated">설정한는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.UserAgent%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source><ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> is registered automatically.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 자동으로 등록 됩니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>You do not need to call the <ph id="ph1">&lt;xref:System.Net.WebRequest.RegisterPrefix%2A&gt;</ph> method to register <ph id="ph2">&lt;xref:System.Net.HttpWebRequest?displayProperty=nameWithType&gt;</ph> before using URIs beginning with <ph id="ph3">`http://`</ph> or <ph id="ph4">`https://`</ph>.</source>
          <target state="translated">호출할 필요가 없습니다는 <ph id="ph1">&lt;xref:System.Net.WebRequest.RegisterPrefix%2A&gt;</ph> 등록 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest?displayProperty=nameWithType&gt;</ph> Uri를 사용 하기 전에 부터는 <ph id="ph3">`http://`</ph> 또는 <ph id="ph4">`https://`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>The local computer or application config file may specify that a default proxy be used.</source>
          <target state="translated">로컬 컴퓨터 또는 응용 프로그램 구성 파일에서 기본 프록시 사용할 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>If the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Proxy%2A&gt;</ph> property is specified, then the proxy settings from the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.Proxy%2A&gt;</ph> property override the local computer or application config file and the <ph id="ph3">&lt;xref:System.Net.HttpWebRequest&gt;</ph> instance will use the proxy settings specified.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Proxy%2A&gt;</ph> 속성이 지정 된 프록시 설정에서는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.Proxy%2A&gt;</ph> 로컬 컴퓨터 또는 응용 프로그램 구성 파일을 재정의 하는 속성 및 <ph id="ph3">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 인스턴스에서 지정 된 프록시 설정을 사용 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>If no proxy is specified in a config file and the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Proxy%2A&gt;</ph> property is unspecified, the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> class uses the proxy settings inherited from Internet Explorer on the local computer.</source>
          <target state="translated">구성 파일에 없는 프록시를 지정 하는 경우 및 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Proxy%2A&gt;</ph> 속성이 지정 되어 있지는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 클래스에서에서 상속 되며, Internet Explorer 로컬 컴퓨터에 프록시 설정을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>If there are no proxy settings in Internet Explorer, the request is sent directly to the server.</source>
          <target state="translated">Internet Explorer의 프록시 설정이 없는 경우에 서버에 직접 요청이 보내집니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> class parses a proxy bypass list with wildcard characters inherited from Internet Explorer differently than the bypass list is parsed directly by Internet Explorer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 클래스에서에서 상속 되며, Internet Explorer 다르게 무시 목록은 Internet Explorer에서 직접 구문 분석 하는 보다 와일드 카드 문자를 사용한 프록시 바이패스 목록이 구문 분석 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>For example, the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> class will parse a bypass list of "nt*" from Internet Explorer as a regular expression of "nt.$".</source>
          <target state="translated">예를 들어는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 클래스는 ह ु ण फ 바이패스 목록이 "nt *" Internet Explorer에서 정규식의 "nt. $"입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>This differs from the native behavior of Internet Explorer.</source>
          <target state="translated">이 기본 동작의 Internet Explorer에서 다릅니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>So a URL of "<ph id="ph1">`http://intxxxxx`</ph>" would bypass the proxy using the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> class, but would not bypass the proxy using Internet Explorer.</source>
          <target state="translated">따라서의 URL "<ph id="ph1">`http://intxxxxx`</ph>"를 사용 하 여 프록시를 무시는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 클래스 같지만 Internet Explorer를 사용 하 여 프록시를 무시 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible.</source>
          <target state="translated">프레임 워크 만들어질 때 SSL 세션을 캐시 하 고 가능한 경우 새 요청에 대 한 캐시 된 세션을 사용 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>When attempting to reuse an SSL session, the Framework uses the first element of <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ClientCertificates%2A&gt;</ph> (if there is one), or tries to reuse an anonymous sessions if <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.ClientCertificates%2A&gt;</ph> is empty.</source>
          <target state="translated">프레임 워크의 첫 번째 요소를 사용 하 여 SSL 세션을 다시 사용을 시도할 때 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ClientCertificates%2A&gt;</ph> (있는지 하나), 하는 경우 익명 세션을 다시 사용 하려고 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.ClientCertificates%2A&gt;</ph> 비어 있습니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>For security reasons, cookies are disabled by default.</source>
          <target state="translated">쿠키는 보안상의 이유로 기본적으로 비활성화 됩니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>If you want to use cookies, use the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.CookieContainer%2A&gt;</ph> property to enable cookies.</source>
          <target state="translated">사용 하 여 쿠키를 사용 하려는 경우는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.CookieContainer%2A&gt;</ph> 속성을 사용 하는 쿠키입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>The .NET Framework 4.6 includes a new security feature that blocks insecure cipher and hashing algorithms for connections.</source>
          <target state="translated">.NET Framework 4.6에는 안전 하지 않은 암호화 및 해시 알고리즘에 대 한 연결을 차단 하는 새로운 보안 기능이 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Applications using TLS/SSL through APIs such as HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, etc. and targeting .NET Framework 4.6 get the more-secure behavior by default.</source>
          <target state="translated">.NET Framework 4.6을 대상으로 지정 및 HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream 등의 Api 통해 TLS/SSL을 사용 하 여 응용 프로그램 기본적으로 보안 수준이 높은 동작을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Developers may want to opt out of this behavior in order to maintain interoperability with their existing SSL3 services OR TLS w/ RC4 services.</source>
          <target state="translated">개발자가 RC4 서비스를 지 원하는 기존 SSL3 서비스 또는 TLS와의 상호 운용성을 유지 하기 위해이 동작을 취소 하려고 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source><bpt id="p1">[</bpt>This article<ept id="p1">](https://support.microsoft.com/kb/3069494)</ept> explains how to modify your code so that the new behavior is disabled.</source>
          <target state="translated"><bpt id="p1">[</bpt>이 문서<ept id="p1">](https://support.microsoft.com/kb/3069494)</ept> 를 새 동작을 사용할 수 없습니다. 코드를 수정 하는 방법에 설명 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>The following code example creates an <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> for the URI <ph id="ph2">http://www.contoso.com/</ph>.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> uri <ph id="ph2">http://www.contoso.com/</ph>합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>to access the requested URI or any URI that the request is redirected to.</source>
          <target state="translated">요청된 된 URI 또는 URI에는 요청을 리디렉션합니다 액세스 하려면.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Net.NetworkAccess.Connect" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Net.NetworkAccess.Connect" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="T:System.Net.HttpWebRequest">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.HttpWebRequest" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.HttpWebRequest" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.HttpWebRequest" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.HttpWebRequest" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object that contains the information required to serialize the new <ph id="ph2">&lt;see cref="T:System.Net.HttpWebRequest" /&gt;</ph> object.</source>
          <target state="translated">새 <ph id="ph2">&lt;see cref="T:System.Net.HttpWebRequest" /&gt;</ph> 개체를 serialize하는 데 필요한 정보가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> object that contains the source and destination of the serialized stream associated with the new <ph id="ph2">&lt;see cref="T:System.Net.HttpWebRequest" /&gt;</ph> object.</source>
          <target state="translated">새 <ph id="ph2">&lt;see cref="T:System.Net.HttpWebRequest" /&gt;</ph> 개체와 관련되어 있는 serialize된 스트림의 소스 및 대상이 들어 있는 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.HttpWebRequest" /&gt;</ph> class from the specified instances of the <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> classes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.HttpWebRequest" /&gt;</ph>와 <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 클래스의 지정된 인스턴스로부터 <ph id="ph3">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>An application must run in full trust mode when using serialization.</source>
          <target state="translated">Serialization을 사용 하는 경우 응용 프로그램은 완전 신뢰 모드에서 실행 해야 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>for unrestricted access to network resources.</source>
          <target state="translated">네트워크 리소스에 대 한 무제한 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.Abort">
          <source>Cancels a request to an Internet resource.</source>
          <target state="translated">인터넷 리소스에 대한 요청을 취소합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.Abort">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Abort%2A&gt;</ph> method cancels a request to a resource.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Abort%2A&gt;</ph> 메서드는 리소스에 대 한 요청을 취소 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.Abort">
          <source>After a request is canceled, calling the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.EndGetResponse%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph>, or <ph id="ph6">&lt;xref:System.Net.HttpWebRequest.EndGetRequestStream%2A&gt;</ph> method causes a <ph id="ph7">&lt;xref:System.Net.WebException&gt;</ph> with the <ph id="ph8">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> property set to <ph id="ph9">&lt;xref:System.Net.WebExceptionStatus.RequestCanceled&gt;</ph>.</source>
          <target state="translated">요청이 취소 된 후 호출 된 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.EndGetResponse%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph>, 또는 <ph id="ph6">&lt;xref:System.Net.HttpWebRequest.EndGetRequestStream%2A&gt;</ph> 메서드를 사용 하면은 <ph id="ph7">&lt;xref:System.Net.WebException&gt;</ph> 와 <ph id="ph8">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> 속성이로 설정 <ph id="ph9">&lt;xref:System.Net.WebExceptionStatus.RequestCanceled&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.Abort">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Abort%2A&gt;</ph> method will synchronously execute the callback specified to the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph> methods if the <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.Abort%2A&gt;</ph> method is called while either of these operations are outstanding.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Abort%2A&gt;</ph> 메서드는 지정 된 콜백을 동기적으로 실행 합니다는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph> 메서드 경우는 <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.Abort%2A&gt;</ph> 메서드는 이러한 작업 중 하나라도 완료 되지 않은 동안에 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.Abort">
          <source>This can lead to potential deadlock issues.</source>
          <target state="translated">잠재적인 교착 상태 문제가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.Abort">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.Abort">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing<ept id="p1">](http://msdn.microsoft.com/library/e993b7c3-087f-45d8-9c02-9dded936d804)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>네트워크 추적<ept id="p1">](http://msdn.microsoft.com/library/e993b7c3-087f-45d8-9c02-9dded936d804)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.Abort">
          <source>In the case of asynchronous requests, it is the responsibility of the client application to implement its own time-out mechanism.</source>
          <target state="translated">비동기 요청의 경우 것은 제한 시간 메커니즘을 구현 하는 클라이언트 응용 프로그램의 책임입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.Abort">
          <source>The following code example shows how to do this.</source>
          <target state="translated">다음 코드 예제에서는이 작업을 수행 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Accept">
          <source>Gets or sets the value of the <ph id="ph1">&lt;see langword="Accept" /&gt;</ph> HTTP header.</source>
          <target state="translated">HTTP <ph id="ph1">&lt;see langword="Accept" /&gt;</ph> 헤더의 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Accept">
          <source>The value of the <ph id="ph1">&lt;see langword="Accept" /&gt;</ph> HTTP header.</source>
          <target state="translated">HTTP <ph id="ph1">&lt;see langword="Accept" /&gt;</ph> 헤더의 값입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Accept">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Accept">
          <source>To clear the <ph id="ph1">`Accept`</ph> HTTP header, set the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.Accept%2A&gt;</ph> property to <ph id="ph3">`null`</ph>.</source>
          <target state="translated">지우려면는 <ph id="ph1">`Accept`</ph> HTTP 헤더를 설정할는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.Accept%2A&gt;</ph> 속성을 <ph id="ph3">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Accept">
          <source>The value for this property is stored in <ph id="ph1">&lt;xref:System.Net.WebHeaderCollection&gt;</ph>.</source>
          <target state="translated">이 속성의 값은 <ph id="ph1">&lt;xref:System.Net.WebHeaderCollection&gt;</ph>에 저장됩니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Accept">
          <source>If WebHeaderCollection is set, the property value is lost.</source>
          <target state="translated">WebHeaderCollection이 설정되면 속성 값이 손실됩니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Accept">
          <source>The following code example sets the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Accept%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Accept%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="T:System.Net.HttpWebRequest">
          <source>Adds a range header to the request.</source>
          <target state="translated">요청에 범위 헤더를 추가합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</source>
          <target state="translated">모든 HTTP 엔터티가 표시 되는 HTTP 메시지의 바이트 시퀀스로 있으므로 바이트 범위의 개념은 모든 HTTP 엔터티에 대 한 의미 있는 합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>However, not all clients and servers need to support byte-range operations.</source>
          <target state="translated">그러나 일부 클라이언트 및 서버 바이트 범위 작업을 지원 해야 합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</source>
          <target state="translated">요청에 범위 헤더를 요청 하려고 한다는 것만 HTTP 엔터티에서 지정 된 범위의 바이트의 특정 부분을 받을 클라이언트가 수 있습니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Servers are not required to support Range header requests.</source>
          <target state="translated">서버 범위 헤더 요청을 지 원하는 데 필요는 없습니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
          <source>The starting or ending point of the range.</source>
          <target state="translated">범위의 시작점이나 끝점입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
          <source>Adds a byte range header to a request for a specific range from the beginning or end of the requested data.</source>
          <target state="translated">요청된 데이터의 시작이나 끝에서 특정 범위에 대해 바이트 범위 헤더를 요청에 추가합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType&gt;</ph> method adds a byte range header to the request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType&gt;</ph> 메서드 요청에 바이트 범위 헤더를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
          <source>If <ph id="ph1">`range`</ph> is positive, the <ph id="ph2">`range`</ph> parameter specifies the starting point of the range.</source>
          <target state="translated">경우 <ph id="ph1">`range`</ph> 가 양수 이면는 <ph id="ph2">`range`</ph> 매개 변수는 범위의 시작 지점을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
          <source>The server should start sending data from the <ph id="ph1">`range`</ph> parameter specified to the end of the data in the HTTP entity.</source>
          <target state="translated">서버에서 데이터를 보내기 시작 해야는 <ph id="ph1">`range`</ph> HTTP 엔터티에서 데이터의 끝에 지정 된 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
          <source>If <ph id="ph1">`range`</ph> is negative, the <ph id="ph2">`range`</ph> parameter specifies the ending point of the range.</source>
          <target state="translated">경우 <ph id="ph1">`range`</ph> 가 음수 이면는 <ph id="ph2">`range`</ph> 매개 변수는 끝점의 범위를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
          <source>The server should start sending data from the start of the data in the HTTP entity to the <ph id="ph1">`range`</ph> parameter specified.</source>
          <target state="translated">서버에는 HTTP 엔터티에 있는 데이터의 시작 부분부터 데이터를 보내기 시작 해야는 <ph id="ph1">`range`</ph> 매개 변수를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
          <source>Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</source>
          <target state="translated">모든 HTTP 엔터티가 표시 되는 HTTP 메시지의 바이트 시퀀스로 있으므로 바이트 범위의 개념은 모든 HTTP 엔터티에 대 한 의미 있는 합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
          <source>However, not all clients and servers need to support byte-range operations.</source>
          <target state="translated">그러나 일부 클라이언트 및 서버 바이트 범위 작업을 지원 해야 합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
          <source>The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</source>
          <target state="translated">요청에 범위 헤더를 요청 하려고 한다는 것만 HTTP 엔터티에서 지정 된 범위의 바이트의 특정 부분을 받을 클라이언트가 수 있습니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
          <source>Servers are not required to support Range header requests.</source>
          <target state="translated">서버 범위 헤더 요청을 지 원하는 데 필요는 없습니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
          <source>An example of a Range header in an HTTP protocol request that requests the server send the first 100 bytes (from the start to byte position 99) would be the following:</source>
          <target state="translated">서버 송신 (99 바이트 위치로 시작)에서 처음 100 바이트가 다음 것을 요청 하는 HTTP 프로토콜 요청에 범위 헤더의 예:</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
          <source>For this example, the <ph id="ph1">`range`</ph> parameter would be -99.</source>
          <target state="translated">이 예는 <ph id="ph1">`range`</ph> 매개 변수-99 것입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
          <source>A HTTP server indicates support for Range headers with the Accept-Ranges header.</source>
          <target state="translated">HTTP 서버 범위 Accept 헤더로 범위 헤더에 대 한 지원을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
          <source>An example of the Accept-Ranges header from a server that supports byte-ranges would be as follows:</source>
          <target state="translated">바이트 범위를 지원 하는 서버에서 적용 범위 헤더의 예는 다음과 같이 합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
          <source>If an Accept-Ranges header is not received in the header of the response from the server, then the server does not support Range headers.</source>
          <target state="translated">서버에서 응답의 헤더에 적용 범위 헤더를 받지 못한 다음 서버 범위 헤더를 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
          <source>An example of the Accept-Ranges header from a server that does not support ranges, but recognizes the Accept-Ranges header, would be as follows:</source>
          <target state="translated">범위를 지원 하지 않지만 적용 범위 헤더를 인식 하는 서버에서 적용 범위 헤더의 예는 다음과 같이 합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
          <source>When receiving the response from a range request, only the HTTP headers associated with the entire request are parsed and made available via properties on the <ph id="ph1">&lt;xref:System.Net.HttpWebResponse&gt;</ph> class.</source>
          <target state="translated">전체 요청과 연관 된 HTTP 헤더만 구문 분석 되 고의 속성을 통해 사용할 수 범위 요청에서 응답을 받을 때의 <ph id="ph1">&lt;xref:System.Net.HttpWebResponse&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
          <source>Headers associated with each range are returned in the response.</source>
          <target state="translated">각 범위에 연결 된 헤더는 응답에 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
          <source>The following code example adds a range header to the request.</source>
          <target state="translated">다음 코드 예제에서는 요청에 범위 헤더를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph>이 잘못되었습니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
          <source>The range header could not be added.</source>
          <target state="translated">범위 헤더를 추가할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
          <source>The starting or ending point of the range.</source>
          <target state="translated">범위의 시작점이나 끝점입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
          <source>Adds a byte range header to a request for a specific range from the beginning or end of the requested data.</source>
          <target state="translated">요청된 데이터의 시작이나 끝에서 특정 범위에 대해 바이트 범위 헤더를 요청에 추가합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType&gt;</ph> method adds a byte range header to the request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType&gt;</ph> 메서드 요청에 바이트 범위 헤더를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
          <source>If <ph id="ph1">`range`</ph> is positive, the <ph id="ph2">`range`</ph> parameter specifies the starting point of the range.</source>
          <target state="translated">경우 <ph id="ph1">`range`</ph> 가 양수 이면는 <ph id="ph2">`range`</ph> 매개 변수는 범위의 시작 지점을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
          <source>The server should start sending data from the <ph id="ph1">`range`</ph> parameter specified to the end of the data in the HTTP entity.</source>
          <target state="translated">서버에서 데이터를 보내기 시작 해야는 <ph id="ph1">`range`</ph> HTTP 엔터티에서 데이터의 끝에 지정 된 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
          <source>If <ph id="ph1">`range`</ph> is negative, the <ph id="ph2">`range`</ph> parameter specifies the ending point of the range.</source>
          <target state="translated">경우 <ph id="ph1">`range`</ph> 가 음수 이면는 <ph id="ph2">`range`</ph> 매개 변수는 끝점의 범위를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
          <source>The server should start sending data from the start of the data in the HTTP entity to the <ph id="ph1">`range`</ph> parameter specified.</source>
          <target state="translated">서버에는 HTTP 엔터티에 있는 데이터의 시작 부분부터 데이터를 보내기 시작 해야는 <ph id="ph1">`range`</ph> 매개 변수를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
          <source>Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</source>
          <target state="translated">모든 HTTP 엔터티가 표시 되는 HTTP 메시지의 바이트 시퀀스로 있으므로 바이트 범위의 개념은 모든 HTTP 엔터티에 대 한 의미 있는 합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
          <source>However, not all clients and servers need to support byte-range operations.</source>
          <target state="translated">그러나 일부 클라이언트 및 서버 바이트 범위 작업을 지원 해야 합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
          <source>The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</source>
          <target state="translated">요청에 범위 헤더를 요청 하려고 한다는 것만 HTTP 엔터티에서 지정 된 범위의 바이트의 특정 부분을 받을 클라이언트가 수 있습니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
          <source>Servers are not required to support Range header requests.</source>
          <target state="translated">서버 범위 헤더 요청을 지 원하는 데 필요는 없습니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
          <source>An example of a Range header in an HTTP protocol request that requests the server send the first 100 bytes (from the start to byte position 99) would be the following:</source>
          <target state="translated">서버 송신 (99 바이트 위치로 시작)에서 처음 100 바이트가 다음 것을 요청 하는 HTTP 프로토콜 요청에 범위 헤더의 예:</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
          <source>For this example, the <ph id="ph1">`range`</ph> parameter would be -99.</source>
          <target state="translated">이 예는 <ph id="ph1">`range`</ph> 매개 변수-99 것입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
          <source>A HTTP server indicates support for Range headers with the Accept-Ranges header.</source>
          <target state="translated">HTTP 서버 범위 Accept 헤더로 범위 헤더에 대 한 지원을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
          <source>An example of the Accept-Ranges header from a server that supports byte-ranges would be as follows:</source>
          <target state="translated">바이트 범위를 지원 하는 서버에서 적용 범위 헤더의 예는 다음과 같이 합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
          <source>If an Accept-Ranges header is not received in the header of the response from the server, then the server does not support Range headers.</source>
          <target state="translated">서버에서 응답의 헤더에 적용 범위 헤더를 받지 못한 다음 서버 범위 헤더를 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
          <source>An example of the Accept-Ranges header from a server that does not support ranges, but recognizes the Accept-Ranges header, would be as follows:</source>
          <target state="translated">범위를 지원 하지 않지만 적용 범위 헤더를 인식 하는 서버에서 적용 범위 헤더의 예는 다음과 같이 합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
          <source>When receiving the response from a range request, only the HTTP headers associated with the entire request are parsed and made available via properties on the <ph id="ph1">&lt;xref:System.Net.HttpWebResponse&gt;</ph> class.</source>
          <target state="translated">전체 요청과 연관 된 HTTP 헤더만 구문 분석 되 고의 속성을 통해 사용할 수 범위 요청에서 응답을 받을 때의 <ph id="ph1">&lt;xref:System.Net.HttpWebResponse&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
          <source>Headers associated with each range are returned in the response.</source>
          <target state="translated">각 범위에 연결 된 헤더는 응답에 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
          <source><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph>이 잘못되었습니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
          <source>The range header could not be added.</source>
          <target state="translated">범위 헤더를 추가할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source>The position at which to start sending data.</source>
          <target state="translated">데이터를 보내기 시작하는 위치입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source>The position at which to stop sending data.</source>
          <target state="translated">데이터 보내기를 중지하는 위치입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source>Adds a byte range header to the request for a specified range.</source>
          <target state="translated">지정된 범위에 대해 요청에 바이트 범위 헤더를 추가합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType&gt;</ph> method adds a byte range header to the request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType&gt;</ph> 메서드 요청에 바이트 범위 헤더를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source>Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</source>
          <target state="translated">모든 HTTP 엔터티가 표시 되는 HTTP 메시지의 바이트 시퀀스로 있으므로 바이트 범위의 개념은 모든 HTTP 엔터티에 대 한 의미 있는 합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source>However, not all clients and servers need to support byte-range operations.</source>
          <target state="translated">그러나 일부 클라이언트 및 서버 바이트 범위 작업을 지원 해야 합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source>The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</source>
          <target state="translated">요청에 범위 헤더를 요청 하려고 한다는 것만 HTTP 엔터티에서 지정 된 범위의 바이트의 특정 부분을 받을 클라이언트가 수 있습니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source>Servers are not required to support Range header requests.</source>
          <target state="translated">서버 범위 헤더 요청을 지 원하는 데 필요는 없습니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source>An example of a Range header in an HTTP protocol request that requests the first 100 bytes would be would be the following:</source>
          <target state="translated">처음 100 바이트가 요청 될 HTTP 프로토콜 요청에 범위 헤더의 예는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source>For this example, the <ph id="ph1">`from`</ph> parameter would be specified as 0 and the <ph id="ph2">`to`</ph> parameter would be specified as 99.</source>
          <target state="translated">이 예는 <ph id="ph1">`from`</ph> 매개 변수는 0으로 지정 및 <ph id="ph2">`to`</ph> 매개 변수는 99로 지정 합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source>The range specifier is automatically set as "bytes" by this method.</source>
          <target state="translated">범위 지정 자가이 메서드에서 "바이트"로 자동 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source>A HTTP server indicates support for Range headers with the Accept-Ranges header.</source>
          <target state="translated">HTTP 서버 범위 Accept 헤더로 범위 헤더에 대 한 지원을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source>An example of the Accept-Ranges header from a server that supports byte-ranges would be as follows:</source>
          <target state="translated">바이트 범위를 지원 하는 서버에서 적용 범위 헤더의 예는 다음과 같이 합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source>If an Accept-Ranges header is not received in the header of the response from the server, then the server does not support Range headers.</source>
          <target state="translated">서버에서 응답의 헤더에 적용 범위 헤더를 받지 못한 다음 서버 범위 헤더를 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source>An example of the Accept-Ranges header from a server that does not support ranges, but recognizes the Accept-Ranges header, would be as follows:</source>
          <target state="translated">범위를 지원 하지 않지만 적용 범위 헤더를 인식 하는 서버에서 적용 범위 헤더의 예는 다음과 같이 합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source>When receiving the response from a range request, only the HTTP headers associated with the entire request are parsed and made available via properties on the <ph id="ph1">&lt;xref:System.Net.HttpWebResponse&gt;</ph> class.</source>
          <target state="translated">전체 요청과 연관 된 HTTP 헤더만 구문 분석 되 고의 속성을 통해 사용할 수 범위 요청에서 응답을 받을 때의 <ph id="ph1">&lt;xref:System.Net.HttpWebResponse&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source>Headers associated with each range are returned in the response.</source>
          <target state="translated">각 범위에 연결 된 헤더는 응답에 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source>The following code example adds a range header to the request.</source>
          <target state="translated">다음 코드 예제에서는 요청에 범위 헤더를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph>이 잘못되었습니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="from" /&gt;</ph> is greater than <ph id="ph2">&lt;paramref name="to" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="from" /&gt;</ph>이 <ph id="ph2">&lt;paramref name="to" /&gt;</ph>보다 큰 경우</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="from" /&gt;</ph> or <ph id="ph2">&lt;paramref name="to" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="from" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="to" /&gt;</ph>가 0 미만입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source>The range header could not be added.</source>
          <target state="translated">범위 헤더를 추가할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
          <source>The position at which to start sending data.</source>
          <target state="translated">데이터를 보내기 시작하는 위치입니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
          <source>The position at which to stop sending data.</source>
          <target state="translated">데이터 보내기를 중지하는 위치입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
          <source>Adds a byte range header to the request for a specified range.</source>
          <target state="translated">지정된 범위에 대해 요청에 바이트 범위 헤더를 추가합니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType&gt;</ph> method adds a byte range header to the request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType&gt;</ph> 메서드 요청에 바이트 범위 헤더를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
          <source>Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</source>
          <target state="translated">모든 HTTP 엔터티가 표시 되는 HTTP 메시지의 바이트 시퀀스로 있으므로 바이트 범위의 개념은 모든 HTTP 엔터티에 대 한 의미 있는 합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
          <source>However, not all clients and servers need to support byte-range operations.</source>
          <target state="translated">그러나 일부 클라이언트 및 서버 바이트 범위 작업을 지원 해야 합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
          <source>The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</source>
          <target state="translated">요청에 범위 헤더를 요청 하려고 한다는 것만 HTTP 엔터티에서 지정 된 범위의 바이트의 특정 부분을 받을 클라이언트가 수 있습니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
          <source>Servers are not required to support Range header requests.</source>
          <target state="translated">서버 범위 헤더 요청을 지 원하는 데 필요는 없습니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
          <source>An example of a Range header in an HTTP protocol request that requests the first 100 bytes would be would be the following:</source>
          <target state="translated">처음 100 바이트가 요청 될 HTTP 프로토콜 요청에 범위 헤더의 예는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
          <source>For this example, the <ph id="ph1">`from`</ph> parameter would be specified as 0 and the <ph id="ph2">`to`</ph> parameter would be specified as 99.</source>
          <target state="translated">이 예는 <ph id="ph1">`from`</ph> 매개 변수는 0으로 지정 및 <ph id="ph2">`to`</ph> 매개 변수는 99로 지정 합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
          <source>The range specifier is automatically set as "bytes" by this method.</source>
          <target state="translated">범위 지정 자가이 메서드에서 "바이트"로 자동 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
          <source>A HTTP server indicates support for Range headers with the Accept-Ranges header.</source>
          <target state="translated">HTTP 서버 범위 Accept 헤더로 범위 헤더에 대 한 지원을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
          <source>An example of the Accept-Ranges header from a server that supports byte-ranges would be as follows:</source>
          <target state="translated">바이트 범위를 지원 하는 서버에서 적용 범위 헤더의 예는 다음과 같이 합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
          <source>If an Accept-Ranges header is not received in the header of the response from the server, then the server does not support Range headers.</source>
          <target state="translated">서버에서 응답의 헤더에 적용 범위 헤더를 받지 못한 다음 서버 범위 헤더를 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
          <source>An example of the Accept-Ranges header from a server that does not support ranges, but recognizes the Accept-Ranges header, would be as follows:</source>
          <target state="translated">범위를 지원 하지 않지만 적용 범위 헤더를 인식 하는 서버에서 적용 범위 헤더의 예는 다음과 같이 합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
          <source>When receiving the response from a range request, only the HTTP headers associated with the entire request are parsed and made available via properties on the <ph id="ph1">&lt;xref:System.Net.HttpWebResponse&gt;</ph> class.</source>
          <target state="translated">전체 요청과 연관 된 HTTP 헤더만 구문 분석 되 고의 속성을 통해 사용할 수 범위 요청에서 응답을 받을 때의 <ph id="ph1">&lt;xref:System.Net.HttpWebResponse&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
          <source>Headers associated with each range are returned in the response.</source>
          <target state="translated">각 범위에 연결 된 헤더는 응답에 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph>이 잘못되었습니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="from" /&gt;</ph> is greater than <ph id="ph2">&lt;paramref name="to" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="from" /&gt;</ph>이 <ph id="ph2">&lt;paramref name="to" /&gt;</ph>보다 큰 경우</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="from" /&gt;</ph> or <ph id="ph2">&lt;paramref name="to" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="from" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="to" /&gt;</ph>가 0 미만입니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
          <source>The range header could not be added.</source>
          <target state="translated">범위 헤더를 추가할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>The description of the range.</source>
          <target state="translated">범위에 대한 설명입니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>The starting or ending point of the range.</source>
          <target state="translated">범위의 시작점이나 끝점입니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>Adds a Range header to a request for a specific range from the beginning or end of the requested data.</source>
          <target state="translated">요청된 데이터의 시작이나 끝에서 특정 범위에 대한 요청에 Range 헤더를 추가합니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType&gt;</ph> method adds a Range header to the request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType&gt;</ph> 메서드 요청에 범위 헤더를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>If <ph id="ph1">`range`</ph> is positive, the <ph id="ph2">`range`</ph> parameter specifies the starting point of the range.</source>
          <target state="translated">경우 <ph id="ph1">`range`</ph> 가 양수 이면는 <ph id="ph2">`range`</ph> 매개 변수는 범위의 시작 지점을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>The server should start sending data from the <ph id="ph1">`range`</ph> parameter specified to the end of the data in the HTTP entity.</source>
          <target state="translated">서버에서 데이터를 보내기 시작 해야는 <ph id="ph1">`range`</ph> HTTP 엔터티에서 데이터의 끝에 지정 된 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>If <ph id="ph1">`range`</ph> is negative, the <ph id="ph2">`range`</ph> parameter specifies the ending point of the range.</source>
          <target state="translated">경우 <ph id="ph1">`range`</ph> 가 음수 이면는 <ph id="ph2">`range`</ph> 매개 변수는 끝점의 범위를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>The server should start sending data from the start of the data in the HTTP entity to the <ph id="ph1">`range`</ph> parameter specified.</source>
          <target state="translated">서버에는 HTTP 엔터티에 있는 데이터의 시작 부분부터 데이터를 보내기 시작 해야는 <ph id="ph1">`range`</ph> 매개 변수를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</source>
          <target state="translated">모든 HTTP 엔터티가 표시 되는 HTTP 메시지의 바이트 시퀀스로 있으므로 바이트 범위의 개념은 모든 HTTP 엔터티에 대 한 의미 있는 합니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>However, not all clients and servers need to support byte-range operations.</source>
          <target state="translated">그러나 일부 클라이언트 및 서버 바이트 범위 작업을 지원 해야 합니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</source>
          <target state="translated">요청에 범위 헤더를 요청 하려고 한다는 것만 HTTP 엔터티에서 지정 된 범위의 바이트의 특정 부분을 받을 클라이언트가 수 있습니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>Servers are not required to support Range header requests.</source>
          <target state="translated">서버 범위 헤더 요청을 지 원하는 데 필요는 없습니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>The <ph id="ph1">`rangeSpecifier`</ph> parameter would normally be specified as a "bytes", since this is the only range specifier recognized by most HTTP servers.</source>
          <target state="translated"><ph id="ph1">`rangeSpecifier`</ph> 매개 변수는 일반적으로로 지정 되며 "바이트",이 대부분의 HTTP 서버에서 인식 하는 유일한 범위 지정자입니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>Setting the <ph id="ph1">`rangeSpecifier`</ph> parameter to some other string allows support for custom range specifiers other than bytes (the byte-range specifier defined in RFC 2616 by the IETF).</source>
          <target state="translated">설정의 <ph id="ph1">`rangeSpecifier`</ph> 바이트 (ietf RFC 2616에 정의 된 바이트 범위 지정자) 이외의 다른 사용자 지정 범위 지정자에 대 한 매개 변수를 다른 문자열로 지원할 수 있게 합니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>An example of a Range header in an HTTP protocol request that requests the first 100 bytes would be would be the following:</source>
          <target state="translated">처음 100 바이트가 요청 될 HTTP 프로토콜 요청에 범위 헤더의 예는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>For this example, the <ph id="ph1">`rangeSpecifier`</ph> parameter would be specified as "bytes" and the <ph id="ph2">`range`</ph> parameter would be -99.</source>
          <target state="translated">이 예는 <ph id="ph1">`rangeSpecifier`</ph> 매개 변수는 "바이트"로 지정 및 <ph id="ph2">`range`</ph> 매개 변수-99 것입니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>A HTTP server indicates support for Range headers with the Accept-Ranges header in the response.</source>
          <target state="translated">HTTP 서버 응답에 적용 범위 헤더와 범위 헤더에 대 한 지원을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>An example of the Accept-Ranges header from a server that supports byte-ranges would be as follows:</source>
          <target state="translated">바이트 범위를 지원 하는 서버에서 적용 범위 헤더의 예는 다음과 같이 합니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>If an Accept-Ranges header is not received in the header of the response from the server, then the server does not support Range headers.</source>
          <target state="translated">서버에서 응답의 헤더에 적용 범위 헤더를 받지 못한 다음 서버 범위 헤더를 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>An example of the Accept-Ranges header from a server that does not support ranges, but recognizes the Accept-Ranges header, would be as follows:</source>
          <target state="translated">범위를 지원 하지 않지만 적용 범위 헤더를 인식 하는 서버에서 적용 범위 헤더의 예는 다음과 같이 합니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>When receiving the response from a range request, only the HTTP headers associated with the entire request are parsed and made available via properties on the <ph id="ph1">&lt;xref:System.Net.HttpWebResponse&gt;</ph> class.</source>
          <target state="translated">전체 요청과 연관 된 HTTP 헤더만 구문 분석 되 고의 속성을 통해 사용할 수 범위 요청에서 응답을 받을 때의 <ph id="ph1">&lt;xref:System.Net.HttpWebResponse&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>Headers associated with each range are returned in the response.</source>
          <target state="translated">각 범위에 연결 된 헤더는 응답에 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph>이 잘못되었습니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>The range header could not be added.</source>
          <target state="translated">범위 헤더를 추가할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>The description of the range.</source>
          <target state="translated">범위에 대한 설명입니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>The starting or ending point of the range.</source>
          <target state="translated">범위의 시작점이나 끝점입니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>Adds a Range header to a request for a specific range from the beginning or end of the requested data.</source>
          <target state="translated">요청된 데이터의 시작이나 끝에서 특정 범위에 대한 요청에 Range 헤더를 추가합니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType&gt;</ph> method adds a Range header to the request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType&gt;</ph> 메서드 요청에 범위 헤더를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>If <ph id="ph1">`range`</ph> is positive, the <ph id="ph2">`range`</ph> parameter specifies the starting point of the range.</source>
          <target state="translated">경우 <ph id="ph1">`range`</ph> 가 양수 이면는 <ph id="ph2">`range`</ph> 매개 변수는 범위의 시작 지점을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>The server should start sending data from the <ph id="ph1">`range`</ph> parameter specified to the end of the data in the HTTP entity.</source>
          <target state="translated">서버에서 데이터를 보내기 시작 해야는 <ph id="ph1">`range`</ph> HTTP 엔터티에서 데이터의 끝에 지정 된 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>If <ph id="ph1">`range`</ph> is negative, the <ph id="ph2">`range`</ph> parameter specifies the ending point of the range.</source>
          <target state="translated">경우 <ph id="ph1">`range`</ph> 가 음수 이면는 <ph id="ph2">`range`</ph> 매개 변수는 끝점의 범위를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>The server should start sending data from the start of the data in the HTTP entity to the <ph id="ph1">`range`</ph> parameter specified.</source>
          <target state="translated">서버에는 HTTP 엔터티에 있는 데이터의 시작 부분부터 데이터를 보내기 시작 해야는 <ph id="ph1">`range`</ph> 매개 변수를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</source>
          <target state="translated">모든 HTTP 엔터티가 표시 되는 HTTP 메시지의 바이트 시퀀스로 있으므로 바이트 범위의 개념은 모든 HTTP 엔터티에 대 한 의미 있는 합니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>However, not all clients and servers need to support byte-range operations.</source>
          <target state="translated">그러나 일부 클라이언트 및 서버 바이트 범위 작업을 지원 해야 합니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</source>
          <target state="translated">요청에 범위 헤더를 요청 하려고 한다는 것만 HTTP 엔터티에서 지정 된 범위의 바이트의 특정 부분을 받을 클라이언트가 수 있습니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>Servers are not required to support Range header requests.</source>
          <target state="translated">서버 범위 헤더 요청을 지 원하는 데 필요는 없습니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>The <ph id="ph1">`rangeSpecifier`</ph> parameter would normally be specified as a "bytes", since this is the only range specifier recognized by most HTTP servers.</source>
          <target state="translated"><ph id="ph1">`rangeSpecifier`</ph> 매개 변수는 일반적으로로 지정 되며 "바이트",이 대부분의 HTTP 서버에서 인식 하는 유일한 범위 지정자입니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>Setting the <ph id="ph1">`rangeSpecifier`</ph> parameter to some other string allows support for custom range specifiers other than bytes (the byte-range specifier defined in RFC 2616 by the IETF).</source>
          <target state="translated">설정의 <ph id="ph1">`rangeSpecifier`</ph> 바이트 (ietf RFC 2616에 정의 된 바이트 범위 지정자) 이외의 다른 사용자 지정 범위 지정자에 대 한 매개 변수를 다른 문자열로 지원할 수 있게 합니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>An example of a Range header in an HTTP protocol request that requests the first 100 bytes would be would be the following:</source>
          <target state="translated">처음 100 바이트가 요청 될 HTTP 프로토콜 요청에 범위 헤더의 예는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>For this example, the <ph id="ph1">`rangeSpecifier`</ph> parameter would be specified as "bytes" and the <ph id="ph2">`range`</ph> parameter would be -99.</source>
          <target state="translated">이 예는 <ph id="ph1">`rangeSpecifier`</ph> 매개 변수는 "바이트"로 지정 및 <ph id="ph2">`range`</ph> 매개 변수-99 것입니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>A HTTP server indicates support for Range headers with the Accept-Ranges header in the response.</source>
          <target state="translated">HTTP 서버 응답에 적용 범위 헤더와 범위 헤더에 대 한 지원을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>An example of the Accept-Ranges header from a server that supports byte-ranges would be as follows:</source>
          <target state="translated">바이트 범위를 지원 하는 서버에서 적용 범위 헤더의 예는 다음과 같이 합니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>If an Accept-Ranges header is not received in the header of the response from the server, then the server does not support Range headers.</source>
          <target state="translated">서버에서 응답의 헤더에 적용 범위 헤더를 받지 못한 다음 서버 범위 헤더를 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>An example of the Accept-Ranges header from a server that does not support ranges, but recognizes the Accept-Ranges header, would be as follows:</source>
          <target state="translated">범위를 지원 하지 않지만 적용 범위 헤더를 인식 하는 서버에서 적용 범위 헤더의 예는 다음과 같이 합니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>When receiving the response from a range request, only the HTTP headers associated with the entire request are parsed and made available via properties on the <ph id="ph1">&lt;xref:System.Net.HttpWebResponse&gt;</ph> class.</source>
          <target state="translated">전체 요청과 연관 된 HTTP 헤더만 구문 분석 되 고의 속성을 통해 사용할 수 범위 요청에서 응답을 받을 때의 <ph id="ph1">&lt;xref:System.Net.HttpWebResponse&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>Headers associated with each range are returned in the response.</source>
          <target state="translated">각 범위에 연결 된 헤더는 응답에 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph>이 잘못되었습니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>The range header could not be added.</source>
          <target state="translated">범위 헤더를 추가할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source>The description of the range.</source>
          <target state="translated">범위에 대한 설명입니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source>The position at which to start sending data.</source>
          <target state="translated">데이터를 보내기 시작하는 위치입니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source>The position at which to stop sending data.</source>
          <target state="translated">데이터 보내기를 중지하는 위치입니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source>Adds a range header to a request for a specified range.</source>
          <target state="translated">지정된 범위에 대해 요청에 범위 헤더를 추가합니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType&gt;</ph> method adds a Range header to the request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType&gt;</ph> 메서드 요청에 범위 헤더를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source>Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</source>
          <target state="translated">모든 HTTP 엔터티가 표시 되는 HTTP 메시지의 바이트 시퀀스로 있으므로 바이트 범위의 개념은 모든 HTTP 엔터티에 대 한 의미 있는 합니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source>However, not all clients and servers need to support byte-range operations.</source>
          <target state="translated">그러나 일부 클라이언트 및 서버 바이트 범위 작업을 지원 해야 합니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source>The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</source>
          <target state="translated">요청에 범위 헤더를 요청 하려고 한다는 것만 HTTP 엔터티에서 지정 된 범위의 바이트의 특정 부분을 받을 클라이언트가 수 있습니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source>Servers are not required to support Range header requests.</source>
          <target state="translated">서버 범위 헤더 요청을 지 원하는 데 필요는 없습니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source>The <ph id="ph1">`rangeSpecifier`</ph> parameter would normally be specified as a "bytes", since this is the only range specifier recognized by most HTTP servers.</source>
          <target state="translated"><ph id="ph1">`rangeSpecifier`</ph> 매개 변수는 일반적으로로 지정 되며 "바이트",이 대부분의 HTTP 서버에서 인식 하는 유일한 범위 지정자입니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source>Setting the <ph id="ph1">`rangeSpecifier`</ph> parameter to some other string allows support for custom range specifiers other than bytes (the byte-range specifier defined in RFC 2616 by the IETF).</source>
          <target state="translated">설정의 <ph id="ph1">`rangeSpecifier`</ph> 바이트 (ietf RFC 2616에 정의 된 바이트 범위 지정자) 이외의 다른 사용자 지정 범위 지정자에 대 한 매개 변수를 다른 문자열로 지원할 수 있게 합니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source>An example of a Range header in an HTTP protocol request that requests the first 100 bytes would be would be the following:</source>
          <target state="translated">처음 100 바이트가 요청 될 HTTP 프로토콜 요청에 범위 헤더의 예는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source>For this example, the <ph id="ph1">`rangeSpecifier`</ph> parameter would be specified as a "bytes", the <ph id="ph2">`from`</ph> parameter would be 0, and the <ph id="ph3">`to`</ph> parameter would be 99.</source>
          <target state="translated">이 예는 <ph id="ph1">`rangeSpecifier`</ph> 매개 변수는 "바이트"로 지정 되는 <ph id="ph2">`from`</ph> 매개 변수를 0으로 지정할 및 <ph id="ph3">`to`</ph> 매개 변수를 지정할 99 합니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source>A HTTP server indicates support for Range headers with the Accept-Ranges header in the response.</source>
          <target state="translated">HTTP 서버 응답에 적용 범위 헤더와 범위 헤더에 대 한 지원을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source>An example of the Accept-Ranges header from a server that supports byte-ranges would be as follows:</source>
          <target state="translated">바이트 범위를 지원 하는 서버에서 적용 범위 헤더의 예는 다음과 같이 합니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source>The string specified in the Accept-Ranges header is the range-specifier that would be by specified in the <ph id="ph1">`rangeSpecifier`</ph> parameter for this method.</source>
          <target state="translated">적용 범위 헤더에 지정 된 문자열은에 의해 지정 되는 범위 지정자는 <ph id="ph1">`rangeSpecifier`</ph> 이 메서드에 대 한 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source>If an Accept-Ranges header is not received in the header of the response from the server, then the server does not support Range headers.</source>
          <target state="translated">서버에서 응답의 헤더에 적용 범위 헤더를 받지 못한 다음 서버 범위 헤더를 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source>An example of the Accept-Ranges header from a server that does not support ranges, but recognizes the Accept-Ranges header, would be as follows:</source>
          <target state="translated">범위를 지원 하지 않지만 적용 범위 헤더를 인식 하는 서버에서 적용 범위 헤더의 예는 다음과 같이 합니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source>When receiving the response from a range request, only the HTTP headers associated with the entire request are parsed and made available via properties on the <ph id="ph1">&lt;xref:System.Net.HttpWebResponse&gt;</ph> class.</source>
          <target state="translated">전체 요청과 연관 된 HTTP 헤더만 구문 분석 되 고의 속성을 통해 사용할 수 범위 요청에서 응답을 받을 때의 <ph id="ph1">&lt;xref:System.Net.HttpWebResponse&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source>Headers associated with each range are returned in the response.</source>
          <target state="translated">각 범위에 연결 된 헤더는 응답에 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="from" /&gt;</ph> is greater than <ph id="ph2">&lt;paramref name="to" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="from" /&gt;</ph>이 <ph id="ph2">&lt;paramref name="to" /&gt;</ph>보다 큰 경우</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="from" /&gt;</ph> or <ph id="ph2">&lt;paramref name="to" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="from" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="to" /&gt;</ph>가 0 미만입니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph>이 잘못되었습니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source>The range header could not be added.</source>
          <target state="translated">범위 헤더를 추가할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source>The description of the range.</source>
          <target state="translated">범위에 대한 설명입니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source>The position at which to start sending data.</source>
          <target state="translated">데이터를 보내기 시작하는 위치입니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source>The position at which to stop sending data.</source>
          <target state="translated">데이터 보내기를 중지하는 위치입니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source>Adds a range header to a request for a specified range.</source>
          <target state="translated">지정된 범위에 대해 요청에 범위 헤더를 추가합니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType&gt;</ph> method adds a Range header to the request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType&gt;</ph> 메서드 요청에 범위 헤더를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source>Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</source>
          <target state="translated">모든 HTTP 엔터티가 표시 되는 HTTP 메시지의 바이트 시퀀스로 있으므로 바이트 범위의 개념은 모든 HTTP 엔터티에 대 한 의미 있는 합니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source>However, not all clients and servers need to support byte-range operations.</source>
          <target state="translated">그러나 일부 클라이언트 및 서버 바이트 범위 작업을 지원 해야 합니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source>The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</source>
          <target state="translated">요청에 범위 헤더를 요청 하려고 한다는 것만 HTTP 엔터티에서 지정 된 범위의 바이트의 특정 부분을 받을 클라이언트가 수 있습니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source>Servers are not required to support Range header requests.</source>
          <target state="translated">서버 범위 헤더 요청을 지 원하는 데 필요는 없습니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source>The <ph id="ph1">`rangeSpecifier`</ph> parameter would normally be specified as a "bytes", since this is the only range specifier recognized by most HTTP servers.</source>
          <target state="translated"><ph id="ph1">`rangeSpecifier`</ph> 매개 변수는 일반적으로로 지정 되며 "바이트",이 대부분의 HTTP 서버에서 인식 하는 유일한 범위 지정자입니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source>Setting the <ph id="ph1">`rangeSpecifier`</ph> parameter to some other string allows support for custom range specifiers other than bytes (the byte-range specifier defined in RFC 2616 by the IETF).</source>
          <target state="translated">설정의 <ph id="ph1">`rangeSpecifier`</ph> 바이트 (ietf RFC 2616에 정의 된 바이트 범위 지정자) 이외의 다른 사용자 지정 범위 지정자에 대 한 매개 변수를 다른 문자열로 지원할 수 있게 합니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source>An example of a Range header in an HTTP protocol request that requests the first 100 bytes would be would be the following:</source>
          <target state="translated">처음 100 바이트가 요청 될 HTTP 프로토콜 요청에 범위 헤더의 예는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source>For this example, the <ph id="ph1">`rangeSpecifier`</ph> parameter would be specified as a "bytes", the <ph id="ph2">`from`</ph> parameter would be 0, and the <ph id="ph3">`to`</ph> parameter would be 99.</source>
          <target state="translated">이 예는 <ph id="ph1">`rangeSpecifier`</ph> 매개 변수는 "바이트"로 지정 되는 <ph id="ph2">`from`</ph> 매개 변수를 0으로 지정할 및 <ph id="ph3">`to`</ph> 매개 변수를 지정할 99 합니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source>A HTTP server indicates support for Range headers with the Accept-Ranges header in the response.</source>
          <target state="translated">HTTP 서버 응답에 적용 범위 헤더와 범위 헤더에 대 한 지원을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source>An example of the Accept-Ranges header from a server that supports byte-ranges would be as follows:</source>
          <target state="translated">바이트 범위를 지원 하는 서버에서 적용 범위 헤더의 예는 다음과 같이 합니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source>The string specified in the Accept-Ranges header is the range-specifier that would be by specified in the <ph id="ph1">`rangeSpecifier`</ph> parameter for this method.</source>
          <target state="translated">적용 범위 헤더에 지정 된 문자열은에 의해 지정 되는 범위 지정자는 <ph id="ph1">`rangeSpecifier`</ph> 이 메서드에 대 한 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source>If an Accept-Ranges header is not received in the header of the response from the server, then the server does not support Range headers.</source>
          <target state="translated">서버에서 응답의 헤더에 적용 범위 헤더를 받지 못한 다음 서버 범위 헤더를 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source>An example of the Accept-Ranges header from a server that does not support ranges, but recognizes the Accept-Ranges header, would be as follows:</source>
          <target state="translated">범위를 지원 하지 않지만 적용 범위 헤더를 인식 하는 서버에서 적용 범위 헤더의 예는 다음과 같이 합니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source>When receiving the response from a range request, only the HTTP headers associated with the entire request are parsed and made available via properties on the <ph id="ph1">&lt;xref:System.Net.HttpWebResponse&gt;</ph> class.</source>
          <target state="translated">전체 요청과 연관 된 HTTP 헤더만 구문 분석 되 고의 속성을 통해 사용할 수 범위 요청에서 응답을 받을 때의 <ph id="ph1">&lt;xref:System.Net.HttpWebResponse&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source>Headers associated with each range are returned in the response.</source>
          <target state="translated">각 범위에 연결 된 헤더는 응답에 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="from" /&gt;</ph> is greater than <ph id="ph2">&lt;paramref name="to" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="from" /&gt;</ph>이 <ph id="ph2">&lt;paramref name="to" /&gt;</ph>보다 큰 경우</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="from" /&gt;</ph> or <ph id="ph2">&lt;paramref name="to" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="from" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="to" /&gt;</ph>가 0 미만입니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph>이 잘못되었습니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source>The range header could not be added.</source>
          <target state="translated">범위 헤더를 추가할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Address">
          <source>Gets the Uniform Resource Identifier (URI) of the Internet resource that actually responds to the request.</source>
          <target state="translated">요청에 실제로 응답하는 인터넷 리소스의 URI(Uniform Resource Identifier)를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Address">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that identifies the Internet resource that actually responds to the request.</source>
          <target state="translated">요청에 실제로 응답하는 인터넷 리소스를 식별하는 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Address">
          <source>The default is the URI used by the <ph id="ph1">&lt;see cref="M:System.Net.WebRequest.Create(System.String)" /&gt;</ph> method to initialize the request.</source>
          <target state="translated">기본값은 요청을 초기화하기 위해 <ph id="ph1">&lt;see cref="M:System.Net.WebRequest.Create(System.String)" /&gt;</ph> 메서드가 사용한 URI입니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Address">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Address%2A&gt;</ph> property is set to the URI after any redirections that happen during the request are complete.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Address%2A&gt;</ph> 속성을 요청 하는 동안 발생 하는 모든 리디렉션이 완료 된 후 URI로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Address">
          <source>The URI of the original request is kept in the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.RequestUri%2A&gt;</ph> property.</source>
          <target state="translated">원래 요청의 URI에 유지 되는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.RequestUri%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Address">
          <source>The following code example checks to see if the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> object <ph id="ph2">`req`</ph> was redirected to another location to fulfill the request, and sets the value of the <ph id="ph3">`hasChanged`</ph> variable to <ph id="ph4">`true`</ph> if the request was redirected; otherwise <ph id="ph5">`hasChanged`</ph> is set to <ph id="ph6">`false`</ph>.</source>
          <target state="translated">다음 코드 예제에서는 확인 하는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 개체 <ph id="ph2">`req`</ph> 의 값을 설정 하 고 요청을 수행 하려면 다른 위치에 리디렉션된는 <ph id="ph3">`hasChanged`</ph> 변수를 <ph id="ph4">`true`</ph> 요청이 리디렉션된; 경우 그렇지 않으면 <ph id="ph5">`hasChanged`</ph>로 설정 된 <ph id="ph6">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.AllowAutoRedirect">
          <source>Gets or sets a value that indicates whether the request should follow redirection responses.</source>
          <target state="translated">요청이 리디렉션 응답을 따르는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.AllowAutoRedirect">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the request should automatically follow redirection responses from the Internet resource; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">요청이 인터넷 리소스의 리디렉션 응답을 자동으로 따르면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그러지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.AllowAutoRedirect">
          <source>The default value is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.AllowAutoRedirect">
          <source>Set <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A&gt;</ph> to <ph id="ph2">`true`</ph> if you want the request to automatically follow HTTP redirection headers to the new location of the resource.</source>
          <target state="translated">설정 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A&gt;</ph> 를 <ph id="ph2">`true`</ph> 리소스의 새 위치에 HTTP 리디렉션 헤더를 자동으로 수행 하려면 요청 하려는 경우.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.AllowAutoRedirect">
          <source>The maximum number of redirections to follow is set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.MaximumAutomaticRedirections%2A&gt;</ph> property.</source>
          <target state="translated">최대 리디렉션 수 설정한는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.MaximumAutomaticRedirections%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.AllowAutoRedirect">
          <source>If <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A&gt;</ph> is set to <ph id="ph2">`false`</ph>, all responses with an HTTP status code from 300 to 399 is returned to the application.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A&gt;</ph> 로 설정 된 <ph id="ph2">`false`</ph>, 399 300의 HTTP 상태 코드와 함께 모든 응답은 응용 프로그램에 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.AllowAutoRedirect">
          <source>The Authorization header is cleared on auto-redirects and <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> automatically tries to re-authenticate to the redirected location.</source>
          <target state="translated">권한 부여 헤더 자동 리디렉션에서 선택 취소 하 고 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 자동으로 다시 리디렉션된 위치에 인증 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.AllowAutoRedirect">
          <source>In practice, this means that an application can't put custom authentication information into the Authorization header if it is possible to encounter redirection.</source>
          <target state="translated">실제로, 즉, 리디렉션이 발생할 수 있는 경우 응용 프로그램가 인증 헤더에 사용자 지정 인증 정보를 넣을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.AllowAutoRedirect">
          <source>Instead, the application must implement and register a custom authentication module.</source>
          <target state="translated">대신, 응용 프로그램을 구현 하 고 사용자 지정 인증 모듈을 등록 해야 합니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.AllowAutoRedirect">
          <source>The <ph id="ph1">&lt;xref:System.Net.AuthenticationManager?displayProperty=nameWithType&gt;</ph> and related class are used to implement a custom authentication module.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.AuthenticationManager?displayProperty=nameWithType&gt;</ph> 관련된 클래스는 사용자 지정 인증 모듈을 구현 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.AllowAutoRedirect">
          <source>The <ph id="ph1">&lt;xref:System.Net.AuthenticationManager.Register%2A?displayProperty=nameWithType&gt;</ph> method registers a custom authentication module.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.AuthenticationManager.Register%2A?displayProperty=nameWithType&gt;</ph> 메서드는 사용자 지정 인증 모듈을 등록 합니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.AllowAutoRedirect">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A&gt;</ph> property to allow the request to follow redirection responses.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A&gt;</ph> 속성 요청이 리디렉션 응답을 따를 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.AllowReadStreamBuffering">
          <source>Gets or sets a value that indicates whether to buffer the received from the Internet resource.</source>
          <target state="translated">인터넷 리소스에서 받은 데이터를 버퍼링할지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.AllowReadStreamBuffering">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to enable buffering of the data received from the Internet resource; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to disable buffering.</source>
          <target state="translated">인터넷 리소스에서 받은 데이터를 버퍼링하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 버퍼링하지 않으려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.AllowReadStreamBuffering">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering">
          <source>Gets or sets a value that indicates whether to buffer the data sent to the Internet resource.</source>
          <target state="translated">인터넷 리소스에 보낸 데이터를 버퍼링할 것인지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to enable buffering of the data sent to the Internet resource; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to disable buffering.</source>
          <target state="translated">인터넷 리소스에 보낸 데이터를 버퍼링할 수 있게 하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 버퍼링할 수 없게 하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering">
          <source>When <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AllowWriteStreamBuffering%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the data is buffered in memory so it is ready to be resent in the event of redirections or authentication requests.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AllowWriteStreamBuffering%2A&gt;</ph> 은 <ph id="ph2">`true`</ph>, 데이터는 메모리에 버퍼링 되어 있으면 요청 리디렉션 또는 인증 시 다시 전송 준비가 된 것입니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AllowWriteStreamBuffering%2A&gt;</ph> property to disable data buffering.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AllowWriteStreamBuffering%2A&gt;</ph> 속성을 데이터 버퍼링이 사용 하지 않도록 설정 합니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering">
          <source>Setting <ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /&gt;</ph> to <ph id="ph2">&lt;see langword="true" /&gt;</ph> might cause performance problems when uploading large datasets because the data buffer could use all available memory.</source>
          <target state="translated">설정 <ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /&gt;</ph> 를 <ph id="ph2">&lt;see langword="true" /&gt;</ph> 데이터 버퍼의 사용 가능한 메모리를 사용할 수 있으므로 큰 데이터 집합을 업로드 하는 경우 성능 문제가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.AutomaticDecompression">
          <source>Gets or sets the type of decompression that is used.</source>
          <target state="translated">압축을 푸는 데 사용할 형식을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.AutomaticDecompression">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.DecompressionMethods" /&gt;</ph> object that indicates the type of decompression that is used.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Net.DecompressionMethods" /&gt;</ph> 사용 되는 압축을 푸는 형식을 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.AutomaticDecompression">
          <source>The object's current state does not allow this property to be set.</source>
          <target state="translated">개체의 현재 상태는 이 속성을 설정하도록 허용하지 않습니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 대리자입니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>The state object for this request.</source>
          <target state="translated">이 요청에 대한 상태 개체입니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous request for a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object to use to write data.</source>
          <target state="translated">데이터를 쓰는 데 사용할 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 개체에 대한 비동기 요청을 시작합니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous request.</source>
          <target state="translated">비동기 요청을 참조하는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph> method starts an asynchronous request for a stream used to send data for the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph> 에 대 한 데이터를 보내는 데 사용 되는 스트림에 대 한 비동기 요청을 시작 하는 메서드는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>The asynchronous callback method uses the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.EndGetRequestStream%2A&gt;</ph> method to return the actual stream.</source>
          <target state="translated">비동기 콜백 메서드에서 사용 하 여 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.EndGetRequestStream%2A&gt;</ph> 실제 스트림을 반환 하는 메서드.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph> method requires some synchronous setup tasks to complete (DNS resolution, proxy detection, and TCP socket connection, for example) before this method becomes asynchronous.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph> 메서드에이 메서드가이 비동기 상태가 되기 전에 (DNS 확인, 프록시 검색 및 예를 들어 TCP 소켓 연결)를 완료 하려면 몇 가지 동기 방식으로 설정 작업을 필요 합니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>As a result, this method should never be called on a user interface (UI) thread because it might take considerable time (up to several minutes depending on network settings) to complete the initial synchronous setup tasks before an exception for an error is thrown or the method succeeds.</source>
          <target state="translated">결과적으로,이 메서드가 호출 되 면 안 사용자 인터페이스 (UI) 스레드에서 오류가 발생에 대 한 예외가 하기 전에 동기 초기 설치 작업을 완료할 수 (최대 네트워크 설정에 따라 몇 분) 시간이 오래 걸릴 수 있습니다 때문에 또는 메서드가 성공합니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>To learn more about the thread pool, see <bpt id="p1">[</bpt>The Managed Thread Pool<ept id="p1">](~/docs/standard/threading/the-managed-thread-pool.md)</ept>.</source>
          <target state="translated">스레드 풀에 대 한 자세한 참조 <bpt id="p1">[</bpt>관리 되는 스레드 풀<ept id="p1">](~/docs/standard/threading/the-managed-thread-pool.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>Your application cannot mix synchronous and asynchronous methods for a particular request.</source>
          <target state="translated">응용 프로그램 특정 요청에 대 한 동기 및 비동기 메서드를 혼합할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>If you call the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph> method, you must use the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph> method to retrieve the response.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph> 사용 해야 합니다는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph> 메서드 응답을 검색 합니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>.NET Framework의 네트워크 추적<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph> method to make an asynchronous request for a stream instance.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph> 를 stream 인스턴스로 대 한 비동기 요청을 만드는 메서드와 알림이 있습니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.Method" /&gt;</ph> property is GET or HEAD.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.Method" /&gt;</ph> 속성이 GET 또는 HEAD인 경우</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.KeepAlive" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /&gt;</ph> is <ph id="ph4">&lt;see langword="false" /&gt;</ph>, <ph id="ph5">&lt;see cref="P:System.Net.HttpWebRequest.ContentLength" /&gt;</ph> is -1, <ph id="ph6">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph> is <ph id="ph7">&lt;see langword="false" /&gt;</ph>, and <ph id="ph8">&lt;see cref="P:System.Net.HttpWebRequest.Method" /&gt;</ph> is POST or PUT.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.KeepAlive" /&gt;</ph>가 <ph id="ph2">&lt;see langword="true" /&gt;</ph>이고, <ph id="ph3">&lt;see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /&gt;</ph>이 <ph id="ph4">&lt;see langword="false" /&gt;</ph>이고, <ph id="ph5">&lt;see cref="P:System.Net.HttpWebRequest.ContentLength" /&gt;</ph>가 -1이고, <ph id="ph6">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph>가 <ph id="ph7">&lt;see langword="false" /&gt;</ph>이고, <ph id="ph8">&lt;see cref="P:System.Net.HttpWebRequest.Method" /&gt;</ph>가 POST 또는 PUT인 경우</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>The stream is being used by a previous call to <ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /&gt;</ph></source>
          <target state="translated">스트림이 <ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /&gt;</ph>에 대한 이전 호출에서 사용되고 있는 경우</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.TransferEncoding" /&gt;</ph> is set to a value and <ph id="ph2">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph> is <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.TransferEncoding" /&gt;</ph>이 값으로 설정되었으며 <ph id="ph2">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph>가 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>The thread pool is running out of threads.</source>
          <target state="translated">스레드 풀에 스레드가 부족합니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>The request cache validator indicated that the response for this request can be served from the cache; however, requests that write data must not use the cache.</source>
          <target state="translated">요청 캐시 검사기에서 이 요청에 대한 응답이 캐시에서 제공될 수 있도록 지정했지만, 데이터를 쓰는 요청이 캐시를 사용하지 않아야 합니다.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>This exception can occur if you are using a custom cache validator that is incorrectly implemented.</source>
          <target state="translated">이 예외는 잘못 구현된 사용자 지정 캐시 유효성 검사기를 사용 중인 경우에 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.Abort" /&gt;</ph> was previously called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.Abort" /&gt;</ph>가 이전에 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>In a .NET Compact Framework application, a request stream with zero content length was not obtained and closed correctly.</source>
          <target state="translated">.NET Compact Framework 응용 프로그램에서 콘텐츠 길이가 0인 요청 스트림을 가져오지 않았으며 올바르게 종료되었습니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>For more information about handling zero content length requests, see <bpt id="p1">[</bpt>Network Programming in the .NET Compact Framework<ept id="p1">](https://msdn.microsoft.com/subscriptions/downloads/1afx2b0f\(v=vs.80\).aspx)</ept>.</source>
          <target state="translated">콘텐츠 길이가 0인 요청을 처리하는 방법에 대한 자세한 내용은 <bpt id="p1">[</bpt>.NET Compact Framework의 네트워크 프로그래밍<ept id="p1">](https://msdn.microsoft.com/subscriptions/downloads/1afx2b0f\(v=vs.80\).aspx)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 대리자</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>The state object for this request.</source>
          <target state="translated">이 요청에 대한 상태 개체입니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous request to an Internet resource.</source>
          <target state="translated">인터넷 리소스에 대한 비동기 요청을 시작합니다.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous request for a response.</source>
          <target state="translated">응답에 대한 비동기 요청을 참조하는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph> method starts an asynchronous request for a response from the Internet resource.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph> 메서드 인터넷 리소스의 응답에 대 한 비동기 요청을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>The asynchronous callback method uses the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.EndGetResponse%2A&gt;</ph> method to return the actual <ph id="ph2">&lt;xref:System.Net.WebResponse&gt;</ph>.</source>
          <target state="translated">비동기 콜백 메서드에서 사용 하 여 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.EndGetResponse%2A&gt;</ph> 실제 반환 하는 메서드 <ph id="ph2">&lt;xref:System.Net.WebResponse&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.Net.ProtocolViolationException&gt;</ph> is thrown in several cases when the properties set on the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> class are conflicting.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Net.ProtocolViolationException&gt;</ph> 속성에 설정 하는 경우 여러 경우에 throw 되는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 충돌 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>This exception occurs if an application sets the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph> property to <ph id="ph3">`true`</ph>, and then sends an HTTP GET request.</source>
          <target state="translated">응용 프로그램에서 설정 하는 경우이 예외가 발생는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> 속성 및 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph> 속성을 <ph id="ph3">`true`</ph>, HTTP GET 요청을 전송 합니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>This exception occurs if an application tries to send chunked to a server that only supports HTTP 1.0 protocol, where this is not supported.</source>
          <target state="translated">응용 프로그램을 보내려고만 HTTP 1.0 프로토콜을 지 원하는 서버에 청크 분할이 지원 되지 않습니다는이 예외가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>This exception occurs if an application tries to send data without setting the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> property or the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph> is <ph id="ph3">`false`</ph> when buffering is disabled and on a keepalive connection (the <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.KeepAlive%2A&gt;</ph> property is <ph id="ph5">`true`</ph>)<ph id="ph6">`.`</ph></source>
          <target state="translated">응용 프로그램 설정 하지 않고 데이터를 보내려고 시도 하는 경우이 예외가 발생는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> 속성 또는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph> 은 <ph id="ph3">`false`</ph> 버퍼링 사용 불가능 한 keepalive 연결 (의 <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.KeepAlive%2A&gt;</ph> 속성은 <ph id="ph5">`true`</ph>)<ph id="ph6">`.`</ph></target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>If a <ph id="ph1">&lt;xref:System.Net.WebException&gt;</ph> is thrown, use the <ph id="ph2">&lt;xref:System.Net.WebException.Response%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> properties of the exception to determine the response from the server.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Net.WebException&gt;</ph> 가 사용 하 여 throw는 <ph id="ph2">&lt;xref:System.Net.WebException.Response%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> 속성의 서버에서 응답을 결정 하는 예외입니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph> method requires some synchronous setup tasks to complete (DNS resolution, proxy detection, and TCP socket connection, for example) before this method becomes asynchronous.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph> 메서드에이 메서드가이 비동기 상태가 되기 전에 (DNS 확인, 프록시 검색 및 예를 들어 TCP 소켓 연결)를 완료 하려면 몇 가지 동기 방식으로 설정 작업을 필요 합니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>As a result, this method should never be called on a user interface (UI) thread because it might take considerable time (up to several minutes depending on network settings) to complete the initial synchronous setup tasks before an exception for an error is thrown or the method succeeds.</source>
          <target state="translated">결과적으로,이 메서드가 호출 되 면 안 사용자 인터페이스 (UI) 스레드에서 오류가 발생에 대 한 예외가 하기 전에 동기 초기 설치 작업을 완료할 수 (최대 네트워크 설정에 따라 몇 분) 시간이 오래 걸릴 수 있습니다 때문에 또는 메서드가 성공합니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>To learn more about the thread pool, see <bpt id="p1">[</bpt>&amp;#91;<ph id="ph1">\&lt;</ph>topic://cpconthreadpooling&gt;&amp;#93;<ept id="p1">](http://msdn.microsoft.com/library/2be05b06-a42e-4c9d-a739-96c21d673927)</ept>.</source>
          <target state="translated">스레드 풀에 대 한 자세한 참조 <bpt id="p1">[</bpt> &amp;#91; <ph id="ph1">\&lt;</ph>topic://cpconthreadpooling &gt;&amp;#93;<ept id="p1">](http://msdn.microsoft.com/library/2be05b06-a42e-4c9d-a739-96c21d673927)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>Your application cannot mix synchronous and asynchronous methods for a particular request.</source>
          <target state="translated">응용 프로그램 특정 요청에 대 한 동기 및 비동기 메서드를 혼합할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>If you call the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph> method, you must use the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph> method to retrieve the response.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph> 사용 해야 합니다는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph> 메서드 응답을 검색 합니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>&amp;#91;<ph id="ph1">\&lt;</ph>topic://conUsingNetworkTracing&gt;&amp;#93;<ept id="p1">](http://msdn.microsoft.com/library/e993b7c3-087f-45d8-9c02-9dded936d804)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt> &amp;#91; <ph id="ph1">\&lt;</ph>topic://conUsingNetworkTracing &gt;&amp;#93;<ept id="p1">](http://msdn.microsoft.com/library/e993b7c3-087f-45d8-9c02-9dded936d804)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph> method to make an asynchronous request for an Internet resource.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph> 인터넷 리소스에 대 한 비동기 요청을 만드는 메서드와 알림이 있습니다.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>In the case of asynchronous requests, it is the responsibility of the client application to implement its own time-out mechanism.</source>
          <target state="translated">비동기 요청의 경우 것은 제한 시간 메커니즘을 구현 하는 클라이언트 응용 프로그램의 책임입니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>The following code example shows how to do it.</source>
          <target state="translated">다음 코드 예제에서는 작업을 수행 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>The stream is already in use by a previous call to <ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /&gt;</ph></source>
          <target state="translated">이 스트림은 <ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /&gt;</ph>에 대한 이전 호출에서 이미 사용 중입니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.TransferEncoding" /&gt;</ph> is set to a value and <ph id="ph2">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph> is <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.TransferEncoding" /&gt;</ph>이 값으로 설정되었으며 <ph id="ph2">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph>가 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>The thread pool is running out of threads.</source>
          <target state="translated">스레드 풀에 스레드가 부족합니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.Method" /&gt;</ph> is GET or HEAD, and either <ph id="ph2">&lt;see cref="P:System.Net.HttpWebRequest.ContentLength" /&gt;</ph> is greater than zero or <ph id="ph3">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph> is <ph id="ph4">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.Method" /&gt;</ph>가 GET 또는 HEAD이고 <ph id="ph2">&lt;see cref="P:System.Net.HttpWebRequest.ContentLength" /&gt;</ph>가 0보다 크거나 <ph id="ph3">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph>가 <ph id="ph4">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.KeepAlive" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /&gt;</ph> is <ph id="ph4">&lt;see langword="false" /&gt;</ph>, and either <ph id="ph5">&lt;see cref="P:System.Net.HttpWebRequest.ContentLength" /&gt;</ph> is -1, <ph id="ph6">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph> is <ph id="ph7">&lt;see langword="false" /&gt;</ph> and <ph id="ph8">&lt;see cref="P:System.Net.HttpWebRequest.Method" /&gt;</ph> is POST or PUT.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.KeepAlive" /&gt;</ph>가 <ph id="ph2">&lt;see langword="true" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /&gt;</ph>이 <ph id="ph4">&lt;see langword="false" /&gt;</ph>, <ph id="ph5">&lt;see cref="P:System.Net.HttpWebRequest.ContentLength" /&gt;</ph>가 -1, <ph id="ph6">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph>가 <ph id="ph7">&lt;see langword="false" /&gt;</ph>, 그리고 <ph id="ph8">&lt;see cref="P:System.Net.HttpWebRequest.Method" /&gt;</ph>가 POST 또는 PUT입니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.HttpWebRequest" /&gt;</ph> has an entity body but the <ph id="ph2">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /&gt;</ph> method is called without calling the <ph id="ph3">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.HttpWebRequest" /&gt;</ph>에 엔터티 본문이 있지만 <ph id="ph3">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /&gt;</ph> 메서드를 호출하지 않고 <ph id="ph2">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.ContentLength" /&gt;</ph> is greater than zero, but the application does not write all of the promised data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.ContentLength" /&gt;</ph>가 0보다 크지만 응용 프로그램에서 약속된 모든 데이터를 쓰지 않습니다.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.Abort" /&gt;</ph> was previously called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.Abort" /&gt;</ph>가 이전에 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.ClientCertificates">
          <source>Gets or sets the collection of security certificates that are associated with this request.</source>
          <target state="translated">이 요청과 관련된 보안 인증서의 컬렉션을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ClientCertificates">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /&gt;</ph> that contains the security certificates associated with this request.</source>
          <target state="translated">이 요청과 연결된 보안 인증서를 포함하는 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ClientCertificates">
          <source>An application can add a certificate to a collection, but might not have access rights to it.</source>
          <target state="translated">응용 프로그램 컬렉션에 인증서를 추가할 수 있지만에 액세스 권한이 없을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ClientCertificates">
          <source>To use a certificate contained in the collection, the application must have the same access rights as the entity that issued the certificate.</source>
          <target state="translated">컬렉션에 포함 된 인증서를 사용 하려면 응용 프로그램에 인증서를 발급 한 엔터티로 동일한 액세스 권한이 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ClientCertificates">
          <source>The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible.</source>
          <target state="translated">프레임 워크 만들어질 때 SSL 세션을 캐시 하 고 가능한 경우 새 요청에 대 한 캐시 된 세션을 사용 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ClientCertificates">
          <source>When attempting to reuse an SSL session, the Framework uses the first element of <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ClientCertificates%2A&gt;</ph> (if there is one), or tries to reuse an anonymous sessions if <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.ClientCertificates%2A&gt;</ph> is empty.</source>
          <target state="translated">프레임 워크의 첫 번째 요소를 사용 하 여 SSL 세션을 다시 사용을 시도할 때 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ClientCertificates%2A&gt;</ph> (있는지 하나), 하는 경우 익명 세션을 다시 사용 하려고 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.ClientCertificates%2A&gt;</ph> 비어 있습니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ClientCertificates">
          <source>For performance reasons, you shouldn't add a client certificate to a <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> unless you know the server will ask for it.</source>
          <target state="translated">클라이언트 인증서를 추가 하면 안 성능상의 이유로 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 확신할 수 서버 요구 합니다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ClientCertificates">
          <source>For a code example illustrating how to enumerate the certificates in the client certificate store, see the <ph id="ph1">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection&gt;</ph> class.</source>
          <target state="translated">클라이언트 인증서 저장소에 인증서를 열거 하는 방법을 보여 주는 코드 예제를 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.ClientCertificates">
          <source>The value specified for a set operation is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Set 작업에 대해 지정된 값이 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Connection">
          <source>Gets or sets the value of the <ph id="ph1">&lt;see langword="Connection" /&gt;</ph> HTTP header.</source>
          <target state="translated">HTTP <ph id="ph1">&lt;see langword="Connection" /&gt;</ph> 헤더의 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Connection">
          <source>The value of the <ph id="ph1">&lt;see langword="Connection" /&gt;</ph> HTTP header.</source>
          <target state="translated">HTTP <ph id="ph1">&lt;see langword="Connection" /&gt;</ph> 헤더의 값입니다.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Connection">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Connection">
          <source>The request sends the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Connection%2A&gt;</ph> property to the Internet resource as the <ph id="ph2">`Connection`</ph> HTTP header.</source>
          <target state="translated">요청을 보냅니다는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Connection%2A&gt;</ph> 속성으로 인터넷 리소스에는 <ph id="ph2">`Connection`</ph> HTTP 헤더입니다.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Connection">
          <source>If the value of the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.KeepAlive%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, the value "Keep-alive" is appended to the end of the <ph id="ph3">`Connection`</ph> header.</source>
          <target state="translated">하는 경우의 값은 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.KeepAlive%2A&gt;</ph> 속성은 <ph id="ph2">`true`</ph>, "연결 유지" 값의 끝에 추가 됩니다는 <ph id="ph3">`Connection`</ph> 헤더입니다.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Connection">
          <source>To clear the <ph id="ph1">`Connection`</ph> HTTP header, set the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.Connection%2A&gt;</ph> property to <ph id="ph3">`null`</ph>.</source>
          <target state="translated">지우려면는 <ph id="ph1">`Connection`</ph> HTTP 헤더를 설정할는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.Connection%2A&gt;</ph> 속성을 <ph id="ph3">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Connection">
          <source>Changing the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Connection%2A&gt;</ph> property after the request has been started by calling the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph>, or <ph id="ph5">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph> method throws an <ph id="ph6">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">변경 된 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Connection%2A&gt;</ph> 호출 하 여 요청이 시작 된 후 속성은 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph>, 또는 <ph id="ph5">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph> 메서드가 throw는 <ph id="ph6">&lt;xref:System.InvalidOperationException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Connection">
          <source>The value for this property is stored in <ph id="ph1">&lt;xref:System.Net.WebHeaderCollection&gt;</ph>.</source>
          <target state="translated">이 속성의 값은 <ph id="ph1">&lt;xref:System.Net.WebHeaderCollection&gt;</ph>에 저장됩니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Connection">
          <source>If WebHeaderCollection is set, the property value is lost.</source>
          <target state="translated">WebHeaderCollection이 설정되면 속성 값이 손실됩니다.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Connection">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Connection%2A&gt;</ph> property to set the value of the Connection HTTP Header.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Connection%2A&gt;</ph> 속성 연결 HTTP 헤더의 값을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Connection">
          <source>The value of <ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.Connection" /&gt;</ph> is set to Keep-alive or Close.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.Connection" /&gt;</ph>의 값이 Keep-alive 또는 Close로 설정되어 있습니다.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.ConnectionGroupName">
          <source>Gets or sets the name of the connection group for the request.</source>
          <target state="translated">요청에 대한 연결 그룹의 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ConnectionGroupName">
          <source>The name of the connection group for this request.</source>
          <target state="translated">이 요청에 대한 연결 그룹의 이름입니다.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ConnectionGroupName">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ConnectionGroupName">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ConnectionGroupName%2A&gt;</ph> property enables you to associate a request with a connection group.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ConnectionGroupName%2A&gt;</ph> 속성을 사용 하면 요청 연결 그룹에 연결할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ConnectionGroupName">
          <source>This is useful when your application makes requests to one server for different users, such as a Web site that retrieves customer information from a database server.</source>
          <target state="translated">응용 프로그램에서는 요청을 한 서버와 데이터베이스 서버에서 고객 정보를 검색 하는 웹 사이트 같은 다른 사용자에 대 한 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ConnectionGroupName">
          <source>The following code example show how to use user information to form a connection group, assuming that the variables <ph id="ph1">`username`</ph>, <ph id="ph2">`password`</ph>, and <ph id="ph3">`domain`</ph> are set by the application before this code is called.</source>
          <target state="translated">다음 코드 예제에서는 연결 그룹을 가정 하 고 구성 하기 위해 사용자 정보를 사용 하는 방법을 보여 변수 <ph id="ph1">`username`</ph>, <ph id="ph2">`password`</ph>, 및 <ph id="ph3">`domain`</ph> 이 코드를 호출 하기 전에 응용 프로그램에 의해 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ConnectionGroupName">
          <source>Each connection group creates additional connections for a server.</source>
          <target state="translated">연결 그룹에 각 서버에 대 한 추가 연결을 만듭니다.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ConnectionGroupName">
          <source>This may result in exceeding the number of connections set by the <ph id="ph1">&lt;see cref="P:System.Net.ServicePoint.ConnectionLimit" /&gt;</ph> property for that server.</source>
          <target state="translated">으로 설정 된 연결 수를 초과이 될 수 있습니다는 <ph id="ph1">&lt;see cref="P:System.Net.ServicePoint.ConnectionLimit" /&gt;</ph> 해당 서버에 대 한 속성.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.ContentLength">
          <source>Gets or sets the <ph id="ph1">&lt;see langword="Content-length" /&gt;</ph> HTTP header.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Content-length" /&gt;</ph> HTTP 헤더를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContentLength">
          <source>The number of bytes of data to send to the Internet resource.</source>
          <target state="translated">인터넷 리소스에 보낼 데이터의 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContentLength">
          <source>The default is -1, which indicates the property has not been set and that there is no request data to send.</source>
          <target state="translated">기본값은 -1로, 해당 속성이 설정되지 않았으며 보낼 요청 데이터가 없음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContentLength">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> property contains the value to send as the <ph id="ph2">`Content-length`</ph> HTTP header with the request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> 속성으로 보낼 값이 포함 된 <ph id="ph2">`Content-length`</ph> 요청과 함께 HTTP 헤더입니다.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContentLength">
          <source>Any value other than -1 in the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> property indicates that the request uploads data and that only methods that upload data are allowed to be set in the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.Method%2A&gt;</ph> property.</source>
          <target state="translated">에-1이 아닌 모든 값의 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> 속성 요청 데이터를 업로드 하 고 데이터를 업로드 하는 방법에만 설정할 수 있도록 나타냅니다는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.Method%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContentLength">
          <source>After the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> property is set to a value, that number of bytes must be written to the request stream that is returned by calling the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> method or both the <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph> and the <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.EndGetRequestStream%2A&gt;</ph> methods.</source>
          <target state="translated">후의 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> 값 속성은 바이트를 써야 합니다를 호출 하 여 반환 되는 요청 스트림에 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> 메서드 또는 둘 다는 <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.EndGetRequestStream%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContentLength">
          <source>The value for this property is stored in <ph id="ph1">&lt;xref:System.Net.WebHeaderCollection&gt;</ph>.</source>
          <target state="translated">이 속성의 값은 <ph id="ph1">&lt;xref:System.Net.WebHeaderCollection&gt;</ph>에 저장됩니다.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContentLength">
          <source>If WebHeaderCollection is set, the property value is lost.</source>
          <target state="translated">WebHeaderCollection이 설정되면 속성 값이 손실됩니다.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContentLength">
          <source>The following code example sets the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> property to the length of the string being posted.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> 게시 되는 문자열의 길이 속성입니다.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.ContentLength">
          <source>The request has been started by calling the <ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.GetRequestStream" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Net.HttpWebRequest.GetResponse" /&gt;</ph>, or <ph id="ph4">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.GetRequestStream" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Net.HttpWebRequest.GetResponse" /&gt;</ph> 또는 <ph id="ph4">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /&gt;</ph> 메서드를 호출하여 요청이 시작되었습니다.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.ContentLength">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.ContentLength" /&gt;</ph> value is less than 0.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.ContentLength" /&gt;</ph> 값이 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.ContentType">
          <source>Gets or sets the value of the <ph id="ph1">&lt;see langword="Content-type" /&gt;</ph> HTTP header.</source>
          <target state="translated">HTTP <ph id="ph1">&lt;see langword="Content-type" /&gt;</ph> 헤더의 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContentType">
          <source>The value of the <ph id="ph1">&lt;see langword="Content-type" /&gt;</ph> HTTP header.</source>
          <target state="translated">HTTP <ph id="ph1">&lt;see langword="Content-type" /&gt;</ph> 헤더의 값입니다.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContentType">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContentType">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentType%2A&gt;</ph> property contains the media type of the request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentType%2A&gt;</ph> 속성 요청의 미디어 형식을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContentType">
          <source>Values assigned to the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentType%2A&gt;</ph> property replace any existing contents when the request sends the <ph id="ph2">`Content-type`</ph> HTTP header.</source>
          <target state="translated">에 할당 된 값은 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentType%2A&gt;</ph> 속성 요청을 보낼 때 기존의 모든 콘텐츠를 대체는 <ph id="ph2">`Content-type`</ph> HTTP 헤더입니다.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContentType">
          <source>To clear the <ph id="ph1">`Content-type`</ph> HTTP header, set the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.ContentType%2A&gt;</ph> property to <ph id="ph3">`null`</ph>.</source>
          <target state="translated">지우려면는 <ph id="ph1">`Content-type`</ph> HTTP 헤더를 설정할는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.ContentType%2A&gt;</ph> 속성을 <ph id="ph3">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContentType">
          <source>The value for this property is stored in <ph id="ph1">&lt;xref:System.Net.WebHeaderCollection&gt;</ph> .</source>
          <target state="translated">이 속성에 대 한 값에 저장 됩니다 <ph id="ph1">&lt;xref:System.Net.WebHeaderCollection&gt;</ph> 합니다.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContentType">
          <source>If <ph id="ph1">&lt;xref:System.Net.WebHeaderCollection&gt;</ph> is set, the property value is lost.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Net.WebHeaderCollection&gt;</ph> 설정 속성 값이 손실 됩니다.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContentType">
          <source>The following code example sets the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentType%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentType%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.ContinueDelegate">
          <source>Gets or sets the delegate method called when an HTTP 100-continue response is received from the Internet resource.</source>
          <target state="translated">인터넷 리소스에서 HTTP 100-continue 응답을 받을 때 호출된 대리자 메서드를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContinueDelegate">
          <source>A delegate that implements the callback method that executes when an HTTP Continue response is returned from the Internet resource.</source>
          <target state="translated">인터넷 리소스에서 HTTP 계속 응답이 반환될 때 실행하는 콜백 메서드를 구현하는 대리자입니다.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContinueDelegate">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContinueDelegate">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContinueDelegate%2A&gt;</ph> property specifies the callback method to call when the client receives a 100-Continue response.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContinueDelegate%2A&gt;</ph> 클라이언트가 받을 때 호출할 콜백 메서드를 지정 하는 속성-응답을 계속 합니다.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContinueDelegate">
          <source>When the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContinueDelegate%2A&gt;</ph> property is set, the client calls the delegate whenever protocol responses of type <ph id="ph2">&lt;xref:System.Net.HttpStatusCode.Continue?displayProperty=nameWithType&gt;</ph> (100) are received.</source>
          <target state="translated">때는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContinueDelegate%2A&gt;</ph> 속성이 설정 되어 있으면 클라이언트가 호출할 대리자 형식의 응답 때마다 프로토콜 <ph id="ph2">&lt;xref:System.Net.HttpStatusCode.Continue?displayProperty=nameWithType&gt;</ph> (100) 수신 됩니다.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContinueDelegate">
          <source>This is useful if you want the client to display the status of the data being received from the Internet resource.</source>
          <target state="translated">클라이언트는 인터넷 리소스에서 수신 중인 데이터의 상태를 표시 하려는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.ContinueTimeout">
          <source>Gets or sets a timeout, in milliseconds, to wait until the 100-Continue is received from the server.</source>
          <target state="translated">서버에서 100-Continue가 수신될 때까지 기다릴 제한 시간(밀리초)을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContinueTimeout">
          <source>The timeout, in milliseconds, to wait until the 100-Continue is received.</source>
          <target state="translated">100-Continue가 수신될 때까지 기다릴 제한 시간(밀리초)입니다.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContinueTimeout">
          <source>If the 100-Continue response is received before the timeout expires, the entity body can be sent.</source>
          <target state="translated">경우는 100-계속 응답 엔터티 본문을 보낼 수 있습니다, 제한 시간이 만료 되기 전에 수신 됩니다.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.CookieContainer">
          <source>Gets or sets the cookies associated with the request.</source>
          <target state="translated">이 요청과 관련된 쿠키를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.CookieContainer">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.CookieContainer" /&gt;</ph> that contains the cookies associated with this request.</source>
          <target state="translated">이 요청과 관련된 쿠키가 들어 있는 A <ph id="ph1">&lt;see cref="T:System.Net.CookieContainer" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.CookieContainer">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.CookieContainer%2A&gt;</ph> property provides an instance of the <ph id="ph2">&lt;xref:System.Net.CookieContainer&gt;</ph> class that contains the cookies associated with this request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.CookieContainer%2A&gt;</ph> 의 인스턴스를 제공 하는 속성은 <ph id="ph2">&lt;xref:System.Net.CookieContainer&gt;</ph> 이 요청과 관련 된 쿠키를 포함 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.CookieContainer">
          <source><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.CookieContainer%2A&gt;</ph> is <ph id="ph2">`null`</ph> by default.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.CookieContainer%2A&gt;</ph> <ph id="ph2">`null`</ph> 기본적으로 합니다.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.CookieContainer">
          <source>You must assign a <ph id="ph1">&lt;xref:System.Net.CookieContainer&gt;</ph> object to the property to have cookies returned in the <ph id="ph2">&lt;xref:System.Net.HttpWebResponse.Cookies%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Net.HttpWebResponse&gt;</ph> returned by the <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph> method.</source>
          <target state="translated">할당 해야는 <ph id="ph1">&lt;xref:System.Net.CookieContainer&gt;</ph> 에 쿠키가 반환 되는 속성에는 개체는 <ph id="ph2">&lt;xref:System.Net.HttpWebResponse.Cookies%2A&gt;</ph> 속성은 <ph id="ph3">&lt;xref:System.Net.HttpWebResponse&gt;</ph> 에서 반환 되는 <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.CookieContainer">
          <source>For security reasons, cookies are disabled by default.</source>
          <target state="translated">쿠키는 보안상의 이유로 기본적으로 비활성화 됩니다.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.CookieContainer">
          <source>If you want to use cookies, use the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.CookieContainer%2A&gt;</ph> property to enable cookies.</source>
          <target state="translated">사용 하 여 쿠키를 사용 하려는 경우는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.CookieContainer%2A&gt;</ph> 속성을 사용 하는 쿠키입니다.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.CookieContainer">
          <source>The following code example sends a request to a URL and displays the cookies returned in the response.</source>
          <target state="translated">다음 코드 예제에서는 URL로 요청을 보내고 응답에서 반환 된 쿠키가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Credentials">
          <source>Gets or sets authentication information for the request.</source>
          <target state="translated">요청에 대한 인증 정보를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Credentials">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.ICredentials" /&gt;</ph> that contains the authentication credentials associated with the request.</source>
          <target state="translated">요청과 관련된 인증 자격 증명이 들어 있는 <ph id="ph1">&lt;see cref="T:System.Net.ICredentials" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Credentials">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Credentials">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Credentials%2A&gt;</ph> property contains authentication information to identify the maker of the request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Credentials%2A&gt;</ph> 속성 작성자에 요청을 식별 하는 인증 정보를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Credentials">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Credentials%2A&gt;</ph> property can be either a <ph id="ph2">&lt;xref:System.Net.NetworkCredential&gt;</ph>, in which case the user, password, and domain information contained in the <ph id="ph3">&lt;xref:System.Net.NetworkCredential&gt;</ph> object is used to authenticate the request, or it can be a <ph id="ph4">&lt;xref:System.Net.CredentialCache&gt;</ph>, in which case the Uniform Resource Identifier (URI) of the request is used to determine the user, password, and domain information to use to authenticate the request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Credentials%2A&gt;</ph> 속성 일 수 있습니다는 <ph id="ph2">&lt;xref:System.Net.NetworkCredential&gt;</ph>,이 경우 사용자, 암호에 포함 된 도메인 정보는 <ph id="ph3">&lt;xref:System.Net.NetworkCredential&gt;</ph> 개체를 사용 하 여 요청을 인증 하는 것이 또는 <ph id="ph4">&lt;xref:System.Net.CredentialCache&gt;</ph>있으며이 경우 Uniform Resource 요청의 식별자 (URI)는 요청을 인증 하는 데 사용자, 암호 및 도메인 정보를 확인 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Credentials">
          <source>In most client scenarios, you should use the <ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph> property, which contains the credentials of the currently logged on user.</source>
          <target state="translated">대부분의 클라이언트 시나리오에서 사용 해야는 <ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph> 현재 로그온된 한 사용자의 자격 증명을 포함 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Credentials">
          <source>To do this, set the <ph id="ph1">&lt;xref:System.Net.WebClient.UseDefaultCredentials%2A&gt;</ph> property to <ph id="ph2">`true`</ph> instead of setting this property.</source>
          <target state="translated">이 위해 설정 된 <ph id="ph1">&lt;xref:System.Net.WebClient.UseDefaultCredentials%2A&gt;</ph> 속성을 <ph id="ph2">`true`</ph> 이 속성을 설정 하는 대신 합니다.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Credentials">
          <source>If the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> class is being used in a middle-tier application, such as an ASP.NET application, the credentials in the <ph id="ph2">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph> property belong to the account running the ASP page (the server-side credentials).</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 클래스는 ASP.NET 응용 프로그램에서 자격 증명 같은 중간 계층 응용 프로그램에서 사용 되는 <ph id="ph2">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph> 속성이 ASP 페이지 (서버 쪽 자격 증명)를 실행 하는 계정에 속해야 합니다.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Credentials">
          <source>Typically, you would set this property to the credentials of the client on whose behalf the request is made.</source>
          <target state="translated">일반적으로이 속성을 설정한 자격 증명의 클라이언트 요청이 수행 됩니다.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Credentials">
          <source>The NTLM authentication scheme cannot be used to impersonate another user.</source>
          <target state="translated">다른 사용자로 가장할 NTLM 인증 체계를 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Credentials">
          <source>Kerberos must be specially configured to support impersonation.</source>
          <target state="translated">Kerberos는 가장을 지원 하기 위해 특별 하 게 구성 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Credentials">
          <source>To restrict HttpWebRequest to one or more authentication methods, use the <ph id="ph1">&lt;xref:System.Net.CredentialCache&gt;</ph> class and bind your credentials to one or more authentication schemes</source>
          <target state="translated">하나 이상의 인증 방법에 HttpWebRequest를 제한 하려면 사용 된 <ph id="ph1">&lt;xref:System.Net.CredentialCache&gt;</ph> 클래스 및 자격 증명 하나 이상의 인증 스키마에 바인딩</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Credentials">
          <source>Supported authentication schemes include Digest, Negotiate, Kerberos, NTLM, and Basic.</source>
          <target state="translated">지원 되는 인증 체계는 다이제스트, Negotiate, Kerberos, NTLM, 및 Basic 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Credentials">
          <source>For security reasons, when automatically following redirects, store the credentials that you want to be included in the redirect in a <ph id="ph1">&lt;xref:System.Net.CredentialCache&gt;</ph> and assign it to this property.</source>
          <target state="translated">보안상의 이유로 리디렉션을 자동으로 수행할 때에서 리디렉션에 포함 하려는 자격 증명을 저장 한 <ph id="ph1">&lt;xref:System.Net.CredentialCache&gt;</ph> 이 속성에 할당 합니다.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Credentials">
          <source>This property will automatically be set to <ph id="ph1">`null`</ph> upon redirection if it contains anything except a <ph id="ph2">&lt;xref:System.Net.CredentialCache&gt;</ph>.</source>
          <target state="translated">이 속성 자동으로 설정 됩니다 <ph id="ph1">`null`</ph> 리디렉션 제외 하 고 포함 된 경우에 <ph id="ph2">&lt;xref:System.Net.CredentialCache&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Credentials">
          <source>Having this property value be automatically set to <ph id="ph1">`null`</ph> under those conditions prevents credentials from being sent to any unintended destination.</source>
          <target state="translated">이 속성 값을 갖는 자동 설정 <ph id="ph1">`null`</ph> 이러한 조건에서 자격 증명을 의도 하지 않은 임의의 대상에 보낼 수 없습니다.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Credentials">
          <source>The following code example sets the credentials for a request.</source>
          <target state="translated">다음 코드 예제에서는 요청에 대 한 자격 증명을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Date">
          <source>Get or set the <ph id="ph1">&lt;see langword="Date" /&gt;</ph> HTTP header value to use in an HTTP request.</source>
          <target state="translated">HTTP 요청에 사용할 <ph id="ph1">&lt;see langword="Date" /&gt;</ph> HTTP 헤더 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Date">
          <source>The Date header value in the HTTP request.</source>
          <target state="translated">HTTP 요청의 Date 헤더 값입니다.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Date">
          <source>If the Date header is <ph id="ph1">`null`</ph>, then the return value will be set to <ph id="ph2">&lt;xref:System.DateTime.MinValue?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Date 헤더 이면 <ph id="ph1">`null`</ph>, 반환 값을으로 설정 됩니다 <ph id="ph2">&lt;xref:System.DateTime.MinValue?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Date">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Date%2A&gt;</ph> property is a standard <ph id="ph2">&lt;xref:System.DateTime?displayProperty=nameWithType&gt;</ph> object and can contain a <ph id="ph3">&lt;xref:System.DateTimeKind?displayProperty=nameWithType&gt;</ph> field of <ph id="ph4">&lt;xref:System.DateTimeKind.Local?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.DateTimeKind.Utc?displayProperty=nameWithType&gt;</ph>, or <ph id="ph6">&lt;xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Date%2A&gt;</ph> 속성은 표준 <ph id="ph2">&lt;xref:System.DateTime?displayProperty=nameWithType&gt;</ph> 개체를 포함할 수는 <ph id="ph3">&lt;xref:System.DateTimeKind?displayProperty=nameWithType&gt;</ph> 필드 <ph id="ph4">&lt;xref:System.DateTimeKind.Local?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.DateTimeKind.Utc?displayProperty=nameWithType&gt;</ph>, 또는 <ph id="ph6">&lt;xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Date">
          <source>Any kind of time can be set when using the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Date%2A&gt;</ph> property.</source>
          <target state="translated">사용 하는 경우 여러 종류의 시간을 설정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Date%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Date">
          <source>If <ph id="ph1">&lt;xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType&gt;</ph> is set or retrieved, the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.Date%2A&gt;</ph> property is assumed to be <ph id="ph3">&lt;xref:System.DateTimeKind.Local?displayProperty=nameWithType&gt;</ph> (local time).</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType&gt;</ph> 를 설정 하거나 검색 된 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.Date%2A&gt;</ph> 속성으로 간주 됩니다 <ph id="ph3">&lt;xref:System.DateTimeKind.Local?displayProperty=nameWithType&gt;</ph> (현지 시간).</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Date">
          <source>The classes in the <ph id="ph1">&lt;xref:System.Net&gt;</ph> namespace always write it out the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.Date%2A&gt;</ph> property on the wire during transmission in standard form using GMT (Utc) format.</source>
          <target state="translated">클래스는 <ph id="ph1">&lt;xref:System.Net&gt;</ph> 네임 스페이스 항상 //microsoft.samples.biztalk.wcf.basichttpsendadapter.basichttpwcfserviceconsuming는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.Date%2A&gt;</ph> GMT (Utc) 형식을 사용 하 여 표준 형태로 전송 하는 동안 통신 중에 속성입니다.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Date">
          <source>If the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Date%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.DateTime.MinValue?displayProperty=nameWithType&gt;</ph>, then the <ph id="ph3">`Date`</ph> HTTP header is removed from the <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.Headers%2A&gt;</ph> property and the <ph id="ph5">&lt;xref:System.Net.WebHeaderCollection&gt;</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Date%2A&gt;</ph> 속성이 <ph id="ph2">&lt;xref:System.DateTime.MinValue?displayProperty=nameWithType&gt;</ph>, 하면 <ph id="ph3">`Date`</ph> HTTP 헤더에서 제거 되는 <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.Headers%2A&gt;</ph> 속성 및 <ph id="ph5">&lt;xref:System.Net.WebHeaderCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Date">
          <source>If the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Date%2A&gt;</ph> property is <ph id="ph2">&lt;xref:System.DateTime.MinValue?displayProperty=nameWithType&gt;</ph>, this indicates that the <ph id="ph3">`Date`</ph> HTTP header is not included in the <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.Headers%2A&gt;</ph> property and the <ph id="ph5">&lt;xref:System.Net.WebHeaderCollection&gt;</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Date%2A&gt;</ph> 속성은 <ph id="ph2">&lt;xref:System.DateTime.MinValue?displayProperty=nameWithType&gt;</ph>, 나타냅니다는 <ph id="ph3">`Date`</ph> HTTP 헤더에 포함 되지 않습니다는 <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.Headers%2A&gt;</ph> 속성 및 <ph id="ph5">&lt;xref:System.Net.WebHeaderCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Date">
          <source>The value for this property is stored in <ph id="ph1">&lt;xref:System.Net.WebHeaderCollection&gt;</ph>.</source>
          <target state="translated">이 속성의 값은 <ph id="ph1">&lt;xref:System.Net.WebHeaderCollection&gt;</ph>에 저장됩니다.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Date">
          <source>If WebHeaderCollection is set, the property value is lost.</source>
          <target state="translated">WebHeaderCollection이 설정되면 속성 값이 손실됩니다.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Date">
          <source>If the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Date%2A&gt;</ph> is set and an attempt is made to send a <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> with no body, then a <ph id="ph3">&lt;xref:System.Net.ProtocolViolationException?displayProperty=nameWithType&gt;</ph> will be thrown by the <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Net.HttpWebRequest.EndGetResponse%2A&gt;</ph> methods.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Date%2A&gt;</ph> 설정 되어 전송 하려고 시도 하 고는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 본문이 없는 경우 <ph id="ph3">&lt;xref:System.Net.ProtocolViolationException?displayProperty=nameWithType&gt;</ph> 의해 throw 됩니다는 <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph>, 및 <ph id="ph6">&lt;xref:System.Net.HttpWebRequest.EndGetResponse%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.DefaultCachePolicy">
          <source>Gets or sets the default cache policy for this request.</source>
          <target state="translated">이 요청에 대한 기본 캐시 정책을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.DefaultCachePolicy">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.Cache.HttpRequestCachePolicy" /&gt;</ph> that specifies the cache policy in effect for this request when no other policy is applicable.</source>
          <target state="translated">다른 정책을 적용할 수 없을 때 이 요청에 대해 적용할 캐시 정책을 지정하는 <ph id="ph1">&lt;see cref="T:System.Net.Cache.HttpRequestCachePolicy" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.DefaultCachePolicy">
          <source>Setting this property registers the specified policy for the HTTP and HTTPS schemes.</source>
          <target state="translated">HTTP 및 HTTPS 스키마에 대 한 지정 된 정책을 등록이 속성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.DefaultCachePolicy">
          <source>This policy is used for this request if:</source>
          <target state="translated">이 정책은 경우이 요청에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.DefaultCachePolicy">
          <source>There is no <ph id="ph1">&lt;xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=nameWithType&gt;</ph> property specified for this request.</source>
          <target state="translated">없는 <ph id="ph1">&lt;xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=nameWithType&gt;</ph> 이 요청에 대해 지정 된 속성입니다.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.DefaultCachePolicy">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.DefaultCachePolicy">
          <source>The machine and application configuration files do not specify a cache policy that is applicable to the Uniform Resource Identifier (URI) used to create this request.</source>
          <target state="translated">시스템 및 응용 프로그램 구성 파일을이 요청을 만드는 데 사용 하는 식별자 URI (Uniform Resource) 적용할 수 있는 캐시 정책을 지정 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.DefaultCachePolicy">
          <source>The cache policy determines whether the requested resource can be taken from a cache instead of sending the request to the resource host computer.</source>
          <target state="translated">캐시 정책을 리소스 호스트 컴퓨터에 요청을 보내는 대신 캐시에서 요청 된 리소스를 가져올 수 있는지 여부를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.DefaultCachePolicy">
          <source>A copy of a resource is only added to the cache if the response stream for the resource is retrieved and read to the end of the stream.</source>
          <target state="translated">리소스에 대 한 응답 스트림을 검색 하는 스트림의 끝에 대 한 읽기 경우에 리소스의 복사본을 캐시에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.DefaultCachePolicy">
          <source>So another request for the same resource could use a cached copy, depending on the cache policy level for this request.</source>
          <target state="translated">이므로 동일한 리소스에 대 한 다른 요청에는이 요청에 대 한 캐시 정책 수준에 따라 캐시 된 복사본을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.DefaultCachePolicy">
          <source>for unrestricted access to network resources.</source>
          <target state="translated">네트워크 리소스에 대 한 무제한 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.DefaultCachePolicy">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.DefaultMaximumErrorResponseLength">
          <source>Gets or sets the default maximum length of an HTTP error response.</source>
          <target state="translated">HTTP 오류 응답의 기본 최대 길이를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.DefaultMaximumErrorResponseLength">
          <source>The default maximum length of an HTTP error response.</source>
          <target state="translated">HTTP 오류 응답의 기본 최대 길이입니다.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.DefaultMaximumErrorResponseLength">
          <source>The value is less than 0 and is not equal to -1.</source>
          <target state="translated">값이 -1이 아니고 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.DefaultMaximumResponseHeadersLength">
          <source>Gets or sets the default for the <ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength" /&gt;</ph> 속성에 대한 기본값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.DefaultMaximumResponseHeadersLength">
          <source>The length, in kilobytes (1024 bytes), of the default maximum for response headers received.</source>
          <target state="translated">받은 응답 헤더의 기본 최대 길이이며 킬로바이트(1024바이트) 단위입니다.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.DefaultMaximumResponseHeadersLength">
          <source>The default configuration file sets this value to 64 kilobytes.</source>
          <target state="translated">기본 구성 파일에서는 이 값을 64KB로 설정합니다.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.DefaultMaximumResponseHeadersLength">
          <source>The length of the response header received the response status line and any extra control characters that are received as part of HTTP protocol.</source>
          <target state="translated">응답 상태 표시줄 및 모든 추가 제어 문자가 HTTP 프로토콜의 일부로 받은 응답 헤더의 길이 받았습니다.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.DefaultMaximumResponseHeadersLength">
          <source>A value of -1 means no limit is imposed on the response headers received; a value of 0 means that all requests fail.</source>
          <target state="translated">값이-1 이면; 받은 응답 헤더에 제한 되지 않습니다 0은 모든 요청에 실패 하는 값입니다.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.DefaultMaximumResponseHeadersLength">
          <source>This value can also be changed in the configuration file.</source>
          <target state="translated">구성 파일에서이 값을 변경할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.DefaultMaximumResponseHeadersLength">
          <source>The impact of this property can be overridden by setting the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.MaximumResponseHeadersLength%2A&gt;</ph> property on an instance of the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> class.</source>
          <target state="translated">이 속성의 영향을 설정 하 여 재정의할 수 있습니다는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.MaximumResponseHeadersLength%2A&gt;</ph> 의 인스턴스에 대 한 속성은 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.DefaultMaximumResponseHeadersLength">
          <source>The value is not equal to -1 and is less than zero.</source>
          <target state="translated">값이 -1이 아니고 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="T:System.Net.HttpWebRequest">
          <source>Ends an asynchronous request for a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object to use to write data.</source>
          <target state="translated">데이터를 쓰는 데 사용할 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 개체에 대한 비동기 요청을 종료합니다.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source>The pending request for a stream.</source>
          <target state="translated">스트림에 대한 보류 중인 요청입니다.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source>Ends an asynchronous request for a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object to use to write data.</source>
          <target state="translated">데이터를 쓰는 데 사용할 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 개체에 대한 비동기 요청을 종료합니다.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> to use to write request data.</source>
          <target state="translated">요청 데이터를 쓰는 데 사용할 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.EndGetRequestStream%2A&gt;</ph> method completes an asynchronous request for a stream that was started by the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.EndGetRequestStream%2A&gt;</ph> 의해 시작 된 스트림에 대 한 비동기 요청을 완료 하는 메서드는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source>After the <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> object has been returned, you can send data with the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> by using the <ph id="ph3">&lt;xref:System.IO.Stream.Write%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">이후에 <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> 반환 되었습니다. 개체를 사용 하 여 데이터를 보낼 수 있습니다는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 를 사용 하 여는 <ph id="ph3">&lt;xref:System.IO.Stream.Write%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source>You must set the value of the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> property before writing data to the stream.</source>
          <target state="translated">값을 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> 스트림에 데이터를 쓰기 전에 속성입니다.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source>You must call the <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A?displayProperty=nameWithType&gt;</ph> method to close the stream and release the connection for reuse.</source>
          <target state="translated">호출 해야 합니다는 <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A?displayProperty=nameWithType&gt;</ph> 메서드 스트림을 닫고 다시 사용에 대 한 연결을 해제 합니다.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source>Failure to close the stream causes your application to run out of connections.</source>
          <target state="translated">스트림이 닫기에 실패 하면 연결 되지 않을 수 있는 응용 프로그램.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>.NET Framework의 네트워크 추적<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.EndGetRequestStream%2A&gt;</ph> method to end an asynchronous request for a stream instance.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.EndGetRequestStream%2A&gt;</ph> 메서드를 stream 인스턴스로 대 한 비동기 요청을 끝냅니다.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source>The request did not complete, and no stream is available.</source>
          <target state="translated">요청이 완료되지 않았으며 스트림을 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> was not returned by the current instance from a call to <ph id="ph2">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph>가 <ph id="ph2">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /&gt;</ph>에 대한 호출에서 현재 인스턴스에 의해 반환되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source>This method was called previously using <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph>.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph>를 사용하여 이전에 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source><ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.Abort" /&gt;</ph> was previously called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.Abort" /&gt;</ph>가 이전에 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source>An error occurred while processing the request.</source>
          <target state="translated">이 요청을 처리하는 동안 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
          <source>The pending request for a stream.</source>
          <target state="translated">스트림에 대한 보류 중인 요청입니다.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
          <source>Ends an asynchronous request for a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object to use to write data and outputs the <ph id="ph2">&lt;see cref="T:System.Net.TransportContext" /&gt;</ph> associated with the stream.</source>
          <target state="translated">데이터를 쓰는 데 사용하는 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 개체에 대한 비동기 요청을 종료하고 해당 스트림과 연결된 <ph id="ph2">&lt;see cref="T:System.Net.TransportContext" /&gt;</ph>를 출력합니다.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> to use to write request data.</source>
          <target state="translated">요청 데이터를 쓰는 데 사용할 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.EndGetRequestStream%2A&gt;</ph> method completes an asynchronous request for a stream that was started by the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph> method and outputs the <ph id="ph3">&lt;xref:System.Net.TransportContext&gt;</ph> associated with the stream.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.EndGetRequestStream%2A&gt;</ph> 의해 시작 된 스트림에 대 한 비동기 요청을 완료 하는 메서드는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph> 메서드 및 출력의 <ph id="ph3">&lt;xref:System.Net.TransportContext&gt;</ph> 스트림과 연결 된입니다.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
          <source>After the <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> object has been returned, you can send data with the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> by using the <ph id="ph3">&lt;xref:System.IO.Stream.Write%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">이후에 <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> 반환 되었습니다. 개체를 사용 하 여 데이터를 보낼 수 있습니다는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 를 사용 하 여는 <ph id="ph3">&lt;xref:System.IO.Stream.Write%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
          <source>Some applications that use integrated Windows authentication with extended protection may need to be able to query the transport layer used by <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> in order to retrieve the channel binding token (CBT) from the underlying TLS channel.</source>
          <target state="translated">확장된 보호와 함께 Windows 통합된 인증을 사용 하는 일부 응용 프로그램에서 사용 하는 전송 계층을 쿼리할 수 해야 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 기본 TLS 채널의 (CBT)의 채널 바인딩 토큰을 검색 하기 위해.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> method provides access to this information for HTTP methods which have a request body (<ph id="ph2">`POST`</ph> and <ph id="ph3">`PUT`</ph> requests).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> 메서드 요청 본문을 포함 하는 HTTP 메서드에 대 한이 정보에 대 한 액세스 제공 (<ph id="ph2">`POST`</ph> 및 <ph id="ph3">`PUT`</ph> 요청)입니다.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
          <source>This is only needed if the application is implementing its own authentication and needs access to the CBT.</source>
          <target state="translated">응용 프로그램 자체 인증을 구현 하는 CBT에 액세스 해야 하는 경우에이 과정이 필요만.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
          <source>If an application needs to set the value of the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> property, then this must be done before retrieving the stream and writing data to it.</source>
          <target state="translated">응용 프로그램의 값을 설정 해야 하는 경우는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> 속성을 다음이 스트림을 검색 하 고 데이터를 쓰려면 하기 전에 수행 해야 합니다.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
          <source>You must call the <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A?displayProperty=nameWithType&gt;</ph> method to close the stream and release the connection for reuse.</source>
          <target state="translated">호출 해야 합니다는 <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A?displayProperty=nameWithType&gt;</ph> 메서드 스트림을 닫고 다시 사용에 대 한 연결을 해제 합니다.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
          <source>Failure to close the stream causes your application to run out of connections.</source>
          <target state="translated">스트림이 닫기에 실패 하면 연결 되지 않을 수 있는 응용 프로그램.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>.NET Framework의 네트워크 추적<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> was not returned by the current instance from a call to <ph id="ph2">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph>가 <ph id="ph2">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /&gt;</ph>에 대한 호출에서 현재 인스턴스에 의해 반환되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
          <source>This method was called previously using <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph>.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph>를 사용하여 이전에 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
          <source>The request did not complete, and no stream is available.</source>
          <target state="translated">요청이 완료되지 않았으며 스트림을 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
          <source><ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.Abort" /&gt;</ph> was previously called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.Abort" /&gt;</ph>가 이전에 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
          <source>An error occurred while processing the request.</source>
          <target state="translated">이 요청을 처리하는 동안 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
          <source>The pending request for a response.</source>
          <target state="translated">응답에 대한 보류 중인 요청입니다.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
          <source>Ends an asynchronous request to an Internet resource.</source>
          <target state="translated">인터넷 리소스에 대한 비동기 요청을 종료합니다.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.WebResponse" /&gt;</ph> that contains the response from the Internet resource.</source>
          <target state="translated">인터넷 리소스로부터의 응답이 들어 있는 <ph id="ph1">&lt;see cref="T:System.Net.WebResponse" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.EndGetResponse%2A&gt;</ph> method completes an asynchronous request for an Internet resource that was started by calling the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.EndGetResponse%2A&gt;</ph> 메서드를 호출 하 여 시작 된 인터넷 리소스에 대 한 비동기 요청을 완료 된 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
          <source>You must call the <ph id="ph1">&lt;xref:System.Net.HttpWebResponse.Close%2A&gt;</ph> method to close the stream and release the connection.</source>
          <target state="translated">호출 해야 합니다는 <ph id="ph1">&lt;xref:System.Net.HttpWebResponse.Close%2A&gt;</ph> 메서드를 스트림을 닫고 연결을 해제 합니다.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
          <source>Failure to do so may cause your application to run out of connections.</source>
          <target state="translated">이렇게 하지 않으면 연결 되지 않을 수 있는 응용 프로그램을 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>.NET Framework의 네트워크 추적<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.EndGetResponse%2A&gt;</ph> method to end an asynchronous request for an Internet resource.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.EndGetResponse%2A&gt;</ph> 메서드 인터넷 리소스에 대 한 비동기 요청을 끝냅니다.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
          <source>This method was called previously using <ph id="ph1">&lt;paramref name="asyncResult." /&gt;</ph></source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;paramref name="asyncResult." /&gt;</ph>를 사용하여 호출했습니다.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.ContentLength" /&gt;</ph> property is greater than 0 but the data has not been written to the request stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.ContentLength" /&gt;</ph> 속성이 0보다 크지만 데이터가 요청 스트림에 기록되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
          <source><ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.Abort" /&gt;</ph> was previously called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.Abort" /&gt;</ph>가 이전에 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
          <source>An error occurred while processing the request.</source>
          <target state="translated">이 요청을 처리하는 동안 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> was not returned by the current instance from a call to <ph id="ph2">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph>가 <ph id="ph2">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /&gt;</ph>에 대한 호출에서 현재 인스턴스에 의해 반환되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Expect">
          <source>Gets or sets the value of the <ph id="ph1">&lt;see langword="Expect" /&gt;</ph> HTTP header.</source>
          <target state="translated">HTTP <ph id="ph1">&lt;see langword="Expect" /&gt;</ph> 헤더의 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Expect">
          <source>The contents of the <ph id="ph1">&lt;see langword="Expect" /&gt;</ph> HTTP header.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Expect" /&gt;</ph> HTTP 헤더의 콘텐츠입니다.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Expect">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Expect">
          <source>The value for this property is stored in <ph id="ph1">&lt;see cref="T:System.Net.WebHeaderCollection" /&gt;</ph>.</source>
          <target state="translated">이 속성의 값은 <ph id="ph1">&lt;see cref="T:System.Net.WebHeaderCollection" /&gt;</ph>에 저장됩니다.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Expect">
          <source>If WebHeaderCollection is set, the property value is lost.</source>
          <target state="translated">WebHeaderCollection이 설정되면 속성 값이 손실됩니다.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Expect">
          <source><ph id="ph1">&lt;see langword="Expect" /&gt;</ph> is set to a string that contains "100-continue" as a substring.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Expect" /&gt;</ph>가 하위 문자열로 "100-continue"를 포함하는 문자열로 설정된 경우</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> to populate with data.</source>
          <target state="translated">데이터로 채울 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that specifies the destination for this serialization.</source>
          <target state="translated">이 직렬화의 대상을 지정하는 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Populates a <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> with the data required to serialize the target object.</source>
          <target state="translated">대상 개체를 serialize하는 데 필요한 데이터로 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>를 채웁니다.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Any objects included in the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> are automatically tracked and serialized by the formatter.</source>
          <target state="translated">에 포함 된 모든 개체는 <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> 자동으로 추적 되 고 포맷터에 의해 serialize 합니다.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="T:System.Net.HttpWebRequest">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object to use to write request data.</source>
          <target state="translated">요청 데이터를 쓰는 데 사용할 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object to use to write request data.</source>
          <target state="translated">요청 데이터를 쓰는 데 사용할 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> to use to write request data.</source>
          <target state="translated">요청 데이터를 쓰는 데 사용할 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> method returns a stream to use to send data for the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> 메서드에 대 한 데이터를 보내는 데 사용할 스트림을 반환는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>After the <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> object has been returned, you can send data with the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> by using the <ph id="ph3">&lt;xref:System.IO.Stream.Write%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">이후에 <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> 반환 되었습니다. 개체를 사용 하 여 데이터를 보낼 수 있습니다는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 를 사용 하 여는 <ph id="ph3">&lt;xref:System.IO.Stream.Write%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>If an application needs to set the value of the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> property, then this must be done before retrieving the stream.</source>
          <target state="translated">응용 프로그램의 값을 설정 해야 하는 경우는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> 속성을 다음이 스트림을 검색 하기 전에 수행 해야 합니다.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>You must call the <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A?displayProperty=nameWithType&gt;</ph> method to close the stream and release the connection for reuse.</source>
          <target state="translated">호출 해야 합니다는 <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A?displayProperty=nameWithType&gt;</ph> 메서드 스트림을 닫고 다시 사용에 대 한 연결을 해제 합니다.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>Failure to close the stream causes your application to run out of connections.</source>
          <target state="translated">스트림이 닫기에 실패 하면 연결 되지 않을 수 있는 응용 프로그램.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>Your application cannot mix synchronous and asynchronous methods for a particular request.</source>
          <target state="translated">응용 프로그램 특정 요청에 대 한 동기 및 비동기 메서드를 혼합할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>If you call the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> method, you must use the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph> method to retrieve the response.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> 사용 해야 합니다는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph> 메서드 응답을 검색 합니다.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>.NET Framework의 네트워크 추적<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> method to return a stream instance.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> 메서드 스트림 인스턴스를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.Method" /&gt;</ph> property is GET or HEAD.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.Method" /&gt;</ph> 속성이 GET 또는 HEAD인 경우</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.KeepAlive" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /&gt;</ph> is <ph id="ph4">&lt;see langword="false" /&gt;</ph>, <ph id="ph5">&lt;see cref="P:System.Net.HttpWebRequest.ContentLength" /&gt;</ph> is -1, <ph id="ph6">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph> is <ph id="ph7">&lt;see langword="false" /&gt;</ph>, and <ph id="ph8">&lt;see cref="P:System.Net.HttpWebRequest.Method" /&gt;</ph> is POST or PUT.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.KeepAlive" /&gt;</ph>가 <ph id="ph2">&lt;see langword="true" /&gt;</ph>이고, <ph id="ph3">&lt;see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /&gt;</ph>이 <ph id="ph4">&lt;see langword="false" /&gt;</ph>이고, <ph id="ph5">&lt;see cref="P:System.Net.HttpWebRequest.ContentLength" /&gt;</ph>가 -1이고, <ph id="ph6">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph>가 <ph id="ph7">&lt;see langword="false" /&gt;</ph>이고, <ph id="ph8">&lt;see cref="P:System.Net.HttpWebRequest.Method" /&gt;</ph>가 POST 또는 PUT인 경우</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>The <ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.GetRequestStream" /&gt;</ph> method is called more than once.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.GetRequestStream" /&gt;</ph> 메서드가 두 번 이상 호출된 경우</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.TransferEncoding" /&gt;</ph> is set to a value and <ph id="ph2">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph> is <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.TransferEncoding" /&gt;</ph>이 값으로 설정되었으며 <ph id="ph2">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph>가 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>The request cache validator indicated that the response for this request can be served from the cache; however, requests that write data must not use the cache.</source>
          <target state="translated">요청 캐시 검사기에서 이 요청에 대한 응답이 캐시에서 제공될 수 있도록 지정했지만, 데이터를 쓰는 요청이 캐시를 사용하지 않아야 합니다.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>This exception can occur if you are using a custom cache validator that is incorrectly implemented.</source>
          <target state="translated">이 예외는 잘못 구현된 사용자 지정 캐시 유효성 검사기를 사용 중인 경우에 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source><ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.Abort" /&gt;</ph> was previously called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.Abort" /&gt;</ph>가 이전에 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>The time-out period for the request expired.</source>
          <target state="translated">요청에 대한 시간 제한 기간이 만료되었습니다.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>An error occurred while processing the request.</source>
          <target state="translated">이 요청을 처리하는 동안 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>In a .NET Compact Framework application, a request stream with zero content length was not obtained and closed correctly.</source>
          <target state="translated">.NET Compact Framework 응용 프로그램에서 콘텐츠 길이가 0인 요청 스트림을 가져오지 않았으며 올바르게 종료되었습니다.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>For more information about handling zero content length requests, see <bpt id="p1">[</bpt>Network Programming in the .NET Compact Framework<ept id="p1">](https://msdn.microsoft.com/subscriptions/downloads/1afx2b0f\(v=vs.80\).aspx)</ept>.</source>
          <target state="translated">콘텐츠 길이가 0인 요청을 처리하는 방법에 대한 자세한 내용은 <bpt id="p1">[</bpt>.NET Compact Framework의 네트워크 프로그래밍<ept id="p1">](https://msdn.microsoft.com/subscriptions/downloads/1afx2b0f\(v=vs.80\).aspx)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.TransportContext" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Net.TransportContext" /&gt;</ph>에 대한 <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object to use to write request data and outputs the <ph id="ph2">&lt;see cref="T:System.Net.TransportContext" /&gt;</ph> associated with the stream.</source>
          <target state="translated">요청 데이터를 쓰는 데 사용하는 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 개체를 가져오고 해당 스트림과 연결된 <ph id="ph2">&lt;see cref="T:System.Net.TransportContext" /&gt;</ph>를 출력합니다.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> to use to write request data.</source>
          <target state="translated">요청 데이터를 쓰는 데 사용할 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> method returns a stream to use to send data for the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> and outputs the <ph id="ph3">&lt;xref:System.Net.TransportContext&gt;</ph> associated with the stream.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> 메서드에 대 한 데이터를 보내는 데 사용할 스트림을 반환는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 하 고 출력은 <ph id="ph3">&lt;xref:System.Net.TransportContext&gt;</ph> 스트림과 연결 된입니다.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>After the <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> object has been returned, you can send data with the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> by using the <ph id="ph3">&lt;xref:System.IO.Stream.Write%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">이후에 <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> 반환 되었습니다. 개체를 사용 하 여 데이터를 보낼 수 있습니다는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 를 사용 하 여는 <ph id="ph3">&lt;xref:System.IO.Stream.Write%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>Some applications that use integrated Windows authentication with extended protection may need to be able to query the transport layer used by <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> in order to retrieve the channel binding token (CBT) from the underlying TLS channel.</source>
          <target state="translated">확장된 보호와 함께 Windows 통합된 인증을 사용 하는 일부 응용 프로그램에서 사용 하는 전송 계층을 쿼리할 수 해야 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 기본 TLS 채널의 (CBT)의 채널 바인딩 토큰을 검색 하기 위해.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> method provides access to this information for HTTP methods which have a request body (<ph id="ph2">`POST`</ph> and <ph id="ph3">`PUT`</ph> requests).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> 메서드 요청 본문을 포함 하는 HTTP 메서드에 대 한이 정보에 대 한 액세스 제공 (<ph id="ph2">`POST`</ph> 및 <ph id="ph3">`PUT`</ph> 요청)입니다.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>This is only needed if the application is implementing its own authentication and needs access to the CBT.</source>
          <target state="translated">응용 프로그램 자체 인증을 구현 하는 CBT에 액세스 해야 하는 경우에이 과정이 필요만.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>If an application needs to set the value of the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> property, then this must be done before retrieving the stream.</source>
          <target state="translated">응용 프로그램의 값을 설정 해야 하는 경우는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> 속성을 다음이 스트림을 검색 하기 전에 수행 해야 합니다.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>You must call the <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A?displayProperty=nameWithType&gt;</ph> method to close the stream and release the connection for reuse.</source>
          <target state="translated">호출 해야 합니다는 <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A?displayProperty=nameWithType&gt;</ph> 메서드 스트림을 닫고 다시 사용에 대 한 연결을 해제 합니다.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>Failure to close the stream causes your application to run out of connections.</source>
          <target state="translated">스트림이 닫기에 실패 하면 연결 되지 않을 수 있는 응용 프로그램.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>Your application cannot mix synchronous and asynchronous methods for a particular request.</source>
          <target state="translated">응용 프로그램 특정 요청에 대 한 동기 및 비동기 메서드를 혼합할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>If you call the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> method, you must use the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph> method to retrieve the response.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> 사용 해야 합니다는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph> 메서드 응답을 검색 합니다.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>.NET Framework의 네트워크 추적<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.GetRequestStream" /&gt;</ph> method was unable to obtain the <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.GetRequestStream" /&gt;</ph> 메서드는 <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>를 얻을 수 없었습니다.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.GetRequestStream" /&gt;</ph> method is called more than once.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.GetRequestStream" /&gt;</ph> 메서드가 두 번 이상 호출된 경우</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.TransferEncoding" /&gt;</ph> is set to a value and <ph id="ph2">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph> is <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.TransferEncoding" /&gt;</ph>이 값으로 설정되었으며 <ph id="ph2">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph>가 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>The request cache validator indicated that the response for this request can be served from the cache; however, requests that write data must not use the cache.</source>
          <target state="translated">요청 캐시 검사기에서 이 요청에 대한 응답이 캐시에서 제공될 수 있도록 지정했지만, 데이터를 쓰는 요청이 캐시를 사용하지 않아야 합니다.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>This exception can occur if you are using a custom cache validator that is incorrectly implemented.</source>
          <target state="translated">이 예외는 잘못 구현된 사용자 지정 캐시 유효성 검사기를 사용 중인 경우에 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.Method" /&gt;</ph> property is GET or HEAD.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.Method" /&gt;</ph> 속성이 GET 또는 HEAD인 경우</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.KeepAlive" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /&gt;</ph> is <ph id="ph4">&lt;see langword="false" /&gt;</ph>, <ph id="ph5">&lt;see cref="P:System.Net.HttpWebRequest.ContentLength" /&gt;</ph> is -1, <ph id="ph6">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph> is <ph id="ph7">&lt;see langword="false" /&gt;</ph>, and <ph id="ph8">&lt;see cref="P:System.Net.HttpWebRequest.Method" /&gt;</ph> is POST or PUT.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.KeepAlive" /&gt;</ph>가 <ph id="ph2">&lt;see langword="true" /&gt;</ph>이고, <ph id="ph3">&lt;see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /&gt;</ph>이 <ph id="ph4">&lt;see langword="false" /&gt;</ph>이고, <ph id="ph5">&lt;see cref="P:System.Net.HttpWebRequest.ContentLength" /&gt;</ph>가 -1이고, <ph id="ph6">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph>가 <ph id="ph7">&lt;see langword="false" /&gt;</ph>이고, <ph id="ph8">&lt;see cref="P:System.Net.HttpWebRequest.Method" /&gt;</ph>가 POST 또는 PUT인 경우</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source><ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.Abort" /&gt;</ph> was previously called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.Abort" /&gt;</ph>가 이전에 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>The time-out period for the request expired.</source>
          <target state="translated">요청에 대한 시간 제한 기간이 만료되었습니다.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>An error occurred while processing the request.</source>
          <target state="translated">이 요청을 처리하는 동안 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>Returns a response from an Internet resource.</source>
          <target state="translated">인터넷 리소스의 응답을 반환합니다.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.WebResponse" /&gt;</ph> that contains the response from the Internet resource.</source>
          <target state="translated">인터넷 리소스로부터의 응답이 들어 있는 <ph id="ph1">&lt;see cref="T:System.Net.WebResponse" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Net.WebResponse&gt;</ph> object that contains the response from the Internet resource.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph> 메서드가 반환 되는 <ph id="ph2">&lt;xref:System.Net.WebResponse&gt;</ph> 인터넷 리소스 로부터의 응답이 들어 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>The actual instance returned is an <ph id="ph1">&lt;xref:System.Net.HttpWebResponse&gt;</ph>, and can be typecast to that class to access HTTP-specific properties.</source>
          <target state="translated">반환 되는 실제 인스턴스는 <ph id="ph1">&lt;xref:System.Net.HttpWebResponse&gt;</ph>, 및 속성에 액세스 HTTP 관련 해당 클래스에 형식 캐스팅 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>A <ph id="ph1">&lt;xref:System.Net.ProtocolViolationException&gt;</ph> is thrown in several cases when the properties set on the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> class are conflicting.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Net.ProtocolViolationException&gt;</ph> 속성에 설정 하는 경우 여러 경우에 throw 되는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 충돌 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>This exception occurs if an application sets the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph> property to <ph id="ph3">`true`</ph>, and then sends an HTTP GET request.</source>
          <target state="translated">응용 프로그램에서 설정 하는 경우이 예외가 발생는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> 속성 및 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph> 속성을 <ph id="ph3">`true`</ph>, HTTP GET 요청을 전송 합니다.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>This exception occurs if an application tries to send chunked to a server that only supports HTTP 1.0 protocol, where this is not supported.</source>
          <target state="translated">응용 프로그램을 보내려고만 HTTP 1.0 프로토콜을 지 원하는 서버에 청크 분할이 지원 되지 않습니다는이 예외가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>This exception occurs if an application tries to send data without setting the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> property or the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph> is <ph id="ph3">`false`</ph> when buffering is disabled and on a keepalive connection (the <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.KeepAlive%2A&gt;</ph> property is <ph id="ph5">`true`</ph>)<ph id="ph6">`.`</ph></source>
          <target state="translated">응용 프로그램 설정 하지 않고 데이터를 보내려고 시도 하는 경우이 예외가 발생는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> 속성 또는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph> 은 <ph id="ph3">`false`</ph> 버퍼링 사용 불가능 한 keepalive 연결 (의 <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.KeepAlive%2A&gt;</ph> 속성은 <ph id="ph5">`true`</ph>)<ph id="ph6">`.`</ph></target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>You must call the <ph id="ph1">&lt;xref:System.Net.HttpWebResponse.Close%2A&gt;</ph> method to close the stream and release the connection.</source>
          <target state="translated">호출 해야 합니다는 <ph id="ph1">&lt;xref:System.Net.HttpWebResponse.Close%2A&gt;</ph> 메서드를 스트림을 닫고 연결을 해제 합니다.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>Failure to do so may cause your application to run out of connections.</source>
          <target state="translated">이렇게 하지 않으면 연결 되지 않을 수 있는 응용 프로그램을 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>When using the POST method, you must get the request stream, write the data to be posted, and close the stream.</source>
          <target state="translated">POST 메서드를 사용 하면 요청 스트림을 가져올, 게시 될 데이터를 작성 하며 스트림을 닫습니다.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>This method blocks waiting for content to post; if there is no time-out set and you do not provide content, the calling thread blocks indefinitely.</source>
          <target state="translated">이 메서드는 대기 중인; 게시 하는 콘텐츠에 대 한 차단 제한 시간 집합이 있는 경우 콘텐츠, 호출 스레드가 차단 무기한으로 제공 하지 않으면 합니다.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>Multiple calls to <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph> return the same response object; the request is not reissued.</source>
          <target state="translated">여러 번 호출 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph> ; 동일한 응답 개체를 반환 합니다. 요청을 다시 발행 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>Your application cannot mix synchronous and asynchronous methods for a particular request.</source>
          <target state="translated">응용 프로그램 특정 요청에 대 한 동기 및 비동기 메서드를 혼합할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>If you call the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> method, you must use the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph> method to retrieve the response.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> 사용 해야 합니다는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph> 메서드 응답을 검색 합니다.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>If a <ph id="ph1">&lt;xref:System.Net.WebException&gt;</ph> is thrown, use the <ph id="ph2">&lt;xref:System.Net.WebException.Response%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> properties of the exception to determine the response from the server.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Net.WebException&gt;</ph> 가 사용 하 여 throw는 <ph id="ph2">&lt;xref:System.Net.WebException.Response%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> 속성의 서버에서 응답을 결정 하는 예외입니다.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>.NET Framework의 네트워크 추적<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>For security reasons, cookies are disabled by default.</source>
          <target state="translated">쿠키는 보안상의 이유로 기본적으로 비활성화 됩니다.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>If you wish to use cookies, use the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.CookieContainer%2A&gt;</ph> property to enable cookies.</source>
          <target state="translated">사용 하 여 쿠키를 사용 하려는 경우는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.CookieContainer%2A&gt;</ph> 속성을 사용 하는 쿠키입니다.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>The following code example gets the response for a request.</source>
          <target state="translated">다음 코드 예제에서는 요청에 대 한 응답을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>The stream is already in use by a previous call to <ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /&gt;</ph>.</source>
          <target state="translated">스트림이 <ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /&gt;</ph>에 대한 이전 호출에서 이미 사용되고 있는 경우</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.TransferEncoding" /&gt;</ph> is set to a value and <ph id="ph2">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph> is <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.TransferEncoding" /&gt;</ph>이 값으로 설정되었으며 <ph id="ph2">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph>가 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.Method" /&gt;</ph> is GET or HEAD, and either <ph id="ph2">&lt;see cref="P:System.Net.HttpWebRequest.ContentLength" /&gt;</ph> is greater or equal to zero or <ph id="ph3">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph> is <ph id="ph4">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.Method" /&gt;</ph>가 GET 또는 HEAD이고, <ph id="ph2">&lt;see cref="P:System.Net.HttpWebRequest.ContentLength" /&gt;</ph>가 0 이상이거나 <ph id="ph3">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph>가 <ph id="ph4">&lt;see langword="true" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.KeepAlive" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /&gt;</ph> is <ph id="ph4">&lt;see langword="false" /&gt;</ph>, <ph id="ph5">&lt;see cref="P:System.Net.HttpWebRequest.ContentLength" /&gt;</ph> is -1, <ph id="ph6">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph> is <ph id="ph7">&lt;see langword="false" /&gt;</ph>, and <ph id="ph8">&lt;see cref="P:System.Net.HttpWebRequest.Method" /&gt;</ph> is POST or PUT.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.KeepAlive" /&gt;</ph>가 <ph id="ph2">&lt;see langword="true" /&gt;</ph>이고, <ph id="ph3">&lt;see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /&gt;</ph>이 <ph id="ph4">&lt;see langword="false" /&gt;</ph>이고, <ph id="ph5">&lt;see cref="P:System.Net.HttpWebRequest.ContentLength" /&gt;</ph>가 -1이고, <ph id="ph6">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph>가 <ph id="ph7">&lt;see langword="false" /&gt;</ph>이고, <ph id="ph8">&lt;see cref="P:System.Net.HttpWebRequest.Method" /&gt;</ph>가 POST 또는 PUT인 경우</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.HttpWebRequest" /&gt;</ph> has an entity body but the <ph id="ph2">&lt;see cref="M:System.Net.HttpWebRequest.GetResponse" /&gt;</ph> method is called without calling the <ph id="ph3">&lt;see cref="M:System.Net.HttpWebRequest.GetRequestStream" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.HttpWebRequest" /&gt;</ph>에 엔터티 본문이 있지만 <ph id="ph3">&lt;see cref="M:System.Net.HttpWebRequest.GetRequestStream" /&gt;</ph> 메서드를 호출하지 않고 <ph id="ph2">&lt;see cref="M:System.Net.HttpWebRequest.GetResponse" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.ContentLength" /&gt;</ph> is greater than zero, but the application does not write all of the promised data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.ContentLength" /&gt;</ph>가 0보다 크지만 응용 프로그램에서 약속된 모든 데이터를 쓰지 않습니다.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>The request cache validator indicated that the response for this request can be served from the cache; however, this request includes data to be sent to the server.</source>
          <target state="translated">요청 캐시 검사기에서 이 요청에 대한 응답이 캐시에서 제공될 수 있도록 지정했지만, 이 요청에 서버로 전송할 데이터가 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>Requests that send data must not use the cache.</source>
          <target state="translated">데이터를 전송하는 요청이 캐시를 사용하지 않아야 합니다.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>This exception can occur if you are using a custom cache validator that is incorrectly implemented.</source>
          <target state="translated">이 예외는 잘못 구현된 사용자 지정 캐시 유효성 검사기를 사용 중인 경우에 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source><ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.Abort" /&gt;</ph> was previously called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.Abort" /&gt;</ph>가 이전에 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>The time-out period for the request expired.</source>
          <target state="translated">요청에 대한 시간 제한 기간이 만료되었습니다.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>An error occurred while processing the request.</source>
          <target state="translated">이 요청을 처리하는 동안 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.HaveResponse">
          <source>Gets a value that indicates whether a response has been received from an Internet resource.</source>
          <target state="translated">인터넷 리소스로부터 응답을 받았는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.HaveResponse">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a response has been received; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">응답을 받았으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 받지 않았으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.HaveResponse">
          <source>The following code example checks the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.HaveResponse%2A&gt;</ph> property to determine if a response has been received from an Internet resource.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.HaveResponse%2A&gt;</ph> 속성을 인터넷 리소스 로부터 응답을 받지 못했습니다.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Specifies a collection of the name/value pairs that make up the HTTP headers.</source>
          <target state="translated">HTTP 헤더를 구성하는 이름/값 쌍의 컬렉션을 지정합니다.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.WebHeaderCollection" /&gt;</ph> that contains the name/value pairs that make up the headers for the HTTP request.</source>
          <target state="translated">HTTP 요청의 헤더를 구성하는 이름/값 쌍이 들어 있는 <ph id="ph1">&lt;see cref="T:System.Net.WebHeaderCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Headers%2A&gt;</ph> collection contains the protocol headers associated with the request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Headers%2A&gt;</ph> 컬렉션 요청과 관련 된 프로토콜 헤더가 들어 있습니다.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>The following table lists the HTTP headers that are not stored in the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Headers%2A&gt;</ph> collection but are either set by the system or set by properties or methods.</source>
          <target state="translated">다음 표에 나와 있는에 저장 되지 않은 HTTP 헤더는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Headers%2A&gt;</ph> 컬렉션 하지만 시스템에서 설정 하거나 설정 속성 또는 메서드.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Header</source>
          <target state="translated">Header</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Set by</source>
          <target state="translated">으로 설정</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Accept</source>
          <target state="translated">허용</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Accept%2A&gt;</ph> property.</source>
          <target state="translated">설정한는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Accept%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Connection</source>
          <target state="translated">연결</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Connection%2A&gt;</ph> property and <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.KeepAlive%2A&gt;</ph> property.</source>
          <target state="translated">으로 설정 된 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Connection%2A&gt;</ph> 속성 및 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.KeepAlive%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Content-Length</source>
          <target state="translated">콘텐츠 길이</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> property.</source>
          <target state="translated">설정한는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Content-Type</source>
          <target state="translated">Content-Type</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentType%2A&gt;</ph> property.</source>
          <target state="translated">설정한는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentType%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Expect</source>
          <target state="translated">예상</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Expect%2A&gt;</ph> property.</source>
          <target state="translated">설정한는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Expect%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Date</source>
          <target state="translated">날짜</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Date%2A&gt;</ph> property.</source>
          <target state="translated">설정한는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Date%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Host</source>
          <target state="translated">호스트</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Host%2A&gt;</ph> property.</source>
          <target state="translated">설정한는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Host%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>If-Modified-Since</source>
          <target state="translated">If-수정-이후</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.IfModifiedSince%2A&gt;</ph> property.</source>
          <target state="translated">설정한는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.IfModifiedSince%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Range</source>
          <target state="translated">범위</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AddRange%2A&gt;</ph> method.</source>
          <target state="translated">으로 설정 된 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AddRange%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Referer</source>
          <target state="translated">참조 페이지</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Referer%2A&gt;</ph> property.</source>
          <target state="translated">설정한는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Referer%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Transfer-Encoding</source>
          <target state="translated">Transfer-Encoding</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.TransferEncoding%2A&gt;</ph> property (the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph> property must be true).</source>
          <target state="translated">설정한는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.TransferEncoding%2A&gt;</ph> 속성 (의 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph> 속성이 true 여야 합니다).</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>User-Agent</source>
          <target state="translated">사용자 에이전트</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.UserAgent%2A&gt;</ph> property.</source>
          <target state="translated">설정한는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.UserAgent%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebHeaderCollection.Add%2A&gt;</ph> method throws an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> if you try to set one of these protected headers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebHeaderCollection.Add%2A&gt;</ph> 메서드가 throw는 <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> 이러한 보호 된 헤더 중 하나를 설정 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Changing the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Headers%2A&gt;</ph> property after the request has been started by calling <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph>, or <ph id="ph5">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph> method throws an <ph id="ph6">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">변경 된 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Headers%2A&gt;</ph> 호출 하 여 요청이 시작 된 후 속성 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph>, 또는 <ph id="ph5">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph> 메서드가 throw는 <ph id="ph6">&lt;xref:System.InvalidOperationException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>You should not assume that the header values will remain unchanged, because Web servers and caches may change or add headers to a Web request.</source>
          <target state="translated">웹 서버와 캐시 변경 될 수 있습니다 또는 웹 요청에 헤더를 추가 하기 때문에 헤더 값 변경 되지 가정 하지 않아야 합니다.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Headers%2A&gt;</ph> property to print the HTTP header name/value pairs to the console.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Headers%2A&gt;</ph> 속성을 콘솔에 HTTP 헤더 이름/값 쌍을 인쇄 합니다.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Headers">
          <source>The request has been started by calling the <ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.GetRequestStream" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Net.HttpWebRequest.GetResponse" /&gt;</ph>, or <ph id="ph4">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.GetRequestStream" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Net.HttpWebRequest.GetResponse" /&gt;</ph> 또는 <ph id="ph4">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /&gt;</ph> 메서드를 호출하여 요청이 시작되었습니다.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Host">
          <source>Get or set the Host header value to use in an HTTP request independent from the request URI.</source>
          <target state="translated">요청 URI와 독립적인 HTTP 요청에 사용할 Host 헤더 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Host">
          <source>The Host header value in the HTTP request.</source>
          <target state="translated">HTTP 요청의 호스트 헤더 값입니다.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Host">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Host%2A&gt;</ph> property can be used to set the Host header value to use in an HTTP request independent from the request URI.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Host%2A&gt;</ph> 호스트 헤더 값은 요청 URI와에서 독립적인 HTTP 요청에 사용 하도록 설정 하려면 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Host">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Host%2A&gt;</ph> property can consist of a hostname and an optional port number.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Host%2A&gt;</ph> 속성은 호스트 이름 및 선택적 포트 번호를 구성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Host">
          <source>A Host header without port information implies the default port for the service requested (port 80 for an HTTP URL, for example).</source>
          <target state="translated">포트 정보 없이 호스트 헤더는 요청 된 서비스 (포트 80에 대 한 HTTP URL 예:)에 대 한 기본 포트를 의미합니다.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Host">
          <source>The format for specifying a host and port must follow the rules in section 14.23 of RFC2616 published by the IETF.</source>
          <target state="translated">호스트 및 포트를 지정 하는 형식은 14.23 IETF 게시 된 RFC2616의 규칙을 따라야 합니다.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Host">
          <source>An example complying with these requirements that specifies a port of 8080 would be the following value for the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Host%2A&gt;</ph> property:</source>
          <target state="translated">이러한 요구 사항을 준수 포트 8080 지정 하는 예를 들어 수에 대해 다음 값은 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Host%2A&gt;</ph> 속성:</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Host">
          <source>Using the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Host%2A&gt;</ph> property to explicitly specify a custom Host header value also affects areas caching, cookies, and authentication.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Host%2A&gt;</ph> 속성을 통해 사용자 지정 호스트 헤더 값을 명시적으로 지정도 영향을 줍니다 캐싱 영역, 쿠키 및 인증 합니다.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Host">
          <source>When an application provides credentials for a specific URI prefix, the applications needs to make sure to use the URI containing the value of the Host header, not the target server in the URI.</source>
          <target state="translated">특정 URI 접두사에 대 한 자격 증명을 제공 하는 응용 프로그램, 응용 프로그램에서 URI에 있는 대상 서버가 아닌 호스트 헤더의 값이 포함 된 URI를 사용 하 고 있는지 확인 해야 합니다.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Host">
          <source>The key used when caching resources, uses the Host header value rather than the request URI.</source>
          <target state="translated">리소스를 캐싱할 때 사용 되는 키 요청 URI가 아닌 호스트 헤더 값을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Host">
          <source>Cookies are stored in a <ph id="ph1">&lt;xref:System.Net.CookieContainer&gt;</ph> and logically grouped by the server domain name.</source>
          <target state="translated">쿠키에 저장 되는 <ph id="ph1">&lt;xref:System.Net.CookieContainer&gt;</ph> 서버 도메인 이름으로 논리적으로 그룹화 합니다.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Host">
          <source>If the application specifies a Host header, then this value will be used as domain.</source>
          <target state="translated">응용 프로그램의 호스트 헤더를 지정 하는 경우이 값이 도메인으로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Host">
          <source>If the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Host%2A&gt;</ph> property is not set, then the Host header value to use in an HTTP request is based on the request URI.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Host%2A&gt;</ph> 속성을 설정 하지 않으면 다음 HTTP 요청에 사용할 호스트 헤더 값은 요청 URI에 기반 합니다.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Host">
          <source>The Host header cannot be set to <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">호스트 헤더는 <ph id="ph1">&lt;see langword="null" /&gt;</ph>로 설정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Host">
          <source>The Host header cannot be set to an invalid value.</source>
          <target state="translated">호스트 헤더는 잘못된 값으로 설정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Host">
          <source>The Host header cannot be set after the <ph id="ph1">&lt;see cref="T:System.Net.HttpWebRequest" /&gt;</ph> has already started to be sent.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.HttpWebRequest" /&gt;</ph>가 이미 전송되기 시작한 다음에는 호스트 헤더를 설정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.IfModifiedSince">
          <source>Gets or sets the value of the <ph id="ph1">&lt;see langword="If-Modified-Since" /&gt;</ph> HTTP header.</source>
          <target state="translated">HTTP <ph id="ph1">&lt;see langword="If-Modified-Since" /&gt;</ph> 헤더의 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.IfModifiedSince">
          <source>A <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> that contains the contents of the <ph id="ph2">&lt;see langword="If-Modified-Since" /&gt;</ph> HTTP header.</source>
          <target state="translated"><ph id="ph2">&lt;see langword="If-Modified-Since" /&gt;</ph> HTTP 헤더의 콘텐츠가 들어 있는 <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.IfModifiedSince">
          <source>The default value is the current date and time.</source>
          <target state="translated">기본값이 현재 날짜와 시간입니다.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.IfModifiedSince">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.IfModifiedSince%2A&gt;</ph> property is a standard <ph id="ph2">&lt;xref:System.DateTime?displayProperty=nameWithType&gt;</ph> object and can contain a <ph id="ph3">&lt;xref:System.DateTimeKind?displayProperty=nameWithType&gt;</ph> field of <ph id="ph4">&lt;xref:System.DateTimeKind.Local?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.DateTimeKind.Utc?displayProperty=nameWithType&gt;</ph>, or <ph id="ph6">&lt;xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.IfModifiedSince%2A&gt;</ph> 속성은 표준 <ph id="ph2">&lt;xref:System.DateTime?displayProperty=nameWithType&gt;</ph> 개체를 포함할 수는 <ph id="ph3">&lt;xref:System.DateTimeKind?displayProperty=nameWithType&gt;</ph> 필드 <ph id="ph4">&lt;xref:System.DateTimeKind.Local?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.DateTimeKind.Utc?displayProperty=nameWithType&gt;</ph>, 또는 <ph id="ph6">&lt;xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.IfModifiedSince">
          <source>Any kind of time can be set when using the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.IfModifiedSince%2A&gt;</ph> property.</source>
          <target state="translated">사용 하는 경우 여러 종류의 시간을 설정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.IfModifiedSince%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.IfModifiedSince">
          <source>If <ph id="ph1">&lt;xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType&gt;</ph> is set or retrieved, the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.IfModifiedSince%2A&gt;</ph> property is assumed to be <ph id="ph3">&lt;xref:System.DateTimeKind.Local?displayProperty=nameWithType&gt;</ph> (local time).</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType&gt;</ph> 를 설정 하거나 검색 된 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.IfModifiedSince%2A&gt;</ph> 속성으로 간주 됩니다 <ph id="ph3">&lt;xref:System.DateTimeKind.Local?displayProperty=nameWithType&gt;</ph> (현지 시간).</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.IfModifiedSince">
          <source>The classes in the <ph id="ph1">&lt;xref:System.Net&gt;</ph> namespace always write it out the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.IfModifiedSince%2A&gt;</ph> property on the wire during transmission in standard form using GMT (Utc) format.</source>
          <target state="translated">클래스는 <ph id="ph1">&lt;xref:System.Net&gt;</ph> 네임 스페이스 항상 //microsoft.samples.biztalk.wcf.basichttpsendadapter.basichttpwcfserviceconsuming는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.IfModifiedSince%2A&gt;</ph> GMT (Utc) 형식을 사용 하 여 표준 형태로 전송 하는 동안 통신 중에 속성입니다.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.IfModifiedSince">
          <source>If the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.IfModifiedSince%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.DateTime.MinValue?displayProperty=nameWithType&gt;</ph>, then the <ph id="ph3">`If-Modified-Since`</ph> HTTP header is removed from the <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.Headers%2A&gt;</ph> property and the <ph id="ph5">&lt;xref:System.Net.WebHeaderCollection&gt;</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.IfModifiedSince%2A&gt;</ph> 속성이 <ph id="ph2">&lt;xref:System.DateTime.MinValue?displayProperty=nameWithType&gt;</ph>, 하면 <ph id="ph3">`If-Modified-Since`</ph> HTTP 헤더에서 제거 되는 <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.Headers%2A&gt;</ph> 속성 및 <ph id="ph5">&lt;xref:System.Net.WebHeaderCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.IfModifiedSince">
          <source>If the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.IfModifiedSince%2A&gt;</ph> property is <ph id="ph2">&lt;xref:System.DateTime.MinValue?displayProperty=nameWithType&gt;</ph>, this indicates that the <ph id="ph3">`If-Modified-Since`</ph> HTTP header is not included in the <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.Headers%2A&gt;</ph> property and the <ph id="ph5">&lt;xref:System.Net.WebHeaderCollection&gt;</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.IfModifiedSince%2A&gt;</ph> 속성은 <ph id="ph2">&lt;xref:System.DateTime.MinValue?displayProperty=nameWithType&gt;</ph>, 나타냅니다는 <ph id="ph3">`If-Modified-Since`</ph> HTTP 헤더에 포함 되지 않습니다는 <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.Headers%2A&gt;</ph> 속성 및 <ph id="ph5">&lt;xref:System.Net.WebHeaderCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.IfModifiedSince">
          <source>The value for this property is stored in <ph id="ph1">&lt;xref:System.Net.WebHeaderCollection&gt;</ph>.</source>
          <target state="translated">이 속성의 값은 <ph id="ph1">&lt;xref:System.Net.WebHeaderCollection&gt;</ph>에 저장됩니다.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.IfModifiedSince">
          <source>If WebHeaderCollection is set, the property value is lost.</source>
          <target state="translated">WebHeaderCollection이 설정되면 속성 값이 손실됩니다.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.IfModifiedSince">
          <source>The following code example checks the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.IfModifiedSince%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.IfModifiedSince%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.KeepAlive">
          <source>Gets or sets a value that indicates whether to make a persistent connection to the Internet resource.</source>
          <target state="translated">인터넷 리소스에 영구 연결을 할 것인지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.KeepAlive">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the request to the Internet resource should contain a <ph id="ph2">&lt;see langword="Connection" /&gt;</ph> HTTP header with the value Keep-alive; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">인터넷 리소스에 대한 요청의 <ph id="ph1">&lt;see langword="true" /&gt;</ph> HTTP 헤더 값이 Keep-alive이면 <ph id="ph2">&lt;see langword="Connection" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.KeepAlive">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.KeepAlive">
          <source>Set this property to <ph id="ph1">`true`</ph> to send a <ph id="ph2">`Connection`</ph> HTTP header with the value Keep-alive.</source>
          <target state="translated">이 속성을 설정 <ph id="ph1">`true`</ph> 보내려고는 <ph id="ph2">`Connection`</ph> HTTP 헤더의 값을 유지 합니다.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.KeepAlive">
          <source>An application uses <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.KeepAlive%2A&gt;</ph> to indicate a preference for persistent connections.</source>
          <target state="translated">응용 프로그램에서 사용 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.KeepAlive%2A&gt;</ph> 영구 연결에 대 한 기본 설정을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.KeepAlive">
          <source>When the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.KeepAlive%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, the application makes persistent connections to the servers that support them.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.KeepAlive%2A&gt;</ph> 속성은 <ph id="ph2">`true`</ph>, 응용 프로그램을 지 원하는 서버에 대 한 영구 연결을 만듭니다.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.KeepAlive">
          <source>When using HTTP/1.1, Keep-Alive is on by default.</source>
          <target state="translated">HTTP/1.1을 사용할 경우 연결 유지는 기본적으로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.KeepAlive">
          <source>Setting <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.KeepAlive%2A&gt;</ph> to <ph id="ph2">`false`</ph> may result in sending a <ph id="ph3">`Connection: Close`</ph> header to the server.</source>
          <target state="translated">설정 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.KeepAlive%2A&gt;</ph> 를 <ph id="ph2">`false`</ph> 전송 될 수 있습니다는 <ph id="ph3">`Connection: Close`</ph> 서버에 헤더입니다.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.KeepAlive">
          <source>The following code example sets the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.KeepAlive%2A&gt;</ph> property to <ph id="ph2">`false`</ph> to avoid establishing a persistent connection with the Internet resource.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.KeepAlive%2A&gt;</ph> 속성을 <ph id="ph2">`false`</ph> 인터넷 리소스와의 영구 연결을 설정 하지 않으려면입니다.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.MaximumAutomaticRedirections">
          <source>Gets or sets the maximum number of redirects that the request follows.</source>
          <target state="translated">요청이 따르는 최대 리디렉션 수를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.MaximumAutomaticRedirections">
          <source>The maximum number of redirection responses that the request follows.</source>
          <target state="translated">요청이 따르는 최대 리디렉션 응답 수입니다.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.MaximumAutomaticRedirections">
          <source>The default value is 50.</source>
          <target state="translated">기본값은 50입니다.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.MaximumAutomaticRedirections">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.MaximumAutomaticRedirections%2A&gt;</ph> property sets the maximum number of redirections for the request to follow if the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A&gt;</ph> property is <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.MaximumAutomaticRedirections%2A&gt;</ph> 리디렉션 요청을 수행 하는 경우에 대 한 최대 수를 설정 하는 속성은 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A&gt;</ph> 속성은 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.MaximumAutomaticRedirections">
          <source>The following code example sets the value of this property.</source>
          <target state="translated">다음 코드 예제에서는이 속성의 값을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.MaximumAutomaticRedirections">
          <source>The value is set to 0 or less.</source>
          <target state="translated">값이 0 이하로 설정되어 있습니다.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength">
          <source>Gets or sets the maximum allowed length of the response headers.</source>
          <target state="translated">응답 헤더의 허용되는 최대 길이를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength">
          <source>The length, in kilobytes (1024 bytes), of the response headers.</source>
          <target state="translated">응답 헤더의 킬로바이트(1024바이트) 단위 길이입니다.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength">
          <source>The length of the response header includes the response status line and any extra control characters that are received as part of HTTP protocol.</source>
          <target state="translated">응답 헤더의 길이가 응답 상태 표시줄 및 HTTP 프로토콜의 일부로 수신 된 모든 추가 제어 문자가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength">
          <source>A value of -1 means no limit is imposed on the response headers; a value of 0 means that all requests fail.</source>
          <target state="translated">값이-1 이면 응답 헤더;에 제한 되지 않습니다 0은 모든 요청에 실패 하는 값입니다.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength">
          <source>If the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.MaximumResponseHeadersLength%2A&gt;</ph> property is not explicitly set, it defaults to the value of the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.DefaultMaximumResponseHeadersLength%2A&gt;</ph> property.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.MaximumResponseHeadersLength%2A&gt;</ph> 속성이 명시적으로 설정 되지 않은의 값에는 기본적으로 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.DefaultMaximumResponseHeadersLength%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength">
          <source>If the length of the response header received exceeds the value of the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.MaximumResponseHeadersLength%2A&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.EndGetResponse%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph> methods will throw a <ph id="ph4">&lt;xref:System.Net.WebException&gt;</ph> with the <ph id="ph5">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> property set to <ph id="ph6">&lt;xref:System.Net.WebExceptionStatus.MessageLengthLimitExceeded&gt;</ph>.</source>
          <target state="translated">받은 응답 헤더의 길이가의 값을 초과 하는 경우는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.MaximumResponseHeadersLength%2A&gt;</ph> 속성에는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.EndGetResponse%2A&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph> 메서드를 발생 시킵니다는 <ph id="ph4">&lt;xref:System.Net.WebException&gt;</ph> 와 <ph id="ph5">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> 속성이로 설정 <ph id="ph6">&lt;xref:System.Net.WebExceptionStatus.MessageLengthLimitExceeded&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength">
          <source>The following code example sets the value of this property.</source>
          <target state="translated">다음 코드 예제에서는이 속성의 값을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength">
          <source>The property is set after the request has already been submitted.</source>
          <target state="translated">요청이 이미 제출된 후에 속성이 설정되었습니다.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength">
          <source>The value is less than 0 and is not equal to -1.</source>
          <target state="translated">값이 -1이 아니고 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.MediaType">
          <source>Gets or sets the media type of the request.</source>
          <target state="translated">요청의 미디어 형식을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.MediaType">
          <source>The media type of the request.</source>
          <target state="translated">요청의 미디어 형식입니다.</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.MediaType">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.MediaType">
          <source>The value of the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.MediaType%2A&gt;</ph> property affects the <ph id="ph2">&lt;xref:System.Net.HttpWebResponse.CharacterSet%2A&gt;</ph> property.</source>
          <target state="translated">값은 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.MediaType%2A&gt;</ph> 속성에 영향을 미칩니다는 <ph id="ph2">&lt;xref:System.Net.HttpWebResponse.CharacterSet%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.MediaType">
          <source>When you set the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.MediaType%2A&gt;</ph> in the request, the corresponding media type is chosen from the list of character sets returned in the response <ph id="ph2">`Content-type`</ph> HTTP header.</source>
          <target state="translated">설정 하는 경우는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.MediaType%2A&gt;</ph> 요청에는 해당 미디어 형식은 응답에서 반환 하는 문자 집합의 목록에서 선택 됩니다 <ph id="ph2">`Content-type`</ph> HTTP 헤더입니다.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Method">
          <source>Gets or sets the method for the request.</source>
          <target state="translated">요청에 대한 메서드를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Method">
          <source>The request method to use to contact the Internet resource.</source>
          <target state="translated">인터넷 리소스에 접속하는 데 사용할 요청 메서드입니다.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Method">
          <source>The default value is GET.</source>
          <target state="translated">기본값은 GET입니다.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Method">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Method%2A&gt;</ph> property can be set to any of the HTTP 1.1 protocol verbs: GET, HEAD, POST, PUT, DELETE, TRACE, or OPTIONS.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Method%2A&gt;</ph> HTTP 1.1 프로토콜 동사 중 하나에 속성을 설정할 수 있습니다: GET, HEAD, POST, PUT, DELETE, TRACE 또는 옵션입니다.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Method">
          <source>If the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> property is set to any value other than -1, the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.Method%2A&gt;</ph> property must be set to a protocol property that uploads data.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> 속성이-1 이외의 값으로 설정 되어는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.Method%2A&gt;</ph> 속성 데이터를 업로드 하는 프로토콜 속성으로 설정 되어 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Method">
          <source>The following code example sets the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Method%2A&gt;</ph> property to POST.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Method%2A&gt;</ph> 속성을 게시 합니다.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Method">
          <source>No method is supplied.</source>
          <target state="translated">메서드가 제공되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Method">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Method">
          <source>The method string contains invalid characters.</source>
          <target state="translated">메서드 문자열에 잘못된 문자가 있습니다.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Pipelined">
          <source>Gets or sets a value that indicates whether to pipeline the request to the Internet resource.</source>
          <target state="translated">요청을 인터넷 리소스에 파이프라인할 것인지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Pipelined">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the request should be pipelined; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">요청을 파이프라인해야 하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그러지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Pipelined">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Pipelined">
          <source>An application uses the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Pipelined%2A&gt;</ph> property to indicate a preference for pipelined connections.</source>
          <target state="translated">응용 프로그램에서 사용 된 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Pipelined%2A&gt;</ph> 파이프라인된 연결에 대 한 기본 설정을 나타내는 속성을 합니다.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Pipelined">
          <source>When <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Pipelined%2A&gt;</ph> is <ph id="ph2">`true`</ph>, an application makes pipelined connections to the servers that support them.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Pipelined%2A&gt;</ph> 은 <ph id="ph2">`true`</ph>는 응용 프로그램은 파이프라인된 연결을 지 원하는 서버에 있습니다.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Pipelined">
          <source>Pipelined connections are made only when the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.KeepAlive%2A&gt;</ph> property is also <ph id="ph2">`true`</ph>.</source>
          <target state="translated">파이프라인 된 연결 된 경우에만 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.KeepAlive%2A&gt;</ph> 속성도 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Pipelined">
          <source>The following code example prints the value of the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Pipelined%2A&gt;</ph> property to the console.</source>
          <target state="translated">다음 코드 예제에서는 값을 인쇄는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Pipelined%2A&gt;</ph> 콘솔에는 속성입니다.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>Gets or sets a value that indicates whether to send an Authorization header with the request.</source>
          <target state="translated">요청과 함께 인증 헤더를 보낼 것인지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to send an  HTTP Authorization header with requests after authentication has taken place; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">인증을 수행한 이후 요청과 함께 HTTP 권한 부여 헤더를 함께 보내는 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>After a client request to a specific <ph id="ph1">&lt;xref:System.Uri&gt;</ph> is successfully authenticated, if <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.PreAuthenticate%2A&gt;</ph> is <ph id="ph3">`true`</ph> and credentials are supplied, the Authorization header is sent with each request to any <ph id="ph4">&lt;xref:System.Uri&gt;</ph> that matches the specific <ph id="ph5">&lt;xref:System.Uri&gt;</ph> up to the last forward slash.</source>
          <target state="translated">클라이언트 요청을 특정 후 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 가 성공적으로 인증 하는 경우 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.PreAuthenticate%2A&gt;</ph> 은 <ph id="ph3">`true`</ph> 자격 증명을 제공 하 고, 권한 부여 헤더에 각 요청과 함께 전송 되 <ph id="ph4">&lt;xref:System.Uri&gt;</ph> 와 일치 하는 특정 <ph id="ph5">&lt;xref:System.Uri&gt;</ph>마지막 슬래시까지 합니다.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>So if the client request successfully authenticated to a specific <ph id="ph1">&lt;xref:System.Uri&gt;</ph> that contains the following:</source>
          <target state="translated">따라서 클라이언트 요청을 특정 성공적으로 인증 하는 경우 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 다음을 포함 하 합니다.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>Then the Authorization header for preauthentication is sent with each request to any of the following <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instances:</source>
          <target state="translated">사전 인증에 대 한 권한 부여 헤더에는 다음 각 요청과 함께 보내집니다 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 인스턴스:</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>However, the Authorization header is not sent with requests to any of the following <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instances:</source>
          <target state="translated">그러나 권한 부여 헤더는 하지 요청과 함께 전송에 다음 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 인스턴스:</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>If the client request to a specific <ph id="ph1">&lt;xref:System.Uri&gt;</ph> is not successfully authenticated, the request uses standard authentication procedures.</source>
          <target state="translated">클라이언트 요청을 특정 하는 경우 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 은 표준 인증 절차를 사용 하 여 요청이 인증 되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>With the exception of the first request, the <ph id="ph1">&lt;xref:System.Net.WebRequest.PreAuthenticate%2A&gt;</ph> property indicates whether to send authentication information with subsequent requests to a <ph id="ph2">&lt;xref:System.Uri&gt;</ph> that matches the specific <ph id="ph3">&lt;xref:System.Uri&gt;</ph> up to the last forward slash without waiting to be challenged by the server.</source>
          <target state="translated">첫 번째 요청을 제외 하 고는 <ph id="ph1">&lt;xref:System.Net.WebRequest.PreAuthenticate%2A&gt;</ph> 속성 이후 요청에 대 한 인증 정보를 보낼 것인지 나타냅니다는 <ph id="ph2">&lt;xref:System.Uri&gt;</ph> 와 일치 하는 특정 <ph id="ph3">&lt;xref:System.Uri&gt;</ph> 되도록 대기 하지 않고 마지막 슬래시까지 서버에서 요구할 합니다.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>The following dialog between client and server illustrates the effect of this property.</source>
          <target state="translated">이 속성의 효과 설명 하는 클라이언트와 서버 간에 다음과 같은 대화 상자가 있습니다.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>The dialog assumes that basic authentication is in use.</source>
          <target state="translated">대화 상자에서는 해당 기본 인증을 사용 하 여 가정 합니다.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.PreAuthenticate%2A&gt;</ph> is <ph id="ph2">`false`</ph>:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.PreAuthenticate%2A&gt;</ph> <ph id="ph2">`false`</ph>:</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>Client: GET someUrl</source>
          <target state="translated">GET someUrl 클라이언트:</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>Server: 401 WWW-Authenticate Basic</source>
          <target state="translated">서버: 401 Www-authenticate Basic</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>Client: GET with Authorization headers</source>
          <target state="translated">권한 부여 헤더도 얻을 수 있는 클라이언트:</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>Server: 200 OK</source>
          <target state="translated">서버: 200 확인</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>Client: GET someUrl</source>
          <target state="translated">GET someUrl 클라이언트:</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>Server: 401 WWW-Authenticate Basic</source>
          <target state="translated">서버: 401 Www-authenticate Basic</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>Client: GET with Authorization headers</source>
          <target state="translated">권한 부여 헤더도 얻을 수 있는 클라이언트:</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>Server: 200 OK</source>
          <target state="translated">서버: 200 확인</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.PreAuthenticate%2A&gt;</ph> is <ph id="ph2">`true`</ph>:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.PreAuthenticate%2A&gt;</ph> <ph id="ph2">`true`</ph>:</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>Client: GET someUrl</source>
          <target state="translated">GET someUrl 클라이언트:</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>Server: 401 WWW-Authenticate Basic</source>
          <target state="translated">서버: 401 Www-authenticate Basic</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>Client: GET with Authorization headers</source>
          <target state="translated">권한 부여 헤더도 얻을 수 있는 클라이언트:</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>Server: 200 OK</source>
          <target state="translated">서버: 200 확인</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>Client: GET someUrl with Authorization headers</source>
          <target state="translated">클라이언트: 권한 부여 헤더와 함께 someUrl 가져오기</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>If the authentication scheme does not support preauthentication, the value of this property is ignored.</source>
          <target state="translated">인증 체계 사전 인증을 지원 하지 않는 경우이 속성의 값은 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.ProtocolVersion">
          <source>Gets or sets the version of HTTP to use for the request.</source>
          <target state="translated">요청에 사용할 HTTP의 버전을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ProtocolVersion">
          <source>The HTTP version to use for the request.</source>
          <target state="translated">요청에 사용할 HTTP 버전입니다.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ProtocolVersion">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Net.HttpVersion.Version11" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Net.HttpVersion.Version11" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ProtocolVersion">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> class supports only versions 1.0 and 1.1 of HTTP.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 클래스 버전 1.0 및 1.1 http만 지원 합니다.</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ProtocolVersion">
          <source>Setting <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ProtocolVersion%2A&gt;</ph> to a different version throws an exception.</source>
          <target state="translated">설정 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ProtocolVersion%2A&gt;</ph> 를 다른 버전으로 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ProtocolVersion">
          <source>To set the HTTP version of the current request, use the <ph id="ph1">&lt;xref:System.Net.HttpVersion.Version10&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.HttpVersion.Version11&gt;</ph> fields of the <ph id="ph3">&lt;xref:System.Net.HttpVersion&gt;</ph> class.</source>
          <target state="translated">현재 요청의 HTTP 버전을 설정 하려면는 <ph id="ph1">&lt;xref:System.Net.HttpVersion.Version10&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.HttpVersion.Version11&gt;</ph> 의 필드는 <ph id="ph3">&lt;xref:System.Net.HttpVersion&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ProtocolVersion">
          <source>The following code example sets the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ProtocolVersion%2A&gt;</ph> Property.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ProtocolVersion%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.ProtocolVersion">
          <source>The HTTP version is set to a value other than 1.0 or 1.1.</source>
          <target state="translated">HTTP 버전이 1.0 또는 1.1이 아닌 값으로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>Gets or sets proxy information for the request.</source>
          <target state="translated">요청에 대한 프록시 정보를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IWebProxy" /&gt;</ph> object to use to proxy the request.</source>
          <target state="translated">요청을 프록시하는 데 사용할 <ph id="ph1">&lt;see cref="T:System.Net.IWebProxy" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>The default value is set by calling the <ph id="ph1">&lt;see cref="P:System.Net.GlobalProxySelection.Select" /&gt;</ph> property.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="P:System.Net.GlobalProxySelection.Select" /&gt;</ph> 속성을 호출함으로써 설정됩니다.</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Proxy%2A&gt;</ph> property identifies the <ph id="ph2">&lt;xref:System.Net.WebProxy&gt;</ph> object to use to process requests to Internet resources.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Proxy%2A&gt;</ph> 속성을 식별 하는 <ph id="ph2">&lt;xref:System.Net.WebProxy&gt;</ph> 인터넷 리소스에 대 한 요청을 처리 하는 데 사용할 개체입니다.</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>To specify that no proxy should be used, set the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Proxy%2A&gt;</ph> property to the proxy instance returned by the <ph id="ph2">&lt;xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">프록시가 사용 되어야 함을 지정 하려면는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Proxy%2A&gt;</ph> 속성에서 반환 되는 프록시 인스턴스에 <ph id="ph2">&lt;xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>The local computer or application config file may specify that a default proxy be used.</source>
          <target state="translated">로컬 컴퓨터 또는 응용 프로그램 구성 파일에서 기본 프록시 사용할 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>If the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Proxy%2A&gt;</ph> property is specified, then the proxy settings from the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.Proxy%2A&gt;</ph> property override the local computer or application config file and the <ph id="ph3">&lt;xref:System.Net.HttpWebRequest&gt;</ph> instance will use the proxy settings specified.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Proxy%2A&gt;</ph> 속성이 지정 된 프록시 설정에서는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.Proxy%2A&gt;</ph> 로컬 컴퓨터 또는 응용 프로그램 구성 파일을 재정의 하는 속성 및 <ph id="ph3">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 인스턴스에서 지정 된 프록시 설정을 사용 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>If no proxy is specified in a config file and the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Proxy%2A&gt;</ph> property is unspecified, the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> class uses the proxy settings inherited from Internet Explorer on the local computer.</source>
          <target state="translated">구성 파일에 없는 프록시를 지정 하는 경우 및 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Proxy%2A&gt;</ph> 속성이 지정 되어 있지는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 클래스에서에서 상속 되며, Internet Explorer 로컬 컴퓨터에 프록시 설정을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>If there are no proxy settings in Internet Explorer, the request is sent directly to the server.</source>
          <target state="translated">Internet Explorer의 프록시 설정이 없는 경우에 서버에 직접 요청이 보내집니다.</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> class parses a proxy bypass list with wildcard characters inherited from Internet Explorer the same as the bypass list is parsed directly by Internet Explorer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 클래스 구문 분석 하 여 와일드 카드 문자를 사용한 프록시 바이패스 목록이 Internet Explorer에서 동일한 상태로 상속 무시 목록 Internet Explorer에서 직접 구문 분석 됩니다.</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>For example, the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> class will parse a bypass list of "nt*" from Internet Explorer as a regular expression of "nt.<ph id="ph2">\*</ph>".</source>
          <target state="translated">예를 들어는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 클래스는 ह ु ण फ 바이패스 목록이 "nt *" Internet Explorer에서 정규식의 "nt.<ph id="ph2">\*</ph>"입니다.</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>So a URL of "<ph id="ph1">`http://nt.com`</ph>" would bypass the proxy using the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> class and using Internet Explorer.</source>
          <target state="translated">따라서의 URL "<ph id="ph1">`http://nt.com`</ph>"를 사용 하 여 프록시를 무시는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 클래스 및 Internet Explorer를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> class supports local proxy bypass.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 클래스는 로컬 프록시 바이패스를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>The class considers a destination to be local if any of the following conditions are met:</source>
          <target state="translated">클래스에는 다음 조건 중 하나라도 충족 되 면 로컬로 대상을 고려 합니다.</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>The destination contains a flat name (no dots in the URL).</source>
          <target state="translated">대상 플랫 이름 (URL에서 점 없음)를 포함합니다.</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>The destination contains a loopback address (<ph id="ph1">&lt;xref:System.Net.IPAddress.Loopback&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.IPAddress.IPv6Loopback&gt;</ph>) or the destination contains an <ph id="ph3">&lt;xref:System.Net.IPAddress&gt;</ph> assigned to the local computer.</source>
          <target state="translated">루프백 주소를 포함 하는 대상 (<ph id="ph1">&lt;xref:System.Net.IPAddress.Loopback&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Net.IPAddress.IPv6Loopback&gt;</ph>)는 대상에 포함 하거나는 <ph id="ph3">&lt;xref:System.Net.IPAddress&gt;</ph> 로컬 컴퓨터에 할당 합니다.</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>The domain suffix of the destination matches the local computer's domain suffix (<ph id="ph1">&lt;xref:System.Net.NetworkInformation.IPGlobalProperties.DomainName%2A&gt;</ph>).</source>
          <target state="translated">로컬 컴퓨터의 도메인 접미사를 일치 하는 대상의 도메인 접미사 (<ph id="ph1">&lt;xref:System.Net.NetworkInformation.IPGlobalProperties.DomainName%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>Changing the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Proxy%2A&gt;</ph> property after the request has been started by calling the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph>, or <ph id="ph5">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph> method throws an <ph id="ph6">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">변경 된 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Proxy%2A&gt;</ph> 호출 하 여 요청이 시작 된 후 속성은 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph>, 또는 <ph id="ph5">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph> 메서드가 throw는 <ph id="ph6">&lt;xref:System.InvalidOperationException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>For information on the proxy element see <bpt id="p1">[</bpt><ph id="ph1">\&amp;</ph>lt;defaultProxy<ph id="ph2">\&amp;</ph>gt; Element (Network Settings)<ept id="p1">](~/docs/framework/configure-apps/file-schema/network/defaultproxy-element-network-settings.md)</ept>.</source>
          <target state="translated">Proxy 요소에 대 한 내용은 <bpt id="p1">[</bpt> <ph id="ph1">\&amp;</ph>lt; defaultProxy<ph id="ph2">\&amp;</ph>gt; 요소 (네트워크 설정)<ept id="p1">](~/docs/framework/configure-apps/file-schema/network/defaultproxy-element-network-settings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Proxy%2A&gt;</ph> method to get the proxy information for the request.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Proxy%2A&gt;</ph> 메서드는 요청에 대 한 프록시 정보를 얻을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Proxy">
          <source><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.Proxy" /&gt;</ph> is set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.Proxy" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>The request has been started by calling <ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.GetRequestStream" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Net.HttpWebRequest.GetResponse" /&gt;</ph>, or <ph id="ph4">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.GetRequestStream" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Net.HttpWebRequest.GetResponse" /&gt;</ph> 또는 <ph id="ph4">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /&gt;</ph>를 호출하여 요청이 시작된 경우</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>The caller does not have permission for the requested operation.</source>
          <target state="translated">호출자에게 요청된 작업을 수행할 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>To get or set the <ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.Proxy" /&gt;</ph> property.</source>
          <target state="translated">가져오거나 설정할는 <ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.Proxy" /&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.ReadWriteTimeout">
          <source>Gets or sets a time-out in milliseconds when writing to or reading from a stream.</source>
          <target state="translated">스트림에 쓰거나 스트림에서 읽을 때의 제한 시간을 밀리초 단위로 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ReadWriteTimeout">
          <source>The number of milliseconds before the writing or reading times out. The default value is 300,000 milliseconds (5 minutes).</source>
          <target state="translated">쓰기 또는 읽기가 가능한 제한 시간(밀리초)입니다. 기본값은 300,000밀리초(5분)입니다.</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ReadWriteTimeout">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ReadWriteTimeout%2A&gt;</ph> property is used when writing to the stream returned by the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> method or reading from the stream returned by the <ph id="ph3">&lt;xref:System.Net.HttpWebResponse.GetResponseStream%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ReadWriteTimeout%2A&gt;</ph> 속성에서 반환 된 스트림에 쓸 때 사용 되는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> 메서드나에서 반환 된 스트림에서 읽기는 <ph id="ph3">&lt;xref:System.Net.HttpWebResponse.GetResponseStream%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ReadWriteTimeout">
          <source>Specifically, the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ReadWriteTimeout%2A&gt;</ph> property controls the time-out for the <ph id="ph2">&lt;xref:System.IO.Stream.Read%2A&gt;</ph> method, which is used to read the stream returned by the <ph id="ph3">&lt;xref:System.Net.HttpWebResponse.GetResponseStream%2A&gt;</ph> method, and for the <ph id="ph4">&lt;xref:System.IO.Stream.Write%2A&gt;</ph> method, which is used to write to the stream returned by the <ph id="ph5">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> method.</source>
          <target state="translated">특히,는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ReadWriteTimeout%2A&gt;</ph> 속성에 대 한 제한 시간을 제어는 <ph id="ph2">&lt;xref:System.IO.Stream.Read%2A&gt;</ph> 반환한 스트림을 읽는 데 사용 되는 메서드는 <ph id="ph3">&lt;xref:System.Net.HttpWebResponse.GetResponseStream%2A&gt;</ph> 메서드, 및에 대 한는 <ph id="ph4">&lt;xref:System.IO.Stream.Write%2A&gt;</ph> 는 에서반환된스트림에쓰기위해사용되는메서드를<ph id="ph5">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph>메서드.</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ReadWriteTimeout">
          <source>To specify the amount of time to wait for the request to complete, use the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Timeout%2A&gt;</ph> property.</source>
          <target state="translated">요청이 완료 될 때까지 대기 하는 시간을 지정 하려면 사용 된 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Timeout%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ReadWriteTimeout">
          <source>The following code example shows how to set the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ReadWriteTimeout%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ReadWriteTimeout%2A&gt;</ph> 속성을 설정하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.ReadWriteTimeout">
          <source>The request has already been sent.</source>
          <target state="translated">요청이 이미 전송되었습니다.</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.ReadWriteTimeout">
          <source>The value specified for a set operation is less than or equal to zero and is not equal to <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph></source>
          <target state="translated">set 작업에 지정된 값이 0보다 작거나 같고 <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph>와 같지 않은 경우</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Referer">
          <source>Gets or sets the value of the <ph id="ph1">&lt;see langword="Referer" /&gt;</ph> HTTP header.</source>
          <target state="translated">HTTP <ph id="ph1">&lt;see langword="Referer" /&gt;</ph> 헤더의 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Referer">
          <source>The value of the <ph id="ph1">&lt;see langword="Referer" /&gt;</ph> HTTP header.</source>
          <target state="translated">HTTP <ph id="ph1">&lt;see langword="Referer" /&gt;</ph> 헤더의 값입니다.</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Referer">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Referer">
          <source>If the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.Referer%2A&gt;</ph> property is set automatically when the request is redirected to another site.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A&gt;</ph> 속성은 <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.Referer%2A&gt;</ph> 속성은 다른 사이트에 요청을 리디렉션할 때 자동으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Referer">
          <source>To clear the <ph id="ph1">`Referer`</ph> HTTP header, set the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.Referer%2A&gt;</ph> property to <ph id="ph3">`null`</ph>.</source>
          <target state="translated">지우려면는 <ph id="ph1">`Referer`</ph> HTTP 헤더를 설정할는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.Referer%2A&gt;</ph> 속성을 <ph id="ph3">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Referer">
          <source>The value for this property is stored in <ph id="ph1">&lt;xref:System.Net.WebHeaderCollection&gt;</ph>.</source>
          <target state="translated">이 속성의 값은 <ph id="ph1">&lt;xref:System.Net.WebHeaderCollection&gt;</ph>에 저장됩니다.</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Referer">
          <source>If WebHeaderCollection is set, the property value is lost.</source>
          <target state="translated">WebHeaderCollection이 설정되면 속성 값이 손실됩니다.</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Referer">
          <source>The following code example sets the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Referer%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Referer%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.RequestUri">
          <source>Gets the original Uniform Resource Identifier (URI) of the request.</source>
          <target state="translated">요청의 원래 URI(Uniform Resource Identifier)를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.RequestUri">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that contains the URI of the Internet resource passed to the <ph id="ph2">&lt;see cref="M:System.Net.WebRequest.Create(System.String)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 메서드에 전달된 인터넷 리소스의 URI가 들어 있는 <ph id="ph2">&lt;see cref="M:System.Net.WebRequest.Create(System.String)" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.RequestUri">
          <source>The <ph id="ph1">&lt;xref:System.Uri&gt;</ph> object passed to <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> by the call to <ph id="ph3">&lt;xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Uri&gt;</ph> 에 전달 된 개체 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 호출 하 여 <ph id="ph3">&lt;xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.RequestUri">
          <source>Following a redirection header does not change the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.RequestUri%2A&gt;</ph> property.</source>
          <target state="translated">리디렉션 후 헤더 변경 되지 않습니다는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.RequestUri%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.RequestUri">
          <source>To get the actual URI that responded to the request, examine the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Address%2A&gt;</ph> property.</source>
          <target state="translated">요청에 응답 하는 실제 URI를 가져오려면 검사는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Address%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.RequestUri">
          <source>The following code example checks to see if the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> object <ph id="ph2">`req`</ph> was redirected to another location to fulfill the request, and sets the value of the <ph id="ph3">`hasChanged`</ph> variable to <ph id="ph4">`true`</ph> if the request was redirected; otherwise, <ph id="ph5">`hasChanged`</ph> is set to <ph id="ph6">`false`</ph>.</source>
          <target state="translated">다음 코드 예제에서는 확인 하 고 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 개체 <ph id="ph2">`req`</ph> 의 값을 설정 하 고 요청을 수행 하려면 다른 위치에 리디렉션된는 <ph id="ph3">`hasChanged`</ph> 변수를 <ph id="ph4">`true`</ph> 요청이 고, 그렇지 않으면 리디렉션된 경우 <ph id="ph5">`hasChanged`</ph> 로 설정 된 <ph id="ph6">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.SendChunked">
          <source>Gets or sets a value that indicates whether to send data in segments to the Internet resource.</source>
          <target state="translated">인터넷 리소스에 데이터를 분할된 형태로 보낼 것인지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.SendChunked">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to send data to the Internet resource in segments; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">인터넷 리소스에 데이터를 분할된 형태로 보내려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>로 설정하고 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.SendChunked">
          <source>The default value is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.SendChunked">
          <source>When <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the request sends data to the Internet resource in segments.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph> 은 <ph id="ph2">`true`</ph>, 요청 세그먼트에 인터넷 리소스에 데이터를 보냅니다.</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.SendChunked">
          <source>The Internet resource must support receiving chunked data.</source>
          <target state="translated">인터넷 리소스는 청크 분할 된 데이터를 받는 지원 해야 합니다.</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.SendChunked">
          <source>Changing the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph> property after the request has been started by calling the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph>, or <ph id="ph5">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph> method throws an <ph id="ph6">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">변경 된 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph> 호출 하 여 요청이 시작 된 후 속성은 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph>, 또는 <ph id="ph5">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph> 메서드가 throw는 <ph id="ph6">&lt;xref:System.InvalidOperationException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.SendChunked">
          <source>The following code example sets the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph> property to <ph id="ph2">`true`</ph> so that data can be sent in segments to the Internet resource.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph> 속성을 <ph id="ph2">`true`</ph> 인터넷 리소스에는 세그먼트에 데이터를 보낼 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.SendChunked">
          <source>The request has been started by calling the <ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.GetRequestStream" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Net.HttpWebRequest.GetResponse" /&gt;</ph>, or <ph id="ph4">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.GetRequestStream" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Net.HttpWebRequest.GetResponse" /&gt;</ph> 또는 <ph id="ph4">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /&gt;</ph> 메서드를 호출하여 요청이 시작되었습니다.</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.ServerCertificateValidationCallback">
          <source>Gets or sets a callback function to validate the server certificate.</source>
          <target state="translated">서버 인증서의 유효성을 검사할 콜백 함수를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ServerCertificateValidationCallback">
          <source>A callback function to validate the server certificate.</source>
          <target state="translated">서버 인증서의 유효성을 검사할 콜백 함수입니다.</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ServerCertificateValidationCallback">
          <source>The default is that no callback function is set and the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ServerCertificateValidationCallback%2A&gt;</ph> property is <ph id="ph2">`null`</ph>.</source>
          <target state="translated">기본값은 콜백 함수가 설정 되어 있는지와 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ServerCertificateValidationCallback%2A&gt;</ph> 속성은 <ph id="ph2">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.ServicePoint">
          <source>Gets the service point to use for the request.</source>
          <target state="translated">요청에 사용할 서비스 지점을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ServicePoint">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.ServicePoint" /&gt;</ph> that represents the network connection to the Internet resource.</source>
          <target state="translated">인터넷 리소스에 네트워크 연결을 나타내는 <ph id="ph1">&lt;see cref="T:System.Net.ServicePoint" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ServicePoint">
          <source>The <ph id="ph1">&lt;xref:System.Net.ServicePoint.Address%2A?displayProperty=nameWithType&gt;</ph> property may be different from <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.Address%2A?displayProperty=nameWithType&gt;</ph> if the request is redirected.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.ServicePoint.Address%2A?displayProperty=nameWithType&gt;</ph> 속성이 다를 수 있습니다 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.Address%2A?displayProperty=nameWithType&gt;</ph> 요청을 리디렉션할 경우.</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.SupportsCookieContainer">
          <source>Gets a value that indicates whether the request provides support for a <ph id="ph1">&lt;see cref="T:System.Net.CookieContainer" /&gt;</ph>.</source>
          <target state="translated">요청이 <ph id="ph1">&lt;see cref="T:System.Net.CookieContainer" /&gt;</ph>를 지원하는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.SupportsCookieContainer">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the request provides support for a <ph id="ph2">&lt;see cref="T:System.Net.CookieContainer" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 요청에 대 한 지원을 제공 하는 경우는 <ph id="ph2">&lt;see cref="T:System.Net.CookieContainer" /&gt;</ph>, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> to populate with data.</source>
          <target state="translated">데이터로 채울 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that specifies the destination for this serialization.</source>
          <target state="translated">이 직렬화의 대상을 지정하는 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Populates a <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> with the data needed to serialize the target object.</source>
          <target state="translated">대상 개체를 직렬화하는 데 필요한 데이터로 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>를 채웁니다.</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Any objects included in the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> are automatically tracked and serialized by the formatter.</source>
          <target state="translated">에 포함 된 모든 개체는 <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> 자동으로 추적 되 고 포맷터에 의해 serialize 합니다.</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Timeout">
          <source>Gets or sets the time-out value in milliseconds for the <ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.GetResponse" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Net.HttpWebRequest.GetRequestStream" /&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.GetResponse" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Net.HttpWebRequest.GetRequestStream" /&gt;</ph> 메서드의 제한 시간 값을 밀리초 단위로 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Timeout">
          <source>The number of milliseconds to wait before the request times out. The default value is 100,000 milliseconds (100 seconds).</source>
          <target state="translated">요청이 시간 초과하기 전까지 기다리는 시간(밀리초)입니다. 기본값은 100,000밀리초(100초)입니다.</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Timeout">
          <source><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Timeout%2A&gt;</ph> is the number of milliseconds that a subsequent synchronous request made with the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph> method waits for a response, and the <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> method waits for a stream.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Timeout%2A&gt;</ph> 후속 동기 요청으로 수행 된 시간 (밀리초)의 수는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph> , 응답을 대기 하는 메서드 및 <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> 메서드 스트림에 대 한 대기 합니다.</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Timeout">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Timeout%2A&gt;</ph> applies to the entire request and response, not individually to the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph> method calls.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Timeout%2A&gt;</ph> 전체 요청 및 응답을 개별적으로 되지 적용는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Timeout">
          <source>If the resource is not returned within the time-out period, the request throws a <ph id="ph1">&lt;xref:System.Net.WebException&gt;</ph> with the <ph id="ph2">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> property set to <ph id="ph3">&lt;xref:System.Net.WebExceptionStatus.Timeout?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">리소스 제한 시간 내에 반환 되지 않으면, 요청이 발생 한 <ph id="ph1">&lt;xref:System.Net.WebException&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> 속성이로 설정 <ph id="ph3">&lt;xref:System.Net.WebExceptionStatus.Timeout?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Timeout">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Timeout%2A&gt;</ph> property must be set before the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph> method is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Timeout%2A&gt;</ph> 하기 전에 속성을 설정 해야는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Timeout">
          <source>Changing the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Timeout%2A&gt;</ph> property after calling the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph> method has no effect</source>
          <target state="translated">변경 된 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Timeout%2A&gt;</ph> 호출한 후 속성은 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph> 메서드에서 아무 작업도</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Timeout">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Timeout%2A&gt;</ph> property has no effect on asynchronous requests made with the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Timeout%2A&gt;</ph> 속성 통한 비동기 요청에 영향을 주지는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Timeout">
          <source>In the case of asynchronous requests, the client application implements its own time-out mechanism.</source>
          <target state="translated">비동기 요청의 경우 클라이언트 응용 프로그램에는 제한 시간 메커니즘을 구현합니다.</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Timeout">
          <source>Refer to the example in the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph> method.</source>
          <target state="translated">예제를 참조는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Timeout">
          <source>To specify the amount of time to wait before a read or write operation times out, use the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ReadWriteTimeout%2A&gt;</ph> property.</source>
          <target state="translated">읽기 또는 쓰기 작업의 제한 시간에 시간을 지정 하려면 사용 된 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ReadWriteTimeout%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Timeout">
          <source>A Domain Name System (DNS) query may take up to 15 seconds to return or time out. If your request contains a host name that requires resolution and you set <ph id="ph1">&lt;xref:System.Net.FileWebRequest.Timeout%2A&gt;</ph> to a value less than 15 seconds, it may take 15 seconds or more before a <ph id="ph2">&lt;xref:System.Net.WebException&gt;</ph> is thrown to indicate a timeout on your request.</source>
          <target state="translated">DNS 도메인 이름 () 쿼리는 최대 15 초 반환할 또는 제한 시간 걸릴 수 있습니다. 요청이 포함 해상도 필요로 하는 호스트 이름을 설정한 경우 <ph id="ph1">&lt;xref:System.Net.FileWebRequest.Timeout%2A&gt;</ph> 값 보다 작거나 15 초 걸릴 수 있습니다 하기 전에 15 초 이상는 <ph id="ph2">&lt;xref:System.Net.WebException&gt;</ph> 요청에 대 한 시간을 나타내기 위해 throw 되 합니다.</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Timeout">
          <source>The following code example sets the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Timeout%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> object.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Timeout%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Timeout">
          <source>The value specified is less than zero and is not <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph>.</source>
          <target state="translated">지정된 값이 0보다 작고 <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph>가 아닌 경우</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.TransferEncoding">
          <source>Gets or sets the value of the <ph id="ph1">&lt;see langword="Transfer-encoding" /&gt;</ph> HTTP header.</source>
          <target state="translated">HTTP <ph id="ph1">&lt;see langword="Transfer-encoding" /&gt;</ph> 헤더의 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.TransferEncoding">
          <source>The value of the <ph id="ph1">&lt;see langword="Transfer-encoding" /&gt;</ph> HTTP header.</source>
          <target state="translated">HTTP <ph id="ph1">&lt;see langword="Transfer-encoding" /&gt;</ph> 헤더의 값입니다.</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.TransferEncoding">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.TransferEncoding">
          <source>Before you can set the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.TransferEncoding%2A&gt;</ph> property, you must first set the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">설정 하기 전에 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.TransferEncoding%2A&gt;</ph> 속성을 먼저 설정 해야는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph> 속성을 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.TransferEncoding">
          <source>Clearing <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.TransferEncoding%2A&gt;</ph> by setting it to <ph id="ph2">`null`</ph> has no effect on the value of <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph>.</source>
          <target state="translated">지우기 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.TransferEncoding%2A&gt;</ph> 로 설정 하 여 <ph id="ph2">`null`</ph> 의 값에 영향을 주지 <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.TransferEncoding">
          <source>Values assigned to the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.TransferEncoding%2A&gt;</ph> property replace any existing contents.</source>
          <target state="translated">에 할당 된 값은 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.TransferEncoding%2A&gt;</ph> 속성에는 모든 기존 내용을 대체 합니다.</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.TransferEncoding">
          <source>The value for this property is stored in <ph id="ph1">&lt;xref:System.Net.WebHeaderCollection&gt;</ph>.</source>
          <target state="translated">이 속성의 값은 <ph id="ph1">&lt;xref:System.Net.WebHeaderCollection&gt;</ph>에 저장됩니다.</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.TransferEncoding">
          <source>If WebHeaderCollection is set, the property value is lost.</source>
          <target state="translated">WebHeaderCollection이 설정되면 속성 값이 손실됩니다.</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.TransferEncoding">
          <source><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.TransferEncoding" /&gt;</ph> is set when <ph id="ph2">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph> is <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.TransferEncoding" /&gt;</ph>가 <ph id="ph3">&lt;see langword="false" /&gt;</ph>일 때, <ph id="ph2">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph>이 설정된 경우</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.TransferEncoding">
          <source><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.TransferEncoding" /&gt;</ph> is set to the value "Chunked".</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.TransferEncoding" /&gt;</ph>이 "Chunked" 값으로 설정된 경우</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
          <source>Gets or sets a value that indicates whether to allow high-speed NTLM-authenticated connection sharing.</source>
          <target state="translated">고속 NTLM 인증 연결 공유가 허용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to keep the authenticated connection open; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">인증된 연결을 열어 두려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
          <source>The default value for this property is <ph id="ph1">`false`</ph>, which causes the current connection to be closed after a request is completed.</source>
          <target state="translated">이 속성에 대 한 기본값은 <ph id="ph1">`false`</ph>, 때문에 현재 연결을 요청을 완료 한 후 닫아야 합니다.</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
          <source>Your application must go through the authentication sequence every time it issues a new request.</source>
          <target state="translated">새 요청을 발급 될 때마다 응용 프로그램 인증 시퀀스를 통해 이동 해야 합니다.</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
          <source>If this property is set to <ph id="ph1">`true`</ph>, the connection used to retrieve the response remains open after the authentication has been performed.</source>
          <target state="translated">이 속성은로 설정 하는 경우 <ph id="ph1">`true`</ph>, 인증이 수행 후 응답을 검색 하는 데 사용 하는 연결이 열려 있습니다.</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
          <source>In this case, other requests that have this property set to <ph id="ph1">`true`</ph> may use the connection without re-authenticating.</source>
          <target state="translated">이 경우 된 다른 요청으로이 속성이 설정 <ph id="ph1">`true`</ph> 다시 인증 하지 않고 연결을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
          <source>In other words, if a connection has been authenticated for user A, user B may reuse A's connection; user B's request is fulfilled based on the credentials of user A.</source>
          <target state="translated">즉, 사용자 A에 대 한 연결을 인증 하는 경우 사용자 B 다시 사용할 수 있습니다 A의 연결 1. 사용자의 자격 증명에 따라 B의 사용자 요청이 행은</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
          <source>Because it is possible for an application to use the connection without being authenticated, you need to be sure that there is no administrative vulnerability in your system when setting this property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">한지 관리 문제가 시스템에서이 속성을 설정할 때 확인 해야 하는 인증을 거치지 않고 연결을 사용 하도록 응용 프로그램에 대 한 수 있기 때문에 <ph id="ph1">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
          <source>If your application sends requests for multiple users (impersonates multiple user accounts) and relies on authentication to protect resources, do not set this property to <ph id="ph1">`true`</ph> unless you use connection groups as described below.</source>
          <target state="translated">응용 프로그램에서 여러 사용자에 게 요청 하는 경우 (가장 하는 여러 사용자 계정) 의존 하 여 리소스를 보호 하는 인증, 않으면이 속성을 설정 하지 <ph id="ph1">`true`</ph> 아래 설명 된 대로 연결 그룹을 사용 하지 않는 한 합니다.</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
          <source>You may want to consider enabling this mechanism if your are having performance problems and your application is running on a Web server with integrated Windows authentication.</source>
          <target state="translated">경우이 메커니즘을 사용 하도록 설정 하려는 경우에 성능 문제가 발생 하는 응용 프로그램은 Windows 통합된 인증으로 웹 서버에서 실행 되 고 합니다.</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
          <source>Enabling this setting opens the system to security risks.</source>
          <target state="translated">이 설정을 사용 하면 시스템 보안 위험을 엽니다.</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
          <source>If you set the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A&gt;</ph> property to <ph id="ph2">`true`</ph> be sure to take the following precautions:</source>
          <target state="translated">설정 하는 경우는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A&gt;</ph> 속성을 <ph id="ph2">`true`</ph> 다음 예방 조치를 수행 하시기 바랍니다.</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ConnectionGroupName%2A&gt;</ph> property to manage connections for different users.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ConnectionGroupName%2A&gt;</ph> 속성을 다른 사용자에 대 한 연결을 관리 합니다.</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
          <source>This avoids the potential use of the connection by non-authenticated applications.</source>
          <target state="translated">이 인증 되지 않은 응용 프로그램에서 연결의 사용 가능성을 방지합니다.</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
          <source>For example, user A should have a unique connection group name that is different from user B. This provides a layer of isolation for each user account.</source>
          <target state="translated">예를 들어 사용자 A 2. 사용자와에서 다른 고유한 연결 그룹 이름이 있어야 각 사용자 계정에 대 한 격리 계층을 제공합니다.</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
          <source>Run your application in a protected environment to help avoid possible connection exploits.</source>
          <target state="translated">연결이 악용을 방지 하려면 보호 된 환경에서 응용 프로그램을 실행 합니다.</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
          <source>If you control the back-end server, as an alternative you might consider turning off authentication persistence.</source>
          <target state="translated">백 엔드 서버를 제어 하는 경우 대신 해야 할 인증 지 속성을 해제 합니다.</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
          <source>This increases performance to a lesser degree, but it is safer.</source>
          <target state="translated">어느 정도 성능이 향상 되지만 더 안전 합니다.</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
          <source>For more details, search for AuthPersistence in the MSDN library at <bpt id="p1">[</bpt><ph id="ph1">http://msdn.microsoft.com/library</ph><ept id="p1">](http://msdn.microsoft.com/library)</ept>.</source>
          <target state="translated">자세한 내용은 MSDN library에서 AuthPersistence 검색 <bpt id="p1">[</bpt> <ph id="ph1">http://msdn.microsoft.com/library</ph> <ept id="p1">](http://msdn.microsoft.com/library)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
          <source>If both <ph id="ph1">&lt;xref:System.Net.WebRequest.PreAuthenticate%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A&gt;</ph> are set to <ph id="ph3">`true`</ph>, each request is sent using a connection from the unsafe pool, but with an Authorization header.</source>
          <target state="translated">두 <ph id="ph1">&lt;xref:System.Net.WebRequest.PreAuthenticate%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A&gt;</ph> 로 설정 <ph id="ph3">`true`</ph>, 권한 부여 헤더를 사용 하지만 안전 하지 않은 풀에서 연결을 사용 하 여 각 요청이 보내집니다.</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
          <source>Unrestricted Web permission is required to set this property.</source>
          <target state="translated">이 속성을 설정 하려면 제한 되지 않은 웹 권한이 필요 합니다.</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.UseDefaultCredentials">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that controls whether default credentials are sent with requests.</source>
          <target state="translated">기본 자격 증명을 요청과 함께 보내는지 여부를 제어하는 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UseDefaultCredentials">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the default credentials are used; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본 자격 증명이 사용되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UseDefaultCredentials">
          <source>The default value is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UseDefaultCredentials">
          <source>Set this property to <ph id="ph1">`true`</ph> when requests made by this <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> object should, if requested by the server, be authenticated using the credentials of the currently logged on user.</source>
          <target state="translated">이 속성을 설정 <ph id="ph1">`true`</ph> 에서이 요청을 수행 하는 경우 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 개체, 서버에 의해 요청 된 경우 인증 해야 현재 로그온된 한 사용자의 자격 증명을 사용 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UseDefaultCredentials">
          <source>For client applications, this is the desired behavior in most scenarios.</source>
          <target state="translated">이 클라이언트 응용 프로그램에 대 한 대부분의 시나리오에서 원하는 동작 합니다.</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UseDefaultCredentials">
          <source>For middle-tier applications, such as ASP.NET applications, instead of using this property, you would typically set the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Credentials%2A&gt;</ph> property to the credentials of the client on whose behalf the request is made.</source>
          <target state="translated">이 속성을 사용 하는 대신 ASP.NET 응용 프로그램 같은 중간 계층 응용 프로그램에 일반적으로 설정한는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Credentials%2A&gt;</ph> 속성 대신 요청 클라이언트의 자격 증명을 합니다.</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.UseDefaultCredentials">
          <source>You attempted to set this property after the request was sent.</source>
          <target state="translated">요청이 전송된 후 이 속성을 설정하려고 했습니다.</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.UserAgent">
          <source>Gets or sets the value of the <ph id="ph1">&lt;see langword="User-agent" /&gt;</ph> HTTP header.</source>
          <target state="translated">HTTP <ph id="ph1">&lt;see langword="User-agent" /&gt;</ph> 헤더의 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UserAgent">
          <source>The value of the <ph id="ph1">&lt;see langword="User-agent" /&gt;</ph> HTTP header.</source>
          <target state="translated">HTTP <ph id="ph1">&lt;see langword="User-agent" /&gt;</ph> 헤더의 값입니다.</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UserAgent">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UserAgent">
          <source>The value for this property is stored in <ph id="ph1">&lt;see cref="T:System.Net.WebHeaderCollection" /&gt;</ph>.</source>
          <target state="translated">이 속성의 값은 <ph id="ph1">&lt;see cref="T:System.Net.WebHeaderCollection" /&gt;</ph>에 저장됩니다.</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UserAgent">
          <source>If WebHeaderCollection is set, the property value is lost.</source>
          <target state="translated">WebHeaderCollection이 설정되면 속성 값이 손실됩니다.</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UserAgent">
          <source>The following code example sets the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.UserAgent%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.UserAgent%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>