<Type Name="AuthenticationManager" FullName="System.Net.AuthenticationManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ea45447b9690b774a446653fd361d963bc6300d3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30470187" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AuthenticationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AuthenticationManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.AuthenticationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class AuthenticationManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class AuthenticationManager" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>클라이언트 인증 처리 중 호출된 인증 모듈을 관리합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.AuthenticationManager> 응용 프로그램에서 사용 하는 인증 모듈을 관리 하는 정적 클래스가입니다. 보호 되는 리소스를 요청 하면는 <xref:System.Net.AuthenticationManager> 호출은 <xref:System.Net.AuthenticationManager.Authenticate%2A> 가져올 메서드를 한 <xref:System.Net.Authorization> 후속 요청에 사용할 인스턴스를 합니다.  
  
 <xref:System.Net.AuthenticationManager> 각 등록 된 인증 모듈을 호출 하 여 쿼리는 <xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=nameWithType> 각 모듈에 대 한 메서드. 첫 번째 인증 모듈을 반환 하는 <xref:System.Net.Authorization> 인스턴스 요청을 인증 하는 데 사용 됩니다.  
  
 기본, 다이제스트, 제공 하는 모듈 협상, NTLM 및 Kerberos 인증 유형은 등록 된는 <xref:System.Net.AuthenticationManager> 기본적으로 합니다. 구현 하는 추가 인증 모듈의 <xref:System.Net.IAuthenticationModule> 인터페이스를 사용 하 여 추가할 수는 <xref:System.Net.AuthenticationManager.Register%2A> 메서드. 인증 모듈 목록에 추가 된 순서 대로 호출 됩니다.  
  
> [!NOTE]
>  Kerberos 및 협상 인증 유형을 Windows 95/98 또는 Windows NT 4.0에서 사용할 수 없습니다.  
  
   
  
## Examples  
 [!code-cpp[System.Net.Authentication#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Authentication/CPP/custombasicauthentication.cpp#1)]
 [!code-csharp[System.Net.Authentication#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Authentication/CS/custombasicauthentication.cs#1)]
 [!code-vb[System.Net.Authentication#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Authentication/VB/custombasicauthentication.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public static System.Net.Authorization Authenticate (string challenge, System.Net.WebRequest request, System.Net.ICredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Authorization Authenticate(string challenge, class System.Net.WebRequest request, class System.Net.ICredentials credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Authenticate (challenge As String, request As WebRequest, credentials As ICredentials) As Authorization" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::Authorization ^ Authenticate(System::String ^ challenge, System::Net::WebRequest ^ request, System::Net::ICredentials ^ credentials);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Authorization</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="challenge" Type="System.String" />
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="credentials" Type="System.Net.ICredentials" />
      </Parameters>
      <Docs>
        <param name="challenge">인터넷 리소스가 반환한 요구입니다.</param>
        <param name="request">인증 요구를 초기화한 <see cref="T:System.Net.WebRequest" />입니다.</param>
        <param name="credentials">이 요청과 관련된 <see cref="T:System.Net.ICredentials" />입니다.</param>
        <summary>등록된 각 인증 모듈을 호출하여 인증 요청에 응답하는 첫 번째 모듈을 찾습니다.</summary>
        <returns>인증을 시도한 결과가 들어 있는 <see cref="T:System.Net.Authorization" /> 클래스의 인스턴스입니다. 요구(challenge)에 응답할 인증 모듈이 없으면, 이 메서드는 <see langword="null" />을 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.AuthenticationManager.Authenticate%2A> 메서드 호출의 <xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=nameWithType> 각 등록 된 인증 모듈을 사용 하 여 응답 모듈 중 하나가 될 때까지 메서드는 <xref:System.Net.Authorization> 인스턴스.  
  
 첫 번째 <xref:System.Net.Authorization> 반환 된 인스턴스는 요청을 인증 하는 데 사용 됩니다. 인증 모듈이 없는 요청을 인증할 수 있는 경우는 <xref:System.Net.AuthenticationManager.Authenticate%2A> 메서드 반환 `null`합니다.  
  
 인증 모듈에 등록 되는 순서로 호출 됩니다는 <xref:System.Net.AuthenticationManager>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="challenge" />가 <see langword="null" />인 경우  
  
 또는  
  
 <paramref name="request" />가 <see langword="null" />인 경우  
  
 또는  
  
 <paramref name="credentials" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="CredentialPolicy">
      <MemberSignature Language="C#" Value="public static System.Net.ICredentialPolicy CredentialPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.ICredentialPolicy CredentialPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.AuthenticationManager.CredentialPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CredentialPolicy As ICredentialPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::ICredentialPolicy ^ CredentialPolicy { System::Net::ICredentialPolicy ^ get(); void set(System::Net::ICredentialPolicy ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentialPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Net.HttpWebRequest" /> 클래스를 통한 리소스 요청에 사용할 자격 증명 정책을 가져오거나 설정합니다.</summary>
        <value>요청과 함께 자격 증명을 보낼지 여부를 결정하는 <see cref="T:System.Net.ICredentialPolicy" /> 인터페이스를 구현하는 개체입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 자격 증명 정책을 웹 페이지의 콘텐츠와 같은 네트워크 리소스에 대 한 요청을 보낼 때 자격 증명을 보낼 것인지 결정 합니다. 자격 증명을 보내는 경우 클라이언트 인증을 요구 하는 서버 클라이언트의 자격 증명이 필요 함을 나타내는 응답을 전송 하는 대신 요청을 받으면 클라이언트를 시도할 수 있습니다. 서버에 대 한 왕복을 저장이이 네트워크를 통해 자격 증명을 보낼 때는 보안 위험이 비교 평가 해야 합니다. 대상 서버에 클라이언트 인증이 필요 없는 경우 자격 증명을 전송 하지 않도록는 것이 좋습니다.  
  
 자격 증명 정책을 사용 하거나 자격 증명을 지정 하는 요청에 대해서만 호출 됩니다는 <xref:System.Net.WebProxy> 자격 증명을 지정 하는 개체입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 자격 증명 정책을 설정 하는 방법을 보여 줍니다.  
  
 [!code-cpp[NclCredPolicy#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#2)]
 [!code-csharp[NclCredPolicy#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomTargetNameDictionary">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.StringDictionary CustomTargetNameDictionary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Specialized.StringDictionary CustomTargetNameDictionary" />
      <MemberSignature Language="DocId" Value="P:System.Net.AuthenticationManager.CustomTargetNameDictionary" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CustomTargetNameDictionary As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Specialized::StringDictionary ^ CustomTargetNameDictionary { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Net.WebRequest" />와 이 클래스의 파생 클래스를 통한 요청에 대해 Kerberos 인증을 수행하는 동안 호스트를 식별하는 데 사용되는 SPN(서비스 사용자 이름)이 들어 있는 사전을 가져옵니다.</summary>
        <value>호스트 정보로 구성된 키에 대한 SPN 값이 들어 있는 쓰기 가능한 <see cref="T:System.Collections.Specialized.StringDictionary" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SPN은 클라이언트에서 서비스 또는 상호 인증을 위해 서버에서 응용 프로그램 인스턴스 고유 하 게 식별 하는 이름입니다. 상호 인증이 기본적으로 요청 되 고 설정 하 여 요구할 수 있는 <xref:System.Net.WebRequest.AuthenticationLevel%2A?displayProperty=nameWithType> 를 <xref:System.Net.Security.AuthenticationLevel.MutualAuthRequired> 요청에 있습니다.  
  
 경우는 <xref:System.Net.WebRequest> 클라이언트에서 꼭 필요한 대상에 대 한 상호 인증 SPN 필요 합니다. SPN을 알고 있는 경우에 추가할 수 있습니다는 <xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A> 요청을 보냅니다. 하지만 SPN 정보가이 사전에 추가 하지 않은 경우는 <xref:System.Net.AuthenticationManager> 사용 하 여는 <xref:System.Net.WebRequest.RequestUri%2A> 메서드를 가장 가능성이 높은 SPN; 작성이 계산 된 값 이며 올바르지 않을 수 있습니다. 상호 인증을 시도 하 고 실패 하면 사전 계산 된 SPN을 확인 하려면 확인할 수 있습니다. SPN이 없으면 인증 프로토콜은 상호 인증을 지원 하지 않는 경우 사전에 입력 됩니다.  
  
 이 사전에 SPN 값을 추가 하려면 사용 된 <xref:System.Uri.AbsoluteUri%2A> 의 <xref:System.Net.WebRequest.RequestUri%2A> 키로 합니다. 키를 포함 하도록 잘렸습니다. 내부적으로 <xref:System.Uri.Scheme%2A>, <xref:System.Uri.Host%2A>, 및 <xref:System.Uri.Port%2A> 기본 포트가 없는 경우.  
  
> [!NOTE]
>  메서드 및 속성의 액세스는 <xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A> 필요 무제한 <xref:System.Net.WebPermission>합니다.  
  
> [!NOTE]
>  프록시를 통해 Kerberos 인증을 수행 하면 프록시 및 최종 호스트 이름이 모두 해결 해야 할 spn입니다. 프록시 이름 확인은 시간 초과로 보호 됩니다. SPN 지정 하는 최종 호스트 이름의 확인 DNS 조회 걸리며이 작업와 직접 관련 된 제한 시간이 없습니다. 따라서 동기 작업 제한 시간이 만료 오래 걸릴 수 있습니다. 이 문제를 해결 하려면 요청 하기 전에 SPN 캐시를 최종 호스트의 URI 접두사를 추가 합니다.  
  
 이제 버전 3.5 SP1에서는 <xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A> 속성이 설정되지 않은 경우 NTLM(NT LAN Manager) 인증 교환에서 SPN의 요청 URL에 사용된 호스트 이름을 지정하도록 기본적으로 설정됩니다. 요청 URL에 사용된 호스트 이름은 클라이언트 요청의 <xref:System.Net.HttpRequestHeader?displayProperty=nameWithType>에 지정된 호스트 헤더와 다를 수 있습니다. 요청 URL에 사용된 호스트 이름은 서버의 실제 호스트 이름, 서버의 컴퓨터 이름, 컴퓨터의 IP 주소 또는 루프백 주소와 다를 수 있습니다. 이 경우 Windows가 인증 요청에 실패합니다. 호스트 이름을 사용 하는 Windows에 알리기 위해 할 수는 문제를 해결 하기 위해 클라이언트에서 요청 URL에서 요청 (예: "contoso")은 실제로 로컬 컴퓨터에 대 한 대체 이름입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는의 내용을 표시 하는 방법을 보여 줍니다는 <xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A>합니다.  
  
 [!code-cpp[NclCredPolicy#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#5)]
 [!code-csharp[NclCredPolicy#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public static System.Net.Authorization PreAuthenticate (System.Net.WebRequest request, System.Net.ICredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Authorization PreAuthenticate(class System.Net.WebRequest request, class System.Net.ICredentials credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PreAuthenticate (request As WebRequest, credentials As ICredentials) As Authorization" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::Authorization ^ PreAuthenticate(System::Net::WebRequest ^ request, System::Net::ICredentials ^ credentials);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Authorization</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="credentials" Type="System.Net.ICredentials" />
      </Parameters>
      <Docs>
        <param name="request">인터넷 리소스에 대한 <see cref="T:System.Net.WebRequest" />입니다.</param>
        <param name="credentials">요청과 관련된 <see cref="T:System.Net.ICredentials" />입니다.</param>
        <summary>요청을 사전 인증합니다.</summary>
        <returns>요청을 사전 인증할 수 있으면, <see cref="T:System.Net.Authorization" /> 클래스의 인스턴스이고, 그렇지 않으면 <see langword="null" />입니다. <paramref name="credentials" />이(가) <see langword="null" />이면 이 메서드는 <see langword="null" />을(를) 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 인증 모듈에는 요청을 사전 인증할 수 있는 경우는 <xref:System.Net.AuthenticationManager.PreAuthenticate%2A> 메서드 인스턴스를 반환 하 고 챌린지를 발급 하는 리소스를 기다리지 않고 서버에 인증 정보를 보냅니다. 이 동작은 RFC 2617 섹션 3.3에에서 같습니다 (HTTP 인증: 기본 및 다이제스트 액세스 인증). 인증 요구로 인 한 추가 왕복을 방지 하 여 서버 효율성을 개선 하기 위해 클라이언트를 허용 하는 인증 모듈을 사전 인증을 지원 합니다.  
  
 집합을 요청 하는 사전 인증할 수 있는 권한 부여 모듈의 <xref:System.Net.IAuthenticationModule.CanPreAuthenticate%2A?displayProperty=nameWithType> 속성을 `true`합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public static void Register (System.Net.IAuthenticationModule authenticationModule);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Register(class System.Net.IAuthenticationModule authenticationModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.Register(System.Net.IAuthenticationModule)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Register (authenticationModule As IAuthenticationModule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Register(System::Net::IAuthenticationModule ^ authenticationModule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationModule" Type="System.Net.IAuthenticationModule" />
      </Parameters>
      <Docs>
        <param name="authenticationModule">인증 관리자를 사용하여 등록할 <see cref="T:System.Net.IAuthenticationModule" />입니다.</param>
        <summary>인증 관리자를 사용하여 인증 모듈을 등록합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.AuthenticationManager.Register%2A> 인증 모듈의 모듈에 의해 호출 목록의 끝에 추가 하는 메서드는 <xref:System.Net.AuthenticationManager.Authenticate%2A> 메서드. 인증 모듈 목록에 추가 된 순서 대로 호출 됩니다. 하는 경우 동일한 모듈 <xref:System.Net.IAuthenticationModule.AuthenticationType%2A> 가 이미 등록 되어이 메서드는 등록 된 모듈을 제거 및 추가 `authenticationModule` 목록의 끝에 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 인증 관리자와 사용자 지정 인증 모듈을 등록 합니다. 전체 예제에 대 한 참조는 <xref:System.Net.AuthenticationManager> 클래스입니다.  
  
 [!code-cpp[System.Net.Sockets.Authentication#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.Authentication/CPP/custombasicauthentication.cpp#2)]
 [!code-csharp[System.Net.Sockets.Authentication#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.Authentication/CS/custombasicauthentication.cs#2)]
 [!code-vb[System.Net.Sockets.Authentication#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.Authentication/VB/custombasicauthentication.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="authenticationModule" />가 <see langword="null" />인 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드를 실행 합니다. 연관된 열거형: <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
      </Docs>
    </Member>
    <Member MemberName="RegisteredModules">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerator RegisteredModules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.IEnumerator RegisteredModules" />
      <MemberSignature Language="DocId" Value="P:System.Net.AuthenticationManager.RegisteredModules" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RegisteredModules As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::IEnumerator ^ RegisteredModules { System::Collections::IEnumerator ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>인증 관리자로 등록하는 인증 모듈의 목록을 가져옵니다.</summary>
        <value>등록된 인증 모듈을 읽을 수 있도록 하는 <see cref="T:System.Collections.IEnumerator" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.AuthenticationManager.RegisteredModules%2A> 속성은 제공는 <xref:System.Collections.IEnumerator> 목록이 수 있도록 하는 인스턴스 등록 인증 모듈을 읽을 수 있습니다. <xref:System.Net.AuthenticationManager.Register%2A> 모듈 목록에 추가 하는 메서드 및 <xref:System.Net.AuthenticationManager.Unregister%2A> 메서드에서 모듈을 제거 합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Net.AuthenticationManager.RegisteredModules%2A> 인증 관리자와 등록 된 인증 모듈의 목록을 가져올 속성입니다. 전체 예제에 대 한 참조는 <xref:System.Net.AuthenticationManager> 클래스입니다.  
  
 [!code-cpp[System.Net.Authentication#8](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Authentication/CPP/custombasicauthentication.cpp#8)]
 [!code-csharp[System.Net.Authentication#8](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Authentication/CS/custombasicauthentication.cs#8)]
 [!code-vb[System.Net.Authentication#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Authentication/VB/custombasicauthentication.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Unregister">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>등록된 모듈 목록에서 인증 모듈을 제거합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public static void Unregister (System.Net.IAuthenticationModule authenticationModule);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unregister(class System.Net.IAuthenticationModule authenticationModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.Unregister(System.Net.IAuthenticationModule)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unregister (authenticationModule As IAuthenticationModule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unregister(System::Net::IAuthenticationModule ^ authenticationModule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationModule" Type="System.Net.IAuthenticationModule" />
      </Parameters>
      <Docs>
        <param name="authenticationModule">등록된 모듈 목록에서 제거할 <see cref="T:System.Net.IAuthenticationModule" />입니다.</param>
        <summary>등록된 모듈 목록에서 지정된 인증 모듈을 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.AuthenticationManager.Unregister%2A> 인증 모듈에 의해 호출 목록에서 지정 된 인증 모듈을 제거 하는 메서드는 <xref:System.Net.AuthenticationManager.Authenticate%2A> 메서드. 모듈을 사용 하 여 목록에 추가 해야 합니다는 <xref:System.Net.AuthenticationManager.Register%2A> 목록에서 제거 하려면 먼저 메서드.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Net.AuthenticationManager.Unregister%2A> 메서드를 등록 된 모듈 목록에서 지정 된 인증 모듈을 제거 합니다. 전체 예제에 대 한 참조는 <xref:System.Net.AuthenticationManager> 클래스입니다.  
  
 [!code-cpp[System.Net.Sockets.Authentication#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.Authentication/CPP/custombasicauthentication.cpp#2)]
 [!code-csharp[System.Net.Sockets.Authentication#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.Authentication/CS/custombasicauthentication.cs#2)]
 [!code-vb[System.Net.Sockets.Authentication#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.Authentication/VB/custombasicauthentication.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="authenticationModule" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.InvalidOperationException">지정된 <see cref="T:System.Net.IAuthenticationModule" />이 등록되지 않은 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드를 실행 합니다. 연관된 열거형: <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public static void Unregister (string authenticationScheme);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unregister(string authenticationScheme) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.Unregister(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unregister (authenticationScheme As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unregister(System::String ^ authenticationScheme);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationScheme" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="authenticationScheme">제거할 모듈의 인증 체계입니다.</param>
        <summary>등록된 모듈 목록에서 지정된 인증 체계가 포함된 인증 모듈을 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.AuthenticationManager.Unregister%2A> 인증 모듈에 의해 호출의 목록에서 지정된 된 인증 체계를 사용 하 여 인증 모듈을 제거 하는 메서드는 <xref:System.Net.AuthenticationManager.Authenticate%2A> 메서드. 모듈을 사용 하 여 목록에 추가 해야 합니다는 <xref:System.Net.AuthenticationManager.Register%2A> 목록에서 제거 하려면 먼저 메서드.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Net.AuthenticationManager.Unregister%2A> 메서드를 등록 된 모듈의 목록에서 지정된 된 인증 체계를 포함 하는 인증 모듈을 제거 합니다.  
  
 [!code-cpp[AuthenticationManager_UnRegister2#2](~/samples/snippets/cpp/VS_Snippets_Remoting/AuthenticationManager_UnRegister2/CPP/authenticationmanager_unregister2.cpp#2)]
 [!code-csharp[AuthenticationManager_UnRegister2#2](~/samples/snippets/csharp/VS_Snippets_Remoting/AuthenticationManager_UnRegister2/CS/authenticationmanager_unregister2.cs#2)]
 [!code-vb[AuthenticationManager_UnRegister2#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/AuthenticationManager_UnRegister2/VB/authenticationmanager_unregister2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="authenticationScheme" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.InvalidOperationException">이 인증 체계 모듈이 등록되지 않은 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드를 실행 합니다. 연관된 열거형: <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>