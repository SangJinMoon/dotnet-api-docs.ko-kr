<Type Name="SocketAddress" FullName="System.Net.SocketAddress">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9450cb79ab5f58542387491b72545105e08e82b0" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SocketAddress" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SocketAddress extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.SocketAddress" />
  <TypeSignature Language="VB.NET" Value="Public Class SocketAddress" />
  <TypeSignature Language="C++ CLI" Value="public ref class SocketAddress" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Primitives</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="faa1b-101">
        <see cref="T:System.Net.EndPoint" /> 파생 클래스의 serialize된 정보를 저장합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="faa1b-101">Stores serialized information from <see cref="T:System.Net.EndPoint" /> derived classes.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="faa1b-102">기본 버퍼의 처음 2 바이트에 대 한 예약어는 <xref:System.Net.Sockets.AddressFamily> 열거형 값입니다.</span><span class="sxs-lookup"><span data-stu-id="faa1b-102">The first 2 bytes of the underlying buffer are reserved for the <xref:System.Net.Sockets.AddressFamily> enumerated value.</span></span> <span data-ttu-id="faa1b-103">경우는 <xref:System.Net.SocketAddress> 는 저장 하는 데는 serialize 된 <xref:System.Net.IPEndPoint>, 세 번째와 네 번째 바이트는 포트 번호 정보를 저장 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="faa1b-103">When the <xref:System.Net.SocketAddress> is used to store a serialized <xref:System.Net.IPEndPoint>, the third and fourth bytes are used to store port number information.</span></span> <span data-ttu-id="faa1b-104">다음 바이트 IP 주소를 저장 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="faa1b-104">The next bytes are used to store the IP address.</span></span> <span data-ttu-id="faa1b-105">해당 하는 인덱스 위치;를 참조 하 여이 기본 바이트 버퍼 내에서 모든 정보에 액세스할 수 있습니다. 바이트 버퍼가 0부터 시작 하는 인덱스가 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="faa1b-105">You can access any information within this underlying byte buffer by referring to its index position; the byte buffer uses zero-based indexing.</span></span> <span data-ttu-id="faa1b-106">사용할 수도 있습니다는 <xref:System.Net.SocketAddress.Family%2A> 및 <xref:System.Net.SocketAddress.Size%2A> 가져올 속성의 <xref:System.Net.Sockets.AddressFamily> 값과 버퍼 크기를 각각.</span><span class="sxs-lookup"><span data-stu-id="faa1b-106">You can also use the <xref:System.Net.SocketAddress.Family%2A> and <xref:System.Net.SocketAddress.Size%2A> properties to get the <xref:System.Net.Sockets.AddressFamily> value and the buffer size, respectively.</span></span> <span data-ttu-id="faa1b-107">문자열로 서이 정보를 보려면 사용 하 여는 <xref:System.Net.SocketAddress.ToString%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="faa1b-107">To view any of this information as a string, use the <xref:System.Net.SocketAddress.ToString%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="faa1b-108">다음 예제에서는 사용 하는 방법을 <xref:System.Net.SocketAddress> 의 인스턴스를 serialize 하는 <xref:System.Net.EndPoint> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="faa1b-108">The following example demonstrates how to use <xref:System.Net.SocketAddress> to serialize an instance of the <xref:System.Net.EndPoint> class.</span></span> <span data-ttu-id="faa1b-109">Serialization의 기본 바이트 버퍼 이후에 <xref:System.Net.SocketAddress> 모든 포함는 <xref:System.Net.IPEndPoint> 상태 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="faa1b-109">After serialization, the underlying byte buffer of the <xref:System.Net.SocketAddress> contains all of the <xref:System.Net.IPEndPoint> state information.</span></span>  
  
 [!code-cpp[Classic SocketAddressExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SocketAddressExample/CPP/source.cpp#1)]
 [!code-csharp[Classic SocketAddressExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SocketAddressExample/CS/source.cs#1)]
 [!code-vb[Classic SocketAddressExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SocketAddressExample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="faa1b-110">
            <see cref="T:System.Net.SocketAddress" /> 클래스의 새 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faa1b-110">Creates a new instance of the <see cref="T:System.Net.SocketAddress" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SocketAddress (System.Net.Sockets.AddressFamily family);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Sockets.AddressFamily family) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As AddressFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SocketAddress(System::Net::Sockets::AddressFamily family);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
      </Parameters>
      <Docs>
        <param name="family">
          <span data-ttu-id="faa1b-111">
            <see cref="T:System.Net.Sockets.AddressFamily" /> 열거형 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faa1b-111">An <see cref="T:System.Net.Sockets.AddressFamily" /> enumerated value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="faa1b-112">지정된 주소 패밀리에 대한 <see cref="T:System.Net.SocketAddress" /> 클래스의 새 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faa1b-112">Creates a new instance of the <see cref="T:System.Net.SocketAddress" /> class for the given address family.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="faa1b-113">이 오버 로드는 32 바이트를 내부 버퍼 크기를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="faa1b-113">This overload sets the underlying buffer size to 32 bytes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SocketAddress (System.Net.Sockets.AddressFamily family, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Sockets.AddressFamily family, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As AddressFamily, size As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SocketAddress(System::Net::Sockets::AddressFamily family, int size);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="family">
          <span data-ttu-id="faa1b-114">
            <see cref="T:System.Net.Sockets.AddressFamily" /> 열거형 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faa1b-114">An <see cref="T:System.Net.Sockets.AddressFamily" /> enumerated value.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="faa1b-115">내부 버퍼에 할당할 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faa1b-115">The number of bytes to allocate for the underlying buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="faa1b-116">지정된 주소 패밀리와 버퍼 크기를 사용하여 <see cref="T:System.Net.SocketAddress" /> 클래스의 새 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faa1b-116">Creates a new instance of the <see cref="T:System.Net.SocketAddress" /> class using the specified address family and buffer size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="faa1b-117">이 오버 로드를 사용 하 여의 새 인스턴스를 만드는 <xref:System.Net.SocketAddress> 특정 기본 버퍼 크기를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="faa1b-117">Use this overload to create a new instance of the <xref:System.Net.SocketAddress> class with a particular underlying buffer size.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="faa1b-118">
            <paramref name="size" />가 2보다 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faa1b-118">
              <paramref name="size" /> is less than 2.</span>
          </span>
          <span data-ttu-id="faa1b-119">이러한 2바이트는 <paramref name="family" />를 저장하는 데 필요합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faa1b-119">These 2 bytes are needed to store <paramref name="family" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object comparand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object comparand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.SocketAddress.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (comparand As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ comparand);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="comparand">
          <span data-ttu-id="faa1b-120">현재 <see cref="T:System.Object" />과 비교할 <see langword="Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faa1b-120">The <see cref="T:System.Object" /> to compare with the current <see langword="Object" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="faa1b-121">지정한 <see langword="Object" />가 현재 <see langword="Object" />와 같은지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faa1b-121">Determines whether the specified <see langword="Object" /> is equal to the current <see langword="Object" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="faa1b-122">지정된 <see langword="true" />가 현재<see langword="Object" />와 같으면 <see langword="Object" /> 이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faa1b-122">
              <see langword="true" /> if the specified <see langword="Object" /> is equal to the current <see langword="Object" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Family">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.AddressFamily Family { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Sockets.AddressFamily Family" />
      <MemberSignature Language="DocId" Value="P:System.Net.SocketAddress.Family" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Family As AddressFamily" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::AddressFamily Family { System::Net::Sockets::AddressFamily get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.AddressFamily</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="faa1b-123">현재 <see cref="T:System.Net.Sockets.AddressFamily" />의 <see cref="T:System.Net.SocketAddress" /> 열거형 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faa1b-123">Gets the <see cref="T:System.Net.Sockets.AddressFamily" /> enumerated value of the current <see cref="T:System.Net.SocketAddress" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="faa1b-124">
            <see cref="T:System.Net.Sockets.AddressFamily" /> 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faa1b-124">One of the <see cref="T:System.Net.Sockets.AddressFamily" /> enumerated values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="faa1b-125">이 메서드를 가져옵니다는 <xref:System.Net.Sockets.AddressFamily> 현재의 주소 지정 체계를 나타내는 값을 열거 <xref:System.Net.SocketAddress>합니다.</span><span class="sxs-lookup"><span data-stu-id="faa1b-125">This method gets the <xref:System.Net.Sockets.AddressFamily> enumerated value that represents the addressing scheme of the current <xref:System.Net.SocketAddress>.</span></span> <span data-ttu-id="faa1b-126">해당 문자열 표시를 보려는 경우 <xref:System.Net.Sockets.AddressFamily>를 사용 하 여는 <xref:System.Net.SocketAddress.ToString%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="faa1b-126">If you want to view the corresponding string representation of <xref:System.Net.Sockets.AddressFamily>, use the <xref:System.Net.SocketAddress.ToString%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.AddressFamily" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.SocketAddress.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="faa1b-127">특정 형식에 대한 해시 함수로 사용되며, 해시 알고리즘 및 해시 테이블과 같은 데이터 구조에 사용하기 적합합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faa1b-127">Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="faa1b-128">현재 <see cref="T:System.Object" />의 해시 코드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faa1b-128">A hash code for the current <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public byte this[int offset] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Net.SocketAddress.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(offset As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte default[int] { System::Byte get(int offset); void set(int offset, System::Byte value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="faa1b-129">필요한 정보의 배열 인덱스 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faa1b-129">The array index element of the desired information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="faa1b-130">내부 버퍼의 지정된 인덱스 요소를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faa1b-130">Gets or sets the specified index element in the underlying buffer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="faa1b-131">내부 버퍼의 지정된 인덱스 요소 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faa1b-131">The value of the specified index element in the underlying buffer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="faa1b-132">이 속성에는 내부 버퍼에서 지정 된 바이트 위치를 설정 하거나 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="faa1b-132">This property gets or sets the specified byte position in the underlying buffer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="faa1b-133">호출 해야 <xref:System.Net.SocketAddress.Size%2A> 내부 버퍼에서 요소를 참조 하기 전에.</span><span class="sxs-lookup"><span data-stu-id="faa1b-133">Be sure to call <xref:System.Net.SocketAddress.Size%2A> before referring to elements in the underlying buffer.</span></span> <span data-ttu-id="faa1b-134">존재 하지 않는 인덱스를 참조 하면는 <xref:System.Net.SocketAddress> throw 하는 <xref:System.IndexOutOfRangeException>합니다.</span><span class="sxs-lookup"><span data-stu-id="faa1b-134">Referring to an index that does not exist will cause the <xref:System.Net.SocketAddress> to throw an <xref:System.IndexOutOfRangeException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="faa1b-135">지정된 인덱스가 버퍼에 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="faa1b-135">The specified index does not exist in the buffer.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.SocketAddress.Size" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public int Size { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Net.SocketAddress.Size" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Size As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Size { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="faa1b-136">
            <see cref="T:System.Net.SocketAddress" />의 내부 버퍼 크기를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faa1b-136">Gets the underlying buffer size of the <see cref="T:System.Net.SocketAddress" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="faa1b-137">
            <see cref="T:System.Net.SocketAddress" />의 내부 버퍼 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faa1b-137">The underlying buffer size of the <see cref="T:System.Net.SocketAddress" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="faa1b-138">이 속성의 내부 버퍼 크기를 가져옵니다는 <xref:System.Net.SocketAddress> (바이트)에서입니다.</span><span class="sxs-lookup"><span data-stu-id="faa1b-138">This property gets the underlying buffer size of the <xref:System.Net.SocketAddress> in bytes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.SocketAddress.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="faa1b-139">소켓 주소에 대한 정보를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faa1b-139">Returns information about the socket address.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="faa1b-140">
            <see cref="T:System.Net.SocketAddress" />에 대한 정보가 포함된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faa1b-140">A string that contains information about the <see cref="T:System.Net.SocketAddress" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="faa1b-141"><xref:System.Net.SocketAddress.ToString%2A> 포함 하는 문자열을 반환 하는 메서드는 <xref:System.Net.Sockets.AddressFamily> 열거 값, 기본 버퍼 크기는 <xref:System.Net.SocketAddress> 구조 및 버퍼의 나머지 내용을 합니다.</span><span class="sxs-lookup"><span data-stu-id="faa1b-141">The <xref:System.Net.SocketAddress.ToString%2A> method returns a string that contains the <xref:System.Net.Sockets.AddressFamily> enumerated value, the size of the underlying buffer of the <xref:System.Net.SocketAddress> structure, and the remaining contents of the buffer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>