<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SocketPermission.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ac4c73bd39efe04be4531cc25c9b520ac59aa9bf.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ac4c73bd39efe04be4531cc25c9b520ac59aa9bf</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.SocketPermission">
          <source>Controls rights to make or accept connections on a transport address.</source>
          <target state="translated">전송 주소에 대해 연결을 만들거나 허용하는 권한을 제어합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.SocketPermission">
          <source><ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> instances control permission to accept connections or initiate <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> connections.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> 인스턴스 제어 연결을 수락 하거나 시작할 수 있는 권한을 <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> 연결 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.SocketPermission">
          <source>A <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> permission can be established for a host name or IP address, a port number, and a transport protocol.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> 호스트 이름 또는 IP 주소, 포트 번호 및 전송 프로토콜에 대 한 사용 권한을 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.SocketPermission">
          <source>Avoid creating socket permissions using host names, as these names have to be resolved to IP addresses, and this might block the stack.</source>
          <target state="translated">이러한 이름은 IP 주소로 확인 될 필요가 뿐만 스택의 차단 될 수 있습니다이 호스트 이름을 사용 하 여 소켓 사용 권한 만들지 마십시오.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.SocketPermission">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> class to set, change, and enforce various socket access restrictions.</source>
          <target state="translated">다음 예제에서는 사용 하는 <ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> 설정 변경 하 고 다양 한 소켓에 대 한 액세스 제한 사항을 적용 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.Net.SocketPermission">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.#ctor(System.Security.Permissions.PermissionState)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.Permissions.PermissionState" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Permissions.PermissionState" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.#ctor(System.Security.Permissions.PermissionState)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> class that allows unrestricted access to the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> or disallows access to the <ph id="ph3">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph>에 대한 무제한 액세스를 허용하거나 <ph id="ph2">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>에 대한 액세스를 허용하지 않는 <ph id="ph3">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.#ctor(System.Security.Permissions.PermissionState)">
          <source>If the <ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> instance is created with the <ph id="ph2">`Unrestricted`</ph> value from <ph id="ph3">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> then the <ph id="ph4">&lt;xref:System.Net.SocketPermission&gt;</ph> instance passes all demands.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> 사용 인스턴스를 만듭니다는 <ph id="ph2">`Unrestricted`</ph> 에서 값 <ph id="ph3">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> 하면 <ph id="ph4">&lt;xref:System.Net.SocketPermission&gt;</ph> 인스턴스는 모든 요청을 거부 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.#ctor(System.Security.Permissions.PermissionState)">
          <source>Any other value for <ph id="ph1">`state`</ph> results in a <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> instance that fails all demands unless a transport address permission is added with <ph id="ph3">&lt;xref:System.Net.SocketPermission.AddPermission%2A&gt;</ph>.</source>
          <target state="translated">다른 모든 값에 대 한 <ph id="ph1">`state`</ph> 결과 <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> 된 전송 주소 사용 권한을 추가 하지 않는 모든 요청을 거부 하는 인스턴스 <ph id="ph3">&lt;xref:System.Net.SocketPermission.AddPermission%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.#ctor(System.Security.Permissions.PermissionState)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> using a <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> enumerated value.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> 를 사용 하는 <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.NetworkAccess" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.NetworkAccess" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.TransportType" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.TransportType" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>The host name for the transport address.</source>
          <target state="translated">전송 주소에 대한 호스트 이름입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>The port number for the transport address.</source>
          <target state="translated">전송 주소에 대한 포트 번호입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> class for the given transport address with the specified permission.</source>
          <target state="translated">지정된 사용 권한을 사용하여 주어진 전송 주소에 대한 <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>This constructor creates a <ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> that controls access to the specified <ph id="ph2">`hostName`</ph> and <ph id="ph3">`portNumber`</ph> using the specified <ph id="ph4">`transport`</ph>.</source>
          <target state="translated">이 생성자는 <ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> 지정 된 액세스를 제어 하 <ph id="ph2">`hostName`</ph> 및 <ph id="ph3">`portNumber`</ph> 사용 하 여 지정 된 <ph id="ph4">`transport`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>The <ph id="ph1">`hostName`</ph> can be a DNS name, an IP address, or a specified IP subnet, such as 192.168.1.*.</source>
          <target state="translated"><ph id="ph1">`hostName`</ph> DNS 이름, IP 주소 또는 192.168.1. *와 같은 지정된 된 IP 서브넷 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>The <ph id="ph1">`portNumber`</ph> can be any valid port number defined by the transport, or <ph id="ph2">&lt;xref:System.Net.SocketPermission.AllPorts?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`portNumber`</ph> 들어갈 수 있는 유효한 포트 수는 전송에 의해 정의 된 또는 <ph id="ph2">&lt;xref:System.Net.SocketPermission.AllPorts?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> using a <ph id="ph2">&lt;xref:System.Net.NetworkAccess&gt;</ph> enumerated value, a <ph id="ph3">&lt;xref:System.Net.TransportType&gt;</ph> enumerated value, the hostname, and the port number.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> 를 사용 하는 <ph id="ph2">&lt;xref:System.Net.NetworkAccess&gt;</ph> 열거형 값을 한 <ph id="ph3">&lt;xref:System.Net.TransportType&gt;</ph> 값, 호스트 이름 및 포트 번호를 열거 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="hostName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hostName" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.Net.SocketPermission.AcceptList">
          <source>Gets a list of <ph id="ph1">&lt;see cref="T:System.Net.EndpointPermission" /&gt;</ph> instances that identifies the endpoints that can be accepted under this permission instance.</source>
          <target state="translated">이 사용 권한 인스턴스 하에서 허용할 수 있는 끝점을 식별하는 <ph id="ph1">&lt;see cref="T:System.Net.EndpointPermission" /&gt;</ph> 인스턴스 목록을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.SocketPermission.AcceptList">
          <source>An instance that implements the <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> interface that contains <ph id="ph2">&lt;see cref="T:System.Net.EndpointPermission" /&gt;</ph> instances.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> 인스턴스가 들어 있는 <ph id="ph2">&lt;see cref="T:System.Net.EndpointPermission" /&gt;</ph> 인터페이스를 구현하는 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.SocketPermission.AcceptList">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Net.SocketPermission.AcceptList%2A&gt;</ph> property to return a list of endpoints to which accept privileges are granted.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Net.SocketPermission.AcceptList%2A&gt;</ph> 끝점의 목록을 반환 하는 속성에 허용 권한이 부여 되 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.NetworkAccess" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.NetworkAccess" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.TransportType" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.TransportType" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>The host name for the transport address.</source>
          <target state="translated">전송 주소에 대한 호스트 이름입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>The port number for the transport address.</source>
          <target state="translated">전송 주소에 대한 포트 번호입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>Adds a permission to the set of permissions for a transport address.</source>
          <target state="translated">전송 주소에 대한 사용 권한 집합에 사용 권한을 추가합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>The <ph id="ph1">`hostName`</ph> can be a DNS name, an IP address, or a specified IP subnet, such as 192.168.1.*.</source>
          <target state="translated"><ph id="ph1">`hostName`</ph> DNS 이름, IP 주소 또는 192.168.1. *와 같은 지정된 된 IP 서브넷 수 있습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Net.SocketPermission.AddPermission%2A&gt;</ph> method to add connection permissions to the specified host.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Net.SocketPermission.AddPermission%2A&gt;</ph> 메서드를 지정된 된 호스트에 연결 권한을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="hostName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hostName" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="F:System.Net.SocketPermission.AllPorts">
          <source>Defines a constant that represents all ports.</source>
          <target state="translated">모든 포트를 나타내는 상수를 정의합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Net.SocketPermission.AllPorts">
          <source>This field is read-only.</source>
          <target state="translated">이 필드는 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Net.SocketPermission.AllPorts">
          <source>The value of this field is -1.</source>
          <target state="translated">이 필드의 값은-1입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Net.SocketPermission.AllPorts">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Net.SocketPermission.AllPorts&gt;</ph> property to provide connection permissions to all of the resources ports.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Net.SocketPermission.AllPorts&gt;</ph> 속성을 모든 리소스 포트에 연결 권한을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Net.SocketPermission.ConnectList">
          <source>Gets a list of <ph id="ph1">&lt;see cref="T:System.Net.EndpointPermission" /&gt;</ph> instances that identifies the endpoints that can be connected to under this permission instance.</source>
          <target state="translated">이 사용 권한 인스턴스 하에서 연결할 수 있는 끝점을 식별하는 <ph id="ph1">&lt;see cref="T:System.Net.EndpointPermission" /&gt;</ph> 인스턴스 목록을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.SocketPermission.ConnectList">
          <source>An instance that implements the <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> interface that contains <ph id="ph2">&lt;see cref="T:System.Net.EndpointPermission" /&gt;</ph> instances.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> 인스턴스가 들어 있는 <ph id="ph2">&lt;see cref="T:System.Net.EndpointPermission" /&gt;</ph> 인터페이스를 구현하는 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.SocketPermission.ConnectList">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Net.SocketPermission.ConnectList%2A&gt;</ph> property to return a list of endpoints to which connection privileges are granted.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Net.SocketPermission.ConnectList%2A&gt;</ph> 권한이 부여 되는 연결 끝점의 목록을 반환 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.Copy">
          <source>Creates a copy of a <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> 인스턴스의 복사본을 만듭니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.Copy">
          <source>A new instance of the <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> class that is a copy of the current instance.</source>
          <target state="translated">현재 인스턴스의 복사본인 <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> 클래스의 새 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.Copy">
          <source>The object returned by this method represents the same level of access as the current instance.</source>
          <target state="translated">이 메서드에 의해 반환 되는 개체는 현재 인스턴스와 동일한 수준의 액세스를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.Copy">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Copy%2A&gt;</ph> and is implemented to support the <ph id="ph2">&lt;xref:System.Security.IPermission&gt;</ph> interface.</source>
          <target state="translated">이 메서드를 재정의 <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Copy%2A&gt;</ph> 지원 하기 위해 구현 하 고는 <ph id="ph2">&lt;xref:System.Security.IPermission&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.Copy">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> by taking a copy of an existing <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> 의 기존 복사본을 사용 하 여 <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.FromXml(System.Security.SecurityElement)">
          <source>The XML encoding used to reconstruct the <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> 인스턴스를 다시 생성하는 데 사용하는 XML 인코딩입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.FromXml(System.Security.SecurityElement)">
          <source>Reconstructs a <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> instance for an XML encoding.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> 인스턴스를 XML 인코딩으로 다시 만듭니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.FromXml(System.Security.SecurityElement)">
          <source>The <ph id="ph1">&lt;xref:System.Net.SocketPermission.FromXml%2A&gt;</ph> method reconstructs a <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> instance from an XML encoding defined by the <ph id="ph3">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.SocketPermission.FromXml%2A&gt;</ph> 메서드 다시 만듭니다는 <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> 정의한 XML 인코딩에서 인스턴스는 <ph id="ph3">&lt;xref:System.Security.SecurityElement&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.FromXml(System.Security.SecurityElement)">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.SocketPermission.ToXml%2A&gt;</ph> method to encode the <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> instance, including state information, in XML.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Net.SocketPermission.ToXml%2A&gt;</ph> 메서드를 인코딩하는 <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> 인스턴스를 XML에 상태 정보를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.FromXml(System.Security.SecurityElement)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Net.SocketPermission.FromXml%2A&gt;</ph> method to convert XML encoded data to a <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> instance.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Net.SocketPermission.FromXml%2A&gt;</ph> 로 인코드된 데이터를 XML을 변환 하는 메서드는 <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.FromXml(System.Security.SecurityElement)">
          <source>The <ph id="ph1">&lt;paramref name="securityElement" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="securityElement" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.FromXml(System.Security.SecurityElement)">
          <source>The <ph id="ph1">&lt;paramref name="securityElement" /&gt;</ph> is not a permission element for this type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="securityElement" /&gt;</ph>가 이 형식에 대한 사용 권한 요소가 아닌 경우</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> instance to intersect with the current instance.</source>
          <target state="translated">현재 인스턴스와 교집합을 구할 <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)">
          <source>Returns the logical intersection between two <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> instances.</source>
          <target state="translated">두 <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> 인스턴스의 논리 교집합을 반환합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> instance that represents the intersection of two <ph id="ph2">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> instances.</source>
          <target state="translated">두 <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> 인스턴스의 교집합에 해당하는 부분을 나타내는 <ph id="ph2">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)">
          <source>If the intersection is empty, the method returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">교집합에 해당하는 부분이 없으면 메서드가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)">
          <source>If the <ph id="ph1">&lt;paramref name="target" /&gt;</ph> parameter is a null reference, the method returns <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> 매개 변수가 null 참조이면 메서드는 <ph id="ph2">&lt;see langword="null" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)">
          <source>The intersection of two permissions is a permission that helps to protect the resources and operations protected by both permissions.</source>
          <target state="translated">두 사용 권한의 공통 사항에는 리소스와 두 권한으로 보호 하는 작업을 보호할 수 있는 권한입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)">
          <source>Specifically, it represents the minimum permission such that any demand that passes both permissions also passes their intersection.</source>
          <target state="translated">특히,이 권한을 모두 전달 하는 모든 요청에는 또한 교차 전달 최소 권한을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Intersect%2A&gt;</ph> and is implemented to support the <ph id="ph2">&lt;xref:System.Security.IPermission&gt;</ph> interface.</source>
          <target state="translated">이 메서드를 재정의 <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Intersect%2A&gt;</ph> 지원 하기 위해 구현 하 고는 <ph id="ph2">&lt;xref:System.Security.IPermission&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Net.SocketPermission.Intersect%2A&gt;</ph> method to obtain a logical intersection between two <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> instances.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Net.SocketPermission.Intersect%2A&gt;</ph> 두 논리적 교집합을 구하는 <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> parameter is not a <ph id="ph2">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph>이 아닌 경우</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.DnsPermission" /&gt;</ph> is not granted to the method caller.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.DnsPermission" /&gt;</ph>이 메서드 호출자에 부여되지 않은 경우</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> that is to be tested for the subset relationship.</source>
          <target state="translated">하위 집합 관계에 대해 테스트할 <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)">
          <source>Determines if the current permission is a subset of the specified permission.</source>
          <target state="translated">현재 사용 권한이 지정된 사용 권한의 하위 집합인지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)">
          <source>If <ph id="ph1">&lt;paramref name="target" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, this method returns <ph id="ph3">&lt;see langword="true" /&gt;</ph> if the current instance defines no permissions; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우, 이 메서드는 현재 인스턴스가 사용 권한을 정의하지 않으면 <ph id="ph3">&lt;see langword="true" /&gt;</ph>를 반환하고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)">
          <source>If <ph id="ph1">&lt;paramref name="target" /&gt;</ph> is not <ph id="ph2">&lt;see langword="null" /&gt;</ph>, this method returns <ph id="ph3">&lt;see langword="true" /&gt;</ph> if the current instance defines a subset of <ph id="ph4">&lt;paramref name="target" /&gt;</ph> permissions; otherwise, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이 아닌 경우, 현재 인스턴스가 <ph id="ph4">&lt;paramref name="target" /&gt;</ph> 사용 권한의 하위 집합을 정의하면 이 메서드가 <ph id="ph3">&lt;see langword="true" /&gt;</ph>를 반환하고, 그렇지 않으면 <ph id="ph5">&lt;see langword="false" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)">
          <source>The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</source>
          <target state="translated">현재 권한은 현재 사용 권한이 지정된 된 사용 하 여 완전히 포함 된 작업의 집합을 지정 하는 경우 지정된 된 사용 권한의 하위 집합입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)">
          <source>For example, a permission that represents access to 192.168.1.1:80 is a subset of a permission that represents access to 192.168.1.1:Any.</source>
          <target state="translated">예를 들어 192.168.1.1: 80에 대 한 액세스를 나타내는 사용 권한의 액세스 192.168.1.1:Any를 나타내는 권한의 일부입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)">
          <source>If this method returns <ph id="ph1">`true`</ph>, the current permission represents no more access to the protected resource than does the specified permission.</source>
          <target state="translated">이 메서드가 반환 하는 경우 <ph id="ph1">`true`</ph>, 현재 사용 권한과 동일한 액세스 보호 된 리소스에 지정된 된 사용은 보다를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Net.SocketPermission.IsSubsetOf%2A&gt;</ph> method to determine if one <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> is the subset of another.</source>
          <target state="translated">사용 하 여 다음 예제는 <ph id="ph1">&lt;xref:System.Net.SocketPermission.IsSubsetOf%2A&gt;</ph> 하나를 확인할 수 있는 방법은 <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> 은 다른 하위 집합입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)">
          <source><ph id="ph1">&lt;paramref name="target" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Net.Sockets.SocketException" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.Net.Sockets.SocketException" /&gt;</ph>가 아닌 경우</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.DnsPermission" /&gt;</ph> is not granted to the method caller.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.DnsPermission" /&gt;</ph>이 메서드 호출자에 부여되지 않은 경우</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.IsUnrestricted">
          <source>Checks the overall permission state of the object.</source>
          <target state="translated">개체의 전체 사용 권한 상태를 확인합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.IsUnrestricted">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> instance is created with the <ph id="ph3">&lt;see langword="Unrestricted" /&gt;</ph> value from <ph id="ph4">&lt;see cref="T:System.Security.Permissions.PermissionState" /&gt;</ph>; otherwise, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> 인스턴스를 <ph id="ph4">&lt;see cref="T:System.Security.Permissions.PermissionState" /&gt;</ph>의 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 값으로 만들었으면 <ph id="ph3">&lt;see langword="Unrestricted" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph5">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.IsUnrestricted">
          <source>The following example checks the <ph id="ph1">&lt;xref:System.Net.SocketPermission.IsUnrestricted%2A&gt;</ph> property to determine if the specified <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> has any restrictions.</source>
          <target state="translated">다음 예제에서는 검사는 <ph id="ph1">&lt;xref:System.Net.SocketPermission.IsUnrestricted%2A&gt;</ph> 속성을 확인 하는 경우 지정 된 <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> 에 제한이 있습니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.ToXml">
          <source>Creates an XML encoding of a <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> instance and its current state.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> 인스턴스 및 현재 상태의 XML 인코딩을 만듭니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.ToXml">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> instance that contains an XML-encoded representation of the <ph id="ph2">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> instance, including state information.</source>
          <target state="translated">상태 정보를 포함하여 <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> 인스턴스의 XML 인코딩 표현이 들어 있는 <ph id="ph2">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.ToXml">
          <source>The <ph id="ph1">&lt;xref:System.Net.SocketPermission.ToXml%2A&gt;</ph> method creates a <ph id="ph2">&lt;xref:System.Security.SecurityElement&gt;</ph> instance to encode a representation of the <ph id="ph3">&lt;xref:System.Net.SocketPermission&gt;</ph> instance, including state information, in XML.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.SocketPermission.ToXml%2A&gt;</ph> 메서드를 만듭니다는 <ph id="ph2">&lt;xref:System.Security.SecurityElement&gt;</ph> 의 표현을 인코딩하는 데는 인스턴스는 <ph id="ph3">&lt;xref:System.Net.SocketPermission&gt;</ph> 인스턴스를 XML에 상태 정보를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.ToXml">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.SocketPermission.FromXml%2A&gt;</ph> method to restore the state information from a <ph id="ph2">&lt;xref:System.Security.SecurityElement&gt;</ph> instance.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Net.SocketPermission.FromXml%2A&gt;</ph> 에서 상태 정보를 복원 하는 메서드는 <ph id="ph2">&lt;xref:System.Security.SecurityElement&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.ToXml">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Net.SocketPermission.ToXml%2A&gt;</ph> method to convert a <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> to XML.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Net.SocketPermission.ToXml%2A&gt;</ph> 변환 하는 메서드는 <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> xml입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.Union(System.Security.IPermission)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> instance to combine with the current instance.</source>
          <target state="translated">현재 인스턴스와 결합할 <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.Union(System.Security.IPermission)">
          <source>Returns the logical union between two <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> instances.</source>
          <target state="translated">두 <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> 인스턴스의 논리합을 반환합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.Union(System.Security.IPermission)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> instance that represents the union of two <ph id="ph2">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> instances.</source>
          <target state="translated">두 <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> 인스턴스의 논리합을 나타내는 <ph id="ph2">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.Union(System.Security.IPermission)">
          <source>If <ph id="ph1">&lt;paramref name="target" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, it returns a copy of the current instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이면 현재 인스턴스의 복사본을 반환합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.Union(System.Security.IPermission)">
          <source>The result of a call to <ph id="ph1">&lt;xref:System.Net.SocketPermission.Union%2A&gt;</ph> is a permission that represents all of the access to <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> connections represented by the current instance as well as the access represented by <ph id="ph3">`target`</ph>.</source>
          <target state="translated">에 대 한 호출의 결과 <ph id="ph1">&lt;xref:System.Net.SocketPermission.Union%2A&gt;</ph> 모두에 대 한 액세스를 나타내는 권한 <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> 나타내는 액세스 뿐 아니라 현재 인스턴스에서 나타내는 연결 <ph id="ph3">`target`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.Union(System.Security.IPermission)">
          <source>Any demand that passes either the current instance or <ph id="ph1">`target`</ph> passes their union.</source>
          <target state="translated">현재 인스턴스를 전달 하는 모든 요청 또는 <ph id="ph1">`target`</ph> 해당 공용 구조체를 전달 합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.Union(System.Security.IPermission)">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Union%2A&gt;</ph> and is implemented to support the <ph id="ph2">&lt;xref:System.Security.IPermission&gt;</ph> interface.</source>
          <target state="translated">이 메서드를 재정의 <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Union%2A&gt;</ph> 지원 하기 위해 구현 하 고는 <ph id="ph2">&lt;xref:System.Security.IPermission&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.Union(System.Security.IPermission)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Net.SocketPermission.Union%2A&gt;</ph> method to return the logical union of two existing <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> instances.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Net.SocketPermission.Union%2A&gt;</ph> 메서드를 두 가지 기존 이루어진 논리적 조합 반환 <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.Union(System.Security.IPermission)">
          <source><ph id="ph1">&lt;paramref name="target" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph>가 아닌 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>