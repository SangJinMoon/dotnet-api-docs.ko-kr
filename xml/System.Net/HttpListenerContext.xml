<Type Name="HttpListenerContext" FullName="System.Net.HttpListenerContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="efb0b67d2b48b7fb574b175daf2a6cd4826f78c4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpListenerContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpListenerContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.HttpListenerContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpListenerContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpListenerContext sealed" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.HttpListener</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="dc85e-101">
        <see cref="T:System.Net.HttpListener" /> 클래스에서 사용되는 요청 및 응답 개체에 액세스할 수 있도록 합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dc85e-101">Provides access to the request and response objects used by the <see cref="T:System.Net.HttpListener" /> class.</span>
      </span>
      <span data-ttu-id="dc85e-102">이 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dc85e-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc85e-103">에 의해 처리 되는 클라이언트의 하이퍼텍스트 전송 프로토콜 (HTTP) 요청에 관련 된 정보를 제공 하는이 클래스는 <xref:System.Net.HttpListener> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="dc85e-103">This class provides the information related to a client's Hypertext Transfer Protocol (HTTP) request being processed by an <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="dc85e-104">이 클래스에 사용할 수 있는 메서드는 <xref:System.Net.HttpListener> WebSocket 연결을 허용 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="dc85e-104">This class also has methods that allow an <xref:System.Net.HttpListener> object to accept a WebSocket connection.</span></span>  
  
 <span data-ttu-id="dc85e-105"><xref:System.Net.HttpListener.GetContext%2A> 의 인스턴스를 반환 하는 메서드는 <xref:System.Net.HttpListenerContext> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="dc85e-105">The <xref:System.Net.HttpListener.GetContext%2A> method returns instances of the <xref:System.Net.HttpListenerContext> class.</span></span> <span data-ttu-id="dc85e-106">클라이언트 요청을 나타내는 개체를 가져오려면는 <xref:System.Net.HttpListenerContext.Request%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="dc85e-106">To get the object that represents the client request, use the <xref:System.Net.HttpListenerContext.Request%2A> property.</span></span> <span data-ttu-id="dc85e-107">클라이언트로 전송 될 응답을 나타내는 개체를 가져오려면는 <xref:System.Net.HttpListener>를 사용 하 여는 <xref:System.Net.HttpListenerContext.Response%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="dc85e-107">To get the object that represents the response that will be sent to the client by the <xref:System.Net.HttpListener>, use the <xref:System.Net.HttpListenerContext.Response%2A> property.</span></span> <span data-ttu-id="dc85e-108">로그인 이름 및 그의 인증 여부, 예: 요청을 보내는 클라이언트에 대 한 사용자 정보에 속성을 쿼리할 수는 <xref:System.Security.Principal.IPrincipal> 에서 반환 된 개체는 <xref:System.Net.HttpListenerContext.User%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="dc85e-108">To get user information about the client sending the request, such as its login name and whether it has been authenticated, you can query the properties in the <xref:System.Security.Principal.IPrincipal> object returned by the <xref:System.Net.HttpListenerContext.User%2A> property.</span></span>  
  
 <span data-ttu-id="dc85e-109">닫기는 <xref:System.Net.HttpListenerContext> 개체 클라이언트에 대 한 응답을 보내고에서 사용 하는 모든 리소스를 해제는 <xref:System.Net.HttpListenerContext>합니다.</span><span class="sxs-lookup"><span data-stu-id="dc85e-109">Closing an <xref:System.Net.HttpListenerContext> object sends the response to the client and frees any resources used by the <xref:System.Net.HttpListenerContext>.</span></span> <span data-ttu-id="dc85e-110">중단 된 <xref:System.Net.HttpListenerContext> 개체에서 사용 하는 모든 리소스를 해제 하 고 전송 되지 않은 이미, 클라이언트에 대 한 응답을 삭제는 <xref:System.Net.HttpListenerContext>합니다.</span><span class="sxs-lookup"><span data-stu-id="dc85e-110">Aborting an <xref:System.Net.HttpListenerContext> object discards the response to the client if it has not already been sent, and frees any resources used by the <xref:System.Net.HttpListenerContext>.</span></span> <span data-ttu-id="dc85e-111">닫거나 중단 후는 <xref:System.Net.HttpListenerContext> 개체의 메서드 또는 속성을 참조할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="dc85e-111">After closing or aborting an <xref:System.Net.HttpListenerContext> object, you cannot reference its methods or properties.</span></span> <span data-ttu-id="dc85e-112">이렇게 하면 표시 됩니다는 <xref:System.ObjectDisposedException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="dc85e-112">If you do so, you will receive an <xref:System.ObjectDisposedException> exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc85e-113">다음 코드 예제에서는 클라이언트 요청에 대 한 사용자 정보를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="dc85e-113">The following code example displays the user information for a client request.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#8](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#8)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.HttpListener" />
    <altmember cref="T:System.Net.HttpListenerRequest" />
    <altmember cref="T:System.Net.HttpListenerResponse" />
  </Docs>
  <Members>
    <MemberGroup MemberName="AcceptWebSocketAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dc85e-114">WebSocket 연결을 비동기 작업으로 허용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-114">Accept a WebSocket connection as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AcceptWebSocketAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt; AcceptWebSocketAsync (string subProtocol);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.WebSockets.HttpListenerWebSocketContext&gt; AcceptWebSocketAsync(string subProtocol) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptWebSocketAsync (subProtocol As String) As Task(Of HttpListenerWebSocketContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::WebSockets::HttpListenerWebSocketContext ^&gt; ^ AcceptWebSocketAsync(System::String ^ subProtocol);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subProtocol" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subProtocol">
          <span data-ttu-id="dc85e-115">지원되는 WebSocket 하위 프로토콜입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-115">The supported WebSocket sub-protocol.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc85e-116">WebSocket 연결을 비동기 작업으로 허용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-116">Accept a WebSocket connection as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc85e-117">
            <see cref="T:System.Threading.Tasks.Task`1" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-117">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
          <span data-ttu-id="dc85e-118">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-118">The task object representing the asynchronous operation.</span>
          </span>
          <span data-ttu-id="dc85e-119">작업 개체의 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 속성은 <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" /> 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-119">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc85e-120">이 작업을 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="dc85e-120">This operation will not block.</span></span> <span data-ttu-id="dc85e-121">반환 된 <xref:System.Threading.Tasks.Task%601> WebSocket 연결 수락 개체가 완성 합니다.</span><span class="sxs-lookup"><span data-stu-id="dc85e-121">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the WebSocket connection has been accepted.</span></span>  
  
 <span data-ttu-id="dc85e-122">수신 버퍼의 크기가 16,385 바이트입니다.</span><span class="sxs-lookup"><span data-stu-id="dc85e-122">The size of the receive buffer is 16,385 bytes.</span></span> <span data-ttu-id="dc85e-123">WebSocket 연결 유지 간격 기본값인 30000 (30 초)으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="dc85e-123">The WebSocket keep-alive interval is set to the default value of 30,000 (30 seconds).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dc85e-124">
            <paramref name="subProtocol" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-124">
              <paramref name="subProtocol" /> is an empty string</span>
          </span>
          <span data-ttu-id="dc85e-125">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-125">-or-</span>
          </span>
          <span data-ttu-id="dc85e-126">
            <paramref name="subProtocol" />에 잘못된 문자가 들어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-126">
              <paramref name="subProtocol" /> contains illegal characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.WebSockets.WebSocketException">
          <span data-ttu-id="dc85e-127">WebSocket 핸드셰이크를 완료하기 위해 응답을 전송하는 동안 오류가 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-127">An error occurred when sending the response to complete the WebSocket handshake.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" />
      </Docs>
    </Member>
    <Member MemberName="AcceptWebSocketAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt; AcceptWebSocketAsync (string subProtocol, TimeSpan keepAliveInterval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.WebSockets.HttpListenerWebSocketContext&gt; AcceptWebSocketAsync(string subProtocol, valuetype System.TimeSpan keepAliveInterval) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptWebSocketAsync (subProtocol As String, keepAliveInterval As TimeSpan) As Task(Of HttpListenerWebSocketContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::WebSockets::HttpListenerWebSocketContext ^&gt; ^ AcceptWebSocketAsync(System::String ^ subProtocol, TimeSpan keepAliveInterval);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subProtocol" Type="System.String" />
        <Parameter Name="keepAliveInterval" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="subProtocol">
          <span data-ttu-id="dc85e-128">지원되는 WebSocket 하위 프로토콜입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-128">The supported WebSocket sub-protocol.</span>
          </span>
        </param>
        <param name="keepAliveInterval">
          <span data-ttu-id="dc85e-129">WebSocket 프로토콜 연결 유지 간격(밀리초)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-129">The WebSocket protocol keep-alive interval in milliseconds.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc85e-130">지원되는 WebSocket 하위 프로토콜 및 WebSocket Keep-Alive 간격을 비동기 작업으로 지정하는 WebSocket 연결을 허용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-130">Accept a WebSocket connection specifying the supported WebSocket sub-protocol  and WebSocket keep-alive interval as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc85e-131">
            <see cref="T:System.Threading.Tasks.Task`1" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-131">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
          <span data-ttu-id="dc85e-132">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-132">The task object representing the asynchronous operation.</span>
          </span>
          <span data-ttu-id="dc85e-133">작업 개체의 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 속성은 <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" /> 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-133">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc85e-134">이 작업을 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="dc85e-134">This operation will not block.</span></span> <span data-ttu-id="dc85e-135">반환 된 <xref:System.Threading.Tasks.Task%601> WebSocket 연결 수락 개체가 완성 합니다.</span><span class="sxs-lookup"><span data-stu-id="dc85e-135">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the WebSocket connection has been accepted.</span></span>  
  
 <span data-ttu-id="dc85e-136">수신 버퍼의 크기가 16,385 바이트입니다.</span><span class="sxs-lookup"><span data-stu-id="dc85e-136">The size of the receive buffer is 16,385 bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dc85e-137">
            <paramref name="subProtocol" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-137">
              <paramref name="subProtocol" /> is an empty string</span>
          </span>
          <span data-ttu-id="dc85e-138">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-138">-or-</span>
          </span>
          <span data-ttu-id="dc85e-139">
            <paramref name="subProtocol" />에 잘못된 문자가 들어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-139">
              <paramref name="subProtocol" /> contains illegal characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="dc85e-140">
            <paramref name="keepAliveInterval" />가 너무 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-140">
              <paramref name="keepAliveInterval" /> is too small.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.WebSockets.WebSocketException">
          <span data-ttu-id="dc85e-141">WebSocket 핸드셰이크를 완료하기 위해 응답을 전송하는 동안 오류가 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-141">An error occurred when sending the response to complete the WebSocket handshake.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" />
      </Docs>
    </Member>
    <Member MemberName="AcceptWebSocketAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt; AcceptWebSocketAsync (string subProtocol, int receiveBufferSize, TimeSpan keepAliveInterval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.WebSockets.HttpListenerWebSocketContext&gt; AcceptWebSocketAsync(string subProtocol, int32 receiveBufferSize, valuetype System.TimeSpan keepAliveInterval) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptWebSocketAsync (subProtocol As String, receiveBufferSize As Integer, keepAliveInterval As TimeSpan) As Task(Of HttpListenerWebSocketContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::WebSockets::HttpListenerWebSocketContext ^&gt; ^ AcceptWebSocketAsync(System::String ^ subProtocol, int receiveBufferSize, TimeSpan keepAliveInterval);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subProtocol" Type="System.String" />
        <Parameter Name="receiveBufferSize" Type="System.Int32" />
        <Parameter Name="keepAliveInterval" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="subProtocol">
          <span data-ttu-id="dc85e-142">지원되는 WebSocket 하위 프로토콜입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-142">The supported WebSocket sub-protocol.</span>
          </span>
        </param>
        <param name="receiveBufferSize">
          <span data-ttu-id="dc85e-143">수신 버퍼의 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-143">The receive buffer size in bytes.</span>
          </span>
        </param>
        <param name="keepAliveInterval">
          <span data-ttu-id="dc85e-144">WebSocket 프로토콜 연결 유지 간격(밀리초)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-144">The WebSocket protocol keep-alive interval in milliseconds.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc85e-145">지원되는 WebSocket 하위 프로토콜, 수신 버퍼 크기 및 WebSocket 연결 유지 간격을 비동기 작업으로 지정하는 WebSocket 연결을 허용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-145">Accept a WebSocket connection specifying the supported WebSocket sub-protocol, receive buffer size, and WebSocket keep-alive interval as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc85e-146">
            <see cref="T:System.Threading.Tasks.Task`1" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-146">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
          <span data-ttu-id="dc85e-147">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-147">The task object representing the asynchronous operation.</span>
          </span>
          <span data-ttu-id="dc85e-148">작업 개체의 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 속성은 <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" /> 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-148">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc85e-149">이 작업을 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="dc85e-149">This operation will not block.</span></span> <span data-ttu-id="dc85e-150">반환 된 <xref:System.Threading.Tasks.Task%601> > WebSocket 연결 수락 개체 완성 합니다.</span><span class="sxs-lookup"><span data-stu-id="dc85e-150">The returned <xref:System.Threading.Tasks.Task%601> > object will complete after the WebSocket connection has been accepted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dc85e-151">
            <paramref name="subProtocol" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-151">
              <paramref name="subProtocol" /> is an empty string</span>
          </span>
          <span data-ttu-id="dc85e-152">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-152">-or-</span>
          </span>
          <span data-ttu-id="dc85e-153">
            <paramref name="subProtocol" />에 잘못된 문자가 들어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-153">
              <paramref name="subProtocol" /> contains illegal characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="dc85e-154">
            <paramref name="keepAliveInterval" />가 너무 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-154">
              <paramref name="keepAliveInterval" /> is too small.</span>
          </span>
          <span data-ttu-id="dc85e-155">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-155">-or-</span>
          </span>
          <span data-ttu-id="dc85e-156">
            <paramref name="receiveBufferSize" />가 16바이트보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-156">
              <paramref name="receiveBufferSize" /> is less than 16 bytes</span>
          </span>
          <span data-ttu-id="dc85e-157">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-157">-or-</span>
          </span>
          <span data-ttu-id="dc85e-158">
            <paramref name="receiveBufferSize" />가 64K 바이트보다 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-158">
              <paramref name="receiveBufferSize" /> is greater than 64K bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.WebSockets.WebSocketException">
          <span data-ttu-id="dc85e-159">WebSocket 핸드셰이크를 완료하기 위해 응답을 전송하는 동안 오류가 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-159">An error occurred when sending the response to complete the WebSocket handshake.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" />
      </Docs>
    </Member>
    <Member MemberName="AcceptWebSocketAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt; AcceptWebSocketAsync (string subProtocol, int receiveBufferSize, TimeSpan keepAliveInterval, ArraySegment&lt;byte&gt; internalBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.WebSockets.HttpListenerWebSocketContext&gt; AcceptWebSocketAsync(string subProtocol, int32 receiveBufferSize, valuetype System.TimeSpan keepAliveInterval, valuetype System.ArraySegment`1&lt;unsigned int8&gt; internalBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan,System.ArraySegment{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptWebSocketAsync (subProtocol As String, receiveBufferSize As Integer, keepAliveInterval As TimeSpan, internalBuffer As ArraySegment(Of Byte)) As Task(Of HttpListenerWebSocketContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::WebSockets::HttpListenerWebSocketContext ^&gt; ^ AcceptWebSocketAsync(System::String ^ subProtocol, int receiveBufferSize, TimeSpan keepAliveInterval, ArraySegment&lt;System::Byte&gt; internalBuffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subProtocol" Type="System.String" />
        <Parameter Name="receiveBufferSize" Type="System.Int32" />
        <Parameter Name="keepAliveInterval" Type="System.TimeSpan" />
        <Parameter Name="internalBuffer" Type="System.ArraySegment&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="subProtocol">
          <span data-ttu-id="dc85e-160">지원되는 WebSocket 하위 프로토콜입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-160">The supported WebSocket sub-protocol.</span>
          </span>
        </param>
        <param name="receiveBufferSize">
          <span data-ttu-id="dc85e-161">수신 버퍼의 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-161">The receive buffer size in bytes.</span>
          </span>
        </param>
        <param name="keepAliveInterval">
          <span data-ttu-id="dc85e-162">WebSocket 프로토콜 연결 유지 간격(밀리초)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-162">The WebSocket protocol keep-alive interval in milliseconds.</span>
          </span>
        </param>
        <param name="internalBuffer">
          <span data-ttu-id="dc85e-163">이 작업에 사용할 내부 버퍼입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-163">An internal buffer to use for this operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc85e-164">지원되는 WebSocket 하위 프로토콜, 수신 버퍼 크기, WebSocket 연결 유지 간격 및 내부 버퍼를 비동기 작업으로 지정하는 WebSocket 연결을 허용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-164">Accept a WebSocket connection specifying the supported WebSocket sub-protocol, receive buffer size, WebSocket keep-alive interval, and the internal buffer as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc85e-165">
            <see cref="T:System.Threading.Tasks.Task`1" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-165">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
          <span data-ttu-id="dc85e-166">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-166">The task object representing the asynchronous operation.</span>
          </span>
          <span data-ttu-id="dc85e-167">작업 개체의 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 속성은 <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" /> 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-167">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc85e-168">이 작업을 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="dc85e-168">This operation will not block.</span></span> <span data-ttu-id="dc85e-169">반환 된 <xref:System.Threading.Tasks.Task%601> WebSocket 연결 수락 개체가 완성 합니다.</span><span class="sxs-lookup"><span data-stu-id="dc85e-169">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the WebSocket connection has been accepted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dc85e-170">
            <paramref name="subProtocol" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-170">
              <paramref name="subProtocol" /> is an empty string</span>
          </span>
          <span data-ttu-id="dc85e-171">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-171">-or-</span>
          </span>
          <span data-ttu-id="dc85e-172">
            <paramref name="subProtocol" />에 잘못된 문자가 들어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-172">
              <paramref name="subProtocol" /> contains illegal characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="dc85e-173">
            <paramref name="keepAliveInterval" />가 너무 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-173">
              <paramref name="keepAliveInterval" /> is too small.</span>
          </span>
          <span data-ttu-id="dc85e-174">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-174">-or-</span>
          </span>
          <span data-ttu-id="dc85e-175">
            <paramref name="receiveBufferSize" />가 16바이트보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-175">
              <paramref name="receiveBufferSize" /> is less than 16 bytes</span>
          </span>
          <span data-ttu-id="dc85e-176">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-176">-or-</span>
          </span>
          <span data-ttu-id="dc85e-177">
            <paramref name="receiveBufferSize" />가 64K 바이트보다 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-177">
              <paramref name="receiveBufferSize" /> is greater than 64K bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.WebSockets.WebSocketException">
          <span data-ttu-id="dc85e-178">WebSocket 핸드셰이크를 완료하기 위해 응답을 전송하는 동안 오류가 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-178">An error occurred when sending the response to complete the WebSocket handshake.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" />
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerRequest Request { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.HttpListenerRequest Request" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerContext.Request" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Request As HttpListenerRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::HttpListenerRequest ^ Request { System::Net::HttpListenerRequest ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerRequest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc85e-179">클라이언트의 리소스 요청을 나타내는 <see cref="T:System.Net.HttpListenerRequest" />를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-179">Gets the <see cref="T:System.Net.HttpListenerRequest" /> that represents a client's request for a resource.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc85e-180">클라이언트 요청을 나타내는 <see cref="T:System.Net.HttpListenerRequest" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-180">An <see cref="T:System.Net.HttpListenerRequest" /> object that represents the client request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc85e-181">이 닫으면 <xref:System.Net.HttpListenerContext>, 닫기는 클라이언트에 대 한 응답을 전송 합니다는 <xref:System.Net.HttpListenerResponse> 닫은 응답을 포함 하는 <xref:System.Net.HttpListenerRequest> 이 속성에서 반환 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="dc85e-181">If you close this <xref:System.Net.HttpListenerContext>, it will send the response to the client, close the <xref:System.Net.HttpListenerResponse> that contains the response, and close the <xref:System.Net.HttpListenerRequest> object returned by this property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc85e-182">다음 코드 예제에서는이 메서드를 호출 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="dc85e-182">The following code example demonstrates calling this method.</span></span> <span data-ttu-id="dc85e-183">`listener` 변수에 <xref:System.Net.HttpListener> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="dc85e-183">The `listener` variable holds an <xref:System.Net.HttpListener> object.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Response">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerResponse Response { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.HttpListenerResponse Response" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerContext.Response" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Response As HttpListenerResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::HttpListenerResponse ^ Response { System::Net::HttpListenerResponse ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerResponse</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc85e-184">클라이언트의 요청에 대한 응답으로 클라이언트에 보낼 <see cref="T:System.Net.HttpListenerResponse" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-184">Gets the <see cref="T:System.Net.HttpListenerResponse" /> object that will be sent to the client in response to the client's request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc85e-185">클라이언트에 응답을 보내는 데 사용되는 <see cref="T:System.Net.HttpListenerResponse" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-185">An <see cref="T:System.Net.HttpListenerResponse" /> object used to send a response back to the client.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc85e-186">속성을 설정 하 여 응답을 구성 하는 응용 프로그램의 <xref:System.Net.HttpListenerResponse> 이 속성에서 반환 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="dc85e-186">Your application configures the response by setting properties in the <xref:System.Net.HttpListenerResponse> object returned by this property.</span></span> <span data-ttu-id="dc85e-187">응답을 구성한 후에 게 보내기 클라이언트는 응답을 닫아 하거나 닫으면이 <xref:System.Net.HttpListenerContext> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="dc85e-187">After configuring the response, you send it to the client by closing the response, or by closing this <xref:System.Net.HttpListenerContext> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc85e-188">다음 코드 예제에서는 클라이언트의 요청에 대 한 응답을 가져오고 응답 본문을 추가 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="dc85e-188">The following code example demonstrates getting the response to a client's request and adding the response body.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="dc85e-189">참고:이 멤버 응용 프로그램에 네트워크 추적을 사용 하도록 설정 하면 추적 정보를 출력 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="dc85e-189">Note: This member outputs trace information when you enable network tracing in your application.</span>
            </span>
            <span data-ttu-id="dc85e-190">자세한 내용은 참조 [.NET Framework의 네트워크 추적](~/docs/framework/network-programming/network-tracing.md)합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="dc85e-190">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IPrincipal User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal User" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerContext.User" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property User As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IPrincipal ^ User { System::Security::Principal::IPrincipal ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc85e-191">이 <see cref="T:System.Net.HttpListenerContext" /> 개체가 나타내는 요청을 보낸 클라이언트의 ID, 인증 정보 및 보안 규칙을 얻는 데 사용되는 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-191">Gets an object used to obtain identity, authentication information, and security roles for the client whose request is represented by this <see cref="T:System.Net.HttpListenerContext" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc85e-192">클라이언트를 설명하는 <see cref="T:System.Security.Principal.IPrincipal" /> 개체이거나, 이 <see cref="T:System.Net.HttpListener" />를 제공한 <see cref="T:System.Net.HttpListenerContext" />에서 인증을 필요로 하지 않는 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-192">An <see cref="T:System.Security.Principal.IPrincipal" /> object that describes the client, or <see langword="null" /> if the <see cref="T:System.Net.HttpListener" /> that supplied this <see cref="T:System.Net.HttpListenerContext" /> does not require authentication.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc85e-193"><xref:System.Net.HttpListener> 사용 하 여 인증 해야 함을 의미는 <xref:System.Net.HttpListener.AuthenticationSchemes%2A> 속성을 지정 하 여는 <xref:System.Net.AuthenticationSchemeSelector> 를 사용 하 여 대리자는 <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="dc85e-193">An <xref:System.Net.HttpListener> indicates that it requires authentication using the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> property or by specifying an <xref:System.Net.AuthenticationSchemeSelector> delegate using the <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> property.</span></span>  
  
 <span data-ttu-id="dc85e-194">클라이언트의 로그인 이름 및 인증 정보를 확인 하려면는 <xref:System.Security.Principal.IPrincipal.Identity%2A?displayProperty=nameWithType> 이 속성에서 반환 된 개체의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="dc85e-194">To determine the client's login name and authentication information, check the <xref:System.Security.Principal.IPrincipal.Identity%2A?displayProperty=nameWithType> property in the object returned by this property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc85e-195">다음 코드 예제에서는 클라이언트 및 응답에 클라이언트에 반환 하는 방법에 대 한 id 및 인증 정보에 액세스 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="dc85e-195">The following code example demonstrates accessing identity and authentication information about the client, and returning it to the client in the response.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#8](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#8)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="dc85e-196">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /><see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="dc85e-196">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /><see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>