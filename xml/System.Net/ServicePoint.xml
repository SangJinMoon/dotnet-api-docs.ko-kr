<Type Name="ServicePoint" FullName="System.Net.ServicePoint">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b8d374bfc9f531a137a376dd0bc19eb31d2ad1ea" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36548614" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ServicePoint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServicePoint extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.ServicePoint" />
  <TypeSignature Language="VB.NET" Value="Public Class ServicePoint" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServicePoint" />
  <TypeSignature Language="F#" Value="type ServicePoint = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.ServicePoint</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>HTTP 연결에 대해 연결 관리를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.ServicePoint> 클래스에는 리소스의 식별자 URI (Uniform Resource)를 전달 되는 호스트 정보에 따라 인터넷 리소스에 대 한 연결을 처리 합니다. 리소스에 대 한 초기 연결 정보를 결정 하는 <xref:System.Net.ServicePoint> 모든 후속 요청에 해당 리소스에 의해 공유 되는 개체의 유지 관리 합니다.  
  
 <xref:System.Net.ServicePoint> 개체에서 관리 되는 <xref:System.Net.ServicePointManager> 클래스 및으로 필요한 경우 생성 되는 <xref:System.Net.ServicePointManager.FindServicePoint%2A?displayProperty=nameWithType> 메서드. <xref:System.Net.ServicePoint> 개체는 직접 생성 되지 않습니다 되지만 항상 만들고 관리 하 여는 <xref:System.Net.ServicePointManager> 클래스입니다. 최대 <xref:System.Net.ServicePoint> 만들 수 있는 개체에서 설정 됩니다는 <xref:System.Net.ServicePointManager.MaxServicePoints?displayProperty=nameWithType> 속성입니다.  
  
 각 <xref:System.Net.ServicePoint> 개체와 연결을 유지 인터넷 리소스 경과 했는데도 문제가 있다면 유휴 상태가 될 때까지에 지정 된 시간 보다 오래 된 <xref:System.Net.ServicePoint.MaxIdleTime> 속성입니다. 경우는 <xref:System.Net.ServicePoint> 초과 <xref:System.Net.ServicePoint.MaxIdleTime> 값 수를 다른 연결 재활용 합니다. 기본값 <xref:System.Net.ServicePoint.MaxIdleTime> 설정한는 <xref:System.Net.ServicePointManager.MaxServicePointIdleTime?displayProperty=nameWithType> 속성입니다.  
  
 경우는 <xref:System.Net.ServicePoint.ConnectionLeaseTimeout> 속성이-1을 반환 하 고 지정된 된 시간 이후에 경과 하면 활성이 아닌 값으로 설정 되어 <xref:System.Net.ServicePoint> 다음 요청을 처리 한 후에 연결이 닫힙니다. 이 기본적으로이 무기한으로 열려 있는 활성 연결을 필요로 하지 않는 응용 프로그램에 유용 합니다.  
  
> [!NOTE]
>  높은 부하 조건에서 일부 응용 프로그램 시스템 성능이 저하 (예: 높고 변수 트랜잭션 시간이) 야기할 수 있는 스레드 풀의 자유 스레드가 부족 해질 수 있습니다. 참조 [ http://msdn.microsoft.com/library/default.asp?url=/library/dnpag/html/scalenetchapt17.asp ](http://msdn.microsoft.com/library/default.asp?url=/library/dnpag/html/scalenetchapt17.asp) 이 문제를 해결 하기 위한 구성 변경의 수에 대 한 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 한 <xref:System.Net.ServicePoint> URI www.contoso.com에 연결 하는 개체입니다.  
  
 [!code-cpp[System.Net.ServicePoint#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#1)]
 [!code-csharp[System.Net.ServicePoint#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#1)]
 [!code-vb[System.Net.ServicePoint#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public Uri Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Address" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.Address" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Address { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Address : Uri" Usage="System.Net.ServicePoint.Address" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Net.ServicePoint" /> 개체가 연결하는 서버의 URI(Uniform Resource Identifier)를 가져옵니다.</summary>
        <value>이 <see cref="T:System.Net.ServicePoint" /> 개체가 연결하는 인터넷 서버의 URI가 들어 있는 <see cref="T:System.Uri" /> 클래스의 인스턴스입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는이 속성의 값을 표시합니다.  
  
 [!code-cpp[System.Net.ServicePoint#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#2)]
 [!code-csharp[System.Net.ServicePoint#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#2)]
 [!code-vb[System.Net.ServicePoint#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="T:System.Net.ServicePoint" />가 호스트 모드에 있는 경우</exception>
        <permission cref="T:System.Net.WebPermission">사용에 대 한 <see cref="P:System.Net.ServicePoint.Address" /> 경우는 <see cref="T:System.Net.ServicePoint" /> 프록시 서버를 통해 연결 합니다.</permission>
      </Docs>
    </Member>
    <Member MemberName="BindIPEndPointDelegate">
      <MemberSignature Language="C#" Value="public System.Net.BindIPEndPoint BindIPEndPointDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.BindIPEndPoint BindIPEndPointDelegate" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.BindIPEndPointDelegate" />
      <MemberSignature Language="VB.NET" Value="Public Property BindIPEndPointDelegate As BindIPEndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::BindIPEndPoint ^ BindIPEndPointDelegate { System::Net::BindIPEndPoint ^ get(); void set(System::Net::BindIPEndPoint ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BindIPEndPointDelegate : System.Net.BindIPEndPoint with get, set" Usage="System.Net.ServicePoint.BindIPEndPointDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.BindIPEndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>로컬 <see cref="T:System.Net.IPEndPoint" />와 <see cref="T:System.Net.ServicePoint" />를 연결할 대리자를 지정합니다.</summary>
        <value>
          <see cref="T:System.Net.ServicePoint" />에서 특정 로컬 IP(인터넷 프로토콜) 주소 및 포트 번호를 사용하도록 하는 대리자입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일부 부하 분산 기술을 클라이언트가 특정 로컬 IP 주소와 포트 번호를 사용 하 여 필요 하지 않고 <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> (또는 <xref:System.Net.IPAddress.IPv6Any?displayProperty=nameWithType> 인터넷 프로토콜 버전 6에 대 한)와 임시 포트입니다. 프로그램 <xref:System.Net.ServicePoint.BindIPEndPointDelegate> 이 요구 사항을 충족할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">로컬 포트에 바인딩합니다. 연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Certificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate Certificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate Certificate" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.Certificate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Certificate As X509Certificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509Certificate ^ Certificate { System::Security::Cryptography::X509Certificates::X509Certificate ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Certificate : System.Security.Cryptography.X509Certificates.X509Certificate" Usage="System.Net.ServicePoint.Certificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Net.ServicePoint" /> 개체에 대해 받은 인증서를 가져옵니다.</summary>
        <value>이 <see cref="T:System.Net.ServicePoint" /> 개체에 대해 받은 보안 인증서가 들어 있는 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> 클래스의 인스턴스입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하지만 한 <xref:System.Net.ServicePoint> 개체는 인터넷 리소스에 대 한 여러 연결을 만들 수를 하나의 인증서만 유지할 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 속성의 값을 표시합니다.  
  
 [!code-cpp[System.Net.ServicePoint#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#5)]
 [!code-csharp[System.Net.ServicePoint#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#5)]
 [!code-vb[System.Net.ServicePoint#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate ClientCertificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate ClientCertificate" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.ClientCertificate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificate As X509Certificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509Certificate ^ ClientCertificate { System::Security::Cryptography::X509Certificates::X509Certificate ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificate : System.Security.Cryptography.X509Certificates.X509Certificate" Usage="System.Net.ServicePoint.ClientCertificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>서버로 보낸 마지막 클라이언트 인증서를 가져옵니다.</summary>
        <value>서버로 보낸 마지막 클라이언트 인증서의 공개 값이 들어 있는 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는이 속성의 값을 표시합니다.  
  
 [!code-cpp[System.Net.ServicePoint#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#5)]
 [!code-csharp[System.Net.ServicePoint#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#5)]
 [!code-vb[System.Net.ServicePoint#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseConnectionGroup">
      <MemberSignature Language="C#" Value="public bool CloseConnectionGroup (string connectionGroupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CloseConnectionGroup(string connectionGroupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.ServicePoint.CloseConnectionGroup(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CloseConnectionGroup (connectionGroupName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CloseConnectionGroup(System::String ^ connectionGroupName);" />
      <MemberSignature Language="F#" Value="member this.CloseConnectionGroup : string -&gt; bool" Usage="servicePoint.CloseConnectionGroup connectionGroupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionGroupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionGroupName">이 서비스 지점에서 닫고 제거할 연결이 들어 있는 연결 그룹의 이름입니다.</param>
        <summary>이 <see cref="T:System.Net.ServicePoint" /> 개체에서 지정된 연결 그룹을 제거합니다.</summary>
        <returns>연결 그룹이 닫혔는지 여부를 나타내는 <see cref="T:System.Boolean" /> 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 연결 그룹 특정 연결 또는 연결 집합을 요청 집합을 연결 합니다. 이 메서드를 제거 하 고 지정된 된 연결 그룹에 속하는 모든 연결을 닫습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionLeaseTimeout">
      <MemberSignature Language="C#" Value="public int ConnectionLeaseTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionLeaseTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.ConnectionLeaseTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectionLeaseTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ConnectionLeaseTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionLeaseTimeout : int with get, set" Usage="System.Net.ServicePoint.ConnectionLeaseTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>활성 <see cref="T:System.Net.ServicePoint" /> 연결이 닫히기 전까지의 시간(밀리초)을 가져오거나 설정합니다.</summary>
        <value>활성 <see cref="T:System.Net.ServicePoint" /> 연결이 열린 상태로 유지되는 시간(밀리초)을 지정하는 <see cref="T:System.Int32" />입니다. 기본값은 활성 <see cref="T:System.Net.ServicePoint" /> 연결이 무기한으로 연결되도록 하는 -1입니다. 요청을 처리한 후 <see cref="T:System.Net.ServicePoint" /> 연결을 닫으려면 이 속성을 0으로 설정합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 사용 하 여 확인 하는 <xref:System.Net.ServicePoint> 개체의 활성 연결이 수행 되지 무기한으로 유지 합니다. 이 속성은 시나리오에 연결 해야를 삭제 하 고 부하 분산 시나리오 예: 정기적으로 다시 설정 위한 것입니다.  
  
 기본적으로 때 <xref:System.Net.HttpWebRequest.KeepAlive> 은 `true` 는 요청에 <xref:System.Net.ServicePoint.MaxIdleTime> 닫기 위한 제한 시간을 설정 하는 속성 <xref:System.Net.ServicePoint> 비활성 상태인 경우 즉시 연결 합니다. 경우는 <xref:System.Net.ServicePoint> 활성 연결을 <xref:System.Net.ServicePoint.MaxIdleTime> 아무 효과가 없으며 연결이 무기한으로 유지 합니다.  
  
 때는 <xref:System.Net.ServicePoint.ConnectionLeaseTimeout> 속성이-1을 반환 하 고 지정된 된 시간 이후에 경과 하면 활성이 아닌 값으로 설정 되어 <xref:System.Net.ServicePoint> 설정 하 여 요청을 처리 한 후 연결이 닫히거나 <xref:System.Net.HttpWebRequest.KeepAlive> 를 `false` 요청에 있습니다.  
  
 이 값을 설정 하 여 관리 하는 모든 연결에 영향을 줍니다는 <xref:System.Net.ServicePoint> 개체입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 속성의 값을 설정 합니다.  
  
 [!code-cpp[NCLServicePoint#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLServicePoint/CPP/nclservicepoint.cpp#1)]
 [!code-csharp[NCLServicePoint#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLServicePoint/CS/nclservicepoint.cs#1)]
 [!code-vb[NCLServicePoint#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLServicePoint/VB/nclservicepoint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">set 작업에 지정된 값이 -1보다 작은 음수인 경우</exception>
        <altmember cref="P:System.Net.HttpWebRequest.KeepAlive" />
        <altmember cref="P:System.Net.FtpWebRequest.KeepAlive" />
        <altmember cref="P:System.Net.HttpListenerRequest.KeepAlive" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionLimit">
      <MemberSignature Language="C#" Value="public int ConnectionLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionLimit" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.ConnectionLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectionLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ConnectionLimit { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionLimit : int with get, set" Usage="System.Net.ServicePoint.ConnectionLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Net.ServicePoint" /> 개체에 허용되는 최대 연결 수를 가져오거나 설정합니다.</summary>
        <value>이 <see cref="T:System.Net.ServicePoint" /> 개체에 허용되는 최대 연결 수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.ServicePoint.ConnectionLimit> 속성 최대 연결 수는 설정의 <xref:System.Net.ServicePoint> 인터넷 리소스에 허용 되는 개체입니다. 값은 <xref:System.Net.ServicePoint.ConnectionLimit> 속성의 값으로 설정 됩니다는 <xref:System.Net.ServicePointManager.DefaultConnectionLimit?displayProperty=nameWithType> 속성 때는 <xref:System.Net.ServicePoint> 개체가 만들어집니다; 후속 변경 <xref:System.Net.ServicePointManager.DefaultConnectionLimit> 기존에 영향을 주지 않습니다 <xref:System.Net.ServicePoint> 개체입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Net.ServicePoint.ConnectionLimit> 최대 연결 수를 확인 하는 속성 하는 <xref:System.Net.ServicePoint> 개체에는 지정 된 식별자 URI (Uniform Resource)을 만들 수 있습니다.  
  
 [!code-cpp[System.Net.ServicePoint#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#4)]
 [!code-csharp[System.Net.ServicePoint#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#4)]
 [!code-vb[System.Net.ServicePoint#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">연결 제한이 0보다 작거나 같은 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ConnectionName">
      <MemberSignature Language="C#" Value="public string ConnectionName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionName" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.ConnectionName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConnectionName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionName : string" Usage="System.Net.ServicePoint.ConnectionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>연결 이름을 가져옵니다.</summary>
        <value>연결 이름을 나타내는 <see cref="T:System.String" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Net.ServicePoint> 호출 하 여 생성 된 개체는 <xref:System.Net.ServicePointManager.FindServicePoint%2A> 오버 로드는 <xref:System.Uri> 인수를 하면 <xref:System.Net.ServicePoint.ConnectionName> 속성이 나타내는 <xref:System.Uri.Scheme> 속성은 <xref:System.Uri> 사용 되는 개체입니다.  
  
 경우는 <xref:System.Net.ServicePoint> 네트워크 호스트 및 포트에서 생성 된 개체는 <xref:System.Net.ServicePoint.ConnectionName> 속성 호스트와 네트워크 포트를 나타내는 문자열을 포함 합니다. 경우는 <xref:System.Net.ServicePoint.ConnectionName> 속성은 호스트와 포트를만에서 생성 하는 경우 설정 <xref:System.Net.WebRequest> 동일한 개체 <xref:System.Net.WebRequest.ConnectionGroupName> 값이 사용할 수 <xref:System.Net.ServicePoint> 개체입니다.  
  
   
  
## Examples  
 [!code-cpp[System.Net.ServicePoint#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#4)]
 [!code-csharp[System.Net.ServicePoint#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#4)]
 [!code-vb[System.Net.ServicePoint#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentConnections">
      <MemberSignature Language="C#" Value="public int CurrentConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrentConnections" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.CurrentConnections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentConnections As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrentConnections { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentConnections : int" Usage="System.Net.ServicePoint.CurrentConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Net.ServicePoint" /> 개체와 관련된 열린 연결 수를 가져옵니다.</summary>
        <value>이 <see cref="T:System.Net.ServicePoint" /> 개체와 관련된 열린 연결 수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.ServicePoint.CurrentConnections> 와 연결 된 열려 있는 인터넷 연결 수를 포함 하는 속성 <xref:System.Net.ServicePoint> 개체입니다. 값 <xref:System.Net.ServicePoint.CurrentConnections> 의 초과 해서는 안 <xref:System.Net.ServicePoint.ConnectionLimit>합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Net.ServicePoint.CurrentConnections> 와 연결 된 열려 있는 인터넷 연결 수를 확인 하는 속성 <xref:System.Net.ServicePoint> 개체입니다.  
  
 [!code-cpp[System.Net.ServicePoint#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#2)]
 [!code-csharp[System.Net.ServicePoint#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#2)]
 [!code-vb[System.Net.ServicePoint#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expect100Continue">
      <MemberSignature Language="C#" Value="public bool Expect100Continue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Expect100Continue" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.Expect100Continue" />
      <MemberSignature Language="VB.NET" Value="Public Property Expect100Continue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Expect100Continue { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Expect100Continue : bool with get, set" Usage="System.Net.ServicePoint.Expect100Continue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>100-Continue 동작을 사용할지 여부를 결정하는 <see cref="T:System.Boolean" /> 값을 가져오거나 설정합니다.</summary>
        <value>
          <see langword="POST" /> 요청에 대해 100-Continue 응답이 필요하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성이로 설정 된 경우 `true`, 클라이언트에서 사용 하는 요청는 `POST` 메서드는 100을 받으려는-클라이언트를 게시 데이터를 전송 하도록 나타내려면 서버 로부터 응답을 계속 합니다. 이 메커니즘은 요청 헤더에 따라 서버에서 요청을 거부 하려고 할 때 네트워크를 통해 많은 양의 데이터를 보내지 못하게 하는 클라이언트 수 있습니다.  
  
 예를 들어는 <xref:System.Net.ServicePoint.Expect100Continue> 속성은 `false`합니다. 서버에 요청을 보내면 데이터를 포함 합니다. 요청 헤더를 읽은 후 서버 인증이 필요 하 고 401 응답을 보내면, 하는 경우 클라이언트가 적절 한 인증 헤더를 사용 하 여 데이터 다시 보내야 합니다.  
  
 경우는 <xref:System.Net.ServicePoint.Expect100Continue> 속성은 `true`, 요청 헤더에는 서버에 보내집니다. 서버가 요청을 거부 했습니다, 100 보냅니다-계속 응답 신호를 보내는 데이터를 전송할 수 있습니다. 앞의 예제에서와 같이 서버 인증이 필요한 경우 401 응답을 보냅니다 및 클라이언트에 데이터를 불필요 하 게 전송 되지 않습니다.  
  
 이 속성의 값을 변경 해도 기존 연결 적용 되지 않습니다. 만 변경 이후 생성 된 새 연결은 영향을 받습니다.  
  
 Expect 100-계속 동작을 완전히 10.1.1 IETF RFC 2616 섹션에서 설명 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 속성의 값을 표시합니다.  
  
 [!code-cpp[System.Net.ServicePoint#9](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#9)]
 [!code-csharp[System.Net.ServicePoint#9](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#9)]
 [!code-vb[System.Net.ServicePoint#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IdleSince">
      <MemberSignature Language="C#" Value="public DateTime IdleSince { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime IdleSince" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.IdleSince" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IdleSince As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime IdleSince { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.IdleSince : DateTime" Usage="System.Net.ServicePoint.IdleSince" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Net.ServicePoint" /> 개체가 호스트에 마지막으로 연결된 날짜와 시간을 가져옵니다.</summary>
        <value>
          <see cref="T:System.Net.ServicePoint" /> 개체가 마지막으로 연결된 날짜와 시간이 들어 있는 <see cref="T:System.DateTime" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.ServicePoint.IdleSince> 속성 기록 마지막 날짜 및 시간 서비스 지점을 호스트에서 연결이 해제 되었습니다. 때 현재 시간 사이의 차이 및 <xref:System.Net.ServicePoint.IdleSince> 의 값을 초과 <xref:System.Net.ServicePoint.MaxIdleTime>, <xref:System.Net.ServicePoint> 개체는 재활용 작업 다른 연결을 사용할 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Net.ServicePoint.IdleSince> 속성을 설정 하 고 검색할 날짜와 시간을 <xref:System.Net.ServicePoint> 개체가 호스트에 연결 된 마지막 합니다.  
  
 [!code-cpp[System.Net.ServicePoint#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#3)]
 [!code-csharp[System.Net.ServicePoint#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#3)]
 [!code-vb[System.Net.ServicePoint#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxIdleTime">
      <MemberSignature Language="C#" Value="public int MaxIdleTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxIdleTime" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.MaxIdleTime" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxIdleTime As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxIdleTime { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxIdleTime : int with get, set" Usage="System.Net.ServicePoint.MaxIdleTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Net.ServicePoint" /> 개체와 관련된 연결이 닫히기 전까지 유휴 상태를 유지할 수 있는 시간을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Net.ServicePoint" /> 개체와 관련된 연결이 닫히고 다른 연결에 다시 사용되기 전까지 유휴 상태를 유지할 수 있는 시간(밀리초)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정할 수 있습니다 <xref:System.Net.ServicePoint.MaxIdleTime> 를 <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> 와 관련 된 연결을 나타내기 위해는 <xref:System.Net.ServicePoint> 개체 시간 초과 되지 않아야 합니다.  
  
 기본값은 <xref:System.Net.ServicePoint.MaxIdleTime> 속성의 값은는 <xref:System.Net.ServicePointManager.MaxServicePointIdleTime?displayProperty=nameWithType> 속성 때는 <xref:System.Net.ServicePoint> 개체가 만들어집니다. 후속 변경은 <xref:System.Net.ServicePointManager.MaxServicePointIdleTime> 속성 기존에 아무 영향도 <xref:System.Net.ServicePoint> 개체입니다.  
  
 경우는 <xref:System.Net.ServicePoint.MaxIdleTime> 와 관련 된 연결에 대 한 한 <xref:System.Net.ServicePoint> 은 초과 연결은 열린 상태로 응용 프로그램에서 연결을 사용 하려고 할 때까지 합니다. 그 당시 프레임 워크는 연결을 닫고 원격 호스트에 새 연결을 만듭니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Net.ServicePoint.MaxIdleTime> 속성을 설정 하 고 검색 된 <xref:System.Net.ServicePoint> 유휴 시간입니다.  
  
 [!code-cpp[System.Net.ServicePoint#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#3)]
 [!code-csharp[System.Net.ServicePoint#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#3)]
 [!code-vb[System.Net.ServicePoint#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Net.ServicePoint.MaxIdleTime" />이 <see cref="F:System.Threading.Timeout.Infinite" />보다 작거나 <see cref="F:System.Int32.MaxValue" />보다 큰 값으로 설정된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ProtocolVersion">
      <MemberSignature Language="C#" Value="public virtual Version ProtocolVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ProtocolVersion" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.ProtocolVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ProtocolVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Version ^ ProtocolVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProtocolVersion : Version" Usage="System.Net.ServicePoint.ProtocolVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Net.ServicePoint" /> 개체가 사용하는 HTTP 프로토콜의 버전을 가져옵니다.</summary>
        <value>
          <see cref="T:System.Net.ServicePoint" /> 개체가 사용하는 HTTP 프로토콜 버전이 들어 있는 <see cref="T:System.Version" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 HTTP 프로토콜 버전은 HTTP/1.0 및 HTTP/1.1입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 속성의 값을 표시합니다.  
  
 [!code-cpp[System.Net.ServicePoint#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#5)]
 [!code-csharp[System.Net.ServicePoint#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#5)]
 [!code-vb[System.Net.ServicePoint#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.ReceiveBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveBufferSize : int with get, set" Usage="System.Net.ServicePoint.ReceiveBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Net.ServicePoint" />에서 사용하는 소켓의 수신 버퍼 크기를 가져오거나 설정합니다.</summary>
        <value>수신 버퍼의 크기(바이트)가 들어 있는 <see cref="T:System.Int32" />입니다. 기본값은 8192입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 자세한 내용은 <xref:System.Net.Sockets.Socket.ReceiveBufferSize>을 참조하십시오.  
  
   
  
## Examples  
 다음 코드 예제에서는이 속성의 값을 설정 합니다.  
  
 [!code-cpp[NCLServicePoint#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLServicePoint/CPP/nclservicepoint.cpp#1)]
 [!code-csharp[NCLServicePoint#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLServicePoint/CS/nclservicepoint.cs#1)]
 [!code-vb[NCLServicePoint#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLServicePoint/VB/nclservicepoint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">set 작업에 지정된 값이 <see cref="F:System.Int32.MaxValue" />보다 큰 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="SetTcpKeepAlive">
      <MemberSignature Language="C#" Value="public void SetTcpKeepAlive (bool enabled, int keepAliveTime, int keepAliveInterval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTcpKeepAlive(bool enabled, int32 keepAliveTime, int32 keepAliveInterval) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.ServicePoint.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetTcpKeepAlive (enabled As Boolean, keepAliveTime As Integer, keepAliveInterval As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetTcpKeepAlive(bool enabled, int keepAliveTime, int keepAliveInterval);" />
      <MemberSignature Language="F#" Value="member this.SetTcpKeepAlive : bool * int * int -&gt; unit" Usage="servicePoint.SetTcpKeepAlive (enabled, keepAliveTime, keepAliveInterval)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enabled" Type="System.Boolean" />
        <Parameter Name="keepAliveTime" Type="System.Int32" />
        <Parameter Name="keepAliveInterval" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="enabled">true로 설정하면 지정된 <c>keepAliveTime</c> 및 <c>keepAliveInterval</c> 값을 사용하여 TCP 연결에서 TCP 연결 유지 옵션을 사용하도록 설정합니다.  false로 설정하면 TCP 연결 유지 옵션을 사용하지 않도록 설정하고 나머지 매개 변수를 무시합니다.  기본값은 false입니다.</param>
        <param name="keepAliveTime">첫 번째 연결 유지 패킷이 전송될 때까지 아무런 작업도 수행하지 않는 시간 제한(밀리초)을 지정합니다.  이 값은 0보다 커야 합니다.  0보다 작거나 같은 값이 전달되면 <see cref="T:System.ArgumentOutOfRangeException" />이 throw됩니다.</param>
        <param name="keepAliveInterval">승인을 받지 못할 경우 다음 연결 유지 패킷이 전송되는 간격(밀리초)을 지정합니다.  이 값은 0보다 커야 합니다.  0보다 작거나 같은 값이 전달되면 <see cref="T:System.ArgumentOutOfRangeException" />이 throw됩니다.</param>
        <summary>TCP 연결에서 연결 유지 옵션을 사용하거나 사용하지 않습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 TCP/IP 공급자 TCP 연결에서 연결 유지 패킷이을 사용할 수 있도록 하는 응용 프로그램 요청할 수 있습니다. 기본값은 TCP 연결에서 연결 유지 패킷이 사용 불가능 합니다.  
  
 TCP 소켓을 경우의 기본 설정은 2 시간 설정에서 연결 유지 시간 제한 및 연결 유지 간격을 1 초로 초기화 합니다. `keepAliveTime` 매개 변수는 첫 번째 연결 유지 패킷이 전송 될 때까지 아무런 작업도 밀리초 단위로 제한 시간을 지정 합니다. `keepAliveInterval` 매개 변수는 간격을 밀리초 단위로 지정 사이 승인을 받지 못할 경우 연속 연결 유지 패킷이 전송 됩니다. 연결 유지 프로브 수를 변경할 수 없습니다 및 10으로 설정 됩니다.  
  
 연결 유지의 결과로 TCP 연결이 끊어진 경우는 <xref:System.Net.Sockets.SocketError> 의 <xref:System.Net.Sockets.SocketError.NetworkReset> 에서 반환 되는 진행 중인 모든 호출에는 소켓 이후의 호출이 실패 하 고는 <xref:System.Net.Sockets.SocketError> 의 <xref:System.Net.Sockets.SocketError.NotConnected>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="keepAliveTime" /> 또는 <paramref name="keepAliveInterval" /> 매개 변수에 지정된 값이 0보다 작거나 같습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsPipelining">
      <MemberSignature Language="C#" Value="public bool SupportsPipelining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsPipelining" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.SupportsPipelining" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportsPipelining As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportsPipelining { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsPipelining : bool" Usage="System.Net.ServicePoint.SupportsPipelining" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Net.ServicePoint" /> 개체가 파이프라인 연결을 지원하는지 여부를 나타냅니다.</summary>
        <value>
          <see cref="T:System.Net.ServicePoint" /> 개체가 파이프라인 연결을 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 파이프라인 요청을 보내는 여러 영구 연결을 통해 각 서버의 응답을에서 기다리지 않고 클라이언트 수 있습니다. 서버 요청을 받은 대로 동일한 순서로 응답을 보냅니다.  
  
 파이프라인은 IETF RFC 2616 8.1.2.2에서에서 자세히 설명 되어 있습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 속성의 값을 표시합니다.  
  
 [!code-cpp[System.Net.ServicePoint#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#5)]
 [!code-csharp[System.Net.ServicePoint#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#5)]
 [!code-vb[System.Net.ServicePoint#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseNagleAlgorithm">
      <MemberSignature Language="C#" Value="public bool UseNagleAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseNagleAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.UseNagleAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property UseNagleAlgorithm As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseNagleAlgorithm { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseNagleAlgorithm : bool with get, set" Usage="System.Net.ServicePoint.UseNagleAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Net.ServicePoint" /> 개체에서 관리하는 연결에 Nagle 알고리즘을 사용할지 여부를 결정하는 <see cref="T:System.Boolean" /> 값을 가져오거나 설정합니다.</summary>
        <value>Nagle 알고리즘을 사용하려면 <see langword="true" />이고, 사용하지 않으려면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nagle 알고리즘을 버퍼링 하는 작은 데이터 패킷을 단일 패킷으로 전송 하도록 사용 됩니다. "Nagling" 라고 하는이 프로세스를 전송 하는 패킷 수가 감소 하므로 널리 사용 되 및 패킷 당 오버 헤드를 낮춥니다.  
  
 이 속성의 값을 변경 해도 기존 연결 적용 되지 않습니다. 만 변경 이후 생성 된 새 연결은 영향을 받습니다.  
  
 Nagle 알고리즘 IETF RFC 896 완벽 하 게 설명 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 속성의 값을 표시합니다.  
  
 [!code-cpp[System.Net.ServicePoint#9](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#9)]
 [!code-csharp[System.Net.ServicePoint#9](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#9)]
 [!code-vb[System.Net.ServicePoint#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>