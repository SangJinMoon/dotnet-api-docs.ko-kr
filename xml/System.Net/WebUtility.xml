<Type Name="WebUtility" FullName="System.Net.WebUtility">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="00077ce3265b7c9b8c9786ed662a0c1ce1775cb1" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="40449631" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class WebUtility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WebUtility extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebUtility" />
  <TypeSignature Language="VB.NET" Value="Public Class WebUtility" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebUtility abstract sealed" />
  <TypeSignature Language="F#" Value="type WebUtility = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="fdf10-101">웹 요청을 처리할 때 URL 인코딩 및 디코딩을 위한 메서드를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fdf10-101">Provides methods for encoding and decoding URLs when processing Web requests.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf10-102"><xref:System.Web.HttpUtility> 인코딩 및 디코딩 유틸리티 메서드를 사용 하 여 HTML 인코딩 문자열을 사용 하 여 클래스에 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdf10-102">The <xref:System.Web.HttpUtility> class contains encoding and decoding utility methods for use with HTML-encode strings.</span></span> <span data-ttu-id="fdf10-103"><xref:System.Uri?displayProperty=nameWithType> 클래스도 비슷한 용도로 사용할 수 있는 속성과 메서드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdf10-103">The <xref:System.Uri?displayProperty=nameWithType> class also contains methods and properties that can be used for similar purposes.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Uri" />
    <altmember cref="T:System.Web.HttpUtility" />
    <altmember cref="T:System.Web.HttpServerUtility" />
    <altmember cref="P:System.Web.HttpContext.Server" />
  </Docs>
  <Members>
    <MemberGroup MemberName="HtmlDecode">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fdf10-104">HTTP 전송을 위해 HTML로 인코딩된 문자열을 디코딩된 문자열로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdf10-104">Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static string HtmlDecode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlDecode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlDecode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlDecode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member HtmlDecode : string -&gt; string" Usage="System.Net.WebUtility.HtmlDecode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="fdf10-105">디코딩할 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdf10-105">The string to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdf10-106">HTTP 전송을 위해 HTML로 인코딩된 문자열을 디코딩된 문자열로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdf10-106">Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fdf10-107">디코딩된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdf10-107">A decoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf10-108">공백 및 문장 부호 등의 문자에 HTTP 스트림으로 전달 하면 수신 측에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdf10-108">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="fdf10-109">해당 하는 문자 엔터티로; HTML에서 허용 되지 않는 문자를 변환 HTML 인코딩 HTML 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="fdf10-109">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="fdf10-110">예를 들어, 텍스트 문자를 블록에 포함 하는 경우 `<` 하 고 `>` 로 인코딩되며 `&lt;` 및 `&gt;` HTTP 전송에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdf10-110">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 <span data-ttu-id="fdf10-111">경우는 `value` 매개 변수가 `null`, 반환 되는 디코딩된 문자열은 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="fdf10-111">If the `value` parameter is `null`, then the returned decoded string is `null`.</span></span> <span data-ttu-id="fdf10-112">경우는 `value` 매개 변수는 빈 문자열을 반환 되는 디코딩된 문자열은 빈 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="fdf10-112">If the `value` parameter is an empty string, then the returned decoded string is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebUtility.HtmlEncode(System.String)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static void HtmlDecode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlDecode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlDecode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlDecode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member HtmlDecode : string * System.IO.TextWriter -&gt; unit" Usage="System.Net.WebUtility.HtmlDecode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="fdf10-113">디코딩할 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdf10-113">The string to decode.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="fdf10-114">
            <see cref="T:System.IO.TextWriter" /> 출력 스트림입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdf10-114">A <see cref="T:System.IO.TextWriter" /> stream of output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdf10-115">HTML 인코딩된 문자열을 디코딩된 문자열로 변환하여 디코딩된 문자열을 <see cref="T:System.IO.TextWriter" /> 출력 스트림에 보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdf10-115">Converts a string that has been HTML-encoded into a decoded string, and sends the decoded string to a <see cref="T:System.IO.TextWriter" /> output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf10-116">공백 및 문장 부호 등의 문자에 HTTP 스트림으로 전달 하면 수신 측에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdf10-116">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="fdf10-117">해당 하는 문자 엔터티로; HTML에서 허용 되지 않는 문자를 변환 HTML 인코딩 HTML 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="fdf10-117">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="fdf10-118">예를 들어, 텍스트 문자를 블록에 포함 하는 경우 `<` 하 고 `>` 로 인코딩되며 `&lt;` 및 `&gt;` HTTP 전송에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdf10-118">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fdf10-119">
            <paramref name="output" /> 매개 변수가 <see langword="null" />이 아니면 <paramref name="value" /> 매개 변수가 <see langword="null" />이 될 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdf10-119">The <paramref name="output" /> parameter cannot be <see langword="null" /> if the <paramref name="value" /> parameter is not <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fdf10-120">문자열을 HTML 인코딩된 문자열로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdf10-120">Converts a string to an HTML-encoded string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : string -&gt; string" Usage="System.Net.WebUtility.HtmlEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="fdf10-121">인코딩할 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdf10-121">The string to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdf10-122">문자열을 HTML 인코딩된 문자열로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdf10-122">Converts a string to an HTML-encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fdf10-123">인코딩된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdf10-123">An encoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf10-124">공백 및 문장 부호 등의 문자에 HTTP 스트림으로 전달 하면 수신 측에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdf10-124">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="fdf10-125">해당 하는 문자 엔터티로; HTML에서 허용 되지 않는 문자를 변환 HTML 인코딩 HTML 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="fdf10-125">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="fdf10-126">예를 들어, 텍스트 문자를 블록에 포함 하는 경우 `<` 하 고 `>` 로 인코딩되며 `&lt;` 및 `&gt;` HTTP 전송에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdf10-126">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 <span data-ttu-id="fdf10-127">경우는 `value` 매개 변수가 `null`, 반환된 된 인코딩된 문자열은 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="fdf10-127">If the `value` parameter is `null`, then the returned encoded string is `null`.</span></span> <span data-ttu-id="fdf10-128">경우는 `value` 매개 변수는 빈 문자열을 반환된 된 인코딩된 문자열은 빈 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="fdf10-128">If the `value` parameter is an empty string, then the returned encoded string is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebUtility.HtmlDecode(System.String)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static void HtmlEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : string * System.IO.TextWriter -&gt; unit" Usage="System.Net.WebUtility.HtmlEncode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="fdf10-129">인코딩할 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdf10-129">The string to encode.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="fdf10-130">
            <see cref="T:System.IO.TextWriter" /> 출력 스트림입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdf10-130">A <see cref="T:System.IO.TextWriter" /> output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdf10-131">문자열을 HTML 인코딩된 문자열로 변환하고 출력 스트림 <see cref="T:System.IO.TextWriter" />로 출력을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdf10-131">Converts a string into an HTML-encoded string, and returns the output as a <see cref="T:System.IO.TextWriter" /> stream of output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf10-132">공백 및 문장 부호 등의 문자에 HTTP 스트림으로 전달 하면 수신 측에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdf10-132">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="fdf10-133">해당 하는 문자 엔터티로; HTML에서 허용 되지 않는 문자를 변환 HTML 인코딩 HTML 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="fdf10-133">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="fdf10-134">예를 들어, 텍스트 문자를 블록에 포함 하는 경우 `<` 하 고 `>` 로 인코딩되며 `&lt;` 및 `&gt;` HTTP 전송에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdf10-134">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fdf10-135">
            <paramref name="output" /> 매개 변수가 <see langword="null" />이 아니면 <paramref name="value" /> 매개 변수가 <see langword="null" />이 될 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdf10-135">The <paramref name="output" /> parameter cannot be <see langword="null" /> if the <paramref name="value" /> parameter is not <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public static string UrlDecode (string encodedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlDecode(string encodedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecode (encodedValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlDecode(System::String ^ encodedValue);" />
      <MemberSignature Language="F#" Value="static member UrlDecode : string -&gt; string" Usage="System.Net.WebUtility.UrlDecode encodedValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="encodedValue">
          <span data-ttu-id="fdf10-136">디코딩할 URL 인코딩된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdf10-136">A URL-encoded string to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdf10-137">URL에서 전송을 위해 인코딩된 문자열로 디코딩된 문자열로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdf10-137">Converts a string that has been encoded for transmission in a URL into a decoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fdf10-138">디코딩된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdf10-138">A decoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf10-139">공백 및 문장 부호 등의 문자에 HTTP 스트림으로 전달 하면 수신 측에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdf10-139">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="fdf10-140">URL 인코딩은 URL에 해당 하는 16 진수 이스케이프 시퀀스를 허용 하지 않는 문자를 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdf10-140">URL encoding converts characters that are not allowed in a URL into equivalent hexadecimal escape sequences.</span></span> <span data-ttu-id="fdf10-141"><xref:System.Net.WebUtility.UrlEncode%2A> 메서드 URL로 인코딩된 문자열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="fdf10-141">The <xref:System.Net.WebUtility.UrlEncode%2A> method creates a URL-encoded string.</span></span>  
  
 <span data-ttu-id="fdf10-142">URL 디코딩 해당 ascii 문자를 사용 하 여 16 진수 이스케이프 시퀀스를 대체합니다.</span><span class="sxs-lookup"><span data-stu-id="fdf10-142">URL decoding replaces hexadecimal escape sequences with corresponding ASCII character equivalents.</span></span> <span data-ttu-id="fdf10-143">예를 들어 URL로 인코딩된 텍스트 블록에 포함 하는 경우 이스케이프 시퀀스 `%3c` 하 고 `%3e` 문자를 디코딩 `<` 및 `>`합니다.</span><span class="sxs-lookup"><span data-stu-id="fdf10-143">For example, when embedded in a block of URL-encoded text, the escape sequences `%3c` and `%3e` are decoded into the characters `<` and `>`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlDecodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlDecodeToBytes (byte[] encodedValue, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlDecodeToBytes(unsigned int8[] encodedValue, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecodeToBytes (encodedValue As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlDecodeToBytes(cli::array &lt;System::Byte&gt; ^ encodedValue, int offset, int count);" />
      <MemberSignature Language="F#" Value="static member UrlDecodeToBytes : byte[] * int * int -&gt; byte[]" Usage="System.Net.WebUtility.UrlDecodeToBytes (encodedValue, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedValue" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="encodedValue">
          <span data-ttu-id="fdf10-144">디코딩할 URL 인코딩된 <see cref="T:System.Byte" /> 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdf10-144">A URL-encoded <see cref="T:System.Byte" /> array to decode.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="fdf10-145">디코딩할 <see cref="T:System.Byte" /> 배열의 시작 부분부터의 오프셋(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdf10-145">The offset, in bytes, from the start of the <see cref="T:System.Byte" /> array to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="fdf10-146">
            <see cref="T:System.Byte" /> 배열에서 디코딩할 개수입니다(바이트 단위).</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdf10-146">The count, in bytes, to decode from the <see cref="T:System.Byte" /> array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdf10-147">URL에서 전송을 위해 인코딩된 바이트 문자열을 디코딩된 바이트 배열로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdf10-147">Converts an encoded byte array that has been encoded for transmission in a URL into a decoded byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fdf10-148">디코딩된 <see cref="T:System.Byte" /> 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdf10-148">A decoded <see cref="T:System.Byte" /> array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf10-149">공백 및 문장 부호 등의 문자에 HTTP 스트림으로 전달 하면 수신 측에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdf10-149">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="fdf10-150">URL 인코딩은 URL에 해당 하는 16 진수 이스케이프 시퀀스를 허용 하지 않는 문자를 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdf10-150">URL encoding converts characters that are not allowed in a URL into equivalent hexadecimal escape sequences.</span></span> <span data-ttu-id="fdf10-151"><xref:System.Net.WebUtility.UrlEncodeToBytes%2A> 메서드 URL로 인코딩된 바이트 배열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="fdf10-151">The <xref:System.Net.WebUtility.UrlEncodeToBytes%2A> method creates a URL-encoded byte array.</span></span>  
  
 <span data-ttu-id="fdf10-152">URL 디코딩 해당 ascii 문자를 사용 하 여 16 진수 이스케이프 시퀀스를 대체합니다.</span><span class="sxs-lookup"><span data-stu-id="fdf10-152">URL decoding replaces hexadecimal escape sequences with corresponding ASCII character equivalents.</span></span> <span data-ttu-id="fdf10-153">예를 들어 URL로 인코딩된 텍스트 블록에 포함 하는 경우 이스케이프 시퀀스 `%3c` 하 고 `%3e` 문자를 디코딩 `<` 및 `>`합니다.</span><span class="sxs-lookup"><span data-stu-id="fdf10-153">For example, when embedded in a block of URL-encoded text, the escape sequences `%3c` and `%3e` are decoded into the characters `<` and `>`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member UrlEncode : string -&gt; string" Usage="System.Net.WebUtility.UrlEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="fdf10-154">URL로 인코딩할 텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdf10-154">The text to URL-encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdf10-155">텍스트 문자열을 URL 인코딩된 문자열로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdf10-155">Converts a text string into a URL-encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fdf10-156">URL 인코딩된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdf10-156">A URL-encoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf10-157">공백 및 문장 부호 등의 문자에 HTTP 스트림으로 전달 하면 수신 측에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdf10-157">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="fdf10-158">URL 인코딩 문자 엔터티가 해당 하는 16 진수 이스케이프 시퀀스의 구성 된 URL에 허용 되지 않는 문자를 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="fdf10-158">URL encoding replaces characters that are not allowed in a URL with character-entity equivalents consisting of hexadecimal escape sequences.</span></span> <span data-ttu-id="fdf10-159">변환된 된 문자열은 u t F-8 형식을 준수 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdf10-159">The converted string is expected to conform to the UTF-8 format.</span></span>  
  
 <span data-ttu-id="fdf10-160">URL 인코딩 문자, 숫자 및 문장 부호 문자를 제외한 모든 문자 코드를 대체합니다.</span><span class="sxs-lookup"><span data-stu-id="fdf10-160">URL encoding replaces all character codes except for letters, numbers, and the following punctuation characters:</span></span>  
  
-   <span data-ttu-id="fdf10-161">`-` (빼기 기호)</span><span class="sxs-lookup"><span data-stu-id="fdf10-161">`-` (minus sign)</span></span>  
  
-   <span data-ttu-id="fdf10-162">`_` (밑줄)</span><span class="sxs-lookup"><span data-stu-id="fdf10-162">`_` (underscore)</span></span>  
  
-   <span data-ttu-id="fdf10-163">`.` (마침표)</span><span class="sxs-lookup"><span data-stu-id="fdf10-163">`.` (period)</span></span>  
  
-   <span data-ttu-id="fdf10-164">`!` (느낌표)</span><span class="sxs-lookup"><span data-stu-id="fdf10-164">`!` (exclamation point)</span></span>  
  
-   <span data-ttu-id="fdf10-165">`*` (별표)</span><span class="sxs-lookup"><span data-stu-id="fdf10-165">`*` (asterisk)</span></span>  
  
-   <span data-ttu-id="fdf10-166">`(` 및 `)` (열고 닫는 괄호)</span><span class="sxs-lookup"><span data-stu-id="fdf10-166">`(` and `)` (opening and closing parentheses)</span></span>  
  
 <span data-ttu-id="fdf10-167">예를 들어, 텍스트 문자를 URL에 전송 될 블록에 포함 하면 `<` 하 고 `>` 로 인코딩되며 `%3c` 및 `%3e`합니다.</span><span class="sxs-lookup"><span data-stu-id="fdf10-167">For example, when embedded in a block of text to be transmitted in a URL, the characters `<` and `>` are encoded as `%3c` and `%3e`.</span></span>  
  
 <span data-ttu-id="fdf10-168"><xref:System.Net.WebUtility.UrlDecode%2A> 인코딩 메서드를 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="fdf10-168">The <xref:System.Net.WebUtility.UrlDecode%2A> method reverses the encoding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlEncodeToBytes (byte[] value, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlEncodeToBytes(unsigned int8[] value, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncodeToBytes (value As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlEncodeToBytes(cli::array &lt;System::Byte&gt; ^ value, int offset, int count);" />
      <MemberSignature Language="F#" Value="static member UrlEncodeToBytes : byte[] * int * int -&gt; byte[]" Usage="System.Net.WebUtility.UrlEncodeToBytes (value, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="fdf10-169">URL 인코딩할 <see cref="T:System.Byte" /> 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdf10-169">The <see cref="T:System.Byte" /> array to URL-encode.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="fdf10-170">인코딩할 <see cref="T:System.Byte" /> 배열의 시작 부분부터의 오프셋(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdf10-170">The offset, in bytes, from the start of the <see cref="T:System.Byte" /> array to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="fdf10-171">
            <see cref="T:System.Byte" /> 배열에서 인코딩할 개수입니다(바이트 단위).</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdf10-171">The count, in bytes, to encode from the <see cref="T:System.Byte" /> array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdf10-172">바이트 배열을 URL 인코딩된 바이트 배열로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdf10-172">Converts a byte array into a URL-encoded byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fdf10-173">인코딩된 <see cref="T:System.Byte" /> 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdf10-173">An encoded <see cref="T:System.Byte" /> array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf10-174">공백 및 문장 부호 등의 문자에 HTTP 스트림으로 전달 하면 수신 측에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdf10-174">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="fdf10-175">URL 인코딩 문자 엔터티가 해당 하는 16 진수 이스케이프 시퀀스의 구성 된 URL에 허용 되지 않는 문자를 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="fdf10-175">URL encoding replaces characters that are not allowed in a URL with character-entity equivalents consisting of hexadecimal escape sequences.</span></span> <span data-ttu-id="fdf10-176">변환된 된 문자열은 u t F-8 형식을 준수 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdf10-176">The converted string is expected to conform to the UTF-8 format.</span></span>  
  
 <span data-ttu-id="fdf10-177">URL 인코딩 문자, 숫자 및 문장 부호 문자를 제외한 모든 문자 코드를 대체합니다.</span><span class="sxs-lookup"><span data-stu-id="fdf10-177">URL encoding replaces all character codes except for letters, numbers, and the following punctuation characters:</span></span>  
  
-   <span data-ttu-id="fdf10-178">`-` (빼기 기호)</span><span class="sxs-lookup"><span data-stu-id="fdf10-178">`-` (minus sign)</span></span>  
  
-   <span data-ttu-id="fdf10-179">`_` (밑줄)</span><span class="sxs-lookup"><span data-stu-id="fdf10-179">`_` (underscore)</span></span>  
  
-   <span data-ttu-id="fdf10-180">`.` (마침표)</span><span class="sxs-lookup"><span data-stu-id="fdf10-180">`.` (period)</span></span>  
  
-   <span data-ttu-id="fdf10-181">`!` (느낌표)</span><span class="sxs-lookup"><span data-stu-id="fdf10-181">`!` (exclamation point)</span></span>  
  
-   <span data-ttu-id="fdf10-182">`*` (별표)</span><span class="sxs-lookup"><span data-stu-id="fdf10-182">`*` (asterisk)</span></span>  
  
-   <span data-ttu-id="fdf10-183">`'` (작은따옴표)</span><span class="sxs-lookup"><span data-stu-id="fdf10-183">`'` (single quotation mark)</span></span>  
  
-   <span data-ttu-id="fdf10-184">`(` 및 `)` (열고 닫는 괄호)</span><span class="sxs-lookup"><span data-stu-id="fdf10-184">`(` and `)` (opening and closing parentheses)</span></span>  
  
 <span data-ttu-id="fdf10-185">예를 들어, 텍스트 문자를 URL에 전송 될 블록에 포함 하면 `<` 하 고 `>` 로 인코딩되며 `%3c` 및 `%3e`합니다.</span><span class="sxs-lookup"><span data-stu-id="fdf10-185">For example, when embedded in a block of text to be transmitted in a URL, the characters `<` and `>` are encoded as `%3c` and `%3e`.</span></span>  
  
 <span data-ttu-id="fdf10-186"><xref:System.Net.WebUtility.UrlDecodeToBytes%2A> 인코딩 메서드를 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="fdf10-186">The <xref:System.Net.WebUtility.UrlDecodeToBytes%2A> method reverses the encoding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>