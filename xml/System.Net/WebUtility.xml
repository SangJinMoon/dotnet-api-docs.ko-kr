<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WebUtility.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d26dd9460dd12b695a36cd9a7757a2ff00818623.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d26dd9460dd12b695a36cd9a7757a2ff00818623</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.WebUtility">
          <source>Provides methods for encoding and decoding URLs when processing Web requests.</source>
          <target state="translated">웹 요청을 처리할 때 URL 인코딩 및 디코딩을 위한 메서드를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebUtility">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpUtility&gt;</ph> class contains encoding and decoding utility methods for use with HTML-encode strings.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpUtility&gt;</ph> 클래스 인코딩 및 디코딩 HTML 인코딩 문자열 사용에 대 한 유틸리티 메서드를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebUtility">
          <source>The <ph id="ph1">&lt;xref:System.Uri?displayProperty=nameWithType&gt;</ph> class also contains methods and properties that can be used for similar purposes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Uri?displayProperty=nameWithType&gt;</ph> 클래스도 비슷한 용도로 사용할 수 있는 메서드 및 속성을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Net.WebUtility">
          <source>Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</source>
          <target state="translated">HTTP 전송을 위해 HTML로 인코딩된 문자열을 디코딩된 문자열로 변환합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Net.WebUtility.HtmlDecode(System.String)">
          <source>The string to decode.</source>
          <target state="translated">디코딩할 문자열입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Net.WebUtility.HtmlDecode(System.String)">
          <source>Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</source>
          <target state="translated">HTTP 전송을 위해 HTML로 인코딩된 문자열을 디코딩된 문자열로 변환합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Net.WebUtility.HtmlDecode(System.String)">
          <source>A decoded string.</source>
          <target state="translated">디코딩된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.HtmlDecode(System.String)">
          <source>If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</source>
          <target state="translated">공백 및 문장 부호와 같은 문자가 HTTP 스트림으로 전달 하는 경우 받는 쪽에서 잘못 해석 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.HtmlDecode(System.String)">
          <source>HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</source>
          <target state="translated">HTML 인코딩을 HTML에 해당 문자 엔터티로; 허용 하지 않는 문자를 변환 합니다. HTML 디코딩 인코딩을 반대로 바꿉니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.HtmlDecode(System.String)">
          <source>For example, when embedded in a block of text, the characters <ph id="ph1">\&lt;</ph> and &gt; are encoded as <ph id="ph2">&amp;lt;</ph> and <ph id="ph3">&amp;gt;</ph> for HTTP transmission.</source>
          <target state="translated">예를 들어 텍스트에 문자를 블록에 포함 하는 경우 <ph id="ph1">\&lt;</ph> 및 &gt;로 인코딩된 <ph id="ph2">&amp;lt;</ph> 및 <ph id="ph3">&amp;gt;</ph> HTTP 전송을 위해.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.HtmlDecode(System.String)">
          <source>If the <ph id="ph1">`value`</ph> parameter is <ph id="ph2">`null`</ph>, then the returned decoded string is <ph id="ph3">`null`</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">`value`</ph> 매개 변수는 <ph id="ph2">`null`</ph>, 반환 되는 디코딩된 문자열은 <ph id="ph3">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.HtmlDecode(System.String)">
          <source>If the <ph id="ph1">`value`</ph> parameter is an empty string, then the returned decoded string is an empty string.</source>
          <target state="translated">경우는 <ph id="ph1">`value`</ph> 매개 변수는 빈 문자열을 한 후 반환 되는 디코딩된 문자열은 빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)">
          <source>The string to decode.</source>
          <target state="translated">디코딩할 문자열입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> stream of output.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 출력 스트림입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)">
          <source>Converts a string that has been HTML-encoded into a decoded string, and sends the decoded string to a <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> output stream.</source>
          <target state="translated">HTML 인코딩된 문자열을 디코딩된 문자열로 변환하여 디코딩된 문자열을 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 출력 스트림에 보냅니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)">
          <source>If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</source>
          <target state="translated">공백 및 문장 부호와 같은 문자가 HTTP 스트림으로 전달 하는 경우 받는 쪽에서 잘못 해석 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)">
          <source>HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</source>
          <target state="translated">HTML 인코딩을 HTML에 해당 문자 엔터티로; 허용 하지 않는 문자를 변환 합니다. HTML 디코딩 인코딩을 반대로 바꿉니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)">
          <source>For example, when embedded in a block of text, the characters <ph id="ph1">\&lt;</ph> and &gt; are encoded as <ph id="ph2">&amp;lt;</ph> and <ph id="ph3">&amp;gt;</ph> for HTTP transmission.</source>
          <target state="translated">예를 들어 텍스트에 문자를 블록에 포함 하는 경우 <ph id="ph1">\&lt;</ph> 및 &gt;로 인코딩된 <ph id="ph2">&amp;lt;</ph> 및 <ph id="ph3">&amp;gt;</ph> HTTP 전송을 위해.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;paramref name="output" /&gt;</ph> parameter cannot be <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the <ph id="ph3">&lt;paramref name="value" /&gt;</ph> parameter is not <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="output" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이 아니면 <ph id="ph3">&lt;paramref name="value" /&gt;</ph> 매개 변수가 <ph id="ph4">&lt;see langword="null" /&gt;</ph>이 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="T:System.Net.WebUtility">
          <source>Converts a string to an HTML-encoded string.</source>
          <target state="translated">문자열을 HTML 인코딩된 문자열로 변환합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Net.WebUtility.HtmlEncode(System.String)">
          <source>The string to encode.</source>
          <target state="translated">인코딩할 문자열입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Net.WebUtility.HtmlEncode(System.String)">
          <source>Converts a string to an HTML-encoded string.</source>
          <target state="translated">문자열을 HTML 인코딩된 문자열로 변환합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Net.WebUtility.HtmlEncode(System.String)">
          <source>An encoded string.</source>
          <target state="translated">인코딩된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.HtmlEncode(System.String)">
          <source>If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</source>
          <target state="translated">공백 및 문장 부호와 같은 문자가 HTTP 스트림으로 전달 하는 경우 받는 쪽에서 잘못 해석 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.HtmlEncode(System.String)">
          <source>HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</source>
          <target state="translated">HTML 인코딩을 HTML에 해당 문자 엔터티로; 허용 하지 않는 문자를 변환 합니다. HTML 디코딩 인코딩을 반대로 바꿉니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.HtmlEncode(System.String)">
          <source>For example, when embedded in a block of text, the characters <ph id="ph1">\&lt;</ph> and &gt; are encoded as <ph id="ph2">&amp;lt;</ph> and <ph id="ph3">&amp;gt;</ph> for HTTP transmission.</source>
          <target state="translated">예를 들어 텍스트에 문자를 블록에 포함 하는 경우 <ph id="ph1">\&lt;</ph> 및 &gt;로 인코딩된 <ph id="ph2">&amp;lt;</ph> 및 <ph id="ph3">&amp;gt;</ph> HTTP 전송을 위해.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.HtmlEncode(System.String)">
          <source>If the <ph id="ph1">`value`</ph> parameter is <ph id="ph2">`null`</ph>, then the returned encoded string is <ph id="ph3">`null`</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">`value`</ph> 매개 변수는 <ph id="ph2">`null`</ph>, 반환 된 인코딩된 문자열은 <ph id="ph3">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.HtmlEncode(System.String)">
          <source>If the <ph id="ph1">`value`</ph> parameter is an empty string, then the returned encoded string is an empty string.</source>
          <target state="translated">경우는 <ph id="ph1">`value`</ph> 매개 변수는 빈 문자열이 면 다음 반환 된 인코딩된 문자열은 빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)">
          <source>The string to encode.</source>
          <target state="translated">인코딩할 문자열입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> output stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 출력 스트림입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)">
          <source>Converts a string into an HTML-encoded string, and returns the output as a <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> stream of output.</source>
          <target state="translated">문자열을 HTML 인코딩된 문자열로 변환하고 출력 스트림 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>로 출력을 반환합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)">
          <source>If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</source>
          <target state="translated">공백 및 문장 부호와 같은 문자가 HTTP 스트림으로 전달 하는 경우 받는 쪽에서 잘못 해석 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)">
          <source>HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</source>
          <target state="translated">HTML 인코딩을 HTML에 해당 문자 엔터티로; 허용 하지 않는 문자를 변환 합니다. HTML 디코딩 인코딩을 반대로 바꿉니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)">
          <source>For example, when embedded in a block of text, the characters <ph id="ph1">\&lt;</ph> and &gt;, are encoded as <ph id="ph2">&amp;lt;</ph> and <ph id="ph3">&amp;gt;</ph> for HTTP transmission.</source>
          <target state="translated">예를 들어 텍스트에 문자를 블록에 포함 하는 경우 <ph id="ph1">\&lt;</ph> 및 &gt;로 인코딩된 <ph id="ph2">&amp;lt;</ph> 및 <ph id="ph3">&amp;gt;</ph> HTTP 전송을 위해.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;paramref name="output" /&gt;</ph> parameter cannot be <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the <ph id="ph3">&lt;paramref name="value" /&gt;</ph> parameter is not <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="output" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이 아니면 <ph id="ph3">&lt;paramref name="value" /&gt;</ph> 매개 변수가 <ph id="ph4">&lt;see langword="null" /&gt;</ph>이 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Net.WebUtility.UrlDecode(System.String)">
          <source>A URL-encoded string to decode.</source>
          <target state="translated">디코딩할 URL 인코딩된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Net.WebUtility.UrlDecode(System.String)">
          <source>Converts a string that has been encoded for transmission in a URL into a decoded string.</source>
          <target state="translated">URL에서 전송을 위해 인코딩된 문자열로 디코딩된 문자열로 변환합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Net.WebUtility.UrlDecode(System.String)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Net.WebUtility.UrlDecode(System.String)">
          <source>A decoded string.</source>
          <target state="translated">디코딩된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.UrlDecode(System.String)">
          <source>If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</source>
          <target state="translated">공백 및 문장 부호와 같은 문자가 HTTP 스트림으로 전달 하는 경우 받는 쪽에서 잘못 해석 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.UrlDecode(System.String)">
          <source>URL encoding converts characters that are not allowed in a URL into equivalent hexadecimal escape sequences.</source>
          <target state="translated">URL 인코딩은 URL에 해당 하는 16 진수 이스케이프 시퀀스로 허용 되지 않는 문자를 변환 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.UrlDecode(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebUtility.UrlEncode%2A&gt;</ph> method creates a URL-encoded string.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebUtility.UrlEncode%2A&gt;</ph> 메서드 URL로 인코딩된 문자열을 만듭니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.UrlDecode(System.String)">
          <source>URL decoding replaces hexadecimal escape sequences with corresponding ASCII character equivalents.</source>
          <target state="translated">URL 디코딩 해당 ascii 문자 16 진수 이스케이프 시퀀스를 바꿉니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.UrlDecode(System.String)">
          <source>For example, when embedded in a block of URL-encoded text, the escape sequences <ph id="ph1">`%3c`</ph> and <ph id="ph2">`%3e`</ph> are decoded into the characters <ph id="ph3">`&lt;`</ph> and <ph id="ph4">`&gt;`</ph>.</source>
          <target state="translated">예를 들어 URL로 인코딩된 텍스트 블록에 포함 하는 경우 이스케이프 시퀀스 <ph id="ph1">`%3c`</ph> 및 <ph id="ph2">`%3e`</ph> 해당 문자로 디코딩 <ph id="ph3">`&lt;`</ph> 및 <ph id="ph4">`&gt;`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)">
          <source>A URL-encoded <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array to decode.</source>
          <target state="translated">디코딩할 URL 인코딩된 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 배열입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)">
          <source>The offset, in bytes, from the start of the <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array to decode.</source>
          <target state="translated">디코딩할 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 배열의 시작 부분부터의 오프셋(바이트)입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)">
          <source>The count, in bytes, to decode from the <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 배열에서 디코딩할 개수입니다(바이트 단위).</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)">
          <source>Converts an encoded byte array that has been encoded for transmission in a URL into a decoded byte array.</source>
          <target state="translated">URL에서 전송을 위해 인코딩된 바이트 문자열을 디코딩된 바이트 배열로 변환합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)">
          <source>A decoded <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array.</source>
          <target state="translated">디코딩된 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 문자열입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)">
          <source>If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</source>
          <target state="translated">공백 및 문장 부호와 같은 문자가 HTTP 스트림으로 전달 하는 경우 받는 쪽에서 잘못 해석 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)">
          <source>URL encoding converts characters that are not allowed in a URL into equivalent hexadecimal escape sequences.</source>
          <target state="translated">URL 인코딩은 URL에 해당 하는 16 진수 이스케이프 시퀀스로 허용 되지 않는 문자를 변환 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebUtility.UrlEncodeToBytes%2A&gt;</ph> method creates a URL-encoded byte array.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebUtility.UrlEncodeToBytes%2A&gt;</ph> 메서드 URL로 인코딩된 바이트 배열을 만듭니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)">
          <source>URL decoding replaces hexadecimal escape sequences with corresponding ASCII character equivalents.</source>
          <target state="translated">URL 디코딩 해당 ascii 문자 16 진수 이스케이프 시퀀스를 바꿉니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)">
          <source>For example, when embedded in a block of URL-encoded text, the escape sequences <ph id="ph1">`%3c`</ph> and <ph id="ph2">`%3e`</ph> are decoded into the characters <ph id="ph3">`&lt;`</ph> and <ph id="ph4">`&gt;`</ph>.</source>
          <target state="translated">예를 들어 URL로 인코딩된 텍스트 블록에 포함 하는 경우 이스케이프 시퀀스 <ph id="ph1">`%3c`</ph> 및 <ph id="ph2">`%3e`</ph> 해당 문자로 디코딩 <ph id="ph3">`&lt;`</ph> 및 <ph id="ph4">`&gt;`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Net.WebUtility.UrlEncode(System.String)">
          <source>The text to URL-encode.</source>
          <target state="translated">URL로 인코딩할 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Net.WebUtility.UrlEncode(System.String)">
          <source>Converts a text string into a URL-encoded string.</source>
          <target state="translated">텍스트 문자열을 URL 인코딩된 문자열로 변환합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Net.WebUtility.UrlEncode(System.String)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Net.WebUtility.UrlEncode(System.String)">
          <source>A URL-encoded string.</source>
          <target state="translated">URL 인코딩된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.UrlEncode(System.String)">
          <source>If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</source>
          <target state="translated">공백 및 문장 부호와 같은 문자가 HTTP 스트림으로 전달 하는 경우 받는 쪽에서 잘못 해석 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.UrlEncode(System.String)">
          <source>URL encoding replaces characters that are not allowed in a URL with character-entity equivalents consisting of hexadecimal escape sequences.</source>
          <target state="translated">URL 인코딩을 해당 문자 엔터티로 16 진수 이스케이프 시퀀스로 구성 된 URL에 허용 되지 않는 문자를 바꿉니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.UrlEncode(System.String)">
          <source>The converted string is expected to conform to the UTF-8 format.</source>
          <target state="translated">변환 된 문자열은 u t F-8 형식을 준수 해야 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.UrlEncode(System.String)">
          <source>URL encoding replaces all character codes except for letters, numbers, and the following punctuation characters:</source>
          <target state="translated">URL 인코딩 문자, 숫자 및 문장 부호 문자를 제외한 모든 문자 코드를 대체합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.UrlEncode(System.String)">
          <source><ph id="ph1">`-`</ph> (minus sign)</source>
          <target state="translated"><ph id="ph1">`-`</ph> (빼기 기호)</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.UrlEncode(System.String)">
          <source><ph id="ph1">`_`</ph> (underscore)</source>
          <target state="translated"><ph id="ph1">`_`</ph> (밑줄)</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.UrlEncode(System.String)">
          <source><ph id="ph1">`.`</ph> (period)</source>
          <target state="translated"><ph id="ph1">`.`</ph> (마침표)</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.UrlEncode(System.String)">
          <source><ph id="ph1">`!`</ph> (exclamation point)</source>
          <target state="translated"><ph id="ph1">`!`</ph> (느낌표)</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.UrlEncode(System.String)">
          <source><ph id="ph1">\*</ph> (asterisk)</source>
          <target state="translated"><ph id="ph1">\*</ph> (별표)</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.UrlEncode(System.String)">
          <source><ph id="ph1">`(`</ph> and <ph id="ph2">`)`</ph> (opening and closing parentheses)</source>
          <target state="translated"><ph id="ph1">`(`</ph> 및 <ph id="ph2">`)`</ph> (열기와 닫기 괄호)</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.UrlEncode(System.String)">
          <source>For example, when embedded in a block of text to be transmitted in a URL, the characters <ph id="ph1">`&lt;`</ph> and <ph id="ph2">`&gt;`</ph> are encoded as <ph id="ph3">`%3c`</ph> and <ph id="ph4">`%3e`</ph>.</source>
          <target state="translated">예를 들어 문자는 URL에 전송 될 텍스트 블록에 포함 된 경우 <ph id="ph1">`&lt;`</ph> 및 <ph id="ph2">`&gt;`</ph> 로 인코딩된 <ph id="ph3">`%3c`</ph> 및 <ph id="ph4">`%3e`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.UrlEncode(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebUtility.UrlDecode%2A&gt;</ph> method reverses the encoding.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebUtility.UrlDecode%2A&gt;</ph> 메서드 인코딩이 되돌립니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array to URL-encode.</source>
          <target state="translated">URL 인코딩할 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 배열입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)">
          <source>The offset, in bytes, from the start of the <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array to encode.</source>
          <target state="translated">인코딩할 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 배열의 시작 부분부터의 오프셋(바이트)입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)">
          <source>The count, in bytes, to encode from the <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 배열에서 인코딩할 개수입니다(바이트 단위).</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)">
          <source>Converts a byte array into a URL-encoded byte array.</source>
          <target state="translated">바이트 배열을 URL 인코딩된 바이트 배열로 변환합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)">
          <source>An encoded <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array.</source>
          <target state="translated">인코딩된 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 배열입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)">
          <source>If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</source>
          <target state="translated">공백 및 문장 부호와 같은 문자가 HTTP 스트림으로 전달 하는 경우 받는 쪽에서 잘못 해석 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)">
          <source>URL encoding replaces characters that are not allowed in a URL with character-entity equivalents consisting of hexadecimal escape sequences.</source>
          <target state="translated">URL 인코딩을 해당 문자 엔터티로 16 진수 이스케이프 시퀀스로 구성 된 URL에 허용 되지 않는 문자를 바꿉니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)">
          <source>The converted string is expected to conform to the UTF-8 format.</source>
          <target state="translated">변환 된 문자열은 u t F-8 형식을 준수 해야 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)">
          <source>URL encoding replaces all character codes except for letters, numbers, and the following punctuation characters:</source>
          <target state="translated">URL 인코딩 문자, 숫자 및 문장 부호 문자를 제외한 모든 문자 코드를 대체합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">`-`</ph> (minus sign)</source>
          <target state="translated"><ph id="ph1">`-`</ph> (빼기 기호)</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">`_`</ph> (underscore)</source>
          <target state="translated"><ph id="ph1">`_`</ph> (밑줄)</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">`.`</ph> (period)</source>
          <target state="translated"><ph id="ph1">`.`</ph> (마침표)</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">`!`</ph> (exclamation point)</source>
          <target state="translated"><ph id="ph1">`!`</ph> (느낌표)</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)">
          <source>'*' (asterisk)</source>
          <target state="translated">' *' (별표)</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">`'`</ph> (single quotation mark)</source>
          <target state="translated"><ph id="ph1">`'`</ph> (작은따옴표)</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">`(`</ph> and <ph id="ph2">`)`</ph> (opening and closing parentheses)</source>
          <target state="translated"><ph id="ph1">`(`</ph> 및 <ph id="ph2">`)`</ph> (열기와 닫기 괄호)</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)">
          <source>For example, when embedded in a block of text to be transmitted in a URL, the characters <ph id="ph1">`&lt;`</ph> and <ph id="ph2">`&gt;`</ph> are encoded as <ph id="ph3">`%3c`</ph> and <ph id="ph4">`%3e`</ph>.</source>
          <target state="translated">예를 들어 문자는 URL에 전송 될 텍스트 블록에 포함 된 경우 <ph id="ph1">`&lt;`</ph> 및 <ph id="ph2">`&gt;`</ph> 로 인코딩된 <ph id="ph3">`%3c`</ph> 및 <ph id="ph4">`%3e`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebUtility.UrlDecodeToBytes%2A&gt;</ph> method reverses the encoding.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebUtility.UrlDecodeToBytes%2A&gt;</ph> 메서드 인코딩이 되돌립니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>