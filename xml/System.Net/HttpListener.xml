<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HttpListener.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d338e721b028cce5bc0cb16416723f530a1ed165.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d338e721b028cce5bc0cb16416723f530a1ed165</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.HttpListener">
          <source>Provides a simple, programmatically controlled HTTP protocol listener.</source>
          <target state="translated">프로그래밍 방식으로 제어되는 간단한 HTTP 프로토콜 수신기를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Net.HttpListener">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Using the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> class, you can create a simple HTTP protocol listener that responds to HTTP requests.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> 클래스, HTTP 요청에 응답 하는 간단한 HTTP 프로토콜 수신기를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>The listener is active for the lifetime of the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object and runs within your application with its permissions.</source>
          <target state="translated">수신기의 수명 동안 활성화 되어는 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> 개체와 해당 사용 권한으로 응용 프로그램 내에서 실행 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>To use <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>, create a new instance of the class using the <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> constructor and use the <ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> property to gain access to the collection that holds the strings that specify which Uniform Resource Identifier (URI) prefixes the <ph id="ph4">&lt;xref:System.Net.HttpListener&gt;</ph> should process.</source>
          <target state="translated">사용 하도록 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>를 사용 하 여 클래스의 새 인스턴스를 만들고는 <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> 생성자를 사용 하 여는 <ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> 어떤 식별자 URI (Uniform Resource)을 지정 하는 문자열을 보유 하는 컬렉션에 액세스 하는 속성 접두사는 <ph id="ph4">&lt;xref:System.Net.HttpListener&gt;</ph>처리 해야 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>A URI prefix string is composed of a scheme (http or https), a host, an optional port, and an optional path.</source>
          <target state="translated">체계 (http 또는 https), 호스트, 선택적인 포트와 선택적 경로 URI 라는 접두사 문자열로 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>An example of a complete prefix string is <bpt id="p1">*</bpt><ph id="ph1">http://www.contoso.com:8080/customerData/</ph><ept id="p1">*</ept>.</source>
          <target state="translated">완전 한 접두사 문자열의 예로 <bpt id="p1">*</bpt> <ph id="ph1">http://www.contoso.com:8080/customerData/</ph> <ept id="p1">*</ept>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Prefixes must end in a forward slash ("/").</source>
          <target state="translated">접두사는 슬래시 ("/") 종료 해야 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object with the prefix that most closely matches a requested URI responds to the request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> 가장 일치 하는 요청된 된 URI 접두사가 포함 된 개체는 요청에 응답 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Multiple <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> objects cannot add the same prefix; a <ph id="ph2">&lt;xref:System.ComponentModel.Win32Exception&gt;</ph> exception is thrown if a <ph id="ph3">&lt;xref:System.Net.HttpListener&gt;</ph> adds a prefix that is already in use.</source>
          <target state="translated">여러 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> 개체 같은 접두사를 추가할 수 없습니다; <ph id="ph2">&lt;xref:System.ComponentModel.Win32Exception&gt;</ph> 이면 예외가 발생 한 <ph id="ph3">&lt;xref:System.Net.HttpListener&gt;</ph> 접두사를 이미 사용 하 여 추가 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>When a port is specified, the host element can be replaced with "<ph id="ph1">\*</ph>" to indicate that the <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> accepts requests sent to the port if the requested URI does not match any other prefix.</source>
          <target state="translated">호스트 요소로 바꿀 수 있습니다는 포트를 지정 하는 경우 "<ph id="ph1">\*</ph>" 임을 나타내는 <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> 요청된 된 URI는 다른 접두사와 일치 하지 않으면 포트에 전송 된 요청을 수락 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>For example, to receive all requests sent to port 8080 when the requested URI is not handled by any <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>, the prefix is <bpt id="p1">*</bpt>http://<ph id="ph2">\*</ph>:8080/<ept id="p1">*</ept>.</source>
          <target state="translated">예를 들어 모든 요청을 수신할 포트 8080 요청된 URI 모두에서 처리 되지 않은 경우에 보낸 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>, 접두사는 <bpt id="p1">*</bpt>http://<ph id="ph2">\*</ph>: 8080 /<ept id="p1">*</ept>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Similarly, to specify that the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> accepts all requests sent to a port, replace the host element with the "+" character.</source>
          <target state="translated">마찬가지로, 되도록 지정 하려면는 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> 포트로 보낸 모든 요청에서 "+" 문자가 호스트 요소를 바꿉니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>For example, <bpt id="p1">*</bpt><ph id="ph1">https://+:8080</ph><ept id="p1">*</ept>.</source>
          <target state="translated">For example, <bpt id="p1">*</bpt><ph id="ph1">https://+:8080</ph><ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>The "<ph id="ph1">\*</ph>" and "+" characters can be present in prefixes that include paths.</source>
          <target state="translated">"<ph id="ph1">\*</ph>" 및 "+" 문자는 한 경로가 포함 된 접두사에 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Starting with .NET Core 2.0 or .NET Framework 4.6 on Windows 10, wildcard subdomains are supported in URI prefixes that are managed by an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object.</source>
          <target state="translated">.NET Core 2.0 또는 Windows 10에서.NET Framework 4.6 부터는 와일드 카드 하위 도메인에서 관리 되는 URI 접두사에 지원 됩니다는 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>To specify a wildcard subdomain, use the "<ph id="ph1">\*</ph>" character as part of the hostname in a URI prefix.</source>
          <target state="translated">와일드 카드 하위 도메인을 지정 하려면 사용 된 "<ph id="ph1">\*</ph>"는 URI 접두사 호스트의 일부로 문자.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>For example, <bpt id="p1">*</bpt>http://<ph id="ph1">\*</ph>.foo.com/<ept id="p1">*</ept>.</source>
          <target state="translated">예를 들어 <bpt id="p1">*</bpt>http://<ph id="ph1">\*</ph>.foo.com/<ept id="p1">*</ept>합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Pass this as the argument to the <ph id="ph1">&lt;xref:System.Net.HttpListenerPrefixCollection.Add%2A&gt;</ph> method.</source>
          <target state="translated">이에 대 한 인수로 전달 된 <ph id="ph1">&lt;xref:System.Net.HttpListenerPrefixCollection.Add%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>This works as of .NET Core 2.0 or .NET Framework 4.6 on Windows 10; in earlier versions, this generates an <ph id="ph1">&lt;xref:System.Net.HttpListenerException&gt;</ph>.</source>
          <target state="translated">.NET Core 2.0 또는 Windows 10;에서.NET Framework 4.6을 기준으로이 작업은 이전 버전에서는 이렇게 생성 된 <ph id="ph1">&lt;xref:System.Net.HttpListenerException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Top-level wildcard bindings (<bpt id="p1">*</bpt>http://<ph id="ph1">\*</ph>:8080/<ept id="p1">*</ept> and <bpt id="p2">*</bpt><ph id="ph2">http://+:8080</ph><ept id="p2">*</ept>) should <bpt id="p3">**</bpt>not<ept id="p3">**</ept> be used.</source>
          <target state="translated">최상위 와일드 카드 바인딩 (<bpt id="p1">*</bpt>http://<ph id="ph1">\*</ph>: 8080 /<ept id="p1">*</ept> 및 <bpt id="p2">*</bpt> <ph id="ph2">http://+:8080</ph> <ept id="p2">*</ept>) 해야 <bpt id="p3">**</bpt>하지<ept id="p3">**</ept> 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Top-level wildcard bindings can open up your app to security vulnerabilities.</source>
          <target state="translated">최상위 와일드카드 바인딩은 보안 취약점에 앱을 노출시킬 수 있습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>This applies to both strong and weak wildcards.</source>
          <target state="translated">강력한 와일드카드와 약한 와일드카드 모두에 적용됩니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Use explicit host names rather than wildcards.</source>
          <target state="translated">와일드카드보다는 명시적 호스트 이름을 사용합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Subdomain wildcard binding (for example, <ph id="ph1">`*.mysub.com`</ph>) doesn't have this security risk if you control the entire parent domain (as opposed to <ph id="ph2">`*.com`</ph>, which is vulnerable).</source>
          <target state="translated">전체 부모 도메인을 제어하는 경우 하위 도메인 와일드카드 바인딩(예: <ph id="ph1">`*.mysub.com`</ph>)에는 이러한 보안 위험이 없습니다(취약한 <ph id="ph2">`*.com`</ph>과 반대임).</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>See <bpt id="p1">[</bpt>rfc7230 section-5.4<ept id="p1">](https://tools.ietf.org/html/rfc7230#section-5.4)</ept> for more information.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>rfc7230 섹션-5.4<ept id="p1">](https://tools.ietf.org/html/rfc7230#section-5.4)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>To begin listening for requests from clients, add the URI prefixes to the collection and call the <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> method.</source>
          <target state="translated">클라이언트의에서 요청을 수신 대기를 시작 하려면 URI 접두사는 추가 수집 하 고 호출 하는 <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source><ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> offers both synchronous and asynchronous models for processing client requests.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> 클라이언트 요청을 처리 하기 위한 동기 및 비동기 모델을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Requests and their associated responses are accessed using the <ph id="ph1">&lt;xref:System.Net.HttpListenerContext&gt;</ph> object returned by the <ph id="ph2">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> method or its asynchronous counterparts, the <ph id="ph3">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> methods.</source>
          <target state="translated">요청 및 응답을 사용 하 여 액세스 되는 <ph id="ph1">&lt;xref:System.Net.HttpListenerContext&gt;</ph> 에서 반환 된 개체는 <ph id="ph2">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> 메서드 또는 해당 비동기 메서드인은 <ph id="ph3">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>The synchronous model is appropriate if your application should block while waiting for a client request and if you want to process only one request at a time.</source>
          <target state="translated">동기 모델은 클라이언트 요청에 대 한 대기 하는 동안 응용 프로그램을 차단 하 고 한 번에 하나의 요청을 처리 하려는 경우에 적합 한입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Using the synchronous model, call the <ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> method, which waits for a client to send a request.</source>
          <target state="translated">동기 모델을 사용 하 여 호출의 <ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> 메서드는 클라이언트 요청을 보낼 때까지 대기 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>The method returns an <ph id="ph1">&lt;xref:System.Net.HttpListenerContext&gt;</ph> object to you for processing when one occurs.</source>
          <target state="translated">메서드는 <ph id="ph1">&lt;xref:System.Net.HttpListenerContext&gt;</ph> 발생 한 경우 처리에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>In the more complex asynchronous model, your application does not block while waiting for requests and each request is processed in its own execution thread.</source>
          <target state="translated">더 복잡 한 비동기 모델에서 응용 프로그램 자체의 실행 스레드에서 처리 되는 요청 및 각 요청을 기다리는 동안 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> method to specify an application-defined method to be called for each incoming request.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> 메서드를 들어오는 각 요청에 대해 호출 되는 응용 프로그램 정의 방법을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Within that method, call the <ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> method to obtain the request, process it, and respond.</source>
          <target state="translated">이 메서드 내에서 호출 된 <ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> 메서드를 가져오는 요청 처리 하 고 응답 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>In either model, incoming requests are accessed using the <ph id="ph1">&lt;xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType&gt;</ph> property and are represented by <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest&gt;</ph> objects.</source>
          <target state="translated">두 모델에서 들어오는 요청을 사용 하 여 액세스 됩니다는 <ph id="ph1">&lt;xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType&gt;</ph> 속성 및가 나타내는 <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Similarly, responses are accessed using the <ph id="ph1">&lt;xref:System.Net.HttpListenerContext.Response%2A?displayProperty=nameWithType&gt;</ph> property and are represented by <ph id="ph2">&lt;xref:System.Net.HttpListenerResponse&gt;</ph> objects.</source>
          <target state="translated">마찬가지로, 응답을 통해 액세스는 <ph id="ph1">&lt;xref:System.Net.HttpListenerContext.Response%2A?displayProperty=nameWithType&gt;</ph> 속성 및가 나타내는 <ph id="ph2">&lt;xref:System.Net.HttpListenerResponse&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>These objects share some functionality with the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.HttpWebResponse&gt;</ph> objects, but the latter objects cannot be used in conjunction with <ph id="ph3">&lt;xref:System.Net.HttpListener&gt;</ph> because they implement client, not server, behaviors.</source>
          <target state="translated">이러한 개체는 일부 기능을 공유는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.HttpWebResponse&gt;</ph> 개체가 아니라 두 번째 개체와 함께에서 사용할 수 없습니다 <ph id="ph3">&lt;xref:System.Net.HttpListener&gt;</ph> 클라이언트, 하지 서버, 동작을 구현 하므로 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>An <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> can require client authentication.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> 클라이언트 인증을 요구할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>You can either specify a particular scheme to use for authentication, or you can specify a delegate that determines the scheme to use.</source>
          <target state="translated">인증을 위해 사용 하 여 특정 스키마를 지정 하거나 또는 사용할 체계를 결정 하는 대리자를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>You must require some form of authentication to obtain information about the client's identity.</source>
          <target state="translated">특정 형식의 인증 클라이언트의 id에 대 한 정보를 요구 해야 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>For additional information, see the <ph id="ph1">&lt;xref:System.Net.HttpListenerContext.User%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.HttpListener.AuthenticationSchemes%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A&gt;</ph> properties.</source>
          <target state="translated">자세한 내용은 참조는 <ph id="ph1">&lt;xref:System.Net.HttpListenerContext.User%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.HttpListener.AuthenticationSchemes%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>If you create an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> using https, you must select a Server Certificate for that listener.</source>
          <target state="translated">만드는 경우는 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> https를 사용 하 여 선택 해야 서버 인증서를 해당 수신기에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Otherwise, an <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> query of this <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> will fail with an unexpected close of the connection.</source>
          <target state="translated">그렇지 않은 경우는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 이 쿼리 <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> 연결의 예기치 실패 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>You can configure Server Certificates and other listener options by using Network Shell (netsh.exe).</source>
          <target state="translated">네트워크 셸 (netsh.exe)를 사용 하 여 서버 인증서 및 다른 수신기 옵션을 구성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>See <bpt id="p1">[</bpt>Network Shell (Netsh)<ept id="p1">](/windows-server/networking/technologies/netsh/netsh)</ept> for more details.</source>
          <target state="translated">참조 <bpt id="p1">[</bpt>네트워크 셸 (Netsh)<ept id="p1">](/windows-server/networking/technologies/netsh/netsh)</ept> 내용을 확인 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>The executable began shipping with Windows Server 2008 and Windows Vista.</source>
          <target state="translated">실행 파일에는 Windows Server 2008 및 Windows Vista 전달 시작 했습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>If you specify multiple authentication schemes for the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>, the listener will challenge clients in the following order: <ph id="ph2">`Negotiate`</ph>, <ph id="ph3">`NTLM`</ph>, <ph id="ph4">`Digest`</ph>, and then <ph id="ph5">`Basic`</ph>.</source>
          <target state="translated">에 대 한 여러 인증 체계를 지정 하는 경우는 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>, 수신기에서 다음과 같은 순서로 클라이언트 즐길 수: <ph id="ph2">`Negotiate`</ph>, <ph id="ph3">`NTLM`</ph>, <ph id="ph4">`Digest`</ph>, 차례로 <ph id="ph5">`Basic`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>The following code example demonstrates using a <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.#ctor">
          <source>Before using the instance returned by this constructor, you must invoke its <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> method.</source>
          <target state="translated">이 생성자에 의해 반환 되는 인스턴스를 사용 하기 전에 호출 해야 해당 <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.#ctor">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> constructor to create a new <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> object.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> 새로 만들려면 생성자 <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.#ctor">
          <source>For the complete example, see the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> class topic.</source>
          <target state="translated">전체 예제를 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> 클래스 항목입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.#ctor">
          <source>This class cannot be used on the current operating system.</source>
          <target state="translated">현재 운영 체제에서 이 클래스를 사용할 수 없는 경우.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.#ctor">
          <source>Windows Server 2003 or Windows XP SP2 is required to use instances of this class.</source>
          <target state="translated">이 클래스의 인스턴스를 사용하려면 Windows Server 2003 또는 Windows XP SP2가 필요합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.#ctor">
          <source>Note: This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">참고:이 멤버 응용 프로그램에 네트워크 추적을 사용 하도록 설정 하면 추적 정보를 출력 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.#ctor">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>.NET Framework의 네트워크 추적<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.Abort">
          <source>Shuts down the <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> object immediately, discarding all currently queued requests.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> 개체를 즉시 종료하고 현재 큐에 대기 중인 모든 요청을 삭제합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Abort">
          <source>This method disposes of all resources held by this listener.</source>
          <target state="translated">이 메서드가이 수신기에서 사용 하는 리소스를 모두 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Abort">
          <source>Any pending requests are unable to complete.</source>
          <target state="translated">모든 보류 중인 요청은 완료할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Abort">
          <source>After calling this method, you will receive an <ph id="ph1">&lt;xref:System.ObjectDisposedException&gt;</ph> if you attempt to use this <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph>.</source>
          <target state="translated">이 메서드를 호출한 후 나타납니다는 <ph id="ph1">&lt;xref:System.ObjectDisposedException&gt;</ph> 이 사용 하려고 하면 <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Abort">
          <source>The following code example demonstrates calling this method.</source>
          <target state="translated">다음 코드 예제에서는이 메서드를 호출 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Abort">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Abort">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>.NET Framework의 네트워크 추적<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>Gets or sets the scheme used to authenticate clients.</source>
          <target state="translated">클라이언트 인증에 사용되는 인증 체계를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Net.AuthenticationSchemes" /&gt;</ph> enumeration values that indicates how clients are to be authenticated.</source>
          <target state="translated">클라이언트 인증 방법을 나타내는 <ph id="ph1">&lt;see cref="T:System.Net.AuthenticationSchemes" /&gt;</ph> 열거형 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.Net.AuthenticationSchemes.Anonymous" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Net.AuthenticationSchemes.Anonymous" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> uses the specified scheme to authenticate all incoming requests.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> 지정된 체계를 사용 하 여 들어오는 모든 요청을 인증 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> methods return an incoming client request only if the <ph id="ph3">&lt;xref:System.Net.HttpListener&gt;</ph> successfully authenticates the request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> 경우에 들어오는 클라이언트 요청이 반환 하는 메서드는 <ph id="ph3">&lt;xref:System.Net.HttpListener&gt;</ph> 성공적으로 요청을 인증 합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>You can interrogate the identity of a successfully authenticated client by using the <ph id="ph1">&lt;xref:System.Net.HttpListenerContext.User%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">사용 하 여 성공적으로 인증된 된 클라이언트의 id를 검색할 수는 <ph id="ph1">&lt;xref:System.Net.HttpListenerContext.User%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>If you want an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object to use different authentication mechanisms based on characteristics of the requests it receives (for example, the request's <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Net.HttpListenerRequest.UserHostName%2A&gt;</ph> property), you must implement a method that chooses the authentication scheme.</source>
          <target state="translated">원하는 경우는 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> 수신 요청의 특징에 따라 서로 다른 인증 메커니즘을 사용 하도록 개체 (예: 요청 <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Net.HttpListenerRequest.UserHostName%2A&gt;</ph> 속성)을 선택 하는 메서드를 구현 해야 합니다는 인증 체계입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>For instructions about how to do this, see the <ph id="ph1">&lt;xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A&gt;</ph> property documentation.</source>
          <target state="translated">이 작업을 수행 하는 방법에 대 한 지침은 참조는 <ph id="ph1">&lt;xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A&gt;</ph> 속성 설명서입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>To set this property to enable Digest, NTLM, or Negotiate requires the <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal&gt;</ph>.</source>
          <target state="translated">다이제스트를 사용 하도록 설정 하려면이 속성을 설정 하려면 NTLM 또는 협상 필요는 <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.HttpListener.AuthenticationSchemes%2A&gt;</ph> property to specify an authentication scheme.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">&lt;xref:System.Net.HttpListener.AuthenticationSchemes%2A&gt;</ph> 속성을 통해 인증 체계를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>This object has been closed.</source>
          <target state="translated">이 개체가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>Gets or sets the delegate called to determine the protocol used to authenticate clients.</source>
          <target state="translated">클라이언트 인증에 사용되는 프로토콜을 확인하기 위해 호출되는 대리자를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.AuthenticationSchemeSelector" /&gt;</ph> delegate that invokes the method used to select an authentication protocol.</source>
          <target state="translated">인증 프로토콜을 선택하는 데 사용되는 메서드를 호출하는 <ph id="ph1">&lt;see cref="T:System.Net.AuthenticationSchemeSelector" /&gt;</ph> 대리자입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>If you want the same authentication protocol to be used for all requests handled by a particular instance of <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>, you do not need to set this property.</source>
          <target state="translated">특정 인스턴스에 의해 처리 되는 모든 요청에 사용할 동일한 인증 프로토콜 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>,이 속성을 설정할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>To specify a protocol to be used for all client requests, use the <ph id="ph1">&lt;xref:System.Net.HttpListener.AuthenticationSchemes%2A&gt;</ph> property.</source>
          <target state="translated">모든 클라이언트 요청에 사용할 프로토콜을 지정 하려면 사용 된 <ph id="ph1">&lt;xref:System.Net.HttpListener.AuthenticationSchemes%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>If the client has not specified authentication information in its headers, the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> calls the specified delegate for each unauthenticated incoming request to determine which, if any, protocol to use to authenticate the client.</source>
          <target state="translated">헤더에는 클라이언트가 인증 정보를 지정 하지 않은 경우는 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> 프로토콜을 결정, 있는 경우 클라이언트를 인증 하는 데 들어오는 각 인증 되지 않은 요청에 대 한 지정 된 대리자를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> methods return an incoming request only if the <ph id="ph3">&lt;xref:System.Net.HttpListener&gt;</ph> successfully authenticated the request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> 메서드는 들어오는 요청 경우에만 반환 된 <ph id="ph3">&lt;xref:System.Net.HttpListener&gt;</ph> 성공적으로 요청을 인증 합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>If a request cannot be authenticated, the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> automatically sends back a 401 response.</source>
          <target state="translated">요청을 인증할 수 없는 경우는 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> 자동으로 다시 401 응답을 보냅니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>You can get the identity of a successfully authenticated client using the <ph id="ph1">&lt;xref:System.Web.HttpRequest.LogonUserIdentity%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">사용 하 여 성공적으로 인증된 된 클라이언트의 id를 가져올 수는 <ph id="ph1">&lt;xref:System.Web.HttpRequest.LogonUserIdentity%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>The ability to delegate the choice of authentication protocol to an application-specific method is useful if you want an instance of <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> to use different authentication protocols depending on the characteristics of the requests it receives (for example, the request's <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Net.HttpListenerRequest.UserHostAddress%2A&gt;</ph> property).</source>
          <target state="translated">인스턴스를 원하는 경우 응용 프로그램 관련 메서드는 인증 프로토콜 선택에 위임 하는 기능은 유용 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> (수신 요청의 특징에 따라 서로 다른 인증 프로토콜을 사용 하도록 예를 들어 요청의 <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Net.HttpListenerRequest.UserHostAddress%2A&gt;</ph> 속성).</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>To set this property to enable Digest, NTLM, or Negotiate requires the <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal&gt;</ph>.</source>
          <target state="translated">다이제스트를 사용 하도록 설정 하려면이 속성을 설정 하려면 NTLM 또는 협상 필요는 <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>The following code example sets the value of this property.</source>
          <target state="translated">다음 코드 예제에서는이 속성의 값을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>The following code example provides an implementation of a method invoked by an <ph id="ph1">&lt;xref:System.Net.AuthenticationSchemeSelector&gt;</ph> delegate.</source>
          <target state="translated">다음 코드 예제에서 호출 되는 메서드의 구현을 제공는 <ph id="ph1">&lt;xref:System.Net.AuthenticationSchemeSelector&gt;</ph> 위임 합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>This object has been closed.</source>
          <target state="translated">이 개체가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when a client request is available.</source>
          <target state="translated">클라이언트 요청을 사용할 수 있을 때 호출할 메서드를 참조하는 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 대리자입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the operation.</source>
          <target state="translated">작업에 대한 정보가 들어 있는 사용자 정의 개체입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation completes.</source>
          <target state="translated">이 개체는 작업이 완료되면 <bpt id="p1">&lt;c&gt;</bpt>콜백<ept id="p1">&lt;/c&gt;</ept> 대리자에 전달됩니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>Begins asynchronously retrieving an incoming request.</source>
          <target state="translated">들어오는 요청의 비동기 검색을 시작합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that indicates the status of the asynchronous operation.</source>
          <target state="translated">비동기 작업의 상태를 나타내는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> method begins an asynchronous (non-blocking) call to receive incoming client requests.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> 메서드는 들어오는 클라이언트 요청을 수신 하는 비동기 (비블로킹) 호출을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>Before calling this method, you must call the <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> method and add at least one Uniform Resource Identifier (URI) prefix to listen for by adding the URI strings to the <ph id="ph2">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> property.</source>
          <target state="translated">이 메서드를 호출 하기 전에 호출 해야 합니다는 <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> 메서드 수신 하기 위해 URI 문자열을 추가 하 여 하나 이상의 식별자 URI (Uniform Resource) 접두사를 추가 하 고는 <ph id="ph2">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph> 에서 반환 되는 <ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>The asynchronous operation must be completed by calling the <ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> method.</source>
          <target state="translated">호출 하 여 비동기 작업을 완료 해야는 <ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`callback`</ph> delegate.</source>
          <target state="translated">메서드는 일반적으로 <ph id="ph1">`callback`</ph> 위임 합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>This method does not block while the operation completes.</source>
          <target state="translated">작업이 완료 될 때이 메서드를 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>To get an incoming request and block until the operation completes, call the <ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> method.</source>
          <target state="translated">작업이 완료 될 때까지 들어오는 요청과 블록을 가져오려면 호출에서 <ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></source>
          <target state="translated">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>대<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> method to specify a callback method that will handle incoming client requests.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> 들어오는 클라이언트 요청을 처리 하는 콜백 메서드를 지정 하는 메서드.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>The following code example implements a callback method.</source>
          <target state="translated">다음 코드 예제에서는 콜백 메서드를 구현 합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>A Win32 function call failed.</source>
          <target state="translated">Win32 함수 호출이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>Check the exception's <ph id="ph1">&lt;see cref="P:System.Net.HttpListenerException.ErrorCode" /&gt;</ph> property to determine the cause of the exception.</source>
          <target state="translated">예외의 <ph id="ph1">&lt;see cref="P:System.Net.HttpListenerException.ErrorCode" /&gt;</ph> 속성을 검토하여 예외의 원인을 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>This object has not been started or is currently stopped.</source>
          <target state="translated">이 개체가 시작되지 않았거나 현재 중지된 경우</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>This object is closed.</source>
          <target state="translated">이 개체가 닫혀 있는 경우</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>.NET Framework의 네트워크 추적<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.Close">
          <source>Shuts down the <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph>를 종료합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Close">
          <source>After calling this method, you can no longer use the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object.</source>
          <target state="translated">이 메서드를 호출한 후 더 이상 사용할 수는 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Close">
          <source>To temporarily pause an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object, use the <ph id="ph2">&lt;xref:System.Net.HttpListener.Stop%2A&gt;</ph> method.</source>
          <target state="translated">일시적으로 일시 중지 하는 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> 개체를 가져오려면는 <ph id="ph2">&lt;xref:System.Net.HttpListener.Stop%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Close">
          <source>This method shut downs the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object without processing queued requests.</source>
          <target state="translated">이 메서드 종료 다운은 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> 대기 중인된 요청을 처리 하지 않고 개체입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Close">
          <source>Any pending requests are unable to complete.</source>
          <target state="translated">모든 보류 중인 요청은 완료할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Close">
          <source>The following code example demonstrates calling this method.</source>
          <target state="translated">다음 코드 예제에서는이 메서드를 호출 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Close">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Close">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>.NET Framework의 네트워크 추적<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>Gets a default list of Service Provider Names (SPNs) as determined by registered prefixes.</source>
          <target state="translated">등록된 접두사로 확인되는 SPN(서비스 공급자 이름) 기본 목록을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /&gt;</ph> that contains a list of SPNs.</source>
          <target state="translated">SPN 목록이 들어 있는 <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.DefaultServiceNames%2A&gt;</ph> property is used with integrated Windows authentication to provide extended protection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener.DefaultServiceNames%2A&gt;</ph> 속성은 확장 된 보호를 제공 하려면 Windows 통합된 인증 함께 사용 합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>The list of SPNs is initialized from the <ph id="ph1">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> property when accessed and cleared when new prefixes are added to the <ph id="ph2">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> property.</source>
          <target state="translated">Spn 목록에서 초기화 되는 <ph id="ph1">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> 속성에 액세스 하 고 새로운 접두사에 추가 될 때의 선택을 취소는 <ph id="ph2">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.DefaultServiceNames%2A&gt;</ph> property is used if an application doesn't set the <ph id="ph2">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames%2A&gt;</ph> property on its extended protection policy.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener.DefaultServiceNames%2A&gt;</ph> 속성은 응용 프로그램 설정 하지 않는 경우 사용 된 <ph id="ph2">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames%2A&gt;</ph> 해당 확장 된 보호 정책에 대 한 속성.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>The <ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection&gt;</ph> that is retrieved with the <ph id="ph2">&lt;xref:System.Net.HttpListener.DefaultServiceNames%2A&gt;</ph> property is built from the <ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> property according to the following rules:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection&gt;</ph> 으로 검색 되는 <ph id="ph2">&lt;xref:System.Net.HttpListener.DefaultServiceNames%2A&gt;</ph> 속성에서 작성 되는 <ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> 다음 규칙에 따라 속성:</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>If the hostname is "+", "*", or an IPv4 or IPv6 literal (equivalent to "<ph id="ph1">\*</ph>" but restricted to a specific local interface), the following SPN is added:</source>
          <target state="translated">호스트 이름이 경우 "+", "*", 또는 IPv4 또는 IPv6 리터럴 (같음 "<ph id="ph1">\*</ph>" 하지만 특정 로컬 인터페이스에 제한 된), 다음 SPN이 추가:</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source><ph id="ph1">`"HTTP/"`</ph> plus the fully qualified domain name of the computer.</source>
          <target state="translated"><ph id="ph1">`"HTTP/"`</ph> 또한 컴퓨터의 정규화 된 도메인 이름.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>If the hostname contains no dots (no domains or subdomains), an attempt is made to resolve the fully-qualified domain name using DNS (the same behavior used by <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>).</source>
          <target state="translated">호스트 이름 (도메인 또는 하위 도메인) 점 없음 들어 있는 경우는 하려고 DNS를 사용 하 여 정규화 된 도메인 이름 확인 (동일한 동작에서 사용 하는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>If the fully-qualified domain name can be resolved, the following SPNs are added:</source>
          <target state="translated">정규화 된 도메인 이름을 확인할 수, Spn은 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source><ph id="ph1">`"HTTP/"`</ph> plus the hostname (the short name).</source>
          <target state="translated"><ph id="ph1">`"HTTP/"`</ph> 또한 호스트 이름 (약식 이름)입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source><ph id="ph1">`"HTTP/"`</ph> plus the fully qualified domain name for the hostname.</source>
          <target state="translated"><ph id="ph1">`"HTTP/"`</ph> 또한 호스트 이름에 대 한 정규화 된 도메인 이름.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>If the hostname contains not dots (no domains or subdomains) and a fully-qualified domain name can't be resolved, the following SPN is added:</source>
          <target state="translated">호스트 이름을 점이 포함 되지 않으며 (도메인 또는 하위 도메인) 정규화 된 도메인 이름을 확인할 수 없으면 다음 SPN 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source><ph id="ph1">`"HTTP/"`</ph> plus the hostname.</source>
          <target state="translated"><ph id="ph1">`"HTTP/"`</ph> 또한 호스트 이름입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>If the hostname contains dots (domains or subdomains), the following SPN is added:</source>
          <target state="translated">호스트 이름에 점 (도메인 또는 하위 도메인)를 포함 하는 경우 다음 SPN이 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source><ph id="ph1">`"HTTP/"`</ph> plus the hostname.</source>
          <target state="translated"><ph id="ph1">`"HTTP/"`</ph> 또한 호스트 이름입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.DefaultServiceNames%2A&gt;</ph> property can be used by an application to review the list of default SPNs which will be used for authentication if no custom list is supplied.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener.DefaultServiceNames%2A&gt;</ph> 속성을 사용자 지정 목록이 없는 제공 하는 경우 인증에 사용 되는 기본 spn 목록을 검토 하려면 응용 프로그램에서 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>If other SPNs are needed, an application can add them using one of the <ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge%2A&gt;</ph> methods.</source>
          <target state="translated">응용 프로그램 중 하나를 사용 하 여 추가할 수 있습니다 다른 Spn이 필요 하지만 여 <ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>It is not safe when using extended protection to make policy decisions based on the requested URL, since this can be spoofed.</source>
          <target state="translated">확장 된 보호를 사용 하 여 스푸핑될 수 있으므로 요청된 된 URL에 따라 정책 결정을 내릴 때 안전 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>Rather, applications should rely on the <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.LocalEndPoint%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A&gt;</ph> properties to make such policy decisions.</source>
          <target state="translated">응용 프로그램에 사용 해야 합니다는 <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.LocalEndPoint%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A&gt;</ph> 속성 이러한 정책 결정을 내릴 수 있습니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that was obtained when the asynchronous operation was started.</source>
          <target state="translated">비동기 작업을 시작할 때 가져온 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>Completes an asynchronous operation to retrieve an incoming client request.</source>
          <target state="translated">들어오는 클라이언트 요청을 검색하는 비동기 작업을 완료합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.HttpListenerContext" /&gt;</ph> object that represents the client request.</source>
          <target state="translated">클라이언트 요청을 나타내는 <ph id="ph1">&lt;see cref="T:System.Net.HttpListenerContext" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> method is called, usually within an application-defined callback method invoked by a delegate, to obtain the <ph id="ph2">&lt;xref:System.Net.HttpListenerContext&gt;</ph> object that contains an incoming client request and its associated response.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> 메서드는, 일반적으로 가져오려면 대리자를 호출 하는 응용 프로그램에서 정의 된 콜백 메서드 내에서 <ph id="ph2">&lt;xref:System.Net.HttpListenerContext&gt;</ph> 들어오는 클라이언트 요청 및 해당 응답이 포함 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>This method completes an operation previously started by calling the <ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> method.</source>
          <target state="translated">이 메서드를 호출 하 여 이전에 시작 하는 작업을 완료 된 <ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>If the operation has not completed, this method blocks until it does.</source>
          <target state="translated">작업이 완료 되지 않은 경우이 메서드는 완료 될 때까지 차단 됩니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>Because calling the <ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> method requires the <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> object, this object is typically passed into a callback method by using the state object passed into the <ph id="ph3">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> method.</source>
          <target state="translated">호출 하기 때문에 <ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> 메서드를 사용 하려면는 <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> 개체를이 개체는 일반적으로 전달 하 여 콜백 메서드로 전달 된 상태 개체를 사용 하는 <ph id="ph3">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>You can obtain this state object by using the <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> property of the <ph id="ph2">`asyncResult`</ph> object.</source>
          <target state="translated">사용 하 여이 상태 개체를 가져올 수 있습니다는 <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> 의 속성은 <ph id="ph2">`asyncResult`</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></source>
          <target state="translated">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>대<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>The following code example shows the implementation of a callback method that calls the <ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는 호출 하는 콜백 메서드의 구현을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> was not obtained by calling the <ph id="ph2">&lt;see cref="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" /&gt;</ph> 메서드를 호출하여 <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph>를 가져오지 못한 경우</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" /&gt;</ph> method was already called for the specified <ph id="ph2">&lt;paramref name="asyncResult" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" /&gt;</ph> 메서드가 지정된 <ph id="ph2">&lt;paramref name="asyncResult" /&gt;</ph> 개체에 대해 이미 호출된 경우</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>This object is closed.</source>
          <target state="translated">이 개체가 닫혀 있는 경우</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>.NET Framework의 네트워크 추적<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>Get or set the <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph> to use for extended protection for a session.</source>
          <target state="translated">세션에 대한 확장 보호에 사용할 <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph>를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph> that specifies the policy to use for extended protection.</source>
          <target state="translated">확장 보호에 사용할 정책을 지정하는 <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A&gt;</ph> property is used with integrated Windows authentication to provide extended protection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A&gt;</ph> 속성은 확장 된 보호를 제공 하려면 Windows 통합된 인증 함께 사용 합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A&gt;</ph> property allows the configuration of the extended protection policy for the whole <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> session.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A&gt;</ph> 속성의 전체에 대 한 확장된 보호 정책 구성할 수 있습니다. <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> 세션입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A&gt;</ph> property allows the configuration of the extended protection policy for each individual request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A&gt;</ph> 속성을 사용 하면 각 개별 요청에 대 한 확장된 보호 정책 구성 합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>The <ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A&gt;</ph> property must be <ph id="ph2">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A&gt;</ph> 속성은 <ph id="ph2">`null`</ph>여야 합니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> instance gets the Channel Binding Token (CBT) directly from its own TLS session if there is one.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> 인스턴스 하나 있는 경우 자체 TLS 세션에서 직접는 토큰 CBT (채널 바인딩)을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>An attempt was made to set the <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /&gt;</ph> property, but the <ph id="ph2">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /&gt;</ph> property was not <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /&gt;</ph> 속성을 설정하려고 했지만 <ph id="ph2">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /&gt;</ph> 속성이 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이 아닌 경우</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>An attempt was made to set the <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /&gt;</ph> property to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /&gt;</ph> 속성을 <ph id="ph2">&lt;see langword="null" /&gt;</ph>로 설정하려고 한 경우</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>An attempt was made to set the <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /&gt;</ph> property after the <ph id="ph2">&lt;see cref="M:System.Net.HttpListener.Start" /&gt;</ph> method was already called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /&gt;</ph> 메서드가 이미 호출된 후 <ph id="ph2">&lt;see cref="M:System.Net.HttpListener.Start" /&gt;</ph> 속성을 설정하려고 한 경우</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>This object is closed.</source>
          <target state="translated">이 개체가 닫혀 있는 경우</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>The <ph id="ph1">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement" /&gt;</ph> property was set to <ph id="ph2">&lt;see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /&gt;</ph> on a platform that does not support extended protection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement" /&gt;</ph> 속성은 확장된 보호를 지원하지 않는 플랫폼에서 <ph id="ph2">&lt;see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /&gt;</ph>로 설정되었습니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>Get or set the delegate called to determine the <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph> to use for each request.</source>
          <target state="translated">각 요청에 사용할 <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph>를 확인하기 위해 호출되는 대리자를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph> that specifies the policy to use for extended protection.</source>
          <target state="translated">확장 보호에 사용할 정책을 지정하는 <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A&gt;</ph> property is used with integrated Windows authentication to provide extended protection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A&gt;</ph> 속성은 확장 된 보호를 제공 하려면 Windows 통합된 인증 함께 사용 합니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A&gt;</ph> property allows the configuration of the extended protection policy for the whole <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> session.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A&gt;</ph> 속성의 전체에 대 한 확장된 보호 정책 구성할 수 있습니다. <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> 세션입니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A&gt;</ph> property allows the configuration of the extended protection policy per individual request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A&gt;</ph> 속성이 개별 요청에 따라 확장 된 보호 정책의 구성을 찾을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>The <ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A&gt;</ph> property must be <ph id="ph2">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A&gt;</ph> 속성은 <ph id="ph2">`null`</ph>여야 합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> instance gets the Channel Binding Token (CBT) directly from its own TLS session if there is one.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> 인스턴스 하나 있는 경우 자체 TLS 세션에서 직접는 토큰 CBT (채널 바인딩)을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>For each request, the delegate can choose the settings that the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> instance will use to provide extended protection.</source>
          <target state="translated">각 요청에 대 한 대리자 설정을 선택할 수 있는 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> 인스턴스에서 확장 된 보호 기능을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>If a delegate returns <ph id="ph1">`null`</ph> for this property, this represents a <ph id="ph2">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy&gt;</ph> which the <ph id="ph3">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A&gt;</ph> property set to <ph id="ph4">&lt;xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never&gt;</ph>.</source>
          <target state="translated">대리자를 반환 하는 경우 <ph id="ph1">`null`</ph> 이 속성에 대 한이 나타냅니다는 <ph id="ph2">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy&gt;</ph> 있는 <ph id="ph3">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A&gt;</ph> 속성이로 설정 <ph id="ph4">&lt;xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>An attempt was made to set the <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /&gt;</ph> property, but the <ph id="ph2">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /&gt;</ph> property must be <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /&gt;</ph> 속성을 설정하려고 했지만 <ph id="ph2">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /&gt;</ph> 속성이 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>An attempt was made to set the <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /&gt;</ph> property to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /&gt;</ph> 속성을 <ph id="ph2">&lt;see langword="null" /&gt;</ph>로 설정하려고 한 경우</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>An attempt was made to set the <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /&gt;</ph> property after the <ph id="ph2">&lt;see cref="M:System.Net.HttpListener.Start" /&gt;</ph> method was already called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /&gt;</ph> 메서드가 이미 호출된 후 <ph id="ph2">&lt;see cref="M:System.Net.HttpListener.Start" /&gt;</ph> 속성을 설정하려고 한 경우</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>This object is closed.</source>
          <target state="translated">이 개체가 닫혀 있는 경우</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>An attempt was made to set the <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /&gt;</ph> property on a platform that does not support extended protection.</source>
          <target state="translated">확장 보호를 지원하지 않는 플랫폼에 <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /&gt;</ph> 속성을 설정하려고 했습니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContext">
          <source>Waits for an incoming request and returns when one is received.</source>
          <target state="translated">들어오는 요청을 기다리고 요청을 받으면 반환됩니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContext">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.HttpListenerContext" /&gt;</ph> object that represents a client request.</source>
          <target state="translated">클라이언트 요청을 나타내는 <ph id="ph1">&lt;see cref="T:System.Net.HttpListenerContext" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContext">
          <source>Before calling this method, you must call the <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> method and add at least one URI prefix to listen for by adding the URI strings to the <ph id="ph2">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> property.</source>
          <target state="translated">이 메서드를 호출 하기 전에 호출 해야 합니다는 <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> 메서드를 URI 문자열을 추가 하 여 수신할 URI 접두사를 하나 이상 추가 하 고는 <ph id="ph2">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph> 에서 반환 되는 <ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContext">
          <source>For a detailed description of prefixes, see the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> class overview.</source>
          <target state="translated">에 대 한 자세한 설명은 접두사, 참조는 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContext">
          <source>This method blocks while waiting for an incoming request.</source>
          <target state="translated">이 메서드는 들어오는 요청을 기다리는 동안 차단 합니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContext">
          <source>If you want incoming requests to be processed asynchronously (on separate threads) so that your application does not block, use the <ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> method.</source>
          <target state="translated">들어오는 요청을 응용 프로그램을 차단 하지 않도록 (별도 스레드에서 비동기적) 처리 하려면 사용 된 <ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContext">
          <source>The following code example demonstrates calling this method.</source>
          <target state="translated">다음 코드 예제에서는이 메서드를 호출 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContext">
          <source>A Win32 function call failed.</source>
          <target state="translated">Win32 함수 호출이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContext">
          <source>Check the exception's <ph id="ph1">&lt;see cref="P:System.Net.HttpListenerException.ErrorCode" /&gt;</ph> property to determine the cause of the exception.</source>
          <target state="translated">예외의 <ph id="ph1">&lt;see cref="P:System.Net.HttpListenerException.ErrorCode" /&gt;</ph> 속성을 검토하여 예외의 원인을 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContext">
          <source>This object has not been started or is currently stopped.</source>
          <target state="translated">이 개체가 시작되지 않았거나 현재 중지된 경우</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContext">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContext">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> does not have any Uniform Resource Identifier (URI) prefixes to respond to.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph>에 응답을 보낼 대상 URI(Uniform Resource Identifier) 접두사가 없는 경우.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContext">
          <source>This object is closed.</source>
          <target state="translated">이 개체가 닫혀 있는 경우</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContext">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContext">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>.NET Framework의 네트워크 추적<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContextAsync">
          <source>Waits for an incoming request as an asynchronous operation.</source>
          <target state="translated">들어오는 요청을 비동기 작업으로 대기합니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContextAsync">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContextAsync">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContextAsync">
          <source>The <ph id="ph1">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph> property on the task object returns an <ph id="ph2">&lt;see cref="T:System.Net.HttpListenerContext" /&gt;</ph> object that represents a client request.</source>
          <target state="translated">작업 개체의 <ph id="ph1">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph> 속성은 클라이언트 요청을 나타내는 <ph id="ph2">&lt;see cref="T:System.Net.HttpListenerContext" /&gt;</ph> 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContextAsync">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContextAsync">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete when the incoming request has been received.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 개체는 들어오는 요청을 받을 때 완료 됩니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContextAsync">
          <source>Before calling this method, you must call the <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> method and add at least one URI prefix to listen for by adding the URI strings to the <ph id="ph2">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> property.</source>
          <target state="translated">이 메서드를 호출 하기 전에 호출 해야 합니다는 <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> 메서드를 URI 문자열을 추가 하 여 수신할 URI 접두사를 하나 이상 추가 하 고는 <ph id="ph2">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph> 에서 반환 되는 <ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContextAsync">
          <source>For a detailed description of prefixes, see the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> class overview.</source>
          <target state="translated">에 대 한 자세한 설명은 접두사, 참조는 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.IgnoreWriteExceptions">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether your application receives exceptions that occur when an <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> sends the response to the client.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>에서 클라이언트에 응답을 보낼 때 발생하는 예외를 응용 프로그램에서 받을지 여부를 지정하는 <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IgnoreWriteExceptions">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> should not return exceptions that occur when sending the response to the client; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph>에서 클라이언트에 응답을 보낼 때 발생하는 예외를 반환하지 않아야 하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IgnoreWriteExceptions">
          <source>The default value is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IgnoreWriteExceptions">
          <source>Set this property to <ph id="ph1">`true`</ph> if your application does not require that a response is successfully sent to each client.</source>
          <target state="translated">이 속성을 설정 <ph id="ph1">`true`</ph> 응용 프로그램 경우 각 클라이언트에 성공적으로 응답을 보냈음이 필요 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IgnoreWriteExceptions">
          <source>The following code example demonstrates setting this property.</source>
          <target state="translated">다음 코드 예제에서는이 속성을 설정 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.IgnoreWriteExceptions">
          <source>This object has been closed.</source>
          <target state="translated">이 개체가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.IsListening">
          <source>Gets a value that indicates whether <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> has been started.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph>가 시작되었는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IsListening">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> was started; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph>가 시작되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IsListening">
          <source>To start an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>, call the <ph id="ph2">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> method.</source>
          <target state="translated">시작 하는 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>, 호출 된 <ph id="ph2">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IsListening">
          <source>The following code example demonstrates using this property to determine the listening state of an instance.</source>
          <target state="translated">다음 코드 예제에서는 인스턴스 수신 상태를 확인 하려면이 속성을 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.IsSupported">
          <source>Gets a value that indicates whether <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> can be used with the current operating system.</source>
          <target state="translated">현재 운영 체제에서 <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph>를 사용할 수 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IsSupported">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> is supported; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph>가 지원되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IsSupported">
          <source>This class is available only on computers running the Windows XP SP2 or Windows Server 2003 operating systems.</source>
          <target state="translated">이 클래스는 Windows XP SP2 또는 Windows Server 2003 운영 체제를 실행 하는 컴퓨터에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IsSupported">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Net.HttpListener.IsSupported%2A&gt;</ph> property to detect whether an <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> object can be used with the current operating system.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Net.HttpListener.IsSupported%2A&gt;</ph> 속성 검색을 여부는 <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> 개체를 현재 운영 체제와 함께 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.Prefixes">
          <source>Gets the Uniform Resource Identifier (URI) prefixes handled by this <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> 개체에서 처리하는 URI(Uniform Resource Identifier) 접두사를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Prefixes">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.HttpListenerPrefixCollection" /&gt;</ph> that contains the URI prefixes that this <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> object is configured to handle.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> 개체에서 처리하도록 구성된 URI 접두사가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Net.HttpListenerPrefixCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Prefixes">
          <source>The prefixes are in canonical form.</source>
          <target state="translated">접두사는 정규 형식.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Prefixes">
          <source>For a detailed description of prefixes, see the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> class overview.</source>
          <target state="translated">에 대 한 자세한 설명은 접두사, 참조는 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Prefixes">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> property to obtain and print the URI prefixes that are handled.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> 속성을 가져오고 처리 하는 URI 접두사를 출력 합니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.Prefixes">
          <source>This object has been closed.</source>
          <target state="translated">이 개체가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.Realm">
          <source>Gets or sets the realm, or resource partition, associated with this <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> 개체와 연결된 영역 또는 리소스 파티션을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Realm">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> value that contains the name of the realm associated with the <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 개체와 연결된 영역의 이름이 들어 있는 <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Realm">
          <source>Servers use realms to partition protected resources; each partition can have its own authentication scheme and/or authorization database.</source>
          <target state="translated">보호 된 리소스; 분할할 때 영역을 사용 하는 서버 각 파티션에 자체 인증 체계 및/또는 권한 부여 데이터베이스가 있을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Realm">
          <source>Realms are used only for basic and digest authentication.</source>
          <target state="translated">영역은 기본 및 다이제스트 인증에만 사용됩니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Realm">
          <source>After a client successfully authenticates, the authentication is valid for all resources in a given realm.</source>
          <target state="translated">클라이언트가 성공적으로 인증되면 이 인증은 지정된 영역의 모든 리소스에 대해 유효합니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Realm">
          <source>For a detailed description of realms, see RFC 2617 at <bpt id="p1">[</bpt><ph id="ph1">http://www.ietf.org</ph><ept id="p1">](http://www.ietf.org)</ept>.</source>
          <target state="translated">영역에 대 한 자세한 설명을에서 RFC 2617을 참조 하세요. <bpt id="p1">[</bpt> <ph id="ph1">http://www.ietf.org</ph> <ept id="p1">](http://www.ietf.org)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Realm">
          <source>An instance of <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> has only one associated realm.</source>
          <target state="translated">인스턴스 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> 하나의 연결 된 영역에 있습니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Realm">
          <source>The following code example demonstrates setting the <ph id="ph1">&lt;xref:System.Net.HttpListener.Realm%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 설정 된 <ph id="ph1">&lt;xref:System.Net.HttpListener.Realm%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.Realm">
          <source>This object has been closed.</source>
          <target state="translated">이 개체가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.Start">
          <source>Allows this instance to receive incoming requests.</source>
          <target state="translated">이 인스턴스가 들어오는 요청을 받을 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>This method must be called before you call the <ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> method.</source>
          <target state="translated">이 메서드를 호출 하기 전에 호출 해야는 <ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>After you have started an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object, you can use the <ph id="ph2">&lt;xref:System.Net.HttpListener.Stop%2A&gt;</ph> method to stop it.</source>
          <target state="translated">시작 된 후 한 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> 개체를 사용할 수 있습니다는 <ph id="ph2">&lt;xref:System.Net.HttpListener.Stop%2A&gt;</ph> 메서드를 중지 합니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>If this listener instance uses https, you must install and select a Server Certificate.</source>
          <target state="translated">이 수신기 인스턴스 https를 사용 하는 경우 설치 하 고 서버 인증서를 선택 해야 합니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>Otherwise, an <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> query of this <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> will fail with an unexpected close of the connection.</source>
          <target state="translated">그렇지 않은 경우는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 이 쿼리 <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> 연결의 예기치 실패 합니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>You can configure Server Certificates and other listener options by using HttpCfg.exe.</source>
          <target state="translated">HttpCfg.exe를 사용 하 여 서버 인증서 및 다른 수신기 옵션을 구성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>See <bpt id="p1">[</bpt><ph id="ph1">http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp</ph><ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp)</ept> for more details.</source>
          <target state="translated">참조 <bpt id="p1">[</bpt> <ph id="ph1">http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp</ph> <ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp)</ept> 내용을 확인 합니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> method to begin processing incoming requests.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> 들어오는 요청을 처리를 시작 하는 메서드.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.Start">
          <source>A Win32 function call failed.</source>
          <target state="translated">Win32 함수 호출이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.Start">
          <source>Check the exception's <ph id="ph1">&lt;see cref="P:System.Net.HttpListenerException.ErrorCode" /&gt;</ph> property to determine the cause of the exception.</source>
          <target state="translated">예외의 <ph id="ph1">&lt;see cref="P:System.Net.HttpListenerException.ErrorCode" /&gt;</ph> 속성을 검토하여 예외의 원인을 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.Start">
          <source>This object is closed.</source>
          <target state="translated">이 개체가 닫혀 있는 경우</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>.NET Framework의 네트워크 추적<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.Stop">
          <source>Causes this instance to stop receiving incoming requests.</source>
          <target state="translated">이 인스턴스가 들어오는 요청 받기를 중지하도록 합니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Stop">
          <source>If this instance is already stopped, calling this method has no effect.</source>
          <target state="translated">이 인스턴스는 이미 중지 되는 경우이 메서드를 호출 효과가 없습니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Stop">
          <source>After you have stopped an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object, you can use the <ph id="ph2">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> method to restart it.</source>
          <target state="translated">중지 한 후 프로그램 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> 개체를 사용할 수 있습니다는 <ph id="ph2">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> 메서드를 다시 시작 합니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Stop">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.HttpListener.Stop%2A&gt;</ph> method to stop processing incoming requests.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">&lt;xref:System.Net.HttpListener.Stop%2A&gt;</ph> 메서드 들어오는 요청 처리를 중지 합니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.Stop">
          <source>This object has been closed.</source>
          <target state="translated">이 개체가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Stop">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Stop">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>.NET Framework의 네트워크 추적<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.System#IDisposable#Dispose">
          <source>Releases the resources held by this <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> 개체에서 보유한 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.System#IDisposable#Dispose">
          <source>Applications should use the <ph id="ph1">&lt;xref:System.Net.HttpListener.Close%2A&gt;</ph> method instead of calling this method.</source>
          <target state="translated">응용 프로그램을 사용할지는 <ph id="ph1">&lt;xref:System.Net.HttpListener.Close%2A&gt;</ph> 메서드 대신이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.TimeoutManager">
          <source>The timeout manager for this <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> instance.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> 인스턴스의 시간 초과 관리자입니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.TimeoutManager">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Net.HttpListenerTimeoutManager" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.HttpListenerTimeoutManager" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.TimeoutManager">
          <source>The timeout manager for this <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> instance.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> 인스턴스의 시간 초과 관리자입니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.TimeoutManager">
          <source>The timeout manager defines the connection timeout limits for this <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> instance.</source>
          <target state="translated">시간 초과 관리자는이 대 한 연결 제한 시간 제한을 정의 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that controls whether, when NTLM is used, additional requests using the same Transmission Control Protocol (TCP) connection are required to authenticate.</source>
          <target state="translated">NTLM이 사용될 때 동일한 TCP(Transmission Control Protocol) 연결을 사용하는 추가 요청을 인증해야 하는지 여부를 제어하는 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Security.Principal.IIdentity" /&gt;</ph> of the first request will be used for subsequent requests on the same connection; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">첫 번째 요청의 <ph id="ph2">&lt;see cref="T:System.Security.Principal.IIdentity" /&gt;</ph>가 동일한 연결의 후속 요청에 사용되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>The default value is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>When this property is set to <ph id="ph1">`true`</ph> and the first request over a particular TCP connection is authenticated using NTLM, subsequent requests over the same TCP connection are processed using the authentication information (<ph id="ph2">&lt;xref:System.Security.Principal.IIdentity&gt;</ph>) of the initial request.</source>
          <target state="translated">이 속성이로 설정 된 경우 <ph id="ph1">`true`</ph> 및 NTLM을 사용 하 여 특정 TCP 연결을 통해 첫 번째 요청은 인증, 인증 정보를 사용 하 여 동일한 TCP 연결을 통한 후속 요청 처리 됩니다 (<ph id="ph2">&lt;xref:System.Security.Principal.IIdentity&gt;</ph>)는 초기 요청입니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>This property has no effect when NTLM is not the authentication protocol.</source>
          <target state="translated">인증 프로토콜이 NTLM이 아닌 경우에는 이 속성이 적용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>When Negotiate is specified as the authentication protocol, this property has an effect only if NTLM is the actual protocol used for authentication.</source>
          <target state="translated">Negotiate는 인증 프로토콜로 지정 하는 경우이 속성은 NTLM 인증에 사용 되는 실제 프로토콜은 경우에 적용 합니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>While setting this property to <ph id="ph1">`true`</ph> increases performance because the <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> does not send additional NTLM authentication challenges, there is a security risk in not requiring all requests to provide authentication information.</source>
          <target state="translated">이 속성을 설정 하는 동안 <ph id="ph1">`true`</ph> 않으므로 성능이 향상 되지만 <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> 하지 송신 추가 NTLM 인증 요구, 필요로 하지 않는 인증 정보를 제공 하는 모든 요청에 보안 위험이 있습니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>You must determine whether the increase in performance is worth this risk.</source>
          <target state="translated">따라서 성능 향상과 보안 위험 간의 관계를 신중히 고려해야 합니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>The following code example demonstrates setting this property.</source>
          <target state="translated">다음 코드 예제에서는이 속성을 설정 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>This object has been closed.</source>
          <target state="translated">이 개체가 닫힌 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>