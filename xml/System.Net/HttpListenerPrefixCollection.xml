<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HttpListenerPrefixCollection.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a910a92ea8338c314dd13300d5590ed784206a40.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a910a92ea8338c314dd13300d5590ed784206a40</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.HttpListenerPrefixCollection">
          <source>Represents the collection used to store Uniform Resource Identifier (URI) prefixes for <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> 개체의 URI(Uniform Resource Identifier) 접두사를 저장하는 데 사용되는 컬렉션을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListenerPrefixCollection">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> property returns instances of this collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> 속성이이 컬렉션의 인스턴스를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListenerPrefixCollection">
          <source>The following code example creates an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> and adds user-specified prefixes to its <ph id="ph2">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph>.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> 사용자 지정 접두사를 추가 하 고 해당 <ph id="ph2">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that identifies the URI information that is compared in incoming requests.</source>
          <target state="translated">들어오는 요청에서 비교되는 URI 정보를 식별하는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>The prefix must be terminated with a forward slash ("/").</source>
          <target state="translated">이 접두사는 슬래시("/")로 종결되어야 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>Adds a Uniform Resource Identifier (URI) prefix to the collection.</source>
          <target state="translated">컬렉션에 URI(Uniform Resource Identifier) 접두사를 추가합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>This method adds a URI prefix to the set of prefixes managed by the associated <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object.</source>
          <target state="translated">이 메서드는 연결 된 관리 되는 접두사의 집합에는 URI 접두사는 추가 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>When checking <ph id="ph1">`uriPrefix`</ph> to ensure it is valid, case is ignored.</source>
          <target state="translated">확인할 때 <ph id="ph1">`uriPrefix`</ph> 유효한 지 확인, 대/소문자는 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>A URI prefix string is composed of a scheme (http or https), a host, an optional port, and an optional path, for example, "<ph id="ph1">`http://www.contoso.com:8080/customerData``/`</ph>".</source>
          <target state="translated">URI 접두사 문자열은 이루어져 체계 (http 또는 https), 호스트, 포트는 (옵션) 및 선택적 경로 예를 들어 "<ph id="ph1">`http://www.contoso.com:8080/customerData``/`</ph>"입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>The prefix must be terminated with a forward slash ("/").</source>
          <target state="translated">이 접두사는 슬래시("/")로 종결되어야 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> with the prefix that most closely matches a requested URI responds to the request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> 가장 일치 하는 요청된 URI 접두사와 함께 요청에 응답 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>Multiple <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> objects cannot add the same prefix.</source>
          <target state="translated">여러 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> 개체 같은 접두사를 추가할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>An <ph id="ph1">&lt;xref:System.Net.HttpListenerException&gt;</ph> exception is thrown if an <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> adds a prefix that is already in use.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListenerException&gt;</ph> 이면 예외가 발생 한 <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> 접두사를 이미 사용 하 여 추가 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>When a port is specified, the host element can be replaced with "<ph id="ph1">`*`</ph>" to indicate that the <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> accepts requests sent to the port if the requested URI does not match any other prefix.</source>
          <target state="translated">호스트 요소로 바꿀 수 있습니다는 포트를 지정 하는 경우 "<ph id="ph1">`*`</ph>" 임을 나타내는 <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> 요청된 된 URI는 다른 접두사와 일치 하지 않으면 포트에 전송 된 요청을 수락 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>For example, to receive all requests sent to port 8080 when the requested URI is not handled by any other <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>, the prefix is "<ph id="ph2">`http://*:8080``/`</ph>".</source>
          <target state="translated">예를 들어 모든 요청을 받을 때 요청된 된 URI에서 다른 처리 되지 않은 경우 8080 포트로 전송 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>, 접두사는 "<ph id="ph2">`http://*:8080``/`</ph>"입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>Similarly, to specify that the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> accepts all requests sent to a port, replace the host element with the "<ph id="ph2">`+`</ph>" character, "<ph id="ph3">`https://+:8080`</ph>/".</source>
          <target state="translated">마찬가지로, 지정 하는 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> 포트에 전송 하는 모든 요청을 수락 호스트 요소와 바꿀는 "<ph id="ph2">`+`</ph>"character"<ph id="ph3">`https://+:8080`</ph>/"입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>The "<ph id="ph1">`*`</ph>" and "<ph id="ph2">`+`</ph>" characters can be present in prefixes that include paths.</source>
          <target state="translated">"<ph id="ph1">`*`</ph>"및"<ph id="ph2">`+`</ph>" 문자는 한 경로가 포함 된 접두사에 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>Starting with .NET 4.5.3 and Windows 10, wildcard subdomains are supported in URI prefixes that are managed by an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object.</source>
          <target state="translated">4.5.3.NET 및 Windows 10 부터는 와일드 카드 하위 도메인에서 관리 되는 URI 접두사에 지원 됩니다는 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>To specify a wildcard subdomain, use the "*" character as part of the hostname in a URI prefix: for example, <ph id="ph1">`http://*.foo.com/`</ph>, and pass this as the argument to the HttpListenerPrefixCollection.Add method.</source>
          <target state="translated">와일드 카드 하위 도메인을 지정 하려면 사용는 "*" 문자는 URI 접두사 호스트의 일부로: 예를 들어 <ph id="ph1">`http://*.foo.com/`</ph>, HttpListenerPrefixCollection.Add 메서드에 인수로 전달이 하입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>This will work on .NET 4.5.3 and Windows 10; in earlier versions, this would generate an <ph id="ph1">&lt;xref:System.Net.HttpListenerException&gt;</ph></source>
          <target state="translated">4.5.3.NET 및 Windows 10;이 작업은 이전 버전에서는이 생성 한 <ph id="ph1">&lt;xref:System.Net.HttpListenerException&gt;</ph></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>The following code example creates an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> and adds user-specified prefixes to its <ph id="ph2">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph>.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> 사용자 지정 접두사를 추가 하 고 해당 <ph id="ph2">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source><ph id="ph1">&lt;paramref name="uriPrefix" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriPrefix" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source><ph id="ph1">&lt;paramref name="uriPrefix" /&gt;</ph> does not use the http:// or https:// scheme.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriPrefix" /&gt;</ph>가 http:// 또는 https:// 체계를 사용하지 않는 경우</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>These are the only schemes supported for <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> objects.</source>
          <target state="translated">이것이 <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> 개체에 대해 유일하게 지원되는 스키마입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source><ph id="ph1">&lt;paramref name="uriPrefix" /&gt;</ph> is not a correctly formatted URI prefix.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriPrefix" /&gt;</ph>가 올바른 형식의 URI 접두사가 아닌 경우.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>Make sure the string is terminated with a "/".</source>
          <target state="translated">이 문자열이 "/"로 종료되는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> associated with this collection is closed.</source>
          <target state="translated">이 컬렉션과 연결된 <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph>는 닫힙니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>A Windows function call failed.</source>
          <target state="translated">Windows 함수 호출이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>Check the exception's <ph id="ph1">&lt;see cref="P:System.Net.HttpListenerException.ErrorCode" /&gt;</ph> property to determine the cause of the exception.</source>
          <target state="translated">예외의 <ph id="ph1">&lt;see cref="P:System.Net.HttpListenerException.ErrorCode" /&gt;</ph> 속성을 검토하여 예외의 원인을 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>This exception is thrown if another <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> has already added the prefix <ph id="ph2">&lt;paramref name="uriPrefix" /&gt;</ph>.</source>
          <target state="translated">다른 <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph>에서 <ph id="ph2">&lt;paramref name="uriPrefix" /&gt;</ph> 접두사를 이미 추가한 경우 이 예외가 throw됩니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>To accept network connections.</source>
          <target state="translated">네트워크 연결을 허용 하 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Net.NetworkAccess.Accept" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Net.NetworkAccess.Accept" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Clear">
          <source>Removes all the Uniform Resource Identifier (URI) prefixes from the collection.</source>
          <target state="translated">컬렉션에서 URI(Uniform Resource Identifier) 접두사를 모두 제거합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Clear">
          <source>After calling this method, you cannot start the associated <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> without adding new prefixes; if you try to do so, an exception is thrown.</source>
          <target state="translated">이 메서드를 호출한 후를 시작할 수 없는 연결 된 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> ; 새로운 접두사를 추가 하지 않고 작업을 하려고 하면 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Clear">
          <source>The following code example removes all prefixes in an <ph id="ph1">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph>.</source>
          <target state="translated">모든 접두사를 제거 하는 다음 코드 예제는 <ph id="ph1">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Clear">
          <source>A Windows function call failed.</source>
          <target state="translated">Windows 함수 호출이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Clear">
          <source>Check the exception's <ph id="ph1">&lt;see cref="P:System.Net.HttpListenerException.ErrorCode" /&gt;</ph> property to determine the cause of the exception.</source>
          <target state="translated">예외의 <ph id="ph1">&lt;see cref="P:System.Net.HttpListenerException.ErrorCode" /&gt;</ph> 속성을 검토하여 예외의 원인을 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Clear">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> associated with this collection is closed.</source>
          <target state="translated">이 컬렉션과 연결된 <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph>는 닫힙니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Clear">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Clear">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>.NET Framework의 네트워크 추적<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Contains(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the Uniform Resource Identifier (URI) prefix to test.</source>
          <target state="translated">테스트할 URI(Uniform Resource Identifier) 접두사가 포함된 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Contains(System.String)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether the specified prefix is contained in the collection.</source>
          <target state="translated">지정된 접두사가 컬렉션에 포함되어 있는지 여부를 나타내는 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Contains(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this collection contains the prefix specified by <ph id="ph2">&lt;paramref name="uriPrefix" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="uriPrefix" /&gt;</ph>에 지정된 접두사가 이 컬렉션에 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Contains(System.String)">
          <source>The specified prefix must exactly match an existing value.</source>
          <target state="translated">지정된 된 접두사 기존 값과 정확히 일치 해야 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Contains(System.String)">
          <source>The following code example checks to see whether a user-specified prefix is contained in the prefix collection of an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 사용자 지정 된 접두사의 접두사 컬렉션에 포함 되어 있는지 여부를 확인 하려면는 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Contains(System.String)">
          <source><ph id="ph1">&lt;paramref name="uriPrefix" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriPrefix" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="T:System.Net.HttpListenerPrefixCollection">
          <source>Copies the contents of an <ph id="ph1">&lt;see cref="T:System.Net.HttpListenerPrefixCollection" /&gt;</ph> to the specified array.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.HttpListenerPrefixCollection" /&gt;</ph>의 내용을 지정된 배열에 복사합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListenerPrefixCollection">
          <source>The array must be able to contain strings and cannot be multidimensional.</source>
          <target state="translated">배열은 문자열을 포함할 수 있어야 하며 다차원 수 없습니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)">
          <source>The one dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that receives the Uniform Resource Identifier (URI) prefix strings in this collection.</source>
          <target state="translated">이 컬렉션의 URI(Uniform Resource Identifier) 접두사 문자열을 받을 1차원 <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>배열<ept id="p1">&lt;/c&gt;</ept>에서 복사를 시작할 인덱스입니다. 이 인덱스는 0부터 시작합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)">
          <source>Copies the contents of an <ph id="ph1">&lt;see cref="T:System.Net.HttpListenerPrefixCollection" /&gt;</ph> to the specified array.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.HttpListenerPrefixCollection" /&gt;</ph>의 내용을 지정된 배열에 복사합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)">
          <source>The array must be able to contain strings and cannot be multidimensional.</source>
          <target state="translated">배열은 문자열을 포함할 수 있어야 하며 다차원 수 없습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)">
          <source>The following code example copies the prefixes in a <ph id="ph1">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 복사 접두사에는 <ph id="ph1">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> has more than one dimension.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph>가 2차원 이상인 경우</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)">
          <source>This collection contains more elements than can be stored in <ph id="ph1">&lt;paramref name="array" /&gt;</ph> starting at <ph id="ph2">&lt;paramref name="offset" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph>의 <ph id="ph2">&lt;paramref name="offset" /&gt;</ph>부터 저장할 수 있는 요소보다 이 컬렉션의 요소가 더 많은 경우</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> associated with this collection is closed.</source>
          <target state="translated">이 컬렉션과 연결된 <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph>는 닫힙니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> cannot store string values.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph>에 문자열 값을 저장할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)">
          <source>The one dimensional string array that receives the Uniform Resource Identifier (URI) prefix strings in this collection.</source>
          <target state="translated">이 컬렉션의 URI(Uniform Resource Identifier) 접두사 문자열을 받을 1차원 문자열 배열입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>배열<ept id="p1">&lt;/c&gt;</ept>에서 복사를 시작할 인덱스입니다. 이 인덱스는 0부터 시작합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)">
          <source>Copies the contents of an <ph id="ph1">&lt;see cref="T:System.Net.HttpListenerPrefixCollection" /&gt;</ph> to the specified string array.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.HttpListenerPrefixCollection" /&gt;</ph>의 내용을 지정된 문자열 배열에 복사합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)">
          <source>The array must be able to contain strings and cannot be multidimensional.</source>
          <target state="translated">배열은 문자열을 포함할 수 있어야 하며 다차원 수 없습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)">
          <source>The following code example copies the prefixes in a <ph id="ph1">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 복사 접두사에는 <ph id="ph1">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> has more than one dimension.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph>가 2차원 이상인 경우</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)">
          <source>This collection contains more elements than can be stored in <ph id="ph1">&lt;paramref name="array" /&gt;</ph> starting at <ph id="ph2">&lt;paramref name="offset" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph>의 <ph id="ph2">&lt;paramref name="offset" /&gt;</ph>부터 저장할 수 있는 요소보다 이 컬렉션의 요소가 더 많은 경우</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> associated with this collection is closed.</source>
          <target state="translated">이 컬렉션과 연결된 <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph>는 닫힙니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerPrefixCollection.Count">
          <source>Gets the number of prefixes contained in the collection.</source>
          <target state="translated">컬렉션에 포함된 접두사의 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerPrefixCollection.Count">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> that contains the number of prefixes in this collection.</source>
          <target state="translated">이 컬렉션의 접두사 수를 포함하는 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerPrefixCollection.Count">
          <source>The following code example displays the prefixes in a collection.</source>
          <target state="translated">다음 코드 예제에서는 컬렉션에 접두사를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.GetEnumerator">
          <source>Returns an object that can be used to iterate through the collection.</source>
          <target state="translated">컬렉션을 반복하는 데 사용할 수 있는 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.GetEnumerator">
          <source>An object that implements the <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> interface and provides access to the strings in this collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> 인터페이스를 구현하고 이 컬렉션의 문자열에 액세스할 수 있게 해주는 개체입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.GetEnumerator">
          <source>The object that is returned by this method is initially positioned before the first element in this collection.</source>
          <target state="translated">이 메서드에 의해 반환 되는 개체는 처음이 컬렉션의 첫 번째 요소 앞에 배치 됩니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.GetEnumerator">
          <source>You must call the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method before you can access the first element.</source>
          <target state="translated">호출 해야 합니다는 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 메서드 전에 첫 번째 요소에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.GetEnumerator">
          <source>To access the element at the current position, call the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> property.</source>
          <target state="translated">현재 위치에 있는 요소에 액세스 하려면 호출 된 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.GetEnumerator">
          <source>Do not modify the collection while using the enumerator.</source>
          <target state="translated">열거자를 사용 하는 동안 컬렉션을 수정 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.GetEnumerator">
          <source>If the collection is modified while an enumerator is in use, an attempt to set the position by calling <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> causes an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">열거자가 중인 동안 컬렉션이 수정 되는 경우 사용을 호출 하 여 위치를 설정 하려고 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 하면는 <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.GetEnumerator">
          <source>For a detailed description of enumerators, see the documentation for the <ph id="ph1">&lt;xref:System.Collections.IEnumerator&gt;</ph> class and the <ph id="ph2">&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;</ph> method.</source>
          <target state="translated">열거자의 대 한 자세한 내용은 설명서를 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Collections.IEnumerator&gt;</ph> 클래스 및 <ph id="ph2">&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.GetEnumerator">
          <source>The following code example demonstrates enumerating through a collection.</source>
          <target state="translated">다음 코드 예제에서는 컬렉션을 열거 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.GetEnumerator">
          <source>Note that the Visual Basic and C# examples use language specific statements to enumerate through the collection instead of retrieving the enumerator.</source>
          <target state="translated">Visual Basic 및 C# 예제에서는 언어 특정 문을 사용 하 여 열거자를 검색 하는 대신 컬렉션을 열거 하는 참고 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerPrefixCollection.IsReadOnly">
          <source>Gets a value that indicates whether access to the collection is read-only.</source>
          <target state="translated">컬렉션이 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerPrefixCollection.IsReadOnly">
          <source>Always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">항상 <ph id="ph1">&lt;see langword="false" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerPrefixCollection.IsSynchronized">
          <source>Gets a value that indicates whether access to the collection is synchronized (thread-safe).</source>
          <target state="translated">해당 컬렉션에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerPrefixCollection.IsSynchronized">
          <source>This property always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 속성은 항상 <ph id="ph1">&lt;see langword="false" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerPrefixCollection.IsSynchronized">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">컬렉션 전체를 열거하는 프로시저는 기본적으로 스레드로부터 안전하지 않습니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerPrefixCollection.IsSynchronized">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">컬렉션이 동기화되어 있을 때 다른 스레드에서 해당 컬렉션을 수정할 수 있으므로 이렇게 되면 열거자에서 예외가 throw됩니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerPrefixCollection.IsSynchronized">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions that result from changes made by other threads.</source>
          <target state="translated">을 열거 하는 동안 스레드로부터 안전을 보장 하려면 전체 열거 동안 컬렉션을 잠글 또는 다른 스레드에서 변경 된 내용에서 발생 한 예외를 catch 합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Remove(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the URI prefix to remove.</source>
          <target state="translated">제거할 URI 접두사가 포함된 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Remove(System.String)">
          <source>Removes the specified Uniform Resource Identifier (URI) from the list of prefixes handled by the <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> 개체에서 처리하는 접두사 목록에서 지정된 URI(Uniform Resource Identifier)를 제거합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Remove(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="uriPrefix" /&gt;</ph> was found in the <ph id="ph3">&lt;see cref="T:System.Net.HttpListenerPrefixCollection" /&gt;</ph> and removed; otherwise <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph3">&lt;see cref="T:System.Net.HttpListenerPrefixCollection" /&gt;</ph>에 있었던 해당 <ph id="ph2">&lt;paramref name="uriPrefix" /&gt;</ph>를 제거했으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Remove(System.String)">
          <source>If <ph id="ph1">`uriPrefix`</ph> is not in the collection, this method does nothing.</source>
          <target state="translated">경우 <ph id="ph1">`uriPrefix`</ph> 되는 컬렉션에 없는이 메서드는 없습니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Remove(System.String)">
          <source><ph id="ph1">&lt;paramref name="uriPrefix" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriPrefix" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Remove(System.String)">
          <source>A Windows function call failed.</source>
          <target state="translated">Windows 함수 호출이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Remove(System.String)">
          <source>To determine the cause of the exception, check the exception's error code.</source>
          <target state="translated">예외 원인을 확인하려면 예외의 오류 코드를 확인합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Remove(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> associated with this collection is closed.</source>
          <target state="translated">이 컬렉션과 연결된 <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph>는 닫힙니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Remove(System.String)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Remove(System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>.NET Framework의 네트워크 추적<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an object that can be used to iterate through the collection.</source>
          <target state="translated">컬렉션을 반복하는 데 사용할 수 있는 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>An object that implements the <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> interface and provides access to the strings in this collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> 인터페이스를 구현하고 이 컬렉션의 문자열에 액세스할 수 있게 해주는 개체입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>The object that is returned by this method is initially positioned before the first element in this collection.</source>
          <target state="translated">이 메서드에 의해 반환 되는 개체는 처음이 컬렉션의 첫 번째 요소 앞에 배치 됩니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>You must call the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method before you can access the first element.</source>
          <target state="translated">호출 해야 합니다는 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 메서드 전에 첫 번째 요소에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>To access the element at the current position, call the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> property.</source>
          <target state="translated">현재 위치에 있는 요소에 액세스 하려면 호출 된 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>Do not modify the collection while using the enumerator.</source>
          <target state="translated">열거자를 사용 하는 동안 컬렉션을 수정 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>If the collection is modified while an enumerator is in use, an attempt to set the position by calling <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> causes an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">열거자가 중인 동안 컬렉션이 수정 되는 경우 사용을 호출 하 여 위치를 설정 하려고 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 하면는 <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>For a detailed description of enumerators, see the documentation for the <ph id="ph1">&lt;xref:System.Collections.IEnumerator&gt;</ph> class and the <ph id="ph2">&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;</ph> method.</source>
          <target state="translated">열거자의 대 한 자세한 내용은 설명서를 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Collections.IEnumerator&gt;</ph> 클래스 및 <ph id="ph2">&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;</ph> 메서드.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>