<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HttpListenerRequest.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5e05b5b2-d481-4262-b7b7-7de7ac2afe0776dca6c03fa9c47eb67a205952892b5fbc50e8a0.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">76dca6c03fa9c47eb67a205952892b5fbc50e8a0</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df6cf590aa3087f6c7c202712eee781c6a3c8f96</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/07/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.HttpListenerRequest">
          <source>Describes an incoming HTTP request to an <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> 개체에 대한 들어오는 HTTP 요청을 설명합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Net.HttpListenerRequest">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListenerRequest">
          <source>When a client makes a request to a Uniform Resource Identifier (URI) handled by an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object, the <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> provides a <ph id="ph3">&lt;xref:System.Net.HttpListenerContext&gt;</ph> object that contains information about the sender, the request, and the response that is sent to the client.</source>
          <target state="translated">때 클라이언트에서 요청 하는 식별자 URI (Uniform Resource)에 의해 처리는 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> 개체는 <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> 제공는 <ph id="ph3">&lt;xref:System.Net.HttpListenerContext&gt;</ph> 보낸 사람, 요청을 클라이언트로 보내는 응답에 대 한 정보를 포함 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListenerRequest">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType&gt;</ph> property returns the <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest&gt;</ph> object that describes the request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType&gt;</ph> 속성에서 반환 된 <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest&gt;</ph> 요청을 설명 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListenerRequest">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest&gt;</ph> object contains information about the request, such as the request <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest.HttpMethod%2A&gt;</ph> string, <ph id="ph3">&lt;xref:System.Net.HttpListenerRequest.UserAgent%2A&gt;</ph> string, and request body data (see the <ph id="ph4">&lt;xref:System.Net.HttpListenerRequest.InputStream%2A&gt;</ph> property).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListenerRequest&gt;</ph> 요청 같은 요청에 대 한 정보를 포함 하는 개체 <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest.HttpMethod%2A&gt;</ph> 문자열 <ph id="ph3">&lt;xref:System.Net.HttpListenerRequest.UserAgent%2A&gt;</ph> 문자열 및 요청 본문 데이터 (참조는 <ph id="ph4">&lt;xref:System.Net.HttpListenerRequest.InputStream%2A&gt;</ph> 속성).</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListenerRequest">
          <source>To reply to the request, you must get the associated response using the <ph id="ph1">&lt;xref:System.Net.HttpListenerContext.Response%2A&gt;</ph> property.</source>
          <target state="translated">요청에 회신할 가져와야 사용 하 여 연결 된 응답의 <ph id="ph1">&lt;xref:System.Net.HttpListenerContext.Response%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListenerRequest">
          <source>The following code example demonstrates how to receive and respond to a <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest&gt;</ph>.</source>
          <target state="translated">수신 및 대응 하는 방법은 다음 코드 예제는 <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.AcceptTypes">
          <source>Gets the MIME types accepted by the client.</source>
          <target state="translated">클라이언트에서 받아들일 수 있는 MIME 형식을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.AcceptTypes">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> array that contains the type names specified in the request's <ph id="ph2">&lt;see langword="Accept" /&gt;</ph> header or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the client request did not include an <ph id="ph4">&lt;see langword="Accept" /&gt;</ph> header.</source>
          <target state="translated">요청의 <ph id="ph2">&lt;see langword="Accept" /&gt;</ph> 헤더에 지정된 형식 이름이 들어 있는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 배열이거나, 클라이언트 요청에 <ph id="ph3">&lt;see langword="null" /&gt;</ph> 헤더가 포함되어 있지 않은 경우 <ph id="ph4">&lt;see langword="Accept" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.AcceptTypes">
          <source>The <ph id="ph1">`Accept`</ph> header is a string of space-separated Multipurpose Internet Mail Extensions (MIME) type names (for example, <ph id="ph2">`image/jpeg`</ph>), which indicate the MIME types that the client is prepared to accept and process in a response.</source>
          <target state="translated"><ph id="ph1">`Accept`</ph> 헤더는 문자열 MIME Multipurpose Internet Mail Extensions () 공백으로 구분 된 형식 이름입니다 (예를 들어 <ph id="ph2">`image/jpeg`</ph>), 허용 및 응답에 처리 하도록 준비 되어 클라이언트 MIME 형식을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.AcceptTypes">
          <source>The <ph id="ph1">`*/*`</ph> entry indicates that the client accepts any MIME type.</source>
          <target state="translated"><ph id="ph1">`*/*`</ph> 항목 클라이언트 모든 MIME 형식을 하는지를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.AcceptTypes">
          <source>For a detailed description of the <ph id="ph1">`Accept`</ph> header, see RFC 2616, available at <bpt id="p1">[</bpt><ph id="ph2">https://www.rfc-editor.org</ph><ept id="p1">](https://www.rfc-editor.org/)</ept>.</source>
          <target state="translated">에 대 한 자세한 설명은 <ph id="ph1">`Accept`</ph> 헤더에서 사용할 수 있는 RFC 2616 참조 <bpt id="p1">[</bpt> <ph id="ph2">https://www.rfc-editor.org</ph> <ept id="p1">](https://www.rfc-editor.org/)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.AcceptTypes">
          <source>For a complete list of request headers, see the <ph id="ph1">&lt;xref:System.Net.HttpRequestHeader&gt;</ph> enumeration.</source>
          <target state="translated">요청 헤더의 전체 목록은 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Net.HttpRequestHeader&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.AcceptTypes">
          <source>The following code example demonstrates using this property.</source>
          <target state="translated">다음 코드 예제에서는이 속성을 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the operation is complete.</source>
          <target state="translated">작업이 완료되었을 때 호출할 메서드를 참조하는 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 대리자입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the operation.</source>
          <target state="translated">작업에 대한 정보가 들어 있는 사용자 정의 개체입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)">
          <source>This object is passed to the callback delegate when the operation completes.</source>
          <target state="translated">이 개체는 작업이 완료되면 콜백 대리자에 전달됩니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous request for the client's X.509 v.3 certificate.</source>
          <target state="translated">클라이언트의 X.509 v.3 인증서에 대한 비동기 요청을 시작합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that indicates the status of the operation.</source>
          <target state="translated">작업의 상태를 나타내는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.ClientCertificateError">
          <source>Gets an error code that identifies a problem with the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /&gt;</ph> provided by the client.</source>
          <target state="translated">클라이언트에서 제공한 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /&gt;</ph>와 관련된 문제를 식별하는 오류 코드를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ClientCertificateError">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value that contains a Windows error code.</source>
          <target state="translated">Windows 오류 코드가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ClientCertificateError">
          <source>This property contains a Windows error code returned by the Secure Channel (Schannel) Security Support Provider Interface (SSPI), which is used to validate the certificate.</source>
          <target state="translated">이 속성에서에서 보안 채널 (Schannel) 보안 지원 공급자 인터페이스 (SSPI), 인증서를 확인 하는 데 사용 되는 반환 된 오류는 Windows 오류 코드를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ClientCertificateError">
          <source>For more information about SSPI support for Schannel, see "Creating a Secure Connection Using Schannel" in the Security documentation at <bpt id="p1">[</bpt><ph id="ph1">http://msdn.microsoft.com/library</ph><ept id="p1">](http://msdn.microsoft.com/library)</ept>.</source>
          <target state="translated">Schannel SSPI 지원에 대 한 자세한 내용은 "만들기는 보안 연결 사용 하 여 Schannel"에서 보안 설명서의 참조 <bpt id="p1">[</bpt> <ph id="ph1">http://msdn.microsoft.com/library</ph> <ept id="p1">](http://msdn.microsoft.com/library)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ClientCertificateError">
          <source>The following code example checks this property to determine whether the request includes a valid client certificate.</source>
          <target state="translated">다음 코드 예제에서는 요청에 유효한 클라이언트 인증서가 포함 되어 있는지 여부를 결정 하려면이 속성을 확인 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.ClientCertificateError">
          <source>The client certificate has not been initialized yet by a call to the <ph id="ph1">&lt;see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.Net.HttpListenerRequest.GetClientCertificate" /&gt;</ph> methods</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="M:System.Net.HttpListenerRequest.GetClientCertificate" /&gt;</ph> 메서드에 대한 호출에 의해 아직 클라이언트 인증서가 초기화되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.ClientCertificateError">
          <source>-or -</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.ClientCertificateError">
          <source>The operation is still in progress.</source>
          <target state="translated">작업이 아직 진행 중입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.ContentEncoding">
          <source>Gets the content encoding that can be used with data sent with the request</source>
          <target state="translated">요청과 함께 전송된 데이터에 사용할 수 있는 콘텐츠 인코딩을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ContentEncoding">
          <source>An <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> object suitable for use with the data in the <ph id="ph2">&lt;see cref="P:System.Net.HttpListenerRequest.InputStream" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> 속성의 데이터와 함께 사용하는 데 적합한 <ph id="ph2">&lt;see cref="P:System.Net.HttpListenerRequest.InputStream" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ContentEncoding">
          <source>An <ph id="ph1">&lt;xref:System.Text.Encoding&gt;</ph> object can be used to convert byte sequences into character sets (code pages) and characters into byte sequences.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Encoding&gt;</ph> 개체를 사용 하 여 바이트 시퀀스 문자 집합 (코드 페이지) 및 문자를 바이트 시퀀스로 변환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ContentEncoding">
          <source>This property uses the charset value from the <ph id="ph1">`Content-Type`</ph> header to determine the encoding.</source>
          <target state="translated">문자 집합 값을 사용 하는이 속성은 <ph id="ph1">`Content-Type`</ph> 인코딩을 결정 하는 헤더입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ContentEncoding">
          <source>If that information is not available, this property returns <ph id="ph1">&lt;xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 속성을 반환 하는 경우 해당 정보를 사용할 수 없는 <ph id="ph1">&lt;xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ContentEncoding">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.ContentEncoding%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.ContentEncoding%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.ContentLength64">
          <source>Gets the length of the body data included in the request.</source>
          <target state="translated">요청에 포함된 본문 데이터의 길이를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ContentLength64">
          <source>The value from the request's <ph id="ph1">&lt;see langword="Content-Length" /&gt;</ph> header.</source>
          <target state="translated">요청의 <ph id="ph1">&lt;see langword="Content-Length" /&gt;</ph> 헤더에서 가져온 값입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ContentLength64">
          <source>This value is -1 if the content length is not known.</source>
          <target state="translated">콘텐츠 길이를 알 수 없으면 이 값은 -1입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ContentLength64">
          <source>The <ph id="ph1">`Content-Length`</ph> header expresses the length, in bytes, of the body data that accompanies the request.</source>
          <target state="translated"><ph id="ph1">`Content-Length`</ph> 헤더에 따라 요청을 함께 제공 되는 본문 데이터의 길이 (바이트)를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ContentLength64">
          <source>For a complete list of request headers, see the <ph id="ph1">&lt;xref:System.Net.HttpRequestHeader&gt;</ph> enumeration.</source>
          <target state="translated">요청 헤더의 전체 목록은 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Net.HttpRequestHeader&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ContentLength64">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.ContentLength64%2A&gt;</ph> property while processing body data.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.ContentLength64%2A&gt;</ph> 본문 데이터를 처리 하는 동안 속성입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.ContentType">
          <source>Gets the MIME type of the body data included in the request.</source>
          <target state="translated">요청에 포함된 본문 데이터의 MIME 형식을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ContentType">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the text of the request's <ph id="ph2">&lt;see langword="Content-Type" /&gt;</ph> header.</source>
          <target state="translated">요청의 <ph id="ph2">&lt;see langword="Content-Type" /&gt;</ph> 헤더 텍스트가 들어 있는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ContentType">
          <source>If a client includes body data in a request, it declares the Multipurpose Internet Mail Extensions (MIME) type of the body data in the <ph id="ph1">`Content-Type`</ph> header.</source>
          <target state="translated">본문 데이터의 MIME Multipurpose Internet Mail Extensions () 형식을 선언 클라이언트 요청에서 본문 데이터를 포함 하는 경우는 <ph id="ph1">`Content-Type`</ph> 헤더입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ContentType">
          <source>For example, the default MIME type of data returned from a Web form using the <ph id="ph1">`POST`</ph> method is <ph id="ph2">`application/x-www-form-urlencoded`</ph>.</source>
          <target state="translated">사용 하 여 웹 폼에서 데이터의 기본 MIME 형식을 반환 하는 예를 들어는 <ph id="ph1">`POST`</ph> 방법은 <ph id="ph2">`application/x-www-form-urlencoded`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ContentType">
          <source>For a complete list of request headers, see the <ph id="ph1">&lt;xref:System.Net.HttpRequestHeader&gt;</ph> enumeration and RFC 2616, available at <bpt id="p1">[</bpt><ph id="ph2">https://www.rfc-editor.org</ph><ept id="p1">](https://www.rfc-editor.org/)</ept>.</source>
          <target state="translated">요청 헤더의 전체 목록은 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Net.HttpRequestHeader&gt;</ph> 열거형 및에서 사용할 수 있는 RFC 2616 <bpt id="p1">[</bpt> <ph id="ph2">https://www.rfc-editor.org</ph> <ept id="p1">](https://www.rfc-editor.org/)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ContentType">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.ContentType%2A&gt;</ph> is null when there is no <ph id="ph2">`Content-Type`</ph> header in the request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.ContentType%2A&gt;</ph> 이 null 없는 <ph id="ph2">`Content-Type`</ph> 요청의 헤더입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ContentType">
          <source>The following code example demonstrates how to use this property.</source>
          <target state="translated">다음 코드 예제에서는이 속성을 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.Cookies">
          <source>Gets the cookies sent with the request.</source>
          <target state="translated">요청과 함께 전송된 쿠키를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Cookies">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.CookieCollection" /&gt;</ph> that contains cookies that accompany the request.</source>
          <target state="translated">요청과 함께 전송된 쿠키가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Net.CookieCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Cookies">
          <source>This property returns an empty collection if the request does not contain cookies.</source>
          <target state="translated">요청에 쿠키가 들어 있지 않으면 이 속성은 빈 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Cookies">
          <source>A cookie is name/value text data from a Web server that is stored on the local (client) computer.</source>
          <target state="translated">쿠키는 이름/값 텍스트 데이터는 로컬 클라이언트 컴퓨터에 저장 하는 웹 서버입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Cookies">
          <source>The following code example displays the values of cookies sent with the request.</source>
          <target state="translated">다음 코드 예제에서는 요청과 함께 보낸 쿠키의 값을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)">
          <source>The pending request for the certificate.</source>
          <target state="translated">인증서에 대해 보류된 요청입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)">
          <source>Ends an asynchronous request for the client's X.509 v.3 certificate.</source>
          <target state="translated">클라이언트의 X.509 v.3 인증서에 대한 비동기 요청을 끝냅니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that is returned when the operation started.</source>
          <target state="translated">작업이 시작될 때 반환되는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> was not obtained by calling <ph id="ph2">&lt;see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /&gt;</ph><ph id="ph3">&lt;paramref name="e." /&gt;</ph></source>
          <target state="translated"><ph id="ph2">&lt;see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /&gt;</ph><ph id="ph3">&lt;paramref name="e." /&gt;</ph>을 호출하여 <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph>를 가져오지 못한 경우</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)">
          <source>This method was already called for the operation identified by <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph>로 식별된 작업에 대해 이 메서드가 이미 호출된 경우</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerRequest.GetClientCertificate">
          <source>Retrieves the client's X.509 v.3 certificate.</source>
          <target state="translated">클라이언트의 X.509 v.3 인증서를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerRequest.GetClientCertificate">
          <source>A <ph id="ph1">&lt;see cref="N:System.Security.Cryptography.X509Certificates" /&gt;</ph> object that contains the client's X.509 v.3 certificate.</source>
          <target state="translated">클라이언트의 X.509 v.3 인증서가 들어 있는 <ph id="ph1">&lt;see cref="N:System.Security.Cryptography.X509Certificates" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerRequest.GetClientCertificate">
          <source>This method blocks until the certificate is retrieved.</source>
          <target state="translated">이 메서드는 인증서가 검색 될 때까지 차단 됩니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerRequest.GetClientCertificate">
          <source>A call to this method to retrieve the client's X.509 v.3 certificate is in progress and therefore another call to this method cannot be made.</source>
          <target state="translated">이 메서드를 호출하여 클라이언트의 X.509 v.3 인증서를 가져오고 있는 중이어서 이 메서드를 또 호출할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerRequest.GetClientCertificateAsync">
          <source>Retrieves the client's X.509 v.3 certificate as an asynchronous operation.</source>
          <target state="translated">클라이언트의 X.509 v.3 인증서를 비동기 작업으로 검색합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerRequest.GetClientCertificateAsync">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerRequest.GetClientCertificateAsync">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerRequest.GetClientCertificateAsync">
          <source>The <ph id="ph1">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph> property on the task object returns a <ph id="ph2">&lt;see cref="N:System.Security.Cryptography.X509Certificates" /&gt;</ph> object that contains the client's X.509 v.3 certificate.</source>
          <target state="translated">작업 개체의 <ph id="ph1">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph> 속성은 클라이언트의 X.509 v.3 인증서가 포함된 <ph id="ph2">&lt;see cref="N:System.Security.Cryptography.X509Certificates" /&gt;</ph> 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerRequest.GetClientCertificateAsync">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerRequest.GetClientCertificateAsync">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete when the certificate has been retrieved.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 개체 인증서 검색 될 때 완료 됩니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerRequest.GetClientCertificateAsync">
          <source>If a call to this method to retrieve the client's X.509 v.3 certificate is in progress, then another call to this method cannot be made.</source>
          <target state="translated">진행 중인 클라이언트의 X.509 v.3 인증서를 검색 하려면이 메서드를 호출 하는 경우에이 메서드 호출을 만들 수 없습니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.HasEntityBody">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether the request has associated body data.</source>
          <target state="translated">요청에 관련된 본문 데이터가 있는지 여부를 나타내는 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.HasEntityBody">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the request has associated body data; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">요청에 관련된 본문 데이터가 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.HasEntityBody">
          <source>A request that sends data to the server using the <ph id="ph1">`POST`</ph> method, for example, should have an entity body.</source>
          <target state="translated">데이터를 사용 하 여 서버에 보내는 요청에는 <ph id="ph1">`POST`</ph> 메서드, 예를 들어는 엔터티 본문이 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.HasEntityBody">
          <source>The following code example demonstrates using this property.</source>
          <target state="translated">다음 코드 예제에서는이 속성을 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.Headers">
          <source>Gets the collection of header name/value pairs sent in the request.</source>
          <target state="translated">요청에서 보낸 헤더 이름/값 쌍의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Headers">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.WebHeaderCollection" /&gt;</ph> that contains the HTTP headers included in the request.</source>
          <target state="translated">요청에 포함된 HTTP 헤더가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Net.WebHeaderCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Headers">
          <source>Request headers contain metadata information.</source>
          <target state="translated">요청 헤더는 메타 데이터 정보를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Headers">
          <source>For example, headers can contain the Uniform Resource Identifier (URI) of the resource that referred the client to the server, the identity of the user agent employed by the client, and the acceptable MIME types for data in the response body.</source>
          <target state="translated">예를 들어 헤더는 식별자 URI (Uniform Resource)에서 클라이언트는 서버를 참조 하는 리소스의 포함 될 수 있습니다, 그리고 사용자 에이전트의 id에 소속 된 클라이언트 및 허용 가능한 MIME 응답 본문에는 데이터에 대 한 형식입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Headers">
          <source>For a complete list of request headers, see the <ph id="ph1">&lt;xref:System.Net.HttpRequestHeader&gt;</ph> enumeration.</source>
          <target state="translated">요청 헤더의 전체 목록은 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Net.HttpRequestHeader&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Headers">
          <source>The following code example displays all the information in a given <ph id="ph1">&lt;xref:System.Net.WebHeaderCollection&gt;</ph> object.</source>
          <target state="translated">다음 코드 예제에서는 표시에 있는 모든 정보는 주어진 <ph id="ph1">&lt;xref:System.Net.WebHeaderCollection&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.HttpMethod">
          <source>Gets the HTTP method specified by the client.</source>
          <target state="translated">클라이언트에서 지정한 HTTP 메서드를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.HttpMethod">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the method used in the request.</source>
          <target state="translated">요청에 사용된 메서드가 들어 있는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.HttpMethod">
          <source>The HTTP method is typically GET or POST, depending on the action desired by the client.</source>
          <target state="translated">HTTP 메서드는 일반적으로 GET 또는 POST, 클라이언트에서 원하는 작업에 따라 합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.HttpMethod">
          <source>The following code example demonstrates using this property.</source>
          <target state="translated">다음 코드 예제에서는이 속성을 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.InputStream">
          <source>Gets a stream that contains the body data sent by the client.</source>
          <target state="translated">클라이언트에서 보낸 본문 데이터가 들어 있는 스트림을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.InputStream">
          <source>A readable <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object that contains the bytes sent by the client in the body of the request.</source>
          <target state="translated">클라이언트에서 요청 본문에 보낸 바이트가 들어 있는 읽기 가능한 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.InputStream">
          <source>This property returns <ph id="ph1">&lt;see cref="F:System.IO.Stream.Null" /&gt;</ph> if no data is sent with the request.</source>
          <target state="translated">요청과 함께 데이터를 보내지 않은 경우 이 속성은 <ph id="ph1">&lt;see cref="F:System.IO.Stream.Null" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.InputStream">
          <source>If the client transmits data (for example, using the HTTP <ph id="ph1">`POST`</ph> method), the stream returned by this method contains that data.</source>
          <target state="translated">클라이언트 데이터를 전송 하는 경우 (예를 들어 HTTP를 사용 하 여 <ph id="ph1">`POST`</ph> 메서드),이 메서드에 의해 반환 된 스트림이 해당 데이터를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.InputStream">
          <source>Closing the request does not close the stream returned by this property.</source>
          <target state="translated">요청을 닫아도이 속성에서 반환 된 스트림이 닫히지 않습니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.InputStream">
          <source>When you no longer need the stream, you should close it by calling the <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A&gt;</ph> method.</source>
          <target state="translated">스트림이 필요 없는 호출 하 여 종료 해야는 <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.InputStream">
          <source>The following code example demonstrates using this property to read the data sent with a request.</source>
          <target state="translated">다음 코드 예제에서는이 속성을 사용 하 여 요청과 함께 전송 되는 데이터를 읽을 수를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.InputStream">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.InputStream">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>.NET Framework의 네트워크 추적<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.IsAuthenticated">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether the client sending this request is authenticated.</source>
          <target state="translated">이 요청을 보내는 클라이언트가 인증되었는지 여부를 나타내는 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.IsAuthenticated">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the client was authenticated; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">클라이언트가 인증되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.IsAuthenticated">
          <source>Your application requests client authentication using the <ph id="ph1">&lt;xref:System.Net.HttpListener.AuthenticationSchemes%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A&gt;</ph> property.</source>
          <target state="translated">응용 프로그램을 사용 하 여 클라이언트 인증 요청은 <ph id="ph1">&lt;xref:System.Net.HttpListener.AuthenticationSchemes%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.IsAuthenticated">
          <source>Your application does not receive an <ph id="ph1">&lt;xref:System.Net.HttpListenerContext&gt;</ph> for requests from clients that are not successfully authenticated.</source>
          <target state="translated">응용 프로그램에서 수신 하지는 <ph id="ph1">&lt;xref:System.Net.HttpListenerContext&gt;</ph> 성공적으로 인증 되지 않은 클라이언트의 요청에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.IsAuthenticated">
          <source>The following code example displays the value of the <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.IsAuthenticated%2A&gt;</ph> property.</source>
          <target state="translated">값을 표시 하는 다음 코드 예제는 <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.IsAuthenticated%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.IsLocal">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether the request is sent from the local computer.</source>
          <target state="translated">요청을 로컬 컴퓨터에서 보냈는지 여부를 나타내는 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.IsLocal">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the request originated on the same computer as the <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> object that provided the request; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">요청을 제공한 <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> 개체와 동일한 컴퓨터에서 요청이 시작되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.IsLocal">
          <source>Applications can use this property to perform special processing when requests are from the local computer.</source>
          <target state="translated">응용 프로그램이이 속성을 사용 하 여 요청 로컬 컴퓨터의 경우 특별 한 처리를 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.IsLocal">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.IsLocal%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.IsLocal%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.IsSecureConnection">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether the TCP connection used to send the request is using the Secure Sockets Layer (SSL) protocol.</source>
          <target state="translated">요청을 보내는 데 사용된 TCP 연결이 SSL(Secure Sockets Layer) 프로토콜을 사용하는지 여부를 나타내는 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.IsSecureConnection">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the TCP connection is using SSL; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">TCP 연결이 SSL을 사용하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.IsSecureConnection">
          <source>To request a secure connection, the client request uses <ph id="ph1">&lt;xref:System.Uri.UriSchemeHttps&gt;</ph> instead of <ph id="ph2">&lt;xref:System.Uri.UriSchemeHttp&gt;</ph>.</source>
          <target state="translated">클라이언트 요청에서 보안 연결을 요청 하려면 다음을 사용 합니다. <ph id="ph1">&lt;xref:System.Uri.UriSchemeHttps&gt;</ph> 대신 <ph id="ph2">&lt;xref:System.Uri.UriSchemeHttp&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.IsSecureConnection">
          <source>If the connection cannot be established using SSL, the client receives a <ph id="ph1">&lt;xref:System.Net.WebException&gt;</ph> that provides information about the error.</source>
          <target state="translated">클라이언트가 수신 하는 경우 SSL을 사용 하 여 연결을 설정할 수 없는는 <ph id="ph1">&lt;xref:System.Net.WebException&gt;</ph> 의 오류에 대 한 정보를 제공 하 합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.IsSecureConnection">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.IsSecureConnection%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.IsSecureConnection%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.IsWebSocketRequest">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether the TCP connection was  a WebSocket request.</source>
          <target state="translated">TCP 연결이 WebSocket 요청인지 여부를 나타내는 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.IsWebSocketRequest">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.IsWebSocketRequest">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the TCP connection is a WebSocket request; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">TCP 연결이 WebSocket 요청인 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.KeepAlive">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether the client requests a persistent connection.</source>
          <target state="translated">클라이언트에서 영구 연결을 요청하는지 여부를 나타내는 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.KeepAlive">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the connection should be kept open; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">연결을 열린 상태로 유지해야 하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.KeepAlive">
          <source>If an HTTP client and server expect to exchange data multiple times in a short time period, a persistent connection speeds up their communications by allowing them to avoid the overhead required to open and close a TCP connection for each message.</source>
          <target state="translated">경우 HTTP 클라이언트와 서버 데이터를 교환 하는 짧은 시간 내에 여러 번, 영구 연결 속도가 통신을 열고 각 메시지에 대 한 TCP 연결을 닫는 데 필요한 오버 헤드를 방지할 수 있으므로 합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.KeepAlive">
          <source>For clients using HTTP/1.1, the default value for this property is <ph id="ph1">`true`</ph>.</source>
          <target state="translated">이 속성의 기본값은 HTTP/1.1을 사용 하는 클라이언트, <ph id="ph1">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.KeepAlive">
          <source>The following code example demonstrates using this property.</source>
          <target state="translated">다음 코드 예제에서는이 속성을 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.LocalEndPoint">
          <source>Get the server IP address and port number to which the request is directed.</source>
          <target state="translated">요청이 전달되는 서버 IP 주소 및 포트 번호를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.LocalEndPoint">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> that represents the IP address that the request is sent to.</source>
          <target state="translated">요청이 보내지는 IP 주소를 나타내는 <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.LocalEndPoint">
          <source>This property is useful when you want to respond to requests based on the way they are addressed.</source>
          <target state="translated">이 속성은 해결 될 수 있도록 하는 방법에 따라 요청에 응답 하도록 하려는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.LocalEndPoint">
          <source>The following code example demonstrates using this property.</source>
          <target state="translated">다음 코드 예제에서는이 속성을 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.ProtocolVersion">
          <source>Gets the HTTP version used by the requesting client.</source>
          <target state="translated">요청하는 클라이언트에서 사용하는 HTTP 버전을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ProtocolVersion">
          <source>A <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> that identifies the client's version of HTTP.</source>
          <target state="translated">클라이언트의 HTTP 버전을 식별하는 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ProtocolVersion">
          <source>The capabilities of different HTTP versions are specified in the documents available at <bpt id="p1">[</bpt><ph id="ph1">https://www.rfc-editor.org</ph><ept id="p1">](https://www.rfc-editor.org/)</ept>.</source>
          <target state="translated">다양 한 HTTP 버전의 기능에 사용할 수 있는 문서에 지정 된 <bpt id="p1">[</bpt> <ph id="ph1">https://www.rfc-editor.org</ph> <ept id="p1">](https://www.rfc-editor.org/)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ProtocolVersion">
          <source>The following code example demonstrates using this property.</source>
          <target state="translated">다음 코드 예제에서는이 속성을 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.QueryString">
          <source>Gets the query string included in the request.</source>
          <target state="translated">요청에 포함된 쿼리 문자열을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.QueryString">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> object that contains the query data included in the request <ph id="ph2">&lt;see cref="P:System.Net.HttpListenerRequest.Url" /&gt;</ph>.</source>
          <target state="translated">요청 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>에 포함된 쿼리 데이터가 들어 있는 <ph id="ph2">&lt;see cref="P:System.Net.HttpListenerRequest.Url" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.QueryString">
          <source>In a URL, the query information is separated from the path information by a question mark (?).</source>
          <target state="translated">URL, 쿼리 정보는 경로 정보 물음표 (?)로 구분 됩니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.QueryString">
          <source>Name/value pairs are separated by an equals sign (=).</source>
          <target state="translated">이름/값 쌍은 등호 (=)로 구분 됩니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.QueryString">
          <source>To access the query data as a single string, get the <ph id="ph1">&lt;xref:System.Uri.Query%2A&gt;</ph> property value from the <ph id="ph2">&lt;xref:System.Uri&gt;</ph> object returned by <ph id="ph3">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph>.</source>
          <target state="translated">단일 문자열로 쿼리 데이터에 액세스 하려면 가져오기는 <ph id="ph1">&lt;xref:System.Uri.Query%2A&gt;</ph> 속성 값을는 <ph id="ph2">&lt;xref:System.Uri&gt;</ph> 에서 반환 된 개체 <ph id="ph3">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.QueryString">
          <source>Queries without an equal sign (example: <bpt id="p1">[</bpt><ph id="ph1">http://www.contoso.com/query.htm?Name</ph><ept id="p1">](http://www.contoso.com/query.htm?Name)</ept> ) are added to the <ph id="ph2">`null`</ph> key in the <ph id="ph3">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</source>
          <target state="translated">등호 기호 없이 쿼리 (예: <bpt id="p1">[</bpt> <ph id="ph1">http://www.contoso.com/query.htm?Name</ph> <ept id="p1">](http://www.contoso.com/query.htm?Name)</ept> )에 추가 되는 <ph id="ph2">`null`</ph> 키에서 <ph id="ph3">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.QueryString">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.QueryString%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.QueryString%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.RawUrl">
          <source>Gets the URL information (without the host and port) requested by the client.</source>
          <target state="translated">클라이언트에서 요청한 URL 정보(호스트 및 포트 제외)를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.RawUrl">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the raw URL for this request.</source>
          <target state="translated">이 요청에 대한 원시 URL이 들어 있는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.RawUrl">
          <source>The raw URL is defined as the part of the URL following the domain information.</source>
          <target state="translated">원시 URL은 도메인 정보 다음에 URL의 일부분으로 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.RawUrl">
          <source>In the URL string <ph id="ph1">`http://www.contoso.com/articles/recent.aspx`</ph>, the raw URL is <ph id="ph2">`/articles/recent.aspx`</ph>.</source>
          <target state="translated">URL 문자열에 <ph id="ph1">`http://www.contoso.com/articles/recent.aspx`</ph>, 원시 URL은 <ph id="ph2">`/articles/recent.aspx`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.RawUrl">
          <source>The raw URL includes the query string, if present.</source>
          <target state="translated">있는 경우 원시 URL 쿼리 문자열을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.RawUrl">
          <source>To obtain the host and port information, use the <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A&gt;</ph> property.</source>
          <target state="translated">호스트 및 포트 정보를 가져오려면는 <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.RawUrl">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.RawUrl%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.RawUrl%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.RemoteEndPoint">
          <source>Gets the client IP address and port number from which the request originated.</source>
          <target state="translated">요청이 시작된 클라이언트 IP 주소 및 포트 번호를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.RemoteEndPoint">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> that represents the IP address and port number from which the request originated.</source>
          <target state="translated">요청이 시작된 IP 주소 및 포트 번호를 나타내는 <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.RemoteEndPoint">
          <source>The following code example demonstrates using this property.</source>
          <target state="translated">다음 코드 예제에서는이 속성을 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.RequestTraceIdentifier">
          <source>Gets the request identifier of the incoming HTTP request.</source>
          <target state="translated">들어오는 HTTP 요청의 요청 식별자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.RequestTraceIdentifier">
          <source>A <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> object that contains the identifier of the HTTP request.</source>
          <target state="translated">HTTP 요청의 식별자가 포함된 <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.ServiceName">
          <source>Gets the Service Provider Name (SPN) that the client sent on the request.</source>
          <target state="translated">클라이언트가 요청에 대해 보낸 SPN(서비스 공급자 이름)을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ServiceName">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the SPN the client sent on the request.</source>
          <target state="translated">클라이언트가 요청에 대해 보낸 SPN을 포함하는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ServiceName">
          <source>An application could use the <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.ServiceName%2A&gt;</ph> property to perform custom Service Provide Name (SPN) validation.</source>
          <target state="translated">응용 프로그램을 사용할 수는 <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.ServiceName%2A&gt;</ph> 속성을 사용자 지정 서비스 제공 이름 (SPN) 유효성 검사를 수행 합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.TransportContext">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Net.TransportContext" /&gt;</ph> for the client request.</source>
          <target state="translated">클라이언트 요청에 대한 <ph id="ph1">&lt;see cref="T:System.Net.TransportContext" /&gt;</ph>를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.TransportContext">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.TransportContext" /&gt;</ph> object for the client request.</source>
          <target state="translated">클라이언트 요청에 대한 <ph id="ph1">&lt;see cref="T:System.Net.TransportContext" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.TransportContext">
          <source>The <ph id="ph1">&lt;xref:System.Net.TransportContext&gt;</ph> property can be used to retrieve the channel binding token (CBT) for an <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest&gt;</ph> which was sent using HTTPS.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.TransportContext&gt;</ph> 속성 채널 바인딩 토큰 (CBT)에 대 한 검색을 사용할 수는 <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest&gt;</ph> HTTPS를 사용 하 여 보냈거나 합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.TransportContext">
          <source>An application could use the <ph id="ph1">&lt;xref:System.Net.TransportContext&gt;</ph> property to perform custom authentication using calls to the native Win32 <bpt id="p1">[</bpt>AcceptSecurityContext<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=147021)</ept> function.</source>
          <target state="translated">응용 프로그램을 사용할 수는 <ph id="ph1">&lt;xref:System.Net.TransportContext&gt;</ph> 네이티브 Win32 호출 하 여 사용자 지정 인증을 수행 하는 속성 <bpt id="p1">[</bpt>acceptsecuritycontext가<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=147021)</ept> 함수입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.TransportContext">
          <source>If an application attempts to retrieve the channel binding token (CBT) from this <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.TransportContext%2A&gt;</ph> property using the <ph id="ph2">&lt;xref:System.Net.TransportContext.GetChannelBinding%2A&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind&gt;</ph> is not <ph id="ph4">&lt;xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint&gt;</ph>, then the <ph id="ph5">&lt;xref:System.Net.HttpListenerRequest&gt;</ph> will throw <ph id="ph6">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">응용 프로그램에서이 채널 바인딩 토큰 CBT ()를 검색 하려고 할 경우 <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.TransportContext%2A&gt;</ph> 사용 하 여 속성의 <ph id="ph2">&lt;xref:System.Net.TransportContext.GetChannelBinding%2A&gt;</ph> 메서드 및 <ph id="ph3">&lt;xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind&gt;</ph> 않습니다 <ph id="ph4">&lt;xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint&gt;</ph>, 하면 <ph id="ph5">&lt;xref:System.Net.HttpListenerRequest&gt;</ph> 를 발생 시킵니다 <ph id="ph6">&lt;xref:System.NotSupportedException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.TransportContext">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest&gt;</ph> overrides the <ph id="ph2">&lt;xref:System.Net.TransportContext.GetChannelBinding%2A&gt;</ph> method with an internal implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListenerRequest&gt;</ph> 재정의 <ph id="ph2">&lt;xref:System.Net.TransportContext.GetChannelBinding%2A&gt;</ph> 내부 구현 합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.Url">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> object requested by the client.</source>
          <target state="translated">클라이언트에서 요청한 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> object that identifies the resource requested by the client.</source>
          <target state="translated">클라이언트에서 요청한 리소스를 식별하는 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph> property allows you to obtain all the information available from a <ph id="ph2">&lt;xref:System.Uri&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph> 속성에서 사용할 수 있는 모든 정보를 가져올 수 있습니다는 <ph id="ph2">&lt;xref:System.Uri&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>If you need to know only the raw text of the URI request, consider using the <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.RawUrl%2A&gt;</ph> property instead.</source>
          <target state="translated">Uri의 원시 텍스트만 알아야 하는 경우를 사용해는 <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.RawUrl%2A&gt;</ph> 속성 대신 합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph> property is null if the <ph id="ph2">&lt;xref:System.Uri&gt;</ph> from the client could not be parsed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph> 속성이 null이 경우는 <ph id="ph2">&lt;xref:System.Uri&gt;</ph> 클라이언트에서 분석할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>The <ph id="ph1">&lt;xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A&gt;</ph> property indicates if <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> uses the raw unescaped URI instead of the converted URI where any percent-encoded values are converted and other normalization steps are taken.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A&gt;</ph> 속성 이면 <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> 모든 퍼센트 인코딩 값이 변환 되 고 다른 정규화 단계가 수행 되는 변환된 URI 대신 원시 언 이스케이프 된 URI를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>When a <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> instance receives a request through the <ph id="ph2">`http.sys`</ph> service, it creates an instance of the URI string provided by <ph id="ph3">`http.sys`</ph>, and exposes it as the <ph id="ph4">&lt;xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">때는 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> 인스턴스 통해 요청을 받을 <ph id="ph2">`http.sys`</ph> 에서 제공 하 고 URI 문자열의 인스턴스를 만들고 서비스를 <ph id="ph3">`http.sys`</ph>,으로 노출 된 <ph id="ph4">&lt;xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>The <ph id="ph1">`http.sys`</ph> service exposes two request URI strings:</source>
          <target state="translated"><ph id="ph1">`http.sys`</ph> 서비스는 두 요청 URI 문자열을 노출 합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>Raw URI</source>
          <target state="translated">원시 URI</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>Converted URI</source>
          <target state="translated">변환 된 URI</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>The raw URI is the <ph id="ph1">&lt;xref:System.Uri?displayProperty=nameWithType&gt;</ph> provided in the request line of a HTTP request:</source>
          <target state="translated">Uri의 원시는 <ph id="ph1">&lt;xref:System.Uri?displayProperty=nameWithType&gt;</ph> HTTP 요청의 요청 줄에 제공 합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>The raw URI provided by <ph id="ph1">`http.sys`</ph> for the request mentioned above, is "/path/".</source>
          <target state="translated">제공 된 URI의 원시 <ph id="ph1">`http.sys`</ph> 위에서 설명한 요청은 "/ 경로 /"에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>This represents the string following the HTTP verb as it was sent over the network.</source>
          <target state="translated">이 네트워크를 통해 전송 된 HTTP 동사를 다음 문자열을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>The <ph id="ph1">`http.sys`</ph> service creates a converted URI from the information provided in the request using the URI provided in the HTTP request line and the Host header to determine the origin server the request should be forwarded to.</source>
          <target state="translated"><ph id="ph1">`http.sys`</ph> 을 전달 해야 하는 원본 서버에서 요청을 확인 하려면 호스트 헤더 및 서비스는 HTTP 요청에서에서 제공 하는 URI를 사용 하 여 요청에 제공 된 정보에서 변환된 된 URI를 만듭니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>This is done by comparing the information from the request with a set of registered URI prefixes.</source>
          <target state="translated">이 등록 된 URI 접두사를 사용 하 여 요청에서 정보를 비교 하 여 수행 됩니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>In order to be able to compare those values, some normalization to the request needs to be done.</source>
          <target state="translated">이러한 값을 비교할 수 있도록 요청에 일부 정규화를 수행 해야 합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>For the sample above the converted URI would be as follows:</source>
          <target state="translated">위의 샘플 변환 된 URI에 대 한 것 같습니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>The <ph id="ph1">`http.sys`</ph> service combines the <ph id="ph2">&lt;xref:System.Uri.Host%2A?displayProperty=nameWithType&gt;</ph> property value and the string in the request line to create a converted URI.</source>
          <target state="translated"><ph id="ph1">`http.sys`</ph> 결합 하 여 서비스는 <ph id="ph2">&lt;xref:System.Uri.Host%2A?displayProperty=nameWithType&gt;</ph> 속성 값과 변환된 된 URI를 만드는 요청 줄에 있는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>In addition, <ph id="ph1">`http.sys`</ph> and the <ph id="ph2">&lt;xref:System.Uri?displayProperty=nameWithType&gt;</ph> class also do the following:</source>
          <target state="translated">또한 <ph id="ph1">`http.sys`</ph> 및 <ph id="ph2">&lt;xref:System.Uri?displayProperty=nameWithType&gt;</ph> 클래스도 다음을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>Un-escapes all percent encoded values.</source>
          <target state="translated">이스케이프 해제 인코딩된 모든 백분율 값입니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>Converts percent-encoded non-ASCII characters into a UTF-16 character representation.</source>
          <target state="translated">비 ASCII 문자를 utf-16 문자 표현으로 퍼센트 인코딩 변환 합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>Note that UTF-8 and ANSI/DBCS characters are supported as well as Unicode characters (Unicode encoding using the %uXXXX format).</source>
          <target state="translated">Note u t F-8과 ANSI/DBCS 문자가 유니코드 문자 (유니코드 %uXXXX 형식을 사용 하 여 인코딩)도 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>Executes other normalization steps, like path compression.</source>
          <target state="translated">경로 압축 같은 다른 정규화 단계를 실행합니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>Since the request doesn't contain any information about the encoding used for percent-encoded values, it may not be possible to determine the correct encoding just by parsing the percent-encoded values.</source>
          <target state="translated">퍼센트 인코딩 값에 사용 되는 인코딩에 대 한 정보가 요청 없으므로 퍼센트 인코딩 값을 구문 분석 하 여 올바른 인코딩을 확인할 못할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>Therefore <ph id="ph1">`http.sys`</ph> provides two registry keys for modifying the process:</source>
          <target state="translated">따라서 <ph id="ph1">`http.sys`</ph> 프로세스를 수정 하기 위한 두 개의 레지스트리 키를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>Registry Key</source>
          <target state="translated">레지스트리 키</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>Default Value</source>
          <target state="translated">기본값</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>EnableNonUTF8</source>
          <target state="translated">EnableNonUTF8</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>If zero, <ph id="ph1">`http.sys`</ph> accepts only UTF-8-encoded URLs.</source>
          <target state="translated">0 이면 <ph id="ph1">`http.sys`</ph> u t F-8로 인코딩된 Url만 허용 합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>If non-zero, <ph id="ph1">`http.sys`</ph> also accepts ANSI-encoded or DBCS-encoded URLs in requests.</source>
          <target state="translated">0이 아닌 경우 <ph id="ph1">`http.sys`</ph> 도 요청에서 ANSI로 인코딩된 또는 DBCS 인코딩된 Url을 허용 합니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>FavorUTF8</source>
          <target state="translated">FavorUTF8</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>If non-zero, <ph id="ph1">`http.sys`</ph> always tries to decode a URL as UTF-8 first; if that conversion fails and EnableNonUTF8 is non-zero, Http.sys then tries to decode it as ANSI or DBCS.</source>
          <target state="translated">0이 아닌 경우 <ph id="ph1">`http.sys`</ph> 디코딩할 URL u t F-8로 먼저 해당 변환이 실패 하 고 EnableNonUTF8 0이 아닌 경우 하려고 항상 차례로 Http.sys을 ANSI 또는 DBCS 디코딩할 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>If zero (and EnableNonUTF8 is non-zero), <ph id="ph1">`http.sys`</ph> tries to decode it as ANSI or DBCS; if that is not successful, it tries a UTF-8 conversion.</source>
          <target state="translated">0 (및 EnableNonUTF8 0이 아닌) <ph id="ph1">`http.sys`</ph> 경우 해당 ANSI 또는 DBCS; 디코딩하 려 성공 하지 못하면, 시도 u t F-8로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>When <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> receives a request, it uses the converted URI from <ph id="ph2">`http.sys`</ph> as input to the <ph id="ph3">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph> property.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> 한 요청을 받으면에서 변환 된 URI를 사용 하 여 <ph id="ph2">`http.sys`</ph> 대 한 입력으로 <ph id="ph3">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>There is a need for supporting characters besides characters and numbers in URIs.</source>
          <target state="translated">Uri에서 문자 및 숫자 이외의 문자를 지원할 필요가 있습니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>An example is the following URI, which is used to retrieve customer information for customer number "1/3812":</source>
          <target state="translated">예로 고객에 대 한 고객 정보를 검색 하는 데 사용 되는 다음 URI는 번호 "1/3812":</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>Note the percent-encoded slash in the Uri (%2F).</source>
          <target state="translated">Uri (%2F)에서 % 인코딩된 슬래시를 note 합니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>This is necessary, since in this case the slash character represents data and not a path delimiter.</source>
          <target state="translated">이 작업은 슬래시 문자 데이터 및 하지는 경로 구분 기호를 나타내므로 경우에 필요 합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>Passing the string to Uri constructor will lead to the following URI:</source>
          <target state="translated">Uri 생성자에 문자열을 전달 하면 다음과 같은 uri를 일으킵니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>Splitting the path into its segments would result in the following elements:</source>
          <target state="translated">경로를 세그먼트로 분할 하면 다음과 같은 요소가 만들어집니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>This is not the intent of the sender of the request.</source>
          <target state="translated">요청을 보낸 사람 의도 아닙니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>If the <ph id="ph1">&lt;xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A&gt;</ph> property is set to false, then when the <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> receives a request, it uses the raw URI instead of the converted URI from <ph id="ph3">`http.sys`</ph> as input to the <ph id="ph4">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph> property.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A&gt;</ph> 속성이 false로 설정 되어 다음 경우는 <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> 한 요청을 받으면 원시 URI에서 변환 된 URI 대신 사용 하 여 <ph id="ph3">`http.sys`</ph> 대 한 입력으로 <ph id="ph4">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.UrlReferrer">
          <source>Gets the Uniform Resource Identifier (URI) of the resource that referred the client to the server.</source>
          <target state="translated">클라이언트를 서버에 연결시킨 리소스의 URI(Uniform Resource Identifier)를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UrlReferrer">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> object that contains the text of the request's <ph id="ph2">&lt;see cref="F:System.Net.HttpRequestHeader.Referer" /&gt;</ph> header, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the header was not included in the request.</source>
          <target state="translated">요청의 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 헤더 텍스트가 들어 있는 <ph id="ph2">&lt;see cref="F:System.Net.HttpRequestHeader.Referer" /&gt;</ph> 개체이거나, 헤더가 요청에 포함되지 않은 경우 <ph id="ph3">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UrlReferrer">
          <source>If a client has followed a hyperlink to the requested URI, its request might contain a <ph id="ph1">`Referrer`</ph> header that identifies the URI of the resource that contained the hyperlink.</source>
          <target state="translated">클라이언트가 요청된 된 URI에 하이퍼링크를 따라 해당 요청을 확인할 수 있습니다는 <ph id="ph1">`Referrer`</ph> 는 하이퍼링크가 포함 된 리소스의 URI를 식별 하는 헤더입니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UrlReferrer">
          <source>Clients can falsify or choose not to present a <ph id="ph1">&lt;xref:System.Net.HttpRequestHeader.Referer&gt;</ph> header.</source>
          <target state="translated">클라이언트를 위조 하거나 표시 하지 않도록 선택할 수는 <ph id="ph1">&lt;xref:System.Net.HttpRequestHeader.Referer&gt;</ph> 헤더입니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UrlReferrer">
          <source>Therefore, while the <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.UrlReferrer%2A&gt;</ph> property can be useful for identifying basic trends in Web traffic; you should not use it as part of an authorization scheme to control access to data.</source>
          <target state="translated">그러므로 <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.UrlReferrer%2A&gt;</ph> 속성 웹 트래픽이 기본 추세를 식별 하는 데 유용할 수 있습니다; 하면 사용 하지 않아야 것 권한 부여 체계의 일부로 데이터에 대 한 액세스를 제어 합니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UrlReferrer">
          <source>For a complete list of request headers, see the <ph id="ph1">&lt;xref:System.Net.HttpRequestHeader&gt;</ph> enumeration.</source>
          <target state="translated">요청 헤더의 전체 목록은 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Net.HttpRequestHeader&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UrlReferrer">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.UrlReferrer%2A&gt;</ph> is null when there is no <ph id="ph2">`Referrer`</ph> header in the request or when the <ph id="ph3">`Referrer`</ph> header is present in the request but does not parse to a valid <ph id="ph4">&lt;xref:System.Uri&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.UrlReferrer%2A&gt;</ph> 이 null 없는 <ph id="ph2">`Referrer`</ph> 요청의 헤더 또는 때는 <ph id="ph3">`Referrer`</ph> 헤더는 요청에 포함 되어 있지만 유효한 구문 분석 하지 않습니다 <ph id="ph4">&lt;xref:System.Uri&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UrlReferrer">
          <source>The following code example demonstrates using this property.</source>
          <target state="translated">다음 코드 예제에서는이 속성을 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.UserAgent">
          <source>Gets the user agent presented by the client.</source>
          <target state="translated">클라이언트에서 표시한 사용자 에이전트를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UserAgent">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> object that contains the text of the request's <ph id="ph2">&lt;see langword="User-Agent" /&gt;</ph> header.</source>
          <target state="translated">요청의 <ph id="ph2">&lt;see langword="User-Agent" /&gt;</ph> 헤더 텍스트가 들어 있는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UserAgent">
          <source>The <ph id="ph1">`User-Agent`</ph> header typically contains text that identifies the name and version number of the software used to generate the request.</source>
          <target state="translated"><ph id="ph1">`User-Agent`</ph> 헤더에서 요청을 생성 하는 데 사용 되는 소프트웨어의 이름 및 버전 번호를 식별 하는 텍스트는 일반적으로 포함 합니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UserAgent">
          <source>For a complete list of request headers, see the <ph id="ph1">&lt;xref:System.Net.HttpRequestHeader&gt;</ph> enumeration.</source>
          <target state="translated">요청 헤더의 전체 목록은 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Net.HttpRequestHeader&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UserAgent">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.UserAgent%2A&gt;</ph> is null when there is no <ph id="ph2">`User-Agent`</ph> header in the request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.UserAgent%2A&gt;</ph> 이 null 없는 <ph id="ph2">`User-Agent`</ph> 요청의 헤더입니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UserAgent">
          <source>The following code example demonstrates using this property.</source>
          <target state="translated">다음 코드 예제에서는이 속성을 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.UserHostAddress">
          <source>Gets the server IP address and port number to which the request is directed.</source>
          <target state="translated">요청이 전달되는 서버 IP 주소 및 포트 번호를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UserHostAddress">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the host address information.</source>
          <target state="translated">호스트 주소 정보가 들어 있는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UserHostAddress">
          <source>The information returned by this property is also available in the <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.LocalEndPoint%2A&gt;</ph> property value.</source>
          <target state="translated">이 속성에서 반환 되는 정보는 에서도 사용할 수는 <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.LocalEndPoint%2A&gt;</ph> 속성 값입니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UserHostAddress">
          <source>The following code example displays the value of this property.</source>
          <target state="translated">다음 코드 예제에서는이 속성의 값을 표시합니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.UserHostName">
          <source>Gets the DNS name and, if provided, the port number specified by the client.</source>
          <target state="translated">DNS 이름과 클라이언트에서 지정한 포트 번호(제공된 경우)를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UserHostName">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> value that contains the text of the request's <ph id="ph2">&lt;see langword="Host" /&gt;</ph> header.</source>
          <target state="translated">요청의 <ph id="ph2">&lt;see langword="Host" /&gt;</ph> 헤더 텍스트가 들어 있는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UserHostName">
          <source>The <ph id="ph1">`Host`</ph> header contains the requested server host name and port number, if specified, separated by a colon (for example, <ph id="ph2">`www.contoso.com:8080`</ph>).</source>
          <target state="translated"><ph id="ph1">`Host`</ph> 헤더는 요청 된 서버 호스트 이름이 들어 콜론으로 구분을 지정 하는 경우 포트 번호 (예를 들어 <ph id="ph2">`www.contoso.com:8080`</ph>).</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UserHostName">
          <source>You can use this property to return different responses depending on the host name specified in the request.</source>
          <target state="translated">이 속성을 사용 하 여 요청에 지정 된 호스트 이름에 따라 서로 다른 응답을 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UserHostName">
          <source>For a complete list of request headers, see the <ph id="ph1">&lt;xref:System.Net.HttpRequestHeader&gt;</ph> enumeration.</source>
          <target state="translated">요청 헤더의 전체 목록은 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Net.HttpRequestHeader&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UserHostName">
          <source>The following code example demonstrates using this property.</source>
          <target state="translated">다음 코드 예제에서는이 속성을 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.UserLanguages">
          <source>Gets the natural languages that are preferred for the response.</source>
          <target state="translated">응답에 대해 기본 설정된 자연 언어를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UserLanguages">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> array that contains the languages specified in the request's <ph id="ph2">&lt;see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /&gt;</ph> header or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the client request did not include an <ph id="ph4">&lt;see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /&gt;</ph> header.</source>
          <target state="translated">요청의 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 헤더에 지정된 언어가 들어 있는 <ph id="ph2">&lt;see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /&gt;</ph> 배열이거나, 클라이언트 요청에 <ph id="ph4">&lt;see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /&gt;</ph> 헤더가 포함되지 않은 경우 <ph id="ph3">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UserLanguages">
          <source>For a detailed description of the <ph id="ph1">`Accept-Language`</ph> header, see RFC 2616 Section 14.4, available at <bpt id="p1">[</bpt><ph id="ph2">https://www.rfc-editor.org</ph><ept id="p1">](https://www.rfc-editor.org/)</ept>.</source>
          <target state="translated">에 대 한 자세한 설명은 <ph id="ph1">`Accept-Language`</ph> 헤더에서 사용할 수 있는 14.4 RFC 2616 섹션을 참조 <bpt id="p1">[</bpt> <ph id="ph2">https://www.rfc-editor.org</ph> <ept id="p1">](https://www.rfc-editor.org/)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UserLanguages">
          <source>For a complete list of request headers, see the <ph id="ph1">&lt;xref:System.Net.HttpRequestHeader&gt;</ph> enumeration.</source>
          <target state="translated">요청 헤더의 전체 목록은 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Net.HttpRequestHeader&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UserLanguages">
          <source>The following code example displays the languages from the request's <ph id="ph1">`Accept-Language`</ph> header.</source>
          <target state="translated">다음 코드 예제에서는 표시 된 요청에서 언어 <ph id="ph1">`Accept-Language`</ph> 헤더입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>