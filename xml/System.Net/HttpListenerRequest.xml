<Type Name="HttpListenerRequest" FullName="System.Net.HttpListenerRequest">
  <TypeSignature Language="C#" Value="public sealed class HttpListenerRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpListenerRequest extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.HttpListenerRequest" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpListenerRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpListenerRequest sealed" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.HttpListener</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2d28a-101"><see cref="T:System.Net.HttpListener" /> 개체에 대한 들어오는 HTTP 요청을 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-101">Describes an incoming HTTP request to an <see cref="T:System.Net.HttpListener" /> object.</span></span> <span data-ttu-id="2d28a-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d28a-103">때 클라이언트에서 요청 하는 식별자 URI (Uniform Resource)에 의해 처리는 <xref:System.Net.HttpListener> 개체는 <xref:System.Net.HttpListener> 제공는 <xref:System.Net.HttpListenerContext> 보낸 사람, 요청을 클라이언트로 보내는 응답에 대 한 정보를 포함 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-103">When a client makes a request to a Uniform Resource Identifier (URI) handled by an <xref:System.Net.HttpListener> object, the <xref:System.Net.HttpListener> provides a <xref:System.Net.HttpListenerContext> object that contains information about the sender, the request, and the response that is sent to the client.</span></span> <span data-ttu-id="2d28a-104"><xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType> 속성에서 반환 된 <xref:System.Net.HttpListenerRequest> 요청을 설명 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-104">The <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType> property returns the <xref:System.Net.HttpListenerRequest> object that describes the request.</span></span>  
  
 <span data-ttu-id="2d28a-105"><xref:System.Net.HttpListenerRequest> 요청 같은 요청에 대 한 정보를 포함 하는 개체 <xref:System.Net.HttpListenerRequest.HttpMethod%2A> 문자열 <xref:System.Net.HttpListenerRequest.UserAgent%2A> 문자열 및 요청 본문 데이터 (참조는 <xref:System.Net.HttpListenerRequest.InputStream%2A> 속성).</span><span class="sxs-lookup"><span data-stu-id="2d28a-105">The <xref:System.Net.HttpListenerRequest> object contains information about the request, such as the request <xref:System.Net.HttpListenerRequest.HttpMethod%2A> string, <xref:System.Net.HttpListenerRequest.UserAgent%2A> string, and request body data (see the <xref:System.Net.HttpListenerRequest.InputStream%2A> property).</span></span>  
  
 <span data-ttu-id="2d28a-106">요청에 회신할 가져와야 사용 하 여 연결 된 응답의 <xref:System.Net.HttpListenerContext.Response%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-106">To reply to the request, you must get the associated response using the <xref:System.Net.HttpListenerContext.Response%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d28a-107">수신 및 대응 하는 방법은 다음 코드 예제는 <xref:System.Net.HttpListenerRequest>합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-107">The following code example demonstrates how to receive and respond to a <xref:System.Net.HttpListenerRequest>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.HttpListener" />
    <altmember cref="T:System.Net.HttpListenerContext" />
    <altmember cref="T:System.Net.HttpListenerResponse" />
  </Docs>
  <Members>
    <Member MemberName="AcceptTypes">
      <MemberSignature Language="C#" Value="public string[] AcceptTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AcceptTypes" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.AcceptTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AcceptTypes As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AcceptTypes { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d28a-108">클라이언트에서 받아들일 수 있는 MIME 형식을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-108">Gets the MIME types accepted by the client.</span></span></summary>
        <value><span data-ttu-id="2d28a-109">요청의 <see langword="Accept" /> 헤더에 지정된 형식 이름이 들어 있는 <see cref="T:System.String" /> 배열이거나, 클라이언트 요청에 <see langword="null" /> 헤더가 포함되어 있지 않은 경우 <see langword="Accept" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-109">A <see cref="T:System.String" /> array that contains the type names specified in the request's <see langword="Accept" /> header or <see langword="null" /> if the client request did not include an <see langword="Accept" /> header.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d28a-110">`Accept` 헤더는 문자열 MIME Multipurpose Internet Mail Extensions () 공백으로 구분 된 형식 이름입니다 (예를 들어 `image/jpeg`), 허용 및 응답에 처리 하도록 준비 되어 클라이언트 MIME 형식을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-110">The `Accept` header is a string of space-separated Multipurpose Internet Mail Extensions (MIME) type names (for example, `image/jpeg`), which indicate the MIME types that the client is prepared to accept and process in a response.</span></span> <span data-ttu-id="2d28a-111">`*/*` 항목 클라이언트 모든 MIME 형식을 하는지를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-111">The `*/*` entry indicates that the client accepts any MIME type.</span></span> <span data-ttu-id="2d28a-112">에 대 한 자세한 설명은 `Accept` 헤더에서 사용할 수 있는 RFC 2616 참조 [ https://www.rfc-editor.org ](https://www.rfc-editor.org/)합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-112">For a detailed description of the `Accept` header, see RFC 2616, available at [https://www.rfc-editor.org](https://www.rfc-editor.org/).</span></span>  
  
 <span data-ttu-id="2d28a-113">요청 헤더의 전체 목록은 참조 하십시오.는 <xref:System.Net.HttpRequestHeader> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-113">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d28a-114">다음 코드 예제에서는이 속성을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-114">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="BeginGetClientCertificate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginGetClientCertificate (AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginGetClientCertificate(class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginGetClientCertificate (requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginGetClientCertificate(AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="requestCallback"><span data-ttu-id="2d28a-115">작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-115">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="2d28a-116">작업에 대한 정보가 들어 있는 사용자 정의 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-116">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="2d28a-117">이 개체는 작업이 완료되면 콜백 대리자에 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-117">This object is passed to the callback delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="2d28a-118">클라이언트의 X.509 v.3 인증서에 대한 비동기 요청을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-118">Begins an asynchronous request for the client's X.509 v.3 certificate.</span></span></summary>
        <returns><span data-ttu-id="2d28a-119">작업의 상태를 나타내는 <see cref="T:System.IAsyncResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-119">An <see cref="T:System.IAsyncResult" /> that indicates the status of the operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificateError">
      <MemberSignature Language="C#" Value="public int ClientCertificateError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ClientCertificateError" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ClientCertificateError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificateError As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ClientCertificateError { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d28a-120">클라이언트에서 제공한 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" />와 관련된 문제를 식별하는 오류 코드를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-120">Gets an error code that identifies a problem with the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> provided by the client.</span></span></summary>
        <value><span data-ttu-id="2d28a-121">Windows 오류 코드가 들어 있는 <see cref="T:System.Int32" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-121">An <see cref="T:System.Int32" /> value that contains a Windows error code.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d28a-122">이 속성에서에서 보안 채널 (Schannel) 보안 지원 공급자 인터페이스 (SSPI), 인증서를 확인 하는 데 사용 되는 반환 된 오류는 Windows 오류 코드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-122">This property contains a Windows error code returned by the Secure Channel (Schannel) Security Support Provider Interface (SSPI), which is used to validate the certificate.</span></span> <span data-ttu-id="2d28a-123">Schannel SSPI 지원에 대 한 자세한 내용은 "만들기는 보안 연결 사용 하 여 Schannel"에서 보안 설명서의 참조 [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library)합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-123">For more information about SSPI support for Schannel, see "Creating a Secure Connection Using Schannel" in the Security documentation at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d28a-124">다음 코드 예제에서는 요청에 유효한 클라이언트 인증서가 포함 되어 있는지 여부를 결정 하려면이 속성을 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-124">The following code example checks this property to determine whether the request includes a valid client certificate.</span></span>  
  
 [!code-csharp[NCLListener#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLListener/CS/sample.cs#3)]
 [!code-vb[NCLListener#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLListener/vb/sample.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2d28a-125"><see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /> 또는 <see cref="M:System.Net.HttpListenerRequest.GetClientCertificate" /> 메서드에 대한 호출에 의해 아직 클라이언트 인증서가 초기화되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-125">The client certificate has not been initialized yet by a call to the <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /> or <see cref="M:System.Net.HttpListenerRequest.GetClientCertificate" /> methods</span></span>  
  
 <span data-ttu-id="2d28a-126">또는</span><span class="sxs-lookup"><span data-stu-id="2d28a-126">-or -</span></span>  
  
 <span data-ttu-id="2d28a-127">작업이 아직 진행 중입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-127">The operation is still in progress.</span></span></exception>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="ContentEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding ContentEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding ContentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ContentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ ContentEncoding { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d28a-128">요청과 함께 전송된 데이터에 사용할 수 있는 콘텐츠 인코딩을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-128">Gets the content encoding that can be used with data sent with the request</span></span></summary>
        <value><span data-ttu-id="2d28a-129"><see cref="T:System.Text.Encoding" /> 속성의 데이터와 함께 사용하는 데 적합한 <see cref="P:System.Net.HttpListenerRequest.InputStream" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-129">An <see cref="T:System.Text.Encoding" /> object suitable for use with the data in the <see cref="P:System.Net.HttpListenerRequest.InputStream" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d28a-130"><xref:System.Text.Encoding> 개체를 사용 하 여 바이트 시퀀스 문자 집합 (코드 페이지) 및 문자를 바이트 시퀀스로 변환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-130">An <xref:System.Text.Encoding> object can be used to convert byte sequences into character sets (code pages) and characters into byte sequences.</span></span> <span data-ttu-id="2d28a-131">문자 집합 값을 사용 하는이 속성은 `Content-Type` 인코딩을 결정 하는 헤더입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-131">This property uses the charset value from the `Content-Type` header to determine the encoding.</span></span> <span data-ttu-id="2d28a-132">이 속성을 반환 하는 경우 해당 정보를 사용할 수 없는 <xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-132">If that information is not available, this property returns <xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d28a-133">다음 코드 예제는 <xref:System.Net.HttpListenerRequest.ContentEncoding%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-133">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.ContentEncoding%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="ContentLength64">
      <MemberSignature Language="C#" Value="public long ContentLength64 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentLength64" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ContentLength64" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentLength64 As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ContentLength64 { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d28a-134">요청에 포함된 본문 데이터의 길이를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-134">Gets the length of the body data included in the request.</span></span></summary>
        <value><span data-ttu-id="2d28a-135">요청의 <see langword="Content-Length" /> 헤더에서 가져온 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-135">The value from the request's <see langword="Content-Length" /> header.</span></span> <span data-ttu-id="2d28a-136">콘텐츠 길이를 알 수 없으면 이 값은 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-136">This value is -1 if the content length is not known.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d28a-137">`Content-Length` 헤더에 따라 요청을 함께 제공 되는 본문 데이터의 길이 (바이트)를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-137">The `Content-Length` header expresses the length, in bytes, of the body data that accompanies the request.</span></span>  
  
 <span data-ttu-id="2d28a-138">요청 헤더의 전체 목록은 참조 하십시오.는 <xref:System.Net.HttpRequestHeader> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-138">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d28a-139">다음 코드 예제에서는 <xref:System.Net.HttpListenerRequest.ContentLength64%2A> 본문 데이터를 처리 하는 동안 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-139">The following code example uses the <xref:System.Net.HttpListenerRequest.ContentLength64%2A> property while processing body data.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d28a-140">요청에 포함된 본문 데이터의 MIME 형식을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-140">Gets the MIME type of the body data included in the request.</span></span></summary>
        <value><span data-ttu-id="2d28a-141">요청의 <see langword="Content-Type" /> 헤더 텍스트가 들어 있는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-141">A <see cref="T:System.String" /> that contains the text of the request's <see langword="Content-Type" /> header.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d28a-142">본문 데이터의 MIME Multipurpose Internet Mail Extensions () 형식을 선언 클라이언트 요청에서 본문 데이터를 포함 하는 경우는 `Content-Type` 헤더입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-142">If a client includes body data in a request, it declares the Multipurpose Internet Mail Extensions (MIME) type of the body data in the `Content-Type` header.</span></span> <span data-ttu-id="2d28a-143">사용 하 여 웹 폼에서 데이터의 기본 MIME 형식을 반환 하는 예를 들어는 `POST` 방법은 `application/x-www-form-urlencoded`합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-143">For example, the default MIME type of data returned from a Web form using the `POST` method is `application/x-www-form-urlencoded`.</span></span>  
  
 <span data-ttu-id="2d28a-144">요청 헤더의 전체 목록은 참조 하십시오.는 <xref:System.Net.HttpRequestHeader> 열거형 및에서 사용할 수 있는 RFC 2616 [ https://www.rfc-editor.org ](https://www.rfc-editor.org/)합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-144">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration and RFC 2616, available at [https://www.rfc-editor.org](https://www.rfc-editor.org/).</span></span>  
  
 <span data-ttu-id="2d28a-145"><xref:System.Net.HttpListenerRequest.ContentType%2A> 이 null 없는 `Content-Type` 요청의 헤더입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-145">The <xref:System.Net.HttpListenerRequest.ContentType%2A> is null when there is no `Content-Type` header in the request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d28a-146">다음 코드 예제에서는이 속성을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-146">The following code example demonstrates how to use this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="Cookies">
      <MemberSignature Language="C#" Value="public System.Net.CookieCollection Cookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.CookieCollection Cookies" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.Cookies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cookies As CookieCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::CookieCollection ^ Cookies { System::Net::CookieCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.CookieCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d28a-147">요청과 함께 전송된 쿠키를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-147">Gets the cookies sent with the request.</span></span></summary>
        <value><span data-ttu-id="2d28a-148">요청과 함께 전송된 쿠키가 들어 있는 <see cref="T:System.Net.CookieCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-148">A <see cref="T:System.Net.CookieCollection" /> that contains cookies that accompany the request.</span></span> <span data-ttu-id="2d28a-149">요청에 쿠키가 들어 있지 않으면 이 속성은 빈 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-149">This property returns an empty collection if the request does not contain cookies.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d28a-150">쿠키는 이름/값 텍스트 데이터는 로컬 클라이언트 컴퓨터에 저장 하는 웹 서버입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-150">A cookie is name/value text data from a Web server that is stored on the local (client) computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d28a-151">다음 코드 예제에서는 요청과 함께 보낸 쿠키의 값을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-151">The following code example displays the values of cookies sent with the request.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#18](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#18)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="EndGetClientCertificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 EndGetClientCertificate (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.X509Certificates.X509Certificate2 EndGetClientCertificate(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndGetClientCertificate (asyncResult As IAsyncResult) As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::X509Certificates::X509Certificate2 ^ EndGetClientCertificate(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="2d28a-152">인증서에 대해 보류된 요청입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-152">The pending request for the certificate.</span></span></param>
        <summary><span data-ttu-id="2d28a-153">클라이언트의 X.509 v.3 인증서에 대한 비동기 요청을 끝냅니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-153">Ends an asynchronous request for the client's X.509 v.3 certificate.</span></span></summary>
        <returns><span data-ttu-id="2d28a-154">작업이 시작될 때 반환되는 <see cref="T:System.IAsyncResult" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-154">The <see cref="T:System.IAsyncResult" /> object that is returned when the operation started.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d28a-155"><paramref name="asyncResult" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="2d28a-155"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d28a-156"><see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /><paramref name="e." />을 호출하여 <paramref name="asyncResult" />를 가져오지 못한 경우</span><span class="sxs-lookup"><span data-stu-id="2d28a-156"><paramref name="asyncResult" /> was not obtained by calling <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /><paramref name="e." /></span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2d28a-157"><paramref name="asyncResult" />로 식별된 작업에 대해 이 메서드가 이미 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="2d28a-157">This method was already called for the operation identified by <paramref name="asyncResult" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetClientCertificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 GetClientCertificate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.X509Certificates.X509Certificate2 GetClientCertificate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerRequest.GetClientCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClientCertificate () As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::X509Certificates::X509Certificate2 ^ GetClientCertificate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2d28a-158">클라이언트의 X.509 v.3 인증서를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-158">Retrieves the client's X.509 v.3 certificate.</span></span></summary>
        <returns><span data-ttu-id="2d28a-159">클라이언트의 X.509 v.3 인증서가 들어 있는 <see cref="N:System.Security.Cryptography.X509Certificates" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-159">A <see cref="N:System.Security.Cryptography.X509Certificates" /> object that contains the client's X.509 v.3 certificate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d28a-160">이 메서드는 인증서가 검색 될 때까지 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-160">This method blocks until the certificate is retrieved.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2d28a-161">이 메서드를 호출하여 클라이언트의 X.509 v.3 인증서를 가져오고 있는 중이어서 이 메서드를 또 호출할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="2d28a-161">A call to this method to retrieve the client's X.509 v.3 certificate is in progress and therefore another call to this method cannot be made.</span></span></exception>
        <altmember cref="N:System.Security.Cryptography.X509Certificates" />
      </Docs>
    </Member>
    <Member MemberName="GetClientCertificateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Security.Cryptography.X509Certificates.X509Certificate2&gt; GetClientCertificateAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Security.Cryptography.X509Certificates.X509Certificate2&gt; GetClientCertificateAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerRequest.GetClientCertificateAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClientCertificateAsync () As Task(Of X509Certificate2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Security::Cryptography::X509Certificates::X509Certificate2 ^&gt; ^ GetClientCertificateAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Security.Cryptography.X509Certificates.X509Certificate2&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2d28a-162">클라이언트의 X.509 v.3 인증서를 비동기 작업으로 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-162">Retrieves the client's X.509 v.3 certificate as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="2d28a-163"><see cref="T:System.Threading.Tasks.Task`1" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-163">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span></span>  
  
 <span data-ttu-id="2d28a-164">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-164">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="2d28a-165">작업 개체의 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 속성은 클라이언트의 X.509 v.3 인증서가 포함된 <see cref="N:System.Security.Cryptography.X509Certificates" /> 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-165">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns a <see cref="N:System.Security.Cryptography.X509Certificates" /> object that contains the client's X.509 v.3 certificate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d28a-166">이 작업을 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-166">This operation will not block.</span></span> <span data-ttu-id="2d28a-167">반환 된 <xref:System.Threading.Tasks.Task%601> 개체 인증서 검색 될 때 완료 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-167">The returned <xref:System.Threading.Tasks.Task%601> object will complete when the certificate has been retrieved.</span></span>  
  
 <span data-ttu-id="2d28a-168">진행 중인 클라이언트의 X.509 v.3 인증서를 검색 하려면이 메서드를 호출 하는 경우에이 메서드 호출을 만들 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-168">If a call to this method to retrieve the client's X.509 v.3 certificate is in progress, then another call to this method cannot be made.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.Security.Cryptography.X509Certificates" />
      </Docs>
    </Member>
    <Member MemberName="HasEntityBody">
      <MemberSignature Language="C#" Value="public bool HasEntityBody { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasEntityBody" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.HasEntityBody" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasEntityBody As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasEntityBody { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d28a-169">요청에 관련된 본문 데이터가 있는지 여부를 나타내는 <see cref="T:System.Boolean" /> 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-169">Gets a <see cref="T:System.Boolean" /> value that indicates whether the request has associated body data.</span></span></summary>
        <value>
          <span data-ttu-id="2d28a-170">요청에 관련된 본문 데이터가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-170"><see langword="true" /> if the request has associated body data; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d28a-171">데이터를 사용 하 여 서버에 보내는 요청에는 `POST` 메서드, 예를 들어는 엔터티 본문이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-171">A request that sends data to the server using the `POST` method, for example, should have an entity body.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d28a-172">다음 코드 예제에서는이 속성을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-172">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Headers { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d28a-173">요청에서 보낸 헤더 이름/값 쌍의 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-173">Gets the collection of header name/value pairs sent in the request.</span></span></summary>
        <value><span data-ttu-id="2d28a-174">요청에 포함된 HTTP 헤더가 들어 있는 <see cref="T:System.Net.WebHeaderCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-174">A <see cref="T:System.Net.WebHeaderCollection" /> that contains the HTTP headers included in the request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d28a-175">요청 헤더는 메타 데이터 정보를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-175">Request headers contain metadata information.</span></span> <span data-ttu-id="2d28a-176">예를 들어 헤더는 식별자 URI (Uniform Resource)에서 클라이언트는 서버를 참조 하는 리소스의 포함 될 수 있습니다, 그리고 사용자 에이전트의 id에 소속 된 클라이언트 및 허용 가능한 MIME 응답 본문에는 데이터에 대 한 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-176">For example, headers can contain the Uniform Resource Identifier (URI) of the resource that referred the client to the server, the identity of the user agent employed by the client, and the acceptable MIME types for data in the response body.</span></span>  
  
 <span data-ttu-id="2d28a-177">요청 헤더의 전체 목록은 참조 하십시오.는 <xref:System.Net.HttpRequestHeader> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-177">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d28a-178">다음 코드 예제에서는 표시에 있는 모든 정보는 주어진 <xref:System.Net.WebHeaderCollection> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-178">The following code example displays all the information in a given <xref:System.Net.WebHeaderCollection> object.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#21](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="HttpMethod">
      <MemberSignature Language="C#" Value="public string HttpMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HttpMethod" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.HttpMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HttpMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HttpMethod { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d28a-179">클라이언트에서 지정한 HTTP 메서드를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-179">Gets the HTTP method specified by the client.</span></span></summary>
        <value><span data-ttu-id="2d28a-180">요청에 사용된 메서드가 들어 있는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-180">A <see cref="T:System.String" /> that contains the method used in the request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d28a-181">HTTP 메서드는 일반적으로 GET 또는 POST, 클라이언트에서 원하는 작업에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-181">The HTTP method is typically GET or POST, depending on the action desired by the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d28a-182">다음 코드 예제에서는이 속성을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-182">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="InputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream InputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream InputStream" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.InputStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ InputStream { System::IO::Stream ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d28a-183">클라이언트에서 보낸 본문 데이터가 들어 있는 스트림을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-183">Gets a stream that contains the body data sent by the client.</span></span></summary>
        <value><span data-ttu-id="2d28a-184">클라이언트에서 요청 본문에 보낸 바이트가 들어 있는 읽기 가능한 <see cref="T:System.IO.Stream" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-184">A readable <see cref="T:System.IO.Stream" /> object that contains the bytes sent by the client in the body of the request.</span></span> <span data-ttu-id="2d28a-185">요청과 함께 데이터를 보내지 않은 경우 이 속성은 <see cref="F:System.IO.Stream.Null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-185">This property returns <see cref="F:System.IO.Stream.Null" /> if no data is sent with the request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d28a-186">클라이언트 데이터를 전송 하는 경우 (예를 들어 HTTP를 사용 하 여 `POST` 메서드),이 메서드에 의해 반환 된 스트림이 해당 데이터를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-186">If the client transmits data (for example, using the HTTP `POST` method), the stream returned by this method contains that data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d28a-187">요청을 닫아도이 속성에서 반환 된 스트림이 닫히지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-187">Closing the request does not close the stream returned by this property.</span></span> <span data-ttu-id="2d28a-188">스트림이 필요 없는 호출 하 여 종료 해야는 <xref:System.IO.Stream.Close%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2d28a-188">When you no longer need the stream, you should close it by calling the <xref:System.IO.Stream.Close%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d28a-189">다음 코드 예제에서는이 속성을 사용 하 여 요청과 함께 전송 되는 데이터를 읽을 수를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-189">The following code example demonstrates using this property to read the data sent with a request.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="2d28a-190">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-190">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="2d28a-191">자세한 내용은 참조 [.NET Framework의 네트워크 추적](~/docs/framework/network-programming/network-tracing.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-191">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span></para>
        </block>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAuthenticated { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Always returns false")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d28a-192">이 요청을 보내는 클라이언트가 인증되었는지 여부를 나타내는 <see cref="T:System.Boolean" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-192">Gets a <see cref="T:System.Boolean" /> value that indicates whether the client sending this request is authenticated.</span></span></summary>
        <value>
          <span data-ttu-id="2d28a-193">클라이언트가 인증되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-193"><see langword="true" /> if the client was authenticated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d28a-194">응용 프로그램을 사용 하 여 클라이언트 인증 요청은 <xref:System.Net.HttpListener.AuthenticationSchemes%2A> 또는 <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-194">Your application requests client authentication using the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> or <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> property.</span></span>  
  
 <span data-ttu-id="2d28a-195">응용 프로그램에서 수신 하지는 <xref:System.Net.HttpListenerContext> 성공적으로 인증 되지 않은 클라이언트의 요청에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-195">Your application does not receive an <xref:System.Net.HttpListenerContext> for requests from clients that are not successfully authenticated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d28a-196">값을 표시 하는 다음 코드 예제는 <xref:System.Net.HttpListenerRequest.IsAuthenticated%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-196">The following code example displays the value of the <xref:System.Net.HttpListenerRequest.IsAuthenticated%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="IsLocal">
      <MemberSignature Language="C#" Value="public bool IsLocal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocal" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.IsLocal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLocal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLocal { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d28a-197">요청을 로컬 컴퓨터에서 보냈는지 여부를 나타내는 <see cref="T:System.Boolean" /> 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-197">Gets a <see cref="T:System.Boolean" /> value that indicates whether the request is sent from the local computer.</span></span></summary>
        <value>
          <span data-ttu-id="2d28a-198">요청을 제공한 <see cref="T:System.Net.HttpListener" /> 개체와 동일한 컴퓨터에서 요청이 시작되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-198"><see langword="true" /> if the request originated on the same computer as the <see cref="T:System.Net.HttpListener" /> object that provided the request; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d28a-199">응용 프로그램이이 속성을 사용 하 여 요청 로컬 컴퓨터의 경우 특별 한 처리를 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-199">Applications can use this property to perform special processing when requests are from the local computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d28a-200">다음 코드 예제는 <xref:System.Net.HttpListenerRequest.IsLocal%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-200">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.IsLocal%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="IsSecureConnection">
      <MemberSignature Language="C#" Value="public bool IsSecureConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecureConnection" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.IsSecureConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSecureConnection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSecureConnection { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d28a-201">요청을 보내는 데 사용된 TCP 연결이 SSL(Secure Sockets Layer) 프로토콜을 사용하는지 여부를 나타내는 <see cref="T:System.Boolean" /> 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-201">Gets a <see cref="T:System.Boolean" /> value that indicates whether the TCP connection used to send the request is using the Secure Sockets Layer (SSL) protocol.</span></span></summary>
        <value>
          <span data-ttu-id="2d28a-202">TCP 연결이 SSL을 사용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-202"><see langword="true" /> if the TCP connection is using SSL; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d28a-203">클라이언트 요청에서 보안 연결을 요청 하려면 다음을 사용 합니다. <xref:System.Uri.UriSchemeHttps> 대신 <xref:System.Uri.UriSchemeHttp>합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-203">To request a secure connection, the client request uses <xref:System.Uri.UriSchemeHttps> instead of <xref:System.Uri.UriSchemeHttp>.</span></span> <span data-ttu-id="2d28a-204">클라이언트가 수신 하는 경우 SSL을 사용 하 여 연결을 설정할 수 없는는 <xref:System.Net.WebException> 의 오류에 대 한 정보를 제공 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-204">If the connection cannot be established using SSL, the client receives a <xref:System.Net.WebException> that provides information about the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d28a-205">다음 코드 예제는 <xref:System.Net.HttpListenerRequest.IsSecureConnection%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-205">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.IsSecureConnection%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="IsWebSocketRequest">
      <MemberSignature Language="C#" Value="public bool IsWebSocketRequest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWebSocketRequest" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.IsWebSocketRequest" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWebSocketRequest As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWebSocketRequest { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d28a-206">TCP 연결이 WebSocket 요청인지 여부를 나타내는 <see cref="T:System.Boolean" /> 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-206">Gets a <see cref="T:System.Boolean" /> value that indicates whether the TCP connection was  a WebSocket request.</span></span></summary>
        <value><span data-ttu-id="2d28a-207"><see cref="T:System.Boolean" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-207">Returns <see cref="T:System.Boolean" />.</span></span>  
  
 <span data-ttu-id="2d28a-208">TCP 연결이 WebSocket 요청인 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-208"><see langword="true" /> if the TCP connection is a WebSocket request; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepAlive">
      <MemberSignature Language="C#" Value="public bool KeepAlive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepAlive" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.KeepAlive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeepAlive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepAlive { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d28a-209">클라이언트에서 영구 연결을 요청하는지 여부를 나타내는 <see cref="T:System.Boolean" /> 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-209">Gets a <see cref="T:System.Boolean" /> value that indicates whether the client requests a persistent connection.</span></span></summary>
        <value>
          <span data-ttu-id="2d28a-210">연결을 열린 상태로 유지해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-210"><see langword="true" /> if the connection should be kept open; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d28a-211">경우 HTTP 클라이언트와 서버 데이터를 교환 하는 짧은 시간 내에 여러 번, 영구 연결 속도가 통신을 열고 각 메시지에 대 한 TCP 연결을 닫는 데 필요한 오버 헤드를 방지할 수 있으므로 합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-211">If an HTTP client and server expect to exchange data multiple times in a short time period, a persistent connection speeds up their communications by allowing them to avoid the overhead required to open and close a TCP connection for each message.</span></span> <span data-ttu-id="2d28a-212">이 속성의 기본값은 HTTP/1.1을 사용 하는 클라이언트, `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-212">For clients using HTTP/1.1, the default value for this property is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d28a-213">다음 코드 예제에서는이 속성을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-213">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="LocalEndPoint">
      <MemberSignature Language="C#" Value="public System.Net.IPEndPoint LocalEndPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPEndPoint LocalEndPoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.LocalEndPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalEndPoint As IPEndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPEndPoint ^ LocalEndPoint { System::Net::IPEndPoint ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d28a-214">요청이 전달되는 서버 IP 주소 및 포트 번호를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-214">Get the server IP address and port number to which the request is directed.</span></span></summary>
        <value><span data-ttu-id="2d28a-215">요청이 보내지는 IP 주소를 나타내는 <see cref="T:System.Net.IPEndPoint" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-215">An <see cref="T:System.Net.IPEndPoint" /> that represents the IP address that the request is sent to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d28a-216">이 속성은 해결 될 수 있도록 하는 방법에 따라 요청에 응답 하도록 하려는 경우에 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-216">This property is useful when you want to respond to requests based on the way they are addressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d28a-217">다음 코드 예제에서는이 속성을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-217">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="ProtocolVersion">
      <MemberSignature Language="C#" Value="public Version ProtocolVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ProtocolVersion" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ProtocolVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtocolVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ ProtocolVersion { Version ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d28a-218">요청하는 클라이언트에서 사용하는 HTTP 버전을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-218">Gets the HTTP version used by the requesting client.</span></span></summary>
        <value><span data-ttu-id="2d28a-219">클라이언트의 HTTP 버전을 식별하는 <see cref="T:System.Version" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-219">A <see cref="T:System.Version" /> that identifies the client's version of HTTP.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d28a-220">다양 한 HTTP 버전의 기능에 사용할 수 있는 문서에 지정 된 [ https://www.rfc-editor.org ](https://www.rfc-editor.org/)합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-220">The capabilities of different HTTP versions are specified in the documents available at [https://www.rfc-editor.org](https://www.rfc-editor.org/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d28a-221">다음 코드 예제에서는이 속성을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-221">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="QueryString">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection QueryString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection QueryString" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.QueryString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryString As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ QueryString { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d28a-222">요청에 포함된 쿼리 문자열을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-222">Gets the query string included in the request.</span></span></summary>
        <value><span data-ttu-id="2d28a-223">요청 <see cref="T:System.Collections.Specialized.NameValueCollection" />에 포함된 쿼리 데이터가 들어 있는 <see cref="P:System.Net.HttpListenerRequest.Url" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-223">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that contains the query data included in the request <see cref="P:System.Net.HttpListenerRequest.Url" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d28a-224">URL, 쿼리 정보는 경로 정보 물음표 (?)로 구분 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-224">In a URL, the query information is separated from the path information by a question mark (?).</span></span> <span data-ttu-id="2d28a-225">이름/값 쌍은 등호 (=)로 구분 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-225">Name/value pairs are separated by an equals sign (=).</span></span> <span data-ttu-id="2d28a-226">단일 문자열로 쿼리 데이터에 액세스 하려면 가져오기는 <xref:System.Uri.Query%2A> 속성 값을는 <xref:System.Uri> 에서 반환 된 개체 <xref:System.Net.HttpListenerRequest.Url%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-226">To access the query data as a single string, get the <xref:System.Uri.Query%2A> property value from the <xref:System.Uri> object returned by <xref:System.Net.HttpListenerRequest.Url%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d28a-227">등호 기호 없이 쿼리 (예: [ http://www.contoso.com/query.htm?Name ](http://www.contoso.com/query.htm?Name) )에 추가 되는 `null` 키에서 <xref:System.Collections.Specialized.NameValueCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-227">Queries without an equal sign (example: [http://www.contoso.com/query.htm?Name](http://www.contoso.com/query.htm?Name) ) are added to the `null` key in the <xref:System.Collections.Specialized.NameValueCollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d28a-228">다음 코드 예제는 <xref:System.Net.HttpListenerRequest.QueryString%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-228">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.QueryString%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="RawUrl">
      <MemberSignature Language="C#" Value="public string RawUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RawUrl" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.RawUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RawUrl { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d28a-229">클라이언트에서 요청한 URL 정보(호스트 및 포트 제외)를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-229">Gets the URL information (without the host and port) requested by the client.</span></span></summary>
        <value><span data-ttu-id="2d28a-230">이 요청에 대한 원시 URL이 들어 있는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-230">A <see cref="T:System.String" /> that contains the raw URL for this request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d28a-231">원시 URL은 도메인 정보 다음에 URL의 일부분으로 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-231">The raw URL is defined as the part of the URL following the domain information.</span></span> <span data-ttu-id="2d28a-232">URL 문자열에 `http://www.contoso.com/articles/recent.aspx`, 원시 URL은 `/articles/recent.aspx`합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-232">In the URL string `http://www.contoso.com/articles/recent.aspx`, the raw URL is `/articles/recent.aspx`.</span></span> <span data-ttu-id="2d28a-233">있는 경우 원시 URL 쿼리 문자열을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-233">The raw URL includes the query string, if present.</span></span>  
  
 <span data-ttu-id="2d28a-234">호스트 및 포트 정보를 가져오려면는 <xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-234">To obtain the host and port information, use the <xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d28a-235">다음 코드 예제는 <xref:System.Net.HttpListenerRequest.RawUrl%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-235">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.RawUrl%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#11](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="RemoteEndPoint">
      <MemberSignature Language="C#" Value="public System.Net.IPEndPoint RemoteEndPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPEndPoint RemoteEndPoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.RemoteEndPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RemoteEndPoint As IPEndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPEndPoint ^ RemoteEndPoint { System::Net::IPEndPoint ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d28a-236">요청이 시작된 클라이언트 IP 주소 및 포트 번호를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-236">Gets the client IP address and port number from which the request originated.</span></span></summary>
        <value><span data-ttu-id="2d28a-237">요청이 시작된 IP 주소 및 포트 번호를 나타내는 <see cref="T:System.Net.IPEndPoint" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-237">An <see cref="T:System.Net.IPEndPoint" /> that represents the IP address and port number from which the request originated.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2d28a-238">다음 코드 예제에서는이 속성을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-238">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="RequestTraceIdentifier">
      <MemberSignature Language="C#" Value="public Guid RequestTraceIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid RequestTraceIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.RequestTraceIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequestTraceIdentifier As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid RequestTraceIdentifier { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Always returns Guid.Empty")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d28a-239">들어오는 HTTP 요청의 요청 식별자를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-239">Gets the request identifier of the incoming HTTP request.</span></span></summary>
        <value><span data-ttu-id="2d28a-240">HTTP 요청의 식별자가 포함된 <see cref="T:System.Guid" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-240">A <see cref="T:System.Guid" /> object that contains the identifier of the HTTP request.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceName">
      <MemberSignature Language="C#" Value="public string ServiceName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServiceName" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ServiceName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ServiceName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d28a-241">클라이언트가 요청에 대해 보낸 SPN(서비스 공급자 이름)을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-241">Gets the Service Provider Name (SPN) that the client sent on the request.</span></span></summary>
        <value><span data-ttu-id="2d28a-242">클라이언트가 요청에 대해 보낸 SPN을 포함하는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-242">A <see cref="T:System.String" /> that contains the SPN the client sent on the request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d28a-243">응용 프로그램을 사용할 수는 <xref:System.Net.HttpListenerRequest.ServiceName%2A> 속성을 사용자 지정 서비스 제공 이름 (SPN) 유효성 검사를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-243">An application could use the <xref:System.Net.HttpListenerRequest.ServiceName%2A> property to perform custom Service Provide Name (SPN) validation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.HttpListener.DefaultServiceNames" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="P:System.Net.HttpListenerRequest.TransportContext" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="TransportContext">
      <MemberSignature Language="C#" Value="public System.Net.TransportContext TransportContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.TransportContext TransportContext" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.TransportContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransportContext As TransportContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::TransportContext ^ TransportContext { System::Net::TransportContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.TransportContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d28a-244">클라이언트 요청에 대한 <see cref="T:System.Net.TransportContext" />를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-244">Gets the <see cref="T:System.Net.TransportContext" /> for the client request.</span></span></summary>
        <value><span data-ttu-id="2d28a-245">클라이언트 요청에 대한 <see cref="T:System.Net.TransportContext" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-245">A <see cref="T:System.Net.TransportContext" /> object for the client request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d28a-246"><xref:System.Net.TransportContext> 속성 채널 바인딩 토큰 (CBT)에 대 한 검색을 사용할 수는 <xref:System.Net.HttpListenerRequest> HTTPS를 사용 하 여 보냈거나 합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-246">The <xref:System.Net.TransportContext> property can be used to retrieve the channel binding token (CBT) for an <xref:System.Net.HttpListenerRequest> which was sent using HTTPS.</span></span>  
  
 <span data-ttu-id="2d28a-247">응용 프로그램을 사용할 수는 <xref:System.Net.TransportContext> 네이티브 Win32 호출 하 여 사용자 지정 인증을 수행 하는 속성 [acceptsecuritycontext가](http://go.microsoft.com/fwlink/?LinkId=147021) 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-247">An application could use the <xref:System.Net.TransportContext> property to perform custom authentication using calls to the native Win32 [AcceptSecurityContext](http://go.microsoft.com/fwlink/?LinkId=147021) function.</span></span>  
  
 <span data-ttu-id="2d28a-248">응용 프로그램에서이 채널 바인딩 토큰 CBT ()를 검색 하려고 할 경우 <xref:System.Net.HttpListenerRequest.TransportContext%2A> 사용 하 여 속성의 <xref:System.Net.TransportContext.GetChannelBinding%2A> 메서드 및 <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind> 않습니다 <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint>, 하면 <xref:System.Net.HttpListenerRequest> 를 발생 시킵니다 <xref:System.NotSupportedException>합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-248">If an application attempts to retrieve the channel binding token (CBT) from this <xref:System.Net.HttpListenerRequest.TransportContext%2A> property using the <xref:System.Net.TransportContext.GetChannelBinding%2A> method and the <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind> is not <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint>, then the <xref:System.Net.HttpListenerRequest> will throw <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="2d28a-249"><xref:System.Net.HttpListenerRequest> 재정의 <xref:System.Net.TransportContext.GetChannelBinding%2A> 내부 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-249">The <xref:System.Net.HttpListenerRequest> overrides the <xref:System.Net.TransportContext.GetChannelBinding%2A> method with an internal implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.HttpListener.DefaultServiceNames" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="P:System.Net.HttpListenerRequest.ServiceName" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public Uri Url { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Url" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.Url" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Url As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Url { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d28a-250">클라이언트에서 요청한 <see cref="T:System.Uri" /> 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-250">Gets the <see cref="T:System.Uri" /> object requested by the client.</span></span></summary>
        <value><span data-ttu-id="2d28a-251">클라이언트에서 요청한 리소스를 식별하는 <see cref="T:System.Uri" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-251">A <see cref="T:System.Uri" /> object that identifies the resource requested by the client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d28a-252"><xref:System.Net.HttpListenerRequest.Url%2A> 속성에서 사용할 수 있는 모든 정보를 가져올 수 있습니다는 <xref:System.Uri> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-252">The <xref:System.Net.HttpListenerRequest.Url%2A> property allows you to obtain all the information available from a <xref:System.Uri> object.</span></span> <span data-ttu-id="2d28a-253">Uri의 원시 텍스트만 알아야 하는 경우를 사용해는 <xref:System.Net.HttpListenerRequest.RawUrl%2A> 속성 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-253">If you need to know only the raw text of the URI request, consider using the <xref:System.Net.HttpListenerRequest.RawUrl%2A> property instead.</span></span>  
  
 <span data-ttu-id="2d28a-254"><xref:System.Net.HttpListenerRequest.Url%2A> 속성이 null이 경우는 <xref:System.Uri> 클라이언트에서 분석할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-254">The <xref:System.Net.HttpListenerRequest.Url%2A> property is null if the <xref:System.Uri> from the client could not be parsed.</span></span>  
  
 <span data-ttu-id="2d28a-255"><xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> 속성 이면 <xref:System.Net.HttpListener> 모든 퍼센트 인코딩 값이 변환 되 고 다른 정규화 단계가 수행 되는 변환된 URI 대신 원시 언 이스케이프 된 URI를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-255">The <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property indicates if <xref:System.Net.HttpListener> uses the raw unescaped URI instead of the converted URI where any percent-encoded values are converted and other normalization steps are taken.</span></span>  
  
 <span data-ttu-id="2d28a-256">때는 <xref:System.Net.HttpListener> 인스턴스 통해 요청을 받을 `http.sys` 에서 제공 하 고 URI 문자열의 인스턴스를 만들고 서비스를 `http.sys`,으로 노출 된 <xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-256">When a <xref:System.Net.HttpListener> instance receives a request through the `http.sys` service, it creates an instance of the URI string provided by `http.sys`, and exposes it as the <xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="2d28a-257">`http.sys` 서비스는 두 요청 URI 문자열을 노출 합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-257">The `http.sys` service exposes two request URI strings:</span></span>  
  
-   <span data-ttu-id="2d28a-258">원시 URI</span><span class="sxs-lookup"><span data-stu-id="2d28a-258">Raw URI</span></span>  
  
-   <span data-ttu-id="2d28a-259">변환 된 URI</span><span class="sxs-lookup"><span data-stu-id="2d28a-259">Converted URI</span></span>  
  
 <span data-ttu-id="2d28a-260">Uri의 원시는 <xref:System.Uri?displayProperty=nameWithType> HTTP 요청의 요청 줄에 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-260">The raw URI is the <xref:System.Uri?displayProperty=nameWithType> provided in the request line of a HTTP request:</span></span>  
  
 `GET /path/`  
  
 `Host: www.contoso.com`  
  
 <span data-ttu-id="2d28a-261">제공 된 URI의 원시 `http.sys` 위에서 설명한 요청은 "/ 경로 /"에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-261">The raw URI provided by `http.sys` for the request mentioned above, is "/path/".</span></span> <span data-ttu-id="2d28a-262">이 네트워크를 통해 전송 된 HTTP 동사를 다음 문자열을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-262">This represents the string following the HTTP verb as it was sent over the network.</span></span>  
  
 <span data-ttu-id="2d28a-263">`http.sys` 을 전달 해야 하는 원본 서버에서 요청을 확인 하려면 호스트 헤더 및 서비스는 HTTP 요청에서에서 제공 하는 URI를 사용 하 여 요청에 제공 된 정보에서 변환된 된 URI를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-263">The `http.sys` service creates a converted URI from the information provided in the request using the URI provided in the HTTP request line and the Host header to determine the origin server the request should be forwarded to.</span></span> <span data-ttu-id="2d28a-264">이 등록 된 URI 접두사를 사용 하 여 요청에서 정보를 비교 하 여 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-264">This is done by comparing the information from the request with a set of registered URI prefixes.</span></span> <span data-ttu-id="2d28a-265">이러한 값을 비교할 수 있도록 요청에 일부 정규화를 수행 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-265">In order to be able to compare those values, some normalization to the request needs to be done.</span></span> <span data-ttu-id="2d28a-266">위의 샘플 변환 된 URI에 대 한 것 같습니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-266">For the sample above the converted URI would be as follows:</span></span>  
  
 `http://www.contoso.com/path/`  
  
 <span data-ttu-id="2d28a-267">`http.sys` 결합 하 여 서비스는 <xref:System.Uri.Host%2A?displayProperty=nameWithType> 속성 값과 변환된 된 URI를 만드는 요청 줄에 있는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-267">The `http.sys` service combines the <xref:System.Uri.Host%2A?displayProperty=nameWithType> property value and the string in the request line to create a converted URI.</span></span> <span data-ttu-id="2d28a-268">또한 `http.sys` 및 <xref:System.Uri?displayProperty=nameWithType> 클래스도 다음을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-268">In addition, `http.sys` and the <xref:System.Uri?displayProperty=nameWithType> class also do the following:</span></span>  
  
-   <span data-ttu-id="2d28a-269">이스케이프 해제 인코딩된 모든 백분율 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-269">Un-escapes all percent encoded values.</span></span>  
  
-   <span data-ttu-id="2d28a-270">비 ASCII 문자를 utf-16 문자 표현으로 퍼센트 인코딩 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-270">Converts percent-encoded non-ASCII characters into a UTF-16 character representation.</span></span> <span data-ttu-id="2d28a-271">Note u t F-8과 ANSI/DBCS 문자가 유니코드 문자 (유니코드 %uXXXX 형식을 사용 하 여 인코딩)도 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-271">Note that UTF-8 and ANSI/DBCS characters are supported as well as Unicode characters (Unicode encoding using the %uXXXX format).</span></span>  
  
-   <span data-ttu-id="2d28a-272">경로 압축 같은 다른 정규화 단계를 실행합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-272">Executes other normalization steps, like path compression.</span></span>  
  
 <span data-ttu-id="2d28a-273">퍼센트 인코딩 값에 사용 되는 인코딩에 대 한 정보가 요청 없으므로 퍼센트 인코딩 값을 구문 분석 하 여 올바른 인코딩을 확인할 못할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-273">Since the request doesn't contain any information about the encoding used for percent-encoded values, it may not be possible to determine the correct encoding just by parsing the percent-encoded values.</span></span>  
  
 <span data-ttu-id="2d28a-274">따라서 `http.sys` 프로세스를 수정 하기 위한 두 개의 레지스트리 키를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-274">Therefore `http.sys` provides two registry keys for modifying the process:</span></span>  
  
|<span data-ttu-id="2d28a-275">레지스트리 키</span><span class="sxs-lookup"><span data-stu-id="2d28a-275">Registry Key</span></span>|<span data-ttu-id="2d28a-276">기본값</span><span class="sxs-lookup"><span data-stu-id="2d28a-276">Default Value</span></span>|<span data-ttu-id="2d28a-277">설명</span><span class="sxs-lookup"><span data-stu-id="2d28a-277">Description</span></span>|  
|------------------|-------------------|-----------------|  
|<span data-ttu-id="2d28a-278">EnableNonUTF8</span><span class="sxs-lookup"><span data-stu-id="2d28a-278">EnableNonUTF8</span></span>|<span data-ttu-id="2d28a-279">1</span><span class="sxs-lookup"><span data-stu-id="2d28a-279">1</span></span>|<span data-ttu-id="2d28a-280">0 이면 `http.sys` u t F-8로 인코딩된 Url만 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-280">If zero, `http.sys` accepts only UTF-8-encoded URLs.</span></span><br /><br /> <span data-ttu-id="2d28a-281">0이 아닌 경우 `http.sys` 도 요청에서 ANSI로 인코딩된 또는 DBCS 인코딩된 Url을 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-281">If non-zero, `http.sys` also accepts ANSI-encoded or DBCS-encoded URLs in requests.</span></span>|  
|<span data-ttu-id="2d28a-282">FavorUTF8</span><span class="sxs-lookup"><span data-stu-id="2d28a-282">FavorUTF8</span></span>|<span data-ttu-id="2d28a-283">1</span><span class="sxs-lookup"><span data-stu-id="2d28a-283">1</span></span>|<span data-ttu-id="2d28a-284">0이 아닌 경우 `http.sys` 디코딩할 URL u t F-8로 먼저 해당 변환이 실패 하 고 EnableNonUTF8 0이 아닌 경우 하려고 항상 차례로 Http.sys을 ANSI 또는 DBCS 디코딩할 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-284">If non-zero, `http.sys` always tries to decode a URL as UTF-8 first; if that conversion fails and EnableNonUTF8 is non-zero, Http.sys then tries to decode it as ANSI or DBCS.</span></span><br /><br /> <span data-ttu-id="2d28a-285">0 (및 EnableNonUTF8 0이 아닌) `http.sys` 경우 해당 ANSI 또는 DBCS; 디코딩하 려 성공 하지 못하면, 시도 u t F-8로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-285">If zero (and EnableNonUTF8 is non-zero), `http.sys` tries to decode it as ANSI or DBCS; if that is not successful, it tries a UTF-8 conversion.</span></span>|  
  
 <span data-ttu-id="2d28a-286">때 <xref:System.Net.HttpListener> 한 요청을 받으면에서 변환 된 URI를 사용 하 여 `http.sys` 대 한 입력으로 <xref:System.Net.HttpListenerRequest.Url%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-286">When <xref:System.Net.HttpListener> receives a request, it uses the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property.</span></span>  
  
 <span data-ttu-id="2d28a-287">Uri에서 문자 및 숫자 이외의 문자를 지원할 필요가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-287">There is a need for supporting characters besides characters and numbers in URIs.</span></span> <span data-ttu-id="2d28a-288">예로 고객에 대 한 고객 정보를 검색 하는 데 사용 되는 다음 URI는 번호 "1/3812":</span><span class="sxs-lookup"><span data-stu-id="2d28a-288">An example is the following URI, which is used to retrieve customer information for customer number "1/3812":</span></span>  
  
 `http://www.contoso.com/Customer('1%2F3812')/`  
  
 <span data-ttu-id="2d28a-289">Uri (%2F)에서 % 인코딩된 슬래시를 note 합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-289">Note the percent-encoded slash in the Uri (%2F).</span></span> <span data-ttu-id="2d28a-290">이 작업은 슬래시 문자 데이터 및 하지는 경로 구분 기호를 나타내므로 경우에 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-290">This is necessary, since in this case the slash character represents data and not a path delimiter.</span></span>  
  
 <span data-ttu-id="2d28a-291">Uri 생성자에 문자열을 전달 하면 다음과 같은 uri를 일으킵니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-291">Passing the string to Uri constructor will lead to the following URI:</span></span>  
  
 `http://www.contoso.com/Customer('1/3812')/`  
  
 <span data-ttu-id="2d28a-292">경로를 세그먼트로 분할 하면 다음과 같은 요소가 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-292">Splitting the path into its segments would result in the following elements:</span></span>  
  
 `Customer('1`  
  
 `3812')`  
  
 <span data-ttu-id="2d28a-293">요청을 보낸 사람 의도 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-293">This is not the intent of the sender of the request.</span></span>  
  
 <span data-ttu-id="2d28a-294">경우는 <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> 속성이 false로 설정 되어 다음 경우는 <xref:System.Net.HttpListener> 한 요청을 받으면 원시 URI에서 변환 된 URI 대신 사용 하 여 `http.sys` 대 한 입력으로 <xref:System.Net.HttpListenerRequest.Url%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-294">If the <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property is set to false, then when the <xref:System.Net.HttpListener> receives a request, it uses the raw URI instead of the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d28a-295">다음 코드 예제는 <xref:System.Net.HttpListenerRequest.Url%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-295">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.Url%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.HttpListenerElement" />
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UrlReferrer">
      <MemberSignature Language="C#" Value="public Uri UrlReferrer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri UrlReferrer" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UrlReferrer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UrlReferrer As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ UrlReferrer { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d28a-296">클라이언트를 서버에 연결시킨 리소스의 URI(Uniform Resource Identifier)를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-296">Gets the Uniform Resource Identifier (URI) of the resource that referred the client to the server.</span></span></summary>
        <value><span data-ttu-id="2d28a-297">요청의 <see cref="T:System.Uri" /> 헤더 텍스트가 들어 있는 <see cref="F:System.Net.HttpRequestHeader.Referer" /> 개체이거나, 헤더가 요청에 포함되지 않은 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-297">A <see cref="T:System.Uri" /> object that contains the text of the request's <see cref="F:System.Net.HttpRequestHeader.Referer" /> header, or <see langword="null" /> if the header was not included in the request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d28a-298">클라이언트가 요청된 된 URI에 하이퍼링크를 따라 해당 요청을 확인할 수 있습니다는 `Referrer` 는 하이퍼링크가 포함 된 리소스의 URI를 식별 하는 헤더입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-298">If a client has followed a hyperlink to the requested URI, its request might contain a `Referrer` header that identifies the URI of the resource that contained the hyperlink.</span></span>  
  
 <span data-ttu-id="2d28a-299">클라이언트를 위조 하거나 표시 하지 않도록 선택할 수는 <xref:System.Net.HttpRequestHeader.Referer> 헤더입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-299">Clients can falsify or choose not to present a <xref:System.Net.HttpRequestHeader.Referer> header.</span></span> <span data-ttu-id="2d28a-300">그러므로 <xref:System.Net.HttpListenerRequest.UrlReferrer%2A> 속성 웹 트래픽이 기본 추세를 식별 하는 데 유용할 수 있습니다; 하면 사용 하지 않아야 것 권한 부여 체계의 일부로 데이터에 대 한 액세스를 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-300">Therefore, while the <xref:System.Net.HttpListenerRequest.UrlReferrer%2A> property can be useful for identifying basic trends in Web traffic; you should not use it as part of an authorization scheme to control access to data.</span></span>  
  
 <span data-ttu-id="2d28a-301">요청 헤더의 전체 목록은 참조 하십시오.는 <xref:System.Net.HttpRequestHeader> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-301">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
 <span data-ttu-id="2d28a-302"><xref:System.Net.HttpListenerRequest.UrlReferrer%2A> 이 null 없는 `Referrer` 요청의 헤더 또는 때는 `Referrer` 헤더는 요청에 포함 되어 있지만 유효한 구문 분석 하지 않습니다 <xref:System.Uri>합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-302">The <xref:System.Net.HttpListenerRequest.UrlReferrer%2A> is null when there is no `Referrer` header in the request or when the `Referrer` header is present in the request but does not parse to a valid <xref:System.Uri>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d28a-303">다음 코드 예제에서는이 속성을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-303">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UserAgent">
      <MemberSignature Language="C#" Value="public string UserAgent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserAgent" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UserAgent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserAgent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserAgent { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d28a-304">클라이언트에서 표시한 사용자 에이전트를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-304">Gets the user agent presented by the client.</span></span></summary>
        <value><span data-ttu-id="2d28a-305">요청의 <see langword="User-Agent" /> 헤더 텍스트가 들어 있는 <see cref="T:System.String" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-305">A <see cref="T:System.String" /> object that contains the text of the request's <see langword="User-Agent" /> header.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d28a-306">`User-Agent` 헤더에서 요청을 생성 하는 데 사용 되는 소프트웨어의 이름 및 버전 번호를 식별 하는 텍스트는 일반적으로 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-306">The `User-Agent` header typically contains text that identifies the name and version number of the software used to generate the request.</span></span>  
  
 <span data-ttu-id="2d28a-307">요청 헤더의 전체 목록은 참조 하십시오.는 <xref:System.Net.HttpRequestHeader> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-307">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
 <span data-ttu-id="2d28a-308"><xref:System.Net.HttpListenerRequest.UserAgent%2A> 이 null 없는 `User-Agent` 요청의 헤더입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-308">The <xref:System.Net.HttpListenerRequest.UserAgent%2A> is null when there is no `User-Agent` header in the request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d28a-309">다음 코드 예제에서는이 속성을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-309">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UserHostAddress">
      <MemberSignature Language="C#" Value="public string UserHostAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostAddress" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UserHostAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserHostAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserHostAddress { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d28a-310">요청이 전달되는 서버 IP 주소 및 포트 번호를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-310">Gets the server IP address and port number to which the request is directed.</span></span></summary>
        <value><span data-ttu-id="2d28a-311">호스트 주소 정보가 들어 있는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-311">A <see cref="T:System.String" /> that contains the host address information.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d28a-312">이 속성에서 반환 되는 정보는 에서도 사용할 수는 <xref:System.Net.HttpListenerRequest.LocalEndPoint%2A> 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-312">The information returned by this property is also available in the <xref:System.Net.HttpListenerRequest.LocalEndPoint%2A> property value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d28a-313">다음 코드 예제에서는이 속성의 값을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-313">The following code example displays the value of this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UserHostName">
      <MemberSignature Language="C#" Value="public string UserHostName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostName" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UserHostName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserHostName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserHostName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d28a-314">DNS 이름과 클라이언트에서 지정한 포트 번호(제공된 경우)를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-314">Gets the DNS name and, if provided, the port number specified by the client.</span></span></summary>
        <value><span data-ttu-id="2d28a-315">요청의 <see langword="Host" /> 헤더 텍스트가 들어 있는 <see cref="T:System.String" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-315">A <see cref="T:System.String" /> value that contains the text of the request's <see langword="Host" /> header.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d28a-316">`Host` 헤더는 요청 된 서버 호스트 이름이 들어 콜론으로 구분을 지정 하는 경우 포트 번호 (예를 들어 `www.contoso.com:8080`).</span><span class="sxs-lookup"><span data-stu-id="2d28a-316">The `Host` header contains the requested server host name and port number, if specified, separated by a colon (for example, `www.contoso.com:8080`).</span></span>  
  
 <span data-ttu-id="2d28a-317">이 속성을 사용 하 여 요청에 지정 된 호스트 이름에 따라 서로 다른 응답을 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-317">You can use this property to return different responses depending on the host name specified in the request.</span></span>  
  
 <span data-ttu-id="2d28a-318">요청 헤더의 전체 목록은 참조 하십시오.는 <xref:System.Net.HttpRequestHeader> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-318">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d28a-319">다음 코드 예제에서는이 속성을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-319">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UserLanguages">
      <MemberSignature Language="C#" Value="public string[] UserLanguages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] UserLanguages" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UserLanguages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserLanguages As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ UserLanguages { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d28a-320">응답에 대해 기본 설정된 자연 언어를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-320">Gets the natural languages that are preferred for the response.</span></span></summary>
        <value><span data-ttu-id="2d28a-321">요청의 <see cref="T:System.String" /> 헤더에 지정된 언어가 들어 있는 <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /> 배열이거나, 클라이언트 요청에 <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /> 헤더가 포함되지 않은 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-321">A <see cref="T:System.String" /> array that contains the languages specified in the request's <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /> header or <see langword="null" /> if the client request did not include an <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /> header.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d28a-322">에 대 한 자세한 설명은 `Accept-Language` 헤더에서 사용할 수 있는 14.4 RFC 2616 섹션을 참조 [ https://www.rfc-editor.org ](https://www.rfc-editor.org/)합니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-322">For a detailed description of the `Accept-Language` header, see RFC 2616 Section 14.4, available at [https://www.rfc-editor.org](https://www.rfc-editor.org/).</span></span>  
  
 <span data-ttu-id="2d28a-323">요청 헤더의 전체 목록은 참조 하십시오.는 <xref:System.Net.HttpRequestHeader> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-323">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d28a-324">다음 코드 예제에서는 표시 된 요청에서 언어 `Accept-Language` 헤더입니다.</span><span class="sxs-lookup"><span data-stu-id="2d28a-324">The following code example displays the languages from the request's `Accept-Language` header.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
  </Members>
</Type>