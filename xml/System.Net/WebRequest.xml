<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WebRequest.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54b7adbafa75eb510ecc590f90854c11f33013f8d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4b7adbafa75eb510ecc590f90854c11f33013f8d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.WebRequest">
          <source>Makes a request to a Uniform Resource Identifier (URI).</source>
          <target state="translated">URI(Uniform Resource Identifier)에 대한 요청을 만듭니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Net.WebRequest">
          <source>This is an <ph id="ph1">&lt;see langword="abstract" /&gt;</ph> class.</source>
          <target state="translated">이 클래스는 <ph id="ph1">&lt;see langword="abstract" /&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebRequest">
          <source><ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> is the <ph id="ph2">`abstract`</ph> base class for .NET's request/response model for accessing data from the Internet.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 이 <ph id="ph2">`abstract`</ph> 기본 클래스입니다. 인터넷에서 데이터에 액세스 하기 위한 NET의 요청/응답 모델입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebRequest">
          <source>An application that uses the request/response model can request data from the Internet in a protocol-agnostic manner, in which the application works with instances of the <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> class while protocol-specific descendant classes carry out the details of the request.</source>
          <target state="translated">요청/응답 모델을 사용 하는 응용 프로그램의 인스턴스와 응용 프로그램 동작 하는 프로토콜을 알 수 없는 방식으로 인터넷에서 데이터를 요청할 수는 <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 프로토콜 관련 하위 클래스의 세부 정보를 수행 하는 동안 클래스 요청입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebRequest">
          <source>Requests are sent from an application to a particular URI, such as a Web page on a server.</source>
          <target state="translated">요청 응용 프로그램에서 서버에 웹 페이지와 같은 특정 URI로 전송 됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebRequest">
          <source>The URI determines the proper descendant class to create from a list of <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> descendants registered for the application.</source>
          <target state="translated">목록에서 만들려는 적절 한 하위 클래스를 결정 하는 URI <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 응용 프로그램에 대해 등록 된 하위 항목입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebRequest">
          <source><ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> descendants are typically registered to handle a specific protocol, such as HTTP or FTP, but can be registered to handle a request to a specific server or path on a server.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 하위 항목은 일반적으로 HTTP 또는 FTP와 같은 특정 프로토콜을 처리 하도록 등록 되어 있지만 서버에서 경로 또는 특정 서버에 요청을 처리 하도록 등록할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebRequest">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> class throws a <ph id="ph2">&lt;xref:System.Net.WebException&gt;</ph> when errors occur while accessing an Internet resource.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> throw 클래스는 <ph id="ph2">&lt;xref:System.Net.WebException&gt;</ph> 인터넷 리소스에 액세스 하는 동안 오류가 발생 한 경우.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebRequest">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> property is one of the <ph id="ph2">&lt;xref:System.Net.WebExceptionStatus&gt;</ph> values that indicates the source of the error.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> 속성은 중 하나는 <ph id="ph2">&lt;xref:System.Net.WebExceptionStatus&gt;</ph> 오류의 출처를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebRequest">
          <source>When <ph id="ph1">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> is <ph id="ph2">&lt;xref:System.Net.WebExceptionStatus.ProtocolError?displayProperty=nameWithType&gt;</ph>, the <ph id="ph3">&lt;xref:System.Net.WebException.Response%2A&gt;</ph> property contains the <ph id="ph4">&lt;xref:System.Net.WebResponse&gt;</ph> received from the Internet resource.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> 은 <ph id="ph2">&lt;xref:System.Net.WebExceptionStatus.ProtocolError?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.WebException.Response%2A&gt;</ph> 속성에 포함 된 <ph id="ph4">&lt;xref:System.Net.WebResponse&gt;</ph> 인터넷 리소스에서 받은 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebRequest">
          <source>Because the <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> class is an <ph id="ph2">`abstract`</ph> class, the actual behavior of <ph id="ph3">&lt;xref:System.Net.WebRequest&gt;</ph> instances at run time is determined by the descendant class returned by <ph id="ph4">&lt;xref:System.Net.WebRequest.Create%2A&gt;</ph> method.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 클래스는는 <ph id="ph2">`abstract`</ph> 클래스의 실제 동작이 <ph id="ph3">&lt;xref:System.Net.WebRequest&gt;</ph> 인스턴스 실행 시 반환 된 하위 항목 클래스에 의해 결정 됩니다 <ph id="ph4">&lt;xref:System.Net.WebRequest.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebRequest">
          <source>For more information about default values and exceptions, see the documentation for the descendant classes, such as <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.FileWebRequest&gt;</ph>.</source>
          <target state="translated">예외에 대 한 자세한 내용은 하위 항목 클래스에 대 한 설명서를와 같은 참조 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.FileWebRequest&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebRequest">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.WebRequest.Create%2A&gt;</ph> method to initialize new <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> instances.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Net.WebRequest.Create%2A&gt;</ph> 새로운 초기화 하려면 메서드 <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebRequest">
          <source>Do not use the <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> constructor.</source>
          <target state="translated">사용 하지 않는 <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebRequest">
          <source>If the application that creates the WebRequest object runs with the credentials of a Normal user, the application will not be able to access certificates installed in the local machine store unless permission has been explicitly given to the user to do so.</source>
          <target state="translated">WebRequest 개체를 만드는 응용 프로그램을 일반 사용자의 자격 증명으로 실행, 응용 프로그램 권한이 명시적으로 부여 되어 사용자에 게 작업을 수행 하려면 로컬 컴퓨터 저장소에 설치 된 인증서에 액세스할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebRequest">
          <source>The following example shows how to create a <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> instance and return the response.</source>
          <target state="translated">만드는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 인스턴스를 응답을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebRequest">
          <source>To access the requested URI or any URI that the request is redirected to.</source>
          <target state="translated">요청된 된 URI 또는 URI에는 요청을 리디렉션합니다 액세스 하려면.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebRequest">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Net.NetworkAccess.Connect" /&gt;</ph>.</source>
          <target state="translated">연관된 열거형: <ph id="ph1">&lt;see cref="F:System.Net.NetworkAccess.Connect" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebRequest">
          <source>When you inherit from <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph>, you must override the following members: <ph id="ph2">&lt;see cref="P:System.Net.WebRequest.Method" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.Net.WebRequest.RequestUri" /&gt;</ph>, <ph id="ph4">&lt;see cref="P:System.Net.WebRequest.Headers" /&gt;</ph>, <ph id="ph5">&lt;see cref="P:System.Net.WebRequest.ContentLength" /&gt;</ph>, <ph id="ph6">&lt;see cref="P:System.Net.WebRequest.ContentType" /&gt;</ph>, <ph id="ph7">&lt;see cref="P:System.Net.WebRequest.Credentials" /&gt;</ph>, <ph id="ph8">&lt;see cref="P:System.Net.WebRequest.PreAuthenticate" /&gt;</ph>, <ph id="ph9">&lt;see cref="M:System.Net.WebRequest.GetRequestStream" /&gt;</ph>, <ph id="ph10">&lt;see cref="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /&gt;</ph>, <ph id="ph11">&lt;see cref="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)" /&gt;</ph>, <ph id="ph12">&lt;see cref="M:System.Net.WebRequest.GetResponse" /&gt;</ph>, <ph id="ph13">&lt;see cref="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /&gt;</ph>, and <ph id="ph14">&lt;see cref="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)" /&gt;</ph>.</source>
          <target state="translated">상속 하는 경우 <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph>, 멤버를 재정의 해야 합니다: <ph id="ph2">&lt;see cref="P:System.Net.WebRequest.Method" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.Net.WebRequest.RequestUri" /&gt;</ph>, <ph id="ph4">&lt;see cref="P:System.Net.WebRequest.Headers" /&gt;</ph>, <ph id="ph5">&lt;see cref="P:System.Net.WebRequest.ContentLength" /&gt;</ph>, <ph id="ph6">&lt;see cref="P:System.Net.WebRequest.ContentType" /&gt;</ph>, <ph id="ph7">&lt;see cref="P:System.Net.WebRequest.Credentials" /&gt;</ph>, <ph id="ph8">&lt;see cref="P:System.Net.WebRequest.PreAuthenticate" /&gt;</ph>, <ph id="ph9">&lt;see cref="M:System.Net.WebRequest.GetRequestStream" /&gt;</ph>, <ph id="ph10">&lt;see cref="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /&gt;</ph>, <ph id="ph11">&lt;see cref="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)" /&gt;</ph> <ph id="ph12">&lt;see cref="M:System.Net.WebRequest.GetResponse" /&gt;</ph>, <ph id="ph13">&lt;see cref="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /&gt;</ph>, 및 <ph id="ph14">&lt;see cref="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebRequest">
          <source>In addition, you must provide an implementation of the <ph id="ph1">&lt;see cref="T:System.Net.IWebRequestCreate" /&gt;</ph> interface, which defines the <ph id="ph2">&lt;see cref="M:System.Net.IWebRequestCreate.Create(System.Uri)" /&gt;</ph> method used when you call <ph id="ph3">&lt;see cref="M:System.Net.WebRequest.Create(System.Uri)" /&gt;</ph>.</source>
          <target state="translated">구현을 제공 해야 하는 또한는 <ph id="ph1">&lt;see cref="T:System.Net.IWebRequestCreate" /&gt;</ph> 인터페이스를 정의 하는 <ph id="ph2">&lt;see cref="M:System.Net.IWebRequestCreate.Create(System.Uri)" /&gt;</ph> 호출할 때 사용 하는 방법 <ph id="ph3">&lt;see cref="M:System.Net.WebRequest.Create(System.Uri)" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebRequest">
          <source>You must register the class that implements the <ph id="ph1">&lt;see cref="T:System.Net.IWebRequestCreate" /&gt;</ph> interface, using the <ph id="ph2">&lt;see cref="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)" /&gt;</ph> method or the configuration file.</source>
          <target state="translated">구현 하는 클래스를 등록 해야는 <ph id="ph1">&lt;see cref="T:System.Net.IWebRequestCreate" /&gt;</ph> 인터페이스를 사용 하는 <ph id="ph2">&lt;see cref="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)" /&gt;</ph> 메서드 또는 구성 파일입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="T:System.Net.WebRequest">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.#ctor">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.WebRequest.Create%2A&gt;</ph> method to initialize new <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> instances.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Net.WebRequest.Create%2A&gt;</ph> 새로운 초기화 하려면 메서드 <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.#ctor">
          <source>Do not use the constructor.</source>
          <target state="translated">생성자를 사용 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.#ctor">
          <source>The following example shows how to create a <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> instance by calling the <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%2A&gt;</ph> method on the <ph id="ph3">&lt;xref:System.Net.WebRequest&gt;</ph> class.</source>
          <target state="translated">만드는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 호출 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%2A&gt;</ph> 에서 메서드는 <ph id="ph3">&lt;xref:System.Net.WebRequest&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> that contains the information required to serialize the new <ph id="ph2">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> instance.</source>
          <target state="translated">새 <ph id="ph2">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> 인스턴스를 serialize하는 데 필요한 정보가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that indicates the source of the serialized stream associated with the new <ph id="ph2">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> instance.</source>
          <target state="translated">새 <ph id="ph2">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> 인스턴스와 연결된 serialize된 스트림의 소스를 나타내는 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> class from the specified instances of the <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> classes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph>와 <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 클래스의 지정된 인스턴스로부터 <ph id="ph3">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>When implemented by a descendant class, this constructor implements the <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> interface for the <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> descendant.</source>
          <target state="translated">이 생성자를 구현 하는 서브 클래스에서 구현 된 경우는 <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> 에 대 한 인터페이스는 <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> 하위 항목입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Notice that an application must run in full trust mode when using serialization.</source>
          <target state="translated">Serialization을 사용 하는 경우 응용 프로그램이 완전 신뢰 모드에서 실행 해야 함을 확인 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Any attempt is made to access the constructor, when the constructor is not overridden in a descendant class.</source>
          <target state="translated">생성자가 서브클래스에서 재정의되지 않았는데 생성자에 액세스하려 할 경우</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.Abort">
          <source>Aborts the request.</source>
          <target state="translated">요청을 중단합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.Abort">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest.Abort%2A&gt;</ph> method cancels asynchronous requests to Internet resources started with the <ph id="ph2">&lt;xref:System.Net.WebRequest.BeginGetResponse%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest.Abort%2A&gt;</ph> 시작 하는 인터넷 리소스에 대 한 비동기 요청을 취소 하는 메서드는 <ph id="ph2">&lt;xref:System.Net.WebRequest.BeginGetResponse%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.Abort">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> class is an <ph id="ph2">`abstract`</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 클래스는는 <ph id="ph2">`abstract`</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.Abort">
          <source>The actual behavior of <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> instances at run time is determined by the descendant class returned by the <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">실제 동작이 <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 인스턴스 실행 시 반환 된 하위 항목 클래스에 의해 결정 됩니다는 <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.Abort">
          <source>For more information about default values and exceptions, see the documentation for the descendant classes, such as <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.FileWebRequest&gt;</ph>.</source>
          <target state="translated">예외에 대 한 자세한 내용은 하위 항목 클래스에 대 한 설명서를와 같은 참조 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.FileWebRequest&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.Abort">
          <source>Any attempt is made to access the method, when the method is not overridden in a descendant class.</source>
          <target state="translated">메서드가 서브클래스에서 재정의되지 않았는데 메서드에 액세스하려 할 경우</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Net.WebRequest.AuthenticationLevel">
          <source>Gets or sets values indicating the level of authentication and impersonation used for this request.</source>
          <target state="translated">이 요청에 사용되는 인증 및 가장 수준을 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.AuthenticationLevel">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Net.Security.AuthenticationLevel" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Security.AuthenticationLevel" /&gt;</ph> 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.AuthenticationLevel">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.AuthenticationLevel">
          <source>In mutual authentication, both the client and server present credentials to establish their identity.</source>
          <target state="translated">상호 인증에서는 클라이언트와 서버가 모두 자격 증명을 제공해야 ID를 구성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.AuthenticationLevel">
          <source>The <ph id="ph1">&lt;see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired" /&gt;</ph> and <ph id="ph2">&lt;see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested" /&gt;</ph> values are relevant for Kerberos authentication.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested" /&gt;</ph> 값은 Kerberos 인증과 관련이 있습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.AuthenticationLevel">
          <source>Kerberos authentication can be supported directly, or can be used if the Negotiate security protocol is used to select the actual security protocol.</source>
          <target state="translated">Kerberos 인증은 직접 지원될 수도 있고, 보안 협상 프로토콜을 사용하여 실제 보안 프로토콜을 선택하는 경우에 사용할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.AuthenticationLevel">
          <source>For more information about authentication protocols, see <bpt id="p1">[</bpt>Internet Authentication<ept id="p1">](http://msdn.microsoft.com/library/d342e87c-f672-4660-a513-41a2f2b80c4a)</ept>.</source>
          <target state="translated">인증 프로토콜에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>인터넷 인증<ept id="p1">](http://msdn.microsoft.com/library/d342e87c-f672-4660-a513-41a2f2b80c4a)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.AuthenticationLevel">
          <source>To determine whether mutual authentication occurred, check the <ph id="ph1">&lt;see cref="P:System.Net.WebResponse.IsMutuallyAuthenticated" /&gt;</ph> property.</source>
          <target state="translated">상호 인증이 발생했는지 여부를 확인하려면 <ph id="ph1">&lt;see cref="P:System.Net.WebResponse.IsMutuallyAuthenticated" /&gt;</ph> 속성을 확인합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.AuthenticationLevel">
          <source>If you specify the <ph id="ph1">&lt;see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired" /&gt;</ph> authentication flag value and mutual authentication does not occur, your application will receive an <ph id="ph2">&lt;see cref="T:System.IO.IOException" /&gt;</ph> with a <ph id="ph3">&lt;see cref="T:System.Net.ProtocolViolationException" /&gt;</ph> inner exception indicating that mutual authentication failed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired" /&gt;</ph> 인증 플래그 값을 지정할 경우 상호 인증이 발생하지 않으면 응용 프로그램에서는 상호 인증이 실패했음을 나타내는 내부 예외인 <ph id="ph3">&lt;see cref="T:System.Net.ProtocolViolationException" /&gt;</ph>과 함께 <ph id="ph2">&lt;see cref="T:System.IO.IOException" /&gt;</ph>이 발생합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.AuthenticationLevel">
          <source>The following code example sets the value of this property.</source>
          <target state="translated">다음 코드 예제에서는이 속성의 값을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 대리자입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>An object containing state information for this asynchronous request.</source>
          <target state="translated">이 비동기 요청에 대한 상태 정보가 들어 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>When overridden in a descendant class, provides an asynchronous version of the <ph id="ph1">&lt;see cref="M:System.Net.WebRequest.GetRequestStream" /&gt;</ph> method.</source>
          <target state="translated">서브클래스에서 재정의될 때, <ph id="ph1">&lt;see cref="M:System.Net.WebRequest.GetRequestStream" /&gt;</ph> 메서드의 비동기 버전을 제공합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous request.</source>
          <target state="translated">비동기 요청을 참조하는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest.BeginGetRequestStream%2A&gt;</ph> method starts an asynchronous request for a stream used to send data to an Internet resource.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest.BeginGetRequestStream%2A&gt;</ph> 메서드 인터넷 리소스에 데이터를 보내는 데 사용 되는 스트림에 대 한 비동기 요청을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>The callback method that implements the <ph id="ph1">&lt;xref:System.AsyncCallback&gt;</ph> delegate uses the <ph id="ph2">&lt;xref:System.Net.WebRequest.EndGetRequestStream%2A&gt;</ph> method to return the request stream.</source>
          <target state="translated">구현 하는 콜백 메서드는 <ph id="ph1">&lt;xref:System.AsyncCallback&gt;</ph> 사용 하 여 대리자는 <ph id="ph2">&lt;xref:System.Net.WebRequest.EndGetRequestStream%2A&gt;</ph> 요청 스트림을 반환 하는 메서드.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> class is an <ph id="ph2">`abstract`</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 클래스는는 <ph id="ph2">`abstract`</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>The actual behavior of <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> instances at run time is determined by the descendant class returned by the <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">실제 동작이 <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 인스턴스 실행 시 반환 된 하위 항목 클래스에 의해 결정 됩니다는 <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>For more information about default values and exceptions, see the documentation for the descendant classes, such as <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.FileWebRequest&gt;</ph>.</source>
          <target state="translated">예외에 대 한 자세한 내용은 하위 항목 클래스에 대 한 설명서를와 같은 참조 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.FileWebRequest&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Net.WebRequest.BeginGetRequestStream%2A&gt;</ph> to asynchronously obtain the request stream.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Net.WebRequest.BeginGetRequestStream%2A&gt;</ph> 요청 스트림에 비동기적으로 얻으려고 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>Any attempt is made to access the method, when the method is not overridden in a descendant class.</source>
          <target state="translated">메서드가 서브클래스에서 재정의되지 않았는데 메서드에 액세스하려 할 경우</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 대리자입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>An object containing state information for this asynchronous request.</source>
          <target state="translated">이 비동기 요청에 대한 상태 정보가 들어 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>When overridden in a descendant class, begins an asynchronous request for an Internet resource.</source>
          <target state="translated">하위 항목 클래스에서 재정의될 때, 인터넷 리소스에 대한 비동기 요청을 시작합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous request.</source>
          <target state="translated">비동기 요청을 참조하는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest.BeginGetResponse%2A&gt;</ph> method starts an asynchronous request for a response.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest.BeginGetResponse%2A&gt;</ph> 메서드는 응답에 대 한 비동기 요청을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>The callback method that implements the <ph id="ph1">&lt;xref:System.AsyncCallback&gt;</ph> delegate uses the <ph id="ph2">&lt;xref:System.Net.WebRequest.EndGetResponse%2A&gt;</ph> method to return the <ph id="ph3">&lt;xref:System.Net.WebResponse&gt;</ph> from the Internet resource.</source>
          <target state="translated">구현 하는 콜백 메서드는 <ph id="ph1">&lt;xref:System.AsyncCallback&gt;</ph> 사용 하 여 대리자는 <ph id="ph2">&lt;xref:System.Net.WebRequest.EndGetResponse%2A&gt;</ph> 반환 하는 메서드는 <ph id="ph3">&lt;xref:System.Net.WebResponse&gt;</ph> 인터넷 리소스에서 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> class is an <ph id="ph2">`abstract`</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 클래스는는 <ph id="ph2">`abstract`</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>The actual behavior of <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> instances at run time is determined by the descendant class returned by the <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">실제 동작이 <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 인스턴스 실행 시 반환 된 하위 항목 클래스에 의해 결정 됩니다는 <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>For more information about default values and exceptions, see the documentation for the descendant classes, such as <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.FileWebRequest&gt;</ph>.</source>
          <target state="translated">예외에 대 한 자세한 내용은 하위 항목 클래스에 대 한 설명서를와 같은 참조 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.FileWebRequest&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>If a WebException is thrown, use the <ph id="ph1">&lt;xref:System.Net.WebException.Response%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> properties of the exception to determine the response from the server.</source>
          <target state="translated">사용 하 여 WebException을 throw 되 면는 <ph id="ph1">&lt;xref:System.Net.WebException.Response%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> 속성의 서버에서 응답을 결정 하는 예외입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>The following example uses <ph id="ph1">&lt;xref:System.Net.WebRequest.BeginGetResponse%2A&gt;</ph> to asynchronously request the target resource.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Net.WebRequest.BeginGetResponse%2A&gt;</ph> 를 비동기적으로 대상 리소스를 요청 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>When the resource has been obtained, the specified callback method will be executed.</source>
          <target state="translated">리소스를 가져올 때 지정된 된 콜백 메서드 실행 됩니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>Any attempt is made to access the method, when the method is not overridden in a descendant class.</source>
          <target state="translated">메서드가 서브클래스에서 재정의되지 않았는데 메서드에 액세스하려 할 경우</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.Net.WebRequest.CachePolicy">
          <source>Gets or sets the cache policy for this request.</source>
          <target state="translated">이 요청에 대한 캐시 정책을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.CachePolicy">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.Cache.RequestCachePolicy" /&gt;</ph> object that defines a cache policy.</source>
          <target state="translated">캐시 정책을 정의하는 <ph id="ph1">&lt;see cref="T:System.Net.Cache.RequestCachePolicy" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.CachePolicy">
          <source>The current cache policy and the presence of the requested resource in the cache determine whether a response can be retrieved from the cache.</source>
          <target state="translated">현재 캐시 정책 및 캐시에 요청된 된 리소스의 현재 상태는 응답을 캐시에서 검색할 수 있는지 여부를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.CachePolicy">
          <source>Using cached responses usually improves application performance, but there is a risk that the response in the cache does not match the response on the server.</source>
          <target state="translated">일반적으로 캐시 된 응답이 사용 하 여 응용 프로그램 성능을 향상 시킵니다. 하지만 캐시에 응답 서버에 대 한 응답을 일치 하지 않습니다 위험이 있습니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.CachePolicy">
          <source>Default cache policy can be specified in the Machine.config configuration file or by setting the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A&gt;</ph> property for requests that use the Hypertext Transfer Protocol (HTTP) or Secure Hypertext Transfer Protocol (HTTPS) URI scheme.</source>
          <target state="translated">기본 캐시 정책을 설정 하 여 또는 Machine.config 구성 파일에 지정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A&gt;</ph> 하이퍼텍스트 전송 프로토콜 (HTTP) 또는 보안 하이퍼텍스트 전송 프로토콜 (HTTPS) URI 체계를 사용 하는 요청에 대 한 속성.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.CachePolicy">
          <source>A copy of a resource is only added to the cache if the response stream for the resource is retrieved and read to the end of the stream.</source>
          <target state="translated">리소스에 대 한 응답 스트림을 검색 하는 스트림의 끝에 대 한 읽기 경우에 리소스의 복사본을 캐시에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.CachePolicy">
          <source>So another request for the same resource could use a cached copy, depending on the cache policy level for this request.</source>
          <target state="translated">이므로 동일한 리소스에 대 한 다른 요청에는이 요청에 대 한 캐시 정책 수준에 따라 캐시 된 복사본을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.CachePolicy">
          <source>The following code example demonstrates setting the cache policy for a Web request.</source>
          <target state="translated">다음 코드 예제에서는 웹 요청에 대 한 캐시 정책을 설정 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="P:System.Net.WebRequest.ConnectionGroupName">
          <source>When overridden in a descendant class, gets or sets the name of the connection group for the request.</source>
          <target state="translated">파생 클래스에서 재정의되면 요청에 대한 연결 그룹 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.ConnectionGroupName">
          <source>The name of the connection group for the request.</source>
          <target state="translated">요청에 대한 연결 그룹 이름입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.ConnectionGroupName">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest.ConnectionGroupName%2A&gt;</ph> property associates specific requests within an application to one or more connection pools.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest.ConnectionGroupName%2A&gt;</ph> 속성 하나 이상의 연결 풀에 응용 프로그램 내에서 특정 요청을 연결 합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.ConnectionGroupName">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> class is an <ph id="ph2">`abstract`</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 클래스는는 <ph id="ph2">`abstract`</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.ConnectionGroupName">
          <source>The actual behavior of <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> instances at run time is determined by the descendant class returned by the <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">실제 동작이 <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 인스턴스 실행 시 반환 된 하위 항목 클래스에 의해 결정 됩니다는 <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.ConnectionGroupName">
          <source>For more information about default values and exceptions, see the documentation for the descendant classes, such as <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.FileWebRequest&gt;</ph>.</source>
          <target state="translated">예외에 대 한 자세한 내용은 하위 항목 클래스에 대 한 설명서를와 같은 참조 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.FileWebRequest&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="P:System.Net.WebRequest.ConnectionGroupName">
          <source>Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</source>
          <target state="translated">속성이 서브클래스에서 재정의되지 않았는데 속성을 가져오거나 설정하려 할 경우</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.ConnectionGroupName">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.WebRequest.ConnectionGroupName" /&gt;</ph> property typically associates a group of requests that share a set of credentials with a connection to an Internet resource to avoid potential security failures.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.WebRequest.ConnectionGroupName" /&gt;</ph> 속성은 일반적으로 발생할 수 있는 보안 오류를 방지 하기 위해 인터넷 리소스에 연결 된 자격 증명 집합을 공유 하는 요청의 그룹을 연결 합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.Net.WebRequest.ContentLength">
          <source>When overridden in a descendant class, gets or sets the content length of the request data being sent.</source>
          <target state="translated">하위 항목 클래스에서 재정의될 때, 전송 중인 요청 데이터의 콘텐츠 길이를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.ContentLength">
          <source>The number of bytes of request data being sent.</source>
          <target state="translated">전송 중인 요청 데이터의 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.ContentLength">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest.ContentLength%2A&gt;</ph> property contains the number of bytes of data sent to the Internet resource by the <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest.ContentLength%2A&gt;</ph> 속성 포함 하 여 인터넷 리소스에 보낸 데이터의 바이트 수는 <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.ContentLength">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> class is an <ph id="ph2">`abstract`</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 클래스는는 <ph id="ph2">`abstract`</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.ContentLength">
          <source>The actual behavior of <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> instances at run time is determined by the descendant class returned by the <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">실제 동작이 <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 인스턴스 실행 시 반환 된 하위 항목 클래스에 의해 결정 됩니다는 <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.ContentLength">
          <source>For more information about default values and exceptions, see the documentation for the descendant classes, such as <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.FileWebRequest&gt;</ph>.</source>
          <target state="translated">예외에 대 한 자세한 내용은 하위 항목 클래스에 대 한 설명서를와 같은 참조 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.FileWebRequest&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.ContentLength">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Net.WebRequest.ContentLength%2A&gt;</ph> property to the amount of bytes in the outgoing byte buffer.</source>
          <target state="translated">다음 예에서는 <ph id="ph1">&lt;xref:System.Net.WebRequest.ContentLength%2A&gt;</ph> 속성을 보내는 바이트 버퍼의 바이트의 양입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="P:System.Net.WebRequest.ContentLength">
          <source>Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</source>
          <target state="translated">속성이 서브클래스에서 재정의되지 않았는데 속성을 가져오거나 설정하려 할 경우</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="P:System.Net.WebRequest.ContentType">
          <source>When overridden in a descendant class, gets or sets the content type of the request data being sent.</source>
          <target state="translated">하위 항목 클래스에서 재정의될 때, 전송 중인 요청 데이터의 콘텐츠 형식을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.ContentType">
          <source>The content type of the request data.</source>
          <target state="translated">요청 데이터의 콘텐츠 형식입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.ContentType">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest.ContentType%2A&gt;</ph> property contains the media type of the request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest.ContentType%2A&gt;</ph> 속성 요청의 미디어 형식을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.ContentType">
          <source>This is typically the MIME encoding of the content.</source>
          <target state="translated">이 일반적으로 MIME 콘텐츠 인코딩입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.ContentType">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> class is an <ph id="ph2">`abstract`</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 클래스는는 <ph id="ph2">`abstract`</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.ContentType">
          <source>The actual behavior of <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> instances at run time is determined by the descendant class returned by the <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">실제 동작이 <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 인스턴스 실행 시 반환 된 하위 항목 클래스에 의해 결정 됩니다는 <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.ContentType">
          <source>For more information about default values and exceptions, see the documentation for the descendant classes, such as <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.FileWebRequest&gt;</ph>.</source>
          <target state="translated">예외에 대 한 자세한 내용은 하위 항목 클래스에 대 한 설명서를와 같은 참조 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.FileWebRequest&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.ContentType">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Net.WebRequest.ContentType%2A&gt;</ph> property to the appropriate media type.</source>
          <target state="translated">다음 예에서는 <ph id="ph1">&lt;xref:System.Net.WebRequest.ContentType%2A&gt;</ph> 속성을 적절 한 미디어 유형입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="P:System.Net.WebRequest.ContentType">
          <source>Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</source>
          <target state="translated">속성이 서브클래스에서 재정의되지 않았는데 속성을 가져오거나 설정하려 할 경우</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="T:System.Net.WebRequest">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph>.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph>를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.Create(System.String)">
          <source>The URI that identifies the Internet resource.</source>
          <target state="translated">인터넷 리소스를 식별하는 URI입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.Create(System.String)">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> instance for the specified URI scheme.</source>
          <target state="translated">지정된 URI 체계에 대한 새 <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.Create(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> descendant for the specific URI scheme.</source>
          <target state="translated">특정 URI 체계에 대한 <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> 하위 항목입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.Create(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest.Create%2A&gt;</ph> method returns a descendant of the <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> class determined at run time as the closest registered match for <ph id="ph3">`requestUri`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest.Create%2A&gt;</ph> 의 하위 항목을 반환 하는 메서드는 <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> 클래스에 대 한 가장 가까운 등록 된 일치 항목으로 런타임 시 결정 <ph id="ph3">`requestUri`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.Create(System.String)">
          <source>For example, when a URI beginning with <ph id="ph1">`http://`</ph> or <ph id="ph2">`https://`</ph> is passed in <ph id="ph3">`requestUri`</ph>, an <ph id="ph4">&lt;xref:System.Net.HttpWebRequest&gt;</ph> is returned by <ph id="ph5">&lt;xref:System.Net.WebRequest.Create%2A&gt;</ph>.</source>
          <target state="translated">예를 들어, 문자로 시작 하는 URI <ph id="ph1">`http://`</ph> 또는 <ph id="ph2">`https://`</ph> 전달 <ph id="ph3">`requestUri`</ph>, <ph id="ph4">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 반환한 <ph id="ph5">&lt;xref:System.Net.WebRequest.Create%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.Create(System.String)">
          <source>If a URI beginning with <ph id="ph1">`ftp://`</ph> is passed instead, the <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%2A&gt;</ph> method will return a <ph id="ph3">&lt;xref:System.Net.FtpWebRequest&gt;</ph> instance.</source>
          <target state="translated">로 시작 하는 URI <ph id="ph1">`ftp://`</ph> 대신 전달 되는 <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%2A&gt;</ph> 메서드는 반환는 <ph id="ph3">&lt;xref:System.Net.FtpWebRequest&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.Create(System.String)">
          <source>If a URI beginning with <ph id="ph1">`file://`</ph> is passed instead, the <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%2A&gt;</ph> method will return a <ph id="ph3">&lt;xref:System.Net.FileWebRequest&gt;</ph> instance.</source>
          <target state="translated">로 시작 하는 URI <ph id="ph1">`file://`</ph> 대신 전달 되는 <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%2A&gt;</ph> 메서드는 반환는 <ph id="ph3">&lt;xref:System.Net.FileWebRequest&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.Create(System.String)">
          <source>The pre-registered reserve types already registered include the following:</source>
          <target state="translated">이미 등록 되어 미리 등록 된 예약 형식은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.Create(System.String)">
          <source>.NET includes support for the <ph id="ph1">`http://`</ph>, <ph id="ph2">`https://`</ph>, <ph id="ph3">`ftp://`</ph>, and <ph id="ph4">`file://`</ph> URI schemes.</source>
          <target state="translated">.NET에 대 한 지원이 포함 되어는 <ph id="ph1">`http://`</ph>, <ph id="ph2">`https://`</ph>, <ph id="ph3">`ftp://`</ph>, 및 <ph id="ph4">`file://`</ph> URI 체계입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.Create(System.String)">
          <source>Custom <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> descendants to handle other requests are registered with the <ph id="ph2">&lt;xref:System.Net.WebRequest.RegisterPrefix%2A&gt;</ph> method.</source>
          <target state="translated">사용자 지정 <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 등록 된 다른 요청을 처리는 <ph id="ph2">&lt;xref:System.Net.WebRequest.RegisterPrefix%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.Create(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest.Create%2A&gt;</ph> method uses the <ph id="ph2">`requestUriString`</ph> parameter to create a <ph id="ph3">&lt;xref:System.Uri&gt;</ph> instance that it passes to the new <ph id="ph4">&lt;xref:System.Net.WebRequest&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest.Create%2A&gt;</ph> 메서드는 <ph id="ph2">`requestUriString`</ph> 만들려는 매개 변수는 <ph id="ph3">&lt;xref:System.Uri&gt;</ph> 로 전달 하는 새 인스턴스 <ph id="ph4">&lt;xref:System.Net.WebRequest&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.Create(System.String)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.Create(System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>&amp;#91;<ph id="ph1">\&lt;</ph>topic://conUsingNetworkTracing&gt;&amp;#93;<ept id="p1">](http://msdn.microsoft.com/library/e993b7c3-087f-45d8-9c02-9dded936d804)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt> &amp;#91; <ph id="ph1">\&lt;</ph>topic://conUsingNetworkTracing &gt;&amp;#93;<ept id="p1">](http://msdn.microsoft.com/library/e993b7c3-087f-45d8-9c02-9dded936d804)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.Create(System.String)">
          <source>The following example uses <ph id="ph1">&lt;xref:System.Net.WebRequest.Create%2A&gt;</ph> to instantiate an <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> instance.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Net.WebRequest.Create%2A&gt;</ph> 를 인스턴스화하는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.Create(System.String)">
          <source>A string representing the target URL is used as the constructor parameter.</source>
          <target state="translated">대상 URL을 표시 하는 string 생성자 매개 변수로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.Create(System.String)">
          <source>The request scheme specified in <ph id="ph1">&lt;paramref name="requestUriString" /&gt;</ph> has not been registered.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUriString" /&gt;</ph>에 지정된 요청 체계가 등록되지 않은 경우</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.Create(System.String)">
          <source><ph id="ph1">&lt;paramref name="requestUriString" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUriString" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.Create(System.String)">
          <source>The caller does not have permission to connect to the requested URI or a URI that the request is redirected to.</source>
          <target state="translated">호출자에게 요청된 URI 또는 요청이 리디렉션되는 URI에 연결할 수 있는 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.Create(System.String)">
          <source>In the <bpt id="p1">[</bpt>.NET for Windows Store apps<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> or the <bpt id="p2">[</bpt>Portable Class Library<ept id="p2">](http://msdn.microsoft.com/library/c31e1663-c164-4e65-b66d-d3aa8750a154)</ept>, catch the base class exception, <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph>, instead.</source>
          <target state="translated"><bpt id="p1">[</bpt>Windows 스토어 앱용 .NET<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> 또는 <bpt id="p2">[</bpt>이식 가능한 클래스 라이브러리<ept id="p2">](http://msdn.microsoft.com/library/c31e1663-c164-4e65-b66d-d3aa8750a154)</ept>에서 대신 기본 클래스 예외 <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph>을 catch합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.Create(System.String)">
          <source>The URI specified in <ph id="ph1">&lt;paramref name="requestUriString" /&gt;</ph> is not a valid URI.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUriString" /&gt;</ph>에 지정된 URI가 유효한 URI가 아닌 경우</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.Create(System.Uri)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> containing the URI of the requested resource.</source>
          <target state="translated">요청된 리소스의 URI가 포함된 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.Create(System.Uri)">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> instance for the specified URI scheme.</source>
          <target state="translated">지정된 URI 체계에 대한 새 <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.Create(System.Uri)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> descendant for the specified URI scheme.</source>
          <target state="translated">지정된 URI 체계에 대한 <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> 하위 항목입니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.Create(System.Uri)">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest.Create%2A&gt;</ph> method returns a descendant of the <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> class determined at run time as the closest registered match for <ph id="ph3">`requestUri`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest.Create%2A&gt;</ph> 의 하위 항목을 반환 하는 메서드는 <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> 클래스에 대 한 가장 가까운 등록 된 일치 항목으로 런타임 시 결정 <ph id="ph3">`requestUri`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.Create(System.Uri)">
          <source>For example, if you create a <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> descendant, Handler1, to handle requests to <ph id="ph2">`http://www.contoso.com/text/`</ph> and another named Handler2 to handle requests to <ph id="ph3">`http://www.contoso.com/code/`</ph>, you can use <ph id="ph4">&lt;xref:System.Net.WebRequest.Create%2A&gt;</ph> method to return the WebRequest descendant associated with either specified URI.</source>
          <target state="translated">예를 들어, 만들면는 <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 하위 Handler1, 요청을 처리 <ph id="ph2">`http://www.contoso.com/text/`</ph> Handler2 요청을 처리와 <ph id="ph3">`http://www.contoso.com/code/`</ph>를 사용할 수 있습니다 <ph id="ph4">&lt;xref:System.Net.WebRequest.Create%2A&gt;</ph> 와 관련 된 WebRequest 하위 항목을 반환 하는 메서드 지정 된 URI입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.Create(System.Uri)">
          <source>To return a descendant of the <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> class based on only the scheme portion of a URI, use the <ph id="ph2">&lt;xref:System.Net.WebRequest.CreateDefault%2A&gt;</ph> method.</source>
          <target state="translated">하위 항목을 반환 하는 <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> URI의 구성표 부분만을 기반으로 하는 클래스를 사용 하 여는 <ph id="ph2">&lt;xref:System.Net.WebRequest.CreateDefault%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.Create(System.Uri)">
          <source>For example, when a URI beginning with <ph id="ph1">`http://`</ph> or <ph id="ph2">`https://`</ph> is passed in <ph id="ph3">`requestUri`</ph>, an <ph id="ph4">&lt;xref:System.Net.HttpWebRequest&gt;</ph> is returned by <ph id="ph5">&lt;xref:System.Net.WebRequest.Create%2A&gt;</ph>.</source>
          <target state="translated">예를 들어, 문자로 시작 하는 URI <ph id="ph1">`http://`</ph> 또는 <ph id="ph2">`https://`</ph> 전달 <ph id="ph3">`requestUri`</ph>, <ph id="ph4">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 반환한 <ph id="ph5">&lt;xref:System.Net.WebRequest.Create%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.Create(System.Uri)">
          <source>If a URI beginning with <ph id="ph1">`ftp://`</ph> is passed instead, the <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%2A&gt;</ph> method will return a <ph id="ph3">&lt;xref:System.Net.FileWebRequest&gt;</ph> instance.</source>
          <target state="translated">로 시작 하는 URI <ph id="ph1">`ftp://`</ph> 대신 전달 되는 <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%2A&gt;</ph> 메서드는 반환는 <ph id="ph3">&lt;xref:System.Net.FileWebRequest&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.Create(System.Uri)">
          <source>If a URI beginning with <ph id="ph1">`file://`</ph> is passed instead, the <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%2A&gt;</ph> method will return a <ph id="ph3">&lt;xref:System.Net.FileWebRequest&gt;</ph> instance.</source>
          <target state="translated">로 시작 하는 URI <ph id="ph1">`file://`</ph> 대신 전달 되는 <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%2A&gt;</ph> 메서드는 반환는 <ph id="ph3">&lt;xref:System.Net.FileWebRequest&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.Create(System.Uri)">
          <source>The pre-registered reserve types already registered include the following:</source>
          <target state="translated">이미 등록 되어 미리 등록 된 예약 형식은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.Create(System.Uri)">
          <source>.NET includes support for the <ph id="ph1">`http://`</ph>, <ph id="ph2">`https://`</ph>, <ph id="ph3">`ftp://`</ph>, and <ph id="ph4">`file://`</ph> URI schemes.</source>
          <target state="translated">.NET에 대 한 지원이 포함 되어는 <ph id="ph1">`http://`</ph>, <ph id="ph2">`https://`</ph>, <ph id="ph3">`ftp://`</ph>, 및 <ph id="ph4">`file://`</ph> URI 체계입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.Create(System.Uri)">
          <source>Custom <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> descendants to handle other requests are registered with the <ph id="ph2">&lt;xref:System.Net.WebRequest.RegisterPrefix%2A&gt;</ph> method.</source>
          <target state="translated">사용자 지정 <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 등록 된 다른 요청을 처리는 <ph id="ph2">&lt;xref:System.Net.WebRequest.RegisterPrefix%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.Create(System.Uri)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.Create(System.Uri)">
          <source>For more information, see <bpt id="p1">[</bpt>&amp;#91;<ph id="ph1">\&lt;</ph>topic://conUsingNetworkTracing&gt;&amp;#93;<ept id="p1">](http://msdn.microsoft.com/library/e993b7c3-087f-45d8-9c02-9dded936d804)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt> &amp;#91; <ph id="ph1">\&lt;</ph>topic://conUsingNetworkTracing &gt;&amp;#93;<ept id="p1">](http://msdn.microsoft.com/library/e993b7c3-087f-45d8-9c02-9dded936d804)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.Create(System.Uri)">
          <source>The following example uses <ph id="ph1">&lt;xref:System.Net.WebRequest.Create%2A&gt;</ph> to instantiate an <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> instance.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Net.WebRequest.Create%2A&gt;</ph> 를 인스턴스화하는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.Create(System.Uri)">
          <source>A Uri representing the target URL is used as the constructor parameter.</source>
          <target state="translated">대상 URL을 나타내는 Uri 생성자 매개 변수로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.Create(System.Uri)">
          <source>The request scheme specified in <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is not registered.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph>에서 지정된 요청 체계가 등록되어 있지 않은 경우</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.Create(System.Uri)">
          <source><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.Create(System.Uri)">
          <source>The caller does not have permission to connect to the requested URI or a URI that the request is redirected to.</source>
          <target state="translated">호출자에게 요청된 URI 또는 요청이 리디렉션되는 URI에 연결할 수 있는 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.CreateDefault(System.Uri)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> containing the URI of the requested resource.</source>
          <target state="translated">요청된 리소스의 URI가 포함된 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.CreateDefault(System.Uri)">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> instance for the specified URI scheme.</source>
          <target state="translated">지정된 URI 체계에 대한 새 <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.CreateDefault(System.Uri)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> descendant for the specified URI scheme.</source>
          <target state="translated">지정된 URI 체계에 대한 <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> 하위 항목입니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.CreateDefault(System.Uri)">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest.CreateDefault%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> descendant instance based on only the scheme portion of a URI.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest.CreateDefault%2A&gt;</ph> 메서드가 반환 되는 <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> 하위 인스턴스는 URI의 구성표 부분에만 기반으로 합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.CreateDefault(System.Uri)">
          <source>For example, when a URI beginning with <ph id="ph1">`http://`</ph> is passed in <ph id="ph2">`requestUri`</ph>, an <ph id="ph3">&lt;xref:System.Net.HttpWebRequest&gt;</ph> is returned by <ph id="ph4">&lt;xref:System.Net.WebRequest.CreateDefault%2A&gt;</ph>.</source>
          <target state="translated">예를 들어, 문자로 시작 하는 URI <ph id="ph1">`http://`</ph> 전달 <ph id="ph2">`requestUri`</ph>, <ph id="ph3">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 반환한 <ph id="ph4">&lt;xref:System.Net.WebRequest.CreateDefault%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.CreateDefault(System.Uri)">
          <source>If a URI beginning with <ph id="ph1">`file://`</ph> is passed instead, the <ph id="ph2">&lt;xref:System.Net.WebRequest.CreateDefault%2A&gt;</ph> method will return a <ph id="ph3">&lt;xref:System.Net.FileWebRequest&gt;</ph>.</source>
          <target state="translated">로 시작 하는 URI <ph id="ph1">`file://`</ph> 대신 전달 되는 <ph id="ph2">&lt;xref:System.Net.WebRequest.CreateDefault%2A&gt;</ph> 메서드는 반환는 <ph id="ph3">&lt;xref:System.Net.FileWebRequest&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.CreateDefault(System.Uri)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.CreateDefault(System.Uri)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in .NET<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>.NET에 네트워크 추적<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.CreateDefault(System.Uri)">
          <source>The request scheme specified in <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is not registered.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph>에서 지정된 요청 체계가 등록되어 있지 않은 경우</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.CreateDefault(System.Uri)">
          <source><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.CreateDefault(System.Uri)">
          <source>The caller does not have permission to connect to the requested URI or a URI that the request is redirected to.</source>
          <target state="translated">호출자에게 요청된 URI 또는 요청이 리디렉션되는 URI에 연결할 수 있는 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="T:System.Net.WebRequest">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.Net.HttpWebRequest" /&gt;</ph> instance for the specified URI.</source>
          <target state="translated">지정된 URI에 대한 새 <ph id="ph1">&lt;see cref="T:System.Net.HttpWebRequest" /&gt;</ph> 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.CreateHttp(System.String)">
          <source>A URI string that identifies the Internet resource.</source>
          <target state="translated">인터넷 리소스를 식별하는 URI 문자열입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.CreateHttp(System.String)">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.Net.HttpWebRequest" /&gt;</ph> instance for the specified URI string.</source>
          <target state="translated">지정된 URI 문자열에 대한 새 <ph id="ph1">&lt;see cref="T:System.Net.HttpWebRequest" /&gt;</ph> 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.CreateHttp(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.HttpWebRequest" /&gt;</ph> instance for the specific URI string.</source>
          <target state="translated">지정된 URI 문자열에 대한 <ph id="ph1">&lt;see cref="T:System.Net.HttpWebRequest" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.CreateHttp(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest.CreateHttp%28System.String%29&gt;</ph> method returns an instance of the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> class for the <ph id="ph3">`requestUriString`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest.CreateHttp%28System.String%29&gt;</ph> 의 인스턴스를 반환 하는 메서드는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 에 대 한 클래스는 <ph id="ph3">`requestUriString`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.CreateHttp(System.String)">
          <source>When a URI that begins with <ph id="ph1">`http://`</ph> or <ph id="ph2">`http://`</ph> is passed in the <ph id="ph3">`requestUriString`</ph> parameter, a <ph id="ph4">&lt;xref:System.Net.HttpWebRequest&gt;</ph> is returned by <ph id="ph5">&lt;xref:System.Net.WebRequest.CreateHttp%28System.String%29&gt;</ph>.</source>
          <target state="translated">로 시작 하는 uri <ph id="ph1">`http://`</ph> 또는 <ph id="ph2">`http://`</ph> 에 전달 되는 <ph id="ph3">`requestUriString`</ph> 매개 변수는 <ph id="ph4">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 가 반환한 <ph id="ph5">&lt;xref:System.Net.WebRequest.CreateHttp%28System.String%29&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.CreateHttp(System.String)">
          <source>Another other scheme will throw an <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">다른 다른 스키마를 throw 합니다는 <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.CreateHttp(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest.CreateHttp%28System.String%29&gt;</ph> method uses the <ph id="ph2">`requestUriString`</ph> parameter to create a <ph id="ph3">&lt;xref:System.Uri&gt;</ph> instance that it passes to the new <ph id="ph4">&lt;xref:System.Net.HttpWebRequest&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest.CreateHttp%28System.String%29&gt;</ph> 메서드는 <ph id="ph2">`requestUriString`</ph> 만들려는 매개 변수는 <ph id="ph3">&lt;xref:System.Uri&gt;</ph> 로 전달 하는 새 인스턴스 <ph id="ph4">&lt;xref:System.Net.HttpWebRequest&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.CreateHttp(System.String)">
          <source>If the method is successful, the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AllowReadStreamBuffering%2A&gt;</ph> property on the returned <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> instance is set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">메서드가 성공 하면는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AllowReadStreamBuffering%2A&gt;</ph> 속성에서 반환 된 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 인스턴스로 설정 됩니다 <ph id="ph3">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.CreateHttp(System.String)">
          <source>.NET includes support for the <ph id="ph1">`http://`</ph> and  <ph id="ph2">`https://`</ph> URI schemes.</source>
          <target state="translated">.NET에 대 한 지원이 포함 된 <ph id="ph1">`http://`</ph> 및 <ph id="ph2">`https://`</ph> URI 체계입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.CreateHttp(System.String)">
          <source>Custom <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> descendants to handle other requests are registered with the <ph id="ph2">&lt;xref:System.Net.WebRequest.RegisterPrefix%2A&gt;</ph> method.</source>
          <target state="translated">사용자 지정 <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 등록 된 다른 요청을 처리는 <ph id="ph2">&lt;xref:System.Net.WebRequest.RegisterPrefix%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.CreateHttp(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest.Create%28System.String%29&gt;</ph> method can be used to create a descendant of the <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> class for other schemes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest.Create%28System.String%29&gt;</ph> 메서드의 하위 항목을 만드는 데 사용할 수는 <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> 다른 체계에 대 한 클래스입니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.CreateHttp(System.String)">
          <source>The request scheme specified in <ph id="ph1">&lt;paramref name="requestUriString" /&gt;</ph> is the http or https scheme.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUriString" /&gt;</ph>에 지정된 요청 체계가 http 또는 https 체계인 경우</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.CreateHttp(System.String)">
          <source><ph id="ph1">&lt;paramref name="requestUriString" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUriString" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.CreateHttp(System.String)">
          <source>The caller does not have permission to connect to the requested URI or a URI that the request is redirected to.</source>
          <target state="translated">호출자에게 요청된 URI 또는 요청이 리디렉션되는 URI에 연결할 수 있는 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.CreateHttp(System.String)">
          <source>The URI specified in <ph id="ph1">&lt;paramref name="requestUriString" /&gt;</ph> is not a valid URI.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUriString" /&gt;</ph>에 지정된 URI가 유효한 URI가 아닌 경우</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.CreateHttp(System.Uri)">
          <source>A URI that identifies the Internet resource.</source>
          <target state="translated">인터넷 리소스를 식별하는 URI입니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.CreateHttp(System.Uri)">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.Net.HttpWebRequest" /&gt;</ph> instance for the specified URI.</source>
          <target state="translated">지정된 URI에 대한 새 <ph id="ph1">&lt;see cref="T:System.Net.HttpWebRequest" /&gt;</ph> 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.CreateHttp(System.Uri)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.HttpWebRequest" /&gt;</ph> instance for the specific URI string.</source>
          <target state="translated">지정된 URI 문자열에 대한 <ph id="ph1">&lt;see cref="T:System.Net.HttpWebRequest" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.CreateHttp(System.Uri)">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest.CreateHttp%28System.Uri%29&gt;</ph> method returns an instance of the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> class for the <ph id="ph3">`requestUri`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest.CreateHttp%28System.Uri%29&gt;</ph> 의 인스턴스를 반환 하는 메서드는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 에 대 한 클래스는 <ph id="ph3">`requestUri`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.CreateHttp(System.Uri)">
          <source>When a URI that begins with <ph id="ph1">`http://`</ph> or <ph id="ph2">`http://`</ph> is passed in the <ph id="ph3">`requestUri`</ph> parameter, an <ph id="ph4">&lt;xref:System.Net.HttpWebRequest&gt;</ph> is returned by <ph id="ph5">&lt;xref:System.Net.WebRequest.CreateHttp%28System.Uri%29&gt;</ph>.</source>
          <target state="translated">로 시작 하는 uri <ph id="ph1">`http://`</ph> 또는 <ph id="ph2">`http://`</ph> 에 전달 되는 <ph id="ph3">`requestUri`</ph> 매개 변수는 <ph id="ph4">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 가 반환한 <ph id="ph5">&lt;xref:System.Net.WebRequest.CreateHttp%28System.Uri%29&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.CreateHttp(System.Uri)">
          <source>Another other scheme will throw a <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">다른 다른 스키마를 throw 합니다는 <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.CreateHttp(System.Uri)">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest.CreateHttp%28System.Uri%29&gt;</ph> method uses the <ph id="ph2">`requestUri`</ph> parameter to create a new <ph id="ph3">&lt;xref:System.Net.HttpWebRequest&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest.CreateHttp%28System.Uri%29&gt;</ph> 메서드는 <ph id="ph2">`requestUri`</ph> 매개 변수를 새 <ph id="ph3">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.CreateHttp(System.Uri)">
          <source>If the method is successful, the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AllowReadStreamBuffering%2A&gt;</ph> property on the returned <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> instance is set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">메서드가 성공 하면는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AllowReadStreamBuffering%2A&gt;</ph> 속성에서 반환 된 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 인스턴스로 설정 됩니다 <ph id="ph3">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.CreateHttp(System.Uri)">
          <source>.NET includes support for the <ph id="ph1">`http://`</ph> and  <ph id="ph2">`https://`</ph> URI schemes.</source>
          <target state="translated">.NET에 대 한 지원이 포함 된 <ph id="ph1">`http://`</ph> 및 <ph id="ph2">`https://`</ph> URI 체계입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.CreateHttp(System.Uri)">
          <source>Custom <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> descendants to handle other requests are registered with the <ph id="ph2">&lt;xref:System.Net.WebRequest.RegisterPrefix%2A&gt;</ph> method.</source>
          <target state="translated">사용자 지정 <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 등록 된 다른 요청을 처리는 <ph id="ph2">&lt;xref:System.Net.WebRequest.RegisterPrefix%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.CreateHttp(System.Uri)">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest.Create%28System.Uri%29&gt;</ph> method can be used to create a descendant of the <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> class for other schemes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest.Create%28System.Uri%29&gt;</ph> 메서드의 하위 항목을 만드는 데 사용할 수는 <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> 다른 체계에 대 한 클래스입니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.CreateHttp(System.Uri)">
          <source>The request scheme specified in <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is the http or https scheme.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph>에 지정된 요청 체계가 http 또는 https 체계인 경우</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.CreateHttp(System.Uri)">
          <source><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.CreateHttp(System.Uri)">
          <source>The caller does not have permission to connect to the requested URI or a URI that the request is redirected to.</source>
          <target state="translated">호출자에게 요청된 URI 또는 요청이 리디렉션되는 URI에 연결할 수 있는 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.CreateHttp(System.Uri)">
          <source>The URI specified in <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is not a valid URI.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph>에 지정된 URI가 유효한 URI가 아닌 경우</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="P:System.Net.WebRequest.CreatorInstance">
          <source>When overridden in a descendant class, gets the factory object derived from the <ph id="ph1">&lt;see cref="T:System.Net.IWebRequestCreate" /&gt;</ph> class used to create the <ph id="ph2">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> instantiated for making the request to the specified URI.</source>
          <target state="translated">하위 클래스에서 재정의될 때,  지정된 URI 에 요청하기 위해 인스턴스화된 <ph id="ph2">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph>를 만드는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Net.IWebRequestCreate" /&gt;</ph> 클래스에서 파생된 팩터리 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.CreatorInstance">
          <source>The derived <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> type returned by the <ph id="ph2">&lt;see cref="M:System.Net.IWebRequestCreate.Create(System.Uri)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="M:System.Net.IWebRequestCreate.Create(System.Uri)" /&gt;</ph> 메서드에 의해 반환되는 파생된 <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> 형식입니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.CreatorInstance">
          <source>This property allows an application to determine which <ph id="ph1">&lt;xref:System.Net.IWebRequestCreate&gt;</ph> derived factory object was used to create the request.</source>
          <target state="translated">이 속성을 사용 하면 응용 프로그램을 받고 어떤 <ph id="ph1">&lt;xref:System.Net.IWebRequestCreate&gt;</ph> 파생 된 팩터리 개체는 요청을 만드는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.CreatorInstance">
          <source>This object may be <bpt id="p1">[</bpt>System.Net.Browser.WebRequestCreator.BrowserHttp<ept id="p1">](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.browserhttp(v=vs.95))</ept> or <bpt id="p2">[</bpt>System.Net.Browser.WebRequestCreator.ClientHttp<ept id="p2">](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.clienthttp(v=vs.95))</ept>, but it may also be a custom instance derived from <ph id="ph1">&lt;xref:System.Net.IWebRequestCreate&gt;</ph>.</source>
          <target state="translated">이 개체 <bpt id="p1">[</bpt>System.Net.Browser.WebRequestCreator.BrowserHttp<ept id="p1">](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.browserhttp(v=vs.95))</ept> 또는 <bpt id="p2">[</bpt>System.Net.Browser.WebRequestCreator.ClientHttp<ept id="p2">](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.clienthttp(v=vs.95))</ept>에서 파생 된 사용자 지정 인스턴스 수도 있지만 <ph id="ph1">&lt;xref:System.Net.IWebRequestCreate&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.CreatorInstance">
          <source>This allows an application to determine whether the browser hosting <ph id="ph1">[!INCLUDE[silverlight](~/includes/silverlight-md.md)]</ph>, the <ph id="ph2">[!INCLUDE[silverlight](~/includes/silverlight-md.md)]</ph> client, or some custom object handles HTTP requests and responses for the <ph id="ph3">&lt;xref:System.Net.WebRequest&gt;</ph> instance.</source>
          <target state="translated">이렇게 하면 응용 프로그램을 확인할 수 있습니다. 있는지 여부를 호스트 하는 브라우저 <ph id="ph1">[!INCLUDE[silverlight](~/includes/silverlight-md.md)]</ph>, <ph id="ph2">[!INCLUDE[silverlight](~/includes/silverlight-md.md)]</ph> HTTP 요청 및 응답에 대 한 클라이언트 또는 몇 가지 사용자 지정 개체를 처리는 <ph id="ph3">&lt;xref:System.Net.WebRequest&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.CreatorInstance">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest.RegisterPrefix%2A&gt;</ph> method allows an application to configure which derived <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> type will be instantiated when making a request to a specific URI.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest.RegisterPrefix%2A&gt;</ph> 메서드는 파생 된 구성할 응용 프로그램을 사용 하면 <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> 특정 URI에 요청을 할 때 형식을 인스턴스화할 수 됩니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.CreatorInstance">
          <source><ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> creators are typically registered to handle a specific protocol, such HTTP or HTTPS, but can be registered to handle a request to a specific server or path on a server.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 작성자는 일반적으로 이러한 HTTP 또는 HTTPS를 특정 프로토콜을 처리 하도록 등록 되어 있지만 서버에서 경로 또는 특정 서버에 요청을 처리 하도록 등록할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.CreatorInstance">
          <source>This is useful when more than one derived <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> type can process requests for the same protocol.</source>
          <target state="translated">둘 이상의 파생 된 경우에 유용 <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 유형 같은 프로토콜에 대 한 요청을 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.CreatorInstance">
          <source>The <ph id="ph1">[!INCLUDE[sil3_first](~/includes/sil3-first-md.md)]</ph> and later runtime supports multiple HTTP handlers each having different capabilities.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[sil3_first](~/includes/sil3-first-md.md)]</ph> 이상 런타임은 여러 HTTP 처리기를 지원 하 고 각각 서로 다른 기능이 필요 합니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.CreatorInstance">
          <source>For example, a web service that uses Representational State Transfer (REST) might require the <bpt id="p1">[</bpt>System.Net.Browser.WebRequestCreator.ClientHttp<ept id="p1">](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.clienthttp(v=vs.95))</ept> handler while a SOAP web service might be able to use the default <bpt id="p2">[</bpt>System.Net.Browser.WebRequestCreator.BrowserHttp<ept id="p2">](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.browserhttp(v=vs.95))</ept> handler.</source>
          <target state="translated">예를 들어 REPRESENTATIONAL State Transfer ()를 사용 하는 웹 서비스 필요할 수 있습니다는 <bpt id="p1">[</bpt>System.Net.Browser.WebRequestCreator.ClientHttp<ept id="p1">](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.clienthttp(v=vs.95))</ept> SOAP 웹 서비스 기본값을 사용할 수 있지만 처리기 <bpt id="p2">[</bpt> System.Net.Browser.WebRequestCreator.BrowserHttp<ept id="p2">](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.browserhttp(v=vs.95))</ept> 처리기입니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="P:System.Net.WebRequest.Credentials">
          <source>When overridden in a descendant class, gets or sets the network credentials used for authenticating the request with the Internet resource.</source>
          <target state="translated">하위 항목 클래스에서 재정의될 때, 인터넷 리소스를 사용하여 요청을 인증하는 데 사용되는 네트워크 자격 증명을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.Credentials">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.ICredentials" /&gt;</ph> containing the authentication credentials associated with the request.</source>
          <target state="translated">요청과 연결된 인증 자격 증명이 들어 있는 <ph id="ph1">&lt;see cref="T:System.Net.ICredentials" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.Credentials">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.Credentials">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest.Credentials%2A&gt;</ph> property contains the authentication credentials required to access the Internet resource.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest.Credentials%2A&gt;</ph> 속성 인터넷 리소스에 액세스 하는 데 필요한 인증 자격 증명을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.Credentials">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> class is an <ph id="ph2">`abstract`</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 클래스는는 <ph id="ph2">`abstract`</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.Credentials">
          <source>The actual behavior of <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> instances at run time is determined by the descendant class returned by the <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">실제 동작이 <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 인스턴스 실행 시 반환 된 하위 항목 클래스에 의해 결정 됩니다는 <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.Credentials">
          <source>For more information about default values and exceptions, see the documentation for the descendant classes, such as <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.FileWebRequest&gt;</ph>.</source>
          <target state="translated">예외에 대 한 자세한 내용은 하위 항목 클래스에 대 한 설명서를와 같은 참조 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.FileWebRequest&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.Credentials">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Net.WebRequest.Credentials%2A&gt;</ph> property using the default credentials of the current user.</source>
          <target state="translated">다음 예에서는 <ph id="ph1">&lt;xref:System.Net.WebRequest.Credentials%2A&gt;</ph> 현재 사용자의 기본 자격 증명을 사용 하 여 속성입니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.Credentials">
          <source>When the request is made, credentials stored in this property are used to validate the client.</source>
          <target state="translated">요청 될 때 클라이언트를 유효성을 검사 하려면이 속성에 저장 된 자격 증명 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.Credentials">
          <source>This is identical to setting the <ph id="ph1">&lt;xref:System.Net.WebRequest.UseDefaultCredentials%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 동일한 설정으로는 <ph id="ph1">&lt;xref:System.Net.WebRequest.UseDefaultCredentials%2A&gt;</ph> 속성을 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="P:System.Net.WebRequest.Credentials">
          <source>Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</source>
          <target state="translated">속성이 서브클래스에서 재정의되지 않았는데 속성을 가져오거나 설정하려 할 경우</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="P:System.Net.WebRequest.DefaultCachePolicy">
          <source>Gets or sets the default cache policy for this request.</source>
          <target state="translated">이 요청에 대한 기본 캐시 정책을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.DefaultCachePolicy">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.Cache.HttpRequestCachePolicy" /&gt;</ph> that specifies the cache policy in effect for this request when no other policy is applicable.</source>
          <target state="translated">다른 정책을 적용할 수 없을 때 이 요청에 대해 적용할 캐시 정책을 지정하는 <ph id="ph1">&lt;see cref="T:System.Net.Cache.HttpRequestCachePolicy" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.DefaultCachePolicy">
          <source>This policy is used for this request if the following conditions exist:</source>
          <target state="translated">이 정책은 다음 조건이 만족 하는 경우이 요청에 대해 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.DefaultCachePolicy">
          <source>There is no <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A&gt;</ph> property specified for this request.</source>
          <target state="translated">없는 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A&gt;</ph> 이 요청에 대해 지정 된 속성입니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.DefaultCachePolicy">
          <source>The machine and application configuration files do not specify a cache policy that is applicable to the Uniform Resource Identifier (URI) used to create this request.</source>
          <target state="translated">시스템 및 응용 프로그램 구성 파일을이 요청을 만드는 데 사용 하는 식별자 URI (Uniform Resource) 적용할 수 있는 캐시 정책을 지정 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.DefaultCachePolicy">
          <source>The cache policy determines whether the requested resource can be taken from a cache instead of sending the request to the resource host computer.</source>
          <target state="translated">캐시 정책을 리소스 호스트 컴퓨터에 요청을 보내는 대신 캐시에서 요청 된 리소스를 가져올 수 있는지 여부를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.DefaultCachePolicy">
          <source>A copy of a resource is only added to the cache if the response stream for the resource is retrieved and read to the end of the stream.</source>
          <target state="translated">리소스에 대 한 응답 스트림을 검색 하는 스트림의 끝에 대 한 읽기 경우에 리소스의 복사본을 캐시에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.DefaultCachePolicy">
          <source>So another request for the same resource could use a cached copy, depending on the cache policy level for this request.</source>
          <target state="translated">이므로 동일한 리소스에 대 한 다른 요청에는이 요청에 대 한 캐시 정책 수준에 따라 캐시 된 복사본을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.DefaultCachePolicy">
          <source>The following code example demonstrates setting the default cache policy for Web requests.</source>
          <target state="translated">다음 코드 예제에서는 웹 요청에 대 한 기본 캐시 정책을 설정 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.DefaultCachePolicy">
          <source>For unrestricted access to network resources.</source>
          <target state="translated">네트워크 리소스에 대 한 무제한 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.DefaultCachePolicy">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="P:System.Net.WebRequest.DefaultWebProxy">
          <source>Gets or sets the global HTTP proxy.</source>
          <target state="translated">글로벌 HTTP 프록시를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.DefaultWebProxy">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.IWebProxy" /&gt;</ph> used by every call to instances of <ph id="ph2">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.IWebProxy" /&gt;</ph>의 인스턴스를 호출할 때마다 사용되는 <ph id="ph2">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.DefaultWebProxy">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest.DefaultWebProxy%2A&gt;</ph> property gets or sets the global proxy.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest.DefaultWebProxy%2A&gt;</ph> 속성 전역 프록시를 설정 하거나 가져옵니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.DefaultWebProxy">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest.DefaultWebProxy%2A&gt;</ph> property determines the default proxy that all <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> instances use if the request supports proxies and no proxy is set explicitly using the <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.Proxy%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest.DefaultWebProxy%2A&gt;</ph> 속성 기본 프록시를 결정 하는 모든 <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> 요청이 프록시를 지원 하 고 프록시가 사용 하 여 명시적으로 설정 된 경우 인스턴스를 사용는 <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.Proxy%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.DefaultWebProxy">
          <source>Proxies are currently supported by <ph id="ph1">&lt;xref:System.Net.FtpWebRequest&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph>.</source>
          <target state="translated">프록시에서 현재 지 원하는 <ph id="ph1">&lt;xref:System.Net.FtpWebRequest&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.DefaultWebProxy">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest.DefaultWebProxy%2A&gt;</ph> property reads proxy settings from the app.config file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest.DefaultWebProxy%2A&gt;</ph> 속성 app.config 파일에서 프록시 설정을 읽습니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.DefaultWebProxy">
          <source>If there is no config file, the current user's Internet Explorer (IE) proxy settings are used.</source>
          <target state="translated">구성 파일이 없는 경우 현재 사용자의 Internet Explorer (IE) 프록시 설정이 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.DefaultWebProxy">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebRequest.DefaultWebProxy%2A&gt;</ph> property is set to null, all subsequent instances of the <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> class created by the <ph id="ph3">&lt;xref:System.Net.WebRequest.Create%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Net.WebRequest.CreateDefault%2A&gt;</ph> methods do not have a proxy.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Net.WebRequest.DefaultWebProxy%2A&gt;</ph> 속성은 null, 이후의 모든 인스턴스에 <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> 에서 만든 클래스는 <ph id="ph3">&lt;xref:System.Net.WebRequest.Create%2A&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Net.WebRequest.CreateDefault%2A&gt;</ph> 메서드 프록시 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.DefaultWebProxy">
          <source>To get or set the global HTTP proxy.</source>
          <target state="translated">가져오거나 전역 HTTP 프록시를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.DefaultWebProxy">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references a pending request for a stream.</source>
          <target state="translated">스트림에 대한 보류 요청을 참조하는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source>When overridden in a descendant class, returns a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> for writing data to the Internet resource.</source>
          <target state="translated">서브클래스에서 재정의될 때, 인터넷 리소스에 데이터를 쓰기 위해 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> to write data to.</source>
          <target state="translated">데이터를 쓸 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest.EndGetRequestStream%2A&gt;</ph> method completes an asynchronous stream request that was started by the <ph id="ph2">&lt;xref:System.Net.WebRequest.BeginGetRequestStream%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest.EndGetRequestStream%2A&gt;</ph> 의해 시작 된 비동기 스트림 요청을 완료 하는 메서드는 <ph id="ph2">&lt;xref:System.Net.WebRequest.BeginGetRequestStream%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source>To avoid timing issues with garbage collection, be sure to close the response stream by calling the <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A&gt;</ph> method on the stream returned by <ph id="ph2">&lt;xref:System.Net.WebResponse.GetResponseStream%2A&gt;</ph> after calling <ph id="ph3">&lt;xref:System.Net.WebRequest.EndGetResponse%2A&gt;</ph>.</source>
          <target state="translated">가비지 수집 타이밍 문제를 방지 하려면 반드시를 호출 하 여 응답 스트림을 닫습니다는 <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A&gt;</ph> 메서드를 반환 하는 스트림의 <ph id="ph2">&lt;xref:System.Net.WebResponse.GetResponseStream%2A&gt;</ph> 호출한 후 <ph id="ph3">&lt;xref:System.Net.WebRequest.EndGetResponse%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> class is an <ph id="ph2">`abstract`</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 클래스는는 <ph id="ph2">`abstract`</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source>The actual behavior of <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> instances at run time is determined by the descendant class returned by the <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">실제 동작이 <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 인스턴스 실행 시 반환 된 하위 항목 클래스에 의해 결정 됩니다는 <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source>For more information about default values and exceptions, see the documentation for the descendant classes, such as <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.FileWebRequest&gt;</ph>.</source>
          <target state="translated">예외에 대 한 자세한 내용은 하위 항목 클래스에 대 한 설명서를와 같은 참조 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.FileWebRequest&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source>The following example obtains and uses the request stream by calling the <ph id="ph1">&lt;xref:System.Net.WebRequest.EndGetRequestStream%2A&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 호출 하 여 요청 스트림을 사용 하 여 가져오고는 <ph id="ph1">&lt;xref:System.Net.WebRequest.EndGetRequestStream%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest.EndGetRequestStream%2A&gt;</ph> method completes the asynchronous call to <ph id="ph2">&lt;xref:System.Net.WebRequest.BeginGetRequestStream%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest.EndGetRequestStream%2A&gt;</ph> 메서드는 비동기 호출을 완료 <ph id="ph2">&lt;xref:System.Net.WebRequest.BeginGetRequestStream%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source>Any attempt is made to access the method, when the method is not overridden in a descendant class.</source>
          <target state="translated">메서드가 서브클래스에서 재정의되지 않았는데 메서드에 액세스하려 할 경우</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references a pending request for a response.</source>
          <target state="translated">응답에 대한 보류 요청을 참조하는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)">
          <source>When overridden in a descendant class, returns a <ph id="ph1">&lt;see cref="T:System.Net.WebResponse" /&gt;</ph>.</source>
          <target state="translated">파생 클래스에서 재정의될 때, <ph id="ph1">&lt;see cref="T:System.Net.WebResponse" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.WebResponse" /&gt;</ph> that contains a response to the Internet request.</source>
          <target state="translated">인터넷 요청에 대한 응답을 포함하는 <ph id="ph1">&lt;see cref="T:System.Net.WebResponse" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest.EndGetResponse%2A&gt;</ph> method completes an asynchronous request for an Internet resource that was started with the <ph id="ph2">&lt;xref:System.Net.WebRequest.BeginGetResponse%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest.EndGetResponse%2A&gt;</ph> 로 시작 된 인터넷 리소스에 대 한 비동기 요청을 완료 하는 메서드는 <ph id="ph2">&lt;xref:System.Net.WebRequest.BeginGetResponse%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> class is an <ph id="ph2">`abstract`</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 클래스는는 <ph id="ph2">`abstract`</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)">
          <source>The actual behavior of <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> instances at run time is determined by the descendant class returned by the <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">실제 동작이 <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 인스턴스 실행 시 반환 된 하위 항목 클래스에 의해 결정 됩니다는 <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)">
          <source>For more information about default values and exceptions, see the documentation for the descendant classes, such as <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.FileWebRequest&gt;</ph>.</source>
          <target state="translated">예외에 대 한 자세한 내용은 하위 항목 클래스에 대 한 설명서를와 같은 참조 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.FileWebRequest&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Net.WebRequest.EndGetResponse%2A&gt;</ph> to retrieve the target resource.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Net.WebRequest.EndGetResponse%2A&gt;</ph> 대상 리소스를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)">
          <source>Any attempt is made to access the method, when the method is not overridden in a descendant class.</source>
          <target state="translated">메서드가 서브클래스에서 재정의되지 않았는데 메서드에 액세스하려 할 경우</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> to populate with data.</source>
          <target state="translated">데이터로 채울 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that specifies the destination for this serialization.</source>
          <target state="translated">이 직렬화의 대상을 지정하는 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Populates a <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> with the data needed to serialize the target object.</source>
          <target state="translated">대상 개체를 직렬화하는 데 필요한 데이터로 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>를 채웁니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Any objects included in the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> are automatically tracked and serialized by the formatter.</source>
          <target state="translated">에 포함 된 모든 개체는 <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> 자동으로 추적 되 고 포맷터에 의해 serialize 합니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.GetRequestStream">
          <source>When overridden in a descendant class, returns a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> for writing data to the Internet resource.</source>
          <target state="translated">서브클래스에서 재정의될 때, 인터넷 리소스에 데이터를 쓰기 위해 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.GetRequestStream">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> for writing data to the Internet resource.</source>
          <target state="translated">인터넷 리소스에 데이터를 쓰기 위한 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.GetRequestStream">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest.GetRequestStream%2A&gt;</ph> method initiates a request to send data to the Internet resource and returns a <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> instance for sending data to the Internet resource.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest.GetRequestStream%2A&gt;</ph> 메서드 인터넷 리소스에 데이터를 전송 하는 요청을 시작 하 고 반환 된 <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> 인터넷 리소스에 데이터를 보내기 위한 인스턴스.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.GetRequestStream">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest.GetRequestStream%2A&gt;</ph> method provides synchronous access to the <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest.GetRequestStream%2A&gt;</ph> 동기적으로 액세스할 수를 제공 하는 메서드는 <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.GetRequestStream">
          <source>For asynchronous access, use the <ph id="ph1">&lt;xref:System.Net.WebRequest.BeginGetRequestStream%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.WebRequest.EndGetRequestStream%2A&gt;</ph> methods.</source>
          <target state="translated">비동기 액세스를 사용 하 여는 <ph id="ph1">&lt;xref:System.Net.WebRequest.BeginGetRequestStream%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.WebRequest.EndGetRequestStream%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.GetRequestStream">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> class is an <ph id="ph2">`abstract`</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 클래스는는 <ph id="ph2">`abstract`</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.GetRequestStream">
          <source>The actual behavior of <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> instances at run time is determined by the descendant class returned by the <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">실제 동작이 <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 인스턴스 실행 시 반환 된 하위 항목 클래스에 의해 결정 됩니다는 <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.GetRequestStream">
          <source>For more information about default values and exceptions, see the documentation for the descendant classes, such as <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.FileWebRequest&gt;</ph>.</source>
          <target state="translated">예외에 대 한 자세한 내용은 하위 항목 클래스에 대 한 설명서를와 같은 참조 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.FileWebRequest&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.GetRequestStream">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Net.WebRequest.GetRequestStream%2A&gt;</ph> method to obtain a stream and then writes data that stream.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Net.WebRequest.GetRequestStream%2A&gt;</ph> 메서드 해당 스트림을 스트림 및 다음 쓰기 데이터를 가져올 수 있습니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.GetRequestStream">
          <source>Any attempt is made to access the method, when the method is not overridden in a descendant class.</source>
          <target state="translated">메서드가 서브클래스에서 재정의되지 않았는데 메서드에 액세스하려 할 경우</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.GetRequestStreamAsync">
          <source>When overridden in a descendant class, returns a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> for writing data to the Internet resource as an asynchronous operation.</source>
          <target state="translated">서브클래스에서 재정의될 때, 인터넷 리소스에 비동기 작업으로 데이터를 쓰기 위해 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.GetRequestStreamAsync">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.GetRequestStreamAsync">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.GetRequestStreamAsync">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete when the <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> for writing data to the Internet resource is available.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 개체는 완료 되 면 완료는 <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> 인터넷에 데이터를 쓰기 위한 리소스를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.GetRequestStreamAsync">
          <source>After you call <ph id="ph1">&lt;xref:System.Net.WebRequest.GetRequestStreamAsync%2A&gt;</ph>, make sure you close the request stream before you call <ph id="ph2">&lt;xref:System.Net.WebRequest.GetResponseAsync%2A&gt;</ph>.</source>
          <target state="translated">호출한 후 <ph id="ph1">&lt;xref:System.Net.WebRequest.GetRequestStreamAsync%2A&gt;</ph>를 호출 하기 전에 요청 스트림을 닫아야 <ph id="ph2">&lt;xref:System.Net.WebRequest.GetResponseAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.GetResponse">
          <source>When overridden in a descendant class, returns a response to an Internet request.</source>
          <target state="translated">하위 항목 클래스에 재정의될 때, 인터넷 요청에 대한 응답을 반환합니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.GetResponse">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.WebResponse" /&gt;</ph> containing the response to the Internet request.</source>
          <target state="translated">인터넷 요청에 대한 응답을 포함하는 <ph id="ph1">&lt;see cref="T:System.Net.WebResponse" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.GetResponse">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest.GetResponse%2A&gt;</ph> method sends a request to an Internet resource and returns a <ph id="ph2">&lt;xref:System.Net.WebResponse&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest.GetResponse%2A&gt;</ph> 메서드 인터넷 리소스에 대 한 요청을 보내고 반환 된 <ph id="ph2">&lt;xref:System.Net.WebResponse&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.GetResponse">
          <source>If the request has already been initiated by a call to <ph id="ph1">&lt;xref:System.Net.WebRequest.GetRequestStream%2A&gt;</ph>, the <ph id="ph2">&lt;xref:System.Net.WebRequest.GetResponse%2A&gt;</ph> method completes the request and returns any response.</source>
          <target state="translated">호출 하 여 요청이 이미 시작 되었고 경우 <ph id="ph1">&lt;xref:System.Net.WebRequest.GetRequestStream%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.WebRequest.GetResponse%2A&gt;</ph> 메서드 요청을 완료 하 고 모든 응답을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.GetResponse">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest.GetResponse%2A&gt;</ph> method provides synchronous access to the <ph id="ph2">&lt;xref:System.Net.WebResponse&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest.GetResponse%2A&gt;</ph> 동기적으로 액세스할 수를 제공 하는 메서드는 <ph id="ph2">&lt;xref:System.Net.WebResponse&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.GetResponse">
          <source>For asynchronous access, use the <ph id="ph1">&lt;xref:System.Net.WebRequest.BeginGetResponse%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.WebRequest.EndGetResponse%2A&gt;</ph> methods.</source>
          <target state="translated">비동기 액세스를 사용 하 여는 <ph id="ph1">&lt;xref:System.Net.WebRequest.BeginGetResponse%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.WebRequest.EndGetResponse%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.GetResponse">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> class is an <ph id="ph2">`abstract`</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 클래스는는 <ph id="ph2">`abstract`</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.GetResponse">
          <source>The actual behavior of <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> instances at run time is determined by the descendant class returned by the <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">실제 동작이 <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 인스턴스 실행 시 반환 된 하위 항목 클래스에 의해 결정 됩니다는 <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.GetResponse">
          <source>For more information about default values and exceptions, see the documentation for the descendant classes, such as <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.FileWebRequest&gt;</ph>.</source>
          <target state="translated">예외에 대 한 자세한 내용은 하위 항목 클래스에 대 한 설명서를와 같은 참조 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.FileWebRequest&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.GetResponse">
          <source>If a WebException is thrown, use the <ph id="ph1">&lt;xref:System.Net.WebException.Response%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> properties of the exception to determine the response from the server.</source>
          <target state="translated">사용 하 여 WebException을 throw 되 면는 <ph id="ph1">&lt;xref:System.Net.WebException.Response%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> 속성의 서버에서 응답을 결정 하는 예외입니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.GetResponse">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Net.WebRequest.Timeout%2A&gt;</ph> property to 10000 milliseconds.</source>
          <target state="translated">다음 예에서는 <ph id="ph1">&lt;xref:System.Net.WebRequest.Timeout%2A&gt;</ph> 속성을 10000 밀리초입니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.GetResponse">
          <source>If the timeout period expires before the resource can be returned, a <ph id="ph1">&lt;xref:System.Net.WebException&gt;</ph> is thrown.</source>
          <target state="translated">리소스 반환 될 수 있습니다, 전에 시간 제한 기간이 만료 되는 <ph id="ph1">&lt;xref:System.Net.WebException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.GetResponse">
          <source>Any attempt is made to access the method, when the method is not overridden in a descendant class.</source>
          <target state="translated">메서드가 서브클래스에서 재정의되지 않았는데 메서드에 액세스하려 할 경우</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.GetResponseAsync">
          <source>When overridden in a descendant class, returns a response to an Internet request as an asynchronous operation.</source>
          <target state="translated">하위 항목 클래스에 재정의될 때, 인터넷 요청에 대한 응답을 비동기 작업으로 반환합니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.GetResponseAsync">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.GetResponseAsync">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.GetResponseAsync">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after a response to an Internet request is available.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 인터넷 요청에 응답을 사용할 수 있는 개체가 완성 합니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.GetSystemWebProxy">
          <source>Returns a proxy configured with the Internet Explorer settings of the currently impersonated user.</source>
          <target state="translated">현재 가장한 사용자의 Internet Explorer 설정에 구성된 프록시를 반환합니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.GetSystemWebProxy">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.IWebProxy" /&gt;</ph> used by every call to instances of <ph id="ph2">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.IWebProxy" /&gt;</ph>의 인스턴스를 호출할 때마다 사용되는 <ph id="ph2">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.GetSystemWebProxy">
          <source><ph id="ph1">&lt;xref:System.Net.WebRequest.GetSystemWebProxy%2A&gt;</ph> method reads the current user's Internet Explorer (IE) proxy settings.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest.GetSystemWebProxy%2A&gt;</ph> 메서드는 현재 사용자의 Internet Explorer (IE) 프록시 설정을 읽습니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.GetSystemWebProxy">
          <source>This process includes the IE options to automatically detect proxy settings, use an automatic configuration script, manual proxy server settings, and advanced manual proxy server settings.</source>
          <target state="translated">이 과정을 자동으로 프록시 설정 검색 수동 프록시 서버 설정, 자동 구성 스크립트를 사용 하 여 IE 옵션을 포함 하 고 고급 수동 프록시 서버 설정.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.GetSystemWebProxy">
          <source>If your application is impersonating several users, you can use the <ph id="ph1">&lt;xref:System.Net.WebRequest.GetSystemWebProxy%2A&gt;</ph> method to retrieve a proxy for each impersonated user.</source>
          <target state="translated">응용 프로그램이 여러 사용자를 가장 하는 경우 사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Net.WebRequest.GetSystemWebProxy%2A&gt;</ph> 가장된 각 사용자에 대 한 프록시를 검색 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.GetSystemWebProxy">
          <source>To get or set the global HTTP proxy.</source>
          <target state="translated">가져오거나 전역 HTTP 프록시를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.GetSystemWebProxy">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="P:System.Net.WebRequest.Headers">
          <source>When overridden in a descendant class, gets or sets the collection of header name/value pairs associated with the request.</source>
          <target state="translated">하위 항목 클래스에서 재정의될 때, 요청과 연결된 헤더 이름/값 쌍의 컬렉션을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.Headers">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.WebHeaderCollection" /&gt;</ph> containing the header name/value pairs associated with this request.</source>
          <target state="translated">요청과 연결된 헤더 이름/값 쌍이 들어 있는 <ph id="ph1">&lt;see cref="T:System.Net.WebHeaderCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.Headers">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest.Headers%2A&gt;</ph> property contains a <ph id="ph2">&lt;xref:System.Net.WebHeaderCollection&gt;</ph> instance containing the header information to send to the Internet resource.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest.Headers%2A&gt;</ph> 속성을 포함 한 <ph id="ph2">&lt;xref:System.Net.WebHeaderCollection&gt;</ph> 인터넷 리소스에 보낼 헤더 정보를 포함 하는 인스턴스.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.Headers">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> class is an <ph id="ph2">`abstract`</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 클래스는는 <ph id="ph2">`abstract`</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.Headers">
          <source>The actual behavior of <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> instances at run time is determined by the descendant class returned by the <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">실제 동작이 <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 인스턴스 실행 시 반환 된 하위 항목 클래스에 의해 결정 됩니다는 <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.Headers">
          <source>For more information about default values and exceptions, see the documentation for the descendant classes, such as <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.FileWebRequest&gt;</ph>.</source>
          <target state="translated">예외에 대 한 자세한 내용은 하위 항목 클래스에 대 한 설명서를와 같은 참조 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.FileWebRequest&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.Headers">
          <source>The following example displays the header name/value pairs associated with this request.</source>
          <target state="translated">다음 예제에서는이 요청과 관련 된 헤더 이름/값 쌍을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="P:System.Net.WebRequest.Headers">
          <source>Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</source>
          <target state="translated">속성이 서브클래스에서 재정의되지 않았는데 속성을 가져오거나 설정하려 할 경우</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="P:System.Net.WebRequest.ImpersonationLevel">
          <source>Gets or sets the impersonation level for the current request.</source>
          <target state="translated">현재 요청에 대한 가장 수준을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.ImpersonationLevel">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.ImpersonationLevel">
          <source>The impersonation level determines how the server can use the client's credentials.</source>
          <target state="translated">가장 수준에는 서버에서 클라이언트의 자격 증명을 사용 하는 방법을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="P:System.Net.WebRequest.Method">
          <source>When overridden in a descendant class, gets or sets the protocol method to use in this request.</source>
          <target state="translated">하위 항목 클래스에서 재정의될 때, 이 요청에서 사용할 프로토콜 메서드를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.Method">
          <source>The protocol method to use in this request.</source>
          <target state="translated">이 요청에서 사용할 프로토콜 메서드입니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.Method">
          <source>When overridden in a descendant class, the <ph id="ph1">&lt;xref:System.Net.WebRequest.Method%2A&gt;</ph> property contains the request method to use in this request.</source>
          <target state="translated">하위 항목 클래스에서 재정의 된 경우는 <ph id="ph1">&lt;xref:System.Net.WebRequest.Method%2A&gt;</ph> 속성이이 요청에서 사용할 요청 메서드를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.Method">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> class is an <ph id="ph2">`abstract`</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 클래스는는 <ph id="ph2">`abstract`</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.Method">
          <source>The actual behavior of <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> instances at run time is determined by the descendant class returned by the <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">실제 동작이 <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 인스턴스 실행 시 반환 된 하위 항목 클래스에 의해 결정 됩니다는 <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.Method">
          <source>For more information about default values and exceptions, see the documentation for the descendant classes, such as <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.FileWebRequest&gt;</ph>.</source>
          <target state="translated">예외에 대 한 자세한 내용은 하위 항목 클래스에 대 한 설명서를와 같은 참조 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.FileWebRequest&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.Method">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Net.WebRequest.Method%2A&gt;</ph> property to POST to indicate that the request will post data to the target host.</source>
          <target state="translated">다음 예에서는 <ph id="ph1">&lt;xref:System.Net.WebRequest.Method%2A&gt;</ph> 속성을 POST 요청에서 대상 호스트를 데이터 게시를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="P:System.Net.WebRequest.Method">
          <source>If the property is not overridden in a descendant class, any attempt is made to get or set the property.</source>
          <target state="translated">서브클래스에서 재정의되지 않은 속성을 가져오거나 설정하려는 경우</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.Method">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.WebRequest.Method" /&gt;</ph> property can contain any valid request method for the protocol implemented.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.WebRequest.Method" /&gt;</ph> 속성 구현 하는 프로토콜에 대 한 유효한 요청 메서드가 모두 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.Method">
          <source>The default value must provide a default request/response transaction that does not require protocol-specific properties to be set.</source>
          <target state="translated">기본값은 프로토콜 관련 속성을 설정할 수는 필요 하지 않은 기본 요청/응답 트랜잭션을 제공 해야 합니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="P:System.Net.WebRequest.PreAuthenticate">
          <source>When overridden in a descendant class, indicates whether to pre-authenticate the request.</source>
          <target state="translated">하위 항목 클래스에서 재정의될 때, 요청을 사전 인증할지를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.PreAuthenticate">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to pre-authenticate; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">요청을 사전 인증하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.PreAuthenticate">
          <source>With the exception of the first request, the <ph id="ph1">&lt;xref:System.Net.WebRequest.PreAuthenticate%2A&gt;</ph> property indicates whether to send authentication information with subsequent requests without waiting to be challenged by the server.</source>
          <target state="translated">첫 번째 요청을 제외 하 고는 <ph id="ph1">&lt;xref:System.Net.WebRequest.PreAuthenticate%2A&gt;</ph> 속성은 서버에서 요구할 되기까지 기다리지 않고도 후속 요청을 사용 하 여 인증 정보를 보낼 것인지를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.PreAuthenticate">
          <source>When <ph id="ph1">&lt;xref:System.Net.WebRequest.PreAuthenticate%2A&gt;</ph> is <ph id="ph2">`false`</ph>, the <ph id="ph3">&lt;xref:System.Net.WebRequest&gt;</ph> waits for an authentication challenge before sending authentication information.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Net.WebRequest.PreAuthenticate%2A&gt;</ph> 은 <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Net.WebRequest&gt;</ph> 인증 정보를 보내기 전에 인증 질문에 대 한 대기 합니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.PreAuthenticate">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> class is an <ph id="ph2">`abstract`</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 클래스는는 <ph id="ph2">`abstract`</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.PreAuthenticate">
          <source>The actual behavior of <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> instances at run time is determined by the descendant class returned by the <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">실제 동작이 <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 인스턴스 실행 시 반환 된 하위 항목 클래스에 의해 결정 됩니다는 <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.PreAuthenticate">
          <source>For more information about default values and exceptions, see the documentation for the descendant classes, such as <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.FileWebRequest&gt;</ph>.</source>
          <target state="translated">예외에 대 한 자세한 내용은 하위 항목 클래스에 대 한 설명서를와 같은 참조 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.FileWebRequest&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.PreAuthenticate">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Net.WebRequest.PreAuthenticate%2A&gt;</ph> property to <ph id="ph2">`true`</ph> so that the <ph id="ph3">&lt;xref:System.Net.NetworkCredential&gt;</ph> stored in the <ph id="ph4">&lt;xref:System.Net.WebRequest.Credentials%2A&gt;</ph> property will be sent to along with the resource request.</source>
          <target state="translated">다음 예에서는 <ph id="ph1">&lt;xref:System.Net.WebRequest.PreAuthenticate%2A&gt;</ph> 속성을 <ph id="ph2">`true`</ph> 있도록는 <ph id="ph3">&lt;xref:System.Net.NetworkCredential&gt;</ph> 에 저장 된는 <ph id="ph4">&lt;xref:System.Net.WebRequest.Credentials%2A&gt;</ph> 속성에 리소스 요청과 함께 전송 됩니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="P:System.Net.WebRequest.PreAuthenticate">
          <source>Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</source>
          <target state="translated">속성이 서브클래스에서 재정의되지 않았는데 속성을 가져오거나 설정하려 할 경우</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="P:System.Net.WebRequest.Proxy">
          <source>When overridden in a descendant class, gets or sets the network proxy to use to access this Internet resource.</source>
          <target state="translated">하위 항목 클래스에서 재정의될 때, 이 인터넷 리소스에 액세스하기 위해 사용할 네트워크 프록시를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.Proxy">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IWebProxy" /&gt;</ph> to use to access the Internet resource.</source>
          <target state="translated">인터넷 리소스에 액세스하기 위해 사용할 <ph id="ph1">&lt;see cref="T:System.Net.IWebProxy" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.Proxy">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest.Proxy%2A&gt;</ph> property identifies the network proxy that the request uses to access the Internet resource.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest.Proxy%2A&gt;</ph> 속성 요청이 인터넷 리소스에 액세스를 사용 하 여 네트워크 프록시를 식별 합니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.Proxy">
          <source>The request is made through the proxy server rather than directly to the Internet resource.</source>
          <target state="translated">요청이는 인터넷 리소스에 직접 아닌 프록시 서버를 통해 이루어집니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.Proxy">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> class is an <ph id="ph2">`abstract`</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 클래스는는 <ph id="ph2">`abstract`</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.Proxy">
          <source>The actual behavior of <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> instances at run time is determined by the descendant class returned by the <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">실제 동작이 <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 인스턴스 실행 시 반환 된 하위 항목 클래스에 의해 결정 됩니다는 <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.Proxy">
          <source>For more information about default values and exceptions, see the documentation for the descendant classes, such as <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.FileWebRequest&gt;</ph>.</source>
          <target state="translated">예외에 대 한 자세한 내용은 하위 항목 클래스에 대 한 설명서를와 같은 참조 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.FileWebRequest&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.Proxy">
          <source>The following example displays the current network proxy address and allows the user to assign a new network proxy address and port number.</source>
          <target state="translated">다음 예제에서는 현재 네트워크 프록시 주소를 표시 하 고 사용자는 새 네트워크 프록시 주소와 포트 번호를 할당할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="P:System.Net.WebRequest.Proxy">
          <source>Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</source>
          <target state="translated">속성이 서브클래스에서 재정의되지 않았는데 속성을 가져오거나 설정하려 할 경우</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.RegisterPortableWebRequestCreator(System.Net.IWebRequestCreate)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IWebRequestCreate" /&gt;</ph> object to register.</source>
          <target state="translated">등록할 <ph id="ph1">&lt;see cref="T:System.Net.IWebRequestCreate" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.RegisterPortableWebRequestCreator(System.Net.IWebRequestCreate)">
          <source>Register an <ph id="ph1">&lt;see cref="T:System.Net.IWebRequestCreate" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.IWebRequestCreate" /&gt;</ph> 개체를 등록합니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)">
          <source>The complete URI or URI prefix that the <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> descendant services.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> 하위 항목이 서비스하는 완전한 URI나 URI 접두사입니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)">
          <source>The create method that the <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> calls to create the <ph id="ph2">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> descendant.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> 하위 항목을 만들기 위해 <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph>가 호출하는 생성 메서드입니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)">
          <source>Registers a <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> descendant for the specified URI.</source>
          <target state="translated">지정된 URI에 대한 <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> 하위 항목을 등록합니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if registration is successful; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">등록이 성공하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest.RegisterPrefix%2A&gt;</ph> method registers <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> descendants to service requests.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest.RegisterPrefix%2A&gt;</ph> 메서드 레지스터 <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> 하위 항목 서비스 요청을 합니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)">
          <source><ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> descendants are typically registered to handle a specific protocol, such HTTP or FTP, but can be registered to handle a request to a specific server or path on a server.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 하위 항목은 일반적으로 HTTP 또는 FTP와 같은 특정 프로토콜을 처리 하도록 등록 되어 있지만 서버에서 경로 또는 특정 서버에 요청을 처리 하도록 등록할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)">
          <source>The pre-registered reserve types already registered include the following:</source>
          <target state="translated">이미 등록 되어 미리 등록 된 예약 형식은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Net.WebRequest.Create%28System.String%29&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%28System.Uri%29&gt;</ph> methods.</source>
          <target state="translated">자세한 내용은 참조는 <ph id="ph1">&lt;xref:System.Net.WebRequest.Create%28System.String%29&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%28System.Uri%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)">
          <source>Duplicate prefixes are not allowed.</source>
          <target state="translated">중복 된 접두사는 허용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)">
          <source><ph id="ph1">&lt;xref:System.Net.WebRequest.RegisterPrefix%2A&gt;</ph> returns <ph id="ph2">`false`</ph> if an attempt is made to register a duplicate prefix.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest.RegisterPrefix%2A&gt;</ph> 반환 <ph id="ph2">`false`</ph> 중복 접두사를 등록 하려고 시도 하는 경우.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> class is registered to service requests for HTTP and HTTPS schemes by default.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 클래스는 기본적으로 HTTP 및 HTTPS 스키마에 대 한 서비스 요청에 등록 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)">
          <source>Attempts to register a different <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> descendant for these schemes will fail.</source>
          <target state="translated">다른 등록 하려고 시도 <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 이러한 스키마에 대 한 하위 항목에 실패 합니다.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)">
          <source><ph id="ph1">&lt;paramref name="prefix" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="prefix" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)">
          <source><ph id="ph1">&lt;paramref name="creator" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="creator" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="P:System.Net.WebRequest.RequestUri">
          <source>When overridden in a descendant class, gets the URI of the Internet resource associated with the request.</source>
          <target state="translated">하위 항목 클래스에서 재정의될 때, 요청과 연결된 인터넷 리소스의 URI를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.RequestUri">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> representing the resource associated with the request</source>
          <target state="translated">요청과 연결된 리소스를 나타내는 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.RequestUri">
          <source>When overridden in a descendant class, the <ph id="ph1">&lt;xref:System.Net.WebRequest.RequestUri%2A&gt;</ph> property contains the <ph id="ph2">&lt;xref:System.Uri&gt;</ph> instance that <ph id="ph3">&lt;xref:System.Net.WebRequest.Create%2A&gt;</ph> method uses to create the request.</source>
          <target state="translated">하위 항목 클래스에서 재정의 된 경우는 <ph id="ph1">&lt;xref:System.Net.WebRequest.RequestUri%2A&gt;</ph> 속성 포함는 <ph id="ph2">&lt;xref:System.Uri&gt;</ph> 인스턴스를 <ph id="ph3">&lt;xref:System.Net.WebRequest.Create%2A&gt;</ph> 요청을 만드는 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.RequestUri">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> class is an <ph id="ph2">`abstract`</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 클래스는는 <ph id="ph2">`abstract`</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.RequestUri">
          <source>The actual behavior of <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> instances at run time is determined by the descendant class returned by the <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">실제 동작이 <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 인스턴스 실행 시 반환 된 하위 항목 클래스에 의해 결정 됩니다는 <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.RequestUri">
          <source>For more information about default values and exceptions, see the documentation for the descendant classes, such as <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.FileWebRequest&gt;</ph>.</source>
          <target state="translated">예외에 대 한 자세한 내용은 하위 항목 클래스에 대 한 설명서를와 같은 참조 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.FileWebRequest&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.RequestUri">
          <source>The following example checks the <ph id="ph1">&lt;xref:System.Net.WebRequest.RequestUri%2A&gt;</ph> property to determine the site originally requested.</source>
          <target state="translated">다음 예제에서는 검사는 <ph id="ph1">&lt;xref:System.Net.WebRequest.RequestUri%2A&gt;</ph> 속성을 원래 요청 된 사이트를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="P:System.Net.WebRequest.RequestUri">
          <source>Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</source>
          <target state="translated">속성이 서브클래스에서 재정의되지 않았는데 속성을 가져오거나 설정하려 할 경우</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.RequestUri">
          <source><ph id="ph1">&lt;see cref="P:System.Net.WebRequest.RequestUri" /&gt;</ph> must contain the original <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> instance passed to the <ph id="ph3">&lt;see cref="M:System.Net.WebRequest.Create(System.Uri)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.WebRequest.RequestUri" /&gt;</ph> 원래 있어야 <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> 에 전달 된 인스턴스는 <ph id="ph3">&lt;see cref="M:System.Net.WebRequest.Create(System.Uri)" /&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.RequestUri">
          <source>If the protocol is able to redirect the request to a different URI to service the request, the descendant must provide a property to contain the URI that actually services the request</source>
          <target state="translated">하위 항목 실제로 요청을 처리 하는 URI를 포함 하는 속성을 제공 해야 합니다는 프로토콜에서 요청 서비스를 다른 URI로 요청을 리디렉션할 수 경우</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>, which holds the serialized data for the <ph id="ph2">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph>에 대해 serialize된 데이터를 보유하는 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that contains the destination of the serialized stream associated with the new <ph id="ph2">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph>.</source>
          <target state="translated">새 <ph id="ph2">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph>과 관련된 serialize된 스트림의 대상이 들어 있는 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>When overridden in a descendant class, populates a <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> instance with the data needed to serialize the <ph id="ph2">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph>.</source>
          <target state="translated">서브클래스에서 재정의될 때, <ph id="ph2">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph>를 serialize하는 데 필요한 데이터로 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 인스턴스를 채웁니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Net.WebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>An attempt is made to serialize the object, when the interface is not overridden in a descendant class.</source>
          <target state="translated">해당 인터페이스가 서브클래스에서 재정의되지 않았는데 개체를 serialize하려고 한 경우</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="P:System.Net.WebRequest.Timeout">
          <source>Gets or sets the length of time, in milliseconds, before the request times out.</source>
          <target state="translated">요청이 시간 초과되기 전의 시간(밀리초)을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.Timeout">
          <source>The length of time, in milliseconds, until the request times out, or the value <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> to indicate that the request does not time out. The default value is defined by the descendant class.</source>
          <target state="translated">요청이 시간 제한으로 실패할 때까지 걸리는 시간의 길이(밀리초) 또는 요청이 시간 제한에 걸리지 않음을 나타내는 <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> 값입니다. 기본값은 하위 항목 클래스에서 정의됩니다.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.Timeout">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest.Timeout%2A&gt;</ph> property indicates the length of time, in milliseconds, until the request times out and throws a <ph id="ph2">&lt;xref:System.Net.WebException&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest.Timeout%2A&gt;</ph> 속성 요청의 제한 시간이 초과 throw 될 때까지 시간을 밀리초 단위로 길이 나타냅니다는 <ph id="ph2">&lt;xref:System.Net.WebException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.Timeout">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest.Timeout%2A&gt;</ph> property affects only synchronous requests made with the <ph id="ph2">&lt;xref:System.Net.WebRequest.GetResponse%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest.Timeout%2A&gt;</ph> 속성이 동기 요청에만 사용 하 여 영향을 주는지는 <ph id="ph2">&lt;xref:System.Net.WebRequest.GetResponse%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.Timeout">
          <source>To time out asynchronous requests, use the <ph id="ph1">&lt;xref:System.Net.WebRequest.Abort%2A&gt;</ph> method.</source>
          <target state="translated">시간 초과 비동기 요청에 사용 된 <ph id="ph1">&lt;xref:System.Net.WebRequest.Abort%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.Timeout">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> class is an <ph id="ph2">`abstract`</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 클래스는는 <ph id="ph2">`abstract`</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.Timeout">
          <source>The actual behavior of <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> instances at run time is determined by the descendant class returned by the <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">실제 동작이 <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 인스턴스 실행 시 반환 된 하위 항목 클래스에 의해 결정 됩니다는 <ph id="ph2">&lt;xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.Timeout">
          <source>For more information about default values and exceptions, see the documentation for the descendant classes, such as <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.FileWebRequest&gt;</ph>.</source>
          <target state="translated">예외에 대 한 자세한 내용은 하위 항목 클래스에 대 한 설명서를와 같은 참조 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.FileWebRequest&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.Timeout">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Net.WebRequest.Timeout%2A&gt;</ph> property to 10000 milliseconds.</source>
          <target state="translated">다음 예에서는 <ph id="ph1">&lt;xref:System.Net.WebRequest.Timeout%2A&gt;</ph> 속성을 10000 밀리초입니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.Timeout">
          <source>If the timeout period expires before the resource can be returned, a <ph id="ph1">&lt;xref:System.Net.WebException&gt;</ph> is thrown.</source>
          <target state="translated">리소스 반환 될 수 있습니다, 전에 시간 제한 기간이 만료 되는 <ph id="ph1">&lt;xref:System.Net.WebException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="P:System.Net.WebRequest.Timeout">
          <source>Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</source>
          <target state="translated">속성이 서브클래스에서 재정의되지 않았는데 속성을 가져오거나 설정하려 할 경우</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.Timeout">
          <source>Descendant classes signal a timeout by throwing a <ph id="ph1">&lt;see cref="T:System.Net.WebException" /&gt;</ph> with the <ph id="ph2">&lt;see cref="P:System.Net.WebException.Status" /&gt;</ph> field set to <ph id="ph3">&lt;see cref="F:System.Net.WebExceptionStatus.Timeout" /&gt;</ph>.</source>
          <target state="translated">서브 클래스 하 여 작업이 시간 초과 신호는 <ph id="ph1">&lt;see cref="T:System.Net.WebException" /&gt;</ph> 와 <ph id="ph2">&lt;see cref="P:System.Net.WebException.Status" /&gt;</ph> 필드 설정 <ph id="ph3">&lt;see cref="F:System.Net.WebExceptionStatus.Timeout" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.Timeout">
          <source>When <ph id="ph1">&lt;see cref="P:System.Net.WebRequest.Timeout" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> the descendant class does not time out.</source>
          <target state="translated">때 <ph id="ph1">&lt;see cref="P:System.Net.WebRequest.Timeout" /&gt;</ph> 로 설정 된 <ph id="ph2">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> 하위 항목 클래스에는 시간이 제한 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="P:System.Net.WebRequest.UseDefaultCredentials">
          <source>When overridden in a descendant class, gets or sets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that controls whether <ph id="ph2">&lt;see cref="P:System.Net.CredentialCache.DefaultCredentials" /&gt;</ph> are sent with requests.</source>
          <target state="translated">서브클래스에서 재정의된 경우 <ph id="ph2">&lt;see cref="P:System.Net.CredentialCache.DefaultCredentials" /&gt;</ph>를 요청과 함께 보낼지 여부를 제어하는 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.UseDefaultCredentials">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the default credentials are used; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본 자격 증명이 사용되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.UseDefaultCredentials">
          <source>The default value is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.UseDefaultCredentials">
          <source>Set this property to <ph id="ph1">`true`</ph> when requests made by this <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> object should, if requested by the server, be authenticated using the credentials of the currently logged on user.</source>
          <target state="translated">이 속성을 설정 <ph id="ph1">`true`</ph> 에서이 요청을 수행 하는 경우 <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> 개체, 서버에 의해 요청 된 경우 인증 해야 현재 로그온된 한 사용자의 자격 증명을 사용 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.UseDefaultCredentials">
          <source>For client applications, this is the desired behavior in most scenarios.</source>
          <target state="translated">이 클라이언트 응용 프로그램에 대 한 대부분의 시나리오에서 원하는 동작 합니다.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebRequest.UseDefaultCredentials">
          <source>For middle tier applications, such as ASP.NET applications, instead of using this property, you would typically set the <ph id="ph1">&lt;xref:System.Net.WebRequest.Credentials%2A&gt;</ph> property to the credentials of the client on whose behalf the request is made.</source>
          <target state="translated">이 속성을 사용 하는 대신 ASP.NET 응용 프로그램과 같은 중간 계층 응용 프로그램에 대 한 일반적으로 설정한는 <ph id="ph1">&lt;xref:System.Net.WebRequest.Credentials%2A&gt;</ph> 속성 대신 요청 클라이언트의 자격 증명을 합니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="P:System.Net.WebRequest.UseDefaultCredentials">
          <source>You attempted to set this property after the request was sent.</source>
          <target state="translated">요청이 전송된 후 이 속성을 설정하려고 했습니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="P:System.Net.WebRequest.UseDefaultCredentials">
          <source>Any attempt is made to access the property, when the property is not overridden in a descendant class.</source>
          <target state="translated">속성이 서브클래스에서 재정의되지 않았는데 속성에 액세스를 시도할 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>