<Type Name="WebRequest" FullName="System.Net.WebRequest">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4b7adbafa75eb510ecc590f90854c11f33013f8d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30470687" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WebRequest : MarshalByRefObject, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit WebRequest extends System.MarshalByRefObject implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebRequest" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WebRequest&#xA;Inherits MarshalByRefObject&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebRequest abstract : MarshalByRefObject, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="0ca1c-101">URI(Uniform Resource Identifier)에 대한 요청을 만듭니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0ca1c-101">Makes a request to a Uniform Resource Identifier (URI).</span>
      </span>
      <span data-ttu-id="0ca1c-102">이 클래스는 <see langword="abstract" /> 클래스입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0ca1c-102">This is an <see langword="abstract" /> class.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ca1c-103"><xref:System.Net.WebRequest> 이 `abstract` 기본 클래스입니다. 인터넷에서 데이터에 액세스 하기 위한 NET의 요청/응답 모델입니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-103"><xref:System.Net.WebRequest> is the `abstract` base class for .NET's request/response model for accessing data from the Internet.</span></span> <span data-ttu-id="0ca1c-104">요청/응답 모델을 사용 하는 응용 프로그램의 인스턴스와 응용 프로그램 동작 하는 프로토콜을 알 수 없는 방식으로 인터넷에서 데이터를 요청할 수는 <xref:System.Net.WebRequest> 프로토콜 관련 하위 클래스의 세부 정보를 수행 하는 동안 클래스 요청입니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-104">An application that uses the request/response model can request data from the Internet in a protocol-agnostic manner, in which the application works with instances of the <xref:System.Net.WebRequest> class while protocol-specific descendant classes carry out the details of the request.</span></span>  
  
 <span data-ttu-id="0ca1c-105">요청 응용 프로그램에서 서버에 웹 페이지와 같은 특정 URI로 전송 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-105">Requests are sent from an application to a particular URI, such as a Web page on a server.</span></span> <span data-ttu-id="0ca1c-106">목록에서 만들려는 적절 한 하위 클래스를 결정 하는 URI <xref:System.Net.WebRequest> 응용 프로그램에 대해 등록 된 하위 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-106">The URI determines the proper descendant class to create from a list of <xref:System.Net.WebRequest> descendants registered for the application.</span></span> <span data-ttu-id="0ca1c-107"><xref:System.Net.WebRequest> 하위 항목은 일반적으로 HTTP 또는 FTP와 같은 특정 프로토콜을 처리 하도록 등록 되어 있지만 서버에서 경로 또는 특정 서버에 요청을 처리 하도록 등록할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-107"><xref:System.Net.WebRequest> descendants are typically registered to handle a specific protocol, such as HTTP or FTP, but can be registered to handle a request to a specific server or path on a server.</span></span>  
  
 <span data-ttu-id="0ca1c-108"><xref:System.Net.WebRequest> throw 클래스는 <xref:System.Net.WebException> 인터넷 리소스에 액세스 하는 동안 오류가 발생 한 경우.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-108">The <xref:System.Net.WebRequest> class throws a <xref:System.Net.WebException> when errors occur while accessing an Internet resource.</span></span> <span data-ttu-id="0ca1c-109"><xref:System.Net.WebException.Status%2A> 속성은 중 하나는 <xref:System.Net.WebExceptionStatus> 오류의 출처를 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-109">The <xref:System.Net.WebException.Status%2A> property is one of the <xref:System.Net.WebExceptionStatus> values that indicates the source of the error.</span></span> <span data-ttu-id="0ca1c-110">때 <xref:System.Net.WebException.Status%2A> 은 <xref:System.Net.WebExceptionStatus.ProtocolError?displayProperty=nameWithType>, <xref:System.Net.WebException.Response%2A> 속성에 포함 된 <xref:System.Net.WebResponse> 인터넷 리소스에서 받은 합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-110">When <xref:System.Net.WebException.Status%2A> is <xref:System.Net.WebExceptionStatus.ProtocolError?displayProperty=nameWithType>, the <xref:System.Net.WebException.Response%2A> property contains the <xref:System.Net.WebResponse> received from the Internet resource.</span></span>  
  
 <span data-ttu-id="0ca1c-111">때문에 <xref:System.Net.WebRequest> 클래스는는 `abstract` 클래스의 실제 동작이 <xref:System.Net.WebRequest> 인스턴스 실행 시 반환 된 하위 항목 클래스에 의해 결정 됩니다 <xref:System.Net.WebRequest.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-111">Because the <xref:System.Net.WebRequest> class is an `abstract` class, the actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by <xref:System.Net.WebRequest.Create%2A> method.</span></span> <span data-ttu-id="0ca1c-112">예외에 대 한 자세한 내용은 하위 항목 클래스에 대 한 설명서를와 같은 참조 <xref:System.Net.HttpWebRequest> 및 <xref:System.Net.FileWebRequest>합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-112">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ca1c-113">사용 하 여는 <xref:System.Net.WebRequest.Create%2A> 새로운 초기화 하려면 메서드 <xref:System.Net.WebRequest> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-113">Use the <xref:System.Net.WebRequest.Create%2A> method to initialize new <xref:System.Net.WebRequest> instances.</span></span> <span data-ttu-id="0ca1c-114">사용 하지 않는 <xref:System.Net.WebRequest> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-114">Do not use the <xref:System.Net.WebRequest> constructor.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ca1c-115">WebRequest 개체를 만드는 응용 프로그램을 일반 사용자의 자격 증명으로 실행, 응용 프로그램 권한이 명시적으로 부여 되어 사용자에 게 작업을 수행 하려면 로컬 컴퓨터 저장소에 설치 된 인증서에 액세스할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-115">If the application that creates the WebRequest object runs with the credentials of a Normal user, the application will not be able to access certificates installed in the local machine store unless permission has been explicitly given to the user to do so.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ca1c-116">만드는 방법을 보여 주는 다음 예제는 <xref:System.Net.WebRequest> 인스턴스를 응답을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-116">The following example shows how to create a <xref:System.Net.WebRequest> instance and return the response.</span></span>  
  
 [!code-cpp[NclWebRequestSimple#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebRequestSimple/CPP/webrequestget.cpp#1)]
 [!code-csharp[NclWebRequestSimple#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebRequestSimple/CS/webrequestget.cs#1)]
 [!code-vb[NclWebRequestSimple#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebRequestSimple/VB/webrequestget.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.WebPermission">
      <span data-ttu-id="0ca1c-117">요청된 된 URI 또는 URI에는 요청을 리디렉션합니다 액세스 하려면.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0ca1c-117">To access the requested URI or any URI that the request is redirected to.</span>
      </span>
      <span data-ttu-id="0ca1c-118">연관된 열거형: <see cref="F:System.Net.NetworkAccess.Connect" /></span>
      <span class="sxs-lookup">
        <span data-stu-id="0ca1c-118">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Connect" />.</span>
      </span>
    </permission>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="0ca1c-119">상속 하는 경우 <see cref="T:System.Net.WebRequest" />, 멤버를 재정의 해야 합니다: <see cref="P:System.Net.WebRequest.Method" />, <see cref="P:System.Net.WebRequest.RequestUri" />, <see cref="P:System.Net.WebRequest.Headers" />, <see cref="P:System.Net.WebRequest.ContentLength" />, <see cref="P:System.Net.WebRequest.ContentType" />, <see cref="P:System.Net.WebRequest.Credentials" />, <see cref="P:System.Net.WebRequest.PreAuthenticate" />, <see cref="M:System.Net.WebRequest.GetRequestStream" />, <see cref="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)" /><see cref="M:System.Net.WebRequest.GetResponse" />, <see cref="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />, 및 <see cref="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)" />합니다.</span>
        <span class="sxs-lookup">
          <span data-stu-id="0ca1c-119">When you inherit from <see cref="T:System.Net.WebRequest" />, you must override the following members: <see cref="P:System.Net.WebRequest.Method" />, <see cref="P:System.Net.WebRequest.RequestUri" />, <see cref="P:System.Net.WebRequest.Headers" />, <see cref="P:System.Net.WebRequest.ContentLength" />, <see cref="P:System.Net.WebRequest.ContentType" />, <see cref="P:System.Net.WebRequest.Credentials" />, <see cref="P:System.Net.WebRequest.PreAuthenticate" />, <see cref="M:System.Net.WebRequest.GetRequestStream" />, <see cref="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)" />, <see cref="M:System.Net.WebRequest.GetResponse" />, <see cref="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />, and <see cref="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)" />.</span>
        </span>
        <span data-ttu-id="0ca1c-120">구현을 제공 해야 하는 또한는 <see cref="T:System.Net.IWebRequestCreate" /> 인터페이스를 정의 하는 <see cref="M:System.Net.IWebRequestCreate.Create(System.Uri)" /> 호출할 때 사용 하는 방법 <see cref="M:System.Net.WebRequest.Create(System.Uri)" />합니다.</span>
        <span class="sxs-lookup">
          <span data-stu-id="0ca1c-120">In addition, you must provide an implementation of the <see cref="T:System.Net.IWebRequestCreate" /> interface, which defines the <see cref="M:System.Net.IWebRequestCreate.Create(System.Uri)" /> method used when you call <see cref="M:System.Net.WebRequest.Create(System.Uri)" />.</span>
        </span>
        <span data-ttu-id="0ca1c-121">구현 하는 클래스를 등록 해야는 <see cref="T:System.Net.IWebRequestCreate" /> 인터페이스를 사용 하는 <see cref="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)" /> 메서드 또는 구성 파일입니다.</span>
        <span class="sxs-lookup">
          <span data-stu-id="0ca1c-121">You must register the class that implements the <see cref="T:System.Net.IWebRequestCreate" /> interface, using the <see cref="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)" /> method or the configuration file.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.Net.HttpWebRequest" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0ca1c-122">
            <see cref="T:System.Net.WebRequest" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-122">Initializes a new instance of the <see cref="T:System.Net.WebRequest" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebRequest ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebRequest();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0ca1c-123">
            <see cref="T:System.Net.WebRequest" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-123">Initializes a new instance of the <see cref="T:System.Net.WebRequest" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ca1c-124">사용 하 여는 <xref:System.Net.WebRequest.Create%2A> 새로운 초기화 하려면 메서드 <xref:System.Net.WebRequest> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-124">Use the <xref:System.Net.WebRequest.Create%2A> method to initialize new <xref:System.Net.WebRequest> instances.</span></span> <span data-ttu-id="0ca1c-125">생성자를 사용 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-125">Do not use the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ca1c-126">만드는 방법을 보여 주는 다음 예제는 <xref:System.Net.WebRequest> 호출 하 여 인스턴스는 <xref:System.Net.WebRequest.Create%2A> 에서 메서드는 <xref:System.Net.WebRequest> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-126">The following example shows how to create a <xref:System.Net.WebRequest> instance by calling the <xref:System.Net.WebRequest.Create%2A> method on the <xref:System.Net.WebRequest> class.</span></span>  
  
 [!code-cpp[Classic WebRequest.WebRequest Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic WebRequest.WebRequest Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebRequest.WebRequest Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebRequest.WebRequest Example/CS/source.cs#1)]
 [!code-vb[Classic WebRequest.WebRequest Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebRequest.WebRequest Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebRequest (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebRequest(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">
          <span data-ttu-id="0ca1c-127">새 <see cref="T:System.Net.WebRequest" /> 인스턴스를 serialize하는 데 필요한 정보가 들어 있는 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-127">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains the information required to serialize the new <see cref="T:System.Net.WebRequest" /> instance.</span>
          </span>
        </param>
        <param name="streamingContext">
          <span data-ttu-id="0ca1c-128">새 <see cref="T:System.Net.WebRequest" /> 인스턴스와 연결된 serialize된 스트림의 소스를 나타내는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-128">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that indicates the source of the serialized stream associated with the new <see cref="T:System.Net.WebRequest" /> instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ca1c-129">
            <see cref="T:System.Net.WebRequest" />와 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 클래스의 지정된 인스턴스로부터 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-129">Initializes a new instance of the <see cref="T:System.Net.WebRequest" /> class from the specified instances of the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> classes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ca1c-130">이 생성자를 구현 하는 서브 클래스에서 구현 된 경우는 <xref:System.Runtime.Serialization.ISerializable> 에 대 한 인터페이스는 <xref:System.Net.WebRequest> 하위 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-130">When implemented by a descendant class, this constructor implements the <xref:System.Runtime.Serialization.ISerializable> interface for the <xref:System.Net.WebRequest> descendant.</span></span>  
  
 <span data-ttu-id="0ca1c-131">Serialization을 사용 하는 경우 응용 프로그램이 완전 신뢰 모드에서 실행 해야 함을 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-131">Notice that an application must run in full trust mode when using serialization.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0ca1c-132">생성자가 서브클래스에서 재정의되지 않았는데 생성자에 액세스하려 할 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-132">Any attempt is made to access the constructor, when the constructor is not overridden in a descendant class.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public virtual void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Abort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0ca1c-133">요청을 중단합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-133">Aborts the request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ca1c-134"><xref:System.Net.WebRequest.Abort%2A> 시작 하는 인터넷 리소스에 대 한 비동기 요청을 취소 하는 메서드는 <xref:System.Net.WebRequest.BeginGetResponse%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-134">The <xref:System.Net.WebRequest.Abort%2A> method cancels asynchronous requests to Internet resources started with the <xref:System.Net.WebRequest.BeginGetResponse%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ca1c-135"><xref:System.Net.WebRequest> 클래스는는 `abstract` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-135">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="0ca1c-136">실제 동작이 <xref:System.Net.WebRequest> 인스턴스 실행 시 반환 된 하위 항목 클래스에 의해 결정 됩니다는 <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-136">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0ca1c-137">예외에 대 한 자세한 내용은 하위 항목 클래스에 대 한 설명서를와 같은 참조 <xref:System.Net.HttpWebRequest> 및 <xref:System.Net.FileWebRequest>합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-137">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0ca1c-138">메서드가 서브클래스에서 재정의되지 않았는데 메서드에 액세스하려 할 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-138">Any attempt is made to access the method, when the method is not overridden in a descendant class.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationLevel">
      <MemberSignature Language="C#" Value="public System.Net.Security.AuthenticationLevel AuthenticationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Security.AuthenticationLevel AuthenticationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.AuthenticationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationLevel As AuthenticationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::AuthenticationLevel AuthenticationLevel { System::Net::Security::AuthenticationLevel get(); void set(System::Net::Security::AuthenticationLevel value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Security.AuthenticationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0ca1c-139">이 요청에 사용되는 인증 및 가장 수준을 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-139">Gets or sets values indicating the level of authentication and impersonation used for this request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0ca1c-140">
            <see cref="T:System.Net.Security.AuthenticationLevel" /> 값의 비트 조합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-140">A bitwise combination of the <see cref="T:System.Net.Security.AuthenticationLevel" /> values.</span>
          </span>
          <span data-ttu-id="0ca1c-141">기본값은 <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-141">The default value is <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested" />.</span>
          </span>
          <span data-ttu-id="0ca1c-142">상호 인증에서는 클라이언트와 서버가 모두 자격 증명을 제공해야 ID를 구성할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-142">In mutual authentication, both the client and server present credentials to establish their identity.</span>
          </span>
          <span data-ttu-id="0ca1c-143">
            <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired" /> 및 <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested" /> 값은 Kerberos 인증과 관련이 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-143">The <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired" /> and <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested" /> values are relevant for Kerberos authentication.</span>
          </span>
          <span data-ttu-id="0ca1c-144">Kerberos 인증은 직접 지원될 수도 있고, 보안 협상 프로토콜을 사용하여 실제 보안 프로토콜을 선택하는 경우에 사용할 수도 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-144">Kerberos authentication can be supported directly, or can be used if the Negotiate security protocol is used to select the actual security protocol.</span>
          </span>
          <span data-ttu-id="0ca1c-145">인증 프로토콜에 대 한 자세한 내용은 참조 [인터넷 인증](http://msdn.microsoft.com/library/d342e87c-f672-4660-a513-41a2f2b80c4a)합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-145">For more information about authentication protocols, see [Internet Authentication](http://msdn.microsoft.com/library/d342e87c-f672-4660-a513-41a2f2b80c4a).</span>
          </span>
          <span data-ttu-id="0ca1c-146">상호 인증이 발생했는지 여부를 확인하려면 <see cref="P:System.Net.WebResponse.IsMutuallyAuthenticated" /> 속성을 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-146">To determine whether mutual authentication occurred, check the <see cref="P:System.Net.WebResponse.IsMutuallyAuthenticated" /> property.</span>
          </span>
          <span data-ttu-id="0ca1c-147">
            <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired" /> 인증 플래그 값을 지정할 경우 상호 인증이 발생하지 않으면 응용 프로그램에서는 상호 인증이 실패했음을 나타내는 내부 예외인 <see cref="T:System.Net.ProtocolViolationException" />과 함께 <see cref="T:System.IO.IOException" />이 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-147">If you specify the <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired" /> authentication flag value and mutual authentication does not occur, your application will receive an <see cref="T:System.IO.IOException" /> with a <see cref="T:System.Net.ProtocolViolationException" /> inner exception indicating that mutual authentication failed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0ca1c-148">다음 코드 예제에서는이 속성의 값을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-148">The following code example sets the value of this property.</span></span>  
  
 [!code-cpp[NclCredPolicy#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#1)]
 [!code-csharp[NclCredPolicy#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetRequestStream">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginGetRequestStream (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginGetRequestStream(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginGetRequestStream (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginGetRequestStream(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="0ca1c-149">
            <see cref="T:System.AsyncCallback" /> 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-149">The <see cref="T:System.AsyncCallback" /> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="0ca1c-150">이 비동기 요청에 대한 상태 정보가 들어 있는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-150">An object containing state information for this asynchronous request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ca1c-151">서브클래스에서 재정의될 때, <see cref="M:System.Net.WebRequest.GetRequestStream" /> 메서드의 비동기 버전을 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-151">When overridden in a descendant class, provides an asynchronous version of the <see cref="M:System.Net.WebRequest.GetRequestStream" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ca1c-152">비동기 요청을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-152">An <see cref="T:System.IAsyncResult" /> that references the asynchronous request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ca1c-153"><xref:System.Net.WebRequest.BeginGetRequestStream%2A> 메서드 인터넷 리소스에 데이터를 보내는 데 사용 되는 스트림에 대 한 비동기 요청을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-153">The <xref:System.Net.WebRequest.BeginGetRequestStream%2A> method starts an asynchronous request for a stream used to send data to an Internet resource.</span></span> <span data-ttu-id="0ca1c-154">구현 하는 콜백 메서드는 <xref:System.AsyncCallback> 사용 하 여 대리자는 <xref:System.Net.WebRequest.EndGetRequestStream%2A> 요청 스트림을 반환 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-154">The callback method that implements the <xref:System.AsyncCallback> delegate uses the <xref:System.Net.WebRequest.EndGetRequestStream%2A> method to return the request stream.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ca1c-155"><xref:System.Net.WebRequest> 클래스는는 `abstract` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-155">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="0ca1c-156">실제 동작이 <xref:System.Net.WebRequest> 인스턴스 실행 시 반환 된 하위 항목 클래스에 의해 결정 됩니다는 <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-156">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0ca1c-157">예외에 대 한 자세한 내용은 하위 항목 클래스에 대 한 설명서를와 같은 참조 <xref:System.Net.HttpWebRequest> 및 <xref:System.Net.FileWebRequest>합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-157">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ca1c-158">다음 예제에서는 <xref:System.Net.WebRequest.BeginGetRequestStream%2A> 요청 스트림에 비동기적으로 얻으려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-158">The following example uses the <xref:System.Net.WebRequest.BeginGetRequestStream%2A> to asynchronously obtain the request stream.</span></span>  
  
 [!code-cpp[WebRequest_BeginGetRequest#3](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CPP/webrequest_begingetrequest.cpp#3)]
 [!code-csharp[WebRequest_BeginGetRequest#3](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CS/webrequest_begingetrequest.cs#3)]
 [!code-vb[WebRequest_BeginGetRequest#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_BeginGetRequest/VB/webrequest_begingetrequest.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0ca1c-159">메서드가 서브클래스에서 재정의되지 않았는데 메서드에 액세스하려 할 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-159">Any attempt is made to access the method, when the method is not overridden in a descendant class.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)" />
      </Docs>
    </Member>
    <Member MemberName="BeginGetResponse">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginGetResponse (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginGetResponse(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginGetResponse (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginGetResponse(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="0ca1c-160">
            <see cref="T:System.AsyncCallback" /> 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-160">The <see cref="T:System.AsyncCallback" /> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="0ca1c-161">이 비동기 요청에 대한 상태 정보가 들어 있는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-161">An object containing state information for this asynchronous request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ca1c-162">하위 항목 클래스에서 재정의될 때, 인터넷 리소스에 대한 비동기 요청을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-162">When overridden in a descendant class, begins an asynchronous request for an Internet resource.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ca1c-163">비동기 요청을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-163">An <see cref="T:System.IAsyncResult" /> that references the asynchronous request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ca1c-164"><xref:System.Net.WebRequest.BeginGetResponse%2A> 메서드는 응답에 대 한 비동기 요청을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-164">The <xref:System.Net.WebRequest.BeginGetResponse%2A> method starts an asynchronous request for a response.</span></span> <span data-ttu-id="0ca1c-165">구현 하는 콜백 메서드는 <xref:System.AsyncCallback> 사용 하 여 대리자는 <xref:System.Net.WebRequest.EndGetResponse%2A> 반환 하는 메서드는 <xref:System.Net.WebResponse> 인터넷 리소스에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-165">The callback method that implements the <xref:System.AsyncCallback> delegate uses the <xref:System.Net.WebRequest.EndGetResponse%2A> method to return the <xref:System.Net.WebResponse> from the Internet resource.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ca1c-166"><xref:System.Net.WebRequest> 클래스는는 `abstract` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-166">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="0ca1c-167">실제 동작이 <xref:System.Net.WebRequest> 인스턴스 실행 시 반환 된 하위 항목 클래스에 의해 결정 됩니다는 <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-167">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0ca1c-168">예외에 대 한 자세한 내용은 하위 항목 클래스에 대 한 설명서를와 같은 참조 <xref:System.Net.HttpWebRequest> 및 <xref:System.Net.FileWebRequest>합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-168">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ca1c-169">사용 하 여 WebException을 throw 되 면는 <xref:System.Net.WebException.Response%2A> 및 <xref:System.Net.WebException.Status%2A> 속성의 서버에서 응답을 결정 하는 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-169">If a WebException is thrown, use the <xref:System.Net.WebException.Response%2A> and <xref:System.Net.WebException.Status%2A> properties of the exception to determine the response from the server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ca1c-170">다음 예제에서는 <xref:System.Net.WebRequest.BeginGetResponse%2A> 를 비동기적으로 대상 리소스를 요청 합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-170">The following example uses <xref:System.Net.WebRequest.BeginGetResponse%2A> to asynchronously request the target resource.</span></span> <span data-ttu-id="0ca1c-171">리소스를 가져올 때 지정된 된 콜백 메서드 실행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-171">When the resource has been obtained, the specified callback method will be executed.</span></span>  
  
 [!code-cpp[WebRequest_BeginGetResponse#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_BeginGetResponse/CPP/webrequest_begingetresponse.cpp#2)]
 [!code-csharp[WebRequest_BeginGetResponse#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_BeginGetResponse/CS/webrequest_begingetresponse.cs#2)]
 [!code-vb[WebRequest_BeginGetResponse#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_BeginGetResponse/VB/webrequest_begingetresponse.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0ca1c-172">메서드가 서브클래스에서 재정의되지 않았는데 메서드에 액세스하려 할 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-172">Any attempt is made to access the method, when the method is not overridden in a descendant class.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)" />
        <altmember cref="M:System.Net.WebRequest.GetResponse" />
      </Docs>
    </Member>
    <Member MemberName="CachePolicy">
      <MemberSignature Language="C#" Value="public virtual System.Net.Cache.RequestCachePolicy CachePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Cache.RequestCachePolicy CachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.CachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CachePolicy As RequestCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::Cache::RequestCachePolicy ^ CachePolicy { System::Net::Cache::RequestCachePolicy ^ get(); void set(System::Net::Cache::RequestCachePolicy ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0ca1c-173">이 요청에 대한 캐시 정책을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-173">Gets or sets the cache policy for this request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0ca1c-174">캐시 정책을 정의하는 <see cref="T:System.Net.Cache.RequestCachePolicy" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-174">A <see cref="T:System.Net.Cache.RequestCachePolicy" /> object that defines a cache policy.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ca1c-175">현재 캐시 정책 및 캐시에 요청된 된 리소스의 현재 상태는 응답을 캐시에서 검색할 수 있는지 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-175">The current cache policy and the presence of the requested resource in the cache determine whether a response can be retrieved from the cache.</span></span> <span data-ttu-id="0ca1c-176">일반적으로 캐시 된 응답이 사용 하 여 응용 프로그램 성능을 향상 시킵니다. 하지만 캐시에 응답 서버에 대 한 응답을 일치 하지 않습니다 위험이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-176">Using cached responses usually improves application performance, but there is a risk that the response in the cache does not match the response on the server.</span></span>  
  
 <span data-ttu-id="0ca1c-177">기본 캐시 정책을 설정 하 여 또는 Machine.config 구성 파일에 지정할 수 있습니다는 <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A> 하이퍼텍스트 전송 프로토콜 (HTTP) 또는 보안 하이퍼텍스트 전송 프로토콜 (HTTPS) URI 체계를 사용 하는 요청에 대 한 속성.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-177">Default cache policy can be specified in the Machine.config configuration file or by setting the <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A> property for requests that use the Hypertext Transfer Protocol (HTTP) or Secure Hypertext Transfer Protocol (HTTPS) URI scheme.</span></span>  
  
 <span data-ttu-id="0ca1c-178">리소스에 대 한 응답 스트림을 검색 하는 스트림의 끝에 대 한 읽기 경우에 리소스의 복사본을 캐시에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-178">A copy of a resource is only added to the cache if the response stream for the resource is retrieved and read to the end of the stream.</span></span> <span data-ttu-id="0ca1c-179">이므로 동일한 리소스에 대 한 다른 요청에는이 요청에 대 한 캐시 정책 수준에 따라 캐시 된 복사본을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-179">So another request for the same resource could use a cached copy, depending on the cache policy level for this request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ca1c-180">다음 코드 예제에서는 웹 요청에 대 한 캐시 정책을 설정 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-180">The following code example demonstrates setting the cache policy for a Web request.</span></span>  
  
 [!code-cpp[NCLSimpleCache#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#2)]
 [!code-csharp[NCLSimpleCache#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Cache.RequestCachePolicy" />
        <altmember cref="T:System.Net.Cache.HttpRequestCacheLevel" />
        <altmember cref="T:System.Net.Cache.RequestCacheLevel" />
        <altmember cref="P:System.Net.HttpWebRequest.DefaultCachePolicy" />
        <altmember cref="P:System.Net.WebRequest.DefaultCachePolicy" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionGroupName">
      <MemberSignature Language="C#" Value="public virtual string ConnectionGroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionGroupName" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.ConnectionGroupName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConnectionGroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionGroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0ca1c-181">파생 클래스에서 재정의되면 요청에 대한 연결 그룹 이름을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-181">When overridden in a descendant class, gets or sets the name of the connection group for the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0ca1c-182">요청에 대한 연결 그룹 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-182">The name of the connection group for the request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ca1c-183"><xref:System.Net.WebRequest.ConnectionGroupName%2A> 속성 하나 이상의 연결 풀에 응용 프로그램 내에서 특정 요청을 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-183">The <xref:System.Net.WebRequest.ConnectionGroupName%2A> property associates specific requests within an application to one or more connection pools.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ca1c-184"><xref:System.Net.WebRequest> 클래스는는 `abstract` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-184">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="0ca1c-185">실제 동작이 <xref:System.Net.WebRequest> 인스턴스 실행 시 반환 된 하위 항목 클래스에 의해 결정 됩니다는 <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-185">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0ca1c-186">예외에 대 한 자세한 내용은 하위 항목 클래스에 대 한 설명서를와 같은 참조 <xref:System.Net.HttpWebRequest> 및 <xref:System.Net.FileWebRequest>합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-186">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0ca1c-187">속성이 서브클래스에서 재정의되지 않았는데 속성을 가져오거나 설정하려 할 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-187">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0ca1c-188">
              <see cref="P:System.Net.WebRequest.ConnectionGroupName" /> 속성은 일반적으로 발생할 수 있는 보안 오류를 방지 하기 위해 인터넷 리소스에 연결 된 자격 증명 집합을 공유 하는 요청의 그룹을 연결 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0ca1c-188">The <see cref="P:System.Net.WebRequest.ConnectionGroupName" /> property typically associates a group of requests that share a set of credentials with a connection to an Internet resource to avoid potential security failures.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Net.Configuration.ConnectionManagementElement.MaxConnection" />
        <altmember cref="P:System.Net.HttpWebRequest.ConnectionGroupName" />
      </Docs>
    </Member>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public virtual long ContentLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.ContentLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContentLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long ContentLength { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0ca1c-189">하위 항목 클래스에서 재정의될 때, 전송 중인 요청 데이터의 콘텐츠 길이를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-189">When overridden in a descendant class, gets or sets the content length of the request data being sent.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0ca1c-190">전송 중인 요청 데이터의 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-190">The number of bytes of request data being sent.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ca1c-191"><xref:System.Net.WebRequest.ContentLength%2A> 속성 포함 하 여 인터넷 리소스에 보낸 데이터의 바이트 수는 <xref:System.Net.WebRequest> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-191">The <xref:System.Net.WebRequest.ContentLength%2A> property contains the number of bytes of data sent to the Internet resource by the <xref:System.Net.WebRequest> instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ca1c-192"><xref:System.Net.WebRequest> 클래스는는 `abstract` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-192">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="0ca1c-193">실제 동작이 <xref:System.Net.WebRequest> 인스턴스 실행 시 반환 된 하위 항목 클래스에 의해 결정 됩니다는 <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-193">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0ca1c-194">예외에 대 한 자세한 내용은 하위 항목 클래스에 대 한 설명서를와 같은 참조 <xref:System.Net.HttpWebRequest> 및 <xref:System.Net.FileWebRequest>합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-194">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ca1c-195">다음 예에서는 <xref:System.Net.WebRequest.ContentLength%2A> 속성을 보내는 바이트 버퍼의 바이트의 양입니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-195">The following example sets the <xref:System.Net.WebRequest.ContentLength%2A> property to the amount of bytes in the outgoing byte buffer.</span></span>  
  
 [!code-cpp[WebRequest_ContentType#4](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_ContentType/CPP/webrequest_contenttype.cpp#4)]
 [!code-csharp[WebRequest_ContentType#4](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_ContentType/CS/webrequest_contenttype.cs#4)]
 [!code-vb[WebRequest_ContentType#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_ContentType/VB/webrequest_contenttype.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0ca1c-196">속성이 서브클래스에서 재정의되지 않았는데 속성을 가져오거나 설정하려 할 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-196">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.HttpWebRequest.ContentLength" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public virtual string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0ca1c-197">하위 항목 클래스에서 재정의될 때, 전송 중인 요청 데이터의 콘텐츠 형식을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-197">When overridden in a descendant class, gets or sets the content type of the request data being sent.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0ca1c-198">요청 데이터의 콘텐츠 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-198">The content type of the request data.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ca1c-199"><xref:System.Net.WebRequest.ContentType%2A> 속성 요청의 미디어 형식을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-199">The <xref:System.Net.WebRequest.ContentType%2A> property contains the media type of the request.</span></span> <span data-ttu-id="0ca1c-200">이 일반적으로 MIME 콘텐츠 인코딩입니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-200">This is typically the MIME encoding of the content.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ca1c-201"><xref:System.Net.WebRequest> 클래스는는 `abstract` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-201">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="0ca1c-202">실제 동작이 <xref:System.Net.WebRequest> 인스턴스 실행 시 반환 된 하위 항목 클래스에 의해 결정 됩니다는 <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-202">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0ca1c-203">예외에 대 한 자세한 내용은 하위 항목 클래스에 대 한 설명서를와 같은 참조 <xref:System.Net.HttpWebRequest> 및 <xref:System.Net.FileWebRequest>합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-203">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ca1c-204">다음 예에서는 <xref:System.Net.WebRequest.ContentType%2A> 속성을 적절 한 미디어 유형입니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-204">The following example sets the <xref:System.Net.WebRequest.ContentType%2A> property to the appropriate media type.</span></span>  
  
 [!code-cpp[WebRequest_ContentType#4](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_ContentType/CPP/webrequest_contenttype.cpp#4)]
 [!code-csharp[WebRequest_ContentType#4](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_ContentType/CS/webrequest_contenttype.cs#4)]
 [!code-vb[WebRequest_ContentType#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_ContentType/VB/webrequest_contenttype.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0ca1c-205">속성이 서브클래스에서 재정의되지 않았는데 속성을 가져오거나 설정하려 할 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-205">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.HttpWebRequest.ContentType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0ca1c-206">새 <see cref="T:System.Net.WebRequest" />를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-206">Initializes a new <see cref="T:System.Net.WebRequest" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Net.WebRequest Create (string requestUriString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.WebRequest Create(string requestUriString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (requestUriString As String) As WebRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::WebRequest ^ Create(System::String ^ requestUriString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUriString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestUriString">
          <span data-ttu-id="0ca1c-207">인터넷 리소스를 식별하는 URI입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-207">The URI that identifies the Internet resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ca1c-208">지정된 URI 체계에 대한 새 <see cref="T:System.Net.WebRequest" /> 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-208">Initializes a new <see cref="T:System.Net.WebRequest" /> instance for the specified URI scheme.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ca1c-209">특정 URI 체계에 대한 <see cref="T:System.Net.WebRequest" /> 하위 항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-209">A <see cref="T:System.Net.WebRequest" /> descendant for the specific URI scheme.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ca1c-210"><xref:System.Net.WebRequest.Create%2A> 의 하위 항목을 반환 하는 메서드는 <xref:System.Net.WebRequest> 클래스에 대 한 가장 가까운 등록 된 일치 항목으로 런타임 시 결정 `requestUri`합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-210">The <xref:System.Net.WebRequest.Create%2A> method returns a descendant of the <xref:System.Net.WebRequest> class determined at run time as the closest registered match for `requestUri`.</span></span>  
  
 <span data-ttu-id="0ca1c-211">예를 들어, 문자로 시작 하는 URI `http://` 또는 `https://` 전달 `requestUri`, <xref:System.Net.HttpWebRequest> 반환한 <xref:System.Net.WebRequest.Create%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-211">For example, when a URI beginning with `http://` or `https://` is passed in `requestUri`, an <xref:System.Net.HttpWebRequest> is returned by <xref:System.Net.WebRequest.Create%2A>.</span></span> <span data-ttu-id="0ca1c-212">로 시작 하는 URI `ftp://` 대신 전달 되는 <xref:System.Net.WebRequest.Create%2A> 메서드는 반환는 <xref:System.Net.FtpWebRequest> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-212">If a URI beginning with `ftp://` is passed instead, the <xref:System.Net.WebRequest.Create%2A> method will return a <xref:System.Net.FtpWebRequest> instance.</span></span> <span data-ttu-id="0ca1c-213">로 시작 하는 URI `file://` 대신 전달 되는 <xref:System.Net.WebRequest.Create%2A> 메서드는 반환는 <xref:System.Net.FileWebRequest> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-213">If a URI beginning with `file://` is passed instead, the <xref:System.Net.WebRequest.Create%2A> method will return a <xref:System.Net.FileWebRequest> instance.</span></span>  
  
 <span data-ttu-id="0ca1c-214">이미 등록 되어 미리 등록 된 예약 형식은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-214">The pre-registered reserve types already registered include the following:</span></span>  
  
-   `http://`  
  
-   `https://`  
  
-   `ftp://`  
  
-   `file://`  
  
 <span data-ttu-id="0ca1c-215">.NET에 대 한 지원이 포함 되어는 `http://`, `https://`, `ftp://`, 및 `file://` URI 체계입니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-215">.NET includes support for the `http://`, `https://`, `ftp://`, and `file://` URI schemes.</span></span> <span data-ttu-id="0ca1c-216">사용자 지정 <xref:System.Net.WebRequest> 등록 된 다른 요청을 처리는 <xref:System.Net.WebRequest.RegisterPrefix%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-216">Custom <xref:System.Net.WebRequest> descendants to handle other requests are registered with the <xref:System.Net.WebRequest.RegisterPrefix%2A> method.</span></span>  
  
 <span data-ttu-id="0ca1c-217"><xref:System.Net.WebRequest.Create%2A> 메서드는 `requestUriString` 만들려는 매개 변수는 <xref:System.Uri> 로 전달 하는 새 인스턴스 <xref:System.Net.WebRequest>합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-217">The <xref:System.Net.WebRequest.Create%2A> method uses the `requestUriString` parameter to create a <xref:System.Uri> instance that it passes to the new <xref:System.Net.WebRequest>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ca1c-218">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-218">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="0ca1c-219">자세한 내용은 참조 [ &#91; \<topic://conUsingNetworkTracing >&#93;](http://msdn.microsoft.com/library/e993b7c3-087f-45d8-9c02-9dded936d804)합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-219">For more information, see [&#91;\<topic://conUsingNetworkTracing>&#93;](http://msdn.microsoft.com/library/e993b7c3-087f-45d8-9c02-9dded936d804).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ca1c-220">다음 예제에서는 <xref:System.Net.WebRequest.Create%2A> 를 인스턴스화하는 <xref:System.Net.HttpWebRequest> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-220">The following example uses <xref:System.Net.WebRequest.Create%2A> to instantiate an <xref:System.Net.HttpWebRequest> instance.</span></span> <span data-ttu-id="0ca1c-221">대상 URL을 표시 하는 string 생성자 매개 변수로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-221">A string representing the target URL is used as the constructor parameter.</span></span>  
  
 [!code-cpp[WebResponse_ResponseUri#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebResponse_ResponseUri/CPP/webresponse_responseuri.cpp#1)]
 [!code-csharp[WebResponse_ResponseUri#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebResponse_ResponseUri/CS/webresponse_responseuri.cs#1)]
 [!code-vb[WebResponse_ResponseUri#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebResponse_ResponseUri/VB/webresponse_responseuri.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0ca1c-222">
            <paramref name="requestUriString" />에 지정된 요청 체계가 등록되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-222">The request scheme specified in <paramref name="requestUriString" /> has not been registered.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0ca1c-223">
            <paramref name="requestUriString" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-223">
              <paramref name="requestUriString" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="0ca1c-224">호출자에게 요청된 URI 또는 요청이 리디렉션되는 URI에 연결할 수 있는 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-224">The caller does not have permission to connect to the requested URI or a URI that the request is redirected to.</span>
          </span>
        </exception>
        <exception cref="T:System.UriFormatException">
          <block subset="none" type="note">
            <para>
              <span data-ttu-id="0ca1c-225">[Windows 스토어 앱용 .NET](http://go.microsoft.com/fwlink/?LinkID=247912) 또는 [이식 가능한 클래스 라이브러리](http://msdn.microsoft.com/library/c31e1663-c164-4e65-b66d-d3aa8750a154)에서 대신 기본 클래스 예외 <see cref="T:System.FormatException" />을 catch합니다.</span>
              <span class="sxs-lookup">
                <span data-stu-id="0ca1c-225">In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](http://msdn.microsoft.com/library/c31e1663-c164-4e65-b66d-d3aa8750a154), catch the base class exception, <see cref="T:System.FormatException" />, instead.</span>
              </span>
            </para>
          </block>
          <span data-ttu-id="0ca1c-226">
            <paramref name="requestUriString" />에 지정된 URI가 유효한 URI가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-226">The URI specified in <paramref name="requestUriString" /> is not a valid URI.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Net.WebRequest Create (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.WebRequest Create(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.Create(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (requestUri As Uri) As WebRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::WebRequest ^ Create(Uri ^ requestUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="0ca1c-227">요청된 리소스의 URI가 포함된 <see cref="T:System.Uri" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-227">A <see cref="T:System.Uri" /> containing the URI of the requested resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ca1c-228">지정된 URI 체계에 대한 새 <see cref="T:System.Net.WebRequest" /> 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-228">Initializes a new <see cref="T:System.Net.WebRequest" /> instance for the specified URI scheme.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ca1c-229">지정된 URI 체계에 대한 <see cref="T:System.Net.WebRequest" /> 하위 항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-229">A <see cref="T:System.Net.WebRequest" /> descendant for the specified URI scheme.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ca1c-230"><xref:System.Net.WebRequest.Create%2A> 의 하위 항목을 반환 하는 메서드는 <xref:System.Net.WebRequest> 클래스에 대 한 가장 가까운 등록 된 일치 항목으로 런타임 시 결정 `requestUri`합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-230">The <xref:System.Net.WebRequest.Create%2A> method returns a descendant of the <xref:System.Net.WebRequest> class determined at run time as the closest registered match for `requestUri`.</span></span>  
  
 <span data-ttu-id="0ca1c-231">예를 들어, 만들면는 <xref:System.Net.WebRequest> 하위 Handler1, 요청을 처리 `http://www.contoso.com/text/` Handler2 요청을 처리와 `http://www.contoso.com/code/`를 사용할 수 있습니다 <xref:System.Net.WebRequest.Create%2A> 와 관련 된 WebRequest 하위 항목을 반환 하는 메서드 지정 된 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-231">For example, if you create a <xref:System.Net.WebRequest> descendant, Handler1, to handle requests to `http://www.contoso.com/text/` and another named Handler2 to handle requests to `http://www.contoso.com/code/`, you can use <xref:System.Net.WebRequest.Create%2A> method to return the WebRequest descendant associated with either specified URI.</span></span>  
  
 <span data-ttu-id="0ca1c-232">하위 항목을 반환 하는 <xref:System.Net.WebRequest> URI의 구성표 부분만을 기반으로 하는 클래스를 사용 하 여는 <xref:System.Net.WebRequest.CreateDefault%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-232">To return a descendant of the <xref:System.Net.WebRequest> class based on only the scheme portion of a URI, use the <xref:System.Net.WebRequest.CreateDefault%2A> method.</span></span>  
  
 <span data-ttu-id="0ca1c-233">예를 들어, 문자로 시작 하는 URI `http://` 또는 `https://` 전달 `requestUri`, <xref:System.Net.HttpWebRequest> 반환한 <xref:System.Net.WebRequest.Create%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-233">For example, when a URI beginning with `http://` or `https://` is passed in `requestUri`, an <xref:System.Net.HttpWebRequest> is returned by <xref:System.Net.WebRequest.Create%2A>.</span></span> <span data-ttu-id="0ca1c-234">로 시작 하는 URI `ftp://` 대신 전달 되는 <xref:System.Net.WebRequest.Create%2A> 메서드는 반환는 <xref:System.Net.FileWebRequest> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-234">If a URI beginning with `ftp://` is passed instead, the <xref:System.Net.WebRequest.Create%2A> method will return a <xref:System.Net.FileWebRequest> instance.</span></span> <span data-ttu-id="0ca1c-235">로 시작 하는 URI `file://` 대신 전달 되는 <xref:System.Net.WebRequest.Create%2A> 메서드는 반환는 <xref:System.Net.FileWebRequest> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-235">If a URI beginning with `file://` is passed instead, the <xref:System.Net.WebRequest.Create%2A> method will return a <xref:System.Net.FileWebRequest> instance.</span></span>  
  
 <span data-ttu-id="0ca1c-236">이미 등록 되어 미리 등록 된 예약 형식은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-236">The pre-registered reserve types already registered include the following:</span></span>  
  
-   `http://`  
  
-   `https://`  
  
-   `ftp://`  
  
-   `file://`  
  
 <span data-ttu-id="0ca1c-237">.NET에 대 한 지원이 포함 되어는 `http://`, `https://`, `ftp://`, 및 `file://` URI 체계입니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-237">.NET includes support for the `http://`, `https://`, `ftp://`, and `file://` URI schemes.</span></span> <span data-ttu-id="0ca1c-238">사용자 지정 <xref:System.Net.WebRequest> 등록 된 다른 요청을 처리는 <xref:System.Net.WebRequest.RegisterPrefix%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-238">Custom <xref:System.Net.WebRequest> descendants to handle other requests are registered with the <xref:System.Net.WebRequest.RegisterPrefix%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ca1c-239">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-239">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="0ca1c-240">자세한 내용은 참조 [ &#91; \<topic://conUsingNetworkTracing >&#93;](http://msdn.microsoft.com/library/e993b7c3-087f-45d8-9c02-9dded936d804)합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-240">For more information, see [&#91;\<topic://conUsingNetworkTracing>&#93;](http://msdn.microsoft.com/library/e993b7c3-087f-45d8-9c02-9dded936d804).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ca1c-241">다음 예제에서는 <xref:System.Net.WebRequest.Create%2A> 를 인스턴스화하는 <xref:System.Net.HttpWebRequest> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-241">The following example uses <xref:System.Net.WebRequest.Create%2A> to instantiate an <xref:System.Net.HttpWebRequest> instance.</span></span> <span data-ttu-id="0ca1c-242">대상 URL을 나타내는 Uri 생성자 매개 변수로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-242">A Uri representing the target URL is used as the constructor parameter.</span></span>  
  
 [!code-cpp[WebRequest_Create#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_Create/CPP/webrequest_create.cpp#1)]
 [!code-csharp[WebRequest_Create#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_Create/CS/webrequest_create.cs#1)]
 [!code-vb[WebRequest_Create#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_Create/VB/webrequest_create.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0ca1c-243">
            <paramref name="requestUri" />에서 지정된 요청 체계가 등록되어 있지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-243">The request scheme specified in <paramref name="requestUri" /> is not registered.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0ca1c-244">
            <paramref name="requestUri" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-244">
              <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="0ca1c-245">호출자에게 요청된 URI 또는 요청이 리디렉션되는 URI에 연결할 수 있는 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-245">The caller does not have permission to connect to the requested URI or a URI that the request is redirected to.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDefault">
      <MemberSignature Language="C#" Value="public static System.Net.WebRequest CreateDefault (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.WebRequest CreateDefault(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.CreateDefault(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDefault (requestUri As Uri) As WebRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::WebRequest ^ CreateDefault(Uri ^ requestUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="0ca1c-246">요청된 리소스의 URI가 포함된 <see cref="T:System.Uri" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-246">A <see cref="T:System.Uri" /> containing the URI of the requested resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ca1c-247">지정된 URI 체계에 대한 새 <see cref="T:System.Net.WebRequest" /> 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-247">Initializes a new <see cref="T:System.Net.WebRequest" /> instance for the specified URI scheme.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ca1c-248">지정된 URI 체계에 대한 <see cref="T:System.Net.WebRequest" /> 하위 항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-248">A <see cref="T:System.Net.WebRequest" /> descendant for the specified URI scheme.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ca1c-249"><xref:System.Net.WebRequest.CreateDefault%2A> 메서드가 반환 되는 <xref:System.Net.WebRequest> 하위 인스턴스는 URI의 구성표 부분에만 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-249">The <xref:System.Net.WebRequest.CreateDefault%2A> method returns a <xref:System.Net.WebRequest> descendant instance based on only the scheme portion of a URI.</span></span>  
  
 <span data-ttu-id="0ca1c-250">예를 들어, 문자로 시작 하는 URI `http://` 전달 `requestUri`, <xref:System.Net.HttpWebRequest> 반환한 <xref:System.Net.WebRequest.CreateDefault%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-250">For example, when a URI beginning with `http://` is passed in `requestUri`, an <xref:System.Net.HttpWebRequest> is returned by <xref:System.Net.WebRequest.CreateDefault%2A>.</span></span> <span data-ttu-id="0ca1c-251">로 시작 하는 URI `file://` 대신 전달 되는 <xref:System.Net.WebRequest.CreateDefault%2A> 메서드는 반환는 <xref:System.Net.FileWebRequest>합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-251">If a URI beginning with `file://` is passed instead, the <xref:System.Net.WebRequest.CreateDefault%2A> method will return a <xref:System.Net.FileWebRequest>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ca1c-252">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-252">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="0ca1c-253">자세한 내용은 참조 [.NET에 네트워크 추적](~/docs/framework/network-programming/network-tracing.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-253">For more information, see [Network Tracing in .NET](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0ca1c-254">
            <paramref name="requestUri" />에서 지정된 요청 체계가 등록되어 있지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-254">The request scheme specified in <paramref name="requestUri" /> is not registered.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0ca1c-255">
            <paramref name="requestUri" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-255">
              <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="0ca1c-256">호출자에게 요청된 URI 또는 요청이 리디렉션되는 URI에 연결할 수 있는 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-256">The caller does not have permission to connect to the requested URI or a URI that the request is redirected to.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateHttp">
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0ca1c-257">지정된 URI에 대한 새 <see cref="T:System.Net.HttpWebRequest" /> 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-257">Initializes a new <see cref="T:System.Net.HttpWebRequest" /> instance for the specified URI.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateHttp">
      <MemberSignature Language="C#" Value="public static System.Net.HttpWebRequest CreateHttp (string requestUriString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.HttpWebRequest CreateHttp(string requestUriString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.CreateHttp(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateHttp (requestUriString As String) As HttpWebRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::HttpWebRequest ^ CreateHttp(System::String ^ requestUriString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpWebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUriString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestUriString">
          <span data-ttu-id="0ca1c-258">인터넷 리소스를 식별하는 URI 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-258">A URI string that identifies the Internet resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ca1c-259">지정된 URI 문자열에 대한 새 <see cref="T:System.Net.HttpWebRequest" /> 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-259">Initializes a new <see cref="T:System.Net.HttpWebRequest" /> instance for the specified URI string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ca1c-260">지정된 URI 문자열에 대한 <see cref="T:System.Net.HttpWebRequest" /> 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-260">An <see cref="T:System.Net.HttpWebRequest" /> instance for the specific URI string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ca1c-261"><xref:System.Net.WebRequest.CreateHttp%28System.String%29> 의 인스턴스를 반환 하는 메서드는 <xref:System.Net.HttpWebRequest> 에 대 한 클래스는 `requestUriString`합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-261">The <xref:System.Net.WebRequest.CreateHttp%28System.String%29> method returns an instance of the <xref:System.Net.HttpWebRequest> class for the `requestUriString`.</span></span>  
  
 <span data-ttu-id="0ca1c-262">로 시작 하는 uri `http://` 또는 `http://` 에 전달 되는 `requestUriString` 매개 변수는 <xref:System.Net.HttpWebRequest> 가 반환한 <xref:System.Net.WebRequest.CreateHttp%28System.String%29>합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-262">When a URI that begins with `http://` or `http://` is passed in the `requestUriString` parameter, a <xref:System.Net.HttpWebRequest> is returned by <xref:System.Net.WebRequest.CreateHttp%28System.String%29>.</span></span> <span data-ttu-id="0ca1c-263">다른 다른 스키마를 throw 합니다는 <xref:System.NotSupportedException>합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-263">Another other scheme will throw an <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="0ca1c-264"><xref:System.Net.WebRequest.CreateHttp%28System.String%29> 메서드는 `requestUriString` 만들려는 매개 변수는 <xref:System.Uri> 로 전달 하는 새 인스턴스 <xref:System.Net.HttpWebRequest>합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-264">The <xref:System.Net.WebRequest.CreateHttp%28System.String%29> method uses the `requestUriString` parameter to create a <xref:System.Uri> instance that it passes to the new <xref:System.Net.HttpWebRequest>.</span></span> <span data-ttu-id="0ca1c-265">메서드가 성공 하면는 <xref:System.Net.HttpWebRequest.AllowReadStreamBuffering%2A> 속성에서 반환 된 <xref:System.Net.HttpWebRequest> 인스턴스로 설정 됩니다 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-265">If the method is successful, the <xref:System.Net.HttpWebRequest.AllowReadStreamBuffering%2A> property on the returned <xref:System.Net.HttpWebRequest> instance is set to `false`.</span></span>  
  
 <span data-ttu-id="0ca1c-266">.NET에 대 한 지원이 포함 된 `http://` 및 `https://` URI 체계입니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-266">.NET includes support for the `http://` and  `https://` URI schemes.</span></span> <span data-ttu-id="0ca1c-267">사용자 지정 <xref:System.Net.WebRequest> 등록 된 다른 요청을 처리는 <xref:System.Net.WebRequest.RegisterPrefix%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-267">Custom <xref:System.Net.WebRequest> descendants to handle other requests are registered with the <xref:System.Net.WebRequest.RegisterPrefix%2A> method.</span></span> <span data-ttu-id="0ca1c-268"><xref:System.Net.WebRequest.Create%28System.String%29> 메서드의 하위 항목을 만드는 데 사용할 수는 <xref:System.Net.WebRequest> 다른 체계에 대 한 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-268">The <xref:System.Net.WebRequest.Create%28System.String%29> method can be used to create a descendant of the <xref:System.Net.WebRequest> class for other schemes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0ca1c-269">
            <paramref name="requestUriString" />에 지정된 요청 체계가 http 또는 https 체계인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-269">The request scheme specified in <paramref name="requestUriString" /> is the http or https scheme.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0ca1c-270">
            <paramref name="requestUriString" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-270">
              <paramref name="requestUriString" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="0ca1c-271">호출자에게 요청된 URI 또는 요청이 리디렉션되는 URI에 연결할 수 있는 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-271">The caller does not have permission to connect to the requested URI or a URI that the request is redirected to.</span>
          </span>
        </exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="0ca1c-272">
            <paramref name="requestUriString" />에 지정된 URI가 유효한 URI가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-272">The URI specified in <paramref name="requestUriString" /> is not a valid URI.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateHttp">
      <MemberSignature Language="C#" Value="public static System.Net.HttpWebRequest CreateHttp (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.HttpWebRequest CreateHttp(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.CreateHttp(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateHttp (requestUri As Uri) As HttpWebRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::HttpWebRequest ^ CreateHttp(Uri ^ requestUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpWebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="0ca1c-273">인터넷 리소스를 식별하는 URI입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-273">A URI that identifies the Internet resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ca1c-274">지정된 URI에 대한 새 <see cref="T:System.Net.HttpWebRequest" /> 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-274">Initializes a new <see cref="T:System.Net.HttpWebRequest" /> instance for the specified URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ca1c-275">지정된 URI 문자열에 대한 <see cref="T:System.Net.HttpWebRequest" /> 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-275">An <see cref="T:System.Net.HttpWebRequest" /> instance for the specific URI string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ca1c-276"><xref:System.Net.WebRequest.CreateHttp%28System.Uri%29> 의 인스턴스를 반환 하는 메서드는 <xref:System.Net.HttpWebRequest> 에 대 한 클래스는 `requestUri`합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-276">The <xref:System.Net.WebRequest.CreateHttp%28System.Uri%29> method returns an instance of the <xref:System.Net.HttpWebRequest> class for the `requestUri`.</span></span>  
  
 <span data-ttu-id="0ca1c-277">로 시작 하는 uri `http://` 또는 `http://` 에 전달 되는 `requestUri` 매개 변수는 <xref:System.Net.HttpWebRequest> 가 반환한 <xref:System.Net.WebRequest.CreateHttp%28System.Uri%29>합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-277">When a URI that begins with `http://` or `http://` is passed in the `requestUri` parameter, an <xref:System.Net.HttpWebRequest> is returned by <xref:System.Net.WebRequest.CreateHttp%28System.Uri%29>.</span></span> <span data-ttu-id="0ca1c-278">다른 다른 스키마를 throw 합니다는 <xref:System.NotSupportedException>합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-278">Another other scheme will throw a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="0ca1c-279"><xref:System.Net.WebRequest.CreateHttp%28System.Uri%29> 메서드는 `requestUri` 매개 변수를 새 <xref:System.Net.HttpWebRequest> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-279">The <xref:System.Net.WebRequest.CreateHttp%28System.Uri%29> method uses the `requestUri` parameter to create a new <xref:System.Net.HttpWebRequest> instance.</span></span> <span data-ttu-id="0ca1c-280">메서드가 성공 하면는 <xref:System.Net.HttpWebRequest.AllowReadStreamBuffering%2A> 속성에서 반환 된 <xref:System.Net.HttpWebRequest> 인스턴스로 설정 됩니다 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-280">If the method is successful, the <xref:System.Net.HttpWebRequest.AllowReadStreamBuffering%2A> property on the returned <xref:System.Net.HttpWebRequest> instance is set to `false`.</span></span>  
  
 <span data-ttu-id="0ca1c-281">.NET에 대 한 지원이 포함 된 `http://` 및 `https://` URI 체계입니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-281">.NET includes support for the `http://` and  `https://` URI schemes.</span></span> <span data-ttu-id="0ca1c-282">사용자 지정 <xref:System.Net.WebRequest> 등록 된 다른 요청을 처리는 <xref:System.Net.WebRequest.RegisterPrefix%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-282">Custom <xref:System.Net.WebRequest> descendants to handle other requests are registered with the <xref:System.Net.WebRequest.RegisterPrefix%2A> method.</span></span> <span data-ttu-id="0ca1c-283"><xref:System.Net.WebRequest.Create%28System.Uri%29> 메서드의 하위 항목을 만드는 데 사용할 수는 <xref:System.Net.WebRequest> 다른 체계에 대 한 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-283">The <xref:System.Net.WebRequest.Create%28System.Uri%29> method can be used to create a descendant of the <xref:System.Net.WebRequest> class for other schemes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0ca1c-284">
            <paramref name="requestUri" />에 지정된 요청 체계가 http 또는 https 체계인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-284">The request scheme specified in <paramref name="requestUri" /> is the http or https scheme.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0ca1c-285">
            <paramref name="requestUri" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-285">
              <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="0ca1c-286">호출자에게 요청된 URI 또는 요청이 리디렉션되는 URI에 연결할 수 있는 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-286">The caller does not have permission to connect to the requested URI or a URI that the request is redirected to.</span>
          </span>
        </exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="0ca1c-287">
            <paramref name="requestUri" />에 지정된 URI가 유효한 URI가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-287">The URI specified in <paramref name="requestUri" /> is not a valid URI.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreatorInstance">
      <MemberSignature Language="C#" Value="public virtual System.Net.IWebRequestCreate CreatorInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebRequestCreate CreatorInstance" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.CreatorInstance" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CreatorInstance As IWebRequestCreate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::IWebRequestCreate ^ CreatorInstance { System::Net::IWebRequestCreate ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IWebRequestCreate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0ca1c-288">하위 클래스에서 재정의될 때,  지정된 URI 에 요청하기 위해 인스턴스화된 <see cref="T:System.Net.WebRequest" />를 만드는 데 사용되는 <see cref="T:System.Net.IWebRequestCreate" /> 클래스에서 파생된 팩터리 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-288">When overridden in a descendant class, gets the factory object derived from the <see cref="T:System.Net.IWebRequestCreate" /> class used to create the <see cref="T:System.Net.WebRequest" /> instantiated for making the request to the specified URI.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0ca1c-289">
            <see cref="M:System.Net.IWebRequestCreate.Create(System.Uri)" /> 메서드에 의해 반환되는 파생된 <see cref="T:System.Net.WebRequest" /> 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-289">The derived <see cref="T:System.Net.WebRequest" /> type returned by the <see cref="M:System.Net.IWebRequestCreate.Create(System.Uri)" /> method.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="0ca1c-290">이 속성을 사용 하면 응용 프로그램을 받고 어떤 <xref:System.Net.IWebRequestCreate> 파생 된 팩터리 개체는 요청을 만드는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-290">This property allows an application to determine which <xref:System.Net.IWebRequestCreate> derived factory object was used to create the request.</span></span> <span data-ttu-id="0ca1c-291">이 개체 [System.Net.Browser.WebRequestCreator.BrowserHttp](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.browserhttp(v=vs.95)) 또는 [System.Net.Browser.WebRequestCreator.ClientHttp](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.clienthttp(v=vs.95))에서 파생 된 사용자 지정 인스턴스 수도 있지만 <xref:System.Net.IWebRequestCreate>합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-291">This object may be [System.Net.Browser.WebRequestCreator.BrowserHttp](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.browserhttp(v=vs.95)) or [System.Net.Browser.WebRequestCreator.ClientHttp](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.clienthttp(v=vs.95)), but it may also be a custom instance derived from <xref:System.Net.IWebRequestCreate>.</span></span> <span data-ttu-id="0ca1c-292">이렇게 하면 응용 프로그램을 확인할 수 있습니다. 있는지 여부를 호스트 하는 브라우저 [!INCLUDE[silverlight](~/includes/silverlight-md.md)], [!INCLUDE[silverlight](~/includes/silverlight-md.md)] HTTP 요청 및 응답에 대 한 클라이언트 또는 몇 가지 사용자 지정 개체를 처리는 <xref:System.Net.WebRequest> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-292">This allows an application to determine whether the browser hosting [!INCLUDE[silverlight](~/includes/silverlight-md.md)], the [!INCLUDE[silverlight](~/includes/silverlight-md.md)] client, or some custom object handles HTTP requests and responses for the <xref:System.Net.WebRequest> instance.</span></span> <span data-ttu-id="0ca1c-293"><xref:System.Net.WebRequest.RegisterPrefix%2A> 메서드는 파생 된 구성할 응용 프로그램을 사용 하면 <xref:System.Net.WebRequest> 특정 URI에 요청을 할 때 형식을 인스턴스화할 수 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-293">The <xref:System.Net.WebRequest.RegisterPrefix%2A> method allows an application to configure which derived <xref:System.Net.WebRequest> type will be instantiated when making a request to a specific URI.</span></span> <span data-ttu-id="0ca1c-294"><xref:System.Net.WebRequest> 작성자는 일반적으로 이러한 HTTP 또는 HTTPS를 특정 프로토콜을 처리 하도록 등록 되어 있지만 서버에서 경로 또는 특정 서버에 요청을 처리 하도록 등록할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-294"><xref:System.Net.WebRequest> creators are typically registered to handle a specific protocol, such HTTP or HTTPS, but can be registered to handle a request to a specific server or path on a server.</span></span> <span data-ttu-id="0ca1c-295">둘 이상의 파생 된 경우에 유용 <xref:System.Net.WebRequest> 유형 같은 프로토콜에 대 한 요청을 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-295">This is useful when more than one derived <xref:System.Net.WebRequest> type can process requests for the same protocol.</span></span> <span data-ttu-id="0ca1c-296">[!INCLUDE[sil3_first](~/includes/sil3-first-md.md)] 이상 런타임은 여러 HTTP 처리기를 지원 하 고 각각 서로 다른 기능이 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-296">The [!INCLUDE[sil3_first](~/includes/sil3-first-md.md)] and later runtime supports multiple HTTP handlers each having different capabilities.</span></span> <span data-ttu-id="0ca1c-297">예를 들어 REPRESENTATIONAL State Transfer ()를 사용 하는 웹 서비스 필요할 수 있습니다는 [System.Net.Browser.WebRequestCreator.ClientHttp](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.clienthttp(v=vs.95)) SOAP 웹 서비스 기본값을 사용할 수 있지만 처리기 [ System.Net.Browser.WebRequestCreator.BrowserHttp](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.browserhttp(v=vs.95)) 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-297">For example, a web service that uses Representational State Transfer (REST) might require the [System.Net.Browser.WebRequestCreator.ClientHttp](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.clienthttp(v=vs.95)) handler while a SOAP web service might be able to use the default [System.Net.Browser.WebRequestCreator.BrowserHttp](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.browserhttp(v=vs.95)) handler.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public virtual System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0ca1c-298">하위 항목 클래스에서 재정의될 때, 인터넷 리소스를 사용하여 요청을 인증하는 데 사용되는 네트워크 자격 증명을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-298">When overridden in a descendant class, gets or sets the network credentials used for authenticating the request with the Internet resource.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0ca1c-299">요청과 연결된 인증 자격 증명이 들어 있는 <see cref="T:System.Net.ICredentials" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-299">An <see cref="T:System.Net.ICredentials" /> containing the authentication credentials associated with the request.</span>
          </span>
          <span data-ttu-id="0ca1c-300">기본값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-300">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ca1c-301"><xref:System.Net.WebRequest.Credentials%2A> 속성 인터넷 리소스에 액세스 하는 데 필요한 인증 자격 증명을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-301">The <xref:System.Net.WebRequest.Credentials%2A> property contains the authentication credentials required to access the Internet resource.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ca1c-302"><xref:System.Net.WebRequest> 클래스는는 `abstract` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-302">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="0ca1c-303">실제 동작이 <xref:System.Net.WebRequest> 인스턴스 실행 시 반환 된 하위 항목 클래스에 의해 결정 됩니다는 <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-303">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0ca1c-304">예외에 대 한 자세한 내용은 하위 항목 클래스에 대 한 설명서를와 같은 참조 <xref:System.Net.HttpWebRequest> 및 <xref:System.Net.FileWebRequest>합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-304">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ca1c-305">다음 예에서는 <xref:System.Net.WebRequest.Credentials%2A> 현재 사용자의 기본 자격 증명을 사용 하 여 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-305">The following example sets the <xref:System.Net.WebRequest.Credentials%2A> property using the default credentials of the current user.</span></span> <span data-ttu-id="0ca1c-306">요청 될 때 클라이언트를 유효성을 검사 하려면이 속성에 저장 된 자격 증명 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-306">When the request is made, credentials stored in this property are used to validate the client.</span></span> <span data-ttu-id="0ca1c-307">이 동일한 설정으로는 <xref:System.Net.WebRequest.UseDefaultCredentials%2A> 속성을 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-307">This is identical to setting the <xref:System.Net.WebRequest.UseDefaultCredentials%2A> property to `true`.</span></span>  
  
 [!code-cpp[NclWebRequestSimple#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebRequestSimple/CPP/webrequestget.cpp#2)]
 [!code-csharp[NclWebRequestSimple#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebRequestSimple/CS/webrequestget.cs#2)]
 [!code-vb[NclWebRequestSimple#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebRequestSimple/VB/webrequestget.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0ca1c-308">속성이 서브클래스에서 재정의되지 않았는데 속성을 가져오거나 설정하려 할 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-308">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="P:System.Net.HttpWebRequest.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="DefaultCachePolicy">
      <MemberSignature Language="C#" Value="public static System.Net.Cache.RequestCachePolicy DefaultCachePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.Cache.RequestCachePolicy DefaultCachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.DefaultCachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultCachePolicy As RequestCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::Cache::RequestCachePolicy ^ DefaultCachePolicy { System::Net::Cache::RequestCachePolicy ^ get(); void set(System::Net::Cache::RequestCachePolicy ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0ca1c-309">이 요청에 대한 기본 캐시 정책을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-309">Gets or sets the default cache policy for this request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0ca1c-310">다른 정책을 적용할 수 없을 때 이 요청에 대해 적용할 캐시 정책을 지정하는 <see cref="T:System.Net.Cache.HttpRequestCachePolicy" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-310">A <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> that specifies the cache policy in effect for this request when no other policy is applicable.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ca1c-311">이 정책은 다음 조건이 만족 하는 경우이 요청에 대해 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-311">This policy is used for this request if the following conditions exist:</span></span>  
  
-   <span data-ttu-id="0ca1c-312">없는 <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A> 이 요청에 대해 지정 된 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-312">There is no <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A> property specified for this request.</span></span>  
  
-   <span data-ttu-id="0ca1c-313">시스템 및 응용 프로그램 구성 파일을이 요청을 만드는 데 사용 하는 식별자 URI (Uniform Resource) 적용할 수 있는 캐시 정책을 지정 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-313">The machine and application configuration files do not specify a cache policy that is applicable to the Uniform Resource Identifier (URI) used to create this request.</span></span>  
  
 <span data-ttu-id="0ca1c-314">캐시 정책을 리소스 호스트 컴퓨터에 요청을 보내는 대신 캐시에서 요청 된 리소스를 가져올 수 있는지 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-314">The cache policy determines whether the requested resource can be taken from a cache instead of sending the request to the resource host computer.</span></span>  
  
 <span data-ttu-id="0ca1c-315">리소스에 대 한 응답 스트림을 검색 하는 스트림의 끝에 대 한 읽기 경우에 리소스의 복사본을 캐시에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-315">A copy of a resource is only added to the cache if the response stream for the resource is retrieved and read to the end of the stream.</span></span> <span data-ttu-id="0ca1c-316">이므로 동일한 리소스에 대 한 다른 요청에는이 요청에 대 한 캐시 정책 수준에 따라 캐시 된 복사본을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-316">So another request for the same resource could use a cached copy, depending on the cache policy level for this request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ca1c-317">다음 코드 예제에서는 웹 요청에 대 한 기본 캐시 정책을 설정 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-317">The following code example demonstrates setting the default cache policy for Web requests.</span></span>  
  
 [!code-cpp[NCLSimpleCache#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#15)]
 [!code-csharp[NCLSimpleCache#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#15)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="0ca1c-318">네트워크 리소스에 대 한 무제한 액세스 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-318">For unrestricted access to network resources.</span>
          </span>
          <span data-ttu-id="0ca1c-319">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-319">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Net.Cache.RequestCachePolicy" />
        <altmember cref="T:System.Net.Cache.HttpRequestCacheLevel" />
        <altmember cref="T:System.Net.Cache.RequestCacheLevel" />
        <altmember cref="P:System.Net.HttpWebRequest.DefaultCachePolicy" />
        <altmember cref="P:System.Net.WebRequest.CachePolicy" />
      </Docs>
    </Member>
    <Member MemberName="DefaultWebProxy">
      <MemberSignature Language="C#" Value="public static System.Net.IWebProxy DefaultWebProxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.IWebProxy DefaultWebProxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.DefaultWebProxy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultWebProxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::IWebProxy ^ DefaultWebProxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0ca1c-320">글로벌 HTTP 프록시를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-320">Gets or sets the global HTTP proxy.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0ca1c-321">
            <see cref="T:System.Net.IWebProxy" />의 인스턴스를 호출할 때마다 사용되는 <see cref="T:System.Net.WebRequest" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-321">An <see cref="T:System.Net.IWebProxy" /> used by every call to instances of <see cref="T:System.Net.WebRequest" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ca1c-322"><xref:System.Net.WebRequest.DefaultWebProxy%2A> 속성 전역 프록시를 설정 하거나 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-322">The <xref:System.Net.WebRequest.DefaultWebProxy%2A> property gets or sets the global proxy.</span></span> <span data-ttu-id="0ca1c-323"><xref:System.Net.WebRequest.DefaultWebProxy%2A> 속성 기본 프록시를 결정 하는 모든 <xref:System.Net.WebRequest> 요청이 프록시를 지원 하 고 프록시가 사용 하 여 명시적으로 설정 된 경우 인스턴스를 사용는 <xref:System.Net.HttpWebRequest.Proxy%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-323">The <xref:System.Net.WebRequest.DefaultWebProxy%2A> property determines the default proxy that all <xref:System.Net.WebRequest> instances use if the request supports proxies and no proxy is set explicitly using the <xref:System.Net.HttpWebRequest.Proxy%2A> property.</span></span> <span data-ttu-id="0ca1c-324">프록시에서 현재 지 원하는 <xref:System.Net.FtpWebRequest> 및 <xref:System.Net.HttpWebRequest>합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-324">Proxies are currently supported by <xref:System.Net.FtpWebRequest> and <xref:System.Net.HttpWebRequest>.</span></span>  
  
 <span data-ttu-id="0ca1c-325"><xref:System.Net.WebRequest.DefaultWebProxy%2A> 속성 app.config 파일에서 프록시 설정을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-325">The <xref:System.Net.WebRequest.DefaultWebProxy%2A> property reads proxy settings from the app.config file.</span></span> <span data-ttu-id="0ca1c-326">구성 파일이 없는 경우 현재 사용자의 Internet Explorer (IE) 프록시 설정이 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-326">If there is no config file, the current user's Internet Explorer (IE) proxy settings are used.</span></span>  
  
 <span data-ttu-id="0ca1c-327">경우는 <xref:System.Net.WebRequest.DefaultWebProxy%2A> 속성은 null, 이후의 모든 인스턴스에 <xref:System.Net.WebRequest> 에서 만든 클래스는 <xref:System.Net.WebRequest.Create%2A> 또는 <xref:System.Net.WebRequest.CreateDefault%2A> 메서드 프록시 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-327">If the <xref:System.Net.WebRequest.DefaultWebProxy%2A> property is set to null, all subsequent instances of the <xref:System.Net.WebRequest> class created by the <xref:System.Net.WebRequest.Create%2A> or <xref:System.Net.WebRequest.CreateDefault%2A> methods do not have a proxy.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="0ca1c-328">가져오거나 전역 HTTP 프록시를 설정 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-328">To get or set the global HTTP proxy.</span>
          </span>
          <span data-ttu-id="0ca1c-329">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-329">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="EndGetRequestStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream EndGetRequestStream (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream EndGetRequestStream(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndGetRequestStream (asyncResult As IAsyncResult) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ EndGetRequestStream(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="0ca1c-330">스트림에 대한 보류 요청을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-330">An <see cref="T:System.IAsyncResult" /> that references a pending request for a stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ca1c-331">서브클래스에서 재정의될 때, 인터넷 리소스에 데이터를 쓰기 위해 <see cref="T:System.IO.Stream" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-331">When overridden in a descendant class, returns a <see cref="T:System.IO.Stream" /> for writing data to the Internet resource.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ca1c-332">데이터를 쓸 <see cref="T:System.IO.Stream" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-332">A <see cref="T:System.IO.Stream" /> to write data to.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ca1c-333"><xref:System.Net.WebRequest.EndGetRequestStream%2A> 의해 시작 된 비동기 스트림 요청을 완료 하는 메서드는 <xref:System.Net.WebRequest.BeginGetRequestStream%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-333">The <xref:System.Net.WebRequest.EndGetRequestStream%2A> method completes an asynchronous stream request that was started by the <xref:System.Net.WebRequest.BeginGetRequestStream%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ca1c-334">가비지 수집 타이밍 문제를 방지 하려면 반드시를 호출 하 여 응답 스트림을 닫습니다는 <xref:System.IO.Stream.Close%2A> 메서드를 반환 하는 스트림의 <xref:System.Net.WebResponse.GetResponseStream%2A> 호출한 후 <xref:System.Net.WebRequest.EndGetResponse%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-334">To avoid timing issues with garbage collection, be sure to close the response stream by calling the <xref:System.IO.Stream.Close%2A> method on the stream returned by <xref:System.Net.WebResponse.GetResponseStream%2A> after calling <xref:System.Net.WebRequest.EndGetResponse%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ca1c-335"><xref:System.Net.WebRequest> 클래스는는 `abstract` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-335">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="0ca1c-336">실제 동작이 <xref:System.Net.WebRequest> 인스턴스 실행 시 반환 된 하위 항목 클래스에 의해 결정 됩니다는 <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-336">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0ca1c-337">예외에 대 한 자세한 내용은 하위 항목 클래스에 대 한 설명서를와 같은 참조 <xref:System.Net.HttpWebRequest> 및 <xref:System.Net.FileWebRequest>합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-337">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ca1c-338">다음 예제에서는 호출 하 여 요청 스트림을 사용 하 여 가져오고는 <xref:System.Net.WebRequest.EndGetRequestStream%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-338">The following example obtains and uses the request stream by calling the <xref:System.Net.WebRequest.EndGetRequestStream%2A>.</span></span> <span data-ttu-id="0ca1c-339"><xref:System.Net.WebRequest.EndGetRequestStream%2A> 메서드는 비동기 호출을 완료 <xref:System.Net.WebRequest.BeginGetRequestStream%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-339">The <xref:System.Net.WebRequest.EndGetRequestStream%2A> method completes the asynchronous call to <xref:System.Net.WebRequest.BeginGetRequestStream%2A>.</span></span>  
  
 [!code-cpp[WebRequest_BeginGetRequest#3](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CPP/webrequest_begingetrequest.cpp#3)]
 [!code-csharp[WebRequest_BeginGetRequest#3](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CS/webrequest_begingetrequest.cs#3)]
 [!code-vb[WebRequest_BeginGetRequest#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_BeginGetRequest/VB/webrequest_begingetrequest.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0ca1c-340">메서드가 서브클래스에서 재정의되지 않았는데 메서드에 액세스하려 할 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-340">Any attempt is made to access the method, when the method is not overridden in a descendant class.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="EndGetResponse">
      <MemberSignature Language="C#" Value="public virtual System.Net.WebResponse EndGetResponse (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.WebResponse EndGetResponse(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndGetResponse (asyncResult As IAsyncResult) As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::WebResponse ^ EndGetResponse(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="0ca1c-341">응답에 대한 보류 요청을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-341">An <see cref="T:System.IAsyncResult" /> that references a pending request for a response.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ca1c-342">파생 클래스에서 재정의될 때, <see cref="T:System.Net.WebResponse" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-342">When overridden in a descendant class, returns a <see cref="T:System.Net.WebResponse" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ca1c-343">인터넷 요청에 대한 응답을 포함하는 <see cref="T:System.Net.WebResponse" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-343">A <see cref="T:System.Net.WebResponse" /> that contains a response to the Internet request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ca1c-344"><xref:System.Net.WebRequest.EndGetResponse%2A> 로 시작 된 인터넷 리소스에 대 한 비동기 요청을 완료 하는 메서드는 <xref:System.Net.WebRequest.BeginGetResponse%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-344">The <xref:System.Net.WebRequest.EndGetResponse%2A> method completes an asynchronous request for an Internet resource that was started with the <xref:System.Net.WebRequest.BeginGetResponse%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ca1c-345"><xref:System.Net.WebRequest> 클래스는는 `abstract` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-345">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="0ca1c-346">실제 동작이 <xref:System.Net.WebRequest> 인스턴스 실행 시 반환 된 하위 항목 클래스에 의해 결정 됩니다는 <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-346">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0ca1c-347">예외에 대 한 자세한 내용은 하위 항목 클래스에 대 한 설명서를와 같은 참조 <xref:System.Net.HttpWebRequest> 및 <xref:System.Net.FileWebRequest>합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-347">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ca1c-348">다음 예제에서는 <xref:System.Net.WebRequest.EndGetResponse%2A> 대상 리소스를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-348">The following example calls the <xref:System.Net.WebRequest.EndGetResponse%2A> to retrieve the target resource.</span></span>  
  
 [!code-cpp[WebRequest_BeginGetResponse#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_BeginGetResponse/CPP/webrequest_begingetresponse.cpp#1)]
 [!code-csharp[WebRequest_BeginGetResponse#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_BeginGetResponse/CS/webrequest_begingetresponse.cs#1)]
 [!code-vb[WebRequest_BeginGetResponse#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_BeginGetResponse/VB/webrequest_begingetresponse.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0ca1c-349">메서드가 서브클래스에서 재정의되지 않았는데 메서드에 액세스하려 할 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-349">Any attempt is made to access the method, when the method is not overridden in a descendant class.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">
          <span data-ttu-id="0ca1c-350">데이터로 채울 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-350">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</span>
          </span>
        </param>
        <param name="streamingContext">
          <span data-ttu-id="0ca1c-351">이 직렬화의 대상을 지정하는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-351">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the destination for this serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ca1c-352">대상 개체를 직렬화하는 데 필요한 데이터로 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 채웁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-352">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ca1c-353">에 포함 된 모든 개체는 <xref:System.Runtime.Serialization.SerializationInfo> 자동으로 추적 되 고 포맷터에 의해 serialize 합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-353">Any objects included in the <xref:System.Runtime.Serialization.SerializationInfo> are automatically tracked and serialized by the formatter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequestStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream GetRequestStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetRequestStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetRequestStream" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRequestStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetRequestStream();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0ca1c-354">서브클래스에서 재정의될 때, 인터넷 리소스에 데이터를 쓰기 위해 <see cref="T:System.IO.Stream" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-354">When overridden in a descendant class, returns a <see cref="T:System.IO.Stream" /> for writing data to the Internet resource.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ca1c-355">인터넷 리소스에 데이터를 쓰기 위한 <see cref="T:System.IO.Stream" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-355">A <see cref="T:System.IO.Stream" /> for writing data to the Internet resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ca1c-356"><xref:System.Net.WebRequest.GetRequestStream%2A> 메서드 인터넷 리소스에 데이터를 전송 하는 요청을 시작 하 고 반환 된 <xref:System.IO.Stream> 인터넷 리소스에 데이터를 보내기 위한 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-356">The <xref:System.Net.WebRequest.GetRequestStream%2A> method initiates a request to send data to the Internet resource and returns a <xref:System.IO.Stream> instance for sending data to the Internet resource.</span></span>  
  
 <span data-ttu-id="0ca1c-357"><xref:System.Net.WebRequest.GetRequestStream%2A> 동기적으로 액세스할 수를 제공 하는 메서드는 <xref:System.IO.Stream>합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-357">The <xref:System.Net.WebRequest.GetRequestStream%2A> method provides synchronous access to the <xref:System.IO.Stream>.</span></span> <span data-ttu-id="0ca1c-358">비동기 액세스를 사용 하 여는 <xref:System.Net.WebRequest.BeginGetRequestStream%2A> 및 <xref:System.Net.WebRequest.EndGetRequestStream%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-358">For asynchronous access, use the <xref:System.Net.WebRequest.BeginGetRequestStream%2A> and <xref:System.Net.WebRequest.EndGetRequestStream%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ca1c-359"><xref:System.Net.WebRequest> 클래스는는 `abstract` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-359">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="0ca1c-360">실제 동작이 <xref:System.Net.WebRequest> 인스턴스 실행 시 반환 된 하위 항목 클래스에 의해 결정 됩니다는 <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-360">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0ca1c-361">예외에 대 한 자세한 내용은 하위 항목 클래스에 대 한 설명서를와 같은 참조 <xref:System.Net.HttpWebRequest> 및 <xref:System.Net.FileWebRequest>합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-361">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ca1c-362">다음 예제에서는 <xref:System.Net.WebRequest.GetRequestStream%2A> 메서드 해당 스트림을 스트림 및 다음 쓰기 데이터를 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-362">The following example uses the <xref:System.Net.WebRequest.GetRequestStream%2A> method to obtain a stream and then writes data that stream.</span></span>  
  
 [!code-cpp[WebRequest_ContentType#4](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_ContentType/CPP/webrequest_contenttype.cpp#4)]
 [!code-csharp[WebRequest_ContentType#4](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_ContentType/CS/webrequest_contenttype.cs#4)]
 [!code-vb[WebRequest_ContentType#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_ContentType/VB/webrequest_contenttype.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0ca1c-363">메서드가 서브클래스에서 재정의되지 않았는데 메서드에 액세스하려 할 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-363">Any attempt is made to access the method, when the method is not overridden in a descendant class.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetRequestStreamAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetRequestStreamAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetRequestStreamAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetRequestStreamAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRequestStreamAsync () As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ GetRequestStreamAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0ca1c-364">서브클래스에서 재정의될 때, 인터넷 리소스에 비동기 작업으로 데이터를 쓰기 위해 <see cref="T:System.IO.Stream" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-364">When overridden in a descendant class, returns a <see cref="T:System.IO.Stream" /> for writing data to the Internet resource as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ca1c-365">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-365">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ca1c-366">이 작업을 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-366">This operation will not block.</span></span> <span data-ttu-id="0ca1c-367">반환 된 <xref:System.Threading.Tasks.Task%601> 개체는 완료 되 면 완료는 <xref:System.IO.Stream> 인터넷에 데이터를 쓰기 위한 리소스를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-367">The returned <xref:System.Threading.Tasks.Task%601> object will complete when the <xref:System.IO.Stream> for writing data to the Internet resource is available.</span></span>  
  
 <span data-ttu-id="0ca1c-368">호출한 후 <xref:System.Net.WebRequest.GetRequestStreamAsync%2A>를 호출 하기 전에 요청 스트림을 닫아야 <xref:System.Net.WebRequest.GetResponseAsync%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-368">After you call <xref:System.Net.WebRequest.GetRequestStreamAsync%2A>, make sure you close the request stream before you call <xref:System.Net.WebRequest.GetResponseAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResponse">
      <MemberSignature Language="C#" Value="public virtual System.Net.WebResponse GetResponse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.WebResponse GetResponse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetResponse" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResponse () As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::WebResponse ^ GetResponse();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0ca1c-369">하위 항목 클래스에 재정의될 때, 인터넷 요청에 대한 응답을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-369">When overridden in a descendant class, returns a response to an Internet request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ca1c-370">인터넷 요청에 대한 응답을 포함하는 <see cref="T:System.Net.WebResponse" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-370">A <see cref="T:System.Net.WebResponse" /> containing the response to the Internet request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ca1c-371"><xref:System.Net.WebRequest.GetResponse%2A> 메서드 인터넷 리소스에 대 한 요청을 보내고 반환 된 <xref:System.Net.WebResponse> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-371">The <xref:System.Net.WebRequest.GetResponse%2A> method sends a request to an Internet resource and returns a <xref:System.Net.WebResponse> instance.</span></span> <span data-ttu-id="0ca1c-372">호출 하 여 요청이 이미 시작 되었고 경우 <xref:System.Net.WebRequest.GetRequestStream%2A>, <xref:System.Net.WebRequest.GetResponse%2A> 메서드 요청을 완료 하 고 모든 응답을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-372">If the request has already been initiated by a call to <xref:System.Net.WebRequest.GetRequestStream%2A>, the <xref:System.Net.WebRequest.GetResponse%2A> method completes the request and returns any response.</span></span>  
  
 <span data-ttu-id="0ca1c-373"><xref:System.Net.WebRequest.GetResponse%2A> 동기적으로 액세스할 수를 제공 하는 메서드는 <xref:System.Net.WebResponse>합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-373">The <xref:System.Net.WebRequest.GetResponse%2A> method provides synchronous access to the <xref:System.Net.WebResponse>.</span></span> <span data-ttu-id="0ca1c-374">비동기 액세스를 사용 하 여는 <xref:System.Net.WebRequest.BeginGetResponse%2A> 및 <xref:System.Net.WebRequest.EndGetResponse%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-374">For asynchronous access, use the <xref:System.Net.WebRequest.BeginGetResponse%2A> and <xref:System.Net.WebRequest.EndGetResponse%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ca1c-375"><xref:System.Net.WebRequest> 클래스는는 `abstract` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-375">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="0ca1c-376">실제 동작이 <xref:System.Net.WebRequest> 인스턴스 실행 시 반환 된 하위 항목 클래스에 의해 결정 됩니다는 <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-376">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0ca1c-377">예외에 대 한 자세한 내용은 하위 항목 클래스에 대 한 설명서를와 같은 참조 <xref:System.Net.HttpWebRequest> 및 <xref:System.Net.FileWebRequest>합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-377">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ca1c-378">사용 하 여 WebException을 throw 되 면는 <xref:System.Net.WebException.Response%2A> 및 <xref:System.Net.WebException.Status%2A> 속성의 서버에서 응답을 결정 하는 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-378">If a WebException is thrown, use the <xref:System.Net.WebException.Response%2A> and <xref:System.Net.WebException.Status%2A> properties of the exception to determine the response from the server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ca1c-379">다음 예에서는 <xref:System.Net.WebRequest.Timeout%2A> 속성을 10000 밀리초입니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-379">The following example sets the <xref:System.Net.WebRequest.Timeout%2A> property to 10000 milliseconds.</span></span> <span data-ttu-id="0ca1c-380">리소스 반환 될 수 있습니다, 전에 시간 제한 기간이 만료 되는 <xref:System.Net.WebException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-380">If the timeout period expires before the resource can be returned, a <xref:System.Net.WebException> is thrown.</span></span>  
  
 [!code-cpp[WebRequest_Timeout#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_Timeout/CPP/webrequest_timeout.cpp#1)]
 [!code-csharp[WebRequest_Timeout#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_Timeout/CS/webrequest_timeout.cs#1)]
 [!code-vb[WebRequest_Timeout#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_Timeout/VB/webrequest_timeout.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0ca1c-381">메서드가 서브클래스에서 재정의되지 않았는데 메서드에 액세스하려 할 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-381">Any attempt is made to access the method, when the method is not overridden in a descendant class.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
        <altmember cref="T:System.Net.WebResponse" />
      </Docs>
    </Member>
    <Member MemberName="GetResponseAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Net.WebResponse&gt; GetResponseAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.WebResponse&gt; GetResponseAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetResponseAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResponseAsync () As Task(Of WebResponse)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::Net::WebResponse ^&gt; ^ GetResponseAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.WebResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0ca1c-382">하위 항목 클래스에 재정의될 때, 인터넷 요청에 대한 응답을 비동기 작업으로 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-382">When overridden in a descendant class, returns a response to an Internet request as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ca1c-383">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-383">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ca1c-384">이 작업을 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-384">This operation will not block.</span></span> <span data-ttu-id="0ca1c-385">반환 된 <xref:System.Threading.Tasks.Task%601> 인터넷 요청에 응답을 사용할 수 있는 개체가 완성 합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-385">The returned <xref:System.Threading.Tasks.Task%601> object will complete after a response to an Internet request is available.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSystemWebProxy">
      <MemberSignature Language="C#" Value="public static System.Net.IWebProxy GetSystemWebProxy ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IWebProxy GetSystemWebProxy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetSystemWebProxy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSystemWebProxy () As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IWebProxy ^ GetSystemWebProxy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0ca1c-386">현재 가장한 사용자의 Internet Explorer 설정에 구성된 프록시를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-386">Returns a proxy configured with the Internet Explorer settings of the currently impersonated user.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ca1c-387">
            <see cref="T:System.Net.IWebProxy" />의 인스턴스를 호출할 때마다 사용되는 <see cref="T:System.Net.WebRequest" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-387">An <see cref="T:System.Net.IWebProxy" /> used by every call to instances of <see cref="T:System.Net.WebRequest" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ca1c-388"><xref:System.Net.WebRequest.GetSystemWebProxy%2A> 메서드는 현재 사용자의 Internet Explorer (IE) 프록시 설정을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-388"><xref:System.Net.WebRequest.GetSystemWebProxy%2A> method reads the current user's Internet Explorer (IE) proxy settings.</span></span> <span data-ttu-id="0ca1c-389">이 과정을 자동으로 프록시 설정 검색 수동 프록시 서버 설정, 자동 구성 스크립트를 사용 하 여 IE 옵션을 포함 하 고 고급 수동 프록시 서버 설정.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-389">This process includes the IE options to automatically detect proxy settings, use an automatic configuration script, manual proxy server settings, and advanced manual proxy server settings.</span></span>  
  
 <span data-ttu-id="0ca1c-390">응용 프로그램이 여러 사용자를 가장 하는 경우 사용할 수 있습니다는 <xref:System.Net.WebRequest.GetSystemWebProxy%2A> 가장된 각 사용자에 대 한 프록시를 검색 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-390">If your application is impersonating several users, you can use the <xref:System.Net.WebRequest.GetSystemWebProxy%2A> method to retrieve a proxy for each impersonated user.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="0ca1c-391">가져오거나 전역 HTTP 프록시를 설정 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-391">To get or set the global HTTP proxy.</span>
          </span>
          <span data-ttu-id="0ca1c-392">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-392">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public virtual System.Net.WebHeaderCollection Headers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.Headers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Headers As WebHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::WebHeaderCollection ^ Headers { System::Net::WebHeaderCollection ^ get(); void set(System::Net::WebHeaderCollection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0ca1c-393">하위 항목 클래스에서 재정의될 때, 요청과 연결된 헤더 이름/값 쌍의 컬렉션을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-393">When overridden in a descendant class, gets or sets the collection of header name/value pairs associated with the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0ca1c-394">요청과 연결된 헤더 이름/값 쌍이 들어 있는 <see cref="T:System.Net.WebHeaderCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-394">A <see cref="T:System.Net.WebHeaderCollection" /> containing the header name/value pairs associated with this request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ca1c-395"><xref:System.Net.WebRequest.Headers%2A> 속성을 포함 한 <xref:System.Net.WebHeaderCollection> 인터넷 리소스에 보낼 헤더 정보를 포함 하는 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-395">The <xref:System.Net.WebRequest.Headers%2A> property contains a <xref:System.Net.WebHeaderCollection> instance containing the header information to send to the Internet resource.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ca1c-396"><xref:System.Net.WebRequest> 클래스는는 `abstract` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-396">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="0ca1c-397">실제 동작이 <xref:System.Net.WebRequest> 인스턴스 실행 시 반환 된 하위 항목 클래스에 의해 결정 됩니다는 <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-397">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0ca1c-398">예외에 대 한 자세한 내용은 하위 항목 클래스에 대 한 설명서를와 같은 참조 <xref:System.Net.HttpWebRequest> 및 <xref:System.Net.FileWebRequest>합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-398">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ca1c-399">다음 예제에서는이 요청과 관련 된 헤더 이름/값 쌍을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-399">The following example displays the header name/value pairs associated with this request.</span></span>  
  
 [!code-cpp[WebRequest_Headers#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_Headers/CPP/webrequest_headers.cpp#1)]
 [!code-csharp[WebRequest_Headers#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_Headers/CS/webrequest_headers.cs#1)]
 [!code-vb[WebRequest_Headers#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_Headers/VB/webrequest_headers.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0ca1c-400">속성이 서브클래스에서 재정의되지 않았는데 속성을 가져오거나 설정하려 할 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-400">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.WebHeaderCollection" />
        <altmember cref="P:System.Net.HttpWebRequest.Headers" />
      </Docs>
    </Member>
    <Member MemberName="ImpersonationLevel">
      <MemberSignature Language="C#" Value="public System.Security.Principal.TokenImpersonationLevel ImpersonationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel ImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.ImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::TokenImpersonationLevel ImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); void set(System::Security::Principal::TokenImpersonationLevel value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0ca1c-401">현재 요청에 대한 가장 수준을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-401">Gets or sets the impersonation level for the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0ca1c-402">
            <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-402">A <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ca1c-403">가장 수준에는 서버에서 클라이언트의 자격 증명을 사용 하는 방법을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-403">The impersonation level determines how the server can use the client's credentials.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public virtual string Method { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Method" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.Method" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Method As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Method { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0ca1c-404">하위 항목 클래스에서 재정의될 때, 이 요청에서 사용할 프로토콜 메서드를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-404">When overridden in a descendant class, gets or sets the protocol method to use in this request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0ca1c-405">이 요청에서 사용할 프로토콜 메서드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-405">The protocol method to use in this request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ca1c-406">하위 항목 클래스에서 재정의 된 경우는 <xref:System.Net.WebRequest.Method%2A> 속성이이 요청에서 사용할 요청 메서드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-406">When overridden in a descendant class, the <xref:System.Net.WebRequest.Method%2A> property contains the request method to use in this request.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ca1c-407"><xref:System.Net.WebRequest> 클래스는는 `abstract` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-407">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="0ca1c-408">실제 동작이 <xref:System.Net.WebRequest> 인스턴스 실행 시 반환 된 하위 항목 클래스에 의해 결정 됩니다는 <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-408">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0ca1c-409">예외에 대 한 자세한 내용은 하위 항목 클래스에 대 한 설명서를와 같은 참조 <xref:System.Net.HttpWebRequest> 및 <xref:System.Net.FileWebRequest>합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-409">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ca1c-410">다음 예에서는 <xref:System.Net.WebRequest.Method%2A> 속성을 POST 요청에서 대상 호스트를 데이터 게시를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-410">The following example sets the <xref:System.Net.WebRequest.Method%2A> property to POST to indicate that the request will post data to the target host.</span></span>  
  
 [!code-cpp[WebRequest_BeginGetRequest#3](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CPP/webrequest_begingetrequest.cpp#3)]
 [!code-csharp[WebRequest_BeginGetRequest#3](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CS/webrequest_begingetrequest.cs#3)]
 [!code-vb[WebRequest_BeginGetRequest#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_BeginGetRequest/VB/webrequest_begingetrequest.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0ca1c-411">서브클래스에서 재정의되지 않은 속성을 가져오거나 설정하려는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-411">If the property is not overridden in a descendant class, any attempt is made to get or set the property.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0ca1c-412">
              <see cref="P:System.Net.WebRequest.Method" /> 속성 구현 하는 프로토콜에 대 한 유효한 요청 메서드가 모두 포함 될 수 있습니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0ca1c-412">The <see cref="P:System.Net.WebRequest.Method" /> property can contain any valid request method for the protocol implemented.</span>
            </span>
            <span data-ttu-id="0ca1c-413">기본값은 프로토콜 관련 속성을 설정할 수는 필요 하지 않은 기본 요청/응답 트랜잭션을 제공 해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0ca1c-413">The default value must provide a default request/response transaction that does not require protocol-specific properties to be set.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Net.HttpWebRequest.Method" />
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public virtual bool PreAuthenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.PreAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PreAuthenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool PreAuthenticate { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0ca1c-414">하위 항목 클래스에서 재정의될 때, 요청을 사전 인증할지를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-414">When overridden in a descendant class, indicates whether to pre-authenticate the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0ca1c-415">요청을 사전 인증하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-415">
              <see langword="true" /> to pre-authenticate; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ca1c-416">첫 번째 요청을 제외 하 고는 <xref:System.Net.WebRequest.PreAuthenticate%2A> 속성은 서버에서 요구할 되기까지 기다리지 않고도 후속 요청을 사용 하 여 인증 정보를 보낼 것인지를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-416">With the exception of the first request, the <xref:System.Net.WebRequest.PreAuthenticate%2A> property indicates whether to send authentication information with subsequent requests without waiting to be challenged by the server.</span></span> <span data-ttu-id="0ca1c-417">때 <xref:System.Net.WebRequest.PreAuthenticate%2A> 은 `false`, <xref:System.Net.WebRequest> 인증 정보를 보내기 전에 인증 질문에 대 한 대기 합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-417">When <xref:System.Net.WebRequest.PreAuthenticate%2A> is `false`, the <xref:System.Net.WebRequest> waits for an authentication challenge before sending authentication information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ca1c-418"><xref:System.Net.WebRequest> 클래스는는 `abstract` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-418">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="0ca1c-419">실제 동작이 <xref:System.Net.WebRequest> 인스턴스 실행 시 반환 된 하위 항목 클래스에 의해 결정 됩니다는 <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-419">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0ca1c-420">예외에 대 한 자세한 내용은 하위 항목 클래스에 대 한 설명서를와 같은 참조 <xref:System.Net.HttpWebRequest> 및 <xref:System.Net.FileWebRequest>합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-420">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ca1c-421">다음 예에서는 <xref:System.Net.WebRequest.PreAuthenticate%2A> 속성을 `true` 있도록는 <xref:System.Net.NetworkCredential> 에 저장 된는 <xref:System.Net.WebRequest.Credentials%2A> 속성에 리소스 요청과 함께 전송 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-421">The following example sets the <xref:System.Net.WebRequest.PreAuthenticate%2A> property to `true` so that the <xref:System.Net.NetworkCredential> stored in the <xref:System.Net.WebRequest.Credentials%2A> property will be sent to along with the resource request.</span></span>  
  
 [!code-cpp[WebRequest_PreAuthenticate#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_PreAuthenticate/CPP/webrequest_preauthenticate.cpp#1)]
 [!code-csharp[WebRequest_PreAuthenticate#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_PreAuthenticate/CS/webrequest_preauthenticate.cs#1)]
 [!code-vb[WebRequest_PreAuthenticate#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_PreAuthenticate/VB/webrequest_preauthenticate.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0ca1c-422">속성이 서브클래스에서 재정의되지 않았는데 속성을 가져오거나 설정하려 할 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-422">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.HttpWebRequest.PreAuthenticate" />
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public virtual System.Net.IWebProxy Proxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.Proxy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Proxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::IWebProxy ^ Proxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0ca1c-423">하위 항목 클래스에서 재정의될 때, 이 인터넷 리소스에 액세스하기 위해 사용할 네트워크 프록시를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-423">When overridden in a descendant class, gets or sets the network proxy to use to access this Internet resource.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0ca1c-424">인터넷 리소스에 액세스하기 위해 사용할 <see cref="T:System.Net.IWebProxy" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-424">The <see cref="T:System.Net.IWebProxy" /> to use to access the Internet resource.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ca1c-425"><xref:System.Net.WebRequest.Proxy%2A> 속성 요청이 인터넷 리소스에 액세스를 사용 하 여 네트워크 프록시를 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-425">The <xref:System.Net.WebRequest.Proxy%2A> property identifies the network proxy that the request uses to access the Internet resource.</span></span> <span data-ttu-id="0ca1c-426">요청이는 인터넷 리소스에 직접 아닌 프록시 서버를 통해 이루어집니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-426">The request is made through the proxy server rather than directly to the Internet resource.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ca1c-427"><xref:System.Net.WebRequest> 클래스는는 `abstract` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-427">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="0ca1c-428">실제 동작이 <xref:System.Net.WebRequest> 인스턴스 실행 시 반환 된 하위 항목 클래스에 의해 결정 됩니다는 <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-428">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0ca1c-429">예외에 대 한 자세한 내용은 하위 항목 클래스에 대 한 설명서를와 같은 참조 <xref:System.Net.HttpWebRequest> 및 <xref:System.Net.FileWebRequest>합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-429">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ca1c-430">다음 예제에서는 현재 네트워크 프록시 주소를 표시 하 고 사용자는 새 네트워크 프록시 주소와 포트 번호를 할당할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-430">The following example displays the current network proxy address and allows the user to assign a new network proxy address and port number.</span></span>  
  
 [!code-cpp[WebRequest_Proxy#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_Proxy/CPP/webrequest_proxy.cpp#1)]
 [!code-csharp[WebRequest_Proxy#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_Proxy/CS/webrequest_proxy.cs#1)]
 [!code-vb[WebRequest_Proxy#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_Proxy/VB/webrequest_proxy.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0ca1c-431">속성이 서브클래스에서 재정의되지 않았는데 속성을 가져오거나 설정하려 할 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-431">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.IWebProxy" />
        <altmember cref="T:System.Net.WebProxy" />
        <altmember cref="P:System.Net.HttpWebRequest.Proxy" />
      </Docs>
    </Member>
    <Member MemberName="RegisterPortableWebRequestCreator">
      <MemberSignature Language="C#" Value="public static void RegisterPortableWebRequestCreator (System.Net.IWebRequestCreate creator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterPortableWebRequestCreator(class System.Net.IWebRequestCreate creator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.RegisterPortableWebRequestCreator(System.Net.IWebRequestCreate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterPortableWebRequestCreator (creator As IWebRequestCreate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterPortableWebRequestCreator(System::Net::IWebRequestCreate ^ creator);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="creator" Type="System.Net.IWebRequestCreate" />
      </Parameters>
      <Docs>
        <param name="creator">
          <span data-ttu-id="0ca1c-432">등록할 <see cref="T:System.Net.IWebRequestCreate" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-432">The <see cref="T:System.Net.IWebRequestCreate" /> object to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ca1c-433">
            <see cref="T:System.Net.IWebRequestCreate" /> 개체를 등록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-433">Register an <see cref="T:System.Net.IWebRequestCreate" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterPrefix">
      <MemberSignature Language="C#" Value="public static bool RegisterPrefix (string prefix, System.Net.IWebRequestCreate creator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool RegisterPrefix(string prefix, class System.Net.IWebRequestCreate creator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RegisterPrefix (prefix As String, creator As IWebRequestCreate) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool RegisterPrefix(System::String ^ prefix, System::Net::IWebRequestCreate ^ creator);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="creator" Type="System.Net.IWebRequestCreate" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="0ca1c-434">
            <see cref="T:System.Net.WebRequest" /> 하위 항목이 서비스하는 완전한 URI나 URI 접두사입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-434">The complete URI or URI prefix that the <see cref="T:System.Net.WebRequest" /> descendant services.</span>
          </span>
        </param>
        <param name="creator">
          <span data-ttu-id="0ca1c-435">
            <see cref="T:System.Net.WebRequest" /> 하위 항목을 만들기 위해 <see cref="T:System.Net.WebRequest" />가 호출하는 생성 메서드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-435">The create method that the <see cref="T:System.Net.WebRequest" /> calls to create the <see cref="T:System.Net.WebRequest" /> descendant.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ca1c-436">지정된 URI에 대한 <see cref="T:System.Net.WebRequest" /> 하위 항목을 등록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-436">Registers a <see cref="T:System.Net.WebRequest" /> descendant for the specified URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ca1c-437">등록이 성공하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-437">
              <see langword="true" /> if registration is successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ca1c-438"><xref:System.Net.WebRequest.RegisterPrefix%2A> 메서드 레지스터 <xref:System.Net.WebRequest> 하위 항목 서비스 요청을 합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-438">The <xref:System.Net.WebRequest.RegisterPrefix%2A> method registers <xref:System.Net.WebRequest> descendants to service requests.</span></span> <span data-ttu-id="0ca1c-439"><xref:System.Net.WebRequest> 하위 항목은 일반적으로 HTTP 또는 FTP와 같은 특정 프로토콜을 처리 하도록 등록 되어 있지만 서버에서 경로 또는 특정 서버에 요청을 처리 하도록 등록할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-439"><xref:System.Net.WebRequest> descendants are typically registered to handle a specific protocol, such HTTP or FTP, but can be registered to handle a request to a specific server or path on a server.</span></span>  
  
 <span data-ttu-id="0ca1c-440">이미 등록 되어 미리 등록 된 예약 형식은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-440">The pre-registered reserve types already registered include the following:</span></span>  
  
-   `http://`  
  
-   `https://`  
  
-   `ftp://`  
  
-   `file://`  
  
 <span data-ttu-id="0ca1c-441">자세한 내용은 참조는 <xref:System.Net.WebRequest.Create%28System.String%29> 및 <xref:System.Net.WebRequest.Create%28System.Uri%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-441">For more information, see the <xref:System.Net.WebRequest.Create%28System.String%29> and <xref:System.Net.WebRequest.Create%28System.Uri%29> methods.</span></span>  
  
 <span data-ttu-id="0ca1c-442">중복 된 접두사는 허용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-442">Duplicate prefixes are not allowed.</span></span> <span data-ttu-id="0ca1c-443"><xref:System.Net.WebRequest.RegisterPrefix%2A> 반환 `false` 중복 접두사를 등록 하려고 시도 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-443"><xref:System.Net.WebRequest.RegisterPrefix%2A> returns `false` if an attempt is made to register a duplicate prefix.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ca1c-444"><xref:System.Net.HttpWebRequest> 클래스는 기본적으로 HTTP 및 HTTPS 스키마에 대 한 서비스 요청에 등록 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-444">The <xref:System.Net.HttpWebRequest> class is registered to service requests for HTTP and HTTPS schemes by default.</span></span> <span data-ttu-id="0ca1c-445">다른 등록 하려고 시도 <xref:System.Net.WebRequest> 이러한 스키마에 대 한 하위 항목에 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-445">Attempts to register a different <xref:System.Net.WebRequest> descendant for these schemes will fail.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0ca1c-446">
            <paramref name="prefix" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-446">
              <paramref name="prefix" /> is <see langword="null" /></span>
          </span>
          <span data-ttu-id="0ca1c-447">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-447">-or-</span>
          </span>
          <span data-ttu-id="0ca1c-448">
            <paramref name="creator" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-448">
              <paramref name="creator" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RequestUri">
      <MemberSignature Language="C#" Value="public virtual Uri RequestUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri RequestUri" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.RequestUri" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequestUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Uri ^ RequestUri { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0ca1c-449">하위 항목 클래스에서 재정의될 때, 요청과 연결된 인터넷 리소스의 URI를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-449">When overridden in a descendant class, gets the URI of the Internet resource associated with the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0ca1c-450">요청과 연결된 리소스를 나타내는 <see cref="T:System.Uri" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-450">A <see cref="T:System.Uri" /> representing the resource associated with the request</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ca1c-451">하위 항목 클래스에서 재정의 된 경우는 <xref:System.Net.WebRequest.RequestUri%2A> 속성 포함는 <xref:System.Uri> 인스턴스를 <xref:System.Net.WebRequest.Create%2A> 요청을 만드는 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-451">When overridden in a descendant class, the <xref:System.Net.WebRequest.RequestUri%2A> property contains the <xref:System.Uri> instance that <xref:System.Net.WebRequest.Create%2A> method uses to create the request.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ca1c-452"><xref:System.Net.WebRequest> 클래스는는 `abstract` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-452">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="0ca1c-453">실제 동작이 <xref:System.Net.WebRequest> 인스턴스 실행 시 반환 된 하위 항목 클래스에 의해 결정 됩니다는 <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-453">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0ca1c-454">예외에 대 한 자세한 내용은 하위 항목 클래스에 대 한 설명서를와 같은 참조 <xref:System.Net.HttpWebRequest> 및 <xref:System.Net.FileWebRequest>합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-454">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ca1c-455">다음 예제에서는 검사는 <xref:System.Net.WebRequest.RequestUri%2A> 속성을 원래 요청 된 사이트를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-455">The following example checks the <xref:System.Net.WebRequest.RequestUri%2A> property to determine the site originally requested.</span></span>  
  
 [!code-cpp[WebRequest_RequestUri1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_RequestUri1/CPP/webrequest_requesturi.cpp#1)]
 [!code-csharp[WebRequest_RequestUri1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_RequestUri1/CS/webrequest_requesturi.cs#1)]
 [!code-vb[WebRequest_RequestUri1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_RequestUri1/VB/webrequest_requesturi.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0ca1c-456">속성이 서브클래스에서 재정의되지 않았는데 속성을 가져오거나 설정하려 할 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-456">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0ca1c-457">
              <see cref="P:System.Net.WebRequest.RequestUri" /> 원래 있어야 <see cref="T:System.Uri" /> 에 전달 된 인스턴스는 <see cref="M:System.Net.WebRequest.Create(System.Uri)" /> 메서드.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0ca1c-457">
                <see cref="P:System.Net.WebRequest.RequestUri" /> must contain the original <see cref="T:System.Uri" /> instance passed to the <see cref="M:System.Net.WebRequest.Create(System.Uri)" /> method.</span>
            </span>
            <span data-ttu-id="0ca1c-458">하위 항목 실제로 요청을 처리 하는 URI를 포함 하는 속성을 제공 해야 합니다는 프로토콜에서 요청 서비스를 다른 URI로 요청을 리디렉션할 수 경우</span>
            <span class="sxs-lookup">
              <span data-stu-id="0ca1c-458">If the protocol is able to redirect the request to a different URI to service the request, the descendant must provide a property to contain the URI that actually services the request</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Net.HttpWebRequest.RequestUri" />
        <altmember cref="P:System.Net.HttpWebRequest.Address" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">
          <span data-ttu-id="0ca1c-459">
            <see cref="T:System.Net.WebRequest" />에 대해 serialize된 데이터를 보유하는 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-459">A <see cref="T:System.Runtime.Serialization.SerializationInfo" />, which holds the serialized data for the <see cref="T:System.Net.WebRequest" />.</span>
          </span>
        </param>
        <param name="streamingContext">
          <span data-ttu-id="0ca1c-460">새 <see cref="T:System.Net.WebRequest" />과 관련된 serialize된 스트림의 대상이 들어 있는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-460">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the destination of the serialized stream associated with the new <see cref="T:System.Net.WebRequest" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ca1c-461">서브클래스에서 재정의될 때, <see cref="T:System.Net.WebRequest" />를 serialize하는 데 필요한 데이터로 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 인스턴스를 채웁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-461">When overridden in a descendant class, populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance with the data needed to serialize the <see cref="T:System.Net.WebRequest" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0ca1c-462">해당 인터페이스가 서브클래스에서 재정의되지 않았는데 개체를 serialize하려고 한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-462">An attempt is made to serialize the object, when the interface is not overridden in a descendant class.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public virtual int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Timeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0ca1c-463">요청이 시간 초과되기 전의 시간(밀리초)을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-463">Gets or sets the length of time, in milliseconds, before the request times out.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0ca1c-464">요청이 시간 제한으로 실패할 때까지 걸리는 시간의 길이(밀리초) 또는 요청이 시간 제한에 걸리지 않음을 나타내는 <see cref="F:System.Threading.Timeout.Infinite" /> 값입니다. 기본값은 하위 항목 클래스에서 정의됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-464">The length of time, in milliseconds, until the request times out, or the value <see cref="F:System.Threading.Timeout.Infinite" /> to indicate that the request does not time out. The default value is defined by the descendant class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ca1c-465"><xref:System.Net.WebRequest.Timeout%2A> 속성 요청의 제한 시간이 초과 throw 될 때까지 시간을 밀리초 단위로 길이 나타냅니다는 <xref:System.Net.WebException>합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-465">The <xref:System.Net.WebRequest.Timeout%2A> property indicates the length of time, in milliseconds, until the request times out and throws a <xref:System.Net.WebException>.</span></span> <span data-ttu-id="0ca1c-466"><xref:System.Net.WebRequest.Timeout%2A> 속성이 동기 요청에만 사용 하 여 영향을 주는지는 <xref:System.Net.WebRequest.GetResponse%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-466">The <xref:System.Net.WebRequest.Timeout%2A> property affects only synchronous requests made with the <xref:System.Net.WebRequest.GetResponse%2A> method.</span></span> <span data-ttu-id="0ca1c-467">시간 초과 비동기 요청에 사용 된 <xref:System.Net.WebRequest.Abort%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-467">To time out asynchronous requests, use the <xref:System.Net.WebRequest.Abort%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ca1c-468"><xref:System.Net.WebRequest> 클래스는는 `abstract` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-468">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="0ca1c-469">실제 동작이 <xref:System.Net.WebRequest> 인스턴스 실행 시 반환 된 하위 항목 클래스에 의해 결정 됩니다는 <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-469">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0ca1c-470">예외에 대 한 자세한 내용은 하위 항목 클래스에 대 한 설명서를와 같은 참조 <xref:System.Net.HttpWebRequest> 및 <xref:System.Net.FileWebRequest>합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-470">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ca1c-471">다음 예에서는 <xref:System.Net.WebRequest.Timeout%2A> 속성을 10000 밀리초입니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-471">The following example sets the <xref:System.Net.WebRequest.Timeout%2A> property to 10000 milliseconds.</span></span> <span data-ttu-id="0ca1c-472">리소스 반환 될 수 있습니다, 전에 시간 제한 기간이 만료 되는 <xref:System.Net.WebException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-472">If the timeout period expires before the resource can be returned, a <xref:System.Net.WebException> is thrown.</span></span>  
  
 [!code-cpp[WebRequest_Timeout#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_Timeout/CPP/webrequest_timeout.cpp#1)]
 [!code-csharp[WebRequest_Timeout#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_Timeout/CS/webrequest_timeout.cs#1)]
 [!code-vb[WebRequest_Timeout#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_Timeout/VB/webrequest_timeout.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0ca1c-473">속성이 서브클래스에서 재정의되지 않았는데 속성을 가져오거나 설정하려 할 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-473">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0ca1c-474">서브 클래스 하 여 작업이 시간 초과 신호는 <see cref="T:System.Net.WebException" /> 와 <see cref="P:System.Net.WebException.Status" /> 필드 설정 <see cref="F:System.Net.WebExceptionStatus.Timeout" />합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0ca1c-474">Descendant classes signal a timeout by throwing a <see cref="T:System.Net.WebException" /> with the <see cref="P:System.Net.WebException.Status" /> field set to <see cref="F:System.Net.WebExceptionStatus.Timeout" />.</span>
            </span>
            <span data-ttu-id="0ca1c-475">때 <see cref="P:System.Net.WebRequest.Timeout" /> 로 설정 된 <see cref="F:System.Threading.Timeout.Infinite" /> 하위 항목 클래스에는 시간이 제한 되지 않습니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0ca1c-475">When <see cref="P:System.Net.WebRequest.Timeout" /> is set to <see cref="F:System.Threading.Timeout.Infinite" /> the descendant class does not time out.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Net.HttpWebRequest.Timeout" />
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public virtual bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0ca1c-476">서브클래스에서 재정의된 경우 <see cref="P:System.Net.CredentialCache.DefaultCredentials" />를 요청과 함께 보낼지 여부를 제어하는 <see cref="T:System.Boolean" /> 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-476">When overridden in a descendant class, gets or sets a <see cref="T:System.Boolean" /> value that controls whether <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> are sent with requests.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0ca1c-477">기본 자격 증명이 사용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-477">
              <see langword="true" /> if the default credentials are used; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0ca1c-478">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-478">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ca1c-479">이 속성을 설정 `true` 에서이 요청을 수행 하는 경우 <xref:System.Net.WebRequest> 개체, 서버에 의해 요청 된 경우 인증 해야 현재 로그온된 한 사용자의 자격 증명을 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-479">Set this property to `true` when requests made by this <xref:System.Net.WebRequest> object should, if requested by the server, be authenticated using the credentials of the currently logged on user.</span></span> <span data-ttu-id="0ca1c-480">이 클라이언트 응용 프로그램에 대 한 대부분의 시나리오에서 원하는 동작 합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-480">For client applications, this is the desired behavior in most scenarios.</span></span> <span data-ttu-id="0ca1c-481">이 속성을 사용 하는 대신 ASP.NET 응용 프로그램과 같은 중간 계층 응용 프로그램에 대 한 일반적으로 설정한는 <xref:System.Net.WebRequest.Credentials%2A> 속성 대신 요청 클라이언트의 자격 증명을 합니다.</span><span class="sxs-lookup"><span data-stu-id="0ca1c-481">For middle tier applications, such as ASP.NET applications, instead of using this property, you would typically set the <xref:System.Net.WebRequest.Credentials%2A> property to the credentials of the client on whose behalf the request is made.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0ca1c-482">요청이 전송된 후 이 속성을 설정하려고 했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-482">You attempted to set this property after the request was sent.</span>
          </span>
        </exception>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0ca1c-483">속성이 서브클래스에서 재정의되지 않았는데 속성에 액세스를 시도할 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ca1c-483">Any attempt is made to access the property, when the property is not overridden in a descendant class.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>