<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IDesignerSerializationManager.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57e155ce2e90f730b64dded3e22d19f11e73ab215.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7e155ce2e90f730b64dded3e22d19f11e73ab215</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager">
          <source>Provides an interface that can manage design-time serialization.</source>
          <target state="translated">디자인 타임 serialization을 관리할 수 있는 인터페이스를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager">
          <source>A designer can utilize <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;</ph> to access services useful to managing design-time serialization processes.</source>
          <target state="translated">디자이너를 활용할 수 <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;</ph> 에 디자인 타임 serialization 프로세스 관리에 유용한 서비스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager">
          <source>For example, a class that implements the designer serialization manager can use this interface to create objects, look up types, identify objects, and customize the serialization of particular types.</source>
          <target state="translated">예를 들어 디자이너 serialization 관리자를 구현 하는 클래스 개체를 만들, 형식을 조회 하 고, 개체를 식별 하 고 특정 형식의 serialization을 사용자 지정 하려면이 인터페이스를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager">
          <source>The following example illustrates how to use <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;</ph> to serialize and deserialize Code DOM statements.</source>
          <target state="translated">다음 예제를 사용 하는 방법을 보여 줍니다 <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;</ph> 코드 DOM 문을 가능 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
          <source>The serialization provider to add.</source>
          <target state="translated">추가할 serialization 공급자입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
          <source>Adds the specified serialization provider to the serialization manager.</source>
          <target state="translated">지정된 serialization 공급자를 serialization 관리자에 추가합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
          <source>This method adds a custom serialization provider to the serialization manager.</source>
          <target state="translated">이 메서드를 serialization 관리자는 사용자 지정 serialization 공급자를 추가합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
          <source>Serialization providers can provide custom serializers for a particular type of object or set of types of objects.</source>
          <target state="translated">serialization 공급자는 사용자 지정 serializer에 개체의 특정 형식이나 개체 형식의 집합을 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
          <source>During serialization, each custom serialization provider is queried to return a serializer for a specific data type, if it can provide one.</source>
          <target state="translated">serialize하는 동안 각 사용자 지정 serialization 공급자는 지정된 데이터 형식에 대한 serializer가 있는 경우 이를 반환하도록 쿼리됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
          <source>The serialization manager uses the custom serializer provided by this method before using the default serializer for a particular type.</source>
          <target state="translated">serialization 관리자는 특정 형식에 대한 기본 serializer를 사용하기 전에 이 메서드에서 제공하는 사용자 지정 serializer를 사용합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context">
          <source>Gets a stack-based, user-defined storage area that is useful for communication between serializers.</source>
          <target state="translated">serializer 간의 통신에 유용한 스택 기반의 사용자 정의 저장소 영역을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /&gt;</ph> that stores data.</source>
          <target state="translated">데이터를 저장하는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context">
          <source>This storage area provides communication of object context information to serializers.</source>
          <target state="translated">이 저장소 영역 serializer를 통신 개체 컨텍스트 정보를 제공합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context">
          <source>Context information about objects that are being serialized can be stored and accessed through this <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</ph>.</source>
          <target state="translated">Serialize 되 고 개체에 대 한 컨텍스트 정보를 저장 하 고이 통해 액세스할 수 <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
          <source>The data type to create.</source>
          <target state="translated">만들 데이터 형식입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
          <source>The arguments to pass to the constructor for this type.</source>
          <target state="translated">이 형식에 대한 생성자에 전달할 인수입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
          <source>The name of the object.</source>
          <target state="translated">개체의 이름입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
          <source>This name can be used to access the object later through <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" /&gt;</ph>.</source>
          <target state="translated">이 이름은 나중에 <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" /&gt;</ph>를 통해 개체에 액세스하는 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="null" /&gt;</ph> is passed, the object is still created but cannot be accessed by name.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>이 전달되면 개체는 계속 만들어지지만 이름을 통해 개체에 액세스할 수는 없습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, this object is added to the design container.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>이면 이 개체가 디자인 컨테이너에 추가됩니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
          <source>The object must implement <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> for this to have any effect.</source>
          <target state="translated">개체에서는 영향을 줄 수 있도록 이에 대한 <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph>를 구현해야 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
          <source>Creates an instance of the specified type and adds it to a collection of named instances.</source>
          <target state="translated">지정된 형식의 인스턴스를 만들어 명명된 인스턴스의 컬렉션에 추가합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
          <source>The newly created object instance.</source>
          <target state="translated">새로 만들어진 개체 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
          <source>Objects that implement <ph id="ph1">&lt;xref:System.ComponentModel.IComponent&gt;</ph> are added to the design-time container if the <ph id="ph2">`addToContainer`</ph> parameter is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">구현 하는 개체 <ph id="ph1">&lt;xref:System.ComponentModel.IComponent&gt;</ph> 경우 디자인 타임 컨테이너에 추가 되는 <ph id="ph2">`addToContainer`</ph> 매개 변수는 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)">
          <source>The name of the object to retrieve.</source>
          <target state="translated">검색할 개체의 이름입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)">
          <source>Gets an instance of a created object of the specified name, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if that object does not exist.</source>
          <target state="translated">지정된 이름으로 만들어진 개체 인스턴스를 가져오거나, 해당 개체가 없으면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)">
          <source>An instance of the object with the given name, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no object by that name can be found.</source>
          <target state="translated">지정된 이름의 개체 인스턴스이거나, 해당 이름의 개체를 찾을 수 없으면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)">
          <source>The name of the object to retrieve must have been set through a prior call to <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt;</ph>.</source>
          <target state="translated">검색할 개체의 이름에 대 한 이전 호출에서 설정 되어 있어야 <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)">
          <source>The object to retrieve the name for.</source>
          <target state="translated">이름을 검색할 개체입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)">
          <source>Gets the name of the specified object, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the object has no name.</source>
          <target state="translated">지정된 개체의 이름을 가져오거나, 개체에 이름이 없으면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)">
          <source>The name of the object, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the object is unnamed.</source>
          <target state="translated">개체의 이름이거나, 개체에 이름이 없으면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(System.Type,System.Type)">
          <source>The type of the object to get the serializer for.</source>
          <target state="translated">serializer를 가져올 개체의 형식입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(System.Type,System.Type)">
          <source>The type of the serializer to retrieve.</source>
          <target state="translated">검색할 serializer의 형식입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(System.Type,System.Type)">
          <source>Gets a serializer of the requested type for the specified object type.</source>
          <target state="translated">지정된 개체 형식에 대한 요청된 형식의 serializer를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(System.Type,System.Type)">
          <source>An instance of the requested serializer, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no appropriate serializer can be located.</source>
          <target state="translated">요청된 serializer의 인스턴스이거나, 적절한 serializer를 찾을 수 없으면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(System.String)">
          <source>The fully qualified name of the type to load.</source>
          <target state="translated">로드할 형식의 정규화된 이름입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(System.String)">
          <source>Gets a type of the specified name.</source>
          <target state="translated">지정된 이름의 형식을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(System.String)">
          <source>An instance of the type, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the type cannot be loaded.</source>
          <target state="translated">형식의 인스턴스이거나, 형식이 로드될 수 없으면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties">
          <source>Indicates custom properties that can be serializable with available serializers.</source>
          <target state="translated">사용 가능한 serializer를 통해 serialize할 수 있는 사용자 지정 속성을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> containing the properties to be serialized.</source>
          <target state="translated">serialize될 속성이 들어 있는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties">
          <source>This property can contain an empty collection.</source>
          <target state="translated">이 속성에는 빈 컬렉션이 포함될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties">
          <source>A serializer should never assume that such properties exist.</source>
          <target state="translated">Serializer 해야 이러한 속성이 존재 하는 것이 아닙니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties">
          <source>A derived class or implementation of <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;</ph> defines the set of properties that are exposed here.</source>
          <target state="translated">파생된 클래스 또는 구현의 <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;</ph> 여기에 노출 되는 속성의 집합을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties">
          <source>This property can be populated by user code.</source>
          <target state="translated">사용자 코드에서이 속성을 채울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties">
          <source>It may be sufficient to call <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph> to populate this collection.</source>
          <target state="translated">호출할 충분할 수 있지만 <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)" /&gt;</ph> 의 <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph> 이 컬렉션을 채웁니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties">
          <source>The serialization manager must return an empty collection if no custom properties exist.</source>
          <target state="translated">Serialization 관리자는 존재 하는 사용자 지정 속성이 없는 경우 빈 컬렉션을 반환 해야 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
          <source>The provider to remove.</source>
          <target state="translated">제거할 공급자입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
          <source>This object must have been added using <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" /&gt;</ph>.</source>
          <target state="translated">이 개체는 <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" /&gt;</ph>를 사용하여 추가해야 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
          <source>Removes a custom serialization provider from the serialization manager.</source>
          <target state="translated">사용자 지정 serialization 공급자를 serialization 관리자에서 제거합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System.Object)">
          <source>The error to report.</source>
          <target state="translated">보고할 오류입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System.Object)">
          <source>This information object can be of any object type.</source>
          <target state="translated">이 정보 개체는 모든 개체 형식일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System.Object)">
          <source>If it is an exception, the message of the exception is extracted and reported to the user.</source>
          <target state="translated">이 개체가 예외인 경우에는 예외 메시지를 추출하여 사용자에게 보고하고</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System.Object)">
          <source>If it is any other type, <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> is called to display the information to the user.</source>
          <target state="translated">다른 형식인 경우에는 <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph>을 호출하여 정보를 사용자에게 표시합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System.Object)">
          <source>Reports an error in serialization.</source>
          <target state="translated">serialization의 오류를 보고합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System.Object)">
          <source>If the serialization manager supports logging multiple errors in its implementation of <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError%2A&gt;</ph>, it can store the error information object for a future report where all the errors encountered can be displayed at once.</source>
          <target state="translated">Serialization 관리자의 구현에서 여러 오류 기록을 지원 하는지 <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError%2A&gt;</ph>, 발생 한 모든 오류를 한 번에 표시 될 수 있는 향후 보고서에 대 한 오류 정보 개체를 저장할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System.Object)">
          <source>If this method stores multiple errors, serialization can continue after a call to this method.</source>
          <target state="translated">이 메서드는 여러 오류를 저장, serialization이이 메서드를 호출한 후 계속 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System.Object)">
          <source>If this method does not support logging multiple errors, this method should throw an exception, which aborts serialization.</source>
          <target state="translated">이 방법은 여러 개의 오류를 기록 하는 것을 지원 하지 않습니다, 하는 경우이 메서드는 serialization을 중단 하는 예외를 throw 해야 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System.Object)">
          <source>The serialization manager should never throw an exception for errors encountered during serialization.</source>
          <target state="translated">Serialization 관리자를 직렬화 하는 동안 발생 한 오류에 대 한 예외를 throw 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System.Object)">
          <source>It should only throw an exception during deserialization.</source>
          <target state="translated">만 역직렬화 하는 동안 예외가 throw 해야 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System.Object)">
          <source>Otherwise, users become confused because saving the document should never fail.</source>
          <target state="translated">그렇지 않으면 사용자가 문서를 저장 하기 때문에 혼란 스 러 워 실패 하지 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName">
          <source>Occurs when <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)" /&gt;</ph> cannot locate the specified name in the serialization manager's name table.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)" /&gt;</ph>이 지정된 이름을 serialization 관리자의 이름 테이블에서 찾을 수 없을 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName">
          <source>This event provides a way for a serializer to create an object on demand, so that the serializer does not have to order object creation by dependency.</source>
          <target state="translated">이 이벤트는 요구에 따라 serializer가 개체를 만들 수 있는 방법을 제공하므로 serializer가 종속에 의한 개체 생성을 명령할 필요가 없도록 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName">
          <source>The delegate for this event is cleared immediately after serialization or deserialization is complete.</source>
          <target state="translated">이 이벤트에 대한 대리자는 serialization 또는 deserialization이 완료된 후 즉시 제거됩니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete">
          <source>Occurs when serialization is complete.</source>
          <target state="translated">serialization이 완료되었을 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete">
          <source>This event is raised when serialization or deserialization is complete.</source>
          <target state="translated">이 이벤트는 serialization 또는 deserialization이 완료되었을 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete">
          <source>Generally, serialization code is written to emit serialization data and does not typically require state-related checking and processing.</source>
          <target state="translated">일반적으로 serialization 코드는 serialization 데이터를 내보내기 위해 쓰여지며 보통 상태 관련 확인 및 처리가 필요없습니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete">
          <source>If it is necessary to maintain state data throughout serialization, data can be set and accessed by a serializer, which can listen to the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete&gt;</ph> event, and clear the data after serialization.</source>
          <target state="translated">serialization을 수행하는 동안 상태 데이터를 유지해야 하는 경우에는 serializer에서 데이터를 설정하고 액세스할 수 있으며 해당 serializer는 <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete&gt;</ph> 이벤트를 수신하고 serialization 후에 데이터를 지울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete">
          <source>Restoring the proper state after serialization can be important because serializers can be reused during serialization, and leftover state data or open streams might not be correct.</source>
          <target state="translated">직렬화 중에 직렬 변환기를 다시 사용할 수 있습니다 하 고 나머지 상태 데이터 나 열려 있는 스트림이 올바르지 않을 수 있으므로 serialization 중요할 수 있습니다 후 적절 한 상태를 복원 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete">
          <source>For example, if a serializer needs to write to another file, such as a resource file, it is inefficient to design the serializer to close the file when finished.</source>
          <target state="translated">예를 들어 serializer 리소스 파일 등의 다른 파일에 쓸 수 있어야 하는 경우 이기 완료 되 면 파일을 닫고 serializer를 디자인 합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete">
          <source>Serializing an object graph usually requires several serializers.</source>
          <target state="translated">일반적으로 개체 그래프를 직렬화 하는 중 몇 가지 serializer 필요 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete">
          <source>The resource file would be opened and closed many times.</source>
          <target state="translated">리소스 파일을 열고 여러 번을 닫을 수는 있습니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete">
          <source>Instead, the resource file can be closed at the end of serialization by an object that listened to the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete&gt;</ph> event.</source>
          <target state="translated">대신, 리소스 파일 아무나 닫을 수 있습니다 serialization 후에 수신 대기 하는 개체는 <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(System.Object,System.String)">
          <source>The object instance to name.</source>
          <target state="translated">이름을 지정할 개체 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(System.Object,System.String)">
          <source>The name to give the instance.</source>
          <target state="translated">인스턴스에 지정할 이름입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(System.Object,System.String)">
          <source>Sets the name of the specified existing object.</source>
          <target state="translated">지정된 기존 개체의 이름을 설정합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(System.Object,System.String)">
          <source>This method is useful when it is necessary to create and then name an instance of an object without using <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt;</ph>.</source>
          <target state="translated">이 메서드는 만들고 다음 사용 하지 않고 개체의 인스턴스 이름을 지정 해야 하는 경우에 유용 <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(System.Object,System.String)">
          <source>An exception is thrown if you try to rename an existing object or if you try to give a new object a name that is already taken.</source>
          <target state="translated">기존 개체의 이름을 바꾸거나 새 개체에 이미 사용되고 있는 이름을 지정하려고 하면 예외가 throw됩니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>