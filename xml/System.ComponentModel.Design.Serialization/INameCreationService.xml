<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="INameCreationService.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b4a03448fb36f575a67db84111bfbd4587f9f50c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b4a03448fb36f575a67db84111bfbd4587f9f50c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.Serialization.INameCreationService">
          <source>Provides a service that can generate unique names for objects.</source>
          <target state="translated">개체에 대한 고유 이름을 만들 수 있는 서비스를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.INameCreationService">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph> can implement this service to provide a way for a designer to create new, unique names for objects.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph> 개체에 대 한 고유한 이름을 새로 만드는 디자이너에 대 한 방법을 제공 하도록이 서비스를 구현할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.INameCreationService">
          <source>If this service is not available, the designer uses a default implementation.</source>
          <target state="translated">이 서비스를 사용할 수 없는 경우 디자이너는 기본 구현을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.INameCreationService">
          <source>The following example code provides an example <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.INameCreationService&gt;</ph> implementation.</source>
          <target state="translated">다음 예제 코드는 예제를 제공 <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.INameCreationService&gt;</ph> 구현 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.INameCreationService">
          <source>The service can create a unique name based on a type that does not match any names in the specified container.</source>
          <target state="translated">서비스 있는 이름이 지정된 된 컨테이너와 일치 하지 않는 형식에 따라 고유한 이름을 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.INameCreationService">
          <source>It can also validate a specified name string.</source>
          <target state="translated">또한 지정된 된 이름 문자열 되는지 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.INameCreationService.CreateName(System.ComponentModel.IContainer,System.Type)">
          <source>The container where the new object is added.</source>
          <target state="translated">새 개체가 추가되는 컨테이너입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.INameCreationService.CreateName(System.ComponentModel.IContainer,System.Type)">
          <source>The data type of the object that receives the name.</source>
          <target state="translated">이름을 받을 개체의 데이터 형식입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.INameCreationService.CreateName(System.ComponentModel.IContainer,System.Type)">
          <source>Creates a new name that is unique to all components in the specified container.</source>
          <target state="translated">지정된 컨테이터의 모든 구성 요소에 고유한 새 이름을 만듭니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.INameCreationService.CreateName(System.ComponentModel.IContainer,System.Type)">
          <source>A unique name for the data type.</source>
          <target state="translated">데이터 형식에 대한 고유 이름입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.INameCreationService.CreateName(System.ComponentModel.IContainer,System.Type)">
          <source>This method returns a name for the new object that is unique within the specified container.</source>
          <target state="translated">이 메서드는 지정된 된 컨테이너 내에서 고유한 새 개체의 이름을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.INameCreationService.CreateName(System.ComponentModel.IContainer,System.Type)">
          <source>The following code example provides an example <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.INameCreationService.CreateName%2A?displayProperty=nameWithType&gt;</ph> method implementation.</source>
          <target state="translated">다음 코드 예제는 예제를 제공 <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.INameCreationService.CreateName%2A?displayProperty=nameWithType&gt;</ph> 메서드 구현 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.INameCreationService.CreateName(System.ComponentModel.IContainer,System.Type)">
          <source>The method can create a name based on the name of a specified type that is unique to the names of the components within the specified container.</source>
          <target state="translated">메서드는 지정된 된 컨테이너 내에서 구성 요소의 이름에 고유한 지정 된 형식의 이름을 기반으로 이름을 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.INameCreationService.CreateName(System.ComponentModel.IContainer,System.Type)">
          <source>This type of service is often implemented to create a unique object name from the name of the data type, often appended with a number that allows the name to be a unique identifier.</source>
          <target state="translated">이 유형의 서비스 종종 식별자를 고유 하 게 이름을 수 있는 번호를 추가 하는 데이터 형식의 이름에서 고유 개체 이름을 만들기 위해 종종 구현 됩니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.INameCreationService.CreateName(System.ComponentModel.IContainer,System.Type)">
          <source>For example, <ph id="ph1">&lt;see langword="ListBox1" /&gt;</ph> for a <ph id="ph2">&lt;see langword="ListBox" /&gt;</ph> object.</source>
          <target state="translated">예를 들어 <ph id="ph1">&lt;see langword="ListBox1" /&gt;</ph> 에 대 한는 <ph id="ph2">&lt;see langword="ListBox" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName(System.String)">
          <source>The name to validate.</source>
          <target state="translated">유효성을 검사할 이름입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName(System.String)">
          <source>Gets a value indicating whether the specified name is valid.</source>
          <target state="translated">지정된 이름이 유효한지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the name is valid; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">유효한 이름이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName(System.String)">
          <source>An implementation of the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.INameCreationService&gt;</ph> can have rules that define the parameters for valid names.</source>
          <target state="translated">구현에서 <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.INameCreationService&gt;</ph> 올바른 이름에 대 한 매개 변수를 정의 하는 규칙이 있을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName(System.String)">
          <source>This method can be implemented to validate a name and enforce those rules.</source>
          <target state="translated">이 메서드는 이름의 유효성을 검사 하 고 해당 규칙을 적용할를 구현할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName(System.String)">
          <source>The following code example provides an example <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A?displayProperty=nameWithType&gt;</ph> method implementation.</source>
          <target state="translated">다음 코드 예제는 예제를 제공 <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A?displayProperty=nameWithType&gt;</ph> 메서드 구현 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName(System.String)">
          <source>The method uses a string validation scheme that examines each character of the specified string to determine whether the specified string is a valid name.</source>
          <target state="translated">지정된 된 문자열은 올바른 이름이 있는지 여부를 확인 하려면 지정된 된 문자열의 각 문자를 검사 하는 문자열 유효성 검사 체계가 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName(System.String)">
          <source>The method returns <ph id="ph1">`true`</ph> if the string is valid, or <ph id="ph2">`false`</ph> otherwise.</source>
          <target state="translated">메서드가 반환 <ph id="ph1">`true`</ph> 문자열이 유효 인지 또는 <ph id="ph2">`false`</ph> 그렇지 않은 경우.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.INameCreationService.ValidateName(System.String)">
          <source>The name to validate.</source>
          <target state="translated">유효성을 검사할 이름입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.INameCreationService.ValidateName(System.String)">
          <source>Gets a value indicating whether the specified name is valid.</source>
          <target state="translated">지정된 이름이 유효한지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.INameCreationService.ValidateName(System.String)">
          <source>An implementation of the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.INameCreationService&gt;</ph> can have rules that define the parameters for valid names.</source>
          <target state="translated">구현에서 <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.INameCreationService&gt;</ph> 올바른 이름에 대 한 매개 변수를 정의 하는 규칙이 있을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.INameCreationService.ValidateName(System.String)">
          <source>This method can be implemented to validate a name and enforce those rules.</source>
          <target state="translated">이 메서드는 이름의 유효성을 검사 하 고 해당 규칙을 적용할를 구현할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.INameCreationService.ValidateName(System.String)">
          <source>This method is similar to <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A&gt;</ph>, except that this method throws an exception if the name is invalid.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A&gt;</ph>제외 하 고 이름에 유효 하지 않을 경우이 메서드는 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.INameCreationService.ValidateName(System.String)">
          <source>This allows implementers to provide detailed information in the exception message.</source>
          <target state="translated">이 예외 메시지에 대 한 자세한 정보를 제공 하는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.INameCreationService.ValidateName(System.String)">
          <source>The following code example provides an example <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A?displayProperty=nameWithType&gt;</ph> method implementation that uses a string validation scheme that examines each character of the specified string to determine whether the specified string is a valid name.</source>
          <target state="translated">다음 코드 예제는 예제를 제공 <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A?displayProperty=nameWithType&gt;</ph> 지정된 된 문자열은 올바른 이름이 있는지 여부를 확인 하려면 지정된 된 문자열의 각 문자를 검사 하는 문자열 유효성 검사 체계가 메서드의 구현입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.INameCreationService.ValidateName(System.String)">
          <source>The method throws an exception if the string is not valid.</source>
          <target state="translated">메서드는 문자열에 유효 하지 않을 경우 예외가 throw 됩니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>