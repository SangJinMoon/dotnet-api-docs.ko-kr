<Type Name="INameCreationService" FullName="System.ComponentModel.Design.Serialization.INameCreationService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e3f89aa3dd1694e1a3b5a2c741089250dbba7f6f" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37698197" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface INameCreationService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INameCreationService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.INameCreationService" />
  <TypeSignature Language="VB.NET" Value="Public Interface INameCreationService" />
  <TypeSignature Language="C++ CLI" Value="public interface class INameCreationService" />
  <TypeSignature Language="F#" Value="type INameCreationService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="a9ce3-101">개체에 대한 고유 이름을 만들 수 있는 서비스를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a9ce3-101">Provides a service that can generate unique names for objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9ce3-102"><xref:System.ComponentModel.Design.Serialization.DesignerLoader> 디자이너 개체에 대 한 고유한 이름을 새로 만들 수 있는 방법을 제공 하려면이 서비스를 구현할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a9ce3-102">A <xref:System.ComponentModel.Design.Serialization.DesignerLoader> can implement this service to provide a way for a designer to create new, unique names for objects.</span></span> <span data-ttu-id="a9ce3-103">이 서비스를 사용할 수 없는 경우 디자이너는 기본 구현을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="a9ce3-103">If this service is not available, the designer uses a default implementation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9ce3-104">다음 예제 코드에서는 <xref:System.ComponentModel.Design.Serialization.INameCreationService> 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="a9ce3-104">The following example code provides an example <xref:System.ComponentModel.Design.Serialization.INameCreationService> implementation.</span></span> <span data-ttu-id="a9ce3-105">서비스는 형식을 기반으로 지정된 된 컨테이너에는 이름 일치 하지 않는 고유한 이름을 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a9ce3-105">The service can create a unique name based on a type that does not match any names in the specified container.</span></span> <span data-ttu-id="a9ce3-106">지정된 된 이름 문자열은 검증할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a9ce3-106">It can also validate a specified name string.</span></span>  
  
 [!code-cpp[INameCreationServiceExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/INameCreationServiceExample/CPP/class1.cpp#1)]
 [!code-csharp[INameCreationServiceExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/INameCreationServiceExample/CS/class1.cs#1)]
 [!code-vb[INameCreationServiceExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/INameCreationServiceExample/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateName">
      <MemberSignature Language="C#" Value="public string CreateName (System.ComponentModel.IContainer container, Type dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateName(class System.ComponentModel.IContainer container, class System.Type dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.INameCreationService.CreateName(System.ComponentModel.IContainer,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateName (container As IContainer, dataType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ CreateName(System::ComponentModel::IContainer ^ container, Type ^ dataType);" />
      <MemberSignature Language="F#" Value="abstract member CreateName : System.ComponentModel.IContainer * Type -&gt; string" Usage="iNameCreationService.CreateName (container, dataType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
        <Parameter Name="dataType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="container">
          <span data-ttu-id="a9ce3-107">새 개체가 추가되는 컨테이너입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9ce3-107">The container where the new object is added.</span>
          </span>
        </param>
        <param name="dataType">
          <span data-ttu-id="a9ce3-108">이름을 받을 개체의 데이터 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9ce3-108">The data type of the object that receives the name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9ce3-109">지정된 컨테이터의 모든 구성 요소에 고유한 새 이름을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9ce3-109">Creates a new name that is unique to all components in the specified container.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9ce3-110">데이터 형식에 대한 고유 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9ce3-110">A unique name for the data type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9ce3-111">이 메서드는 지정된 된 컨테이너 내에서 고유한 새 개체의 이름을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="a9ce3-111">This method returns a name for the new object that is unique within the specified container.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9ce3-112">다음 코드 예제에서는 <xref:System.ComponentModel.Design.Serialization.INameCreationService.CreateName%2A?displayProperty=nameWithType> 메서드 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="a9ce3-112">The following code example provides an example <xref:System.ComponentModel.Design.Serialization.INameCreationService.CreateName%2A?displayProperty=nameWithType> method implementation.</span></span> <span data-ttu-id="a9ce3-113">메서드는 지정된 된 컨테이너 내에서 구성 요소의 이름에 고유한 지정 된 형식의 이름을 기반으로 이름을 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a9ce3-113">The method can create a name based on the name of a specified type that is unique to the names of the components within the specified container.</span></span>  
  
 [!code-cpp[INameCreationServiceExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/INameCreationServiceExample/CPP/class1.cpp#2)]
 [!code-csharp[INameCreationServiceExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/INameCreationServiceExample/CS/class1.cs#2)]
 [!code-vb[INameCreationServiceExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/INameCreationServiceExample/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="a9ce3-114">
            <para>이런이 종류의 서비스는 종종 이름이 고유 식별자를 허용 하는 번호를 추가, 데이터 형식의 이름에서 고유 개체 이름을 만들기 위해 자주 구현 됩니다. 예를 들어 <see langword="ListBox1" /> 에 대 한는 <see langword="ListBox" /> 개체입니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a9ce3-114">
              <para>This type of service is often implemented to create a unique object name from the name of the data type, often appended with a number that allows the name to be a unique identifier. For example, <see langword="ListBox1" /> for a <see langword="ListBox" /> object.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsValidName">
      <MemberSignature Language="C#" Value="public bool IsValidName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValidName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsValidName (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsValidName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member IsValidName : string -&gt; bool" Usage="iNameCreationService.IsValidName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a9ce3-115">유효성을 검사할 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9ce3-115">The name to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9ce3-116">지정된 이름이 유효한지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9ce3-116">Gets a value indicating whether the specified name is valid.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9ce3-117">유효한 이름이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9ce3-117">
              <see langword="true" /> if the name is valid; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9ce3-118">구현의 <xref:System.ComponentModel.Design.Serialization.INameCreationService> 유효한 이름에 대 한 매개 변수를 정의 하는 규칙이 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a9ce3-118">An implementation of the <xref:System.ComponentModel.Design.Serialization.INameCreationService> can have rules that define the parameters for valid names.</span></span> <span data-ttu-id="a9ce3-119">이 메서드는 이름의 유효성을 검사 하 고 해당 규칙을 적용할를 구현할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a9ce3-119">This method can be implemented to validate a name and enforce those rules.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9ce3-120">다음 코드 예제에서는 <xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A?displayProperty=nameWithType> 메서드 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="a9ce3-120">The following code example provides an example <xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A?displayProperty=nameWithType> method implementation.</span></span> <span data-ttu-id="a9ce3-121">지정된 된 문자열을 올바른 이름 인지 여부를 확인 하려면 지정된 된 문자열의 각 문자를 검사 하는 문자열 유효성 검사 체계가 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a9ce3-121">The method uses a string validation scheme that examines each character of the specified string to determine whether the specified string is a valid name.</span></span> <span data-ttu-id="a9ce3-122">메서드는 반환 `true` 문자열을 유효한 경우 또는 `false` 그렇지 않은 경우.</span><span class="sxs-lookup"><span data-stu-id="a9ce3-122">The method returns `true` if the string is valid, or `false` otherwise.</span></span>  
  
 [!code-cpp[INameCreationServiceExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/INameCreationServiceExample/CPP/class1.cpp#3)]
 [!code-csharp[INameCreationServiceExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/INameCreationServiceExample/CS/class1.cs#3)]
 [!code-vb[INameCreationServiceExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/INameCreationServiceExample/VB/class1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateName">
      <MemberSignature Language="C#" Value="public void ValidateName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ValidateName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.INameCreationService.ValidateName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member ValidateName : string -&gt; unit" Usage="iNameCreationService.ValidateName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a9ce3-123">유효성을 검사할 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9ce3-123">The name to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9ce3-124">지정된 이름이 유효한지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9ce3-124">Gets a value indicating whether the specified name is valid.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9ce3-125">구현의 <xref:System.ComponentModel.Design.Serialization.INameCreationService> 유효한 이름에 대 한 매개 변수를 정의 하는 규칙이 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a9ce3-125">An implementation of the <xref:System.ComponentModel.Design.Serialization.INameCreationService> can have rules that define the parameters for valid names.</span></span> <span data-ttu-id="a9ce3-126">이 메서드는 이름의 유효성을 검사 하 고 해당 규칙을 적용할를 구현할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a9ce3-126">This method can be implemented to validate a name and enforce those rules.</span></span>  
  
 <span data-ttu-id="a9ce3-127">이 메서드는 유사한 <xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A>한다는 점을 제외 하는 이름에 유효 하지 않은 경우이 메서드에서 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a9ce3-127">This method is similar to <xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A>, except that this method throws an exception if the name is invalid.</span></span> <span data-ttu-id="a9ce3-128">이 예외 메시지에 대 한 자세한 정보를 제공 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="a9ce3-128">This allows implementers to provide detailed information in the exception message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9ce3-129">다음 코드 예제에서는 <xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A?displayProperty=nameWithType> 지정된 된 문자열을 올바른 이름 인지 여부를 확인 하려면 지정된 된 문자열의 각 문자를 검사 하는 문자열 유효성 검사 체계를 사용 하는 메서드 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="a9ce3-129">The following code example provides an example <xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A?displayProperty=nameWithType> method implementation that uses a string validation scheme that examines each character of the specified string to determine whether the specified string is a valid name.</span></span> <span data-ttu-id="a9ce3-130">메서드는 문자열을 올바르지 않으면 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a9ce3-130">The method throws an exception if the string is not valid.</span></span>  
  
 [!code-cpp[INameCreationServiceExample#4](~/samples/snippets/cpp/VS_Snippets_Winforms/INameCreationServiceExample/CPP/class1.cpp#4)]
 [!code-csharp[INameCreationServiceExample#4](~/samples/snippets/csharp/VS_Snippets_Winforms/INameCreationServiceExample/CS/class1.cs#4)]
 [!code-vb[INameCreationServiceExample#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/INameCreationServiceExample/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>