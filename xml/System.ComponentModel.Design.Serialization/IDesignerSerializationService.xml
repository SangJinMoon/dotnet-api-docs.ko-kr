<Type Name="IDesignerSerializationService" FullName="System.ComponentModel.Design.Serialization.IDesignerSerializationService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ff81ff22705aa4b792f2505befdb6878c1f3f53a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30366577" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDesignerSerializationService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerSerializationService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.IDesignerSerializationService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerSerializationService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerSerializationService" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>serialization과 deserialization을 호출할 수 있는 인터페이스를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 서비스를 나타내는 개체를 직렬화 가능 개체의 컬렉션으로 변환 serialization 데이터를 나타내는 개체를 변환 하는 메서드를 제공 합니다.  
  
 디자이너를 지원 하는 모든 구성 요소는 각 구성 요소의 형식의 serialization을 지원 해야 합니다. 디자이너는 공용 속성, 메서드 및 각 유형의 이벤트를 검색 하 고 형식 설명자를 내에서이 나타내는 때 발생 합니다.  
  
 이 인터페이스는 구성 요소의 컬렉션을 지 원하는 런타임 serialization 단일 개체로 변환 하는 멤버를 검색 하는 방법을 사용 합니다. 반드시 클래스에 속하는 사용자 정의 형식의 serialization을 위해 제공 하지 않습니다. 많은 개체는 사용자 지정 직렬 변환기를 해당 값이 런타임에 serialize 필요 합니다. 사용자 지정 형식에 대 한 직렬 변환기를 지정 하려면는 <xref:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute> 특성 또는 구현는 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider>합니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />
  </Docs>
  <Members>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Deserialize (object serializationData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection Deserialize(object serializationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationService.Deserialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (serializationData As Object) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ Deserialize(System::Object ^ serializationData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationData">serialize된 데이터로 구성된 개체입니다.</param>
        <summary>지정된 serialization 데이터 개체를 deserialize하고 해당 데이터가 표시한 개체의 컬렉션을 반환합니다.</summary>
        <returns>지정된 serialization 데이터 개체에서 다시 빌드된 개체의 <see cref="T:System.Collections.ICollection" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public object Serialize (System.Collections.ICollection objects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Serialize(class System.Collections.ICollection objects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function Serialize (objects As ICollection) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Serialize(System::Collections::ICollection ^ objects);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objects" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="objects">serialize할 개체의 컬렉션입니다.</param>
        <summary>지정된 개체의 컬렉션을 serialize하여 serialization 데이터 개체에 저장합니다.</summary>
        <returns>지정된 개체 컬렉션의 serialize된 상태가 들어 있는 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 반환된 된 개체는 완전히 런타임 serialization을 지원합니다.  
  
 이 메서드에서 반환 되는 개체 컬렉션의 개체에 대 한 라이브 참조를 포함 합니다. 이 개체는 런타임 serialization 메커니즘에 전달 될 수 있습니다. 개체 자체는 디자이너 속성별로 상태를 저장 하 여 고객을 위해 소스를 쓸 동일한 방식으로 구성 요소를 serialize 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>