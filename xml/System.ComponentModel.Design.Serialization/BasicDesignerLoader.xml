<Type Name="BasicDesignerLoader" FullName="System.ComponentModel.Design.Serialization.BasicDesignerLoader">
  <TypeSignature Language="C#" Value="public abstract class BasicDesignerLoader : System.ComponentModel.Design.Serialization.DesignerLoader, System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BasicDesignerLoader extends System.ComponentModel.Design.Serialization.DesignerLoader implements class System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BasicDesignerLoader&#xA;Inherits DesignerLoader&#xA;Implements IDesignerLoaderService" />
  <TypeSignature Language="C++ CLI" Value="public ref class BasicDesignerLoader abstract : System::ComponentModel::Design::Serialization::DesignerLoader, System::ComponentModel::Design::Serialization::IDesignerLoaderService" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.Serialization.DesignerLoader</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.Serialization.IDesignerLoaderService</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="fd7fe-101"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" /> 인터페이스의 구현을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-101">Provides an implementation of the <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" /> interface.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd7fe-102">A <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> 일관 된 형식에 관련 된 항목이 없는 디자이너 로더의 완전 한 구현입니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-102">A <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> is a complete implementation of a designer loader without anything relating to a persistence format.</span></span> <span data-ttu-id="fd7fe-103">A <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> 텍스트 또는 이진 지 속성, 지시 하지 않는 것은 다음 기능을 지원 하지만:</span><span class="sxs-lookup"><span data-stu-id="fd7fe-103">A <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> does not dictate either a text or binary persistence, but it does support the following features:</span></span>  
  
-   <span data-ttu-id="fd7fe-104">여러 부하 종속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-104">Multiple load dependencies.</span></span>  
  
-   <span data-ttu-id="fd7fe-105">디자이너 내에서 변경 내용을 추적 합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-105">Tracking changes within the designer.</span></span>  
  
-   <span data-ttu-id="fd7fe-106">유휴 시간을 다시 로드 지연 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-106">Deferred idle-time reloading.</span></span>  
  
 <span data-ttu-id="fd7fe-107">A <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> 디자이너 호스트의 서비스 컨테이너에 두 종류의 서비스 추가: 대체 가능한 서비스 및 대체할 수 없는 서비스입니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-107">A <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> adds two kinds of services to the designer host’s service container: replaceable services and irreplaceable services.</span></span> <span data-ttu-id="fd7fe-108">보호 된 값을 변경 하 여 대체 가능 서비스를 바꿀 수 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-108">You can replace a replaceable service by changing the value of the protected <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost%2A> property.</span></span> <span data-ttu-id="fd7fe-109">구현 사항을 서로 종속 되어 있으므로 대체할 수 없는 서비스를 바꿀 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-109">You cannot replace irreplaceable services because their implementations depend on each other.</span></span>  
  
 <span data-ttu-id="fd7fe-110">다음 표에서 기본적으로 제공 되는 서비스에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-110">The following table describes the services that are provided by default.</span></span>  
  
|<span data-ttu-id="fd7fe-111">기본 서비스</span><span class="sxs-lookup"><span data-stu-id="fd7fe-111">Default Service</span></span>|<span data-ttu-id="fd7fe-112">설명</span><span class="sxs-lookup"><span data-stu-id="fd7fe-112">Description</span></span>|  
|---------------------|-----------------|  
|<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>|<span data-ttu-id="fd7fe-113">개체를를 요청 하는 디자이너의 다시 로드 동안 유휴 상태가 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-113">Allows objects to request that the designer reload itself when it is idle.</span></span> <span data-ttu-id="fd7fe-114">대체 가능한 서비스입니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-114">This is a replaceable service.</span></span>|  
|<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>|<span data-ttu-id="fd7fe-115">직렬화 하 고 개체를 deserialize 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-115">Used to serialize and deserialize objects.</span></span> <span data-ttu-id="fd7fe-116">Serialization 관리자는 직렬화를 수행 해야 하는 개체를 serialization 관리자에 추가 된 모든 serialization 공급자를 사용할 수 있도록 서비스로 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-116">The serialization manager is added as a service so objects that need to perform serialization can utilize any serialization providers that were added to the serialization manager.</span></span> <span data-ttu-id="fd7fe-117">대체할 수 없는 서비스입니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-117">This is an irreplaceable service.</span></span>|  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="fd7fe-118">시스템 리소스에 대 한 전체 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-118">for full access to system resources.</span></span> <span data-ttu-id="fd7fe-119">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-119">Demand values: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="fd7fe-120">연결 된 상태:</span><span class="sxs-lookup"><span data-stu-id="fd7fe-120">Associated state:</span></span></permission>
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BasicDesignerLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BasicDesignerLoader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fd7fe-121"><see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-121">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public override void BeginLoad (System.ComponentModel.Design.Serialization.IDesignerLoaderHost host);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void BeginLoad(class System.ComponentModel.Design.Serialization.IDesignerLoaderHost host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub BeginLoad (host As IDesignerLoaderHost)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void BeginLoad(System::ComponentModel::Design::Serialization::IDesignerLoaderHost ^ host);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />
      </Parameters>
      <Docs>
        <param name="host"><span data-ttu-id="fd7fe-122">로드할 디자이너 로더 호스트입니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-122">The designer loader host to load.</span></span></param>
        <summary><span data-ttu-id="fd7fe-123">로드 프로세스를 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-123">Starts the loading process.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd7fe-124">이 추상 구현 <xref:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-124">This is an implementation of the abstract <xref:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="fd7fe-125">사용자 지정 클래스에서이 메서드를 재정의할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-125">You do not need to override this method in your own class.</span></span> <span data-ttu-id="fd7fe-126"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> 메서드는 다음 작업을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-126">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> method performs the following actions:</span></span>  
  
-   <span data-ttu-id="fd7fe-127">디자인 화면 이미 로드 되지 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-127">It verifies that the design surface has not already loaded.</span></span>  
  
-   <span data-ttu-id="fd7fe-128">관련 서비스 및 호출 추가 첫 번째 호출에서 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-128">On the first call, it adds relevant services and calls the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize%2A> method.</span></span>  
  
-   <span data-ttu-id="fd7fe-129">호출 된 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>, <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A>, 및 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-129">It calls the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>, <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A>, and <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> methods.</span></span>  
  
 <span data-ttu-id="fd7fe-130">디자이너 로더 서비스가 서비스 컨테이너에서 제거 되지 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> 호출 됩니다는 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23AddLoadDependency%2A> 및 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A> 메서드 대신는 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> 및 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-130">If the designer loader service has not been removed from the service container, <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> will call the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23AddLoadDependency%2A> and <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A> methods instead of the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> and <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> methods.</span></span> <span data-ttu-id="fd7fe-131">이 경우에는 것은 디자이너 로더 서비스를 호출 하도록 책임 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> 및 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-131">In this situation, it is the responsibility of the designer loader service to call <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> and <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fd7fe-132"><paramref name="host" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="fd7fe-132"><paramref name="host" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fd7fe-133">디자이너가 이미 로드되었거나, 다른 디자이너 로더 호스트를 사용하여 <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" />가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="fd7fe-133">The designer is already loaded, or <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" /> has been called with a different designer loader host.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="fd7fe-134"><paramref name="host" />이 삭제되었습니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-134"><paramref name="host" /> has been disposed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fd7fe-135">
          <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" />에서 사용하는 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-135">Releases the resources used by the <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd7fe-136">호출 된 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A> 메서드가 변경 내용을 디자이너 로더에 플러시하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-136">Calling the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A> method does not flush changes to the designer loader.</span></span> <span data-ttu-id="fd7fe-137">저장할 변경 호출 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A> 호출 하기 전에 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-137">If you want changes to be saved, call <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A> before calling <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A>.</span></span>  
  
 <span data-ttu-id="fd7fe-138"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A> 사용을 마치면 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-138">Call <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>.</span></span> <span data-ttu-id="fd7fe-139"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A> 메서드를 사용하면 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>를 사용할 수 없게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-139">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A> method leaves the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> in an unusable state.</span></span> <span data-ttu-id="fd7fe-140">호출한 후 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A>에 대 한 모든 참조를 해제 해야는 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> 가비지 수집기는 메모리를 회수할 수 있도록 하는 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> 차지한 합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-140">After calling <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> was occupying.</span></span> <span data-ttu-id="fd7fe-141">자세한 내용은 참조 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Dispose 메서드를 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-141">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fd7fe-142"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A>에 대한 마지막 참조를 해제하기 전에 반드시 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>를 호출하십시오.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-142">Always call <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>.</span></span> <span data-ttu-id="fd7fe-143">이렇게 하지 않으면 가비지 수집기가 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> 개체의 `Finalize` 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-143">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableComponentNotification">
      <MemberSignature Language="C#" Value="protected virtual bool EnableComponentNotification (bool enable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool EnableComponentNotification(bool enable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.EnableComponentNotification(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EnableComponentNotification (enable As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool EnableComponentNotification(bool enable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enable">
          <span data-ttu-id="fd7fe-144"><see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />에 의한 구성 요소 알림을 사용하려면 <see langword="true" />이고, <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />에 의한 구성 요소 알림을 사용하지 않으려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-144"><see langword="true" /> to enable component notification by the <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />; <see langword="false" /> to disable component notification by the <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />.</span></span></param>
        <summary><span data-ttu-id="fd7fe-145"><see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />에 의한 구성 요소 알림을 활성화 또는 비활성화합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-145">Enables or disables component notification with the <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />.</span></span></summary>
        <returns>
          <span data-ttu-id="fd7fe-146">이 호출 전에 구성 요소 알림이 설정되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-146"><see langword="true" /> if the component notification was enabled prior to this call; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fd7fe-147">디자이너 로더의 보류 중인 변경 사항을 플러시합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-147">Flushes pending changes to the designer loader.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd7fe-148">디자이너 로더가 로드 되지 않은 또는 수정, 표시 되지 않은 경우는 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A> 메서드가 즉시 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-148">If the designer loader has not been loaded or has not been marked as modified, the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A> method returns immediately.</span></span> <span data-ttu-id="fd7fe-149">그렇지 않으면 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A> serialization 세션을 만들려면 serialization 관리자 문의 한 후 다음 호출 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-149">Otherwise, <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A> asks the serialization manager to create a serialization session and then calls <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ GetService(Type ^ serviceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="fd7fe-150">서비스의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-150">The <see cref="T:System.Type" /> of the service.</span></span></param>
        <summary><span data-ttu-id="fd7fe-151">요청한 서비스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-151">Gets the requested service.</span></span></summary>
        <returns><span data-ttu-id="fd7fe-152">요청한 서비스이거나, 요청한 서비스가 없으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-152">The requested service, or <see langword="null" /> if the requested service cannot be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd7fe-153"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService%2A> 파생 된 클래스를 허용 하는 도우미 메서드입니다 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> 디자이너 로더 호스트가 제공 서비스에 액세스할 합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-153"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService%2A> is a helper method that allows classes deriving from <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> to access services offered by the designer loader host.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fd7fe-154">서비스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-154">Initializes services.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd7fe-155"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize%2A> 메서드는 처음으로 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> 가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-155">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize%2A> method is called the first time <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> is invoked.</span></span> <span data-ttu-id="fd7fe-156">이 이번에 디자이너 로더 호스트가 하는 데 필요한 모든 서비스를 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-156">You can add any services necessary to the designer loader host at this time.</span></span> <span data-ttu-id="fd7fe-157">서비스를 추가 하는 기본 구현을 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> 기본 구현을 호출 후 기존 서비스를 바꿀 수 있도록 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-157">The base implementation adds services that <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> provides, so after calling the base implementation you may replace existing services.</span></span> <span data-ttu-id="fd7fe-158">재정의 하 여 여기에 추가 사용자 지정 서비스를 제거 해야 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-158">You must remove any custom services you add here by overriding <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fd7fe-159"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />가 초기화되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="fd7fe-159">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="fd7fe-160"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />가 삭제된 경우</span><span class="sxs-lookup"><span data-stu-id="fd7fe-160">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsReloadNeeded">
      <MemberSignature Language="C#" Value="protected virtual bool IsReloadNeeded ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsReloadNeeded() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsReloadNeeded () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsReloadNeeded();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fd7fe-161">디자이너가 다시 로드될지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-161">Indicates whether the designer should be reloaded.</span></span></summary>
        <returns>
          <span data-ttu-id="fd7fe-162">디자이너를 다시 로드해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-162"><see langword="true" /> if the designer should be reloaded; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fd7fe-163">기본 구현에서는 항상 <see langword="true" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-163">The default implementation always returns <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd7fe-164"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded%2A> 메서드를 사용 하 여 일부 디자이너 로더 다시 로드를 최적화 합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-164">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded%2A> method is used by some designer loaders to optimize reloading.</span></span> <span data-ttu-id="fd7fe-165">디자이너 로더가 지원 지능형 다시 로드 하는 경우이 메서드를 재정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-165">This method can be overridden if your designer loader supports intelligent reloading.</span></span> <span data-ttu-id="fd7fe-166">일부 디자이너 로더는 변경 내용을 사용 하는 문서를 검색 하 고 디자이너를 다시 로드를 실제로 필요한 인지 확인 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-166">Some designer loaders can detect changes made to their underlying document and determine if a reload of the designer is actually necessary.</span></span> <span data-ttu-id="fd7fe-167">반환 해야 그렇지 않은 경우 `false` 이 메서드에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-167">If not, they should return `false` from this method.</span></span> <span data-ttu-id="fd7fe-168">기본 구현에서는 항상 반환 `true`, 호출에 나타내는 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload%2A> 성공 합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-168">The default implementation always returns `true`, indicating that any call to <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload%2A> will succeed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoaderHost">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.Serialization.IDesignerLoaderHost LoaderHost { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.Serialization.IDesignerLoaderHost LoaderHost" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property LoaderHost As IDesignerLoaderHost" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::Design::Serialization::IDesignerLoaderHost ^ LoaderHost { System::ComponentModel::Design::Serialization::IDesignerLoaderHost ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.IDesignerLoaderHost</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fd7fe-169">로더 호스트를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-169">Gets the loader host.</span></span></summary>
        <value><span data-ttu-id="fd7fe-170"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 메서드에 전달된 <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-170">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> that was passed to the <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" /> method.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd7fe-171">이 메서드는이 디자이너 로더가에 제공 된 로더 호스트를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-171">This method returns the loader host that was given to this designer loader.</span></span> <span data-ttu-id="fd7fe-172">이 수 `null` 경우 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> 아직 호출 되지 않은 디자이너 로더가 삭제 되었거나 또는 합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-172">This can be `null` if <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> has not been called yet, or if this designer loader has been disposed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fd7fe-173"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />가 초기화되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="fd7fe-173">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="fd7fe-174"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />가 삭제된 경우</span><span class="sxs-lookup"><span data-stu-id="fd7fe-174">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has been disposed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />
      </Docs>
    </Member>
    <Member MemberName="Loading">
      <MemberSignature Language="C#" Value="public override bool Loading { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Loading" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Loading" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Loading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Loading { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fd7fe-175">디자이너 로더가 디자인 화면을 로드하고 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-175">Gets a value indicating whether the designer loader is loading the design surface.</span></span></summary>
        <value>
          <span data-ttu-id="fd7fe-176">디자이너 로더가 디자인 화면을 현재 로드하고 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-176"><see langword="true" /> if the designer loader is currently loading the design surface; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd7fe-177"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> 클래스를 제공는 <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>이며 부하 종속성을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-177">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> class provides the <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>, which supports load dependencies.</span></span> <span data-ttu-id="fd7fe-178">이 속성은 계정 및가 로드 종속성 반환 `true` 처리 중인 로드 종속성 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-178">This property takes load dependencies into account and will return `true` if there are any outstanding load dependencies.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Modified">
      <MemberSignature Language="C#" Value="protected virtual bool Modified { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Modified" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Property Modified As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool Modified { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fd7fe-179">디자이너가 수정되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-179">Gets or sets a value indicating whether the designer has been modified.</span></span></summary>
        <value>
          <span data-ttu-id="fd7fe-180">디자이너가 수정되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-180"><see langword="true" /> if the designer has been modified; otherwise, <see langword="false" />,</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd7fe-181">디자이너 수정 되었다는 사실을 디자이너 로더를 찾았습니다 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-181">Determines if the designer loader has detected that the designer has been modified.</span></span> <span data-ttu-id="fd7fe-182">이 속성이 `true` 때 디자이너 로더가 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A> 메서드가 호출 되 면 디자이너 로더는 호출의 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-182">If this property is `true` when the designer loader’s <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A> method is called, the designer loader will call the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginLoad">
      <MemberSignature Language="C#" Value="protected virtual void OnBeginLoad ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeginLoad() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeginLoad ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeginLoad();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fd7fe-183">로드가 곧 시작된다고 디자이너 로더에 알립니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-183">Notifies the designer loader that loading is about to begin.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd7fe-184"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> 메서드를 호출 하 여 로드 프로세스를 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-184">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> method is invoked to start the loading process.</span></span> <span data-ttu-id="fd7fe-185">이 이번에 로드 하기 위해 필요한 초기화를 수행 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-185">You should perform any necessary initialization for loading at this time.</span></span> <span data-ttu-id="fd7fe-186">이 메서드는 실제 작업 부하를 수행 하려면 쓰일 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-186">This method should not be used to perform the actual load.</span></span> <span data-ttu-id="fd7fe-187">변경 알림을 사용 하지 않도록 설정 하 고 설정 하는 기본 구현에서 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> 로드에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-187">The default implementation disables change notifications and sets up the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> for loading.</span></span>  
  
 <span data-ttu-id="fd7fe-188">구현 하는 경우 <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> 지원을 제공 하기 위해 종속 로드를 호출 해야 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> 첫 번째 종속 로드 수행 되는 경우.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-188">If you implement <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> to provide dependent load support, you should call <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> when the first dependent load occurs.</span></span> <span data-ttu-id="fd7fe-189">호출의 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> 마지막 호출 후 메서드는 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-189">Call the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> method after the last call to the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A> method.</span></span> <span data-ttu-id="fd7fe-190">기본적으로 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> 구현 <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> 있습니다에 대 한이 작업을 수행 하 고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-190">By default, <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> implements <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> and does this for you.</span></span> <span data-ttu-id="fd7fe-191">경우 <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> 사용할 수 없는 경우 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> 호출 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> 를 직접 호출 됩니다 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-191">If <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> is not available when <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> is called, <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> will directly call <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>.</span></span>  
  
 <span data-ttu-id="fd7fe-192">사용자 고유의 로더 서비스를 제공 하는 경우 또는 로더 서비스를 제공 하지 않으려는 경우이 메서드를 호출 하는 일을 담당 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-192">If you provide your own loader service, or if you choose not to provide a loader service, you are responsible for calling this method.</span></span> <span data-ttu-id="fd7fe-193"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> 메서드를 직접 호출 하 여이 자동으로으로 호출 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23AddLoadDependency%2A> 경우 <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> 를 사용할 수 또는 직접 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-193">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> method will automatically call this, either indirectly by calling <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23AddLoadDependency%2A> if <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> is available, or directly if it is not.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginUnload">
      <MemberSignature Language="C#" Value="protected virtual void OnBeginUnload ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeginUnload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeginUnload ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeginUnload();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fd7fe-194">언로드가 곧 시작된다고 디자이너 로더에 알립니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-194">Notifies the designer loader that unloading is about to begin.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd7fe-195"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload%2A> 디자이너 로더 문서 되려고 할 때 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-195">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload%2A> method is invoked when the designer loader is about to unload the document.</span></span>  
  
 <span data-ttu-id="fd7fe-196">문서를 다시 로드 하는 준비 과정에서 언로드되기 또는 문서를 로드 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-196">The document may be unloaded in preparation for reloading, or if the document failed to load.</span></span> <span data-ttu-id="fd7fe-197">문서 관련 서비스를 추가한 경우 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> 또는 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>, 여기에서 해당 구성 요소를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-197">If you added document-specific services in <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> or <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>, remove them here.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndLoad">
      <MemberSignature Language="C#" Value="protected virtual void OnEndLoad (bool successful, System.Collections.ICollection errors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEndLoad(bool successful, class System.Collections.ICollection errors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEndLoad (successful As Boolean, errors As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEndLoad(bool successful, System::Collections::ICollection ^ errors);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="successful" Type="System.Boolean" />
        <Parameter Name="errors" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="successful">
          <span data-ttu-id="fd7fe-198">로드가 성공적으로 완료되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-198"><see langword="true" /> if the load completed successfully; otherwise, <see langword="false" />.</span></span></param>
        <param name="errors"><span data-ttu-id="fd7fe-199">오류로 보고된 개체(대개, 예외)가 들어 있는 <see cref="T:System.Collections.ICollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-199">An <see cref="T:System.Collections.ICollection" /> containing objects (usually exceptions) that were reported as errors.</span></span></param>
        <summary><span data-ttu-id="fd7fe-200">로드가 완료되었음을 디자이너 로더에 알립니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-200">Notifies the designer loader that loading is complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd7fe-201"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> 로드가 완료 되 면 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-201">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> method is invoked when loading is finished.</span></span> <span data-ttu-id="fd7fe-202">항상 이라고를 로드 하는 동안 예외가 발생 하는 경우에 합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-202">It is always called, even if an exception is thrown during loading.</span></span> <span data-ttu-id="fd7fe-203">값 `successful` 로 설정 됩니다 `true` 로드가 성공 하면 또는 `false` 치명적인 오류가 발생 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-203">The value of `successful` will be set to `true` if the load succeeded, or `false` if a fatal error occurred.</span></span> <span data-ttu-id="fd7fe-204">`errors` 컬렉션 오류로 보고 된 개체가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-204">The `errors` collection will contain objects that were reported as errors.</span></span> <span data-ttu-id="fd7fe-205">일반적으로 이러한 개체는 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-205">Usually, these objects are exceptions.</span></span>  
  
 <span data-ttu-id="fd7fe-206">구현 하는 경우 <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> 지원을 제공 하기 위해 종속 로드를 호출 해야는 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> 마지막 호출 후 메서드는 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-206">If you implement <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> to provide dependent load support, you should call the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> method after the last call to the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A> method.</span></span> <span data-ttu-id="fd7fe-207">기본적으로 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> 구현 <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> 있습니다에 대 한이 작업을 수행 하 고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-207">By default, <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> implements <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> and does this for you.</span></span> <span data-ttu-id="fd7fe-208">경우 <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> 사용할 수 없는 경우 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> 호출 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> 를 직접 호출 됩니다 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> 호출한 후 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-208">If <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> is not available when <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> is called, <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> will directly call <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> after calling <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A>.</span></span>  
  
 <span data-ttu-id="fd7fe-209">모든 종속 로드가 완료 되 면 디자이너 로더 서비스에서이 메서드를 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-209">This method should be called by the designer loader service when all dependent loads have been completed.</span></span>  <span data-ttu-id="fd7fe-210">이 인해 중지에 의해 시작 된 로드 프로세스는 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-210">This stops the loading process that was initiated by the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> method.</span></span> <span data-ttu-id="fd7fe-211">사용자 고유의 로더 서비스를 제공 하는 경우 또는 로더 서비스를 제공 하지 않으려는 경우이 메서드를 호출 하는 일을 담당 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-211">If you provide your own loader service, or if you choose not to provide a loader service, you are responsible for calling this method.</span></span> <span data-ttu-id="fd7fe-212"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> 메서드를 자동으로 호출를 호출 하 여 간접적으로이 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A> 메서드 경우 <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> 를 사용할 수 또는 직접 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-212">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> method will automatically call this, either indirectly by calling the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A> method if <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> is available, or directly if it is not.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fd7fe-213"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />가 초기화되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="fd7fe-213">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="fd7fe-214"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />가 삭제된 경우</span><span class="sxs-lookup"><span data-stu-id="fd7fe-214">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnModifying">
      <MemberSignature Language="C#" Value="protected virtual void OnModifying ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModifying() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModifying ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModifying();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fd7fe-215">문서 상태가 곧 수정될 것임을 디자이너 로더에 알립니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-215">Notifies the designer loader that the state of the document is about to be modified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd7fe-216"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying%2A> 구성 요소 변경에 대 한 응답을 추가 하는 메서드를 호출 하거나를 수정할 수는 디자이너를 나타내는 이벤트를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-216">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying%2A> method is called in response to a component changing, adding, or removing event which indicates that the designer is about to be modified.</span></span> <span data-ttu-id="fd7fe-217">이 메서드를 재정의 하 여 소스 코드 제어를 구현할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-217">You can implement source code control by overriding this method.</span></span> <span data-ttu-id="fd7fe-218">에 대 한 호출 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying%2A> 있음을 의미 하지는 않습니다는 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified%2A> 속성은 나중 설정 `true`;는 의도 의미일 뿐입니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-218">A call to <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying%2A> does not mean that the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified%2A> property will later be set to `true`; it merely indicates an intention to do so.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformFlush">
      <MemberSignature Language="C#" Value="protected abstract void PerformFlush (System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PerformFlush(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub PerformFlush (serializationManager As IDesignerSerializationManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void PerformFlush(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ serializationManager);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="serializationManager"><span data-ttu-id="fd7fe-219">로드된 디자이너의 상태를 유지하는 데 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-219">An <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for persisting the state of loaded designers.</span></span></param>
        <summary><span data-ttu-id="fd7fe-220">디자이너의 모든 변경 사항을 플러시합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-220">Flushes all changes to the designer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd7fe-221"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A> 디자이너 로더를 플러시합니다. 지 속성은 디자이너의 변경 해야 할 때 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-221">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A> method is invoked when the designer loader needs to flush to persistence any changes made to the designers.</span></span> <span data-ttu-id="fd7fe-222">에 대 한 호출에 대 한 응답에서 호출 되는 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-222">It is invoked in response to a call to the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Docs>
    </Member>
    <Member MemberName="PerformLoad">
      <MemberSignature Language="C#" Value="protected abstract void PerformLoad (System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PerformLoad(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub PerformLoad (serializationManager As IDesignerSerializationManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void PerformLoad(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ serializationManager);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="serializationManager"><span data-ttu-id="fd7fe-223">디자이너의 상태를 로드하는 데 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-223">An <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for loading state for the designers.</span></span></param>
        <summary><span data-ttu-id="fd7fe-224">지속성 항목으로부터 디자이너를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-224">Loads a designer from persistence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd7fe-225"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A> 디자이너 로더를 해당 상태를 로드 해야 하는 경우 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-225">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A> method is invoked when the designer loader needs to load its state.</span></span> <span data-ttu-id="fd7fe-226"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A> 이전에 호출 됩니다는 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-226"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A> is called before the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> method.</span></span> <span data-ttu-id="fd7fe-227">디자이너 콘텐츠를 로드 하려면이 메서드를 구현 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-227">You must implement this method to load the designer contents.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Docs>
    </Member>
    <Member MemberName="PropertyProvider">
      <MemberSignature Language="C#" Value="protected object PropertyProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PropertyProvider" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PropertyProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Property PropertyProvider As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Object ^ PropertyProvider { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fd7fe-228">로더에서 사용하는 serialization 관리자의 속성 공급자를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-228">Gets or sets the property provider for the serialization manager being used by the loader.</span></span></summary>
        <value><span data-ttu-id="fd7fe-229">serialization 관리자에 속성을 제공할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-229">An object whose properties are to be provided to the serialization manager.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd7fe-230">Serialization 관리자를 제공는 `Properties` 특정 요구 사항에 맞게 해당 serialization을 사용자 지정 하는 serializer에서 읽을 수 있는 기본 인터페이스에 대해 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-230">The serialization manager provides a `Properties` property on its primary interface that can be read by serializers to customize their serialization to specific needs.</span></span> <span data-ttu-id="fd7fe-231">Serializer가 검사 되는 속성이 사용 되는 serializer의 유형에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-231">The properties that are examined by the serializers vary depending on the type of serializer used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fd7fe-232"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />가 초기화되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="fd7fe-232">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Reload">
      <MemberSignature Language="C#" Value="protected void Reload (System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions flags);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Reload(valuetype System.ComponentModel.Design.Serialization.BasicDesignerLoader/ReloadOptions flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Reload (flags As BasicDesignerLoader.ReloadOptions)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Reload(System::ComponentModel::Design::Serialization::BasicDesignerLoader::ReloadOptions flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.ComponentModel.Design.Serialization.BasicDesignerLoader+ReloadOptions" />
      </Parameters>
      <Docs>
        <param name="flags"><span data-ttu-id="fd7fe-233"><see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions" /> 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-233">A bitwise combination of the <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions" /> values.</span></span></param>
        <summary><span data-ttu-id="fd7fe-234">디자이너의 다시 로드를 큐에 대기시킵니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-234">Queues a reload of the designer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd7fe-235"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload%2A> 디자이너 로더는 디자이너에 대 한 다시 로드를 요청 하 여 메서드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-235">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload%2A> method can be invoked by the designer loader to request a reload of the designer.</span></span> <span data-ttu-id="fd7fe-236">유휴 시간에 다시 로드 수행 되므로,이 메서드가 실제로 다시 로드 하지 않습니다는 디자이너 방금 다시 로드를 대기합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-236">Because reloads are performed at idle time, this method does not actually reload the designer; it just queues the reload.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions" />
      </Docs>
    </Member>
    <Member MemberName="ReloadPending">
      <MemberSignature Language="C#" Value="protected bool ReloadPending { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReloadPending" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadPending" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ReloadPending As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool ReloadPending { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fd7fe-237">다시 로드 작업이 큐에 대기되었는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-237">Gets a value indicating whether a reload has been queued.</span></span></summary>
        <value>
          <span data-ttu-id="fd7fe-238"><see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" /> 호출로 다시 로드 요청이 큐에 대기되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-238"><see langword="true" />, if a call to <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" /> has queued a reload request; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" />
      </Docs>
    </Member>
    <Member MemberName="ReportFlushErrors">
      <MemberSignature Language="C#" Value="protected virtual void ReportFlushErrors (System.Collections.ICollection errors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ReportFlushErrors(class System.Collections.ICollection errors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ReportFlushErrors (errors As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ReportFlushErrors(System::Collections::ICollection ^ errors);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errors" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="errors"><span data-ttu-id="fd7fe-239">오류 개체(대개, 예외)가 들어 있는 <see cref="T:System.Collections.ICollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-239">An <see cref="T:System.Collections.ICollection" /> containing error objects, usually exceptions.</span></span></param>
        <summary><span data-ttu-id="fd7fe-240">변경 사항을 플러시하는 동안 발생한 오류를 보고합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-240">Reports errors that occurred while flushing changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd7fe-241"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors%2A> 메서드는 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A> 변경 내용을 플러시하는 동안 하나 이상의 오류가 발생 한 경우.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-241">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors%2A> method is called during <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A> if one or more errors occurred while flushing changes.</span></span> <span data-ttu-id="fd7fe-242">값은 `errors` 예외 또는 사용 하 여 개체 컬렉션 일 수 있습니다 <xref:System.Object.ToString%2A> 오류를 설명 하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-242">The values in the `errors` collection can be exceptions or objects with <xref:System.Object.ToString%2A> values that describe the error.</span></span> <span data-ttu-id="fd7fe-243">기본 구현은 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors%2A> 컬렉션의 마지막 예외를 발생 시킵니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-243">The default implementation of <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors%2A> raises the last exception in the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fd7fe-244">변경 사항을 플러시하는 동안 하나 이상의 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="fd7fe-244">One or more errors occurred while flushing changes.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetBaseComponentClassName">
      <MemberSignature Language="C#" Value="protected void SetBaseComponentClassName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetBaseComponentClassName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetBaseComponentClassName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetBaseComponentClassName(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fd7fe-245">디자인할 구성 요소의 전체 이름을 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-245">A string representing the full name of the component to be designed.</span></span></param>
        <summary><span data-ttu-id="fd7fe-246">기본 구성 요소의 전체 클래스 이름을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-246">Sets the full class name of the base component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd7fe-247"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName%2A> 디자이너를 디자인 하 고 구성 요소를의 전체 이름을 설정 하려면 로드 하는 동안 메서드를 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-247">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName%2A> method should be called during loading to establish the full name of the component a designer is designing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fd7fe-248"><paramref name="name" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="fd7fe-248"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency">
      <MemberSignature Language="C#" Value="void IDesignerLoaderService.AddLoadDependency ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency" />
      <MemberSignature Language="VB.NET" Value="Sub AddLoadDependency () Implements IDesignerLoaderService.AddLoadDependency" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency() = System::ComponentModel::Design::Serialization::IDesignerLoaderService::AddLoadDependency;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fd7fe-249"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />에서 관리하는 로드 프로세스의 일부로 외부 구성 요소를 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-249">Registers an external component as part of the load process managed by <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd7fe-250">호출 된 <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> 로드 프로세스에 참여 하는 각 외부 개체에 대해 한 번씩 메서드.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-250">Call the <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> method once for each external object participating in the load process.</span></span> <span data-ttu-id="fd7fe-251"><xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> 메서드는 로드 프로세스의 작업을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-251">The <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> method is called when the work of the load process is done.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fd7fe-252"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />가 초기화되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="fd7fe-252">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete">
      <MemberSignature Language="C#" Value="void IDesignerLoaderService.DependentLoadComplete (bool successful, System.Collections.ICollection errorCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(bool successful, class System.Collections.ICollection errorCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#DependentLoadComplete(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Sub DependentLoadComplete (successful As Boolean, errorCollection As ICollection) Implements IDesignerLoaderService.DependentLoadComplete" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(bool successful, System::Collections::ICollection ^ errorCollection) = System::ComponentModel::Design::Serialization::IDesignerLoaderService::DependentLoadComplete;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="successful" Type="System.Boolean" />
        <Parameter Name="errorCollection" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="successful">
          <span data-ttu-id="fd7fe-253">성공적으로 로드하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-253"><see langword="true" /> to load successfully; otherwise, <see langword="false" />.</span></span></param>
        <param name="errorCollection"><span data-ttu-id="fd7fe-254">로드하는 동안 발생한 오류가 들어 있는 <see cref="T:System.Collections.ICollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-254">An <see cref="T:System.Collections.ICollection" /> containing errors that occurred during the load.</span></span></param>
        <summary><span data-ttu-id="fd7fe-255">종속 로드가 종료되었음을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-255">Signals that a dependent load has finished.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd7fe-256"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A> 메서드는 종속 로드 작업이 완료 되었음을 알리기 위해 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-256">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A> method is called to signal that a dependent loading operation has completed.</span></span> <span data-ttu-id="fd7fe-257">호출 된 <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> 메서드를 호출 하 여 등록 된 모든 프로세스에 대해 한 번씩는 <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> 메서드를 이미 완료 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-257">Call the <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> method once for every process that was registered by calling the <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> method, which has already completed.</span></span>  
  
 <span data-ttu-id="fd7fe-258">경우 종속 로드가 성공 하면 호출자에 게 집합은 `successful` 매개 변수를 `true` 빈 컬렉션을 전달 또는 `null` 에 `errorCollection` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-258">If the dependent load succeeds, the caller sets the `successful` parameter to `true` and passes either an empty collection or `null` to the `errorCollection` parameter.</span></span> <span data-ttu-id="fd7fe-259">호출자 종속 로드 오류가 발생 하는 경우 설정의 `successful` 매개 변수를 `false` 실패 한 이유를 나타내는 예외의 컬렉션을 전달는 `errorCollection` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-259">If the dependent load encounters errors, the caller sets the `successful` parameter to `false` and passes a collection of exceptions that indicate the reason or reasons for failure to the `errorCollection` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fd7fe-260"><see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency" />가 로드 종속성을 추가하지 않았거나, <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />가 초기화되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="fd7fe-260">No load dependencies have been added by <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency" />, or the <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="fd7fe-261"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />가 삭제된 경우</span><span class="sxs-lookup"><span data-stu-id="fd7fe-261">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload">
      <MemberSignature Language="C#" Value="bool IDesignerLoaderService.Reload ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#Reload" />
      <MemberSignature Language="VB.NET" Value="Function Reload () As Boolean Implements IDesignerLoaderService.Reload" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload() = System::ComponentModel::Design::Serialization::IDesignerLoaderService::Reload;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fd7fe-262">디자인 문서를 다시 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-262">Reloads the design document.</span></span></summary>
        <returns>
          <span data-ttu-id="fd7fe-263">다시 로드 요청이 받아들여지면 <see langword="true" />이고, 로더가 다시 로드를 허용하지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-263"><see langword="true" /> if the reload request is accepted; <see langword="false" /> if the loader does not allow the reload.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd7fe-264">모든 개체를 호출할 수는 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23Reload%2A> 로더 디자인 문서를 다시 로드를 요청 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-264">Any object can call the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23Reload%2A> method to request that the loader reload the design document.</span></span> <span data-ttu-id="fd7fe-265">디자이너 로더가 수를 반환할 경우 로더를 다시 로드를 지원 하 고 다시 로드 될 때까지 준수, `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-265">If the loader supports reloading and complies with the reload, the designer loader can return `true`.</span></span> <span data-ttu-id="fd7fe-266">그렇지 않으면 반환 `false`, 나타내는 다시 로드가 발생 하지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-266">Otherwise, it returns `false`, indicating that the reload will not occur.</span></span> <span data-ttu-id="fd7fe-267">호출자에 게 발생 하는 즉시; 다시 로드를 사용할 수 없게 디자이너 로더가 다른 시간에 대 한이 예약할 수 또는 디자이너를 한 번에 다시 로드를 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-267">Callers cannot rely on the reload happening immediately; the designer loader can schedule this for some other time, or it can try to reload the designer at once.</span></span>  
  
 <span data-ttu-id="fd7fe-268">디자이너를 다시 로드할 수 없는 경우 호출자에 게 사용자에 게 메시지를 표시할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fd7fe-268">The caller can display a message to the user if the designer cannot be reloaded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>