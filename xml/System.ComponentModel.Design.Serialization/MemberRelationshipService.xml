<Type Name="MemberRelationshipService" FullName="System.ComponentModel.Design.Serialization.MemberRelationshipService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="378c9fc24b3404ec176cc07044966e22e16ba9c8" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MemberRelationshipService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MemberRelationshipService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.MemberRelationshipService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MemberRelationshipService" />
  <TypeSignature Language="C++ CLI" Value="public ref class MemberRelationshipService abstract" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="3d1b6-101">멤버를 다른 멤버와 연결하기 위한 기본 클래스를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3d1b6-101">Provides the base class for relating one member to another.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d1b6-102">디자이너 자체적으로 직렬화 되 코드를 통해 개체의 경우 라이브 속성 값을 검색 하 고 코드와 해당 값을 생성 하는 엔진입니다.</span><span class="sxs-lookup"><span data-stu-id="3d1b6-102">Designers serialize themselves to code through an engine that searches through the live property values of objects and generates those values as code.</span></span> <span data-ttu-id="3d1b6-103">따라서 예를 들어 다음과 같은 형식에 있는 단추의 텍스트 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3d1b6-103">So, for example, the text of a button is generated in the following format.</span></span>  
  
```csharp  
this.okButton.Text = "OK";  
```  
  
 <span data-ttu-id="3d1b6-104">이 체계의 제한 중 하나는 다른 위치에서 속성을 검색 하기가 어렵습니다.</span><span class="sxs-lookup"><span data-stu-id="3d1b6-104">One of the limitations of this scheme is that it is difficult to retrieve a property from another location.</span></span> <span data-ttu-id="3d1b6-105">예를 들어 다음과 같은 형식의 코드를 생성 하기 매우 어렵습니다, 그리고 코드 생성기는 유일한 사항은 사용할 수 있기 때문에 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="3d1b6-105">For example, it is very difficult to emit code in the following format, because the only thing the code generator can rely on is the value in the property.</span></span>  
  
```csharp  
this.titleLabel.Text = this.Text;  
```  
  
   
  
## Examples  
 <span data-ttu-id="3d1b6-106"><xref:System.ComponentModel.Design.Serialization.MemberRelationshipService> 다른 위치에서 속성 값의 검색을 간소화 합니다.</span><span class="sxs-lookup"><span data-stu-id="3d1b6-106">The <xref:System.ComponentModel.Design.Serialization.MemberRelationshipService> simplifies retrieval of a property value from another location.</span></span> <span data-ttu-id="3d1b6-107">디자이너를 하나의 해당 멤버의 다른 값이 할당을 받아이 서비스에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3d1b6-107">A designer can access this service to dictate that one member is assigned the value of another.</span></span> <span data-ttu-id="3d1b6-108">코드 생성기 코드를 생성할 때 이러한 관계를 검색 하 고 속성 값에 대 한 검색 하는 대신 관계에 대 한 코드를 내보냅니다 두 멤버 사이의 관계 코드 생성기, 있으면 경우 키를 누릅니다.</span><span class="sxs-lookup"><span data-stu-id="3d1b6-108">The code generator searches for such relationships when generating code, and if a relationship between two members is found the code generator, it emits code for the relationship rather than searching for the property value.</span></span> <span data-ttu-id="3d1b6-109">이전 텍스트 할당을 사용 하 여 예를 들어, 다음 코드 예제에서는 디자인 타임 코드 관계를 설정 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="3d1b6-109">Using the previous text assignment as an example, the following code example shows design time code used to establish a relationship.</span></span>  
  
```csharp  
object titleLabel, form;  
PropertyDescriptor titleLabelText = TypeDescriptor.GetProperties(titleLabel)["Text"];  
PropertyDescriptor formText = TypeDescriptor.GetProperties(form)["Text"];  
MemberRelationshipService ms = GetService(typeof(MemberRelationshipService);  
ms[titleLabel, titleLabelText] = new MemberRelationship(form, formText);  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="3d1b6-110">
          <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationshipService" /> 클래스는 <see langword="abstract" />합니다.</span>
        <span class="sxs-lookup">
          <span data-stu-id="3d1b6-110">The <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationshipService" /> class is <see langword="abstract" />.</span>
        </span>
        <span data-ttu-id="3d1b6-111">구체적인 버전을 구현 하는 작업은 지원 되는 멤버의 형식에 따라 달라 집니다.</span>
        <span class="sxs-lookup">
          <span data-stu-id="3d1b6-111">Implementing a concrete version varies depending on the types of members that are supported.</span>
        </span>
        <span data-ttu-id="3d1b6-112">예를 들어 하나의 이벤트와 관련 된 다른 하나의 속성 관련와 다르게 구현이 필요할 수 있습니다.</span>
        <span class="sxs-lookup">
          <span data-stu-id="3d1b6-112">For example, relating one event to another might require a different implementation than relating one property to another.</span>
        </span>
        <span data-ttu-id="3d1b6-113">서비스를 구현 하는 다음 단계로 구성 됩니다.</span>
        <span class="sxs-lookup">
          <span data-stu-id="3d1b6-113">Implementing the service requires the following steps:</span>
        </span>  
  
-   <span data-ttu-id="3d1b6-114">구현 <see cref="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)" /> 반환할 <see langword="true" /> 지 원하는 관계에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="3d1b6-114">Implement <see cref="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)" /> to return <see langword="true" /> for relationships that you support.</span></span>  
  
-   <span data-ttu-id="3d1b6-115">원본 관계 및 할당 값에 변경 내용을 대상 관계의 변경 내용을 추적 합니다.</span><span class="sxs-lookup"><span data-stu-id="3d1b6-115">Track changes to the source relationship and assign value changes into the target relationship.</span></span></para>
    </block>
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MemberRelationshipService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MemberRelationshipService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d1b6-116">
            <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationshipService" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d1b6-116">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationshipService" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelationship">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.Design.Serialization.MemberRelationship GetRelationship (System.ComponentModel.Design.Serialization.MemberRelationship source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.ComponentModel.Design.Serialization.MemberRelationship GetRelationship(valuetype System.ComponentModel.Design.Serialization.MemberRelationship source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.GetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetRelationship (source As MemberRelationship) As MemberRelationship" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ComponentModel::Design::Serialization::MemberRelationship GetRelationship(System::ComponentModel::Design::Serialization::MemberRelationship source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.MemberRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ComponentModel.Design.Serialization.MemberRelationship" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="3d1b6-117">소스 관계입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d1b6-117">The source relationship.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d1b6-118">지정된 소스 관계에 관계를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d1b6-118">Gets a relationship to the given source relationship.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d1b6-119">
            <paramref name="source" />에 대한 관계이거나, 관계가 없으면 <see cref="F:System.ComponentModel.Design.Serialization.MemberRelationship.Empty" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d1b6-119">A relationship to <paramref name="source" />, or <see cref="F:System.ComponentModel.Design.Serialization.MemberRelationship.Empty" /> if no relationship exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d1b6-120">기본 구현은 약한 참조를 사용 하 여 관계 테이블 않습니다 하지 개체가 활성 상태로 유지 하는 사전에 관계를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="3d1b6-120">The default implementation stores relationships in a dictionary using weak references, so the relationship table does not keep objects alive.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3d1b6-121">소스 개체와 대상 개체의 관계를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d1b6-121">Establishes a relationship between a source and target object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.Serialization.MemberRelationship this[System.ComponentModel.Design.Serialization.MemberRelationship source] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.Design.Serialization.MemberRelationship Item(valuetype System.ComponentModel.Design.Serialization.MemberRelationship)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.ComponentModel.Design.Serialization.MemberRelationship)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(source As MemberRelationship) As MemberRelationship" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Design::Serialization::MemberRelationship default[System::ComponentModel::Design::Serialization::MemberRelationship] { System::ComponentModel::Design::Serialization::MemberRelationship get(System::ComponentModel::Design::Serialization::MemberRelationship source); void set(System::ComponentModel::Design::Serialization::MemberRelationship source, System::ComponentModel::Design::Serialization::MemberRelationship value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.MemberRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ComponentModel.Design.Serialization.MemberRelationship" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="3d1b6-122">소스 관계입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d1b6-122">The source relationship.</span>
          </span>
          <span data-ttu-id="3d1b6-123">관계 할당의 왼쪽 부분입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d1b6-123">This is the left-hand side of a relationship assignment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d1b6-124">소스 개체와 대상 개체의 관계를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d1b6-124">Establishes a relationship between a source and target object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d1b6-125">
            <paramref name="source" />와 연결된 현재 관계이거나, 관계가 없으면 <see cref="F:System.ComponentModel.Design.Serialization.MemberRelationship.Empty" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d1b6-125">The current relationship associated with <paramref name="source" />, or <see cref="F:System.ComponentModel.Design.Serialization.MemberRelationship.Empty" /> if there is no relationship.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d1b6-126">경우 <xref:System.ComponentModel.Design.Serialization.MemberRelationship.Empty> 할당 원본으로 기존 관계 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3d1b6-126">If <xref:System.ComponentModel.Design.Serialization.MemberRelationship.Empty> is assigned to the source, any existing relationship is removed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3d1b6-127">
            <paramref name="source" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d1b6-127">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3d1b6-128">
            <paramref name="source" />가 비어 있거나 서비스에서 관계를 지원하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d1b6-128">
              <paramref name="source" /> is empty, or the relationship is not supported by the service.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.Serialization.MemberRelationship this[object sourceOwner, System.ComponentModel.MemberDescriptor sourceMember] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.Design.Serialization.MemberRelationship Item(object, class System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.Object,System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(sourceOwner As Object, sourceMember As MemberDescriptor) As MemberRelationship" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Design::Serialization::MemberRelationship default[System::Object ^, System::ComponentModel::MemberDescriptor ^] { System::ComponentModel::Design::Serialization::MemberRelationship get(System::Object ^ sourceOwner, System::ComponentModel::MemberDescriptor ^ sourceMember); void set(System::Object ^ sourceOwner, System::ComponentModel::MemberDescriptor ^ sourceMember, System::ComponentModel::Design::Serialization::MemberRelationship value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.MemberRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceOwner" Type="System.Object" />
        <Parameter Name="sourceMember" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="sourceOwner">
          <span data-ttu-id="3d1b6-129">소스 관계의 소유자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d1b6-129">The owner of a source relationship.</span>
          </span>
        </param>
        <param name="sourceMember">
          <span data-ttu-id="3d1b6-130">소스 관계의 멤버입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d1b6-130">The member of a source relationship.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d1b6-131">소스 개체와 대상 개체의 관계를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d1b6-131">Establishes a relationship between a source and target object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d1b6-132">소스 개체와 대상 개체의 관계를 캡슐화하는 <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationship" /> 구조체이거나, 관계가 없으면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d1b6-132">A <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationship" /> structure encapsulating the relationship between a source and target object, or <see langword="null" /> if there is no relationship.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3d1b6-133">
            <paramref name="sourceOwner" /> 또는 <paramref name="sourceMember" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d1b6-133">
              <paramref name="sourceOwner" /> or <paramref name="sourceMember" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3d1b6-134">
            <paramref name="sourceOwner" /> 또는 <paramref name="sourceMember" />가 비어 있거나 서비스에서 관계를 지원하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d1b6-134">
              <paramref name="sourceOwner" /> or <paramref name="sourceMember" /> is empty, or the relationship is not supported by the service.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetRelationship">
      <MemberSignature Language="C#" Value="protected virtual void SetRelationship (System.ComponentModel.Design.Serialization.MemberRelationship source, System.ComponentModel.Design.Serialization.MemberRelationship relationship);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetRelationship(valuetype System.ComponentModel.Design.Serialization.MemberRelationship source, valuetype System.ComponentModel.Design.Serialization.MemberRelationship relationship) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetRelationship (source As MemberRelationship, relationship As MemberRelationship)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetRelationship(System::ComponentModel::Design::Serialization::MemberRelationship source, System::ComponentModel::Design::Serialization::MemberRelationship relationship);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ComponentModel.Design.Serialization.MemberRelationship" />
        <Parameter Name="relationship" Type="System.ComponentModel.Design.Serialization.MemberRelationship" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="3d1b6-135">소스 관계입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d1b6-135">The source relationship.</span>
          </span>
        </param>
        <param name="relationship">
          <span data-ttu-id="3d1b6-136">소스에 설정할 관계입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d1b6-136">The relationship to set into the source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d1b6-137">소스 개체와 대상 관계 사이의 관계를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d1b6-137">Creates a relationship between the source object and target relationship.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d1b6-138"><xref:System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship%2A> 메서드 관계 매개 변수가 기존 관계를 지웁니다 <xref:System.ComponentModel.Design.Serialization.MemberRelationship.Empty>합니다.</span><span class="sxs-lookup"><span data-stu-id="3d1b6-138">The <xref:System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship%2A> method clears any existing relationship if the relationship parameter is <xref:System.ComponentModel.Design.Serialization.MemberRelationship.Empty>.</span></span> <span data-ttu-id="3d1b6-139">기본 구현은 관계 테이블 않습니다 하지 개체가 활성 상태로 유지 되도록 약한 참조를 사용 하는 사전에 관계를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="3d1b6-139">The default implementation stores relationships in a dictionary using weak references so the relationship table does not keep objects alive.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3d1b6-140">서비스에서 관계를 지원하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d1b6-140">The relationship is not supported by the service.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsRelationship">
      <MemberSignature Language="C#" Value="public abstract bool SupportsRelationship (System.ComponentModel.Design.Serialization.MemberRelationship source, System.ComponentModel.Design.Serialization.MemberRelationship relationship);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SupportsRelationship(valuetype System.ComponentModel.Design.Serialization.MemberRelationship source, valuetype System.ComponentModel.Design.Serialization.MemberRelationship relationship) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SupportsRelationship (source As MemberRelationship, relationship As MemberRelationship) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool SupportsRelationship(System::ComponentModel::Design::Serialization::MemberRelationship source, System::ComponentModel::Design::Serialization::MemberRelationship relationship);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ComponentModel.Design.Serialization.MemberRelationship" />
        <Parameter Name="relationship" Type="System.ComponentModel.Design.Serialization.MemberRelationship" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="3d1b6-141">소스 관계입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d1b6-141">The source relationship.</span>
          </span>
        </param>
        <param name="relationship">
          <span data-ttu-id="3d1b6-142">소스에 설정할 관계입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d1b6-142">The relationship to set into the source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d1b6-143">지정된 관계가 지원되는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d1b6-143">Gets a value indicating whether the given relationship is supported.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d1b6-144">지정된 두 개체 사이의 관계가 지원되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d1b6-144">
              <see langword="true" /> if a relationship between the given two objects is supported; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>