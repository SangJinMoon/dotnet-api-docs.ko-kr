<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MemberRelationshipService.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5378c9fc24b3404ec176cc07044966e22e16ba9c8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">378c9fc24b3404ec176cc07044966e22e16ba9c8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.Serialization.MemberRelationshipService">
          <source>Provides the base class for relating one member to another.</source>
          <target state="translated">멤버를 다른 멤버와 연결하기 위한 기본 클래스를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.MemberRelationshipService">
          <source>Designers serialize themselves to code through an engine that searches through the live property values of objects and generates those values as code.</source>
          <target state="translated">디자이너 자체적으로 직렬화 되 코드를 통해 개체의 경우 라이브 속성 값을 검색 하 고 코드와 해당 값을 생성 하는 엔진입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.MemberRelationshipService">
          <source>So, for example, the text of a button is generated in the following format.</source>
          <target state="translated">따라서 예를 들어 다음과 같은 형식에 있는 단추의 텍스트 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.MemberRelationshipService">
          <source>One of the limitations of this scheme is that it is difficult to retrieve a property from another location.</source>
          <target state="translated">이 체계의 제한 중 하나는 다른 위치에서 속성을 검색 하기가 어렵습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.MemberRelationshipService">
          <source>For example, it is very difficult to emit code in the following format, because the only thing the code generator can rely on is the value in the property.</source>
          <target state="translated">예를 들어 다음과 같은 형식의 코드를 생성 하기 매우 어렵습니다, 그리고 코드 생성기는 유일한 사항은 사용할 수 있기 때문에 속성 값입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.MemberRelationshipService">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.MemberRelationshipService&gt;</ph> simplifies retrieval of a property value from another location.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.MemberRelationshipService&gt;</ph> 다른 위치에서 속성 값의 검색을 간소화 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.MemberRelationshipService">
          <source>A designer can access this service to dictate that one member is assigned the value of another.</source>
          <target state="translated">디자이너를 하나의 해당 멤버의 다른 값이 할당을 받아이 서비스에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.MemberRelationshipService">
          <source>The code generator searches for such relationships when generating code, and if a relationship between two members is found the code generator, it emits code for the relationship rather than searching for the property value.</source>
          <target state="translated">코드 생성기 코드를 생성할 때 이러한 관계를 검색 하 고 속성 값에 대 한 검색 하는 대신 관계에 대 한 코드를 내보냅니다 두 멤버 사이의 관계 코드 생성기, 있으면 경우 키를 누릅니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.MemberRelationshipService">
          <source>Using the previous text assignment as an example, the following code example shows design time code used to establish a relationship.</source>
          <target state="translated">이전 텍스트 할당을 사용 하 여 예를 들어, 다음 코드 예제에서는 디자인 타임 코드 관계를 설정 하는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.MemberRelationshipService">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.MemberRelationshipService" /&gt;</ph> class is <ph id="ph2">&lt;see langword="abstract" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.MemberRelationshipService" /&gt;</ph> 클래스는 <ph id="ph2">&lt;see langword="abstract" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.MemberRelationshipService">
          <source>Implementing a concrete version varies depending on the types of members that are supported.</source>
          <target state="translated">구체적인 버전을 구현 하는 작업은 지원 되는 멤버의 형식에 따라 달라 집니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.MemberRelationshipService">
          <source>For example, relating one event to another might require a different implementation than relating one property to another.</source>
          <target state="translated">예를 들어 하나의 이벤트와 관련 된 다른 하나의 속성 관련와 다르게 구현이 필요할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.MemberRelationshipService">
          <source>Implementing the service requires the following steps:</source>
          <target state="translated">서비스를 구현 하는 다음 단계로 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.MemberRelationshipService">
          <source>Implement <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)" /&gt;</ph> to return <ph id="ph2">&lt;see langword="true" /&gt;</ph> for relationships that you support.</source>
          <target state="translated">구현 <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)" /&gt;</ph> 반환할 <ph id="ph2">&lt;see langword="true" /&gt;</ph> 지 원하는 관계에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.MemberRelationshipService">
          <source>Track changes to the source relationship and assign value changes into the target relationship.</source>
          <target state="translated">원본 관계 및 할당 값에 변경 내용을 대상 관계의 변경 내용을 추적 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.MemberRelationshipService" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.MemberRelationshipService" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.GetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship)">
          <source>The source relationship.</source>
          <target state="translated">소스 관계입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.GetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship)">
          <source>Gets a relationship to the given source relationship.</source>
          <target state="translated">지정된 소스 관계에 관계를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.GetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship)">
          <source>A relationship to <ph id="ph1">&lt;paramref name="source" /&gt;</ph>, or <ph id="ph2">&lt;see cref="F:System.ComponentModel.Design.Serialization.MemberRelationship.Empty" /&gt;</ph> if no relationship exists.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph>에 대한 관계이거나, 관계가 없으면 <ph id="ph2">&lt;see cref="F:System.ComponentModel.Design.Serialization.MemberRelationship.Empty" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.GetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship)">
          <source>The default implementation stores relationships in a dictionary using weak references, so the relationship table does not keep objects alive.</source>
          <target state="translated">기본 구현은 약한 참조를 사용 하 여 관계 테이블 않습니다 하지 개체가 활성 상태로 유지 하는 사전에 관계를 저장 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.Serialization.MemberRelationshipService">
          <source>Establishes a relationship between a source and target object.</source>
          <target state="translated">소스 개체와 대상 개체의 관계를 설정합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.ComponentModel.Design.Serialization.MemberRelationship)">
          <source>The source relationship.</source>
          <target state="translated">소스 관계입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.ComponentModel.Design.Serialization.MemberRelationship)">
          <source>This is the left-hand side of a relationship assignment.</source>
          <target state="translated">관계 할당의 왼쪽 부분입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.ComponentModel.Design.Serialization.MemberRelationship)">
          <source>Establishes a relationship between a source and target object.</source>
          <target state="translated">소스 개체와 대상 개체의 관계를 설정합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.ComponentModel.Design.Serialization.MemberRelationship)">
          <source>The current relationship associated with <ph id="ph1">&lt;paramref name="source" /&gt;</ph>, or <ph id="ph2">&lt;see cref="F:System.ComponentModel.Design.Serialization.MemberRelationship.Empty" /&gt;</ph> if there is no relationship.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph>와 연결된 현재 관계이거나, 관계가 없으면 <ph id="ph2">&lt;see cref="F:System.ComponentModel.Design.Serialization.MemberRelationship.Empty" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.ComponentModel.Design.Serialization.MemberRelationship)">
          <source>If <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.MemberRelationship.Empty&gt;</ph> is assigned to the source, any existing relationship is removed.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.MemberRelationship.Empty&gt;</ph> 할당 원본으로 기존 관계 제거 됩니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.ComponentModel.Design.Serialization.MemberRelationship)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.ComponentModel.Design.Serialization.MemberRelationship)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is empty, or the relationship is not supported by the service.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph>가 비어 있거나 서비스에서 관계를 지원하지 않는 경우</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.Object,System.ComponentModel.MemberDescriptor)">
          <source>The owner of a source relationship.</source>
          <target state="translated">소스 관계의 소유자입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.Object,System.ComponentModel.MemberDescriptor)">
          <source>The member of a source relationship.</source>
          <target state="translated">소스 관계의 멤버입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.Object,System.ComponentModel.MemberDescriptor)">
          <source>Establishes a relationship between a source and target object.</source>
          <target state="translated">소스 개체와 대상 개체의 관계를 설정합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.Object,System.ComponentModel.MemberDescriptor)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.MemberRelationship" /&gt;</ph> structure encapsulating the relationship between a source and target object, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there is no relationship.</source>
          <target state="translated">소스 개체와 대상 개체의 관계를 캡슐화하는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.MemberRelationship" /&gt;</ph> 구조체이거나, 관계가 없으면 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.Object,System.ComponentModel.MemberDescriptor)">
          <source><ph id="ph1">&lt;paramref name="sourceOwner" /&gt;</ph> or <ph id="ph2">&lt;paramref name="sourceMember" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceOwner" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="sourceMember" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.Object,System.ComponentModel.MemberDescriptor)">
          <source><ph id="ph1">&lt;paramref name="sourceOwner" /&gt;</ph> or <ph id="ph2">&lt;paramref name="sourceMember" /&gt;</ph> is empty, or the relationship is not supported by the service.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceOwner" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="sourceMember" /&gt;</ph>가 비어 있거나 서비스에서 관계를 지원하지 않는 경우</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)">
          <source>The source relationship.</source>
          <target state="translated">소스 관계입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)">
          <source>The relationship to set into the source.</source>
          <target state="translated">소스에 설정할 관계입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)">
          <source>Creates a relationship between the source object and target relationship.</source>
          <target state="translated">소스 개체와 대상 관계 사이의 관계를 만듭니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship%2A&gt;</ph> method clears any existing relationship if the relationship parameter is <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.MemberRelationship.Empty&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship%2A&gt;</ph> 메서드 관계 매개 변수가 기존 관계를 지웁니다 <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.MemberRelationship.Empty&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)">
          <source>The default implementation stores relationships in a dictionary using weak references so the relationship table does not keep objects alive.</source>
          <target state="translated">기본 구현은 관계 테이블 않습니다 하지 개체가 활성 상태로 유지 되도록 약한 참조를 사용 하는 사전에 관계를 저장 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)">
          <source>The relationship is not supported by the service.</source>
          <target state="translated">서비스에서 관계를 지원하지 않는 경우</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)">
          <source>The source relationship.</source>
          <target state="translated">소스 관계입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)">
          <source>The relationship to set into the source.</source>
          <target state="translated">소스에 설정할 관계입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)">
          <source>Gets a value indicating whether the given relationship is supported.</source>
          <target state="translated">지정된 관계가 지원되는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a relationship between the given two objects is supported; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">지정된 두 개체 사이의 관계가 지원되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>