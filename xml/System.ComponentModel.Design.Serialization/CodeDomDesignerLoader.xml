<Type Name="CodeDomDesignerLoader" FullName="System.ComponentModel.Design.Serialization.CodeDomDesignerLoader">
  <TypeSignature Language="C#" Value="public abstract class CodeDomDesignerLoader : System.ComponentModel.Design.Serialization.BasicDesignerLoader, System.ComponentModel.Design.Serialization.IDesignerSerializationService, System.ComponentModel.Design.Serialization.INameCreationService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CodeDomDesignerLoader extends System.ComponentModel.Design.Serialization.BasicDesignerLoader implements class System.ComponentModel.Design.Serialization.IDesignerSerializationService, class System.ComponentModel.Design.Serialization.INameCreationService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CodeDomDesignerLoader&#xA;Inherits BasicDesignerLoader&#xA;Implements IDesignerSerializationService, INameCreationService" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeDomDesignerLoader abstract : System::ComponentModel::Design::Serialization::BasicDesignerLoader, System::ComponentModel::Design::Serialization::IDesignerSerializationService, System::ComponentModel::Design::Serialization::INameCreationService" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.Serialization.BasicDesignerLoader</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.Serialization.IDesignerSerializationService</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.Serialization.INameCreationService</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="dd8e6-101">CodeDOM 기반 디자이너 로더를 구현하기 위한 기본 클래스를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-101">Provides the base class for implementing a CodeDOM-based designer loader.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd8e6-102"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> 전체 디자이너 로더를 제공 하는 추상 클래스를 기반으로 코드 문서 개체 모델 (CodeDOM) 합니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-102"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> is an abstract class that provides a full designer loader based on the Code Document Object Model (CodeDOM).</span></span> <span data-ttu-id="dd8e6-103">CodeDOM 파서 및 생성자와 형식 확인 서비스를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-103">You provide the CodeDOM parser and generator, and a type resolution service.</span></span>  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="dd8e6-104">시스템 리소스에 대 한 전체 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-104">for full access to system resources.</span></span> <span data-ttu-id="dd8e6-105">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-105">Demand values: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="dd8e6-106">연결 된 상태:</span><span class="sxs-lookup"><span data-stu-id="dd8e6-106">Associated state:</span></span></permission>
    <altmember cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
    <altmember cref="N:System.CodeDom" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CodeDomDesignerLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CodeDomDesignerLoader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dd8e6-107"><see cref="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-107">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeDomProvider">
      <MemberSignature Language="C#" Value="protected abstract System.CodeDom.Compiler.CodeDomProvider CodeDomProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.Compiler.CodeDomProvider CodeDomProvider" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride ReadOnly Property CodeDomProvider As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract property System::CodeDom::Compiler::CodeDomProvider ^ CodeDomProvider { System::CodeDom::Compiler::CodeDomProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dd8e6-108">이 디자이너 로더가 사용할 <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" />를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-108">Gets the <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> this designer loader will use.</span></span></summary>
        <value><span data-ttu-id="dd8e6-109">이 디자이너 로더가 사용할 <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-109">The <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> this designer loader will use</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd8e6-110">디자이너 로더가 구문 분석 하거나에서 반환 된 코드를 생성 하지 않습니다 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider%2A>, 얻으려고 공급자를 사용 하기는 하지만 <xref:System.CodeDom.Compiler.ICodeGenerator> 이름 만들기 서비스에서 식별자의 유효성을 검사 하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-110">The designer loader does not parse or generate code from the returned <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider%2A>, but it does use the provider to obtain an <xref:System.CodeDom.Compiler.ICodeGenerator> that it can use to validate identifiers in the name-creation service.</span></span> <span data-ttu-id="dd8e6-111">디자이너 로더는 또한 확인 된 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider%2A> 구현 되었는지 확인 하는 <xref:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-111">The designer loader will also check the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider%2A> to see if it implements the <xref:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload> interface.</span></span> <span data-ttu-id="dd8e6-112">구문 분석 또는 코드 생성에 대 한 자세한 내용은 참조는 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse%2A> 및 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-112">For more information on parsing or generating code, see the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse%2A> and <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dd8e6-113"><see cref="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" /> 클래스에서 사용하는 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-113">Releases the resources used by the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd8e6-114"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A> 메서드 제거 하 여 추가 하는 서비스는 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Initialize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-114">The <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A> method removes services added by the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="dd8e6-115"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A> 사용을 마치면 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-115">Call <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader>.</span></span> <span data-ttu-id="dd8e6-116"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A> 메서드를 사용하면 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader>를 사용할 수 없게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-116">The <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A> method leaves the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> in an unusable state.</span></span> <span data-ttu-id="dd8e6-117">호출한 후 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A>에 대 한 모든 참조를 해제 해야는 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> 가비지 수집기는 메모리를 회수할 수 있도록 하는 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> 차지한 합니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-117">After calling <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> was occupying.</span></span> <span data-ttu-id="dd8e6-118">자세한 내용은 참조 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Dispose 메서드를 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-118">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dd8e6-119"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A>에 대한 마지막 참조를 해제하기 전에 반드시 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader>를 호출하십시오.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-119">Always call <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader>.</span></span> <span data-ttu-id="dd8e6-120">이렇게 하지 않으면 가비지 수집기가 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> 개체의 `Finalize` 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-120">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dd8e6-121">서비스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-121">Initializes services.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd8e6-122">다음 표에 대체 가능한 되는 서비스는 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> 서비스 컨테이너에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-122">The following table describes the replaceable services that the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> adds to the service container.</span></span>  
  
|<span data-ttu-id="dd8e6-123">용어</span><span class="sxs-lookup"><span data-stu-id="dd8e6-123">Term</span></span>|<span data-ttu-id="dd8e6-124">정의</span><span class="sxs-lookup"><span data-stu-id="dd8e6-124">Definition</span></span>|  
|----------|----------------|  
|<xref:System.ComponentModel.Design.Serialization.INameCreationService>|<span data-ttu-id="dd8e6-125">개체의 이름을 만드는 하는 의미 체계를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-125">Provides semantics for creating names of objects.</span></span> <span data-ttu-id="dd8e6-126">서비스는 CodeDOM 공급자의 사용 <xref:System.CodeDom.Compiler.ICodeGenerator> 인터페이스는 언어에 대 한 유효한 식별자 이름을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-126">The service uses the CodeDOM provider’s <xref:System.CodeDom.Compiler.ICodeGenerator> interface to create names that are valid identifiers for the language.</span></span> <span data-ttu-id="dd8e6-127">또한 이름 작성 서비스 빈 이름을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-127">In addition, the name creation service supports empty names.</span></span> <span data-ttu-id="dd8e6-128">빈 이름은 직렬화 하는 동안 임시 지역 변수로 해석 됩니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-128">Empty names should be interpreted as temporary local variables during serialization.</span></span>|  
|<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService>|<span data-ttu-id="dd8e6-129">다른 개체가 구성 요소 그룹을 이진 개체로 직렬화 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-129">Allows other objects to serialize a group of components into a binary object.</span></span> <span data-ttu-id="dd8e6-130">이 서비스는 복사 및 붙여넣기 또는 실행 취소, 다시 실행 같은 기능에 주로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-130">This service is most often used by features such as copy and paste or undo and redo.</span></span> <span data-ttu-id="dd8e6-131"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> 클래스 개체에 대 한 CodeDOM 트리를 만드는 방법에 따라 디자이너 serialization 서비스를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-131">The <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> class provides a designer serialization service that is based on creating CodeDOM trees for objects.</span></span>|  
|<xref:System.ComponentModel.Design.Serialization.ComponentSerializationService>|<span data-ttu-id="dd8e6-132">이 서비스를 대체 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService> 구성 요소 이진 개체를 serialize 하는 방법으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-132">This service replaces <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService> as a means to serialize components to a binary object.</span></span>|  
  
 <span data-ttu-id="dd8e6-133">대체 가능 및 대체 가능한 비 서비스에 대 한 세부 정보를 참조 하십시오. <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>합니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-133">For details on replaceable and non-replaceable services, see <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dd8e6-134"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />가 초기화되지 않았거나, 디자이너 로더가 CodeDom serialization에 필요한 형식 확인 서비스를 제공하지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="dd8e6-134">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized, or the designer loader did not supply a type resolution service, which is required for CodeDom serialization.</span></span></exception>
        <altmember cref="T:System.CodeDom.Compiler.ICodeGenerator" />
        <altmember cref="T:System.ComponentModel.Design.ITypeResolutionService" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationService" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.INameCreationService" />
      </Docs>
    </Member>
    <Member MemberName="IsReloadNeeded">
      <MemberSignature Language="C#" Value="protected override bool IsReloadNeeded ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsReloadNeeded() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.IsReloadNeeded" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsReloadNeeded () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsReloadNeeded();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dd8e6-135">다시 로드해야 할지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-135">Returns a value indicating whether a reload is required.</span></span></summary>
        <returns>
          <span data-ttu-id="dd8e6-136"><see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" />에서 다시 로드해야 한다고 결정하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-136"><see langword="true" /> if the <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> decides a reload is required; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd8e6-137"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.IsReloadNeeded%2A> 메서드 있는지 확인은 <xref:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload> 에 대 한 인터페이스는 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-137">The <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.IsReloadNeeded%2A> method checks for the presence of the <xref:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload> interface on the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider%2A>.</span></span> <span data-ttu-id="dd8e6-138">공급자는 CodeDOM 트리를 다시 구문 분석 하 고 결과 구문 분석 트리를 전달 된 <xref:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload.ShouldReloadDesigner%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-138">The provider will reparse the CodeDOM tree and pass the resulting parse tree to the <xref:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload.ShouldReloadDesigner%2A> method.</span></span> <span data-ttu-id="dd8e6-139">이 메서드가 반환 하는 경우 `false`, 디자이너가 다시 로드 되지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-139">If this method returns `false`, the designer will not be reloaded.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="dd8e6-140">해당 언어에서 이 파일에 대한 코드 파서를 제공하지 않아 이 파일 형식이 디자이너를 지원하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="dd8e6-140">The language did not provide a code parser for this file; this file type may not support a designer.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dd8e6-141">클래스를 디자인할 수는 있지만 클래스가 이 파일의 첫째 클래스가 아니거나, 디자인할 수 있는 클래스가 없으므로 이 파일에 대해 디자이너를 표시할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="dd8e6-141">The class can be designed, but it is not the first class in the file, or the designer could not be shown for this file because none of the classes within it can be designed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnBeginLoad">
      <MemberSignature Language="C#" Value="protected override void OnBeginLoad ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBeginLoad() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginLoad" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBeginLoad ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBeginLoad();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dd8e6-142">로드가 곧 시작된다고 디자이너 로더에 알립니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-142">Notifies the designer loader that loading is about to begin.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd8e6-143">대 한 자세한 내용은 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginLoad%2A> 메서드를 참조 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-143">For more information on the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginLoad%2A> method, see <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginUnload">
      <MemberSignature Language="C#" Value="protected override void OnBeginUnload ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBeginUnload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginUnload" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBeginUnload ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBeginUnload();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dd8e6-144">언로드가 곧 시작된다고 디자이너 로더에 알립니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-144">Notifies the designer loader that unloading is about to begin.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd8e6-145">대 한 자세한 내용은 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginUnload%2A> 메서드를 참조 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-145">For more information on the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginUnload%2A> method, see <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnComponentRename">
      <MemberSignature Language="C#" Value="protected virtual void OnComponentRename (object component, string oldName, string newName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnComponentRename(object component, string oldName, string newName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnComponentRename(System.Object,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnComponentRename (component As Object, oldName As String, newName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnComponentRename(System::Object ^ component, System::String ^ oldName, System::String ^ newName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="oldName" Type="System.String" />
        <Parameter Name="newName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="dd8e6-146">이름을 바꿀 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-146">The component to rename.</span></span></param>
        <param name="oldName"><span data-ttu-id="dd8e6-147">구성 요소의 원래 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-147">The original name of the component.</span></span></param>
        <param name="newName"><span data-ttu-id="dd8e6-148">구성 요소의 새 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-148">The new name of the component.</span></span></param>
        <summary><span data-ttu-id="dd8e6-149"><see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-149">Raises the <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndLoad">
      <MemberSignature Language="C#" Value="protected override void OnEndLoad (bool successful, System.Collections.ICollection errors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEndLoad(bool successful, class System.Collections.ICollection errors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEndLoad (successful As Boolean, errors As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEndLoad(bool successful, System::Collections::ICollection ^ errors);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="successful" Type="System.Boolean" />
        <Parameter Name="errors" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="successful">
          <span data-ttu-id="dd8e6-150">로드가 성공적으로 완료되었음을 나타내려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-150"><see langword="true" /> to indicate that the load completed successfully; otherwise, <see langword="false" />.</span></span></param>
        <param name="errors"><span data-ttu-id="dd8e6-151">오류로 보고된 개체(대개, 예외)의 <see cref="T:System.Collections.ICollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-151">An <see cref="T:System.Collections.ICollection" /> of objects (usually exceptions) that were reported as errors.</span></span></param>
        <summary><span data-ttu-id="dd8e6-152">로드가 완료되었음을 디자이너 로더에 알립니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-152">Notifies the designer loader that loading is complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd8e6-153">대 한 자세한 내용은 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnEndLoad%2A> 메서드를 참조 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-153">For more information on the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnEndLoad%2A> method, see <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="protected abstract System.CodeDom.CodeCompileUnit Parse ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.CodeDom.CodeCompileUnit Parse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function Parse () As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::CodeDom::CodeCompileUnit ^ Parse();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dd8e6-154">텍스트나 기타 영구 저장소를 구문 분석하고 <see cref="T:System.CodeDom.CodeCompileUnit" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-154">Parses the text or other persistent storage and returns a <see cref="T:System.CodeDom.CodeCompileUnit" />.</span></span></summary>
        <returns><span data-ttu-id="dd8e6-155">구문 분석 작업으로 얻어진 <see cref="T:System.CodeDom.CodeCompileUnit" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-155">A <see cref="T:System.CodeDom.CodeCompileUnit" /> resulting from a parse operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd8e6-156"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse%2A> 때이 메서드가 호출 되는 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> 를 소스 코드를 구문 분석 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-156">The <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse%2A> method is called when the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> needs to parse the source code.</span></span> <span data-ttu-id="dd8e6-157">소스 코드 위치 및 형식 파생 클래스에서 지정 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-157">The source code location and format must be specified by deriving classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.CodeCompileUnit" />
      </Docs>
    </Member>
    <Member MemberName="PerformFlush">
      <MemberSignature Language="C#" Value="protected override void PerformFlush (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PerformFlush(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PerformFlush (manager As IDesignerSerializationManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PerformFlush(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="dd8e6-158">Serializer를 요청할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-158">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> from which to request the serializer.</span></span></param>
        <summary><span data-ttu-id="dd8e6-159">디자이너 루트 구성 요소의 serialization을 요청합니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-159">Requests serialization of the root component of the designer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd8e6-160"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush%2A> 메서드는 루트를 가져옵니다 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> 디자이너의 루트 구성 요소에 대 한 구성 요소를 serialize 하는 serializer를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-160">The <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush%2A> method obtains the root <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> for the root component of the designer and invokes the serializer to serialize the component.</span></span> <span data-ttu-id="dd8e6-161">이 작업의 결과가 <xref:System.CodeDom.CodeTypeDeclaration>, 다음 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush%2A> 통합는 <xref:System.CodeDom.CodeTypeDeclaration> 을 기존 CodeDOM 트리 합니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-161">If the result of this operation is a <xref:System.CodeDom.CodeTypeDeclaration>, then <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush%2A> integrates the <xref:System.CodeDom.CodeTypeDeclaration> with the existing CodeDOM tree.</span></span> <span data-ttu-id="dd8e6-162">결과 멤버 및 문이 대체 일치 하는 원래 CodeDOM 트리입니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-162">The result is the original CodeDOM tree with matching members and statements replaced.</span></span> <span data-ttu-id="dd8e6-163">마지막으로, <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush%2A> 는 추상 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A> 이 CodeDOM 트리를 저장 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-163">Finally, <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush%2A> calls the abstract <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A> method to save this CodeDOM tree.</span></span>  
  
 <span data-ttu-id="dd8e6-164">루트 디자이너 구성 요소 serialization 경우에 발생 하지 않습니다는 <xref:System.CodeDom.CodeTypeDeclaration>, 다음 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush%2A> 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-164">If the serialization of the root designer component does not result in a <xref:System.CodeDom.CodeTypeDeclaration>, then <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush%2A> does nothing further.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="dd8e6-165">것은 신뢰할 수 있는 소스에서 발생 하는 CodeDOM는 되도록 호출자의 책임입니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-165">It is the responsibility of the caller to ensure that a CodeDOM originates from a trusted source.</span></span> <span data-ttu-id="dd8e6-166">신뢰할 수 없는 파티에서 CodeDOM 개체를 수락 하면 악의적인 코드를 실행 하려면 해당 파티를 허용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-166">Accepting a CodeDOM object from an untrusted party could allow that party to run malicious code.</span></span> <span data-ttu-id="dd8e6-167">파일에 CodeDOM 플러시, 프레임 워크 CodeDOM 개체 및 개체를 제공 된 개체의 직렬화 된 콘텐츠 표시 되는 코드를 실행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-167">When flushing a CodeDOM into a file, the framework will run code represented by the CodeDOM object and the serialized content of the object as provided.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="dd8e6-168">해당 언어에서 이 파일에 대한 코드 파서를 제공하지 않아 이 파일 형식이 디자이너를 지원하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="dd8e6-168">The language did not provide a code parser for this file; this file type may not support a designer.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dd8e6-169">클래스를 디자인할 수는 있지만 클래스가 이 파일의 첫째 클래스가 아니거나, 디자인할 수 있는 클래스가 없으므로 이 파일에 대해 디자이너를 표시할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="dd8e6-169">The class can be designed, but it is not the first class in the file, or the designer could not be shown for this file because none of the classes within it can be designed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PerformLoad">
      <MemberSignature Language="C#" Value="protected override void PerformLoad (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PerformLoad(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PerformLoad (manager As IDesignerSerializationManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PerformLoad(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="dd8e6-170">Serializer를 요청할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-170">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> from which to request the serializer.</span></span></param>
        <summary><span data-ttu-id="dd8e6-171">CodeDOM 공급자가 제공한 코드를 구문 분석합니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-171">Parses code from a CodeDOM provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd8e6-172"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad%2A> 메서드를 가져옵니다는 <xref:System.CodeDom.Compiler.ICodeParser> CodeDOM 공급자에서 코드를 구문 분석 합니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-172">The <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad%2A> method obtains an <xref:System.CodeDom.Compiler.ICodeParser> from the CodeDOM provider and parses the code.</span></span> <span data-ttu-id="dd8e6-173"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad%2A> 파일에서 첫 번째 클래스를 찾고, 루트 가져옵니다 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> 데이터 형식에 대 한 다음 데이터 형식을 deserialize 하는 serializer를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-173"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad%2A> locates the first class in the file, obtains a root <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> for the data type, and then invokes the serializer to deserialize the data type.</span></span> <span data-ttu-id="dd8e6-174"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad%2A> 이 프로세스에서 모든 필수 구성 요소가 만든다고 가정은 <xref:System.ComponentModel.IContainer> 의 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-174"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad%2A> assumes that this process will create all necessary components in the <xref:System.ComponentModel.IContainer> of the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost%2A> property.</span></span> <span data-ttu-id="dd8e6-175">마지막으로, <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad%2A> 호출은 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName%2A> CodeDOM serializer에 전달 된 형식의 정규화 된 이름 사용 하 여 메서드.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-175">Finally, <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad%2A> calls the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName%2A> method with the fully qualified name of the type it passed to the CodeDOM serializer.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="dd8e6-176">것은 신뢰할 수 있는 소스에서 발생 하는 CodeDOM는 되도록 호출자의 책임입니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-176">It is the responsibility of the caller to ensure that a CodeDOM originates from a trusted source.</span></span> <span data-ttu-id="dd8e6-177">신뢰할 수 없는 파티에서 CodeDOM 개체를 수락 하면 악의적인 코드를 실행 하려면 해당 파티를 허용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-177">Accepting a CodeDOM object from an untrusted party could allow that party to run malicious code.</span></span> <span data-ttu-id="dd8e6-178">디자인 화면에는 CodeDOM을 로드할 때 프레임 워크에 명시 된 개체의 직렬화 된 콘텐츠 및 CodeDOM 개체에서 표시 되는 코드를 실행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-178">When loading a CodeDOM into the design surface, the framework will run code represented by the CodeDOM object and the serialized content of the object as provided.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="dd8e6-179">해당 언어에서 이 파일에 대한 코드 파서를 제공하지 않아 이 파일 형식이 디자이너를 지원하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="dd8e6-179">The language did not provide a code parser for this file; this file type may not support a designer.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dd8e6-180">클래스를 디자인할 수는 있지만 클래스가 이 파일의 첫째 클래스가 아니거나, 디자인할 수 있는 클래스가 없으므로 이 파일에 대해 디자이너를 표시할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="dd8e6-180">The class can be designed, but it is not the first class in the file, or the designer could not be shown for this file because none of the classes within it can be designed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationService.Deserialize">
      <MemberSignature Language="C#" Value="System.Collections.ICollection IDesignerSerializationService.Deserialize (object serializationData);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.ICollection System.ComponentModel.Design.Serialization.IDesignerSerializationService.Deserialize(object serializationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerSerializationService#Deserialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Deserialize (serializationData As Object) As ICollection Implements IDesignerSerializationService.Deserialize" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::ICollection ^ System.ComponentModel.Design.Serialization.IDesignerSerializationService.Deserialize(System::Object ^ serializationData) = System::ComponentModel::Design::Serialization::IDesignerSerializationService::Deserialize;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationData"><span data-ttu-id="dd8e6-181">serialize된 데이터로 구성된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-181">An object consisting of serialized data.</span></span></param>
        <summary><span data-ttu-id="dd8e6-182">지정된 serialization 데이터 개체를 deserialize하고 해당 데이터가 표시한 개체의 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-182">Deserializes the specified serialization data object and returns a collection of objects represented by that data.</span></span></summary>
        <returns><span data-ttu-id="dd8e6-183"><paramref name="serializationData" />로 나타내는 개체의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-183">A collection of objects represented by <paramref name="serializationData" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dd8e6-184"><paramref name="serializationData" />가 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="dd8e6-184"><paramref name="serializationData" /> is not a <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize">
      <MemberSignature Language="C#" Value="object IDesignerSerializationService.Serialize (System.Collections.ICollection objects);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize(class System.Collections.ICollection objects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerSerializationService#Serialize(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Function Serialize (objects As ICollection) As Object Implements IDesignerSerializationService.Serialize" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize(System::Collections::ICollection ^ objects) = System::ComponentModel::Design::Serialization::IDesignerSerializationService::Serialize;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objects" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="objects"><span data-ttu-id="dd8e6-185">serialize할 개체의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-185">A collection of objects to serialize.</span></span></param>
        <summary><span data-ttu-id="dd8e6-186">지정된 개체의 컬렉션을 serialize하여 serialization 데이터 개체에 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-186">Serializes the specified collection of objects and stores them in a serialization data object.</span></span></summary>
        <returns><span data-ttu-id="dd8e6-187">지정된 개체 컬렉션의 serialize된 상태가 들어 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-187">An object that contains the serialized state of the specified collection of objects.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dd8e6-188"><see cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" />를 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="dd8e6-188">The <see cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" /> was not found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.INameCreationService.CreateName">
      <MemberSignature Language="C#" Value="string INameCreationService.CreateName (System.ComponentModel.IContainer container, Type dataType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ComponentModel.Design.Serialization.INameCreationService.CreateName(class System.ComponentModel.IContainer container, class System.Type dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#CreateName(System.ComponentModel.IContainer,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Function CreateName (container As IContainer, dataType As Type) As String Implements INameCreationService.CreateName" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.ComponentModel.Design.Serialization.INameCreationService.CreateName(System::ComponentModel::IContainer ^ container, Type ^ dataType) = System::ComponentModel::Design::Serialization::INameCreationService::CreateName;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
        <Parameter Name="dataType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="container"><span data-ttu-id="dd8e6-189">새 개체가 추가되는 컨테이너입니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-189">The container where the new object is added.</span></span></param>
        <param name="dataType"><span data-ttu-id="dd8e6-190">이름을 받을 개체의 데이터 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-190">The data type of the object that receives the name.</span></span></param>
        <summary><span data-ttu-id="dd8e6-191">지정된 컨테이터의 모든 구성 요소에 고유한 새 이름을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-191">Creates a new name that is unique to all components in the specified container.</span></span></summary>
        <returns><span data-ttu-id="dd8e6-192">데이터 형식에 대한 고유 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-192">A unique name for the data type.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dd8e6-193"><paramref name="dataType" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="dd8e6-193"><paramref name="dataType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.INameCreationService.IsValidName">
      <MemberSignature Language="C#" Value="bool INameCreationService.IsValidName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.ComponentModel.Design.Serialization.INameCreationService.IsValidName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#IsValidName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function IsValidName (name As String) As Boolean Implements INameCreationService.IsValidName" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.ComponentModel.Design.Serialization.INameCreationService.IsValidName(System::String ^ name) = System::ComponentModel::Design::Serialization::INameCreationService::IsValidName;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="dd8e6-194">유효성을 검사할 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-194">The name to validate.</span></span></param>
        <summary><span data-ttu-id="dd8e6-195">지정된 이름이 유효한지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-195">Gets a value indicating whether the specified name is valid.</span></span></summary>
        <returns>
          <span data-ttu-id="dd8e6-196">유효한 이름이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-196"><see langword="true" /> if the name is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dd8e6-197"><paramref name="name" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="dd8e6-197"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.INameCreationService.ValidateName">
      <MemberSignature Language="C#" Value="void INameCreationService.ValidateName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.INameCreationService.ValidateName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#ValidateName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub ValidateName (name As String) Implements INameCreationService.ValidateName" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.INameCreationService.ValidateName(System::String ^ name) = System::ComponentModel::Design::Serialization::INameCreationService::ValidateName;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="dd8e6-198">유효성을 검사할 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-198">The name to validate.</span></span></param>
        <summary><span data-ttu-id="dd8e6-199">지정된 이름이 유효한지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-199">Gets a value indicating whether the specified name is valid.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dd8e6-200"><paramref name="name" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="dd8e6-200"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dd8e6-201"><paramref name="name" />이 올바른 식별자가 아니거나, 같은 이름을 가진 구성 요소가 이미 있는 경우</span><span class="sxs-lookup"><span data-stu-id="dd8e6-201"><paramref name="name" /> is not a valid identifier, or there is already a component with the same name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TypeResolutionService">
      <MemberSignature Language="C#" Value="protected abstract System.ComponentModel.Design.ITypeResolutionService TypeResolutionService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.ITypeResolutionService TypeResolutionService" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.TypeResolutionService" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride ReadOnly Property TypeResolutionService As ITypeResolutionService" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract property System::ComponentModel::Design::ITypeResolutionService ^ TypeResolutionService { System::ComponentModel::Design::ITypeResolutionService ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ITypeResolutionService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dd8e6-202">이 디자이너 로더에 사용할 형식 확인 서비스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-202">Gets the type resolution service to be used with this designer loader.</span></span></summary>
        <value><span data-ttu-id="dd8e6-203">형식을 확인할 때 CodeDOM serializer가 사용할 <see cref="T:System.ComponentModel.Design.ITypeResolutionService" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-203">An <see cref="T:System.ComponentModel.Design.ITypeResolutionService" /> that the CodeDOM serializers will use when resolving types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd8e6-204"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> 이 자동으로 추가 <xref:System.ComponentModel.Design.ITypeResolutionService> 서비스 컨테이너에 때는 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Initialize%2A> 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-204">The <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> automatically adds this <xref:System.ComponentModel.Design.ITypeResolutionService> to the service container when the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Initialize%2A> method is invoked.</span></span> <span data-ttu-id="dd8e6-205">형식 확인 서비스 다양 한 시나리오의 경우 선택 사항 이지만, 필요할 때 코드 해석에 소스 코드 형식이 때문에 이름, 있지만 어셈블리 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-205">While the type resolution service is optional in many scenarios, it is required for code interpretation because source code contains type names, but no assembly references.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.ITypeResolutionService" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="protected abstract void Write (System.CodeDom.CodeCompileUnit unit);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Write(class System.CodeDom.CodeCompileUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write(System.CodeDom.CodeCompileUnit)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub Write (unit As CodeCompileUnit)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void Write(System::CodeDom::CodeCompileUnit ^ unit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="System.CodeDom.CodeCompileUnit" />
      </Parameters>
      <Docs>
        <param name="unit"><span data-ttu-id="dd8e6-206">보관할 <see cref="T:System.CodeDom.CodeCompileUnit" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-206">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to be persisted.</span></span></param>
        <summary><span data-ttu-id="dd8e6-207">영구 저장소에 컴파일 단위 변경 사항을 기록합니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-207">Writes compile-unit changes to persistent storage.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd8e6-208"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A> 메서드 저장 한 <xref:System.CodeDom.CodeCompileUnit> 영구 저장소에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-208">The <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A> method saves a <xref:System.CodeDom.CodeCompileUnit> to persistent storage.</span></span> <span data-ttu-id="dd8e6-209">파생 클래스는 호출 하는 데는 <xref:System.CodeDom.Compiler.ICodeGenerator> 코드를 저장 하려면 적절 한 텍스트 기록기입니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-209">The deriving class is responsible for invoking the <xref:System.CodeDom.Compiler.ICodeGenerator> on the appropriate text writer to save the code.</span></span> <span data-ttu-id="dd8e6-210"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> CodeDOM 개체에 전달 되는 사용 하면 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A> 에서 검색 된 개체의 동일한 인스턴스인 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse%2A>, serialization 프로세스에는 코드를 변경 해야 하는 경우에서를 제외 하 고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-210">The <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> ensures that the CodeDOM objects that are passed to <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A> are the same instances of objects that were retrieved from <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse%2A>, except in cases where the serialization process had to make changes to the code.</span></span> <span data-ttu-id="dd8e6-211">이렇게 하면에서 추가 데이터를 저장 하는 최적화 된 디자이너 로더는 <xref:System.CodeDom.CodeObject.UserData%2A> 코드 요소의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-211">This allows an optimized designer loader to store additional data in the <xref:System.CodeDom.CodeObject.UserData%2A> property of code elements.</span></span> <span data-ttu-id="dd8e6-212">이 데이터를 하는 동안 사용할 수는 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A> 메서드는 serialization 프로세스에서 대체 되지 않은 모든 요소에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="dd8e6-212">This data will be available during the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A> method for any elements that were not replaced by the serialization process.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.CodeCompileUnit" />
      </Docs>
    </Member>
  </Members>
</Type>