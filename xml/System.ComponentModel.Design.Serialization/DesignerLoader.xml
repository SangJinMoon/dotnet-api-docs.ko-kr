<Type Name="DesignerLoader" FullName="System.ComponentModel.Design.Serialization.DesignerLoader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1ceac61034c2821d36ae8f0792cf3b40e2e98ee3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30368477" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DesignerLoader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DesignerLoader extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.DesignerLoader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DesignerLoader" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignerLoader abstract" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="663f9-101">사용자 지정 디자이너 로더를 구현하는데 사용할 수 있는 기본 디자이너 로더 인터페이스를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="663f9-101">Provides a basic designer loader interface that can be used to implement a custom designer loader.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663f9-102"><xref:System.ComponentModel.Design.Serialization.DesignerLoader> 디자이너 및 디자이너 구성 요소 사용자 지정 로딩을 지원 하기 위해 구현할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="663f9-102"><xref:System.ComponentModel.Design.Serialization.DesignerLoader> can be implemented to support custom loading of a designer and designer components.</span></span> <span data-ttu-id="663f9-103">또한 디자이너 로더는 후 문서 로딩 시 로더가 사용한 저장소에 다시 열려 있는 문서에 변경 내용을 기록 합니다는 <xref:System.ComponentModel.Design.Serialization.DesignerLoader.Flush%2A> 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="663f9-103">A designer loader is also responsible for writing changes to an open document back to the storage the loader used when loading the document after the <xref:System.ComponentModel.Design.Serialization.DesignerLoader.Flush%2A> method is called.</span></span>  
  
 <span data-ttu-id="663f9-104">기본적으로 Visual Studio 개발 환경 만듭니다 다양 한 자체 <xref:System.ComponentModel.Design.Serialization.DesignerLoader> 기본 디자이너 프로젝트를 로드할 수 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="663f9-104">By default, the Visual Studio development environment creates its own variety of <xref:System.ComponentModel.Design.Serialization.DesignerLoader> that can load basic designer projects.</span></span> <span data-ttu-id="663f9-105">사용자 지정 디자이너 로더를 만들려면에서 상속 하며 추상 구현 <xref:System.ComponentModel.Design.Serialization.DesignerLoader> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="663f9-105">To create a custom designer loader, you must inherit from and implement the abstract <xref:System.ComponentModel.Design.Serialization.DesignerLoader> class.</span></span> <span data-ttu-id="663f9-106">직접 인스턴스화할 수 없으므로 <xref:System.ComponentModel.Design.Serialization.DesignerLoader>,이 공용 생성자가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="663f9-106">You cannot directly instantiate <xref:System.ComponentModel.Design.Serialization.DesignerLoader>, as it has no public constructor.</span></span>  
  
 <span data-ttu-id="663f9-107">때 <xref:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad%2A> 은 호출 디자이너 로더 디자인 문서를 로드, 사용해는 디자이너 화면 표시는 <xref:System.ComponentModel.Design.IDesignerHost> 인터페이스 및 호출 <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A> 에 <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost> 완료 한 후에 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="663f9-107">When <xref:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad%2A> is invoked, the designer loader loads the design document, displays the designer surface using the <xref:System.ComponentModel.Design.IDesignerHost> interface, and calls <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A> on the <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost> interface when done.</span></span> <span data-ttu-id="663f9-108"><xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost> 구현은 일반적으로 구현 하는 동일한 클래스 <xref:System.ComponentModel.Design.IDesignerHost>합니다.</span><span class="sxs-lookup"><span data-stu-id="663f9-108">The <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost> implementation is usually the same class that implements <xref:System.ComponentModel.Design.IDesignerHost>.</span></span>  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet">
      <span data-ttu-id="663f9-109">시스템 리소스에 대 한 전체 액세스 합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="663f9-109">for full access to system resources.</span>
      </span>
      <span data-ttu-id="663f9-110">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="663f9-110">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
      </span>
      <span data-ttu-id="663f9-111">연결 된 상태:</span>
      <span class="sxs-lookup">
        <span data-stu-id="663f9-111">Associated state:</span>
      </span>
    </permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DesignerLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerLoader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DesignerLoader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="663f9-112">
            <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663f9-112">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public abstract void BeginLoad (System.ComponentModel.Design.Serialization.IDesignerLoaderHost host);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginLoad(class System.ComponentModel.Design.Serialization.IDesignerLoaderHost host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub BeginLoad (host As IDesignerLoaderHost)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void BeginLoad(System::ComponentModel::Design::Serialization::IDesignerLoaderHost ^ host);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />
      </Parameters>
      <Docs>
        <param name="host">
          <span data-ttu-id="663f9-113">이 로더가 구성 요소를 로드하는 데 사용하는 로더 호스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663f9-113">The loader host through which this loader loads components.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663f9-114">디자이너를 로딩하기 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663f9-114">Begins loading a designer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663f9-115"><xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost> 에 전달 되는 `host` 매개 변수는 일반적으로 디자이너 호스트와 같은 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="663f9-115">The <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost> that is passed to the `host` parameter is typically the same object as the designer host.</span></span> <span data-ttu-id="663f9-116">로더 호스트에이 참조를 통해 디자이너 로더는 디자인 문서를 다시 로드할 수 있으며 디자인 문서를 로드 완료 되었음을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="663f9-116">Through this reference to the loader host, the designer loader can reload the design document and indicate that it has finished loading the design document.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public abstract void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerLoader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Dispose();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="663f9-117">
            <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />에서 사용하는 모든 리소스를 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663f9-117">Releases all resources used by the <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663f9-118"><xref:System.ComponentModel.Design.Serialization.DesignerLoader.Dispose%2A> 사용을 마치면 <xref:System.ComponentModel.Design.Serialization.DesignerLoader>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="663f9-118">Call <xref:System.ComponentModel.Design.Serialization.DesignerLoader.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Design.Serialization.DesignerLoader>.</span></span> <span data-ttu-id="663f9-119"><xref:System.ComponentModel.Design.Serialization.DesignerLoader.Dispose%2A> 메서드를 사용하면 <xref:System.ComponentModel.Design.Serialization.DesignerLoader>를 사용할 수 없게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="663f9-119">The <xref:System.ComponentModel.Design.Serialization.DesignerLoader.Dispose%2A> method leaves the <xref:System.ComponentModel.Design.Serialization.DesignerLoader> in an unusable state.</span></span> <span data-ttu-id="663f9-120">호출한 후 <xref:System.ComponentModel.Design.Serialization.DesignerLoader.Dispose%2A>에 대 한 모든 참조를 해제 해야는 <xref:System.ComponentModel.Design.Serialization.DesignerLoader> 가비지 수집기는 메모리를 회수할 수 있도록 하는 <xref:System.ComponentModel.Design.Serialization.DesignerLoader> 차지한 합니다.</span><span class="sxs-lookup"><span data-stu-id="663f9-120">After calling <xref:System.ComponentModel.Design.Serialization.DesignerLoader.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Design.Serialization.DesignerLoader> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.Serialization.DesignerLoader> was occupying.</span></span> <span data-ttu-id="663f9-121">자세한 내용은 참조 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Dispose 메서드를 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="663f9-121">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="663f9-122"><xref:System.ComponentModel.Design.Serialization.DesignerLoader.Dispose%2A>에 대한 마지막 참조를 해제하기 전에 반드시 <xref:System.ComponentModel.Design.Serialization.DesignerLoader>를 호출하십시오.</span><span class="sxs-lookup"><span data-stu-id="663f9-122">Always call <xref:System.ComponentModel.Design.Serialization.DesignerLoader.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.Serialization.DesignerLoader>.</span></span> <span data-ttu-id="663f9-123">이렇게 하지 않으면 가비지 수집기가 <xref:System.ComponentModel.Design.Serialization.DesignerLoader> 개체의 `Finalize` 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="663f9-123">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.Serialization.DesignerLoader> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public virtual void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerLoader.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="663f9-124">캐시된 변경 내용을 디자이너가 로드된 위치에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663f9-124">Writes cached changes to the location that the designer was loaded from.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663f9-125">디자이너 호스트는이 메서드는 문서의 변경 내용을 디자이너 로더에 의해 저장 된를 주기적으로 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="663f9-125">The designer host calls this method periodically to ensure that changes made to the document were saved by the designer loader.</span></span> <span data-ttu-id="663f9-126">이 메서드는 성능 향상을 위해 비동기 쓰기 체계를 구현 하려면 디자이너 로더를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="663f9-126">This method allows designer loaders to implement an asynchronous write scheme to improve performance.</span></span> <span data-ttu-id="663f9-127">이 메서드의 기본 구현은 아무 작업도 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="663f9-127">The default implementation of this method does nothing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Loading">
      <MemberSignature Language="C#" Value="public virtual bool Loading { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Loading" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerLoader.Loading" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Loading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Loading { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="663f9-128">로더가 문서를 현재 로딩하는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663f9-128">Gets a value indicating whether the loader is currently loading a document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="663f9-129">로더가 문서를 현재 로딩하면 <see langword="true" />이고 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663f9-129">
              <see langword="true" /> if the loader is currently loading a document; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>