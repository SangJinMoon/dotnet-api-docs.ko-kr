<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ExpressionContext.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b43ece75e54589dff9cf246ce425cfe2775514ac.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b43ece75e54589dff9cf246ce425cfe2775514ac</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.Serialization.ExpressionContext">
          <source>Provides a means of passing context state among serializers.</source>
          <target state="translated">serializer 간에 컨텍스트 상태를 전달하는 수단을 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.Serialization.ExpressionContext">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ExpressionContext">
          <source>An <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ExpressionContext&gt;</ph> is placed on the context stack and contains the most relevant expression during serialization.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ExpressionContext&gt;</ph> 컨텍스트 스택에 배치 되 고 직렬화 하는 동안 가장 관련성이 높은 식을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ExpressionContext">
          <source>The following C# code demonstrates an assignment.</source>
          <target state="translated">다음 C# 코드는 대입문 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ExpressionContext">
          <source>During serialization, several serializers are responsible for creating this single statement.</source>
          <target state="translated">직렬화 중에 몇 가지는 직렬 변환기는이 단일 문 작성을 담당 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ExpressionContext">
          <source>One of those serializers is responsible for creating "Hello".</source>
          <target state="translated">이러한 serializer 중 하나는 "Hello"를 만드는 담당 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ExpressionContext">
          <source>There are times when that serializer may need to know the context in which it is creating its expression.</source>
          <target state="translated">해당 serializer 때 해당 식을 만드는는 컨텍스트를 확인 해야 하는 경우가 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ExpressionContext">
          <source>In the previous example, this context is not needed.</source>
          <target state="translated">이 컨텍스트는 이전 예제에서는 필요 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ExpressionContext">
          <source>The following C# code shows a situation in which knowledge of the context is necessary.</source>
          <target state="translated">다음 C# 코드 컨텍스트에 대 한 지식이 필요한 인 경우를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ExpressionContext">
          <source>In this case, the serializer responsible for creating the resource expression needs to be informed of the names of the target objects.</source>
          <target state="translated">이 경우 리소스 식을 만드는 책임이 serializer는 대상 개체의 이름에 숙지 해야 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ExpressionContext">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ExpressionContext&gt;</ph> class can be used for this.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ExpressionContext&gt;</ph> 이 클래스를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ExpressionContext">
          <source>As each serializer creates an expression and invokes a serializer to handle a smaller part of the statement as a whole, the serializer pushes an expression context on the context stack.</source>
          <target state="translated">식을 작성 하 고 문은 전체적으로 작은 부분을 처리 하는 serializer를 호출 하는 각 serializer을 serializer 식 컨텍스트에 컨텍스트 스택에 푸시합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ExpressionContext">
          <source>Each expression context has a parent property that locates the next expression context on the stack.</source>
          <target state="translated">각 식 컨텍스트는 다음 식 컨텍스트 스택에 위치를 지정 하는 부모 속성이 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ExpressionContext">
          <source>This provides a convenient traversal capability.</source>
          <target state="translated">편리한 순회 기능을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.Serialization.ExpressionContext">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object)">
          <source>The given code expression.</source>
          <target state="translated">지정된 코드 식입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object)">
          <source>The given code expression type.</source>
          <target state="translated">지정된 코드 식 형식입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object)">
          <source>The given code expression owner.</source>
          <target state="translated">지정된 코드 식 소유자입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /&gt;</ph> class with the given expression and owner.</source>
          <target state="translated">지정된 식 및 소유자를 사용하여 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object)">
          <source><ph id="ph1">&lt;paramref name="expression" /&gt;</ph>, <ph id="ph2">&lt;paramref name="expressionType" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="owner" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="expression" /&gt;</ph>, <ph id="ph2">&lt;paramref name="expressionType" /&gt;</ph> 또는 <ph id="ph3">&lt;paramref name="owner" /&gt;</ph>가 <ph id="ph4">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object,System.Object)">
          <source>The given code expression.</source>
          <target state="translated">지정된 코드 식입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object,System.Object)">
          <source>The given code expression type.</source>
          <target state="translated">지정된 코드 식 형식입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object,System.Object)">
          <source>The given code expression owner.</source>
          <target state="translated">지정된 코드 식 소유자입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object,System.Object)">
          <source>The given code expression preset value.</source>
          <target state="translated">지정된 코드 식 기본 설정 값입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object,System.Object)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /&gt;</ph> class with a current value.</source>
          <target state="translated">현재 값을 사용하여 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="expression" /&gt;</ph>, <ph id="ph2">&lt;paramref name="expressionType" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="owner" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="expression" /&gt;</ph>, <ph id="ph2">&lt;paramref name="expressionType" /&gt;</ph> 또는 <ph id="ph3">&lt;paramref name="owner" /&gt;</ph>가 <ph id="ph4">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.ExpressionContext.Expression">
          <source>Gets the expression this context represents.</source>
          <target state="translated">이 컨텍스트가 나타내는 식을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.ExpressionContext.Expression">
          <source>The expression this context represents.</source>
          <target state="translated">이 컨텍스트가 나타내는 식입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionType">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the expression.</source>
          <target state="translated">식의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the expression.</source>
          <target state="translated">식의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionType">
          <source>You can use <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ExpressionContext&gt;</ph> to determine if a cast is needed when assigning to the expression.</source>
          <target state="translated">사용할 수 있습니다 <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ExpressionContext&gt;</ph> 식에 할당 하는 경우 캐스트는 필요한 경우를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.ExpressionContext.Owner">
          <source>Gets the object owning this expression.</source>
          <target state="translated">이 식을 소유하는 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.ExpressionContext.Owner">
          <source>The object owning this expression.</source>
          <target state="translated">이 식을 소유하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.ExpressionContext.Owner">
          <source>If the expression is a property reference to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property of an instance of <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> called <ph id="ph3">`button1`</ph>, <ph id="ph4">&lt;xref:System.ComponentModel.Design.Serialization.ExpressionContext.Owner%2A&gt;</ph> returns <ph id="ph5">`button1`</ph>.</source>
          <target state="translated">식의 값에 대 한 속성 참조는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> 인스턴스의 속성 <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> 호출 <ph id="ph3">`button1`</ph>, <ph id="ph4">&lt;xref:System.ComponentModel.Design.Serialization.ExpressionContext.Owner%2A&gt;</ph> 반환 <ph id="ph5">`button1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue">
          <source>Gets the preset value of an expression.</source>
          <target state="translated">식의 미리 설정된 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue">
          <source>The preset value of this expression, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if not assigned.</source>
          <target state="translated">이 식의 미리 설정된 값이거나, 할당된 값이 없으면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue">
          <source>Contains the preset value of an expression, should one exist.</source>
          <target state="translated">존재 식의 미리 설정 된 값을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue">
          <source>For example, if the expression is a property reference expression referring to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>, the <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A&gt;</ph> property contains the instance of the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> property.</source>
          <target state="translated">예를 들어 참조 하는 속성 참조 식이는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> 속성의는 <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>, <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A&gt;</ph> 속성의 인스턴스를 포함 합니다.는 <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue">
          <source>This is because the property is read-only and preset by the object to contain a value.</source>
          <target state="translated">속성은 읽기 전용 이며 값을 포함 하도록 개체에 의해 미리 설정 된 때문입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue">
          <source>On the other hand, a property such as <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> does not have a preset value and therefore the <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A&gt;</ph> property returns <ph id="ph4">`null`</ph>.</source>
          <target state="translated">반면, 같은 속성 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> 미리 설정 된 값이 없는 스레드와 <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A&gt;</ph> 속성에서 반환 <ph id="ph4">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue">
          <source>The following C# code shows how serializers can use this information to guide serialization.</source>
          <target state="translated">다음 C# 코드는 serializer이이 정보를 사용 하 여 serialization을 안내 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue">
          <source>The serializer of the <ph id="ph1">&lt;xref:System.Windows.Forms.Padding&gt;</ph> structure needs to be informed if it should generate the first or second form.</source>
          <target state="translated">serializer는 <ph id="ph1">&lt;xref:System.Windows.Forms.Padding&gt;</ph> 구조 첫 번째 또는 두 번째 폼을 생성 해야 하면이 대 한 정보가 제공 해야 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue">
          <source>The first form is generated by default.</source>
          <target state="translated">첫 번째 형태는 기본적으로 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue">
          <source>The second form is only generated if there is an <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ExpressionContext&gt;</ph> on the context stack that contains a <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A&gt;</ph> equal to the value of the <ph id="ph3">&lt;xref:System.Windows.Forms.Padding&gt;</ph> currently being serialized.</source>
          <target state="translated">두 번째 폼이 없는 경우에 생성 됩니다는 <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ExpressionContext&gt;</ph> 포함 된 컨텍스트 스택에 <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A&gt;</ph> 의 값과 같은 <ph id="ph3">&lt;xref:System.Windows.Forms.Padding&gt;</ph> 현재 직렬화 중인 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>