<Type Name="DebuggerManager+IslandThread" FullName="Microsoft.Build.Debugging.DebuggerManager+IslandThread">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="af9bf2eea0524b697166844d0a292eb7885a4314" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36668997" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DebuggerManager.IslandThread : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit DebuggerManager/IslandThread extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Debugging.DebuggerManager.IslandThread" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DebuggerManager.IslandThread&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public: ref class DebuggerManager::IslandThread sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type DebuggerManager.IslandThread = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="605d3-101">전용 작업자 스레드에서 아일랜드를 실행합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="605d3-101">Executes the islands on a dedicated worker thread.</span>
      </span>
      <span data-ttu-id="605d3-102">그러면 작업자 스레드의 실제 호출 스택이 인터프리터의 가상 호출 스택에 매핑됩니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="605d3-102">The worker thread's physical callstack then maps to the interpreter's virtual callstack.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="IslandWorker">
      <MemberSignature Language="C#" Value="public static void IslandWorker (Microsoft.Build.Debugging.DebuggerManager.IslandThread controller);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void IslandWorker(class Microsoft.Build.Debugging.DebuggerManager/IslandThread controller) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Debugging.DebuggerManager.IslandThread.IslandWorker(Microsoft.Build.Debugging.DebuggerManager.IslandThread)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub IslandWorker (controller As DebuggerManager.IslandThread)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void IslandWorker(Microsoft::Build::Debugging::DebuggerManager::IslandThread ^ controller);" />
      <MemberSignature Language="F#" Value="static member IslandWorker : Microsoft.Build.Debugging.DebuggerManager.IslandThread -&gt; unit" Usage="Microsoft.Build.Debugging.DebuggerManager.IslandThread.IslandWorker controller" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controller" Type="Microsoft.Build.Debugging.DebuggerManager+IslandThread" />
      </Parameters>
      <Docs>
        <param name="controller">
          <span data-ttu-id="605d3-103">진입점을 호출하는 스레드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="605d3-103">The thread calling the entry point.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="605d3-104">아일랜드에서 호출되는 전용 진입점입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="605d3-104">Private entry point called from islands.</span>
          </span>
          <span data-ttu-id="605d3-105">아일랜드에서 호출할 수 있도록 public이어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="605d3-105">Must be public so that the islands can invoke it.</span>
          </span>
          <span data-ttu-id="605d3-106">디버거 작업자 스레드에서 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="605d3-106">Called on debugger worker thread.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Debugging.DebuggerManager.IslandThread.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="605d3-107">
            <see cref="T:Microsoft.Build.Debugging.DebuggerManager.IslandThread" /> 클래스의 현재 인스턴스에서 사용하는 모든 리소스를 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="605d3-107">Releases all resources used by the current instance of the <see cref="T:Microsoft.Build.Debugging.DebuggerManager.IslandThread" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="605d3-108">`Dispose` 사용을 마치면 <xref:Microsoft.Build.Debugging.DebuggerManager.IslandThread>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="605d3-108">Call `Dispose` when you are finished using the <xref:Microsoft.Build.Debugging.DebuggerManager.IslandThread>.</span></span> <span data-ttu-id="605d3-109">호출한 후 `Dispose`에 대 한 모든 참조를 해제 해야는 <xref:Microsoft.Build.Debugging.DebuggerManager.IslandThread> 가비지 수집기에서 사용 하 던 메모리를 회수할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="605d3-109">After calling `Dispose`, you must release all references to the <xref:Microsoft.Build.Debugging.DebuggerManager.IslandThread> so the garbage collector can reclaim the memory that it was using.</span></span>  
  
 <span data-ttu-id="605d3-110">자세한 내용은 참조 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Dispose 메서드를 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="605d3-110">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="605d3-111">`Dispose`에 대한 마지막 참조를 해제하기 전에 반드시 <xref:Microsoft.Build.Debugging.DebuggerManager.IslandThread>를 호출하십시오.</span><span class="sxs-lookup"><span data-stu-id="605d3-111">Always call `Dispose` before you release your last reference to the <xref:Microsoft.Build.Debugging.DebuggerManager.IslandThread>.</span></span> <span data-ttu-id="605d3-112">이렇게 하지 않으면 가비지 수집기가 <xref:Microsoft.Build.Debugging.DebuggerManager.IslandThread> 개체의 `Finalize` 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="605d3-112">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:Microsoft.Build.Debugging.DebuggerManager.IslandThread> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>