<Type Name="PropertyChangedEventManager" FullName="System.ComponentModel.PropertyChangedEventManager">
  <TypeSignature Language="C#" Value="public class PropertyChangedEventManager : System.Windows.WeakEventManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PropertyChangedEventManager extends System.Windows.WeakEventManager" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.PropertyChangedEventManager" />
  <TypeSignature Language="VB.NET" Value="Public Class PropertyChangedEventManager&#xA;Inherits WeakEventManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyChangedEventManager : System::Windows::WeakEventManager" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.WeakEventManager</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="cf3fd-101">"약한 이벤트 수신기" 패턴을 사용하여 <see cref="T:System.Windows.WeakEventManager" /> 이벤트에 대한 수신기를 연결할 수 있도록 <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 구현을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="cf3fd-101">Provides a <see cref="T:System.Windows.WeakEventManager" /> implementation so that you can use the "weak event listener" pattern to attach listeners for the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3fd-102">이 패턴에 대 한 수신기가 되려면, 수신기 개체를 구현 해야 <xref:System.Windows.IWeakEventListener>합니다.</span><span class="sxs-lookup"><span data-stu-id="cf3fd-102">In order to be listeners in this pattern, your listener objects must implement <xref:System.Windows.IWeakEventListener>.</span></span> <span data-ttu-id="cf3fd-103">구현할 필요가 없습니다 <xref:System.Windows.IWeakEventListener> 이벤트의 원본인 클래스에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cf3fd-103">You do not need to implement <xref:System.Windows.IWeakEventListener> on the class that is the source of the events.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.IWeakEventListener" />
  </Docs>
  <Members>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public static void AddHandler (System.ComponentModel.INotifyPropertyChanged source, EventHandler&lt;System.ComponentModel.PropertyChangedEventArgs&gt; handler, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddHandler(class System.ComponentModel.INotifyPropertyChanged source, class System.EventHandler`1&lt;class System.ComponentModel.PropertyChangedEventArgs&gt; handler, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyChangedEventManager.AddHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddHandler (source As INotifyPropertyChanged, handler As EventHandler(Of PropertyChangedEventArgs), propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddHandler(System::ComponentModel::INotifyPropertyChanged ^ source, EventHandler&lt;System::ComponentModel::PropertyChangedEventArgs ^&gt; ^ handler, System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ComponentModel.INotifyPropertyChanged" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.ComponentModel.PropertyChangedEventArgs&gt;" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="cf3fd-104"><see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 이벤트를 발생하는 소스 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cf3fd-104">The source object that the raises the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event.</span></span></param>
        <param name="handler"><span data-ttu-id="cf3fd-105"><see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 이벤트를 처리하는 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="cf3fd-105">The delegate that handles the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event.</span></span></param>
        <param name="propertyName"><span data-ttu-id="cf3fd-106">변경을 수신 대기할 <c>source</c>에 있는 속성 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="cf3fd-106">The name of the property that exists on <c>source</c> upon which to listen for changes.</span></span> <span data-ttu-id="cf3fd-107">"모든 속성"을 나타내려면 <see cref="F:System.String.Empty" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="cf3fd-107">Set to <see cref="F:System.String.Empty" /> to indicate "any property".</span></span></param>
        <summary><span data-ttu-id="cf3fd-108">지정된 소스가 지정된 속성에 대한 <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 이벤트를 발생시킬 때 호출되는 지정된 이벤트 처리기를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="cf3fd-108">Adds the specified event handler, which is called when specified source raises the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event for the specified property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3fd-109">이 메서드를 사용 하 여 구독 하는 데 사용할 이벤트 처리기를 지정 하는 <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged> 이벤트...</span><span class="sxs-lookup"><span data-stu-id="cf3fd-109">Use this method to specify the event handler you want to use to subscribe to the <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged> event..</span></span>  <span data-ttu-id="cf3fd-110">이 메서드를 사용 하는 경우 수신기 개체 구현 않아도 <xref:System.Windows.IWeakEventListener> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="cf3fd-110">When you use this method, your listener object does not need to implement the <xref:System.Windows.IWeakEventListener> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf3fd-111"><paramref name="handler" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="cf3fd-111"><paramref name="handler" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cf3fd-112"><paramref name="handler" />에 두 개 이상의 메서드가 연결되었습니다.</span><span class="sxs-lookup"><span data-stu-id="cf3fd-112">More than one method is associated with <paramref name="handler" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddListener">
      <MemberSignature Language="C#" Value="public static void AddListener (System.ComponentModel.INotifyPropertyChanged source, System.Windows.IWeakEventListener listener, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddListener(class System.ComponentModel.INotifyPropertyChanged source, class System.Windows.IWeakEventListener listener, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyChangedEventManager.AddListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddListener (source As INotifyPropertyChanged, listener As IWeakEventListener, propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddListener(System::ComponentModel::INotifyPropertyChanged ^ source, System::Windows::IWeakEventListener ^ listener, System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ComponentModel.INotifyPropertyChanged" />
        <Parameter Name="listener" Type="System.Windows.IWeakEventListener" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="cf3fd-113">이벤트가 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cf3fd-113">The object with the event.</span></span></param>
        <param name="listener"><span data-ttu-id="cf3fd-114">수신기로 추가할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cf3fd-114">The object to add as a listener.</span></span></param>
        <param name="propertyName"><span data-ttu-id="cf3fd-115">변경을 수신 대기할 <c>source</c>에 있는 속성 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="cf3fd-115">The name of the property that exists on <c>source</c> upon which to listen for changes.</span></span> <span data-ttu-id="cf3fd-116">"모든 속성"을 나타내려면 <see cref="F:System.String.Empty" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="cf3fd-116">Set to <see cref="F:System.String.Empty" /> to indicate "any property".</span></span></param>
        <summary><span data-ttu-id="cf3fd-117">지정된 수신기를 지정된 소스의 수신기 목록에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="cf3fd-117">Adds the specified listener to the list of listeners on the specified source.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.IWeakEventListener" />
      </Docs>
    </Member>
    <Member MemberName="NewListenerList">
      <MemberSignature Language="C#" Value="protected override System.Windows.WeakEventManager.ListenerList NewListenerList ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.WeakEventManager/ListenerList NewListenerList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyChangedEventManager.NewListenerList" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function NewListenerList () As WeakEventManager.ListenerList" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.WeakEventManager+ListenerList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cf3fd-118"><see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 이벤트에 대한 수신기를 포함하는 새 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="cf3fd-118">Returns a new object to contain listeners to the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event.</span></span></summary>
        <returns><span data-ttu-id="cf3fd-119"><see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 이벤트에 대한 수신기를 포함하는 새 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cf3fd-119">A new object to contain listeners to the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Purge">
      <MemberSignature Language="C#" Value="protected override bool Purge (object source, object data, bool purgeAll);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool Purge(object source, object data, bool purgeAll) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyChangedEventManager.Purge(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Purge (source As Object, data As Object, purgeAll As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool Purge(System::Object ^ source, System::Object ^ data, bool purgeAll);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="purgeAll" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="cf3fd-120">모든 수신기를 제거할 소스 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cf3fd-120">Source object to remove all listeners from.</span></span></param>
        <param name="data"><span data-ttu-id="cf3fd-121">지울 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="cf3fd-121">The data to purge.</span></span> <span data-ttu-id="cf3fd-122">이는 <see cref="T:System.Collections.Specialized.HybridDictionary" />여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf3fd-122">This is expected to be a <see cref="T:System.Collections.Specialized.HybridDictionary" />.</span></span></param>
        <param name="purgeAll"><span data-ttu-id="cf3fd-123">수신 대기를 중지하고 모든 데이터를 완전히 제거하려면 <see langword="true" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="cf3fd-123">Set to <see langword="true" /> to stop listening and to completely remove all data.</span></span></param>
        <summary><span data-ttu-id="cf3fd-124">더 이상 활성 상태가 아닌 수신기를 제공된 소스의 데이터에서 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="cf3fd-124">Removes listeners that are no longer active from the data for the provided source.</span></span></summary>
        <returns>
          <span data-ttu-id="cf3fd-125">일부 항목이 제거되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="cf3fd-125"><see langword="true" /> if some entries were removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.IWeakEventListener" />
      </Docs>
    </Member>
    <Member MemberName="RemoveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveHandler (System.ComponentModel.INotifyPropertyChanged source, EventHandler&lt;System.ComponentModel.PropertyChangedEventArgs&gt; handler, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveHandler(class System.ComponentModel.INotifyPropertyChanged source, class System.EventHandler`1&lt;class System.ComponentModel.PropertyChangedEventArgs&gt; handler, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyChangedEventManager.RemoveHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveHandler (source As INotifyPropertyChanged, handler As EventHandler(Of PropertyChangedEventArgs), propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveHandler(System::ComponentModel::INotifyPropertyChanged ^ source, EventHandler&lt;System::ComponentModel::PropertyChangedEventArgs ^&gt; ^ handler, System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ComponentModel.INotifyPropertyChanged" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.ComponentModel.PropertyChangedEventArgs&gt;" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="cf3fd-126"><see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 이벤트를 발생하는 소스 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cf3fd-126">The source object that the raises the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event.</span></span></param>
        <param name="handler"><span data-ttu-id="cf3fd-127"><see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 이벤트를 처리하는 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="cf3fd-127">The delegate that handles the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event.</span></span></param>
        <param name="propertyName"><span data-ttu-id="cf3fd-128">변경 수신 대기를 중지할 <c>source</c>에 있는 속성 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="cf3fd-128">The name of the property that exists on <c>source</c> upon which to stop listening for changes.</span></span> <span data-ttu-id="cf3fd-129">"모든 속성"을 나타내려면 <see cref="F:System.String.Empty" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="cf3fd-129">Set to <see cref="F:System.String.Empty" /> to indicate "any property".</span></span></param>
        <summary><span data-ttu-id="cf3fd-130">지정한 소스에서 지정한 이벤트 처리기를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="cf3fd-130">Removes the specified event handler from the specified source.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf3fd-131"><paramref name="handler" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="cf3fd-131"><paramref name="handler" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cf3fd-132"><paramref name="handler" />에 두 개 이상의 메서드가 연결되었습니다.</span><span class="sxs-lookup"><span data-stu-id="cf3fd-132">More than one method is associated with <paramref name="handler" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveListener">
      <MemberSignature Language="C#" Value="public static void RemoveListener (System.ComponentModel.INotifyPropertyChanged source, System.Windows.IWeakEventListener listener, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveListener(class System.ComponentModel.INotifyPropertyChanged source, class System.Windows.IWeakEventListener listener, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyChangedEventManager.RemoveListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveListener (source As INotifyPropertyChanged, listener As IWeakEventListener, propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveListener(System::ComponentModel::INotifyPropertyChanged ^ source, System::Windows::IWeakEventListener ^ listener, System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ComponentModel.INotifyPropertyChanged" />
        <Parameter Name="listener" Type="System.Windows.IWeakEventListener" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="cf3fd-133">수신기를 제거할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cf3fd-133">The object to remove the listener from.</span></span></param>
        <param name="listener"><span data-ttu-id="cf3fd-134">제거할 수신기입니다.</span><span class="sxs-lookup"><span data-stu-id="cf3fd-134">The listener to remove.</span></span></param>
        <param name="propertyName"><span data-ttu-id="cf3fd-135">변경 수신 대기를 중지할 <c>source</c>에 있는 속성 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="cf3fd-135">The name of the property that exists on <c>source</c> upon which to stop listening for changes.</span></span> <span data-ttu-id="cf3fd-136">"모든 속성"을 나타내려면 <see cref="F:System.String.Empty" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="cf3fd-136">Set to <see cref="F:System.String.Empty" /> to indicate "any property".</span></span></param>
        <summary><span data-ttu-id="cf3fd-137">제공된 소스의 수신기 목록에서 지정된 수신기를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="cf3fd-137">Removes the specified listener from the list of listeners on the provided source.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.IWeakEventListener" />
      </Docs>
    </Member>
    <Member MemberName="StartListening">
      <MemberSignature Language="C#" Value="protected override void StartListening (object source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void StartListening(object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyChangedEventManager.StartListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub StartListening (source As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void StartListening(System::Object ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="cf3fd-138"><see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 수신 대기를 시작할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cf3fd-138">The object on which to start listening for <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</span></span></param>
        <summary><span data-ttu-id="cf3fd-139">제공된 소스의 <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 이벤트 수신 대기를 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="cf3fd-139">Begins listening for the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event on the provided source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3fd-140">이 속성을 지정 하지 않습니다. 원본의 모든 속성에는 이벤트 관리자 시작 되 면 <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged> 알림이 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf3fd-140">This does not specify a property; once the event manager is started, all properties on the source will have <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged> notification enabled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.IWeakEventListener" />
      </Docs>
    </Member>
    <Member MemberName="StopListening">
      <MemberSignature Language="C#" Value="protected override void StopListening (object source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void StopListening(object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyChangedEventManager.StopListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub StopListening (source As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void StopListening(System::Object ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="cf3fd-141"><see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 수신 대기를 중지할 소스 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cf3fd-141">The source object on which to stop listening for <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</span></span></param>
        <summary><span data-ttu-id="cf3fd-142">제공된 소스의 <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 이벤트 수신 대기를 중지합니다.</span><span class="sxs-lookup"><span data-stu-id="cf3fd-142">Stops listening for the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event on the provided source.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.IWeakEventListener" />
      </Docs>
    </Member>
  </Members>
</Type>