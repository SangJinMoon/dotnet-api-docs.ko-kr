<Type Name="RefreshEventHandler" FullName="System.ComponentModel.RefreshEventHandler">
  <TypeSignature Language="C#" Value="public delegate void RefreshEventHandler(RefreshEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RefreshEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.RefreshEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub RefreshEventHandler(e As RefreshEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void RefreshEventHandler(RefreshEventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="e" Type="System.ComponentModel.RefreshEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="e"><span data-ttu-id="e6211-101">변경된 구성 요소 또는 <see cref="T:System.ComponentModel.RefreshEventArgs" />이 들어 있는 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e6211-101">A <see cref="T:System.ComponentModel.RefreshEventArgs" /> that contains the component or <see cref="T:System.Type" /> that changed.</span></span></param>
    <summary><span data-ttu-id="e6211-102">디자인 타임 동안 <see cref="E:System.ComponentModel.TypeDescriptor.Refreshed" /> 또는 구성 요소가 변경될 때 발생하는 <see cref="T:System.Type" /> 이벤트를 처리하는 메서드를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="e6211-102">Represents the method that handles the <see cref="E:System.ComponentModel.TypeDescriptor.Refreshed" /> event raised when a <see cref="T:System.Type" /> or component is changed during design time.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6211-103"><xref:System.ComponentModel.RefreshEventHandler> 대리자를 만들 때, 이벤트를 처리할 메서드를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="e6211-103">When you create a <xref:System.ComponentModel.RefreshEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="e6211-104">이벤트를 이벤트 처리기와 연결하려면 대리자의 인스턴스를 해당 이벤트에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="e6211-104">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="e6211-105">대리자를 제거하지 않는 경우 이벤트가 발생할 때마다 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="e6211-105">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="e6211-106">이벤트 처리기 대리자에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e6211-106">For more information about event handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6211-107">다음 샘플을 사용 하는 방법을 <xref:System.ComponentModel.RefreshEventHandler> 처리 하기 위한 대리자는 <xref:System.ComponentModel.TypeDescriptor.Refreshed> 형식이 나 구성 요소가 변경 될 때 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="e6211-107">The following sample demonstrates how to use a <xref:System.ComponentModel.RefreshEventHandler> delegate to handle the <xref:System.ComponentModel.TypeDescriptor.Refreshed> event when a type or component changes.</span></span> <span data-ttu-id="e6211-108">코드에서의 `OnRefreshed` 이벤트가 이벤트를 처리 하 고 변경 되 고 구성 요소를 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e6211-108">In the code, the `OnRefreshed` event handles the event and displays the component being changed.</span></span>  
  
 <span data-ttu-id="e6211-109">있다고 가정는 `TextBox` 폼에 컨트롤을 배치할 이미 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e6211-109">The code assumes that a `TextBox` control is already sited on the form.</span></span>  
  
 [!code-cpp[RefreshEventHandler#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RefreshEventHandler/CPP/refreshevent.cpp#1)]
 [!code-csharp[RefreshEventHandler#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RefreshEventHandler/CS/refreshevent.cs#1)]
 [!code-vb[RefreshEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RefreshEventHandler/VB/refreshevent.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.RefreshEventArgs" />
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
    <altmember cref="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)" />
  </Docs>
</Type>