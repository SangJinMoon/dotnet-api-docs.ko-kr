<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TypeDescriptionProvider.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac578810a0d3161e71e0b4f17da0881ab026be14b8d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">78810a0d3161e71e0b4f17da0881ab026be14b8d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>Provides supplemental metadata to the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>에 추가 메타데이터를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> class dynamically extends the type information associated with a type or object by adding, modifying, or hiding characteristics such as attributes, properties, and events.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> 클래스를 추가, 수정 또는 특성, 속성 및 이벤트 등의 특성 숨기기 하 여 형식 또는 개체와 연결 된 형식 정보를 동적으로 확장 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>There can be multiple type description provider classes that offer metadata to a single <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</source>
          <target state="translated">단일 메타 데이터를 제공 하는 여러 형식 설명 공급자 클래스가 있을 수 있습니다 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>There are two ways to associate a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> with a <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>:</source>
          <target state="translated">두 가지 방법으로 연결 하는 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> 와 <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>At design time, when the target class can be assigned the appropriate <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProviderAttribute&gt;</ph> tag.</source>
          <target state="translated">경우 대상 클래스 지정할 수 있는 적절 한 디자인 타임에 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProviderAttribute&gt;</ph> 태그입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>At run time, when one of the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</ph> methods of the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> class can be called.</source>
          <target state="translated">실행 한 경우의 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</ph> 의 메서드는 <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> 클래스를 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>These overloaded methods require either the target object or its class type.</source>
          <target state="translated">이러한 오버 로드 된 메서드는 대상 개체 또는 클래스 형식이 필요합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> class relies on a parent object of the same type, supplied during construction.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> 클래스가 생성 하는 동안 제공 된 동일한 형식의 부모 개체에 의존 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>This allows classes that derive from <ph id="ph1">&lt;xref:System.ComponentModel.CustomTypeDescriptor&gt;</ph> to selectively override methods.</source>
          <target state="translated">파생 된 클래스를 사용 하면이 <ph id="ph1">&lt;xref:System.ComponentModel.CustomTypeDescriptor&gt;</ph> 를 선택적으로 메서드를 재정의 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>Instances of <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> are only built upon demand, minimizing the impact of custom type information on performance.</source>
          <target state="translated">인스턴스 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> 만 필요한 경우 사용자 지정 형식 정보가 성능에 미치는 영향이 최소화에 빌드됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>Your derived type might be marked as <ph id="ph1">&lt;see langword="internal" /&gt;</ph> or <ph id="ph2">&lt;see langword="private" /&gt;</ph>, but an instance of your type can be created with the <ph id="ph3">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph> class.</source>
          <target state="translated">파생된 형식으로 표시 될 수 <ph id="ph1">&lt;see langword="internal" /&gt;</ph> 또는 <ph id="ph2">&lt;see langword="private" /&gt;</ph>, 있지만와 해당 형식의 인스턴스를 만들 수는 <ph id="ph3">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>Do not write insecure code by assuming the caller is trusted.</source>
          <target state="translated">호출자를 가정 하 여 안전 하지 않은 코드는 신뢰할 수 있는 작성 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>Assume instead that callers might create instances of your type in partial trust.</source>
          <target state="translated">가정 대신 호출자가 부분 신뢰 환경에서 형식의 인스턴스를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor">
          <source>This constructor is equivalent to calling the other <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.%23ctor%28System.ComponentModel.TypeDescriptionProvider%29&gt;</ph> constructor with a parameter value that is <ph id="ph2">`null`</ph>.</source>
          <target state="translated">이 생성자는 다른 호출 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.%23ctor%28System.ComponentModel.TypeDescriptionProvider%29&gt;</ph> 생성자는 매개 변수 값으로 <ph id="ph2">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
          <source>The parent type description provider.</source>
          <target state="translated">부모 형식 설명 공급자입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> class using a parent type description provider.</source>
          <target state="translated">부모 형식 설명 공급자를 사용하여 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
          <source>If the <ph id="ph1">`parent`</ph> parameter is <ph id="ph2">`null`</ph>, all <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> methods will return default values.</source>
          <target state="translated">경우는 <ph id="ph1">`parent`</ph> 매개 변수는 <ph id="ph2">`null`</ph>모든 <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> 메서드는 기본 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
          <source>Otherwise, all <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> methods will delegate to the methods of <ph id="ph2">`parent`</ph>.</source>
          <target state="translated">그렇지 않으면 모든 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> 메서드의 메서드에 위임 합니다 <ph id="ph2">`parent`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
          <source>The following table shows the default return values for <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> methods.</source>
          <target state="translated">다음 표에서에 대 한 기본 반환 값이 나와 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
          <source>Method</source>
          <target state="translated">메서드</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
          <source>Default return value</source>
          <target state="translated">기본 반환 값</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
          <source>A newly created object through a call to the <ph id="ph1">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph> method.</source>
          <target state="translated">호출 하 여 새로 만든된 개체는 <ph id="ph1">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
          <source>A default instance of a <ph id="ph1">&lt;xref:System.ComponentModel.CustomTypeDescriptor&gt;</ph> class.</source>
          <target state="translated">기본 인스턴스는 <ph id="ph1">&lt;xref:System.ComponentModel.CustomTypeDescriptor&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
          <source>A default instance of a <ph id="ph1">&lt;xref:System.ComponentModel.CustomTypeDescriptor&gt;</ph> class.</source>
          <target state="translated">기본 인스턴스는 <ph id="ph1">&lt;xref:System.ComponentModel.CustomTypeDescriptor&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
          <source>The <ph id="ph1">`objectType`</ph> first parameter.</source>
          <target state="translated"><ph id="ph1">`objectType`</ph> 첫 번째 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>An optional service provider.</source>
          <target state="translated">선택적인 서비스 공급자입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>The type of object to create.</source>
          <target state="translated">만들 개체의 형식입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>This parameter is never <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 매개 변수는 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>An optional array of types that represent the parameter types to be passed to the object's constructor.</source>
          <target state="translated">개체의 생성자에 전달할 매개 변수 형식을 나타내는 형식의 선택적 배열입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>This array can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> or of zero length.</source>
          <target state="translated">이 배열은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이거나 길이가 0일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>An optional array of parameter values to pass to the object's constructor.</source>
          <target state="translated">개체의 생성자에 전달할 매개 변수 값의 선택적 배열입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>Creates an object that can substitute for another data type.</source>
          <target state="translated">다른 데이터 형식 대신 사용할 수 있는 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>The substitute <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">대체 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.IServiceProvider&gt;</ph> specified by the <ph id="ph2">`provider`</ph> parameter is passed in by the <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A?displayProperty=nameWithType&gt;</ph> method of the <ph id="ph4">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IServiceProvider&gt;</ph> 에 지정 된는 <ph id="ph2">`provider`</ph> 매개 변수에 의해 전달 되는 <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A?displayProperty=nameWithType&gt;</ph> 의 메서드는 <ph id="ph4">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>If <ph id="ph1">`provider`</ph> is not <ph id="ph2">`null`</ph>, the service provider can be used by the type description provider to obtain additional context about the creation call.</source>
          <target state="translated">경우 <ph id="ph1">`provider`</ph> 않습니다 <ph id="ph2">`null`</ph>, 서비스 공급자 만들기 호출에 대 한 추가 컨텍스트를 가져올 형식 설명 공급자에서 사용 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A&gt;</ph> method is <ph id="ph2">`virtual`</ph> and, by default, returns the result of the <ph id="ph3">&lt;xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType&gt;</ph> method if <ph id="ph4">`provider`</ph> is <ph id="ph5">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A&gt;</ph> 방법은 <ph id="ph2">`virtual`</ph> 기본적으로 결과를 반환 하는 고는 <ph id="ph3">&lt;xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType&gt;</ph> 메서드 경우 <ph id="ph4">`provider`</ph> 은 <ph id="ph5">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, this method will invoke the <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A&gt;</ph> method of the parent provider.</source>
          <target state="translated">경우 <ph id="ph1">`provider`</ph> 은 <ph id="ph2">`null`</ph>,이 메서드를 호출 합니다는 <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A&gt;</ph> 부모 공급자의입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>If the derived class is not interested in providing a substitute instance, it should just call the base implementation.</source>
          <target state="translated">파생된 클래스는 대체 인스턴스를 제공 하에 관심이 없으므로, 하는 경우 방금 기본 구현을 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>The object for which to get the cache.</source>
          <target state="translated">캐시를 가져올 개체입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>Gets a per-object cache, accessed as an <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> of key/value pairs.</source>
          <target state="translated">키/값 쌍의 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>로 액세스되는 개체별 캐시를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> if the provided object supports caching; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">제공된 개체에서 캐싱을 지원하면 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> may need to perform complex operations on collections of metadata.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> 메타 데이터의 컬렉션에 대 한 복잡 한 작업을 수행 해야 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>Because types are not unloaded for the life of a domain, the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> class will automatically cache the results of these operations based on type.</source>
          <target state="translated">형식이 도메인의 수명에 대 한 언로드되지 않으므로 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> 클래스 형식에 따라 이러한 작업의 결과 자동으로 캐시 됩니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>However, some operations use live object instances.</source>
          <target state="translated">하지만 일부 작업은 라이브 개체 인스턴스를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>These operations cannot be cached within the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> class because caching them would prevent the object from being garbage collected.</source>
          <target state="translated">내에서 이러한 작업을 캐시할 수 없습니다는 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> 클래스 때문에 캐시 하는 개체가 가비지 수집 되지 되지 것입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>Instead, the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> class allows for a per-object cache, accessed as an <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> of key/value pairs, to exist on an object.</source>
          <target state="translated">대신,는 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> 으로 액세스 하는 개체당 캐시에 대 한 클래스를 사용 하는 <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> 개체에 있는 키/값 쌍의 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A&gt;</ph> method returns an instance of this cache.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A&gt;</ph> 메서드가이 캐시의 인스턴스를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A&gt;</ph> method will return <ph id="ph2">`null`</ph> if there is no supported cache for an object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A&gt;</ph> 메서드는 반환 <ph id="ph2">`null`</ph> 경우 개체에 대 한 지원 되는 캐시가 없습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>The default <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> used by <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> examines the object to see if it is a sited component that implements the <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDictionaryService&gt;</ph> interface.</source>
          <target state="translated">기본 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> 에서 사용 하는 <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> 개체를 구현 하는 설치 되는 구성 인지를 검사 하는 <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDictionaryService&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>If the object is, it uses the dictionary service to store the object's cache.</source>
          <target state="translated">개체가 있으면 개체의 캐시를 저장 하는 사전 서비스를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>Otherwise, the object it returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">개체는 변수가 <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>Other type description providers may provide their own implementation here.</source>
          <target state="translated">다른 형식 설명 공급자 여기 자체 구현을 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>For example, dependency objects can just attach a property of type <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>.</source>
          <target state="translated">예를 들어 종속성 개체 수 속성을 연결할 형식의 <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
          <source>The object for which to get the extended type descriptor.</source>
          <target state="translated">확장 형식 설명자를 가져올 개체입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
          <source>Gets an extended custom type descriptor for the given object.</source>
          <target state="translated">지정된 개체에 대한 확장 사용자 지정 형식 설명자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ICustomTypeDescriptor" /&gt;</ph> that can provide extended metadata for the object.</source>
          <target state="translated">개체에 대한 확장 메타데이터를 제공할 수 있는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.ICustomTypeDescriptor" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
          <source>An extended type descriptor is a custom type descriptor that offers properties that other objects have added to this object, but that are not actually defined on the object.</source>
          <target state="translated">확장된 형식 설명자는 개체에 실제로 정의 된 다른 개체에는 있지만이 개체에 추가 속성이 제공 하는 사용자 지정 형식 설명자입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
          <source>For example, in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> component model, objects that implement the <ph id="ph2">&lt;xref:System.ComponentModel.IExtenderProvider&gt;</ph> interface can attach properties to other objects that reside in the same logical container.</source>
          <target state="translated">예를 들어는 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> 구성 요소 모델을 구현 하는 개체는 <ph id="ph2">&lt;xref:System.ComponentModel.IExtenderProvider&gt;</ph> 인터페이스에는 같은 논리 컨테이너에 있는 다른 개체에 속성을 연결할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
          <source>The overloaded <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> methods do not return a type descriptor that provides these extra extended properties.</source>
          <target state="translated">오버 로드 된 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> 메서드는 이러한 추가 확장된 속성을 제공 하는 형식 설명자를 반환 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A&gt;</ph> method returns the set of these extended properties.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A&gt;</ph> 메서드 확장 속성의 집합을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> will automatically merge the results of these two property collections.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> 두 속성 컬렉션의 결과 자동으로 병합 됩니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
          <source>While the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> component model supports only extended properties, <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A&gt;</ph> can be used for extended attributes as well as events, if the type description provider supports it.</source>
          <target state="translated">반면는 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> 확장 속성, 구성 요소 모델 지원 <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A&gt;</ph> 형식 설명 공급자가 지 원하는 경우 확장 된 특성 뿐만 아니라 이벤트를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A&gt;</ph> is <ph id="ph2">`virtual`</ph> and, by default, returns a custom type descriptor that returns empty results if no parent provider was passed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A&gt;</ph> <ph id="ph2">`virtual`</ph> 및 기본적으로 없는 부모 공급자가 전달 하는 경우 빈 결과 반환 하는 사용자 지정 형식 설명자를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
          <source>If a parent provider was passed, this method will invoke the parent provider's <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A&gt;</ph> method.</source>
          <target state="translated">부모 공급자 전달 된 경우이 메서드는 부모 공급자를 호출 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)">
          <source>The object to get extender providers for.</source>
          <target state="translated">관련된 Extender 공급자를 가져올 개체입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)">
          <source>Gets the extender providers for the specified object.</source>
          <target state="translated">지정된 개체에 대한 Extender 공급자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)">
          <source>An array of extender providers for <ph id="ph1">&lt;paramref name="instance" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="instance" /&gt;</ph>에 대한 Extender 공급자의 배열입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)">
          <source><ph id="ph1">&lt;paramref name="instance" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="instance" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)">
          <source>The specified component.</source>
          <target state="translated">지정된 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)">
          <source>Gets the name of the specified component, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the component has no name.</source>
          <target state="translated">지정된 구성 요소의 이름을 가져옵니다. 구성 요소에 이름이 없으면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)">
          <source>The name of the specified component.</source>
          <target state="translated">지정된 구성 요소의 이름입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>Performs normal reflection against an object.</source>
          <target state="translated">개체에 대해 일반 리플렉션을 수행합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)">
          <source>An instance of the type (should not be <ph id="ph1">&lt;see langword="null" /&gt;</ph>).</source>
          <target state="translated">형식의 인스턴스로, <ph id="ph1">&lt;see langword="null" /&gt;</ph>이 아니어야 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)">
          <source>Performs normal reflection against the given object.</source>
          <target state="translated">지정된 개체에 대해 일반 리플렉션을 수행합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)">
          <source>The type of reflection for this <ph id="ph1">&lt;paramref name="instance" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;paramref name="instance" /&gt;</ph>의 리플렉션 형식입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> method is a lower-level version of the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> 메서드는 하위 버전의는 <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)">
          <source>If no custom type descriptor can be located for an object, <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> is called to perform normal reflection against the object.</source>
          <target state="translated">사용자 지정 형식 설명자에 없는 개체를 찾을 수 없으면 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> 개체에 대해 일반 리플렉션을 수행 하기 위해 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)">
          <source>Use this method overload if you have called a type descriptor member that uses an instance instead of a type.</source>
          <target state="translated">이 메서드 오버 로드를 사용 하 여 형식이 아닌 인스턴스를 사용 하는 형식 설명자 멤버 호출한 경우.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)">
          <source><ph id="ph1">&lt;paramref name="instance" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="instance" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)">
          <source>The type of object for which to retrieve the <ph id="ph1">&lt;see cref="T:System.Reflection.IReflect" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.IReflect" /&gt;</ph>를 검색할 개체의 형식입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)">
          <source>Performs normal reflection against a type.</source>
          <target state="translated">형식에 대해 일반 리플렉션을 수행합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)">
          <source>The type of reflection for this <ph id="ph1">&lt;paramref name="objectType" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;paramref name="objectType" /&gt;</ph>의 리플렉션 형식입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> method is a lower-level version of the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> 메서드는 하위 버전의는 <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)">
          <source>If no custom type descriptor can be located for an object, <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> is called to perform normal reflection against the object.</source>
          <target state="translated">사용자 지정 형식 설명자에 없는 개체를 찾을 수 없으면 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> 개체에 대해 일반 리플렉션을 수행 하기 위해 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)">
          <source>Use this method overload if you have called a type descriptor member that uses a type instead of an instance.</source>
          <target state="translated">이 메서드 오버 로드를 사용 하 여 인스턴스 대신 형식을 사용 하는 형식 설명자 멤버 호출한 경우.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)">
          <source><ph id="ph1">&lt;paramref name="objectType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="objectType" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)">
          <source>The type of object for which to retrieve the <ph id="ph1">&lt;see cref="T:System.Reflection.IReflect" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.IReflect" /&gt;</ph>를 검색할 개체의 형식입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)">
          <source>An instance of the type.</source>
          <target state="translated">형식의 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)">
          <source>Can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)">
          <source>Performs normal reflection against the given object with the given type.</source>
          <target state="translated">주어진 형식의 지정된 개체에 대해 일반 리플렉션을 수행합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)">
          <source>The type of reflection for this <ph id="ph1">&lt;paramref name="objectType" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;paramref name="objectType" /&gt;</ph>의 리플렉션 형식입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> method is a lower-level version of the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> 메서드는 하위 버전의는 <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)">
          <source>If no custom type descriptor can be located for an object, <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> is called to perform normal reflection against the object.</source>
          <target state="translated">사용자 지정 형식 설명자에 없는 개체를 찾을 수 없으면 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> 개체에 대해 일반 리플렉션을 수행 하기 위해 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)">
          <source>This method is prototyped as <ph id="ph1">&lt;see langword="virtual" /&gt;</ph>, and by default returns <ph id="ph2">&lt;paramref name="objectType" /&gt;</ph> if no parent provider was passed.</source>
          <target state="translated">이 메서드는로 프로토타입화 <ph id="ph1">&lt;see langword="virtual" /&gt;</ph>, 및 기본 리턴으로 <ph id="ph2">&lt;paramref name="objectType" /&gt;</ph> 없는 부모 공급자가 전달 하는 경우.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)">
          <source>If a parent provider was passed, this method will invoke the parent provider's <ph id="ph1">&lt;see cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetReflectionType" /&gt;</ph> method.</source>
          <target state="translated">부모 공급자 전달 된 경우이 메서드는 부모 공급자를 호출 <ph id="ph1">&lt;see cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetReflectionType" /&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)">
          <source>The type to convert to its runtime equivalent.</source>
          <target state="translated">해당되는 런타임 형식으로 변환할 형식입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)">
          <source>Converts a reflection type into a runtime type.</source>
          <target state="translated">리플렉션 형식을 런타임 형식으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the runtime equivalent of <ph id="ph2">&lt;paramref name="reflectionType" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="reflectionType" /&gt;</ph>의 런타임 형식을 나타내는 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A&gt;</ph> method reverses the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> method to convert a reflection type back into a runtime type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A&gt;</ph> 메서드 역순으로 <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> 리플렉션 형식을 변환 하는 메서드는 런타임 형식이 스풀링됩니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)">
          <source>Using the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A&gt;</ph> method is preferred over using the <ph id="ph2">&lt;xref:System.Type.UnderlyingSystemType%2A&gt;</ph> property, which was used in earlier versions to return the runtime type.</source>
          <target state="translated">사용 하는 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A&gt;</ph> 방법이 사용 보다 선호 됩니다는 <ph id="ph2">&lt;xref:System.Type.UnderlyingSystemType%2A&gt;</ph> 이전 버전에서 런타임 형식을 반환 하는 데 사용 된 속성입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)">
          <source><ph id="ph1">&lt;paramref name="reflectionType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reflectionType" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>Gets a custom type descriptor for the given type or object.</source>
          <target state="translated">지정된 형식이나 개체의 사용자 지정 형식 설명자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)">
          <source>An instance of the type.</source>
          <target state="translated">형식의 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)">
          <source>Can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no instance was passed to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>.</source>
          <target state="translated">인스턴스가 <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>에 전달되지 않았으면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)">
          <source>Gets a custom type descriptor for the given object.</source>
          <target state="translated">지정된 개체의 사용자 지정 형식 설명자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ICustomTypeDescriptor" /&gt;</ph> that can provide metadata for the type.</source>
          <target state="translated">형식에 대한 메타데이터를 제공할 수 있는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.ICustomTypeDescriptor" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)">
          <source><ph id="ph1">&lt;paramref name="instance" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="instance" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)">
          <source>The type of object for which to retrieve the type descriptor.</source>
          <target state="translated">형식 설명자를 검색할 개체의 형식입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)">
          <source>Gets a custom type descriptor for the given type.</source>
          <target state="translated">지정된 형식의 사용자 지정 형식 설명자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ICustomTypeDescriptor" /&gt;</ph> that can provide metadata for the type.</source>
          <target state="translated">형식에 대한 메타데이터를 제공할 수 있는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.ICustomTypeDescriptor" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
          <source>The type of object for which to retrieve the type descriptor.</source>
          <target state="translated">형식 설명자를 검색할 개체의 형식입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
          <source>An instance of the type.</source>
          <target state="translated">형식의 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
          <source>Can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no instance was passed to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>.</source>
          <target state="translated">인스턴스가 <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>에 전달되지 않았으면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
          <source>Gets a custom type descriptor for the given type and object.</source>
          <target state="translated">지정된 형식과 개체의 사용자 지정 형식 설명자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ICustomTypeDescriptor" /&gt;</ph> that can provide metadata for the type.</source>
          <target state="translated">형식에 대한 메타데이터를 제공할 수 있는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.ICustomTypeDescriptor" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
          <source>This method is prototyped as <ph id="ph1">`virtual`</ph> and, by default, returns an empty descriptor if no parent provider was passed.</source>
          <target state="translated">이 메서드는로 프로토타입화 <ph id="ph1">`virtual`</ph> 및 없는 부모 공급자가 전달 하는 경우 기본적으로 빈 설명자를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
          <source>If a parent provider was passed, this method will invoke the parent provider's <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> method.</source>
          <target state="translated">부모 공급자 전달 된 경우이 메서드는 부모 공급자를 호출 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)" /&gt;</ph> method should return a custom type descriptor for the object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)" /&gt;</ph> 메서드는 개체에 대 한 사용자 지정 형식 설명자를 반환 해야 합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
          <source>If the method does not provide type information for the object, it should return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">반환 해야 하는 경우는 메서드는 개체에 대 한 형식 정보를 제공 하지 않습니다, <ph id="ph1">&lt;see langword="null" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)">
          <source>The type to test for compatibility.</source>
          <target state="translated">호환성을 테스트할 형식입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)">
          <source>Gets a value that indicates whether the specified type is compatible with the type description and its chain of type description providers.</source>
          <target state="translated">지정된 형식이 형식 설명 및 형식 설명 공급자의 체인과 호환되는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="type" /&gt;</ph> is compatible with the type description and its chain of type description providers; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="type" /&gt;</ph>이 형식 설명 및 형식 설명 공급자의 체인과 호환되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>