<Type Name="AttributeCollection" FullName="System.ComponentModel.AttributeCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="94da5dea078376ed0dabeaa993c206de6906aa3c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30370167" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AttributeCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AttributeCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.AttributeCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class AttributeCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class AttributeCollection : System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="8f95f-101">특성 컬렉션을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8f95f-101">Represents a collection of attributes.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f95f-102"><xref:System.ComponentModel.AttributeCollection> 클래스는 읽기 전용; 특성을 추가 하거나 제거할 메서드를 구현 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-102">The <xref:System.ComponentModel.AttributeCollection> class is read-only; it does not implement methods to add or remove attributes.</span></span> <span data-ttu-id="8f95f-103">이러한 메서드를 구현 하려면이 클래스에서 상속 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-103">You must inherit from this class to implement these methods.</span></span>  
  
 <span data-ttu-id="8f95f-104">사용 하 여는 <xref:System.ComponentModel.AttributeCollection.Count%2A> 속성을 컬렉션에 존재 하는 특성 수를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-104">Use the <xref:System.ComponentModel.AttributeCollection.Count%2A> property to find the number of attributes that exist in the collection.</span></span>  
  
 <span data-ttu-id="8f95f-105">또한 컬렉션의 내용에 대해 쿼리를이 클래스의 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-105">You can also use the methods of this class to query the collection about its contents.</span></span> <span data-ttu-id="8f95f-106">호출 된 <xref:System.ComponentModel.AttributeCollection.Contains%2A> 메서드를 지정 된 특성 또는 특성 배열을 컬렉션에 있는지 확인 하십시오.</span><span class="sxs-lookup"><span data-stu-id="8f95f-106">Call the <xref:System.ComponentModel.AttributeCollection.Contains%2A> method to verify that a specified attribute or attribute array exists in the collection.</span></span> <span data-ttu-id="8f95f-107">호출 된 <xref:System.ComponentModel.AttributeCollection.Matches%2A> 메서드를 지정 된 특성 또는 특성으로 이루어진 배열 컬렉션에 있는지와 지정된 된 특성의 값 컬렉션에 있는 값과 동일한 지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-107">Call the <xref:System.ComponentModel.AttributeCollection.Matches%2A> method to verify that a specified attribute or array of attributes exists in the collection, and that the values of the specified attributes are the same as the values in the collection.</span></span>  
  
 <span data-ttu-id="8f95f-108">대부분의 특성에 기본값이 있는 동안에 기본값이 필요 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-108">While most attributes have default values, default values are not required.</span></span> <span data-ttu-id="8f95f-109">특성에 기본값이 없는 경우 `null` 형식을 사용 하는 인덱싱된 속성에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-109">If an attribute has no default value, `null` is returned from the indexed property that takes a type.</span></span> <span data-ttu-id="8f95f-110">사용자 지정 특성을 정의할 때 기본값을 "Default" 라는 특성 형식의 공용 정적 필드를 정의 하거나 인수를 사용 하지 않는 생성자를 제공 하 여 선언할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-110">When defining your own attributes, you can declare a default value by either providing a constructor that takes no arguments, or defining a public static field of your attribute type named "Default".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f95f-111">첫 번째 코드 예제를 확인 여부는 <xref:System.ComponentModel.BrowsableAttribute> 이 컬렉션을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-111">The first code example checks to see whether the <xref:System.ComponentModel.BrowsableAttribute> has been set in this collection.</span></span> <span data-ttu-id="8f95f-112">실제 값을 설정 하는 두 번째 코드 예제는 <xref:System.ComponentModel.DescriptionAttribute> 단추에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-112">The second code example gets the actual value of the <xref:System.ComponentModel.DescriptionAttribute> for a button.</span></span> <span data-ttu-id="8f95f-113">두 예제를 진행 하려면 `button1` 및 `textBox1` 폼에 만들었습니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-113">Both examples require that `button1` and `textBox1` have been created on a form.</span></span> <span data-ttu-id="8f95f-114">특성을 사용 하는 경우 특성 설정 되어 또는 해당 값에 액세스를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-114">When using attributes, verify that an attribute has been set, or access its value.</span></span>  
  
 [!code-cpp[Classic AttributeCollection Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection Example/VB/source.vb#1)]  
  
 [!code-cpp[Classic AttributeCollection Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection Example/CPP/source.cpp#2)]
 [!code-csharp[Classic AttributeCollection Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection Example/CS/source.cs#2)]
 [!code-vb[Classic AttributeCollection Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection Example/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.ComponentModel.BrowsableAttribute" />
    <altmember cref="T:System.ComponentModel.DescriptionAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8f95f-115">
            <see cref="T:System.ComponentModel.AttributeCollection" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-115">Initializes a new instance of the <see cref="T:System.ComponentModel.AttributeCollection" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AttributeCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AttributeCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8f95f-116">
            <see cref="T:System.ComponentModel.AttributeCollection" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-116">Initializes a new instance of the <see cref="T:System.ComponentModel.AttributeCollection" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AttributeCollection (params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.#ctor(System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray attributes As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AttributeCollection(... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="attributes">
          <span data-ttu-id="8f95f-117">이 컬렉션의 특성을 제공하는 <see cref="T:System.Attribute" /> 형식의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-117">An array of type <see cref="T:System.Attribute" /> that provides the attributes for this collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8f95f-118">
            <see cref="T:System.ComponentModel.AttributeCollection" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-118">Initializes a new instance of the <see cref="T:System.ComponentModel.AttributeCollection" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8f95f-119">다음 코드 예제에서는 새 <xref:System.ComponentModel.AttributeCollection> 에서 특성을 사용 하 여 `button1`합니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-119">The following code example creates a new <xref:System.ComponentModel.AttributeCollection> using the attributes on `button1`.</span></span> <span data-ttu-id="8f95f-120">있다고 가정 `button1` 폼에서 만들어진 것입니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-120">It assumes that `button1` has been created on a form.</span></span>  
  
 [!code-cpp[Classic AttributeCollection.AttributeCollection Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.AttributeCollection Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.AttributeCollection Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.AttributeCollection Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.AttributeCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.AttributeCollection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8f95f-121">
            <paramref name="attributes" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-121">
              <paramref name="attributes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="protected virtual Attribute[] Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Attribute[] Attributes" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AttributeCollection.Attributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Attributes As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property cli::array &lt;Attribute ^&gt; ^ Attributes { cli::array &lt;Attribute ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8f95f-122">특성 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-122">Gets the attribute collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8f95f-123">특성 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-123">The attribute collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8f95f-124">이 특성 컬렉션에 지정된 특성 또는 특성 배열이 있는지 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-124">Determines whether this collection of attributes has the specified attribute or array of attributes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (Attribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Attribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.Contains(System.Attribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(Attribute ^ attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Attribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="8f95f-125">컬렉션에서 찾을 <see cref="T:System.Attribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-125">An <see cref="T:System.Attribute" /> to find in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8f95f-126">이 특성 컬렉션에 지정된 특성이 있는지 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-126">Determines whether this collection of attributes has the specified attribute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8f95f-127">컬렉션에 해당 특성이 포함되어 있거나 해당 특성 형식에 대한 기본 특성이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-127">
              <see langword="true" /> if the collection contains the attribute or is the default attribute for the type of attribute; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f95f-128">이 컬렉션에 특성의 지정 된 형식 컬렉션에 있으면이 고 지정된 된 특성의 값이 컬렉션에 있는 특성의 인스턴스 값과 동일 하 게 지정 된 특성이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-128">This collection has the specified attribute if the specified type of attribute exists in the collection, and if the value of the specified attribute is the same as the value of the instance of the attribute in the collection.</span></span>  
  
 <span data-ttu-id="8f95f-129">차이 <xref:System.ComponentModel.AttributeCollection.Matches%2A> 및 <xref:System.ComponentModel.AttributeCollection.Contains%2A> 메서드는 <xref:System.ComponentModel.AttributeCollection.Matches%2A> 호출은 <xref:System.Attribute.Match%2A> 특성에 대 한 메서드 및 <xref:System.ComponentModel.AttributeCollection.Contains%2A> 호출은 <xref:System.Object.Equals%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8f95f-129">The difference between the <xref:System.ComponentModel.AttributeCollection.Matches%2A> and <xref:System.ComponentModel.AttributeCollection.Contains%2A> methods is that <xref:System.ComponentModel.AttributeCollection.Matches%2A> calls the <xref:System.Attribute.Match%2A> method on an attribute, and <xref:System.ComponentModel.AttributeCollection.Contains%2A> calls the <xref:System.Object.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="8f95f-130">대부분의 특성에 대 한 이러한 메서드는 동일한 작업을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-130">For most attributes, these methods do the same thing.</span></span> <span data-ttu-id="8f95f-131">그러나 여러 플래그를 가질 수 있는 특성에 대 한 <xref:System.Attribute.Match%2A> 반환 되도록 일반적으로 구현 됩니다 `true` 플래그 중 하나라도 충족 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-131">For attributes that may have multiple flags, however, <xref:System.Attribute.Match%2A> is typically implemented so that it returns `true` if any of the flags are satisfied.</span></span> <span data-ttu-id="8f95f-132">예를 들어 "SupportsSql", "SupportsOleDb" 및 "SupportsXml" 부울 플래그와 함께 데이터 바인딩 특성을 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-132">For example, consider a data binding attribute with the Boolean flags "SupportsSql", "SupportsOleDb", and "SupportsXml".</span></span> <span data-ttu-id="8f95f-133">이 특성은 세 가지 데이터 바인딩 방법을 모두 지 원하는 속성에 존재할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-133">This attribute may be present on a property that supports all three data-binding approaches.</span></span> <span data-ttu-id="8f95f-134">프로그래머는 특정 방식을 사용 가능한 있는지만 알고 있어야 하는 경우 경우가 일부만 3입니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-134">It will often be the case that a programmer needs to know only if a particular approach is available, not all three.</span></span> <span data-ttu-id="8f95f-135">따라서 사용할 수 <xref:System.Attribute.Match%2A> 프로그래머가 플래그를 포함 하는 특성의 인스턴스와 함께 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-135">Therefore, a programmer could use <xref:System.Attribute.Match%2A> with an instance of the attribute containing only the flags the programmer needs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f95f-136">다음 코드 예제에서는 컬렉션에 있는지 여부를 확인 하려면 한 <xref:System.ComponentModel.BrowsableAttribute> 로 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-136">The following code example checks to see whether the collection has a <xref:System.ComponentModel.BrowsableAttribute> set to `true`.</span></span> <span data-ttu-id="8f95f-137">있다고 가정 `button1` 및 `textBox1` 폼에 만들었습니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-137">It assumes that `button1` and `textBox1` have been created on a form.</span></span>  
  
 [!code-cpp[Classic AttributeCollection.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.Contains(System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (attributes As Attribute()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="attributes">
          <span data-ttu-id="8f95f-138">컬렉션에서 찾을 <see cref="T:System.Attribute" /> 형식의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-138">An array of type <see cref="T:System.Attribute" /> to find in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8f95f-139">이 특성 컬렉션에 특성 배열의 지정된 특성이 모두 포함되어 있는지 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-139">Determines whether this attribute collection contains all the specified attributes in the attribute array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8f95f-140">컬렉션에 모든 특성이 포함되어 있으면 <see langword="true" />이고 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-140">
              <see langword="true" /> if the collection contains all the attributes; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f95f-141">이 컬렉션에 지정한 특성 배열을 모든 지정 된 특성 형식 컬렉션에 존재 하 고 지정 된 배열의 각 특성의 특성 컬렉션에 같은 경우</span><span class="sxs-lookup"><span data-stu-id="8f95f-141">This collection has the specified array of attributes if all the specified attribute types exist in the collection and if each attribute in the specified array is the same as an attribute in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f95f-142">특성을 비교 하는 다음 코드 예제에서는 `button1` 및 `textBox1` 단추에 대 한 특성 텍스트 상자에 대 한 특성에 포함 되어 있는지를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-142">The following code example compares the attributes in `button1` and `textBox1` to see whether the attributes for the button are contained in the attributes for the text box.</span></span> <span data-ttu-id="8f95f-143">있다고 가정 두 `button1` 및 `textBox1` 폼에 만들었습니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-143">It assumes that both `button1` and `textBox1` have been created on a form.</span></span>  
  
 [!code-cpp[Classic AttributeCollection.Contains1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.Contains1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.Contains1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.Contains1 Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.Contains1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.Contains1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="8f95f-144">컬렉션을 복사할 대상 <see cref="T:System.Array" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-144">The <see cref="T:System.Array" /> to copy the collection to.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="8f95f-145">복사를 시작할 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-145">The index to start from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8f95f-146">컬렉션을 지정된 인덱스에서 시작하여 배열에 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-146">Copies the collection to an array, starting at the specified index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AttributeCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8f95f-147">특성의 개수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-147">Gets the number of attributes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8f95f-148">특성의 개수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-148">The number of attributes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f95f-149">사용할 수는 <xref:System.ComponentModel.AttributeCollection.Count%2A> 속성을 개체의 컬렉션을 반복 하는 루프의 한계를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-149">You can use the <xref:System.ComponentModel.AttributeCollection.Count%2A> property to set the limits of a loop that iterates through a collection of objects.</span></span> <span data-ttu-id="8f95f-150">컬렉션은 0에서 시작 하는 경우 사용 해야 `Count - 1` 루프의 상한값으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-150">If the collection is zero-based, be sure to use `Count - 1` as the upper boundary of the loop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f95f-151">다음 코드 예제에서는 <xref:System.ComponentModel.AttributeCollection.Count%2A> 속성에는 다양 한 속성을 인쇄 하려면 `button1` 텍스트 상자에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-151">The following code example uses the <xref:System.ComponentModel.AttributeCollection.Count%2A> property to print the number of properties on `button1` in a text box.</span></span> <span data-ttu-id="8f95f-152">있다고 가정 `button1` 및 `textBox1` 폼에 만들었습니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-152">It assumes that `button1` and `textBox1` have been created on a form.</span></span>  
  
 [!code-cpp[Classic AttributeCollection.Count Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.Count Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.Count Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.Count Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.AttributeCollection Empty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.AttributeCollection Empty" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.AttributeCollection.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Empty As AttributeCollection " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::ComponentModel::AttributeCollection ^ Empty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8f95f-153">새 컬렉션을 만드는 대신 사용할 수 있는 빈 컬렉션을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-153">Specifies an empty collection that you can use, rather than creating a new one.</span>
          </span>
          <span data-ttu-id="8f95f-154">이 필드는 읽기 전용입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-154">This field is read-only.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromExisting">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.AttributeCollection FromExisting (System.ComponentModel.AttributeCollection existing, params Attribute[] newAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.AttributeCollection FromExisting(class System.ComponentModel.AttributeCollection existing, class System.Attribute[] newAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.FromExisting(System.ComponentModel.AttributeCollection,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromExisting (existing As AttributeCollection, ParamArray newAttributes As Attribute()) As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::AttributeCollection ^ FromExisting(System::ComponentModel::AttributeCollection ^ existing, ... cli::array &lt;Attribute ^&gt; ^ newAttributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="existing" Type="System.ComponentModel.AttributeCollection" />
        <Parameter Name="newAttributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="existing">
          <span data-ttu-id="8f95f-155">복사본을 만들 <see cref="T:System.ComponentModel.AttributeCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-155">An <see cref="T:System.ComponentModel.AttributeCollection" /> from which to create the copy.</span>
          </span>
        </param>
        <param name="newAttributes">
          <span data-ttu-id="8f95f-156">이 컬렉션의 특성을 제공하는 <see cref="T:System.Attribute" /> 형식의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-156">An array of type <see cref="T:System.Attribute" /> that provides the attributes for this collection.</span>
          </span>
          <span data-ttu-id="8f95f-157">
            <see langword="null" />일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-157">Can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8f95f-158">기존 <see cref="T:System.ComponentModel.AttributeCollection" />에서 새 <see cref="T:System.ComponentModel.AttributeCollection" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-158">Creates a new <see cref="T:System.ComponentModel.AttributeCollection" /> from an existing <see cref="T:System.ComponentModel.AttributeCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8f95f-159">
            <paramref name="existing" />의 복사본인 새 <see cref="T:System.ComponentModel.AttributeCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-159">A new <see cref="T:System.ComponentModel.AttributeCollection" /> that is a copy of <paramref name="existing" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f95f-160">경우는 `newAttributes` 매개 변수가 제공 된 해당 <xref:System.Attribute> 의 항목을 병합 하는 `existing` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-160">If the `newAttributes` parameter is provided, its <xref:System.Attribute> entries are merged with those of the `existing` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8f95f-161">
            <paramref name="existing" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-161">
              <paramref name="existing" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultAttribute">
      <MemberSignature Language="C#" Value="protected Attribute GetDefaultAttribute (Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Attribute GetDefaultAttribute(class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.GetDefaultAttribute(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetDefaultAttribute (attributeType As Type) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Attribute ^ GetDefaultAttribute(Type ^ attributeType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="8f95f-162">검색할 특성의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-162">The <see cref="T:System.Type" /> of the attribute to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8f95f-163">지정된 <see cref="T:System.Attribute" />의 기본 <see cref="T:System.Type" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-163">Returns the default <see cref="T:System.Attribute" /> of a given <see cref="T:System.Type" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8f95f-164">지정된 <paramref name="attributeType" />의 기본 <see cref="T:System.Attribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-164">The default <see cref="T:System.Attribute" /> of a given <paramref name="attributeType" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8f95f-165">이 컬렉션의 열거자를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-165">Gets an enumerator for this collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8f95f-166">
            <see cref="T:System.Collections.IEnumerator" /> 형식의 열거자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-166">An enumerator of type <see cref="T:System.Collections.IEnumerator" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8f95f-167">다음 코드 예제는 특성에 대 한 열거자를 가져옵니다 `button1`합니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-167">The following code example gets an enumerator for the attributes on `button1`.</span></span> <span data-ttu-id="8f95f-168">열거자를 사용 하 여 컬렉션에 있는 특성의 이름을 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-168">It uses the enumerator to print the names of the attributes in the collection.</span></span> <span data-ttu-id="8f95f-169">있다고 가정 `button1` 및 `textBox1` 폼에 만들었습니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-169">It assumes that `button1` and `textBox1` have been created on a form.</span></span>  
  
 [!code-cpp[Classic AttributeCollection.GetEnumerator Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.GetEnumerator Example/CPP/Source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.GetEnumerator Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.GetEnumerator Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.GetEnumerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.GetEnumerator Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8f95f-170">지정된 인덱스가 있는 특성을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-170">Gets the attribute with the specified index.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual Attribute this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Attribute Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AttributeCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(index As Integer) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Attribute ^ default[int] { Attribute ^ get(int index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="8f95f-171">
            <see cref="T:System.ComponentModel.AttributeCollection" />의 인덱스이며 0에서 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-171">The zero-based index of <see cref="T:System.ComponentModel.AttributeCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8f95f-172">지정된 인덱스 번호가 있는 특성을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-172">Gets the attribute with the specified index number.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8f95f-173">지정된 인덱스 번호가 있는 <see cref="T:System.Attribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-173">The <see cref="T:System.Attribute" /> with the specified index number.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f95f-174">인덱스 번호는 0부터 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-174">The index number is zero-based.</span></span> <span data-ttu-id="8f95f-175">따라서 1을 빼야 위치는 특정 숫자에서 <xref:System.Attribute> 에 액세스 하려면 해당 <xref:System.Attribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-175">Therefore, you must subtract 1 from the numerical position of a particular <xref:System.Attribute> to access that <xref:System.Attribute>.</span></span> <span data-ttu-id="8f95f-176">예를 들어, 세 번째 가져오려는 <xref:System.Attribute>를 지정 하면 `myColl[2]`합니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-176">For example, to get the third <xref:System.Attribute>, you need to specify `myColl[2]`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f95f-177">다음 코드 예제에서는 <xref:System.ComponentModel.AttributeCollection.Item%2A> 속성의 이름을 출력 하는 <xref:System.Attribute> 텍스트 상자에 인덱스 번호로 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-177">The following code example uses the <xref:System.ComponentModel.AttributeCollection.Item%2A> property to print the name of the <xref:System.Attribute> specified by the index number in a text box.</span></span> <span data-ttu-id="8f95f-178">이 코드 예제에서는 두 번째의 이름을 출력 인덱스 번호는 0부터 시작 하므로 <xref:System.Attribute> 텍스트 상자에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-178">Because the index number is zero-based, this code example prints the name of the second <xref:System.Attribute> in a text box.</span></span> <span data-ttu-id="8f95f-179">가정 `button1` 및 `textBox1` 폼에 만들었습니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-179">It assumes `button1` and `textBox1` have been created on a form.</span></span>  
  
 [!code-cpp[Classic AttributeCollection.this Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.this Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.this Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual Attribute this[Type attributeType] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Attribute Item(class System.Type)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AttributeCollection.Item(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(attributeType As Type) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Attribute ^ default[Type ^] { Attribute ^ get(Type ^ attributeType); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="8f95f-180">목록에서 가져올 <see cref="T:System.Type" />의 <see cref="T:System.Attribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-180">The <see cref="T:System.Type" /> of the <see cref="T:System.Attribute" /> to get from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8f95f-181">지정된 형식의 특성을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-181">Gets the attribute with the specified type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8f95f-182">지정된 형식의 <see cref="T:System.Attribute" />이거나, 해당 특성이 없으면 해당 특성 형식의 기본값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-182">The <see cref="T:System.Attribute" /> with the specified type or, if the attribute does not exist, the default value for the attribute type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f95f-183">특성 컬렉션에 없는 경우이 속성 특성 유형에 대 한 기본값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-183">If the attribute does not exist in the collection, this property returns the default value for the attribute type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f95f-184">다음 코드 예제에서는 <xref:System.ComponentModel.DesignerAttribute> 컬렉션에서 해당 값을 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-184">The following code example gets the <xref:System.ComponentModel.DesignerAttribute> from the collection and prints its value.</span></span> <span data-ttu-id="8f95f-185">있다고 가정 `button1` 및 `textBox1` 폼에 만들었습니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-185">It assumes that `button1` and `textBox1` have been created on a form.</span></span>  
  
 <span data-ttu-id="8f95f-186">이 코드 예제를 실행 하려면 정규화 된 어셈블리 이름을 제공 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-186">For this code example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="8f95f-187">정규화 된 어셈블리 이름을 확인 하는 방법에 대 한 정보를 참조 하십시오. [어셈블리 이름을](~/docs/framework/app-domains/assembly-names.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-187">For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/framework/app-domains/assembly-names.md).</span></span>  
  
 [!code-cpp[Classic AttributeCollection.this1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.this1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.this1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.this1 Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.this1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.this1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Matches">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8f95f-188">지정된 특성 또는 특성 배열이 컬렉션의 특성 또는 특성 배열과 같은지 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-188">Determines whether a specified attribute or array of attributes is the same as an attribute or array of attributes in the collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public bool Matches (Attribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Matches(class System.Attribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.Matches(System.Attribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Matches(Attribute ^ attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Attribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="8f95f-189">이 컬렉션의 특성과 비교할 <see cref="T:System.Attribute" />의 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-189">An instance of <see cref="T:System.Attribute" /> to compare with the attributes in this collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8f95f-190">지정된 특성이 컬렉션의 특성과 같은지 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-190">Determines whether a specified attribute is the same as an attribute in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8f95f-191">해당 특성이 컬렉션 내에 포함되어 있으며 컬렉션의 특성과 같은 값을 가지면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-191">
              <see langword="true" /> if the attribute is contained within the collection and has the same value as the attribute in the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f95f-192">특성에는 일치에 대 한 지원을 제공할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-192">An attribute can provide support for matching.</span></span>  
  
 <span data-ttu-id="8f95f-193">차이 <xref:System.ComponentModel.AttributeCollection.Matches%2A> 및 <xref:System.ComponentModel.AttributeCollection.Contains%2A> 메서드는 <xref:System.ComponentModel.AttributeCollection.Matches%2A> 호출은 <xref:System.Attribute.Match%2A> 특성에 대 한 메서드 및 <xref:System.ComponentModel.AttributeCollection.Contains%2A> 호출은 <xref:System.Object.Equals%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8f95f-193">The difference between the <xref:System.ComponentModel.AttributeCollection.Matches%2A> and <xref:System.ComponentModel.AttributeCollection.Contains%2A> methods is that <xref:System.ComponentModel.AttributeCollection.Matches%2A> calls the <xref:System.Attribute.Match%2A> method on an attribute, and <xref:System.ComponentModel.AttributeCollection.Contains%2A> calls the <xref:System.Object.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="8f95f-194">대부분의 특성에 대 한 이러한 메서드는 동일한 작업을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-194">For most attributes, these methods do the same thing.</span></span> <span data-ttu-id="8f95f-195">그러나 여러 플래그를 가질 수 있는 특성에 대 한 <xref:System.Attribute.Match%2A> 반환 되도록 일반적으로 구현 됩니다 `true` 플래그 중 하나라도 충족 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-195">For attributes that may have multiple flags, however, <xref:System.Attribute.Match%2A> is typically implemented so that it returns `true` if any of the flags are satisfied.</span></span> <span data-ttu-id="8f95f-196">예를 들어 "SupportsSql", "SupportsOleDb" 및 "SupportsXml" 부울 플래그와 함께 데이터 바인딩 특성을 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-196">For example, consider a data binding attribute with the Boolean flags "SupportsSql", "SupportsOleDb", and "SupportsXml".</span></span> <span data-ttu-id="8f95f-197">이 특성은 세 가지 데이터 바인딩 방법을 모두 지 원하는 속성에 존재할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-197">This attribute may be present on a property that supports all three data binding approaches.</span></span> <span data-ttu-id="8f95f-198">프로그래머는 특정 방식을 사용 가능한 있는지만 알고 있어야 하는 경우 경우가 일부만 3입니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-198">It will often be the case that a programmer needs to know only if a particular approach is available, not all three.</span></span> <span data-ttu-id="8f95f-199">따라서 사용할 수 <xref:System.Attribute.Match%2A> 프로그래머가 플래그를 포함 하는 특성의 인스턴스와 함께 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-199">Therefore, a programmer could use <xref:System.Attribute.Match%2A> with an instance of the attribute containing only the flags the programmer needs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f95f-200">다음 코드 예제를 확인 하 고 <xref:System.ComponentModel.BrowsableAttribute> 컬렉션의 멤버 이며 설정 된 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-200">The following code example verifies that the <xref:System.ComponentModel.BrowsableAttribute> is a member of the collection and that it has been set to `true`.</span></span> <span data-ttu-id="8f95f-201">있다고 가정 `button1` 및 `textBox1` 폼에 만들었습니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-201">It assumes that `button1` and `textBox1` have been created on a form.</span></span>  
  
 [!code-cpp[Classic AttributeCollection.Matches Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.Matches Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.Matches Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.Matches Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.Matches Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.Matches Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.ComponentModel.BrowsableAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public bool Matches (Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Matches(class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.Matches(System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Matches (attributes As Attribute()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Matches(cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="attributes">
          <span data-ttu-id="8f95f-202">이 컬렉션의 특성과 비교할 <see cref="T:System.CodeDom.MemberAttributes" />의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-202">An array of <see cref="T:System.CodeDom.MemberAttributes" /> to compare with the attributes in this collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8f95f-203">지정된 배열의 특성이 컬렉션의 특성과 같은지 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-203">Determines whether the attributes in the specified array are the same as the attributes in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8f95f-204">배열의 모든 특성이 해당 컬렉션에 포함되어 있으며 해당 컬렉션의 특성과 같은 값을 가지고 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-204">
              <see langword="true" /> if all the attributes in the array are contained in the collection and have the same values as the attributes in the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f95f-205">특성에는 일치에 대 한 지원을 제공할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-205">An attribute can provide support for matching.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f95f-206">다음 코드 예제에서는 단추와 일치 하는지 여부를 확인 하려면 텍스트 상자에 있는 특성을 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-206">The following code example compares the attributes in a button and a text box to see whether they match.</span></span> <span data-ttu-id="8f95f-207">있다고 가정 `button1` 및 `textBox1` 폼에 만들었습니다.</span><span class="sxs-lookup"><span data-stu-id="8f95f-207">It assumes that `button1` and `textBox1` have been created on a form.</span></span>  
  
 [!code-cpp[Classic AttributeCollection.Matches1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.Matches1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.Matches1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.Matches1 Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.Matches1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.Matches1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AttributeCollection.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System.Collections.ICollection.Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8f95f-208">컬렉션에 포함된 요소 수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-208">Gets the number of elements contained in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8f95f-209">컬렉션에 포함된 요소 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-209">The number of elements contained in the collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AttributeCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8f95f-210">해당 컬렉션에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-210">Gets a value indicating whether access to the collection is synchronized (thread-safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8f95f-211">컬렉션에 대한 액세스가 동기화(스레드로부터 안전)되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-211">
              <see langword="true" /> if access to the collection is synchronized (thread-safe); otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AttributeCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8f95f-212">컬렉션에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-212">Gets an object that can be used to synchronize access to the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8f95f-213">컬렉션에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-213">An object that can be used to synchronize access to the collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8f95f-214">
            <see cref="T:System.Collections.IEnumerator" />의 <see cref="T:System.Collections.IDictionary" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-214">Returns an <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8f95f-215">
            <see cref="T:System.Collections.IEnumerator" />에 대한 <see cref="T:System.Collections.IDictionary" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f95f-215">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>