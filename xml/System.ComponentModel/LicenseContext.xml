<Type Name="LicenseContext" FullName="System.ComponentModel.LicenseContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="36358bae547ee049c63bead31ed1399ed286caf5" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37692087" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LicenseContext : IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LicenseContext extends System.Object implements class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.LicenseContext" />
  <TypeSignature Language="VB.NET" Value="Public Class LicenseContext&#xA;Implements IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class LicenseContext : IServiceProvider" />
  <TypeSignature Language="F#" Value="type LicenseContext = class&#xA;    interface IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="4a963-101">라이선스 있는 개체의 사용 가능 시기를 지정하고 도메인 내부에서 실행 중인 라이선스를 지원하는 데 필요한 추가 서비스를 얻는 방법을 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4a963-101">Specifies when you can use a licensed object and provides a way of obtaining additional services needed to support licenses running within its domain.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a963-102">이 클래스는 기본 제공 <xref:System.ComponentModel.LicenseContext>합니다.</span><span class="sxs-lookup"><span data-stu-id="4a963-102">This class provides the default <xref:System.ComponentModel.LicenseContext>.</span></span> <span data-ttu-id="4a963-103">런타임만 지원을 구현 하 고 라이선스 키를 저장 하는 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="4a963-103">It implements only run-time support and does not support saved license keys.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="4a963-104">
        <para>디자인 타임 라이선스 지원을 구현 하려는 경우이 클래스에서 상속 하 고 멤버를 재정의 해야 합니다. <see cref="P:System.ComponentModel.LicenseContext.UsageMode" />, <see cref="M:System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)" />, <see cref="M:System.ComponentModel.LicenseContext.GetService(System.Type)" />, 및 <see cref="M:System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)" />합니다. 라이선스 키를 저장 하는 구현 하려는 경우 재정의 <see cref="M:System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)" /> 고 <see cref="M:System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)" /> 메서드.  라이선스에 대 한 자세한 내용은 참조 하세요. [방법: 라이선스 구성 요소 및 컨트롤] (http://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57)합니다.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="4a963-104">
          <para>If you want to implement design-time license support, you must inherit from this class, and override the following members: <see cref="P:System.ComponentModel.LicenseContext.UsageMode" />, <see cref="M:System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)" />, <see cref="M:System.ComponentModel.LicenseContext.GetService(System.Type)" />, and <see cref="M:System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)" />. If you want to implement saved license keys, override the <see cref="M:System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)" /> and <see cref="M:System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)" /> methods.  For more information about licensing, see [How to: License Components and Controls](http://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57).</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.ComponentModel.License" />
    <altmember cref="T:System.ComponentModel.LicenseException" />
    <altmember cref="T:System.ComponentModel.LicenseManager" />
    <altmember cref="T:System.ComponentModel.LicenseProvider" />
    <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
    <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
    <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LicenseContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LicenseContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4a963-105">
            <see cref="T:System.ComponentModel.LicenseContext" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a963-105">Initializes a new instance of the <see cref="T:System.ComponentModel.LicenseContext" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSavedLicenseKey">
      <MemberSignature Language="C#" Value="public virtual string GetSavedLicenseKey (Type type, System.Reflection.Assembly resourceAssembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetSavedLicenseKey(class System.Type type, class System.Reflection.Assembly resourceAssembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetSavedLicenseKey(Type ^ type, System::Reflection::Assembly ^ resourceAssembly);" />
      <MemberSignature Language="F#" Value="abstract member GetSavedLicenseKey : Type * System.Reflection.Assembly -&gt; string&#xA;override this.GetSavedLicenseKey : Type * System.Reflection.Assembly -&gt; string" Usage="licenseContext.GetSavedLicenseKey (type, resourceAssembly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resourceAssembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="4a963-106">구성 요소의 형식을 나타내는 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a963-106">A <see cref="T:System.Type" /> that represents the type of component.</span>
          </span>
        </param>
        <param name="resourceAssembly">
          <span data-ttu-id="4a963-107">라이선스 키가 포함된 <see cref="T:System.Reflection.Assembly" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a963-107">An <see cref="T:System.Reflection.Assembly" /> with the license key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a963-108">파생 클래스에서 재정의된 경우 지정된 리소스 어셈블리로부터 지정된 형식에 대해 저장된 라이선스 키를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a963-108">When overridden in a derived class, returns a saved license key for the specified type, from the specified resource assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a963-109">지정된 형식에 대한 <see cref="P:System.ComponentModel.License.LicenseKey" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a963-109">The <see cref="P:System.ComponentModel.License.LicenseKey" /> for the specified type.</span>
          </span>
          <span data-ttu-id="4a963-110">사용자가 재정의하지 않는 경우 이 메서드는 <see langword="null" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a963-110">This method returns <see langword="null" /> unless you override it.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="4a963-111">
            <para>이 메서드를 재정의 하며 <see cref="M:System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)" /> 저장 된 라이선스 키를 구현 하는 방법입니다. 경우는 <paramref name="resourceAssembly" /> 매개 변수가 <see langword="null" />, 기본 실행 리소스를 검색할 수 있습니다 <see cref="T:System.Reflection.Assembly" />합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4a963-111">
              <para>Override this method and the <see cref="M:System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)" /> method to implement a saved license key. If the <paramref name="resourceAssembly" /> parameter is <see langword="null" />, then you can retrieve the resource from the primary executing <see cref="T:System.Reflection.Assembly" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseManager" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public virtual object GetService (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseContext.GetService(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetService(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member GetService : Type -&gt; obj&#xA;override this.GetService : Type -&gt; obj" Usage="licenseContext.GetService type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="4a963-112">검색할 서비스의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a963-112">The type of service to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a963-113">요청된 서비스를 사용할 수 있는 경우 해당 서비스를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a963-113">Gets the requested service, if it is available.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a963-114">서비스의 인스턴스입니다. 서비스를 찾을 수 없는 경우에는 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a963-114">An instance of the service, or <see langword="null" /> if the service cannot be found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSavedLicenseKey">
      <MemberSignature Language="C#" Value="public virtual void SetSavedLicenseKey (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSavedLicenseKey(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetSavedLicenseKey(Type ^ type, System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member SetSavedLicenseKey : Type * string -&gt; unit&#xA;override this.SetSavedLicenseKey : Type * string -&gt; unit" Usage="licenseContext.SetSavedLicenseKey (type, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="4a963-115">라이선스 키와 관련된 구성 요소를 나타내는 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a963-115">A <see cref="T:System.Type" /> that represents the component associated with the license key.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="4a963-116">구성 요소 형식에 대해 저장할 <see cref="P:System.ComponentModel.License.LicenseKey" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a963-116">The <see cref="P:System.ComponentModel.License.LicenseKey" /> to save for the type of component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a963-117">파생 클래스에서 재정의된 경우 지정된 형식에 대한 라이선스 키를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a963-117">When overridden in a derived class, sets a license key for the specified type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a963-118">일반적으로 설정 하는 경우이 메서드를 호출 <xref:System.ComponentModel.LicenseUsageMode> 디자인 타임.</span><span class="sxs-lookup"><span data-stu-id="4a963-118">Typically, call this method when you set <xref:System.ComponentModel.LicenseUsageMode> at design time.</span></span> <span data-ttu-id="4a963-119">재정의 해야 합니다는 <xref:System.ComponentModel.LicenseContext.UsageMode%2A> 속성을 디자인 타임 라이선스 지원을 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a963-119">You must override the <xref:System.ComponentModel.LicenseContext.UsageMode%2A> property to implement design-time license support.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="4a963-120">
            <para>이 메서드는 저장된 된 라이선스 키에 대 한 지원을 제공 하지 않습니다. 이 메서드를 재정의 하며 <see cref="M:System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)" /> 키를 구현 하는 방법입니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4a963-120">
              <para>This method does not provide support for a saved license key. Override this method and the <see cref="M:System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)" /> method to implement a key.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseManager" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
    <Member MemberName="UsageMode">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.LicenseUsageMode UsageMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.LicenseUsageMode UsageMode" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.LicenseContext.UsageMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UsageMode As LicenseUsageMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::LicenseUsageMode UsageMode { System::ComponentModel::LicenseUsageMode get(); };" />
      <MemberSignature Language="F#" Value="member this.UsageMode : System.ComponentModel.LicenseUsageMode" Usage="System.ComponentModel.LicenseContext.UsageMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.LicenseUsageMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a963-121">파생 클래스에서 재정의된 경우 라이선스의 사용 가능 시기를 지정하는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a963-121">When overridden in a derived class, gets a value that specifies when you can use a license.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a963-122">라이선스의 사용 가능 시기를 지정하는 <see cref="T:System.ComponentModel.LicenseUsageMode" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a963-122">One of the <see cref="T:System.ComponentModel.LicenseUsageMode" /> values that specifies when you can use a license.</span>
          </span>
          <span data-ttu-id="4a963-123">기본값은 <see cref="F:System.ComponentModel.LicenseUsageMode.Runtime" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a963-123">The default is <see cref="F:System.ComponentModel.LicenseUsageMode.Runtime" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="4a963-124">
            <para>디자인 타임 지원을 구현 하려면 상속 된 클래스에서이 속성을 재정의 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4a963-124">
              <para>To implement design-time support, override this property in a class that inherits.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseManager" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
  </Members>
</Type>