<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DesignerAttribute.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53eeb51e6c96eae74bd9552bf77a346b821b647a1.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3eeb51e6c96eae74bd9552bf77a346b821b647a1</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.DesignerAttribute">
          <source>Specifies the class used to implement design-time services for a component.</source>
          <target state="translated">구성 요소에 대한 디자인 타임 서비스를 구현하는 데 사용되는 클래스를 지정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DesignerAttribute">
          <source>The class you use for the design-time services must implement the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesigner&gt;</ph> interface.</source>
          <target state="translated">디자인 타임 서비스에 대 한 사용 하는 클래스를 구현 해야 합니다는 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesigner&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DesignerAttribute">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.DesignerAttribute.DesignerBaseTypeName%2A&gt;</ph> property to find the designer's base type.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.ComponentModel.DesignerAttribute.DesignerBaseTypeName%2A&gt;</ph> 속성 디자이너의 기본 형식을 찾으려고 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DesignerAttribute">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.DesignerAttribute.DesignerTypeName%2A&gt;</ph> property to get the name of the type of designer associated with this member.</source>
          <target state="translated">사용 된 <ph id="ph1">&lt;xref:System.ComponentModel.DesignerAttribute.DesignerTypeName%2A&gt;</ph> 이 멤버와 연결 된 디자이너 형식의 이름을 가져올 속성입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DesignerAttribute">
          <source>For more information, see <bpt id="p1">[</bpt>Attributes<ept id="p1">](~/docs/standard/attributes/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>특성<ept id="p1">](~/docs/standard/attributes/index.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DesignerAttribute">
          <source>The following example creates a class called <ph id="ph1">`MyForm`</ph>.</source>
          <target state="translated">다음 예에서는 라는 클래스를 만듭니다. <ph id="ph1">`MyForm`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DesignerAttribute">
          <source><ph id="ph1">`MyForm`</ph> has two attributes, a <ph id="ph2">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> that specifies this class uses the <ph id="ph3">&lt;xref:System.Windows.Forms.Design.DocumentDesigner&gt;</ph>, and a <ph id="ph4">&lt;xref:System.ComponentModel.DesignerCategoryAttribute&gt;</ph> that specifies the <ph id="ph5">&lt;xref:System.ComponentModel.DesignerCategoryAttribute.Form&gt;</ph> category.</source>
          <target state="translated"><ph id="ph1">`MyForm`</ph> 두 개의 특성이 <ph id="ph2">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> 이 클래스가 사용 하 여 지정 하는 <ph id="ph3">&lt;xref:System.Windows.Forms.Design.DocumentDesigner&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.ComponentModel.DesignerCategoryAttribute&gt;</ph> 지정 하는 <ph id="ph5">&lt;xref:System.ComponentModel.DesignerCategoryAttribute.Form&gt;</ph> 범주입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DesignerAttribute">
          <source>The next example creates an instance of <ph id="ph1">`MyForm`</ph>.</source>
          <target state="translated">다음 예제에서는의 인스턴스를 만들고 <ph id="ph1">`MyForm`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DesignerAttribute">
          <source>Then it gets the attributes for the class, extracts the <ph id="ph1">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph>, and prints the name of the designer.</source>
          <target state="translated">그런 다음 추출 클래스에 대 한 특성을 가져오고는 <ph id="ph1">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph>, 디자이너의 이름을 출력 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.DesignerAttribute">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignerAttribute" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignerAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DesignerAttribute.#ctor(System.String)">
          <source>The concatenation of the fully qualified name of the type that provides design-time services for the component this attribute is bound to, and the name of the assembly this type resides in.</source>
          <target state="translated">이 특성이 바인딩되는 구성 요소에 디자인 타임 서비스를 제공하는 형식의 정규화된 이름과 이 형식이 속하는 어셈블리의 이름을 연결합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DesignerAttribute.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignerAttribute" /&gt;</ph> class using the name of the type that provides design-time services.</source>
          <target state="translated">디자인 타임 서비스를 제공하는 형식의 이름을 사용하여 <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignerAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DesignerAttribute.#ctor(System.String)">
          <source>The class you use for the design-time services must implement the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesigner&gt;</ph> interface.</source>
          <target state="translated">디자인 타임 서비스에 대 한 사용 하는 클래스를 구현 해야 합니다는 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesigner&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DesignerAttribute.#ctor(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the class that provides design-time services for the component this attribute is bound to.</source>
          <target state="translated">이 특성이 바인딩되는 구성 요소에 디자인 타임 서비스를 제공하는 클래스를 나타내는 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DesignerAttribute.#ctor(System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignerAttribute" /&gt;</ph> class using the type that provides design-time services.</source>
          <target state="translated">디자인 타임 서비스를 제공하는 형식을 사용하여 <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignerAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DesignerAttribute.#ctor(System.Type)">
          <source>The class you use for the design-time services must implement the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesigner&gt;</ph> interface.</source>
          <target state="translated">디자인 타임 서비스에 대 한 사용 하는 클래스를 구현 해야 합니다는 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesigner&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DesignerAttribute.#ctor(System.String,System.String)">
          <source>The concatenation of the fully qualified name of the type that provides design-time services for the component this attribute is bound to, and the name of the assembly this type resides in.</source>
          <target state="translated">이 특성이 바인딩되는 구성 요소에 디자인 타임 서비스를 제공하는 형식의 정규화된 이름과 이 형식이 속하는 어셈블리의 이름을 연결합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DesignerAttribute.#ctor(System.String,System.String)">
          <source>The fully qualified name of the base class to associate with the designer class.</source>
          <target state="translated">디자이너 클래스와 연결할 기본 클래스의 정규화된 이름입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DesignerAttribute.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignerAttribute" /&gt;</ph> class using the designer type and the base class for the designer.</source>
          <target state="translated">디자이너 형식 및 디자이너 기본 클래스를 사용하여 <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignerAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DesignerAttribute.#ctor(System.String,System.String)">
          <source>The class you use for the design-time services must implement the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesigner&gt;</ph> interface.</source>
          <target state="translated">디자인 타임 서비스에 대 한 사용 하는 클래스를 구현 해야 합니다는 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesigner&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DesignerAttribute.#ctor(System.String,System.String)">
          <source>The <ph id="ph1">`designerBaseTypeName`</ph> parameter allows you to attach more than one type of designer for a given class.</source>
          <target state="translated"><ph id="ph1">`designerBaseTypeName`</ph> 매개 변수 둘 이상의 형식의 지정된 된 클래스에 대 한 디자이너 첨부할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DesignerAttribute.#ctor(System.String,System.Type)">
          <source>The concatenation of the fully qualified name of the type that provides design-time services for the component this attribute is bound to, and the name of the assembly this type resides in.</source>
          <target state="translated">이 특성이 바인딩되는 구성 요소에 디자인 타임 서비스를 제공하는 형식의 정규화된 이름과 이 형식이 속하는 어셈블리의 이름을 연결합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DesignerAttribute.#ctor(System.String,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the base class to associate with the <bpt id="p1">&lt;c&gt;</bpt>designerTypeName<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>designerTypeName<ept id="p1">&lt;/c&gt;</ept>과 연결할 기본 클래스를 나타내는 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DesignerAttribute.#ctor(System.String,System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignerAttribute" /&gt;</ph> class, using the name of the designer class and the base class for the designer.</source>
          <target state="translated">디자이너 클래스 이름 및 디자이너 기본 클래스를 사용하여 <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignerAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DesignerAttribute.#ctor(System.String,System.Type)">
          <source>The class you use for the design-time services must implement the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesigner&gt;</ph> interface.</source>
          <target state="translated">디자인 타임 서비스에 대 한 사용 하는 클래스를 구현 해야 합니다는 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesigner&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DesignerAttribute.#ctor(System.String,System.Type)">
          <source>The <ph id="ph1">`designerBaseType`</ph> parameter allows you to attach more than one type of designer for a given class.</source>
          <target state="translated"><ph id="ph1">`designerBaseType`</ph> 매개 변수 둘 이상의 형식의 지정된 된 클래스에 대 한 디자이너 첨부할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DesignerAttribute.#ctor(System.Type,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the class that provides design-time services for the component this attribute is bound to.</source>
          <target state="translated">이 특성이 바인딩되는 구성 요소에 디자인 타임 서비스를 제공하는 클래스를 나타내는 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DesignerAttribute.#ctor(System.Type,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the base class to associate with the <bpt id="p1">&lt;c&gt;</bpt>designerType<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>designerType<ept id="p1">&lt;/c&gt;</ept>과 연결할 기본 클래스를 나타내는 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DesignerAttribute.#ctor(System.Type,System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignerAttribute" /&gt;</ph> class using the types of the designer and designer base class.</source>
          <target state="translated">디자이너 형식 및 디자이너 기본 클래스를 사용하여 <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignerAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DesignerAttribute.#ctor(System.Type,System.Type)">
          <source>The class you use for the design-time services must implement the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesigner&gt;</ph> interface.</source>
          <target state="translated">디자인 타임 서비스에 대 한 사용 하는 클래스를 구현 해야 합니다는 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesigner&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DesignerAttribute.#ctor(System.Type,System.Type)">
          <source>The <ph id="ph1">`designerBaseType`</ph> parameter allows you to attach more than one type of designer for a given class.</source>
          <target state="translated"><ph id="ph1">`designerBaseType`</ph> 매개 변수 둘 이상의 형식의 지정된 된 클래스에 대 한 디자이너 첨부할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DesignerAttribute.DesignerBaseTypeName">
          <source>Gets the name of the base type of this designer.</source>
          <target state="translated">이 디자이너의 기본 형식 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DesignerAttribute.DesignerBaseTypeName">
          <source>The name of the base type of this designer.</source>
          <target state="translated">이 디자이너의 기본 형식 이름입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DesignerAttribute.DesignerTypeName">
          <source>Gets the name of the designer type associated with this designer attribute.</source>
          <target state="translated">이 디자이너 특성과 관련된 디자이너 형식 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DesignerAttribute.DesignerTypeName">
          <source>The name of the designer type associated with this designer attribute.</source>
          <target state="translated">이 디자이너 특성과 관련된 디자이너 형식 이름입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DesignerAttribute.Equals(System.Object)">
          <source>The object to test the value equality of.</source>
          <target state="translated">값이 같은지 테스트할 개체입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DesignerAttribute.Equals(System.Object)">
          <source>Returns whether the value of the given object is equal to the current <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignerAttribute" /&gt;</ph>.</source>
          <target state="translated">주어진 개체의 값이 현재 <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignerAttribute" /&gt;</ph>와 같은지 여부를 반환합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DesignerAttribute.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value of the given object is equal to that of the current; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">주어진 개체의 값이 현재 개체의 값과 같으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DesignerAttribute.GetHashCode">
          <source>Returns the hash code for this instance.</source>
          <target state="translated">이 인스턴스의 해시 코드를 반환합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DesignerAttribute.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">부호 있는 32비트 정수 해시 코드입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DesignerAttribute.TypeId">
          <source>Gets a unique ID for this attribute type.</source>
          <target state="translated">이 특성 형식의 고유 ID를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DesignerAttribute.TypeId">
          <source>A unique ID for this attribute type.</source>
          <target state="translated">이 특성 형식의 고유 ID입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DesignerAttribute.TypeId">
          <source>It is used by filtering algorithms to identify two attributes that are the same type.</source>
          <target state="translated">동일한 형식이 두 가지 특성을 식별 하려면 필터링 알고리즘에서 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DesignerAttribute.TypeId">
          <source>For most attributes, this just returns the <ph id="ph1">&lt;xref:System.Type&gt;</ph> instance for the attribute.</source>
          <target state="translated">대부분의 특성에 대 한이 반환 된 <ph id="ph1">&lt;xref:System.Type&gt;</ph> 특성에 대 한 인스턴스.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DesignerAttribute.TypeId">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> overrides this to include the type of the designer base type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> 디자이너는 기본 유형의 유형을 포함 하려면이 옵션을 재정의 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>