<Type Name="EditorAttribute" FullName="System.ComponentModel.EditorAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="495aede3622b9f43cf3fd2d0c3ad3202723ac3b8" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EditorAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EditorAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.EditorAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EditorAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class EditorAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.All, AllowMultiple=true, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="58ee8-101">속성을 변경하는 데 사용할 편집기를 지정합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="58ee8-101">Specifies the editor to use to change a property.</span>
      </span>
      <span data-ttu-id="58ee8-102">이 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="58ee8-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ee8-103">속성을 편집할 때 비주얼 디자이너 대화 상자 또는 드롭다운 창을 통해 지정된 된 편집기의 새 인스턴스를 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="58ee8-103">When editing the property, a visual designer should create a new instance of the specified editor through a dialog box or drop-down window.</span></span>  
  
 <span data-ttu-id="58ee8-104">사용 하 여는 <xref:System.ComponentModel.EditorAttribute.EditorBaseTypeName%2A> 속성이이 편집기의 기본 형식을 찾으려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="58ee8-104">Use the <xref:System.ComponentModel.EditorAttribute.EditorBaseTypeName%2A> property to find this editor's base type.</span></span> <span data-ttu-id="58ee8-105">만 사용할 수 있는 기본 형식이 <xref:System.Drawing.Design.UITypeEditor>합니다.</span><span class="sxs-lookup"><span data-stu-id="58ee8-105">The only available base type is <xref:System.Drawing.Design.UITypeEditor>.</span></span>  
  
 <span data-ttu-id="58ee8-106">사용 된 <xref:System.ComponentModel.EditorAttribute.EditorTypeName%2A> 이 특성과 관련 된 편집기의 형식의 이름을 가져올 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="58ee8-106">Use the <xref:System.ComponentModel.EditorAttribute.EditorTypeName%2A> property to get the name of the type of editor associated with this attribute.</span></span>  
  
 <span data-ttu-id="58ee8-107">에 대 한 일반적인 내용은 특성을 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="58ee8-107">For general information on using attributes.</span></span> <span data-ttu-id="58ee8-108">참조 [특성](~/docs/standard/attributes/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="58ee8-108">see [Attributes](~/docs/standard/attributes/index.md).</span></span> <span data-ttu-id="58ee8-109">디자인 타임 특성에 대 한 자세한 내용은 참조 하십시오. [특성 및 디자인 타임 지원](http://msdn.microsoft.com/library/7aed9eb4-124b-4a15-a0a3-458f37ac9ef7)합니다.</span><span class="sxs-lookup"><span data-stu-id="58ee8-109">For more information on design-time attributes, see [Attributes and Design-Time Support](http://msdn.microsoft.com/library/7aed9eb4-124b-4a15-a0a3-458f37ac9ef7).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58ee8-110">다음 코드 예제는 `MyImage` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="58ee8-110">The following code example creates the `MyImage` class.</span></span> <span data-ttu-id="58ee8-111">클래스는 표시 되는 <xref:System.ComponentModel.EditorAttribute> 지정 하는 <xref:System.Drawing.Design.ImageEditor> 해당 편집기로 합니다.</span><span class="sxs-lookup"><span data-stu-id="58ee8-111">The class is marked with an <xref:System.ComponentModel.EditorAttribute> that specifies the <xref:System.Drawing.Design.ImageEditor> as its editor.</span></span>  
  
 [!code-cpp[Classic EditorAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic EditorAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EditorAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic EditorAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic EditorAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic EditorAttribute Example/VB/source.vb#1)]  
  
 <span data-ttu-id="58ee8-112">다음 코드 예제에서는의 인스턴스를 만듭니다.는 `MyImage` 클래스는 클래스에 대 한 특성을 가져옵니다 및 다음에서 사용 하 여 편집기의 이름을 출력 `myNewImage`합니다.</span><span class="sxs-lookup"><span data-stu-id="58ee8-112">The following code example creates an instance of the `MyImage` class, gets the attributes for the class, and then prints the name of the editor used by `myNewImage`.</span></span>  
  
 [!code-cpp[Classic EditorAttribute Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic EditorAttribute Example/CPP/source.cpp#2)]
 [!code-csharp[Classic EditorAttribute Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic EditorAttribute Example/CS/source.cs#2)]
 [!code-vb[Classic EditorAttribute Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic EditorAttribute Example/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58ee8-113">
            <see cref="T:System.ComponentModel.EditorAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ee8-113">Initializes a new instance of the <see cref="T:System.ComponentModel.EditorAttribute" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EditorAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EditorAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EditorAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="58ee8-114">기본 편집기(편집기 없음)를 사용하여 <see cref="T:System.ComponentModel.EditorAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ee8-114">Initializes a new instance of the <see cref="T:System.ComponentModel.EditorAttribute" /> class with the default editor, which is no editor.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EditorAttribute (string typeName, string baseTypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, string baseTypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String, baseTypeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EditorAttribute(System::String ^ typeName, System::String ^ baseTypeName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="baseTypeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="58ee8-115">편집기의 정규화된 형식 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ee8-115">The fully qualified type name of the editor.</span>
          </span>
        </param>
        <param name="baseTypeName">
          <span data-ttu-id="58ee8-116">편집기의 조회 키로 사용할 기본 클래스 또는 인터페이스의 정규화된 형식 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ee8-116">The fully qualified type name of the base class or interface to use as a lookup key for the editor.</span>
          </span>
          <span data-ttu-id="58ee8-117">이 클래스는 <see cref="T:System.Drawing.Design.UITypeEditor" />이거나 이 클래스에서 파생되어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ee8-117">This class must be or derive from <see cref="T:System.Drawing.Design.UITypeEditor" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ee8-118">편집기의 형식 이름 및 기본 형식 이름을 사용하여 <see cref="T:System.ComponentModel.EditorAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ee8-118">Initializes a new instance of the <see cref="T:System.ComponentModel.EditorAttribute" /> class with the type name and base type name of the editor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ee8-119">`typeName` 매개 변수에서 여야는 <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=nameWithType> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="58ee8-119">The `typeName` parameter must be in the <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=nameWithType> format.</span></span>  
  
 <span data-ttu-id="58ee8-120"><xref:System.Type> 나타내는 `typeName` 매개 변수에서 파생 하거나 기본 클래스를 구현 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="58ee8-120">The <xref:System.Type> represented by the `typeName` parameter must either derive from or implement the base class.</span></span>  
  
 <span data-ttu-id="58ee8-121"><xref:System.Type> 나타내는 `baseTypeName` 매개 변수를 사용을 키로 특정 편집기를 찾는 데이터 형식을 둘 이상의 편집기가 연결을 가질 수 있으므로 합니다.</span><span class="sxs-lookup"><span data-stu-id="58ee8-121">The <xref:System.Type> represented by the `baseTypeName` parameter is used as a key to find a particular editor, because a data type can have more than one editor associated with it.</span></span> <span data-ttu-id="58ee8-122">모든 클래스 수는 있지만 일반적으로이 <xref:System.Drawing.Design.UITypeEditor> 또는 <xref:System.ComponentModel.ComponentEditor>합니다.</span><span class="sxs-lookup"><span data-stu-id="58ee8-122">This can be any class, but is typically <xref:System.Drawing.Design.UITypeEditor> or <xref:System.ComponentModel.ComponentEditor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EditorAttribute (string typeName, Type baseType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, class System.Type baseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String, baseType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EditorAttribute(System::String ^ typeName, Type ^ baseType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="baseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="58ee8-123">편집기의 정규화된 형식 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ee8-123">The fully qualified type name of the editor.</span>
          </span>
        </param>
        <param name="baseType">
          <span data-ttu-id="58ee8-124">편집기의 조회 키로 사용할 기본 클래스 또는 인터페이스의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ee8-124">The <see cref="T:System.Type" /> of the base class or interface to use as a lookup key for the editor.</span>
          </span>
          <span data-ttu-id="58ee8-125">이 클래스는 <see cref="T:System.Drawing.Design.UITypeEditor" />이거나 이 클래스에서 파생되어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ee8-125">This class must be or derive from <see cref="T:System.Drawing.Design.UITypeEditor" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ee8-126">형식 이름과 기본 형식을 사용하여 <see cref="T:System.ComponentModel.EditorAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ee8-126">Initializes a new instance of the <see cref="T:System.ComponentModel.EditorAttribute" /> class with the type name and the base type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ee8-127">`typeName` 매개 변수에서 여야는 <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=nameWithType> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="58ee8-127">The `typeName` parameter must be in the <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=nameWithType> format.</span></span>  
  
 <span data-ttu-id="58ee8-128"><xref:System.Type> 나타내는 `typeName` 에서 파생 해야 하거나 기본 클래스를 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="58ee8-128">The <xref:System.Type> represented by the `typeName` must either derive from or implement the base class.</span></span>  
  
 <span data-ttu-id="58ee8-129">`baseType` 매개 변수를 사용을 키로 특정 편집기를 찾는 데이터 형식을 둘 이상의 편집기가 연결을 가질 수 있으므로 합니다.</span><span class="sxs-lookup"><span data-stu-id="58ee8-129">The `baseType` parameter is used as a key to find a particular editor, because a data type can have more than one editor associated with it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EditorAttribute (Type type, Type baseType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Type baseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EditorAttribute.#ctor(System.Type,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EditorAttribute(Type ^ type, Type ^ baseType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="baseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="58ee8-130">편집기의 형식을 나타내는 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ee8-130">A <see cref="T:System.Type" /> that represents the type of the editor.</span>
          </span>
        </param>
        <param name="baseType">
          <span data-ttu-id="58ee8-131">편집기의 조회 키로 사용할 기본 클래스 또는 인터페이스의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ee8-131">The <see cref="T:System.Type" /> of the base class or interface to use as a lookup key for the editor.</span>
          </span>
          <span data-ttu-id="58ee8-132">이 클래스는 <see cref="T:System.Drawing.Design.UITypeEditor" />이거나 이 클래스에서 파생되어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ee8-132">This class must be or derive from <see cref="T:System.Drawing.Design.UITypeEditor" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ee8-133">형식과 기본 형식을 사용하여 <see cref="T:System.ComponentModel.EditorAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ee8-133">Initializes a new instance of the <see cref="T:System.ComponentModel.EditorAttribute" /> class with the type and the base type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ee8-134"><xref:System.Type> 나타내는 `type` 매개 변수에서 파생 하거나 기본 클래스를 구현 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="58ee8-134">The <xref:System.Type> represented by the `type` parameter must either derive from or implement the base class.</span></span>  
  
 <span data-ttu-id="58ee8-135">`baseType` 매개 변수를 사용을 키로 특정 편집기를 찾는 데이터 형식을 둘 이상의 편집기가 연결을 가질 수 있으므로 합니다.</span><span class="sxs-lookup"><span data-stu-id="58ee8-135">The `baseType` parameter is used as a key to find a particular editor, because a data type can have more than one editor associated with it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditorBaseTypeName">
      <MemberSignature Language="C#" Value="public string EditorBaseTypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EditorBaseTypeName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.EditorAttribute.EditorBaseTypeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditorBaseTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EditorBaseTypeName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="58ee8-136">이 편집기의 조회 키로 사용되는 기본 클래스 또는 인터페이스 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ee8-136">Gets the name of the base class or interface serving as a lookup key for this editor.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="58ee8-137">이 편집기의 조회 키로 사용되는 기본 클래스 또는 인터페이스 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ee8-137">The name of the base class or interface serving as a lookup key for this editor.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ee8-138"><xref:System.ComponentModel.EditorAttribute.EditorBaseTypeName%2A> 속성 어셈블리 정규화 된 형식 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="58ee8-138">The <xref:System.ComponentModel.EditorAttribute.EditorBaseTypeName%2A> property is an assembly qualified type name.</span></span> <span data-ttu-id="58ee8-139">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 둘 다 제공 <xref:System.Drawing.Design.UITypeEditor> 및 <xref:System.ComponentModel.ComponentEditor> 올바른 기본 클래스 하지만 모든 값은 유효한 여기 합니다.</span><span class="sxs-lookup"><span data-stu-id="58ee8-139">The [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] provides both <xref:System.Drawing.Design.UITypeEditor> and <xref:System.ComponentModel.ComponentEditor> as valid base classes, but any value is valid here.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditorTypeName">
      <MemberSignature Language="C#" Value="public string EditorTypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EditorTypeName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.EditorAttribute.EditorTypeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditorTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EditorTypeName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="58ee8-140">
            <see cref="P:System.Type.AssemblyQualifiedName" /> 형식의 편집기 클래스 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ee8-140">Gets the name of the editor class in the <see cref="P:System.Type.AssemblyQualifiedName" /> format.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="58ee8-141">
            <see cref="P:System.Type.AssemblyQualifiedName" /> 형식의 편집기 클래스 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ee8-141">The name of the editor class in the <see cref="P:System.Type.AssemblyQualifiedName" /> format.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EditorAttribute.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="58ee8-142">값이 같은지 테스트할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ee8-142">The object to test the value equality of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ee8-143">주어진 개체의 값이 현재 <see cref="T:System.ComponentModel.EditorAttribute" />와 같은지 여부를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ee8-143">Returns whether the value of the given object is equal to the current <see cref="T:System.ComponentModel.EditorAttribute" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ee8-144">주어진 개체의 값이 현재 개체의 값과 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ee8-144">
              <see langword="true" /> if the value of the given object is equal to that of the current object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EditorAttribute.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="58ee8-145">이 인스턴스의 해시 코드를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ee8-145">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ee8-146">부호 있는 32비트 정수 해시 코드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ee8-146">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Attribute.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="TypeId">
      <MemberSignature Language="C#" Value="public override object TypeId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TypeId" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.EditorAttribute.TypeId" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TypeId As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ TypeId { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="58ee8-147">이 특성 형식의 고유 ID를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ee8-147">Gets a unique ID for this attribute type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="58ee8-148">이 특성 형식의 고유 ID입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ee8-148">A unique ID for this attribute type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ee8-149"><xref:System.ComponentModel.EditorAttribute.TypeId%2A> 속성은 동일한 형식이 두 가지 특성을 식별 하려면 알고리즘을 필터링 하 여 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="58ee8-149">The <xref:System.ComponentModel.EditorAttribute.TypeId%2A> property is used by filtering algorithms to identify two attributes that are the same type.</span></span> <span data-ttu-id="58ee8-150">대부분의 특성에 대 한이 반환 된 <xref:System.Type> 특성에 대 한 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="58ee8-150">For most attributes, this just returns the <xref:System.Type> instance for the attribute.</span></span> <span data-ttu-id="58ee8-151"><xref:System.ComponentModel.EditorAttribute> 편집기 기본 형식 유형을 포함 하려면이 옵션을 재정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="58ee8-151"><xref:System.ComponentModel.EditorAttribute> overrides this to include the type of the editor base type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>