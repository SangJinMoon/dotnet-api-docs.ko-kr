<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EditorAttribute.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5495aede3622b9f43cf3fd2d0c3ad3202723ac3b8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">495aede3622b9f43cf3fd2d0c3ad3202723ac3b8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.EditorAttribute">
          <source>Specifies the editor to use to change a property.</source>
          <target state="translated">속성을 변경하는 데 사용할 편집기를 지정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.EditorAttribute">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EditorAttribute">
          <source>When editing the property, a visual designer should create a new instance of the specified editor through a dialog box or drop-down window.</source>
          <target state="translated">속성을 편집할 때 비주얼 디자이너 대화 상자 또는 드롭다운 창을 통해 지정된 된 편집기의 새 인스턴스를 만들어야 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EditorAttribute">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.EditorAttribute.EditorBaseTypeName%2A&gt;</ph> property to find this editor's base type.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.ComponentModel.EditorAttribute.EditorBaseTypeName%2A&gt;</ph> 속성이이 편집기의 기본 형식을 찾으려고 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EditorAttribute">
          <source>The only available base type is <ph id="ph1">&lt;xref:System.Drawing.Design.UITypeEditor&gt;</ph>.</source>
          <target state="translated">만 사용할 수 있는 기본 형식이 <ph id="ph1">&lt;xref:System.Drawing.Design.UITypeEditor&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EditorAttribute">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.EditorAttribute.EditorTypeName%2A&gt;</ph> property to get the name of the type of editor associated with this attribute.</source>
          <target state="translated">사용 된 <ph id="ph1">&lt;xref:System.ComponentModel.EditorAttribute.EditorTypeName%2A&gt;</ph> 이 특성과 관련 된 편집기의 형식의 이름을 가져올 속성입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EditorAttribute">
          <source>For general information on using attributes.</source>
          <target state="translated">에 대 한 일반적인 내용은 특성을 사용 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EditorAttribute">
          <source>see <bpt id="p1">[</bpt>Attributes<ept id="p1">](~/docs/standard/attributes/index.md)</ept>.</source>
          <target state="translated">참조 <bpt id="p1">[</bpt>특성<ept id="p1">](~/docs/standard/attributes/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EditorAttribute">
          <source>For more information on design-time attributes, see <bpt id="p1">[</bpt>Attributes and Design-Time Support<ept id="p1">](http://msdn.microsoft.com/library/7aed9eb4-124b-4a15-a0a3-458f37ac9ef7)</ept>.</source>
          <target state="translated">디자인 타임 특성에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>특성 및 디자인 타임 지원<ept id="p1">](http://msdn.microsoft.com/library/7aed9eb4-124b-4a15-a0a3-458f37ac9ef7)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EditorAttribute">
          <source>The following code example creates the <ph id="ph1">`MyImage`</ph> class.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">`MyImage`</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EditorAttribute">
          <source>The class is marked with an <ph id="ph1">&lt;xref:System.ComponentModel.EditorAttribute&gt;</ph> that specifies the <ph id="ph2">&lt;xref:System.Drawing.Design.ImageEditor&gt;</ph> as its editor.</source>
          <target state="translated">클래스는 표시 되는 <ph id="ph1">&lt;xref:System.ComponentModel.EditorAttribute&gt;</ph> 지정 하는 <ph id="ph2">&lt;xref:System.Drawing.Design.ImageEditor&gt;</ph> 해당 편집기로 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EditorAttribute">
          <source>The following code example creates an instance of the <ph id="ph1">`MyImage`</ph> class, gets the attributes for the class, and then prints the name of the editor used by <ph id="ph2">`myNewImage`</ph>.</source>
          <target state="translated">다음 코드 예제에서는의 인스턴스를 만듭니다.는 <ph id="ph1">`MyImage`</ph> 클래스는 클래스에 대 한 특성을 가져옵니다 및 다음에서 사용 하 여 편집기의 이름을 출력 <ph id="ph2">`myNewImage`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.EditorAttribute">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.EditorAttribute" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.EditorAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EditorAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.EditorAttribute" /&gt;</ph> class with the default editor, which is no editor.</source>
          <target state="translated">기본 편집기(편집기 없음)를 사용하여 <ph id="ph1">&lt;see cref="T:System.ComponentModel.EditorAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)">
          <source>The fully qualified type name of the editor.</source>
          <target state="translated">편집기의 정규화된 형식 이름입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)">
          <source>The fully qualified type name of the base class or interface to use as a lookup key for the editor.</source>
          <target state="translated">편집기의 조회 키로 사용할 기본 클래스 또는 인터페이스의 정규화된 형식 이름입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)">
          <source>This class must be or derive from <ph id="ph1">&lt;see cref="T:System.Drawing.Design.UITypeEditor" /&gt;</ph>.</source>
          <target state="translated">이 클래스는 <ph id="ph1">&lt;see cref="T:System.Drawing.Design.UITypeEditor" /&gt;</ph>이거나 이 클래스에서 파생되어야 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.EditorAttribute" /&gt;</ph> class with the type name and base type name of the editor.</source>
          <target state="translated">편집기의 형식 이름 및 기본 형식 이름을 사용하여 <ph id="ph1">&lt;see cref="T:System.ComponentModel.EditorAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)">
          <source>The <ph id="ph1">`typeName`</ph> parameter must be in the <ph id="ph2">&lt;xref:System.Type.AssemblyQualifiedName%2A?displayProperty=nameWithType&gt;</ph> format.</source>
          <target state="translated"><ph id="ph1">`typeName`</ph> 매개 변수에서 여야는 <ph id="ph2">&lt;xref:System.Type.AssemblyQualifiedName%2A?displayProperty=nameWithType&gt;</ph> 형식입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Type&gt;</ph> represented by the <ph id="ph2">`typeName`</ph> parameter must either derive from or implement the base class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Type&gt;</ph> 나타내는 <ph id="ph2">`typeName`</ph> 매개 변수에서 파생 하거나 기본 클래스를 구현 해야 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Type&gt;</ph> represented by the <ph id="ph2">`baseTypeName`</ph> parameter is used as a key to find a particular editor, because a data type can have more than one editor associated with it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Type&gt;</ph> 나타내는 <ph id="ph2">`baseTypeName`</ph> 매개 변수를 사용을 키로 특정 편집기를 찾는 데이터 형식을 둘 이상의 편집기가 연결을 가질 수 있으므로 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)">
          <source>This can be any class, but is typically <ph id="ph1">&lt;xref:System.Drawing.Design.UITypeEditor&gt;</ph> or <ph id="ph2">&lt;xref:System.ComponentModel.ComponentEditor&gt;</ph>.</source>
          <target state="translated">모든 클래스 수는 있지만 일반적으로이 <ph id="ph1">&lt;xref:System.Drawing.Design.UITypeEditor&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.ComponentModel.ComponentEditor&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.Type)">
          <source>The fully qualified type name of the editor.</source>
          <target state="translated">편집기의 정규화된 형식 이름입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the base class or interface to use as a lookup key for the editor.</source>
          <target state="translated">편집기의 조회 키로 사용할 기본 클래스 또는 인터페이스의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.Type)">
          <source>This class must be or derive from <ph id="ph1">&lt;see cref="T:System.Drawing.Design.UITypeEditor" /&gt;</ph>.</source>
          <target state="translated">이 클래스는 <ph id="ph1">&lt;see cref="T:System.Drawing.Design.UITypeEditor" /&gt;</ph>이거나 이 클래스에서 파생되어야 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.EditorAttribute" /&gt;</ph> class with the type name and the base type.</source>
          <target state="translated">형식 이름과 기본 형식을 사용하여 <ph id="ph1">&lt;see cref="T:System.ComponentModel.EditorAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.Type)">
          <source>The <ph id="ph1">`typeName`</ph> parameter must be in the <ph id="ph2">&lt;xref:System.Type.AssemblyQualifiedName%2A?displayProperty=nameWithType&gt;</ph> format.</source>
          <target state="translated"><ph id="ph1">`typeName`</ph> 매개 변수에서 여야는 <ph id="ph2">&lt;xref:System.Type.AssemblyQualifiedName%2A?displayProperty=nameWithType&gt;</ph> 형식입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Type&gt;</ph> represented by the <ph id="ph2">`typeName`</ph> must either derive from or implement the base class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Type&gt;</ph> 나타내는 <ph id="ph2">`typeName`</ph> 에서 파생 해야 하거나 기본 클래스를 구현 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.Type)">
          <source>The <ph id="ph1">`baseType`</ph> parameter is used as a key to find a particular editor, because a data type can have more than one editor associated with it.</source>
          <target state="translated"><ph id="ph1">`baseType`</ph> 매개 변수를 사용을 키로 특정 편집기를 찾는 데이터 형식을 둘 이상의 편집기가 연결을 가질 수 있으므로 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EditorAttribute.#ctor(System.Type,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of the editor.</source>
          <target state="translated">편집기의 형식을 나타내는 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EditorAttribute.#ctor(System.Type,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the base class or interface to use as a lookup key for the editor.</source>
          <target state="translated">편집기의 조회 키로 사용할 기본 클래스 또는 인터페이스의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EditorAttribute.#ctor(System.Type,System.Type)">
          <source>This class must be or derive from <ph id="ph1">&lt;see cref="T:System.Drawing.Design.UITypeEditor" /&gt;</ph>.</source>
          <target state="translated">이 클래스는 <ph id="ph1">&lt;see cref="T:System.Drawing.Design.UITypeEditor" /&gt;</ph>이거나 이 클래스에서 파생되어야 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EditorAttribute.#ctor(System.Type,System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.EditorAttribute" /&gt;</ph> class with the type and the base type.</source>
          <target state="translated">형식과 기본 형식을 사용하여 <ph id="ph1">&lt;see cref="T:System.ComponentModel.EditorAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EditorAttribute.#ctor(System.Type,System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Type&gt;</ph> represented by the <ph id="ph2">`type`</ph> parameter must either derive from or implement the base class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Type&gt;</ph> 나타내는 <ph id="ph2">`type`</ph> 매개 변수에서 파생 하거나 기본 클래스를 구현 해야 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EditorAttribute.#ctor(System.Type,System.Type)">
          <source>The <ph id="ph1">`baseType`</ph> parameter is used as a key to find a particular editor, because a data type can have more than one editor associated with it.</source>
          <target state="translated"><ph id="ph1">`baseType`</ph> 매개 변수를 사용을 키로 특정 편집기를 찾는 데이터 형식을 둘 이상의 편집기가 연결을 가질 수 있으므로 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.EditorAttribute.EditorBaseTypeName">
          <source>Gets the name of the base class or interface serving as a lookup key for this editor.</source>
          <target state="translated">이 편집기의 조회 키로 사용되는 기본 클래스 또는 인터페이스 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EditorAttribute.EditorBaseTypeName">
          <source>The name of the base class or interface serving as a lookup key for this editor.</source>
          <target state="translated">이 편집기의 조회 키로 사용되는 기본 클래스 또는 인터페이스 이름입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EditorAttribute.EditorBaseTypeName">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.EditorAttribute.EditorBaseTypeName%2A&gt;</ph> property is an assembly qualified type name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.EditorAttribute.EditorBaseTypeName%2A&gt;</ph> 속성 어셈블리 정규화 된 형식 이름입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EditorAttribute.EditorBaseTypeName">
          <source>The <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> provides both <ph id="ph2">&lt;xref:System.Drawing.Design.UITypeEditor&gt;</ph> and <ph id="ph3">&lt;xref:System.ComponentModel.ComponentEditor&gt;</ph> as valid base classes, but any value is valid here.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> 둘 다 제공 <ph id="ph2">&lt;xref:System.Drawing.Design.UITypeEditor&gt;</ph> 및 <ph id="ph3">&lt;xref:System.ComponentModel.ComponentEditor&gt;</ph> 올바른 기본 클래스 하지만 모든 값은 유효한 여기 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.EditorAttribute.EditorTypeName">
          <source>Gets the name of the editor class in the <ph id="ph1">&lt;see cref="P:System.Type.AssemblyQualifiedName" /&gt;</ph> format.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Type.AssemblyQualifiedName" /&gt;</ph> 형식의 편집기 클래스 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EditorAttribute.EditorTypeName">
          <source>The name of the editor class in the <ph id="ph1">&lt;see cref="P:System.Type.AssemblyQualifiedName" /&gt;</ph> format.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Type.AssemblyQualifiedName" /&gt;</ph> 형식의 편집기 클래스 이름입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EditorAttribute.Equals(System.Object)">
          <source>The object to test the value equality of.</source>
          <target state="translated">값이 같은지 테스트할 개체입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EditorAttribute.Equals(System.Object)">
          <source>Returns whether the value of the given object is equal to the current <ph id="ph1">&lt;see cref="T:System.ComponentModel.EditorAttribute" /&gt;</ph>.</source>
          <target state="translated">주어진 개체의 값이 현재 <ph id="ph1">&lt;see cref="T:System.ComponentModel.EditorAttribute" /&gt;</ph>와 같은지 여부를 반환합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EditorAttribute.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value of the given object is equal to that of the current object; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">주어진 개체의 값이 현재 개체의 값과 같으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EditorAttribute.GetHashCode">
          <source>Returns the hash code for this instance.</source>
          <target state="translated">이 인스턴스의 해시 코드를 반환합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EditorAttribute.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">부호 있는 32비트 정수 해시 코드입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.EditorAttribute.TypeId">
          <source>Gets a unique ID for this attribute type.</source>
          <target state="translated">이 특성 형식의 고유 ID를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EditorAttribute.TypeId">
          <source>A unique ID for this attribute type.</source>
          <target state="translated">이 특성 형식의 고유 ID입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EditorAttribute.TypeId">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.EditorAttribute.TypeId%2A&gt;</ph> property is used by filtering algorithms to identify two attributes that are the same type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.EditorAttribute.TypeId%2A&gt;</ph> 속성은 동일한 형식이 두 가지 특성을 식별 하려면 알고리즘을 필터링 하 여 사용 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EditorAttribute.TypeId">
          <source>For most attributes, this just returns the <ph id="ph1">&lt;xref:System.Type&gt;</ph> instance for the attribute.</source>
          <target state="translated">대부분의 특성에 대 한이 반환 된 <ph id="ph1">&lt;xref:System.Type&gt;</ph> 특성에 대 한 인스턴스.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EditorAttribute.TypeId">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.EditorAttribute&gt;</ph> overrides this to include the type of the editor base type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.EditorAttribute&gt;</ph> 편집기 기본 형식 유형을 포함 하려면이 옵션을 재정의 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>