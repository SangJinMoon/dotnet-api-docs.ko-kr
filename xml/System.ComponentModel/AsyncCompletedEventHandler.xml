<Type Name="AsyncCompletedEventHandler" FullName="System.ComponentModel.AsyncCompletedEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="76e2ef2904fad8c0af535c0ea033bed68b166577" />
    <Meta Name="ms.sourcegitcommit" Value="4b4804968da1dfdf71c501075a5b66957b54f2e8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/27/2018" />
    <Meta Name="ms.locfileid" Value="32035241" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void AsyncCompletedEventHandler(object sender, AsyncCompletedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed AsyncCompletedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.AsyncCompletedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub AsyncCompletedEventHandler(sender As Object, e As AsyncCompletedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void AsyncCompletedEventHandler(System::Object ^ sender, AsyncCompletedEventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">
      <span data-ttu-id="0200d-101">이벤트 소스입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0200d-101">The source of the event.</span>
      </span>
    </param>
    <param name="e">
      <span data-ttu-id="0200d-102">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" />입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0200d-102">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> that contains the event data.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="0200d-103">비동기 작업의 *MethodName*<see langword="Completed" /> 이벤트를 처리할 메서드를 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0200d-103">Represents the method that will handle the *MethodName*<see langword="Completed" /> event of an asynchronous operation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0200d-104"><xref:System.ComponentModel.AsyncCompletedEventHandler> 대리자를 만드는 경우 이벤트를 처리할 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="0200d-104">When you create an <xref:System.ComponentModel.AsyncCompletedEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="0200d-105">이벤트를 이벤트 처리기와 연결하려면 대리자의 인스턴스를 해당 이벤트에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="0200d-105">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="0200d-106">대리자를 제거 하지 않는 한 이벤트 처리기 메서드는 이벤트가 발생할 때마다 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0200d-106">The event-handler method is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="0200d-107">이벤트 처리기 대리자에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0200d-107">For more information about event-handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="0200d-108">비동기 메서드를 호출에 대 한 *MethodName*, 구성, 해야 해당 *MethodName* `Completed` 이벤트와 선택적 *MethodName* `CompletedEventArgs` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0200d-108">For an asynchronous method, called *MethodName*, in your component, you will have a corresponding *MethodName*`Completed` event, and an optional *MethodName*`CompletedEventArgs` class.</span></span>  
  
 <span data-ttu-id="0200d-109">비동기 메서드의 여러 동시 호출을 지 원하는 구성 요소에 대 한 클라이언트 고유 토큰을 제공할 수 또는 비동기 작업을 구분 하기 위해 작업 ID를 특정 이벤트를 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="0200d-109">For a component that supports multiple concurrent invocations of its asynchronous methods, the client can supply a unique token, or task ID, to distinguish which asynchronous task is raising particular events.</span></span> <span data-ttu-id="0200d-110">클라이언트의 <xref:System.ComponentModel.AsyncCompletedEventHandler> 읽을 수는 <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A?displayProperty=nameWithType> 완료를 보고 하는 작업을 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0200d-110">The client's <xref:System.ComponentModel.AsyncCompletedEventHandler> can read the <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A?displayProperty=nameWithType> property to determine which task is reporting completion.</span></span> <span data-ttu-id="0200d-111">구현을 사용 해야는 <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> 만들려는 <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> 보류 중인 비동기 작업 Id와 클라이언트의 작업을 연결 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="0200d-111">Your implementation should use the <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> to create an <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> that associates the client's task IDs with pending asynchronous tasks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0200d-112">코드 예제는 <xref:System.ComponentModel.AsyncCompletedEventHandler> 대리자를의 예제를 참조는 <xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0200d-112">For a code example of the <xref:System.ComponentModel.AsyncCompletedEventHandler> delegate, see the example in the <xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> class.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.AsyncCompletedEventArgs" />
    <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
    <altmember cref="T:System.ComponentModel.AsyncOperation" />
  </Docs>
</Type>