<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="RunWorkerCompletedEventArgs.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5828df2d7f83da2c279553448bb4ba4672f012244.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">828df2d7f83da2c279553448bb4ba4672f012244</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.RunWorkerCompletedEventArgs">
          <source>Provides data for the <bpt id="p1">*</bpt>MethodName<ept id="p1">*</ept><ph id="ph1">&lt;see langword="Completed" /&gt;</ph> event.</source>
          <target state="translated"><bpt id="p1">*</bpt>MethodName<ept id="p1">*</ept><ph id="ph1">&lt;see langword="Completed" /&gt;</ph> 이벤트에 대한 데이터를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.RunWorkerCompletedEventArgs">
          <source>When using the <bpt id="p1">[</bpt>event-based asynchronous pattern<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-eap.md)</ept> for asynchronous operations, a Windows Forms form or control initiates an asyncronous operation by calling the <ph id="ph1">&lt;xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">사용 하는 경우는 <bpt id="p1">[</bpt>이벤트 기반 비동기 패턴<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-eap.md)</ept> 비동기 작업에 대 한 Windows Forms 폼 이나 컨트롤 비동기 작업 호출 하 여 시작 된 <ph id="ph1">&lt;xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.RunWorkerCompletedEventArgs">
          <source>The method in turn raises the <ph id="ph1">&lt;xref:System.ComponentModel.BackgroundWorker.DoWork?displayProperty=nameWithType&gt;</ph> event asynchronously and passes it a <ph id="ph2">&lt;xref:System.ComponentModel.DoWorkEventArgs&gt;</ph> instance.</source>
          <target state="translated">그러면 메서드는 <ph id="ph1">&lt;xref:System.ComponentModel.BackgroundWorker.DoWork?displayProperty=nameWithType&gt;</ph> 이벤트 비동기적으로 전달는 <ph id="ph2">&lt;xref:System.ComponentModel.DoWorkEventArgs&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.RunWorkerCompletedEventArgs">
          <source>If the asychronous operation returns a value, the <ph id="ph1">&lt;xref:System.ComponentModel.BackgroundWorker.DoWork?displayProperty=nameWithType&gt;</ph> event handler typically assigns it to the <ph id="ph2">&lt;xref:System.ComponentModel.DoWorkEventArgs.Result?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">비동기 작업에는 값을 반환 하는 경우는 <ph id="ph1">&lt;xref:System.ComponentModel.BackgroundWorker.DoWork?displayProperty=nameWithType&gt;</ph> 이벤트 처리기 일반적으로에 할당 된 <ph id="ph2">&lt;xref:System.ComponentModel.DoWorkEventArgs.Result?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.RunWorkerCompletedEventArgs">
          <source>When the asynchronous operation completes, the <ph id="ph1">&lt;xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted?displayProperty=nameWithType&gt;</ph> event is raised and is passed a <ph id="ph2">&lt;xref:System.ComponentModel.RunWorkerCompletedEventArgs&gt;</ph> instance that contains information about the status of the operation (whether it was cancelled, faulted, or completed successfully).</source>
          <target state="translated">비동기 작업이 완료 되 면는 <ph id="ph1">&lt;xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted?displayProperty=nameWithType&gt;</ph> 이벤트가 발생 하 고 전달 되는 <ph id="ph2">&lt;xref:System.ComponentModel.RunWorkerCompletedEventArgs&gt;</ph> (되었습니다 취소, faulted, 또는 완료 여부 성공적으로) 작업의 상태에 대 한 정보가 포함 된 인스턴스.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.RunWorkerCompletedEventArgs">
          <source>If it completed successfully, its <ph id="ph1">&lt;xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result&gt;</ph> property contains the value returned by the asynchronous operation and previously assigned to the <ph id="ph2">&lt;xref:System.ComponentModel.DoWorkEventArgs.Result?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">성공적으로 완료 된 경우 해당 <ph id="ph1">&lt;xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result&gt;</ph> 속성 비동기 작업에서 반환 되 고 이전에 할당 된 값이 포함 된 <ph id="ph2">&lt;xref:System.ComponentModel.DoWorkEventArgs.Result?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.RunWorkerCompletedEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Security.Permissions.HostProtectionAttribute&gt;</ph> attribute applied to this class has the following <ph id="ph2">&lt;xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A&gt;</ph> property value: <ph id="ph3">&lt;xref:System.Security.Permissions.HostProtectionResource.SharedState&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Permissions.HostProtectionAttribute&gt;</ph> 이 클래스에 적용 된 특성에는 다음과 같은 <ph id="ph2">&lt;xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A&gt;</ph> 속성 값: <ph id="ph3">&lt;xref:System.Security.Permissions.HostProtectionResource.SharedState&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.RunWorkerCompletedEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Security.Permissions.HostProtectionAttribute&gt;</ph> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Permissions.HostProtectionAttribute&gt;</ph>는 대개 아이콘을 두 번 클릭하거나, 명령을 입력하거나, 브라우저에서 URL을 입력하여 시작되는 데스크톱 응용 프로그램에 영향을 미치지 않습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.RunWorkerCompletedEventArgs">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Security.Permissions.HostProtectionAttribute&gt;</ph> class or <bpt id="p1">[</bpt>SQL Server Programming and Host Protection Attributes<ept id="p1">](~/docs/framework/performance/sql-server-programming-and-host-protection-attributes.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조는 <ph id="ph1">&lt;xref:System.Security.Permissions.HostProtectionAttribute&gt;</ph> 클래스 또는 <bpt id="p1">[</bpt>SQL Server 프로그래밍 및 호스트 보호 특성<ept id="p1">](~/docs/framework/performance/sql-server-programming-and-host-protection-attributes.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.RunWorkerCompletedEventArgs">
          <source>The following code example illustrates the use of <ph id="ph1">&lt;xref:System.ComponentModel.RunWorkerCompletedEventArgs&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.ComponentModel.RunWorkerCompletedEventArgs&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.RunWorkerCompletedEventArgs">
          <source>This example is part of a larger sample for the <ph id="ph1">&lt;xref:System.ComponentModel.BackgroundWorker&gt;</ph> class.</source>
          <target state="translated">이 예제는 위한 큰 샘플의 일부는 <ph id="ph1">&lt;xref:System.ComponentModel.BackgroundWorker&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.RunWorkerCompletedEventArgs.#ctor(System.Object,System.Exception,System.Boolean)">
          <source>The result of an asynchronous operation.</source>
          <target state="translated">비동기 작업의 결과입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.RunWorkerCompletedEventArgs.#ctor(System.Object,System.Exception,System.Boolean)">
          <source>Any error that occurred during the asynchronous operation.</source>
          <target state="translated">비동기 작업 중 발생한 오류입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.RunWorkerCompletedEventArgs.#ctor(System.Object,System.Exception,System.Boolean)">
          <source>A value indicating whether the asynchronous operation was canceled.</source>
          <target state="translated">비동기 작업이 취소되었는지 여부를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.RunWorkerCompletedEventArgs.#ctor(System.Object,System.Exception,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.RunWorkerCompletedEventArgs" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.RunWorkerCompletedEventArgs" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.RunWorkerCompletedEventArgs.Result">
          <source>Gets a value that represents the result of an asynchronous operation.</source>
          <target state="translated">비동기 작업의 결과를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.RunWorkerCompletedEventArgs.Result">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> representing the result of an asynchronous operation.</source>
          <target state="translated">비동기 작업의 결과를 나타내는 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.RunWorkerCompletedEventArgs.Result">
          <source>Your <ph id="ph1">&lt;xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted&gt;</ph> event handler should always check the <ph id="ph2">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A&gt;</ph> properties before accessing the <ph id="ph4">&lt;xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A&gt;</ph> property.</source>
          <target state="translated">프로그램 <ph id="ph1">&lt;xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted&gt;</ph> 항상 확인 해야 이벤트 처리기는 <ph id="ph2">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A&gt;</ph> 속성에 액세스 하기 전에 <ph id="ph4">&lt;xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A&gt;</ph> 속성.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.RunWorkerCompletedEventArgs.Result">
          <source>If an exception was raised or if the operation was canceled, accessing the <ph id="ph1">&lt;xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A&gt;</ph> property raises an exception.</source>
          <target state="translated">예외가 발생 했는지 또는 작업을 취소 된 경우에 액세스 하는 <ph id="ph1">&lt;xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A&gt;</ph> 속성에서 예외가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.RunWorkerCompletedEventArgs.Result">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted&gt;</ph> event to handle the result of an asynchronous operation.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted&gt;</ph> 비동기 작업의 결과 처리 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.RunWorkerCompletedEventArgs.Result">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.ComponentModel.BackgroundWorker&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.ComponentModel.BackgroundWorker&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.RunWorkerCompletedEventArgs.Result">
          <source><ph id="ph1">&lt;see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /&gt;</ph> is not <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>가 아닙니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.RunWorkerCompletedEventArgs.Result">
          <source>The <ph id="ph1">&lt;see cref="P:System.Exception.InnerException" /&gt;</ph> property holds a reference to <ph id="ph2">&lt;see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Exception.InnerException" /&gt;</ph> 속성에는 <ph id="ph2">&lt;see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /&gt;</ph>에 대한 참조가 들어 있습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.RunWorkerCompletedEventArgs.Result">
          <source><ph id="ph1">&lt;see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" /&gt;</ph>가 <ph id="ph2">&lt;see langword="true" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.RunWorkerCompletedEventArgs.UserState">
          <source>Gets a value that represents the user state.</source>
          <target state="translated">사용자 상태를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.RunWorkerCompletedEventArgs.UserState">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> representing the user state.</source>
          <target state="translated">사용자 상태를 나타내는 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>