<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AttributeProviderAttribute.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5805b01cdfe302e4bec4e9d355140f73e17e2e7c9.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">805b01cdfe302e4bec4e9d355140f73e17e2e7c9</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.AttributeProviderAttribute">
          <source>Enables attribute redirection.</source>
          <target state="translated">특성 리디렉션을 활성화합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.AttributeProviderAttribute">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AttributeProviderAttribute">
          <source>There are a few cases in the .NET Framework object model where a property is purposely typed to be vague.</source>
          <target state="translated">여기서 속성은 모호 되도록 입력 의도적으로.NET Framework 개체 모델에서 몇 가지 경우가 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AttributeProviderAttribute">
          <source>For example, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A?displayProperty=nameWithType&gt;</ph> property is typed as <ph id="ph2">`object`</ph>.</source>
          <target state="translated">예를 들어는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A?displayProperty=nameWithType&gt;</ph> 속성으로 입력 <ph id="ph2">`object`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AttributeProviderAttribute">
          <source>The reason for this is that this property can accept several types of input.</source>
          <target state="translated">그 이유는이 속성에 여러 유형의 입력을 사용할 수 있는 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AttributeProviderAttribute">
          <source>Unfortunately, this provides no common place to add metadata to describe the characteristics of the property.</source>
          <target state="translated">안타깝게도,이 속성의 특징을 설명 하는 메타 데이터를 추가 하려면 공통 없습니다 장소를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AttributeProviderAttribute">
          <source>Each <ph id="ph1">`DataSource`</ph> property throughout the .NET Framework needs to have identical metadata for type converters, UI type editors, and other services that require metadata.</source>
          <target state="translated">각 <ph id="ph1">`DataSource`</ph> 속성 전체.NET Framework에서 형식 변환기, UI 형식 편집기 및 메타 데이터를 필요로 하는 다른 서비스에 대 한 동일한 메타 데이터를 좀 고려해 야 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AttributeProviderAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.AttributeProviderAttribute&gt;</ph> remedies this situation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.AttributeProviderAttribute&gt;</ph> 이 문제를 해결 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AttributeProviderAttribute">
          <source>Once this attribute is placed on a property, the rules for obtaining attributes for the property descriptor's <ph id="ph1">&lt;xref:System.ComponentModel.MemberDescriptor.Attributes%2A?displayProperty=nameWithType&gt;</ph> collection differ.</source>
          <target state="translated">속성 설명자에 대 한 특성을 가져오는 규칙이이 특성을 속성에 배치 되 면 <ph id="ph1">&lt;xref:System.ComponentModel.MemberDescriptor.Attributes%2A?displayProperty=nameWithType&gt;</ph> 컬렉션 다릅니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AttributeProviderAttribute">
          <source>Typically, the property descriptor gathers local attributes, and then merges these with attributes from the property type.</source>
          <target state="translated">일반적으로 속성 설명자는 로컬 속성을 수집 하 고 속성 형식이 특성을 가진를 병합 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AttributeProviderAttribute">
          <source>In this case, the attributes are taken from the type returned from the <ph id="ph1">&lt;xref:System.ComponentModel.AttributeProviderAttribute&gt;</ph>, not from the actual property type.</source>
          <target state="translated">특성에서 반환 되는 형식에서 가져온 경우에 <ph id="ph1">&lt;xref:System.ComponentModel.AttributeProviderAttribute&gt;</ph>에서 아니라 실제 속성 형식입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AttributeProviderAttribute">
          <source>This attribute is used on <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A?displayProperty=nameWithType&gt;</ph> to point the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A?displayProperty=nameWithType&gt;</ph> object's specific type to <ph id="ph3">&lt;xref:System.ComponentModel.IListSource&gt;</ph>, and the appropriate metadata is placed on <ph id="ph4">&lt;xref:System.ComponentModel.IListSource&gt;</ph> to enable data binding.</source>
          <target state="translated">이 특성은 사용 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A?displayProperty=nameWithType&gt;</ph> 가리키도록는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A?displayProperty=nameWithType&gt;</ph> 개체의 특정 유형을 <ph id="ph3">&lt;xref:System.ComponentModel.IListSource&gt;</ph>, 적절 한 메타 데이터에 적용 됩니다 <ph id="ph4">&lt;xref:System.ComponentModel.IListSource&gt;</ph> 데이터 바인딩을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AttributeProviderAttribute">
          <source>In so doing, external parties can easily add metadata to all data sources.</source>
          <target state="translated">이 과정에서 외부 당사자에 게 모든 데이터 원본에 메타 데이터를 쉽게 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AttributeProviderAttribute">
          <source>Attributes obtained from a type declared in the <ph id="ph1">&lt;xref:System.ComponentModel.AttributeProviderAttribute&gt;</ph> have a priority in between the attributes of the property’s type and the attributes on the property.</source>
          <target state="translated">에 선언 된 형식에서 가져온 특성은 <ph id="ph1">&lt;xref:System.ComponentModel.AttributeProviderAttribute&gt;</ph> 속성에 속성의 형식 특성과 특성 사이에서 우선 순위를 보유 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AttributeProviderAttribute">
          <source>The following list, in priority order, shows the full set of available merged attributes:</source>
          <target state="translated">다음 목록은, 우선 순위에 따라 사용 가능한 병합 된 특성의 전체 집합을 보여줍니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AttributeProviderAttribute">
          <source>Property Attributes</source>
          <target state="translated">속성 특성</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AttributeProviderAttribute">
          <source>Attribute Provider Attributes</source>
          <target state="translated">특성 공급자 특성</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AttributeProviderAttribute">
          <source>Property Type Attributes</source>
          <target state="translated">속성 형식 특성</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AttributeProviderAttribute">
          <source>The following code example demonstrates using <ph id="ph1">&lt;xref:System.ComponentModel.AttributeProviderAttribute&gt;</ph> to mark a <ph id="ph2">`DataSource`</ph> property with a specific type of <ph id="ph3">&lt;xref:System.ComponentModel.IListSource&gt;</ph>.</source>
          <target state="translated">다음 코드 예제를 사용 하 여 보여 줍니다. <ph id="ph1">&lt;xref:System.ComponentModel.AttributeProviderAttribute&gt;</ph> 표시 하는 <ph id="ph2">`DataSource`</ph> 속성의 특정 형식과 <ph id="ph3">&lt;xref:System.ComponentModel.IListSource&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AttributeProviderAttribute">
          <source>For a full code listing, see <bpt id="p1">[</bpt>How to: Apply Attributes in Windows Forms Controls<ept id="p1">](~/docs/framework/winforms/controls/how-to-apply-attributes-in-windows-forms-controls.md)</ept>.</source>
          <target state="translated">전체 코드 목록을 참조 하십시오. <bpt id="p1">[</bpt>하는 방법: Windows Forms 컨트롤에서 특성 적용<ept id="p1">](~/docs/framework/winforms/controls/how-to-apply-attributes-in-windows-forms-controls.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.AttributeProviderAttribute">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeProviderAttribute" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeProviderAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.AttributeProviderAttribute.#ctor(System.String)">
          <source>The name of the type to specify.</source>
          <target state="translated">지정할 형식의 이름입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.AttributeProviderAttribute.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeProviderAttribute" /&gt;</ph> class with the given type name.</source>
          <target state="translated">지정된 형식 이름을 사용하여 <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeProviderAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.AttributeProviderAttribute.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="typeName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="typeName" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.AttributeProviderAttribute.#ctor(System.Type)">
          <source>The type to specify.</source>
          <target state="translated">지정할 형식입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.AttributeProviderAttribute.#ctor(System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeProviderAttribute" /&gt;</ph> class with the given type.</source>
          <target state="translated">지정된 형식을 사용하여 <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeProviderAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.AttributeProviderAttribute.#ctor(System.Type)">
          <source>The following code example demonstrates using <ph id="ph1">&lt;xref:System.ComponentModel.AttributeProviderAttribute&gt;</ph> to mark a <ph id="ph2">`DataSource`</ph> property with a specific type of <ph id="ph3">&lt;xref:System.ComponentModel.IListSource&gt;</ph>.</source>
          <target state="translated">다음 코드 예제를 사용 하 여 보여 줍니다. <ph id="ph1">&lt;xref:System.ComponentModel.AttributeProviderAttribute&gt;</ph> 표시 하는 <ph id="ph2">`DataSource`</ph> 속성의 특정 형식과 <ph id="ph3">&lt;xref:System.ComponentModel.IListSource&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.AttributeProviderAttribute.#ctor(System.Type)">
          <source>For a full code listing, see <bpt id="p1">[</bpt>How to: Apply Attributes in Windows Forms Controls<ept id="p1">](~/docs/framework/winforms/controls/how-to-apply-attributes-in-windows-forms-controls.md)</ept>.</source>
          <target state="translated">전체 코드 목록을 참조 하십시오. <bpt id="p1">[</bpt>하는 방법: Windows Forms 컨트롤에서 특성 적용<ept id="p1">](~/docs/framework/winforms/controls/how-to-apply-attributes-in-windows-forms-controls.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.AttributeProviderAttribute.#ctor(System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.AttributeProviderAttribute.#ctor(System.String,System.String)">
          <source>The name of the type to specify.</source>
          <target state="translated">지정할 형식의 이름입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.AttributeProviderAttribute.#ctor(System.String,System.String)">
          <source>The name of the property for which attributes will be retrieved.</source>
          <target state="translated">특성을 검색할 속성의 이름입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.AttributeProviderAttribute.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeProviderAttribute" /&gt;</ph> class with the given type name and property name.</source>
          <target state="translated">지정된 형식 이름과 속성 이름을 사용하여 <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeProviderAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.AttributeProviderAttribute.#ctor(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="propertyName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="propertyName" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.AttributeProviderAttribute.PropertyName">
          <source>Gets the name of the property for which attributes will be retrieved.</source>
          <target state="translated">특성을 검색할 속성의 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.AttributeProviderAttribute.PropertyName">
          <source>The name of the property for which attributes will be retrieved.</source>
          <target state="translated">특성을 검색할 속성의 이름입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.AttributeProviderAttribute.TypeName">
          <source>Gets the assembly qualified type name passed into the constructor.</source>
          <target state="translated">생성자에 전달된 어셈블리로 한정된 형식 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.AttributeProviderAttribute.TypeName">
          <source>The assembly qualified name of the type specified in the constructor.</source>
          <target state="translated">생성자에 지정된 어셈블리로 한정된 형식 이름입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>