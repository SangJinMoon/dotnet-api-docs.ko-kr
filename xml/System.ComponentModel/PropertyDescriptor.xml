<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PropertyDescriptor.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58e059b64b5fedee627a7dad23bafc67c4252df0d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8e059b64b5fedee627a7dad23bafc67c4252df0d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>Provides an abstraction of a property on a class.</source>
          <target state="translated">클래스에 대한 속성의 추상화를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>A description of a property consists of a name, its attributes, the component class that the property is associated with, and the type of the property.</source>
          <target state="translated">속성 설명은 이름, 특성, 속성, 연관 된 구성 요소 클래스 및 속성의 형식으로 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> provides the following properties and methods:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> 다음과 같은 속성 및 메서드를 제공합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.Converter%2A&gt;</ph> contains the <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> for this property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.Converter%2A&gt;</ph> 포함 된 <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> 이 속성에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.IsLocalizable%2A&gt;</ph> indicates whether this property should be localized.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.IsLocalizable%2A&gt;</ph> 이 속성을 지역화 해야 하는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.GetEditor%2A&gt;</ph> returns an editor of the specified type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.GetEditor%2A&gt;</ph> 지정 된 형식의 편집기를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> also provides the following <ph id="ph2">`abstract`</ph> properties and methods:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> 또한 다음을 제공 <ph id="ph2">`abstract`</ph> 속성 및 메서드:</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.ComponentType%2A&gt;</ph> contains the type of component this property is bound to.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.ComponentType%2A&gt;</ph> 이 속성이 바인딩되는 구성 요소의 유형을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.IsReadOnly%2A&gt;</ph> indicates whether this property is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.IsReadOnly%2A&gt;</ph> 이 속성이 읽기 전용인 지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A&gt;</ph> gets the type of the property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A&gt;</ph> 속성의 유형을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.CanResetValue%2A&gt;</ph> indicates whether resetting the component changes the value of the component.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.CanResetValue%2A&gt;</ph> 구성 요소를 다시 설정 구성 요소 값이 변경 되는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.GetValue%2A&gt;</ph> returns the current value of the property on a component.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.GetValue%2A&gt;</ph> 구성 요소에서 속성의 현재 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.ResetValue%2A&gt;</ph> resets the value for this property of the component.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.ResetValue%2A&gt;</ph> 이 속성의 구성 요소에 대 한 값을 다시 설정합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.SetValue%2A&gt;</ph> sets the value of the component to a different value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.SetValue%2A&gt;</ph> 구성 요소 값을 다른 값으로 설정합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue%2A&gt;</ph> indicates whether the value of this property needs to be persisted.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue%2A&gt;</ph> 이 속성의 값을 유지 해야 하는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>Typically, the <ph id="ph1">`abstract`</ph> members are implemented through reflection.</source>
          <target state="translated">일반적으로 <ph id="ph1">`abstract`</ph> 멤버 리플렉션을 통해 구현 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>For more information about reflection, see the topics in <bpt id="p1">[</bpt>Reflection<ept id="p1">](~/docs/framework/reflection-and-codedom/reflection.md)</ept>.</source>
          <target state="translated">리플렉션에 대 한 자세한 내용은 항목을 참조 <bpt id="p1">[</bpt>리플렉션<ept id="p1">](~/docs/framework/reflection-and-codedom/reflection.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>The following code example is built upon the example in the <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptorCollection&gt;</ph> class.</source>
          <target state="translated">다음 코드 예제에서는의 예제를 기반으로 <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptorCollection&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>It prints the information (category, description, display name) of the text of a button in a text box.</source>
          <target state="translated">텍스트 상자에 있는 단추의 텍스트의 정보 (예: 범주, 설명, 표시 이름)를 인쇄 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>It assumes that <ph id="ph1">`button1`</ph> and <ph id="ph2">`textbox1`</ph> have been instantiated on a form.</source>
          <target state="translated">있다고 가정 <ph id="ph1">`button1`</ph> 및 <ph id="ph2">`textbox1`</ph> 폼에 인스턴스화 되었습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>The following code example shows how to implement a custom property descriptor that provides a read-only wrapper around a property.</source>
          <target state="translated">다음 코드 예제는 읽기 전용 래퍼를 제공 하는 사용자 지정 속성 설명자를 구현 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>The <ph id="ph1">`SerializeReadOnlyPropertyDescriptor`</ph> is used in a custom designer to provide a read-only property descriptor for the control's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">`SerializeReadOnlyPropertyDescriptor`</ph> 는 컨트롤의에 대 한 읽기 전용 속성 설명자를 제공 하는 사용자 지정 디자이너에서 사용 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>The following code examples show how to use the <ph id="ph1">`SerializeReadOnlyPropertyDescriptor`</ph> in a custom designer.</source>
          <target state="translated">다음 코드 예제는 사용 하는 방법을 보여는 <ph id="ph1">`SerializeReadOnlyPropertyDescriptor`</ph> 사용자 지정 디자이너에서입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> that contains the name of the property and its attributes.</source>
          <target state="translated">속성 이름 및 특성이 들어 있는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> class with the name and attributes in the specified <ph id="ph2">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph>의 이름과 특성을 사용하여 <ph id="ph2">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> containing the name of the member and its attributes.</source>
          <target state="translated">멤버 이름 및 특성이 들어 있는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array containing the attributes you want to associate with the property.</source>
          <target state="translated">속성과 연결할 특성이 들어 있는 <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> 배열입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> class with the name in the specified <ph id="ph2">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> and the attributes in both the <ph id="ph3">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> and the <ph id="ph4">&lt;see cref="T:System.Attribute" /&gt;</ph> array.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph>의 이름과 <ph id="ph2">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> 및 <ph id="ph3">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> 배열 모두의 특성을 사용하여 <ph id="ph4">&lt;see cref="T:System.Attribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
          <source>This constructor appends the attributes in the <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> array to the attributes in the <ph id="ph2">&lt;xref:System.ComponentModel.MemberDescriptor&gt;</ph>.</source>
          <target state="translated">이 생성자의 특성을 추가 <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> 배열 특성에 <ph id="ph2">&lt;xref:System.ComponentModel.MemberDescriptor&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.#ctor(System.String,System.Attribute[])">
          <source>The name of the property.</source>
          <target state="translated">속성의 이름입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.#ctor(System.String,System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> that contains the property attributes.</source>
          <target state="translated">속성 특성이 들어 있는 <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> 형식의 배열입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.#ctor(System.String,System.Attribute[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> class with the specified name and attributes.</source>
          <target state="translated">지정된 이름과 특성을 사용하여 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
          <source>The component to add the handler for.</source>
          <target state="translated">처리기를 추가할 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
          <source>The delegate to add as a listener.</source>
          <target state="translated">수신기로 추가할 대리자입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
          <source>Enables other objects to be notified when this property changes.</source>
          <target state="translated">이 속성이 변경되면 다른 개체에서 알림을 받을 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> or <ph id="ph2">&lt;paramref name="handler" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="handler" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source>The component to test for reset capability.</source>
          <target state="translated">다시 설정 기능을 테스트할 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source>When overridden in a derived class, returns whether resetting an object changes its value.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 개체를 다시 설정하면 해당 값이 변경되는지 여부를 반환합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if resetting the component changes its value; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">구성 요소를 다시 설정하면 해당 값이 변경되는 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source>Typically, this method is implemented through reflection.</source>
          <target state="translated">일반적으로이 메서드는 리플렉션을 통해 구현 됩니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source>When overridden in a derived class, this method looks for a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>.</source>
          <target state="translated">이 메서드를 찾고 파생된 클래스에서 재정의 되 면는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source>If it finds one, it compares the value of the attribute with the property's current value.</source>
          <target state="translated">발견 되 면 특성의 값을 속성의 현재 값을 비교 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source>It returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> when the default value does not match the property's current value.</source>
          <target state="translated">반환 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 기본값 속성의 현재 값과 일치 하지 않는 경우.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source>If this method cannot find a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>, it looks for a "ShouldPersistMyProperty" method that you need to implement yourself.</source>
          <target state="translated">이 메서드를 찾을 수 없는 경우는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>, 사용자가 직접 구현 해야 하는 "ShouldPersistMyProperty" 메서드를 찾습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source>If this is found, <ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" /&gt;</ph> returns what "ShouldPersistMyProperty" returns.</source>
          <target state="translated">이 항목이 있으면 <ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" /&gt;</ph> "ShouldPersistMyProperty"의 반환을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source>Otherwise, it looks for a "ResetMyProperty" method that you need to implement yourself.</source>
          <target state="translated">그렇지 않으면 사용자가 직접 구현 해야 하는 "ResetMyProperty" 메서드를 찾습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source>If this is found, <ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" /&gt;</ph> returns <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">이 항목이 있으면 <ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" /&gt;</ph> 반환 <ph id="ph2">&lt;see langword="true" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source>If it cannot find a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>, a "ShouldPersistMyProperty" method, or a "ResetMyProperty" method, then it returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">찾을 수 없는 경우는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>, 반환 "ShouldPersistMyProperty" 메서드 또는 "ResetMyProperty" 메서드 합니다 <ph id="ph2">&lt;see langword="false" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.PropertyDescriptor.ComponentType">
          <source>When overridden in a derived class, gets the type of the component this property is bound to.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 이 속성이 바인딩된 구성 요소의 형식을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.ComponentType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of component this property is bound to.</source>
          <target state="translated">이 속성이 바인딩된 구성 요소의 형식을 나타내는 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.ComponentType">
          <source>When the <ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /&gt;</ph> methods are invoked, the object specified might be an instance of this type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /&gt;</ph> 메서드가 호출될 때, 지정된 개체는 이 형식의 인스턴스가 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.ComponentType">
          <source>Typically, this property is implemented through reflection.</source>
          <target state="translated">일반적으로이 속성은 리플렉션을 통해 구현 됩니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.PropertyDescriptor.Converter">
          <source>Gets the type converter for this property.</source>
          <target state="translated">이 속성의 형식 변환기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.Converter">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> that is used to convert the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> of this property.</source>
          <target state="translated">이 속성의 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph>을 변환하는 데 사용되는 <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type to create.</source>
          <target state="translated">만들 형식을 나타내는 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)">
          <source>Creates an instance of the specified type.</source>
          <target state="translated">지정된 형식의 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)">
          <source>A new instance of the type.</source>
          <target state="translated">해당 형식의 새 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.CreateInstance%2A&gt;</ph> looks for a constructor that takes the specified type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.CreateInstance%2A&gt;</ph> 지정 된 형식을 사용 하는 생성자를 찾습니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)">
          <source>If it finds a constructor, the type of the property is passed in.</source>
          <target state="translated">생성자를 찾으면 속성의 형식에 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)">
          <source>Converters and editors use this method to create versions of a component.</source>
          <target state="translated">변환기와 편집기는 구성 요소의 버전을 만드는이 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)">
          <source>This method enables a single component to be reused for more than one type.</source>
          <target state="translated">이 메서드를 사용 하면 단일 구성 요소를 둘 이상의 형식에 대 한 다시 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)">
          <source>for access to private class members and metadata.</source>
          <target state="translated">private 클래스 멤버 및 메타 데이터에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.Equals(System.Object)">
          <source>The object to compare to this <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph>과 비교할 개체입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.Equals(System.Object)">
          <source>Compares this to another object to see if they are equivalent.</source>
          <target state="translated">이 개체를 다른 개체와 비교하여 두 개체가 같은지 확인합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the values are equivalent; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">값이 같으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> that lists the attributes in the parent class.</source>
          <target state="translated">부모 클래스에 있는 특성을 나열하는 <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)">
          <source>Initially, this is empty.</source>
          <target state="translated">처음에는 이 컬렉션이 비어 있습니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)">
          <source>Adds the attributes of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> to the specified list of attributes in the parent class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph>의 특성을 부모 클래스의 지정된 특성 목록에 추가합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)">
          <source>For duplicate attributes, the last one added to the list will be kept.</source>
          <target state="translated">중복 된 특성에 대 한 목록에 추가 하는 마지막 트랜잭션이 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties">
          <source>Returns the default <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>.</source>
          <target state="translated">기본 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties">
          <source>A collection of property descriptor.</source>
          <target state="translated">속성 설명자의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties">
          <source>This method passes <ph id="ph1">`null`</ph> for both the <ph id="ph2">`instance`</ph> parameter and the <ph id="ph3">`filter`</ph> parameter.</source>
          <target state="translated">이 메서드는 전달 <ph id="ph1">`null`</ph> 모두에 대 한는 <ph id="ph2">`instance`</ph> 매개 변수 및 <ph id="ph3">`filter`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties">
          <source>The properties for the <ph id="ph1">`instance`</ph> parameter can differ from the properties of a class, because the container can add or remove properties if the <ph id="ph2">`instance`</ph> parameter is sited.</source>
          <target state="translated">에 대 한 속성의 <ph id="ph1">`instance`</ph> 컨테이너 추가 또는 제거 하는 경우 수 있으므로 매개 변수는 클래스의 속성에서 달라질 수 있습니다는 <ph id="ph2">`instance`</ph> 매개 변수 사이 팅입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties">
          <source>The <ph id="ph1">`filter`</ph> parameter can mix <ph id="ph2">&lt;xref:System.Type&gt;</ph> and <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">`filter`</ph> 매개 변수를 혼합할 수 <ph id="ph2">&lt;xref:System.Type&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties">
          <source>Filtering is defined by the following rules:</source>
          <target state="translated">필터링은 다음 규칙에 의해 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties">
          <source>A <ph id="ph1">&lt;xref:System.Type&gt;</ph> object is treated as a wildcard; it matches any property that has the <ph id="ph2">&lt;xref:System.Type&gt;</ph> in its set of attributes.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Type&gt;</ph> 개체를 와일드 카드 문자로 처리 됩니다; 속성을 일치는 <ph id="ph2">&lt;xref:System.Type&gt;</ph> 해당 특성 집합에 있습니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties">
          <source>If a property does not have an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> of the same class, the property will not be included in the returned array.</source>
          <target state="translated">속성이 없는 경우는 <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> 동일한 클래스의 속성이 포함 되지 것입니다 반환된 된 배열에 있습니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties">
          <source>If the attribute is an instance of <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>, the property must be an exact match to be included in the returned array.</source>
          <target state="translated">특성의 인스턴스 라면 <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>, 속성이 반환 되는 배열에 포함 되도록 정확 하 게 일치 해야 합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties">
          <source>If you specify an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> and it is the default property, it will be included in the returned array, even if there is no instance of <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in the property.</source>
          <target state="translated">지정 하는 경우는 <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> 및은 기본 속성의 인스턴스가 없는 경우에 반환된 된 배열에 포함 될 <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> 속성에 있습니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> to use as a filter.</source>
          <target state="translated">필터로 사용할 <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> 형식의 배열입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> using a specified array of attributes as a filter.</source>
          <target state="translated">지정된 특성 배열을 필터로 사용하여 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> with the properties that match the specified attributes.</source>
          <target state="translated">지정된 특성과 일치하는 속성이 포함된 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
          <source>This method passes <ph id="ph1">`null`</ph> for the <ph id="ph2">`instance`</ph> parameter.</source>
          <target state="translated">이 메서드는 전달 <ph id="ph1">`null`</ph> 에 대 한는 <ph id="ph2">`instance`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
          <source>The properties for the <ph id="ph1">`instance`</ph> parameter can differ from the properties of a class, because the site can add or remove properties if the <ph id="ph2">`instance`</ph> parameter is sited.</source>
          <target state="translated">에 대 한 속성의 <ph id="ph1">`instance`</ph> 사이트를 추가 하거나 경우 속성을 제거 하기 때문에 매개 변수는 클래스의 속성에서 달라질 수 있습니다는 <ph id="ph2">`instance`</ph> 매개 변수 사이 팅입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
          <source>The <ph id="ph1">`filter`</ph> parameter can mix <ph id="ph2">&lt;xref:System.Type&gt;</ph> and <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">`filter`</ph> 매개 변수를 혼합할 수 <ph id="ph2">&lt;xref:System.Type&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
          <source>Filtering is defined by the following rules:</source>
          <target state="translated">필터링은 다음 규칙에 의해 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
          <source>A <ph id="ph1">&lt;xref:System.Type&gt;</ph> object is treated as a wildcard; it matches any property that has the <ph id="ph2">&lt;xref:System.Type&gt;</ph> in its set of attributes.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Type&gt;</ph> 개체를 와일드 카드 문자로 처리 됩니다; 속성을 일치는 <ph id="ph2">&lt;xref:System.Type&gt;</ph> 해당 특성 집합에 있습니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
          <source>If a property does not have an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> of the same class, the property will not be included in the returned array.</source>
          <target state="translated">속성이 없는 경우는 <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> 동일한 클래스의 속성이 포함 되지 것입니다 반환된 된 배열에 있습니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
          <source>If the attribute is an instance of <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>, the property must be an exact match to be included in the returned array.</source>
          <target state="translated">특성의 인스턴스 라면 <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>, 속성이 반환 되는 배열에 포함 되도록 정확 하 게 일치 해야 합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
          <source>If you specify an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instance and it is the default property, it will be included in the returned array even if there is no instance of the <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in the property.</source>
          <target state="translated">지정 하는 경우는 <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> 인스턴스는 기본 속성의 인스턴스가 없는 경우에 반환된 된 배열에 포함 됩니다는 <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> 속성에 있습니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
          <source>A component to get the properties for.</source>
          <target state="translated">속성을 가져올 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> for a given object.</source>
          <target state="translated">지정된 개체에 대해 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> with the properties for the specified component.</source>
          <target state="translated">지정된 구성 요소의 속성이 포함된 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
          <source>This method passes <ph id="ph1">`null`</ph> for the <ph id="ph2">`filter`</ph> parameter.</source>
          <target state="translated">이 메서드는 전달 <ph id="ph1">`null`</ph> 에 대 한는 <ph id="ph2">`filter`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
          <source>The properties for the <ph id="ph1">`instance`</ph> parameter can differ from the properties of a class, because the site can add or remove properties if the <ph id="ph2">`instance`</ph> parameter is sited.</source>
          <target state="translated">에 대 한 속성의 <ph id="ph1">`instance`</ph> 사이트를 추가 하거나 경우 속성을 제거 하기 때문에 매개 변수는 클래스의 속성에서 달라질 수 있습니다는 <ph id="ph2">`instance`</ph> 매개 변수 사이 팅입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
          <source>The <ph id="ph1">`filter`</ph> parameter can mix <ph id="ph2">&lt;xref:System.Type&gt;</ph> and <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">`filter`</ph> 매개 변수를 혼합할 수 <ph id="ph2">&lt;xref:System.Type&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
          <source>Filtering is defined by the following rules:</source>
          <target state="translated">필터링은 다음 규칙에 의해 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.Type&gt;</ph> object is treated as a wildcard; it matches any property that has the <ph id="ph2">&lt;xref:System.Type&gt;</ph> in its set of attributes.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Type&gt;</ph> 개체를 와일드 카드 문자로 처리 됩니다; 속성을 일치는 <ph id="ph2">&lt;xref:System.Type&gt;</ph> 해당 특성 집합에 있습니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
          <source>If a property does not have an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> of the same class, the property will not be included in the returned array.</source>
          <target state="translated">속성이 없는 경우는 <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> 동일한 클래스의 속성이 포함 되지 것입니다 반환된 된 배열에 있습니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
          <source>If the attribute is an instance of <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>, the property must be an exact match to be included in the returned array.</source>
          <target state="translated">특성의 인스턴스 라면 <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>, 속성이 반환 되는 배열에 포함 되도록 정확 하 게 일치 해야 합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
          <source>If you specify an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instance and it is the default property, it will be included in the returned array even if there is no instance of the <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in the property.</source>
          <target state="translated">지정 하는 경우는 <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> 인스턴스는 기본 속성의 인스턴스가 없는 경우에 반환된 된 배열에 포함 됩니다는 <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> 속성에 있습니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>A component to get the properties for.</source>
          <target state="translated">속성을 가져올 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> to use as a filter.</source>
          <target state="translated">필터로 사용할 <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> 형식의 배열입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> for a given object using a specified array of attributes as a filter.</source>
          <target state="translated">지정된 특성 배열을 필터로 사용하여 지정된 개체에 대한 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> with the properties that match the specified attributes for the specified component.</source>
          <target state="translated">지정된 구성 요소의 지정된 특성과 일치하는 속성이 포함된 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>The properties for the <ph id="ph1">`instance`</ph> parameter can differ from the properties of a class, because the site can add or remove properties if the <ph id="ph2">`instance`</ph> parameter is sited.</source>
          <target state="translated">에 대 한 속성의 <ph id="ph1">`instance`</ph> 사이트를 추가 하거나 경우 속성을 제거 하기 때문에 매개 변수는 클래스의 속성에서 달라질 수 있습니다는 <ph id="ph2">`instance`</ph> 매개 변수 사이 팅입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>The <ph id="ph1">`filter`</ph> parameter can mix <ph id="ph2">&lt;xref:System.Type&gt;</ph> and <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">`filter`</ph> 매개 변수를 혼합할 수 <ph id="ph2">&lt;xref:System.Type&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>Filtering is defined by the following rules:</source>
          <target state="translated">필터링은 다음 규칙에 의해 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>A <ph id="ph1">&lt;xref:System.Type&gt;</ph> object is treated as a wildcard; it matches any property that has the <ph id="ph2">&lt;xref:System.Type&gt;</ph> in its set of attributes.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Type&gt;</ph> 개체를 와일드 카드 문자로 처리 됩니다; 속성을 일치는 <ph id="ph2">&lt;xref:System.Type&gt;</ph> 해당 특성 집합에 있습니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>If a property does not have an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> of the same class, the property will not be included in the returned array.</source>
          <target state="translated">속성이 없는 경우는 <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> 동일한 클래스의 속성이 포함 되지 것입니다 반환된 된 배열에 있습니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>If the attribute is an instance of <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>, the property must be an exact match to be included in the returned array.</source>
          <target state="translated">특성의 인스턴스 라면 <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>, 속성이 반환 되는 배열에 포함 되도록 정확 하 게 일치 해야 합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>If you specify an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instance and it is the default property, it will be included in the returned array even if there is no instance of the <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in the property.</source>
          <target state="translated">지정 하는 경우는 <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> 인스턴스는 기본 속성의 인스턴스가 없는 경우에 반환된 된 배열에 포함 됩니다는 <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> 속성에 있습니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>Generally, child properties should be returned by implementing the <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter.GetProperties%2A&gt;</ph> member of the <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> returned from this property.</source>
          <target state="translated">자식 속성을 구현 하 여 반환 하도록 일반적으로 <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter.GetProperties%2A&gt;</ph> 의 멤버는 <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> 이 속성에서 반환 합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)">
          <source>The base type of editor, which is used to differentiate between multiple editors that a property supports.</source>
          <target state="translated">속성이 지원하는 여러 편집기를 구별하는 데 사용되는 기본 편집기 형식입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)">
          <source>Gets an editor of the specified type.</source>
          <target state="translated">지정된 형식의 편집기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)">
          <source>An instance of the requested editor type, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if an editor cannot be found.</source>
          <target state="translated">요청된 편집기 형식의 인스턴스이거나, 편집기를 찾을 수 없는 경우 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetHashCode">
          <source>Returns the hash code for this object.</source>
          <target state="translated">이 개체에 대한 해시 코드를 반환합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetHashCode">
          <source>The hash code for this object.</source>
          <target state="translated">이 개체의 해시 코드입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the invocation target.</source>
          <target state="translated">호출 대상의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)">
          <source>The potential invocation target.</source>
          <target state="translated">잠재적인 호출 대상입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)">
          <source>This method returns the object that should be used during invocation of members.</source>
          <target state="translated">이 메서드는 멤버를 호출하는 동안 사용해야 하는 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that should be used during invocation of members.</source>
          <target state="translated">멤버를 호출하는 동안 사용해야 하는 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)">
          <source>Typically, the return value will be the same as the <ph id="ph1">`instance`</ph> passed in.</source>
          <target state="translated">일반적으로 반환 값은 같을 <ph id="ph1">`instance`</ph> 전달 합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)">
          <source>If someone associated another object with this instance, or if the instance is a custom type descriptor, the <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.GetInvocationTarget%2A&gt;</ph> method may return a different value.</source>
          <target state="translated">이 인스턴스와 다른 개체가 연결 하는 경우 또는 인스턴스가 있는 경우 사용자 지정 형식 설명자는 <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.GetInvocationTarget%2A&gt;</ph> 메서드는 다른 값을 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)">
          <source>The assembly-qualified name of the type to retrieve.</source>
          <target state="translated">검색할 형식에 대한 어셈블리의 정규화된 이름입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)">
          <source>Returns a type using its name.</source>
          <target state="translated">해당 이름을 사용하는 형식을 반환합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that matches the given type name, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if a match cannot be found.</source>
          <target state="translated">지정된 형식 이름과 일치하는 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>이거나, 일치하는 형식을 찾을 수 없는 경우 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)">
          <source>To find the appropriate type, this method first checks the assembly of the type that this <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> references.</source>
          <target state="translated">적절 한 유형을 찾으려면,이 메서드 먼저 확인 된 형식의 어셈블리가 <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> 참조 합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)">
          <source>If it does not find the type in the assembly, it calls <ph id="ph1">&lt;xref:System.Type.GetType%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">호출 어셈블리의 형식을 찾지 못하면, <ph id="ph1">&lt;xref:System.Type.GetType%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)">
          <source>The component with the property for which to retrieve the value.</source>
          <target state="translated">값을 검색할 속성이 포함된 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)">
          <source>When overridden in a derived class, gets the current value of the property on a component.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 구성 요소에 대한 현재 속성 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)">
          <source>The value of a property for a given component.</source>
          <target state="translated">지정된 구성 요소에 대한 속성 값입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)">
          <source>Typically, this method is implemented through reflection.</source>
          <target state="translated">일반적으로이 메서드는 리플렉션을 통해 구현 됩니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)">
          <source>This method automatically calls the pre-change method, <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A&gt;</ph>, and post-change method, <ph id="ph2">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt;</ph>, of the <ph id="ph3">&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;</ph>.</source>
          <target state="translated">이 메서드는 자동으로 사전 변경 메서드를 호출 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A&gt;</ph>, 사후 변경 및 <ph id="ph2">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt;</ph>의 <ph id="ph3">&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)">
          <source>When you override this method, it gets the current value of the property by invoking a "GetMyProperty" method that you need to implement.</source>
          <target state="translated">이 메서드를 재정의 하면 속성의 현재 값을 구현 해야 하는 "GetMyProperty" 메서드를 호출 하 여 가져옵니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)">
          <source>An exception in that method should pass through.</source>
          <target state="translated">메서드에 예외를 통해 전달 해야 합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)">
          <source>The component for which to retrieve event handlers.</source>
          <target state="translated">이벤트 처리기를 검색할 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)">
          <source>Retrieves the current set of <bpt id="p1">&lt;c&gt;</bpt>ValueChanged<ept id="p1">&lt;/c&gt;</ept> event handlers for a specific component</source>
          <target state="translated">특정 구성 요소에 대한 <bpt id="p1">&lt;c&gt;</bpt>ValueChanged<ept id="p1">&lt;/c&gt;</ept> 이벤트 처리기의 현재 집합을 검색합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)">
          <source>A combined multicast event handler, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no event handlers are currently assigned to <ph id="ph2">&lt;paramref name="component" /&gt;</ph>.</source>
          <target state="translated">결합된 멀티캐스트 이벤트 처리기입니다. <ph id="ph2">&lt;paramref name="component" /&gt;</ph>에 이벤트 처리기가 현재 할당되지 않은 경우 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.PropertyDescriptor.IsLocalizable">
          <source>Gets a value indicating whether this property should be localized, as specified in the <ph id="ph1">&lt;see cref="T:System.ComponentModel.LocalizableAttribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.LocalizableAttribute" /&gt;</ph>에 지정된, 이 속성이 지역화되어야 하는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.IsLocalizable">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the member is marked with the <ph id="ph2">&lt;see cref="T:System.ComponentModel.LocalizableAttribute" /&gt;</ph> set to <ph id="ph3">&lt;see langword="true" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">멤버의 <ph id="ph2">&lt;see cref="T:System.ComponentModel.LocalizableAttribute" /&gt;</ph>가 <ph id="ph1">&lt;see langword="true" /&gt;</ph>로 설정된 것으로 표시되면 <ph id="ph3">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.IsLocalizable">
          <source>When a property is marked with the <ph id="ph1">&lt;xref:System.ComponentModel.LocalizableAttribute&gt;</ph> set to <ph id="ph2">`true`</ph> and used in a visual designer, its values are saved in a resource file.</source>
          <target state="translated">속성으로 표시 된 경우는 <ph id="ph1">&lt;xref:System.ComponentModel.LocalizableAttribute&gt;</ph> 로 설정 <ph id="ph2">`true`</ph> 비주얼 디자이너에서 사용 되는, 해당 값은 리소스 파일에 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.IsLocalizable">
          <source>If you mark a property with the attribute and then set the property in code, resource files are not used.</source>
          <target state="translated">특성을 사용 하 여 속성을 표시 하 고 다음 코드에서 속성을 설정 하는 경우에 리소스 파일 사용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.PropertyDescriptor.IsReadOnly">
          <source>When overridden in a derived class, gets a value indicating whether this property is read-only.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 이 속성이 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property is read-only; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">속성이 읽기 전용이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)">
          <source>The object that raises the event.</source>
          <target state="translated">이벤트를 발생시키는 개체입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)">
          <source>Raises the <bpt id="p1">&lt;c&gt;</bpt>ValueChanged<ept id="p1">&lt;/c&gt;</ept> event that you implemented.</source>
          <target state="translated">구현된 <bpt id="p1">&lt;c&gt;</bpt>ValueChanged<ept id="p1">&lt;/c&gt;</ept> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)">
          <source>This method should be called by your property descriptor implementation when the property value has changed.</source>
          <target state="translated">속성 값이 변경 하는 경우 속성 설명자 구현에 따라이 메서드를 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.PropertyDescriptor.PropertyType">
          <source>When overridden in a derived class, gets the type of the property.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 속성 형식을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.PropertyType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of the property.</source>
          <target state="translated">속성 형식을 나타내는 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.PropertyType">
          <source>Typically, this property is implemented through reflection.</source>
          <target state="translated">일반적으로이 속성은 리플렉션을 통해 구현 됩니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
          <source>The component to remove the handler for.</source>
          <target state="translated">처리기를 제거할 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
          <source>The delegate to remove as a listener.</source>
          <target state="translated">수신기로 제거할 대리자입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
          <source>Enables other objects to be notified when this property changes.</source>
          <target state="translated">이 속성이 변경되면 다른 개체에서 알림을 받을 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> or <ph id="ph2">&lt;paramref name="handler" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="handler" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>The component with the property value that is to be reset to the default value.</source>
          <target state="translated">기본값으로 다시 설정될 속성 값이 포함된 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>When overridden in a derived class, resets the value for this property of the component to the default value.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 구성 요소의 이 속성 값을 기본값으로 다시 설정합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>Typically, this method is implemented through reflection.</source>
          <target state="translated">일반적으로이 메서드는 리플렉션을 통해 구현 됩니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>This method determines the value to reset the property to in the following order of precedence:</source>
          <target state="translated">이 메서드를 우선 순위는 다음 순서에 따라 속성을 다시 설정할 값을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>There is a shadowed property for this property.</source>
          <target state="translated">이 속성에 대 한 숨겨진 속성이 있습니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>There is a <ph id="ph1">&lt;xref:System.ComponentModel.DefaultValueAttribute&gt;</ph> for this property.</source>
          <target state="translated">한 <ph id="ph1">&lt;xref:System.ComponentModel.DefaultValueAttribute&gt;</ph> 이 속성에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>There is a "ResetMyProperty" method that you have implemented, where "MyProperty" is the name of the property you pass to it.</source>
          <target state="translated">"MyProperty"가 전달한 속성의 이름, 구현 된 "ResetMyProperty" 메서드가 있습니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>This method creates a <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> automatically in the following order:</source>
          <target state="translated">이 메서드가 만드는 <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> 는 다음 순서 대로 자동으로:</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>The method calls the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=nameWithType&gt;</ph> method to create a new <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> to represent the changes.</source>
          <target state="translated">메서드 호출의 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=nameWithType&gt;</ph> 새로 만들려면 메서드 <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> 변경 내용을 나타내는를 합니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>The method calls the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=nameWithType&gt;</ph> method to indicate that the transaction has begun and the changes are about to occur.</source>
          <target state="translated">메서드 호출에서 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=nameWithType&gt;</ph> 메서드 표시 되는 트랜잭션이 시작 된 변경 내용이 발생 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>The method resets the property to the value determined by this method's checking order.</source>
          <target state="translated">메서드는 속성 값이이 메서드의 확인 순서에 의해 결정 다시 설정 합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>The method calls the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=nameWithType&gt;</ph> method to indicate that the changes have occurred.</source>
          <target state="translated">메서드 호출의 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=nameWithType&gt;</ph> 메서드를 나타내는 변경 내용이 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>The method calls <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=nameWithType&gt;</ph> to indicate that the transaction is completed.</source>
          <target state="translated">메서드 호출 <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=nameWithType&gt;</ph> 트랜잭션이 완료 되었음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>The purpose of the transaction is to support <ph id="ph1">`Undo`</ph> and <ph id="ph2">`Redo`</ph> functionality.</source>
          <target state="translated">트랜잭션이의 목적은 지원 하기 위해 <ph id="ph1">`Undo`</ph> 및 <ph id="ph2">`Redo`</ph> 기능입니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>When overridden in a derived class, this method looks for a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>.</source>
          <target state="translated">이 메서드를 찾고 파생된 클래스에서 재정의 되 면는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>If it finds one, it sets the value of the property to the <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph> it found.</source>
          <target state="translated">속성의 값을 설정, 발견 되 면는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph> 발견 합니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>If this method cannot find a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>, it looks for a "ResetMyProperty" method that you need to implement.</source>
          <target state="translated">이 메서드를 찾을 수 없는 경우는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>를 구현 해야 하는 "ResetMyProperty" 메서드를 찾습니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>If this is found, the <ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" /&gt;</ph> method invokes it.</source>
          <target state="translated">이 항목이 있으면는 <ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" /&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>If <ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" /&gt;</ph> cannot find a <ph id="ph2">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph> or a "ResetMyProperty" method that you implemented, it does not perform an operation.</source>
          <target state="translated">경우 <ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" /&gt;</ph> 찾을 수 없습니다는 <ph id="ph2">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph> 또는 "ResetMyProperty" 메서드를 구현 하는 작업을 수행 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.PropertyDescriptor.SerializationVisibility">
          <source>Gets a value indicating whether this property should be serialized, as specified in the <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" /&gt;</ph>에 지정된, 이 속성이 serialize되어야 하는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.SerializationVisibility">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignerSerializationVisibility" /&gt;</ph> enumeration values that specifies whether this property should be serialized.</source>
          <target state="translated">이 속성이 serialize되어야 하는지 여부를 지정하는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignerSerializationVisibility" /&gt;</ph> 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>The component with the property value that is to be set.</source>
          <target state="translated">설정될 속성 값이 포함된 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>The new value.</source>
          <target state="translated">새 값입니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>When overridden in a derived class, sets the value of the component to a different value.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 구성 요소의 값을 다른 값으로 설정합니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>Typically, this method is implemented through reflection.</source>
          <target state="translated">일반적으로이 메서드는 리플렉션을 통해 구현 됩니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>This method creates a <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> automatically in the following order:</source>
          <target state="translated">이 메서드가 만드는 <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> 는 다음 순서 대로 자동으로:</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>The method calls the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=nameWithType&gt;</ph> method to create a new <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> to represent the changes.</source>
          <target state="translated">메서드 호출의 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=nameWithType&gt;</ph> 새로 만들려면 메서드 <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> 변경 내용을 나타내는를 합니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>The method calls the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=nameWithType&gt;</ph> method to indicate that the transaction has begun and the changes are about to occur.</source>
          <target state="translated">메서드 호출에서 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=nameWithType&gt;</ph> 메서드 표시 되는 트랜잭션이 시작 된 변경 내용이 발생 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>The method resets the property to the value determined by this method's checking order.</source>
          <target state="translated">메서드는 속성 값이이 메서드의 확인 순서에 의해 결정 다시 설정 합니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>The method calls the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=nameWithType&gt;</ph> method to indicate that the changes have occurred.</source>
          <target state="translated">메서드 호출의 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=nameWithType&gt;</ph> 메서드를 나타내는 변경 내용이 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>The method calls <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=nameWithType&gt;</ph> to indicate that the transaction is complete.</source>
          <target state="translated">메서드 호출 <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=nameWithType&gt;</ph> 트랜잭션이 완료 되었음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>The purpose of the transaction is to support <ph id="ph1">`Undo`</ph> and <ph id="ph2">`Redo`</ph> functionality.</source>
          <target state="translated">트랜잭션이의 목적은 지원 하기 위해 <ph id="ph1">`Undo`</ph> 및 <ph id="ph2">`Redo`</ph> 기능입니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>When you override this method, it should set the value of the property by invoking the appropriate "SetMyProperty" method that you need to implement.</source>
          <target state="translated">이 메서드를 재정의 하는 경우 구현 해야 하는 적절 한 "SetMyProperty" 메서드를 호출 하 여 속성의 값을 설정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>If the value specified is not valid, the component should throw an exception, which is passed up.</source>
          <target state="translated">지정 된 값이 유효 하지 않을 경우 구성 요소를 전달 되는 예외를 throw 해야 합니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>You should design the property so that a "GetMyProperty" method (that you have implemented) following a "SetMyProperty" method returns the value passed in when the "SetMyProperty" method does not throw an exception.</source>
          <target state="translated">"SetMyProperty" 메서드 뒤 "GetMyProperty" 메서드 (사용자가 구현한) "SetMyProperty" 메서드는 예외를 throw 하지 않는 경우 전달 된 값을 반환 하는 속성을 디자인 해야 합니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>The component with the property to be examined for persistence.</source>
          <target state="translated">지속성을 검사할 속성이 포함된 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>When overridden in a derived class, determines a value indicating whether the value of this property needs to be persisted.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 이 속성 값이 지속되어야 하는지 여부를 나타내는 값을 확인합니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property should be persisted; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">속성을 지속시켜야 하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>Typically, this method is implemented through reflection.</source>
          <target state="translated">일반적으로이 메서드는 리플렉션을 통해 구현 됩니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>When overridden in a derived class, this method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current value of the property is different from its default value.</source>
          <target state="translated">이 메서드가 반환 하는 파생된 클래스에서 재정의 되 면 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 속성의 현재 값은 기본 값과에서 다른 경우.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>It looks for a default value by first looking for a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>.</source>
          <target state="translated">첫 번째 검색 하 여 기본 값을 찾고는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>If the method finds this attribute, it compares the value of the attribute with the property's current value.</source>
          <target state="translated">이 특성을 메서드를 발견할 경우 특성의 값을 속성의 현재 값을 비교 합니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>If this method cannot find a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>, it looks for a "ShouldSerializeMyProperty" method that you need to implement.</source>
          <target state="translated">이 메서드를 찾을 수 없는 경우는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>를 구현 해야 하는 "ShouldSerializeMyProperty" 메서드를 찾습니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>If it is found, <ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)" /&gt;</ph> invokes it.</source>
          <target state="translated">가 있을 경우 <ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)" /&gt;</ph> 를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>If this method cannot find a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph> or a "ShouldSerializeMyProperty" method, it cannot create optimizations and it returns <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">이 메서드를 찾을 수 없는 경우는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph> "ShouldSerializeMyProperty" 메서드는 최적화 기능을 만들 수 없습니다 및 반환 또는 <ph id="ph2">&lt;see langword="true" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.ComponentDesigner" /&gt;</ph> class implements special serialization logic for inherited components.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.ComponentDesigner" /&gt;</ph> 클래스는 상속 된 구성 요소에 대 한 특별 한 직렬화 논리를 구현 합니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>For more information, see <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.ComponentDesigner" /&gt;</ph>.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.ComponentDesigner" /&gt;</ph>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents">
          <source>Gets a value indicating whether value change notifications for this property may originate from outside the property descriptor.</source>
          <target state="translated">이 속성의 값 변경 알림이 속성 설명자 외부에서 발생되었는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if value change notifications may originate from outside the property descriptor; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">값 변경 알림이 속성 설명자 외부에서 발생되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents%2A&gt;</ph> property indicates whether value change notifications for this property may originate from outside the property descriptor, such as from the component itself, or whether notifications will only originate from direct calls made to the <ph id="ph2">&lt;xref:System.ComponentModel.PropertyDescriptor.SetValue%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents%2A&gt;</ph> 여부이 속성에 대 한 값 변경 알림이 외부에서 발생 속성 설명자와 같은 구성 요소 자체, 또는 여부 에서만 발생는 에대한직접호출에서속성표시<ph id="ph2">&lt;xref:System.ComponentModel.PropertyDescriptor.SetValue%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents">
          <source>For example, the component may implement the <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> interface, or may have an explicit <ph id="ph2">`name.Changed`</ph> event for this property.</source>
          <target state="translated">예를 들어 구성 요소가 구현할 수 있습니다는 <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> 인터페이스, 또는 명시적 있을 <ph id="ph2">`name.Changed`</ph> 이 속성에 대 한 이벤트입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>