<Type Name="PropertyDescriptor" FullName="System.ComponentModel.PropertyDescriptor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8e059b64b5fedee627a7dad23bafc67c4252df0d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30381227" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PropertyDescriptor : System.ComponentModel.MemberDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PropertyDescriptor extends System.ComponentModel.MemberDescriptor" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.PropertyDescriptor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PropertyDescriptor&#xA;Inherits MemberDescriptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyDescriptor abstract : System::ComponentModel::MemberDescriptor" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.MemberDescriptor</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="8b08f-101">클래스에 대한 속성의 추상화를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8b08f-101">Provides an abstraction of a property on a class.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b08f-102">속성 설명은 이름, 특성, 속성, 연관 된 구성 요소 클래스 및 속성의 형식으로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-102">A description of a property consists of a name, its attributes, the component class that the property is associated with, and the type of the property.</span></span>  
  
 <span data-ttu-id="8b08f-103"><xref:System.ComponentModel.PropertyDescriptor> 다음과 같은 속성 및 메서드를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-103"><xref:System.ComponentModel.PropertyDescriptor> provides the following properties and methods:</span></span>  
  
-   <span data-ttu-id="8b08f-104"><xref:System.ComponentModel.PropertyDescriptor.Converter%2A> 포함 된 <xref:System.ComponentModel.TypeConverter> 이 속성에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-104"><xref:System.ComponentModel.PropertyDescriptor.Converter%2A> contains the <xref:System.ComponentModel.TypeConverter> for this property.</span></span>  
  
-   <span data-ttu-id="8b08f-105"><xref:System.ComponentModel.PropertyDescriptor.IsLocalizable%2A> 이 속성을 지역화 해야 하는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-105"><xref:System.ComponentModel.PropertyDescriptor.IsLocalizable%2A> indicates whether this property should be localized.</span></span>  
  
-   <span data-ttu-id="8b08f-106"><xref:System.ComponentModel.PropertyDescriptor.GetEditor%2A> 지정 된 형식의 편집기를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-106"><xref:System.ComponentModel.PropertyDescriptor.GetEditor%2A> returns an editor of the specified type.</span></span>  
  
 <span data-ttu-id="8b08f-107"><xref:System.ComponentModel.PropertyDescriptor> 또한 다음을 제공 `abstract` 속성 및 메서드:</span><span class="sxs-lookup"><span data-stu-id="8b08f-107"><xref:System.ComponentModel.PropertyDescriptor> also provides the following `abstract` properties and methods:</span></span>  
  
-   <span data-ttu-id="8b08f-108"><xref:System.ComponentModel.PropertyDescriptor.ComponentType%2A> 이 속성이 바인딩되는 구성 요소의 유형을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-108"><xref:System.ComponentModel.PropertyDescriptor.ComponentType%2A> contains the type of component this property is bound to.</span></span>  
  
-   <span data-ttu-id="8b08f-109"><xref:System.ComponentModel.PropertyDescriptor.IsReadOnly%2A> 이 속성이 읽기 전용인 지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-109"><xref:System.ComponentModel.PropertyDescriptor.IsReadOnly%2A> indicates whether this property is read-only.</span></span>  
  
-   <span data-ttu-id="8b08f-110"><xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> 속성의 유형을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-110"><xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> gets the type of the property.</span></span>  
  
-   <span data-ttu-id="8b08f-111"><xref:System.ComponentModel.PropertyDescriptor.CanResetValue%2A> 구성 요소를 다시 설정 구성 요소 값이 변경 되는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-111"><xref:System.ComponentModel.PropertyDescriptor.CanResetValue%2A> indicates whether resetting the component changes the value of the component.</span></span>  
  
-   <span data-ttu-id="8b08f-112"><xref:System.ComponentModel.PropertyDescriptor.GetValue%2A> 구성 요소에서 속성의 현재 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-112"><xref:System.ComponentModel.PropertyDescriptor.GetValue%2A> returns the current value of the property on a component.</span></span>  
  
-   <span data-ttu-id="8b08f-113"><xref:System.ComponentModel.PropertyDescriptor.ResetValue%2A> 이 속성의 구성 요소에 대 한 값을 다시 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-113"><xref:System.ComponentModel.PropertyDescriptor.ResetValue%2A> resets the value for this property of the component.</span></span>  
  
-   <span data-ttu-id="8b08f-114"><xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> 구성 요소 값을 다른 값으로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-114"><xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> sets the value of the component to a different value.</span></span>  
  
-   <span data-ttu-id="8b08f-115"><xref:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue%2A> 이 속성의 값을 유지 해야 하는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-115"><xref:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue%2A> indicates whether the value of this property needs to be persisted.</span></span>  
  
 <span data-ttu-id="8b08f-116">일반적으로 `abstract` 멤버 리플렉션을 통해 구현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-116">Typically, the `abstract` members are implemented through reflection.</span></span> <span data-ttu-id="8b08f-117">리플렉션에 대 한 자세한 내용은 항목을 참조 [리플렉션](~/docs/framework/reflection-and-codedom/reflection.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-117">For more information about reflection, see the topics in [Reflection](~/docs/framework/reflection-and-codedom/reflection.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b08f-118">다음 코드 예제에서는의 예제를 기반으로 <xref:System.ComponentModel.PropertyDescriptorCollection> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-118">The following code example is built upon the example in the <xref:System.ComponentModel.PropertyDescriptorCollection> class.</span></span> <span data-ttu-id="8b08f-119">텍스트 상자에 있는 단추의 텍스트의 정보 (예: 범주, 설명, 표시 이름)를 인쇄 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-119">It prints the information (category, description, display name) of the text of a button in a text box.</span></span> <span data-ttu-id="8b08f-120">있다고 가정 `button1` 및 `textbox1` 폼에 인스턴스화 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-120">It assumes that `button1` and `textbox1` have been instantiated on a form.</span></span>  
  
 [!code-cpp[PropertyDescriptor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/PropertyDescriptor/CPP/propertydescriptor.cpp#1)]
 [!code-csharp[PropertyDescriptor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/PropertyDescriptor/CS/propertydescriptor.cs#1)]
 [!code-vb[PropertyDescriptor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PropertyDescriptor/VB/propertydescriptor.vb#1)]  
  
 <span data-ttu-id="8b08f-121">다음 코드 예제는 읽기 전용 래퍼를 제공 하는 사용자 지정 속성 설명자를 구현 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-121">The following code example shows how to implement a custom property descriptor that provides a read-only wrapper around a property.</span></span> <span data-ttu-id="8b08f-122">`SerializeReadOnlyPropertyDescriptor` 는 컨트롤의에 대 한 읽기 전용 속성 설명자를 제공 하는 사용자 지정 디자이너에서 사용 <xref:System.Windows.Forms.Control.Size%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-122">The `SerializeReadOnlyPropertyDescriptor` is used in a custom designer to provide a read-only property descriptor for the control's <xref:System.Windows.Forms.Control.Size%2A> property.</span></span>  
  
 [!code-csharp[System.ComponentModel.PropertyDescriptor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/CS/SerializeReadOnlyPropertyDescriptor.cs#1)]
 [!code-vb[System.ComponentModel.PropertyDescriptor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/VB/SerializeReadOnlyPropertyDescriptor.vb#1)]  
  
 <span data-ttu-id="8b08f-123">다음 코드 예제는 사용 하는 방법을 보여는 `SerializeReadOnlyPropertyDescriptor` 사용자 지정 디자이너에서입니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-123">The following code examples show how to use the `SerializeReadOnlyPropertyDescriptor` in a custom designer.</span></span>  
  
 [!code-csharp[System.ComponentModel.PropertyDescriptor#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/CS/DemoControlDesigner.cs#10)]
 [!code-vb[System.ComponentModel.PropertyDescriptor#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/VB/DemoControlDesigner.vb#10)]  
[!code-csharp[System.ComponentModel.PropertyDescriptor#100](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/CS/DemoControl.cs#100)]
[!code-vb[System.ComponentModel.PropertyDescriptor#100](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/VB/DemoControl.vb#100)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.MemberDescriptor" />
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.ComponentModel.DefaultValueAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8b08f-124">
            <see cref="T:System.ComponentModel.PropertyDescriptor" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-124">Initializes a new instance of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PropertyDescriptor (System.ComponentModel.MemberDescriptor descr);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.MemberDescriptor descr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (descr As MemberDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PropertyDescriptor(System::ComponentModel::MemberDescriptor ^ descr);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="descr" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="descr">
          <span data-ttu-id="8b08f-125">속성 이름 및 특성이 들어 있는 <see cref="T:System.ComponentModel.MemberDescriptor" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-125">A <see cref="T:System.ComponentModel.MemberDescriptor" /> that contains the name of the property and its attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b08f-126">지정된 <see cref="T:System.ComponentModel.PropertyDescriptor" />의 이름과 특성을 사용하여 <see cref="T:System.ComponentModel.MemberDescriptor" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-126">Initializes a new instance of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> class with the name and attributes in the specified <see cref="T:System.ComponentModel.MemberDescriptor" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PropertyDescriptor (System.ComponentModel.MemberDescriptor descr, Attribute[] attrs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.MemberDescriptor descr, class System.Attribute[] attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (descr As MemberDescriptor, attrs As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PropertyDescriptor(System::ComponentModel::MemberDescriptor ^ descr, cli::array &lt;Attribute ^&gt; ^ attrs);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="descr" Type="System.ComponentModel.MemberDescriptor" />
        <Parameter Name="attrs" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="descr">
          <span data-ttu-id="8b08f-127">멤버 이름 및 특성이 들어 있는 <see cref="T:System.ComponentModel.MemberDescriptor" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-127">A <see cref="T:System.ComponentModel.MemberDescriptor" /> containing the name of the member and its attributes.</span>
          </span>
        </param>
        <param name="attrs">
          <span data-ttu-id="8b08f-128">속성과 연결할 특성이 들어 있는 <see cref="T:System.Attribute" /> 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-128">An <see cref="T:System.Attribute" /> array containing the attributes you want to associate with the property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b08f-129">지정된 <see cref="T:System.ComponentModel.PropertyDescriptor" />의 이름과 <see cref="T:System.ComponentModel.MemberDescriptor" /> 및 <see cref="T:System.ComponentModel.MemberDescriptor" /> 배열 모두의 특성을 사용하여 <see cref="T:System.Attribute" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-129">Initializes a new instance of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> class with the name in the specified <see cref="T:System.ComponentModel.MemberDescriptor" /> and the attributes in both the <see cref="T:System.ComponentModel.MemberDescriptor" /> and the <see cref="T:System.Attribute" /> array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b08f-130">이 생성자의 특성을 추가 <xref:System.Attribute> 배열 특성에 <xref:System.ComponentModel.MemberDescriptor>합니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-130">This constructor appends the attributes in the <xref:System.Attribute> array to the attributes in the <xref:System.ComponentModel.MemberDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PropertyDescriptor (string name, Attribute[] attrs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string name, class System.Attribute[] attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.#ctor(System.String,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (name As String, attrs As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PropertyDescriptor(System::String ^ name, cli::array &lt;Attribute ^&gt; ^ attrs);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attrs" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8b08f-131">속성의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-131">The name of the property.</span>
          </span>
        </param>
        <param name="attrs">
          <span data-ttu-id="8b08f-132">속성 특성이 들어 있는 <see cref="T:System.Attribute" /> 형식의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-132">An array of type <see cref="T:System.Attribute" /> that contains the property attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b08f-133">지정된 이름과 특성을 사용하여 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-133">Initializes a new instance of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> class with the specified name and attributes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="AddValueChanged">
      <MemberSignature Language="C#" Value="public virtual void AddValueChanged (object component, EventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddValueChanged(object component, class System.EventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddValueChanged (component As Object, handler As EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddValueChanged(System::Object ^ component, EventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="handler" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="8b08f-134">처리기를 추가할 구성 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-134">The component to add the handler for.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="8b08f-135">수신기로 추가할 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-135">The delegate to add as a listener.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b08f-136">이 속성이 변경되면 다른 개체에서 알림을 받을 수 있도록 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-136">Enables other objects to be notified when this property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8b08f-137">
            <paramref name="component" /> 또는 <paramref name="handler" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-137">
              <paramref name="component" /> or <paramref name="handler" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanResetValue">
      <MemberSignature Language="C#" Value="public abstract bool CanResetValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanResetValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CanResetValue (component As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool CanResetValue(System::Object ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="8b08f-138">다시 설정 기능을 테스트할 구성 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-138">The component to test for reset capability.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b08f-139">파생 클래스에서 재정의된 경우 개체를 다시 설정하면 해당 값이 변경되는지 여부를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-139">When overridden in a derived class, returns whether resetting an object changes its value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b08f-140">구성 요소를 다시 설정하면 해당 값이 변경되는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-140">
              <see langword="true" /> if resetting the component changes its value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b08f-141">일반적으로이 메서드는 리플렉션을 통해 구현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-141">Typically, this method is implemented through reflection.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="8b08f-142">이 메서드를 찾고 파생된 클래스에서 재정의 되 면는 <see cref="T:System.ComponentModel.DefaultValueAttribute" />합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8b08f-142">When overridden in a derived class, this method looks for a <see cref="T:System.ComponentModel.DefaultValueAttribute" />.</span>
            </span>
            <span data-ttu-id="8b08f-143">발견 되 면 특성의 값을 속성의 현재 값을 비교 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8b08f-143">If it finds one, it compares the value of the attribute with the property's current value.</span>
            </span>
            <span data-ttu-id="8b08f-144">반환 <see langword="true" /> 기본값 속성의 현재 값과 일치 하지 않는 경우.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8b08f-144">It returns <see langword="true" /> when the default value does not match the property's current value.</span>
            </span>
            <span data-ttu-id="8b08f-145">이 메서드를 찾을 수 없는 경우는 <see cref="T:System.ComponentModel.DefaultValueAttribute" />, 사용자가 직접 구현 해야 하는 "ShouldPersistMyProperty" 메서드를 찾습니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8b08f-145">If this method cannot find a <see cref="T:System.ComponentModel.DefaultValueAttribute" />, it looks for a "ShouldPersistMyProperty" method that you need to implement yourself.</span>
            </span>
            <span data-ttu-id="8b08f-146">이 항목이 있으면 <see cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" /> "ShouldPersistMyProperty"의 반환을 반환 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8b08f-146">If this is found, <see cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" /> returns what "ShouldPersistMyProperty" returns.</span>
            </span>
            <span data-ttu-id="8b08f-147">그렇지 않으면 사용자가 직접 구현 해야 하는 "ResetMyProperty" 메서드를 찾습니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8b08f-147">Otherwise, it looks for a "ResetMyProperty" method that you need to implement yourself.</span>
            </span>
            <span data-ttu-id="8b08f-148">이 항목이 있으면 <see cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" /> 반환 <see langword="true" />합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8b08f-148">If this is found, <see cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" /> returns <see langword="true" />.</span>
            </span>
            <span data-ttu-id="8b08f-149">찾을 수 없는 경우는 <see cref="T:System.ComponentModel.DefaultValueAttribute" />, 반환 "ShouldPersistMyProperty" 메서드 또는 "ResetMyProperty" 메서드 합니다 <see langword="false" />합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8b08f-149">If it cannot find a <see cref="T:System.ComponentModel.DefaultValueAttribute" />, a "ShouldPersistMyProperty" method, or a "ResetMyProperty" method, then it returns <see langword="false" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="ComponentType">
      <MemberSignature Language="C#" Value="public abstract Type ComponentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ComponentType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.ComponentType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ComponentType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ ComponentType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b08f-150">파생 클래스에서 재정의된 경우 이 속성이 바인딩된 구성 요소의 형식을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-150">When overridden in a derived class, gets the type of the component this property is bound to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b08f-151">이 속성이 바인딩된 구성 요소의 형식을 나타내는 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-151">A <see cref="T:System.Type" /> that represents the type of component this property is bound to.</span>
          </span>
          <span data-ttu-id="8b08f-152">
            <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> 또는 <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> 메서드가 호출될 때, 지정된 개체는 이 형식의 인스턴스가 될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-152">When the <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> or <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> methods are invoked, the object specified might be an instance of this type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b08f-153">일반적으로이 속성은 리플렉션을 통해 구현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-153">Typically, this property is implemented through reflection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Converter">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.TypeConverter Converter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.TypeConverter Converter" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.Converter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Converter As TypeConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::TypeConverter ^ Converter { System::ComponentModel::TypeConverter ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b08f-154">이 속성의 형식 변환기를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-154">Gets the type converter for this property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b08f-155">이 속성의 <see cref="T:System.ComponentModel.TypeConverter" />을 변환하는 데 사용되는 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-155">A <see cref="T:System.ComponentModel.TypeConverter" /> that is used to convert the <see cref="T:System.Type" /> of this property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected object CreateInstance (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object CreateInstance(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ CreateInstance(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="8b08f-156">만들 형식을 나타내는 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-156">A <see cref="T:System.Type" /> that represents the type to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b08f-157">지정된 형식의 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-157">Creates an instance of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b08f-158">해당 형식의 새 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-158">A new instance of the type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b08f-159"><xref:System.ComponentModel.PropertyDescriptor.CreateInstance%2A> 지정 된 형식을 사용 하는 생성자를 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-159"><xref:System.ComponentModel.PropertyDescriptor.CreateInstance%2A> looks for a constructor that takes the specified type.</span></span> <span data-ttu-id="8b08f-160">생성자를 찾으면 속성의 형식에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-160">If it finds a constructor, the type of the property is passed in.</span></span>  
  
 <span data-ttu-id="8b08f-161">변환기와 편집기는 구성 요소의 버전을 만드는이 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-161">Converters and editors use this method to create versions of a component.</span></span> <span data-ttu-id="8b08f-162">이 메서드를 사용 하면 단일 구성 요소를 둘 이상의 형식에 대 한 다시 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-162">This method enables a single component to be reused for more than one type.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="8b08f-163">private 클래스 멤버 및 메타 데이터에 액세스 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-163">for access to private class members and metadata.</span>
          </span>
          <span data-ttu-id="8b08f-164">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-164">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="T:System.Drawing.Design.UITypeEditor" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="8b08f-165">이 <see cref="T:System.ComponentModel.PropertyDescriptor" />과 비교할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-165">The object to compare to this <see cref="T:System.ComponentModel.PropertyDescriptor" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b08f-166">이 개체를 다른 개체와 비교하여 두 개체가 같은지 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-166">Compares this to another object to see if they are equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b08f-167">값이 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-167">
              <see langword="true" /> if the values are equivalent; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FillAttributes">
      <MemberSignature Language="C#" Value="protected override void FillAttributes (System.Collections.IList attributeList);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void FillAttributes(class System.Collections.IList attributeList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub FillAttributes (attributeList As IList)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void FillAttributes(System::Collections::IList ^ attributeList);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeList" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="attributeList">
          <span data-ttu-id="8b08f-168">부모 클래스에 있는 특성을 나열하는 <see cref="T:System.Collections.IList" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-168">An <see cref="T:System.Collections.IList" /> that lists the attributes in the parent class.</span>
          </span>
          <span data-ttu-id="8b08f-169">처음에는 이 컬렉션이 비어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-169">Initially, this is empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b08f-170">
            <see cref="T:System.ComponentModel.PropertyDescriptor" />의 특성을 부모 클래스의 지정된 특성 목록에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-170">Adds the attributes of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> to the specified list of attributes in the parent class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b08f-171">중복 된 특성에 대 한 목록에 추가 하는 마지막 트랜잭션이 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-171">For duplicate attributes, the last one added to the list will be kept.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildProperties">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8b08f-172">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-172">Returns a <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetChildProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetChildProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetChildProperties" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildProperties () As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetChildProperties();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b08f-173">기본 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-173">Returns the default <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b08f-174">속성 설명자의 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-174">A collection of property descriptor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b08f-175">이 메서드는 전달 `null` 모두에 대 한는 `instance` 매개 변수 및 `filter` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-175">This method passes `null` for both the `instance` parameter and the `filter` parameter.</span></span>  
  
 <span data-ttu-id="8b08f-176">에 대 한 속성의 `instance` 컨테이너 추가 또는 제거 하는 경우 수 있으므로 매개 변수는 클래스의 속성에서 달라질 수 있습니다는 `instance` 매개 변수 사이 팅입니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-176">The properties for the `instance` parameter can differ from the properties of a class, because the container can add or remove properties if the `instance` parameter is sited.</span></span>  
  
 <span data-ttu-id="8b08f-177">`filter` 매개 변수를 혼합할 수 <xref:System.Type> 및 <xref:System.Attribute> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-177">The `filter` parameter can mix <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="8b08f-178">필터링은 다음 규칙에 의해 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-178">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="8b08f-179">A <xref:System.Type> 개체를 와일드 카드 문자로 처리 됩니다; 속성을 일치는 <xref:System.Type> 해당 특성 집합에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-179">A <xref:System.Type> object is treated as a wildcard; it matches any property that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="8b08f-180">속성이 없는 경우는 <xref:System.Attribute> 동일한 클래스의 속성이 포함 되지 것입니다 반환된 된 배열에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-180">If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array.</span></span>  
  
-   <span data-ttu-id="8b08f-181">특성의 인스턴스 라면 <xref:System.Attribute>, 속성이 반환 되는 배열에 포함 되도록 정확 하 게 일치 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-181">If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match to be included in the returned array.</span></span>  
  
-   <span data-ttu-id="8b08f-182">지정 하는 경우는 <xref:System.Attribute> 및은 기본 속성의 인스턴스가 없는 경우에 반환된 된 배열에 포함 될 <xref:System.Attribute> 속성에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-182">If you specify an <xref:System.Attribute> and it is the default property, it will be included in the returned array, even if there is no instance of <xref:System.Attribute> in the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="GetChildProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetChildProperties (Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetChildProperties(class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildProperties (filter As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetChildProperties(cli::array &lt;Attribute ^&gt; ^ filter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="filter">
          <span data-ttu-id="8b08f-183">필터로 사용할 <see cref="T:System.Attribute" /> 형식의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-183">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b08f-184">지정된 특성 배열을 필터로 사용하여 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-184">Returns a <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> using a specified array of attributes as a filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b08f-185">지정된 특성과 일치하는 속성이 포함된 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-185">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that match the specified attributes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b08f-186">이 메서드는 전달 `null` 에 대 한는 `instance` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-186">This method passes `null` for the `instance` parameter.</span></span>  
  
 <span data-ttu-id="8b08f-187">에 대 한 속성의 `instance` 사이트를 추가 하거나 경우 속성을 제거 하기 때문에 매개 변수는 클래스의 속성에서 달라질 수 있습니다는 `instance` 매개 변수 사이 팅입니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-187">The properties for the `instance` parameter can differ from the properties of a class, because the site can add or remove properties if the `instance` parameter is sited.</span></span>  
  
 <span data-ttu-id="8b08f-188">`filter` 매개 변수를 혼합할 수 <xref:System.Type> 및 <xref:System.Attribute> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-188">The `filter` parameter can mix <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="8b08f-189">필터링은 다음 규칙에 의해 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-189">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="8b08f-190">A <xref:System.Type> 개체를 와일드 카드 문자로 처리 됩니다; 속성을 일치는 <xref:System.Type> 해당 특성 집합에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-190">A <xref:System.Type> object is treated as a wildcard; it matches any property that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="8b08f-191">속성이 없는 경우는 <xref:System.Attribute> 동일한 클래스의 속성이 포함 되지 것입니다 반환된 된 배열에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-191">If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array.</span></span>  
  
-   <span data-ttu-id="8b08f-192">특성의 인스턴스 라면 <xref:System.Attribute>, 속성이 반환 되는 배열에 포함 되도록 정확 하 게 일치 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-192">If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match to be included in the returned array.</span></span>  
  
-   <span data-ttu-id="8b08f-193">지정 하는 경우는 <xref:System.Attribute> 인스턴스는 기본 속성의 인스턴스가 없는 경우에 반환된 된 배열에 포함 됩니다는 <xref:System.Attribute> 속성에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-193">If you specify an <xref:System.Attribute> instance and it is the default property, it will be included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="GetChildProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetChildProperties (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetChildProperties(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildProperties (instance As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetChildProperties(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="8b08f-194">속성을 가져올 구성 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-194">A component to get the properties for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b08f-195">지정된 개체에 대해 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-195">Returns a <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> for a given object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b08f-196">지정된 구성 요소의 속성이 포함된 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-196">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties for the specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b08f-197">이 메서드는 전달 `null` 에 대 한는 `filter` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-197">This method passes `null` for the `filter` parameter.</span></span>  
  
 <span data-ttu-id="8b08f-198">에 대 한 속성의 `instance` 사이트를 추가 하거나 경우 속성을 제거 하기 때문에 매개 변수는 클래스의 속성에서 달라질 수 있습니다는 `instance` 매개 변수 사이 팅입니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-198">The properties for the `instance` parameter can differ from the properties of a class, because the site can add or remove properties if the `instance` parameter is sited.</span></span>  
  
 <span data-ttu-id="8b08f-199">`filter` 매개 변수를 혼합할 수 <xref:System.Type> 및 <xref:System.Attribute> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-199">The `filter` parameter can mix <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="8b08f-200">필터링은 다음 규칙에 의해 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-200">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="8b08f-201">A <xref:System.Type> 개체를 와일드 카드 문자로 처리 됩니다; 속성을 일치는 <xref:System.Type> 해당 특성 집합에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-201">A <xref:System.Type> object is treated as a wildcard; it matches any property that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="8b08f-202">속성이 없는 경우는 <xref:System.Attribute> 동일한 클래스의 속성이 포함 되지 것입니다 반환된 된 배열에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-202">If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array.</span></span>  
  
-   <span data-ttu-id="8b08f-203">특성의 인스턴스 라면 <xref:System.Attribute>, 속성이 반환 되는 배열에 포함 되도록 정확 하 게 일치 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-203">If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match to be included in the returned array.</span></span>  
  
-   <span data-ttu-id="8b08f-204">지정 하는 경우는 <xref:System.Attribute> 인스턴스는 기본 속성의 인스턴스가 없는 경우에 반환된 된 배열에 포함 됩니다는 <xref:System.Attribute> 속성에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-204">If you specify an <xref:System.Attribute> instance and it is the default property, it will be included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="GetChildProperties">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptorCollection GetChildProperties (object instance, Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetChildProperties(object instance, class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChildProperties (instance As Object, filter As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetChildProperties(System::Object ^ instance, cli::array &lt;Attribute ^&gt; ^ filter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="filter" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="8b08f-205">속성을 가져올 구성 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-205">A component to get the properties for.</span>
          </span>
        </param>
        <param name="filter">
          <span data-ttu-id="8b08f-206">필터로 사용할 <see cref="T:System.Attribute" /> 형식의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-206">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b08f-207">지정된 특성 배열을 필터로 사용하여 지정된 개체에 대한 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-207">Returns a <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> for a given object using a specified array of attributes as a filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b08f-208">지정된 구성 요소의 지정된 특성과 일치하는 속성이 포함된 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-208">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that match the specified attributes for the specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b08f-209">에 대 한 속성의 `instance` 사이트를 추가 하거나 경우 속성을 제거 하기 때문에 매개 변수는 클래스의 속성에서 달라질 수 있습니다는 `instance` 매개 변수 사이 팅입니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-209">The properties for the `instance` parameter can differ from the properties of a class, because the site can add or remove properties if the `instance` parameter is sited.</span></span>  
  
 <span data-ttu-id="8b08f-210">`filter` 매개 변수를 혼합할 수 <xref:System.Type> 및 <xref:System.Attribute> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-210">The `filter` parameter can mix <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="8b08f-211">필터링은 다음 규칙에 의해 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-211">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="8b08f-212">A <xref:System.Type> 개체를 와일드 카드 문자로 처리 됩니다; 속성을 일치는 <xref:System.Type> 해당 특성 집합에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-212">A <xref:System.Type> object is treated as a wildcard; it matches any property that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="8b08f-213">속성이 없는 경우는 <xref:System.Attribute> 동일한 클래스의 속성이 포함 되지 것입니다 반환된 된 배열에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-213">If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array.</span></span>  
  
-   <span data-ttu-id="8b08f-214">특성의 인스턴스 라면 <xref:System.Attribute>, 속성이 반환 되는 배열에 포함 되도록 정확 하 게 일치 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-214">If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match to be included in the returned array.</span></span>  
  
-   <span data-ttu-id="8b08f-215">지정 하는 경우는 <xref:System.Attribute> 인스턴스는 기본 속성의 인스턴스가 없는 경우에 반환된 된 배열에 포함 됩니다는 <xref:System.Attribute> 속성에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-215">If you specify an <xref:System.Attribute> instance and it is the default property, it will be included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
 <span data-ttu-id="8b08f-216">자식 속성을 구현 하 여 반환 하도록 일반적으로 <xref:System.ComponentModel.TypeConverter.GetProperties%2A> 의 멤버는 <xref:System.ComponentModel.TypeConverter> 이 속성에서 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-216">Generally, child properties should be returned by implementing the <xref:System.ComponentModel.TypeConverter.GetProperties%2A> member of the <xref:System.ComponentModel.TypeConverter> returned from this property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="GetEditor">
      <MemberSignature Language="C#" Value="public virtual object GetEditor (Type editorBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetEditor(class System.Type editorBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEditor (editorBaseType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetEditor(Type ^ editorBaseType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editorBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="editorBaseType">
          <span data-ttu-id="8b08f-217">속성이 지원하는 여러 편집기를 구별하는 데 사용되는 기본 편집기 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-217">The base type of editor, which is used to differentiate between multiple editors that a property supports.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b08f-218">지정된 형식의 편집기를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-218">Gets an editor of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b08f-219">요청된 편집기 형식의 인스턴스이거나, 편집기를 찾을 수 없는 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-219">An instance of the requested editor type, or <see langword="null" /> if an editor cannot be found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b08f-220">이 개체에 대한 해시 코드를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-220">Returns the hash code for this object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b08f-221">이 개체의 해시 코드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-221">The hash code for this object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInvocationTarget">
      <MemberSignature Language="C#" Value="protected override object GetInvocationTarget (Type type, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object GetInvocationTarget(class System.Type type, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ GetInvocationTarget(Type ^ type, System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="8b08f-222">호출 대상의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-222">The <see cref="T:System.Type" /> of the invocation target.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="8b08f-223">잠재적인 호출 대상입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-223">The potential invocation target.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b08f-224">이 메서드는 멤버를 호출하는 동안 사용해야 하는 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-224">This method returns the object that should be used during invocation of members.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b08f-225">멤버를 호출하는 동안 사용해야 하는 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-225">The <see cref="T:System.Object" /> that should be used during invocation of members.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b08f-226">일반적으로 반환 값은 같을 `instance` 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-226">Typically, the return value will be the same as the `instance` passed in.</span></span> <span data-ttu-id="8b08f-227">이 인스턴스와 다른 개체가 연결 하는 경우 또는 인스턴스가 있는 경우 사용자 지정 형식 설명자는 <xref:System.ComponentModel.PropertyDescriptor.GetInvocationTarget%2A> 메서드는 다른 값을 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-227">If someone associated another object with this instance, or if the instance is a custom type descriptor, the <xref:System.ComponentModel.PropertyDescriptor.GetInvocationTarget%2A> method may return a different value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeFromName">
      <MemberSignature Language="C#" Value="protected Type GetTypeFromName (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Type GetTypeFromName(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetTypeFromName (typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Type ^ GetTypeFromName(System::String ^ typeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="8b08f-228">검색할 형식에 대한 어셈블리의 정규화된 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-228">The assembly-qualified name of the type to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b08f-229">해당 이름을 사용하는 형식을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-229">Returns a type using its name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b08f-230">지정된 형식 이름과 일치하는 <see cref="T:System.Type" />이거나, 일치하는 형식을 찾을 수 없는 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-230">A <see cref="T:System.Type" /> that matches the given type name, or <see langword="null" /> if a match cannot be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b08f-231">적절 한 유형을 찾으려면,이 메서드 먼저 확인 된 형식의 어셈블리가 <xref:System.ComponentModel.PropertyDescriptor> 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-231">To find the appropriate type, this method first checks the assembly of the type that this <xref:System.ComponentModel.PropertyDescriptor> references.</span></span> <span data-ttu-id="8b08f-232">호출 어셈블리의 형식을 찾지 못하면, <xref:System.Type.GetType%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-232">If it does not find the type in the assembly, it calls <xref:System.Type.GetType%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public abstract object GetValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetValue (component As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetValue(System::Object ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="8b08f-233">값을 검색할 속성이 포함된 구성 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-233">The component with the property for which to retrieve the value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b08f-234">파생 클래스에서 재정의된 경우 구성 요소에 대한 현재 속성 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-234">When overridden in a derived class, gets the current value of the property on a component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b08f-235">지정된 구성 요소에 대한 속성 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-235">The value of a property for a given component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b08f-236">일반적으로이 메서드는 리플렉션을 통해 구현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-236">Typically, this method is implemented through reflection.</span></span>  
  
 <span data-ttu-id="8b08f-237">이 메서드는 자동으로 사전 변경 메서드를 호출 <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A>, 사후 변경 및 <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A>의 <xref:System.ComponentModel.Design.IComponentChangeService>합니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-237">This method automatically calls the pre-change method, <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A>, and post-change method, <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A>, of the <xref:System.ComponentModel.Design.IComponentChangeService>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="8b08f-238">이 메서드를 재정의 하면 속성의 현재 값을 구현 해야 하는 "GetMyProperty" 메서드를 호출 하 여 가져옵니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8b08f-238">When you override this method, it gets the current value of the property by invoking a "GetMyProperty" method that you need to implement.</span>
            </span>
            <span data-ttu-id="8b08f-239">메서드에 예외를 통해 전달 해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8b08f-239">An exception in that method should pass through.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetValueChangedHandler">
      <MemberSignature Language="C#" Value="protected internal EventHandler GetValueChangedHandler (object component);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.EventHandler GetValueChangedHandler(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function GetValueChangedHandler (component As Object) As EventHandler" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; EventHandler ^ GetValueChangedHandler(System::Object ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="8b08f-240">이벤트 처리기를 검색할 구성 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-240">The component for which to retrieve event handlers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b08f-241">특정 구성 요소에 대한 <c>ValueChanged</c> 이벤트 처리기의 현재 집합을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-241">Retrieves the current set of <c>ValueChanged</c> event handlers for a specific component</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b08f-242">결합된 멀티캐스트 이벤트 처리기입니다. <paramref name="component" />에 이벤트 처리기가 현재 할당되지 않은 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-242">A combined multicast event handler, or <see langword="null" /> if no event handlers are currently assigned to <paramref name="component" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLocalizable">
      <MemberSignature Language="C#" Value="public virtual bool IsLocalizable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocalizable" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.IsLocalizable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsLocalizable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsLocalizable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b08f-243">
            <see cref="T:System.ComponentModel.LocalizableAttribute" />에 지정된, 이 속성이 지역화되어야 하는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-243">Gets a value indicating whether this property should be localized, as specified in the <see cref="T:System.ComponentModel.LocalizableAttribute" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b08f-244">멤버의 <see cref="T:System.ComponentModel.LocalizableAttribute" />가 <see langword="true" />로 설정된 것으로 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-244">
              <see langword="true" /> if the member is marked with the <see cref="T:System.ComponentModel.LocalizableAttribute" /> set to <see langword="true" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b08f-245">속성으로 표시 된 경우는 <xref:System.ComponentModel.LocalizableAttribute> 로 설정 `true` 비주얼 디자이너에서 사용 되는, 해당 값은 리소스 파일에 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-245">When a property is marked with the <xref:System.ComponentModel.LocalizableAttribute> set to `true` and used in a visual designer, its values are saved in a resource file.</span></span> <span data-ttu-id="8b08f-246">특성을 사용 하 여 속성을 표시 하 고 다음 코드에서 속성을 설정 하는 경우에 리소스 파일 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-246">If you mark a property with the attribute and then set the property in code, resource files are not used.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.LocalizableAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public abstract bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b08f-247">파생 클래스에서 재정의된 경우 이 속성이 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-247">When overridden in a derived class, gets a value indicating whether this property is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b08f-248">속성이 읽기 전용이면 <see langword="true" />이고 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-248">
              <see langword="true" /> if the property is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.ReadOnlyAttribute" />
      </Docs>
    </Member>
    <Member MemberName="OnValueChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnValueChanged (object component, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValueChanged(object component, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValueChanged (component As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValueChanged(System::Object ^ component, EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="8b08f-249">이벤트를 발생시키는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-249">The object that raises the event.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="8b08f-250">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-250">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b08f-251">구현된 <c>ValueChanged</c> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-251">Raises the <c>ValueChanged</c> event that you implemented.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b08f-252">속성 값이 변경 하는 경우 속성 설명자 구현에 따라이 메서드를 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-252">This method should be called by your property descriptor implementation when the property value has changed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyType">
      <MemberSignature Language="C#" Value="public abstract Type PropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type PropertyType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.PropertyType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property PropertyType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ PropertyType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b08f-253">파생 클래스에서 재정의된 경우 속성 형식을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-253">When overridden in a derived class, gets the type of the property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b08f-254">속성 형식을 나타내는 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-254">A <see cref="T:System.Type" /> that represents the type of the property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b08f-255">일반적으로이 속성은 리플렉션을 통해 구현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-255">Typically, this property is implemented through reflection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveValueChanged">
      <MemberSignature Language="C#" Value="public virtual void RemoveValueChanged (object component, EventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveValueChanged(object component, class System.EventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveValueChanged (component As Object, handler As EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveValueChanged(System::Object ^ component, EventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="handler" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="8b08f-256">처리기를 제거할 구성 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-256">The component to remove the handler for.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="8b08f-257">수신기로 제거할 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-257">The delegate to remove as a listener.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b08f-258">이 속성이 변경되면 다른 개체에서 알림을 받을 수 있도록 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-258">Enables other objects to be notified when this property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8b08f-259">
            <paramref name="component" /> 또는 <paramref name="handler" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-259">
              <paramref name="component" /> or <paramref name="handler" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResetValue">
      <MemberSignature Language="C#" Value="public abstract void ResetValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ResetValue (component As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ResetValue(System::Object ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="8b08f-260">기본값으로 다시 설정될 속성 값이 포함된 구성 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-260">The component with the property value that is to be reset to the default value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b08f-261">파생 클래스에서 재정의된 경우 구성 요소의 이 속성 값을 기본값으로 다시 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-261">When overridden in a derived class, resets the value for this property of the component to the default value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b08f-262">일반적으로이 메서드는 리플렉션을 통해 구현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-262">Typically, this method is implemented through reflection.</span></span>  
  
 <span data-ttu-id="8b08f-263">이 메서드를 우선 순위는 다음 순서에 따라 속성을 다시 설정할 값을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-263">This method determines the value to reset the property to in the following order of precedence:</span></span>  
  
1.  <span data-ttu-id="8b08f-264">이 속성에 대 한 숨겨진 속성이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-264">There is a shadowed property for this property.</span></span>  
  
2.  <span data-ttu-id="8b08f-265">한 <xref:System.ComponentModel.DefaultValueAttribute> 이 속성에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-265">There is a <xref:System.ComponentModel.DefaultValueAttribute> for this property.</span></span>  
  
3.  <span data-ttu-id="8b08f-266">"MyProperty"가 전달한 속성의 이름, 구현 된 "ResetMyProperty" 메서드가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-266">There is a "ResetMyProperty" method that you have implemented, where "MyProperty" is the name of the property you pass to it.</span></span>  
  
 <span data-ttu-id="8b08f-267">이 메서드가 만드는 <xref:System.ComponentModel.Design.DesignerTransaction> 는 다음 순서 대로 자동으로:</span><span class="sxs-lookup"><span data-stu-id="8b08f-267">This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> automatically in the following order:</span></span>  
  
1.  <span data-ttu-id="8b08f-268">메서드 호출의 <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=nameWithType> 새로 만들려면 메서드 <xref:System.ComponentModel.Design.DesignerTransaction> 변경 내용을 나타내는를 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-268">The method calls the <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=nameWithType> method to create a new <xref:System.ComponentModel.Design.DesignerTransaction> to represent the changes.</span></span>  
  
2.  <span data-ttu-id="8b08f-269">메서드 호출에서 <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=nameWithType> 메서드 표시 되는 트랜잭션이 시작 된 변경 내용이 발생 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-269">The method calls the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=nameWithType> method to indicate that the transaction has begun and the changes are about to occur.</span></span>  
  
3.  <span data-ttu-id="8b08f-270">메서드는 속성 값이이 메서드의 확인 순서에 의해 결정 다시 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-270">The method resets the property to the value determined by this method's checking order.</span></span>  
  
4.  <span data-ttu-id="8b08f-271">메서드 호출의 <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=nameWithType> 메서드를 나타내는 변경 내용이 발생 했습니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-271">The method calls the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=nameWithType> method to indicate that the changes have occurred.</span></span>  
  
5.  <span data-ttu-id="8b08f-272">메서드 호출 <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=nameWithType> 트랜잭션이 완료 되었음을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-272">The method calls <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=nameWithType> to indicate that the transaction is completed.</span></span>  
  
 <span data-ttu-id="8b08f-273">트랜잭션이의 목적은 지원 하기 위해 `Undo` 및 `Redo` 기능입니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-273">The purpose of the transaction is to support `Undo` and `Redo` functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="8b08f-274">이 메서드를 찾고 파생된 클래스에서 재정의 되 면는 <see cref="T:System.ComponentModel.DefaultValueAttribute" />합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8b08f-274">When overridden in a derived class, this method looks for a <see cref="T:System.ComponentModel.DefaultValueAttribute" />.</span>
            </span>
            <span data-ttu-id="8b08f-275">속성의 값을 설정, 발견 되 면는 <see cref="T:System.ComponentModel.DefaultValueAttribute" /> 발견 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8b08f-275">If it finds one, it sets the value of the property to the <see cref="T:System.ComponentModel.DefaultValueAttribute" /> it found.</span>
            </span>
            <span data-ttu-id="8b08f-276">이 메서드를 찾을 수 없는 경우는 <see cref="T:System.ComponentModel.DefaultValueAttribute" />를 구현 해야 하는 "ResetMyProperty" 메서드를 찾습니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8b08f-276">If this method cannot find a <see cref="T:System.ComponentModel.DefaultValueAttribute" />, it looks for a "ResetMyProperty" method that you need to implement.</span>
            </span>
            <span data-ttu-id="8b08f-277">이 항목이 있으면는 <see cref="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" /> 메서드를 호출 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8b08f-277">If this is found, the <see cref="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" /> method invokes it.</span>
            </span>
            <span data-ttu-id="8b08f-278">경우 <see cref="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" /> 찾을 수 없습니다는 <see cref="T:System.ComponentModel.DefaultValueAttribute" /> 또는 "ResetMyProperty" 메서드를 구현 하는 작업을 수행 하지 않습니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8b08f-278">If <see cref="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" /> cannot find a <see cref="T:System.ComponentModel.DefaultValueAttribute" /> or a "ResetMyProperty" method that you implemented, it does not perform an operation.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="SerializationVisibility">
      <MemberSignature Language="C#" Value="public System.ComponentModel.DesignerSerializationVisibility SerializationVisibility { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.DesignerSerializationVisibility SerializationVisibility" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.SerializationVisibility" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerializationVisibility As DesignerSerializationVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::DesignerSerializationVisibility SerializationVisibility { System::ComponentModel::DesignerSerializationVisibility get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DesignerSerializationVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b08f-279">
            <see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" />에 지정된, 이 속성이 serialize되어야 하는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-279">Gets a value indicating whether this property should be serialized, as specified in the <see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b08f-280">이 속성이 serialize되어야 하는지 여부를 지정하는 <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-280">One of the <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> enumeration values that specifies whether this property should be serialized.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" />
        <altmember cref="T:System.ComponentModel.DesignerSerializationVisibility" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public abstract void SetValue (object component, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object component, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetValue (component As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetValue(System::Object ^ component, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="8b08f-281">설정될 속성 값이 포함된 구성 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-281">The component with the property value that is to be set.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="8b08f-282">새 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-282">The new value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b08f-283">파생 클래스에서 재정의된 경우 구성 요소의 값을 다른 값으로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-283">When overridden in a derived class, sets the value of the component to a different value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b08f-284">일반적으로이 메서드는 리플렉션을 통해 구현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-284">Typically, this method is implemented through reflection.</span></span>  
  
 <span data-ttu-id="8b08f-285">이 메서드가 만드는 <xref:System.ComponentModel.Design.DesignerTransaction> 는 다음 순서 대로 자동으로:</span><span class="sxs-lookup"><span data-stu-id="8b08f-285">This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> automatically in the following order:</span></span>  
  
1.  <span data-ttu-id="8b08f-286">메서드 호출의 <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=nameWithType> 새로 만들려면 메서드 <xref:System.ComponentModel.Design.DesignerTransaction> 변경 내용을 나타내는를 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-286">The method calls the <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=nameWithType> method to create a new <xref:System.ComponentModel.Design.DesignerTransaction> to represent the changes.</span></span>  
  
2.  <span data-ttu-id="8b08f-287">메서드 호출에서 <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=nameWithType> 메서드 표시 되는 트랜잭션이 시작 된 변경 내용이 발생 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-287">The method calls the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=nameWithType> method to indicate that the transaction has begun and the changes are about to occur.</span></span>  
  
3.  <span data-ttu-id="8b08f-288">메서드는 속성 값이이 메서드의 확인 순서에 의해 결정 다시 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-288">The method resets the property to the value determined by this method's checking order.</span></span>  
  
4.  <span data-ttu-id="8b08f-289">메서드 호출의 <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=nameWithType> 메서드를 나타내는 변경 내용이 발생 했습니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-289">The method calls the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=nameWithType> method to indicate that the changes have occurred.</span></span>  
  
5.  <span data-ttu-id="8b08f-290">메서드 호출 <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=nameWithType> 트랜잭션이 완료 되었음을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-290">The method calls <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=nameWithType> to indicate that the transaction is complete.</span></span>  
  
 <span data-ttu-id="8b08f-291">트랜잭션이의 목적은 지원 하기 위해 `Undo` 및 `Redo` 기능입니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-291">The purpose of the transaction is to support `Undo` and `Redo` functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="8b08f-292">이 메서드를 재정의 하는 경우 구현 해야 하는 적절 한 "SetMyProperty" 메서드를 호출 하 여 속성의 값을 설정 해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8b08f-292">When you override this method, it should set the value of the property by invoking the appropriate "SetMyProperty" method that you need to implement.</span>
            </span>
            <span data-ttu-id="8b08f-293">지정 된 값이 유효 하지 않을 경우 구성 요소를 전달 되는 예외를 throw 해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8b08f-293">If the value specified is not valid, the component should throw an exception, which is passed up.</span>
            </span>
            <span data-ttu-id="8b08f-294">"SetMyProperty" 메서드 뒤 "GetMyProperty" 메서드 (사용자가 구현한) "SetMyProperty" 메서드는 예외를 throw 하지 않는 경우 전달 된 값을 반환 하는 속성을 디자인 해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8b08f-294">You should design the property so that a "GetMyProperty" method (that you have implemented) following a "SetMyProperty" method returns the value passed in when the "SetMyProperty" method does not throw an exception.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValue">
      <MemberSignature Language="C#" Value="public abstract bool ShouldSerializeValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldSerializeValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ShouldSerializeValue (component As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool ShouldSerializeValue(System::Object ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="8b08f-295">지속성을 검사할 속성이 포함된 구성 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-295">The component with the property to be examined for persistence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b08f-296">파생 클래스에서 재정의된 경우 이 속성 값이 지속되어야 하는지 여부를 나타내는 값을 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-296">When overridden in a derived class, determines a value indicating whether the value of this property needs to be persisted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b08f-297">속성을 지속시켜야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-297">
              <see langword="true" /> if the property should be persisted; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b08f-298">일반적으로이 메서드는 리플렉션을 통해 구현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-298">Typically, this method is implemented through reflection.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="8b08f-299">이 메서드가 반환 하는 파생된 클래스에서 재정의 되 면 <see langword="true" /> 속성의 현재 값은 기본 값과에서 다른 경우.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8b08f-299">When overridden in a derived class, this method returns <see langword="true" /> if the current value of the property is different from its default value.</span>
            </span>
            <span data-ttu-id="8b08f-300">첫 번째 검색 하 여 기본 값을 찾고는 <see cref="T:System.ComponentModel.DefaultValueAttribute" />합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8b08f-300">It looks for a default value by first looking for a <see cref="T:System.ComponentModel.DefaultValueAttribute" />.</span>
            </span>
            <span data-ttu-id="8b08f-301">이 특성을 메서드를 발견할 경우 특성의 값을 속성의 현재 값을 비교 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8b08f-301">If the method finds this attribute, it compares the value of the attribute with the property's current value.</span>
            </span>
            <span data-ttu-id="8b08f-302">이 메서드를 찾을 수 없는 경우는 <see cref="T:System.ComponentModel.DefaultValueAttribute" />를 구현 해야 하는 "ShouldSerializeMyProperty" 메서드를 찾습니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8b08f-302">If this method cannot find a <see cref="T:System.ComponentModel.DefaultValueAttribute" />, it looks for a "ShouldSerializeMyProperty" method that you need to implement.</span>
            </span>
            <span data-ttu-id="8b08f-303">가 있을 경우 <see cref="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)" /> 를 호출 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8b08f-303">If it is found, <see cref="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)" /> invokes it.</span>
            </span>
            <span data-ttu-id="8b08f-304">이 메서드를 찾을 수 없는 경우는 <see cref="T:System.ComponentModel.DefaultValueAttribute" /> "ShouldSerializeMyProperty" 메서드는 최적화 기능을 만들 수 없습니다 및 반환 또는 <see langword="true" />합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8b08f-304">If this method cannot find a <see cref="T:System.ComponentModel.DefaultValueAttribute" /> or a "ShouldSerializeMyProperty" method, it cannot create optimizations and it returns <see langword="true" />.</span>
            </span>
            <block subset="none" type="note">
              <para>
                <span data-ttu-id="8b08f-305">
                  <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> 클래스는 상속 된 구성 요소에 대 한 특별 한 직렬화 논리를 구현 합니다.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="8b08f-305">The <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> class implements special serialization logic for inherited components.</span>
                </span>
                <span data-ttu-id="8b08f-306">자세한 내용은 <see cref="T:System.ComponentModel.Design.ComponentDesigner" />을 참조하세요.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="8b08f-306">For more information, see <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</span>
                </span>
              </para>
            </block>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
      </Docs>
    </Member>
    <Member MemberName="SupportsChangeEvents">
      <MemberSignature Language="C#" Value="public virtual bool SupportsChangeEvents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsChangeEvents" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsChangeEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsChangeEvents { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b08f-307">이 속성의 값 변경 알림이 속성 설명자 외부에서 발생되었는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-307">Gets a value indicating whether value change notifications for this property may originate from outside the property descriptor.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b08f-308">값 변경 알림이 속성 설명자 외부에서 발생되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b08f-308">
              <see langword="true" /> if value change notifications may originate from outside the property descriptor; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b08f-309"><xref:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents%2A> 여부이 속성에 대 한 값 변경 알림이 외부에서 발생 속성 설명자와 같은 구성 요소 자체, 또는 여부 에서만 발생는 에대한직접호출에서속성표시<xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8b08f-309">The <xref:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents%2A> property indicates whether value change notifications for this property may originate from outside the property descriptor, such as from the component itself, or whether notifications will only originate from direct calls made to the <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> method.</span></span> <span data-ttu-id="8b08f-310">예를 들어 구성 요소가 구현할 수 있습니다는 <xref:System.ComponentModel.INotifyPropertyChanged> 인터페이스, 또는 명시적 있을 `name.Changed` 이 속성에 대 한 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8b08f-310">For example, the component may implement the <xref:System.ComponentModel.INotifyPropertyChanged> interface, or may have an explicit `name.Changed` event for this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>