<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Component.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b0a8013be72c2cd4641c3e28d3054ee2b64844f0.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b0a8013be72c2cd4641c3e28d3054ee2b64844f0</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Component">
          <source>Provides the base implementation for the <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> interface and enables object sharing between applications.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> 인터페이스를 기본적으로 구현하고 응용 프로그램 간의 개체 공유를 가능하게 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Component">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> is the base class for all components in the common language runtime that marshal by reference.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> 공용 언어 런타임에서 모든 구성 요소에 대 한 기본 클래스를 참조로 마샬링하는입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Component">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> is remotable and derives from the <ph id="ph2">&lt;xref:System.MarshalByRefObject&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> 원격 가능 함 및에서 파생 되는 <ph id="ph2">&lt;xref:System.MarshalByRefObject&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Component">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> provides an implementation of the <ph id="ph2">&lt;xref:System.ComponentModel.IComponent&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> 구현을 제공는 <ph id="ph2">&lt;xref:System.ComponentModel.IComponent&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Component">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph> provides an implementation of <ph id="ph2">&lt;xref:System.ComponentModel.IComponent&gt;</ph> that marshals by value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph> 의 구현을 제공 <ph id="ph2">&lt;xref:System.ComponentModel.IComponent&gt;</ph> 하 값으로 마샬링합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Component">
          <source>You can host a <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> in any object that implements the <ph id="ph2">&lt;xref:System.ComponentModel.IContainer&gt;</ph> interface, and you can query and get services from its container.</source>
          <target state="translated">호스팅할 수 있습니다는 <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> 구현 하는 개체에는 <ph id="ph2">&lt;xref:System.ComponentModel.IContainer&gt;</ph> 인터페이스를 하 고 쿼리 하 고 해당 컨테이너에서 서비스를 가져올 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Component">
          <source>The container creates an <ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph> for each <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> it contains.</source>
          <target state="translated">컨테이너 만듭니다는 <ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph> 각 <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> 포함 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Component">
          <source>The container uses the site to manage the <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> and is used by the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> to communicate with its container.</source>
          <target state="translated">컨테이너를 관리 하는 사이트를 사용 하는 <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> 에서 사용 하 고는 <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> 해당 컨테이너와 통신 하 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Component">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> should release resources explicitly by calls to its <ph id="ph2">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> method, without waiting for automatic memory management through an implicit call to the <ph id="ph3">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> 를 호출 하 여 명시적으로 리소스를 해제 해야 해당 <ph id="ph2">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> 메서드에 대 한 암시적 호출을 통해 자동 메모리 관리를 위해 대기 하지 않고는 <ph id="ph3">&lt;xref:System.Object.Finalize%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Component">
          <source>When a <ph id="ph1">&lt;xref:System.ComponentModel.Container&gt;</ph> is disposed, all components within the <ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph> are also disposed.</source>
          <target state="translated">때는 <ph id="ph1">&lt;xref:System.ComponentModel.Container&gt;</ph> 삭제 되는 모든 구성 요소는 <ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph> 도 삭제 됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Component.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Component.CanRaiseEvents">
          <source>Gets a value indicating whether the component can raise an event.</source>
          <target state="translated">구성 요소가 이벤트를 발생시킬 수 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.CanRaiseEvents">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the component can raise events; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">구성 요소가 이벤트를 발생시킬 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.CanRaiseEvents">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.CanRaiseEvents">
          <source>The default implementation of this property always returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">이 속성의 기본 구현에서는 항상 반환 <ph id="ph1">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.CanRaiseEvents">
          <source>Classes that inherit from the <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> class should override this property to provide the ability to disable the raising of events.</source>
          <target state="translated">클래스에서 상속 되는 <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> 클래스는 이벤트의 발생을 사용 하지 않도록 설정 하는 기능을 제공 하려면이 속성을 재정의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.CanRaiseEvents">
          <source>For example, in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class, if the control is being hosted as an ActiveX control, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.CanRaiseEvents%2A&gt;</ph> property returns <ph id="ph3">`false`</ph> if the ActiveX control has its events frozen.</source>
          <target state="translated">예를 들어는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> ActiveX 컨트롤에서 컨트롤을 호스트할 경우이 클래스는 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.CanRaiseEvents%2A&gt;</ph> 속성에서 반환 <ph id="ph3">`false`</ph> ActiveX 컨트롤에 있는 경우 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.CanRaiseEvents">
          <source>If you override this method in a deriving class and change it to return <ph id="ph1">&lt;see langword="false" /&gt;</ph>, the <ph id="ph2">&lt;see cref="T:System.ComponentModel.EventHandlerList" /&gt;</ph> collection returned by the <ph id="ph3">&lt;see cref="P:System.ComponentModel.Component.Events" /&gt;</ph> property returns <ph id="ph4">&lt;see langword="null" /&gt;</ph> for an event.</source>
          <target state="translated">파생 클래스에서이 메서드를 재정의 하 고 반환 하도록 변경 하는 경우 <ph id="ph1">&lt;see langword="false" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.ComponentModel.EventHandlerList" /&gt;</ph> 에서 반환 된 컬렉션의 <ph id="ph3">&lt;see cref="P:System.ComponentModel.Component.Events" /&gt;</ph> 속성에서 반환 <ph id="ph4">&lt;see langword="null" /&gt;</ph> 이벤트에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.CanRaiseEvents">
          <source>Events can still be added and removed from the collection, but the collection's <ph id="ph1">&lt;see cref="P:System.ComponentModel.EventHandlerList.Item(System.Object)" /&gt;</ph> property will always return <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이벤트 추가 및 컬렉션의 컬렉션에서 제거할 여전히 있는 <ph id="ph1">&lt;see cref="P:System.ComponentModel.EventHandlerList.Item(System.Object)" /&gt;</ph> 속성은 항상 반환 <ph id="ph2">&lt;see langword="null" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Component.Container">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> that contains the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph>가 포함된 <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Container">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> that contains the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>, if any, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the <ph id="ph4">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> is not encapsulated in an <ph id="ph5">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph>가 포함된 <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>이거나, <ph id="ph4">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>가 <ph id="ph5">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph>에 캡슐화되어 있지 않으면 <ph id="ph3">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Container">
          <source>The components in a container are tracked in a first-in, first-out list, which also defines the order of the components within the container.</source>
          <target state="translated">컨테이너의 구성 요소는 목록의 선입 선출 컨테이너 내에서 구성 요소의 순서를 정의 하기도 하는 추적 됩니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Container">
          <source>The last component added is the last component in the list.</source>
          <target state="translated">추가 된 마지막 구성 요소는 목록에서 마지막 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Component.DesignMode">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> is currently in design mode.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>가 현재 디자인 모드인지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.DesignMode">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> is in design mode; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>가 디자인 모드이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.DesignMode">
          <source>The design mode indicator is stored in the <ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph>; therefore, if the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> does not have an <ph id="ph3">&lt;xref:System.ComponentModel.ISite&gt;</ph> associated with it, the value of this property is <ph id="ph4">`false`</ph>.</source>
          <target state="translated">디자인 모드 표시기에 저장 됩니다는 <ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph>이므로, 하는 경우는 <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> 없는 <ph id="ph3">&lt;xref:System.ComponentModel.ISite&gt;</ph> 이 속성의 값은 연결 된 <ph id="ph4">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Component">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>에서 사용하는 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Component.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>에서 사용하는 모든 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> 사용을 마치면 <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>를 호출합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> 메서드를 사용하면 <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>를 사용할 수 없게 됩니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.ComponentModel.Component&gt;</ph> was occupying.</source>
          <target state="translated">호출한 후 <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph>에 대 한 모든 참조를 해제 해야는 <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> 가비지 수집기는 메모리를 회수할 수 있도록 하는 <ph id="ph3">&lt;xref:System.ComponentModel.Component&gt;</ph> 차지한 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> 및 <bpt id="p2">[</bpt>Dispose 메서드를 구현<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph>에 대한 마지막 참조를 해제하기 전에 반드시 <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>를 호출하십시오.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">이렇게 하지 않으면 가비지 수집기가 <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> 개체의 <ph id="ph2">`Finalize`</ph> 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>로 설정하고, 관리되지 않는 리소스만 해제하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">이 메서드는 public <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> 메서드 및 <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> 보호 된 호출 <ph id="ph2">`Dispose(Boolean)`</ph> 메서드는 <ph id="ph3">`disposing`</ph> 매개 변수 설정 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 호출 <ph id="ph2">`Dispose`</ph> 와 <ph id="ph3">`disposing`</ph> 로 설정 <ph id="ph4">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.ComponentModel.Component&gt;</ph> references.</source>
          <target state="translated"><ph id="ph1">`disposing`</ph> 매개 변수가 <ph id="ph2">`true`</ph>인 경우 이 메서드는 이 <ph id="ph3">&lt;xref:System.ComponentModel.Component&gt;</ph>에서 참조하는 관리 개체가 보유하고 있는 리소스를 모두 해제합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">이 메서드는 참조되는 각 개체의 <ph id="ph1">`Dispose()`</ph> 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>는 다른 개체에서 여러 번 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>를 재정의할 때 이전 <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph> 호출에서 삭제된 개체를 참조하지 않도록 주의하십시오.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">구현 하는 방법에 대 한 자세한 내용은 <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, 참조 <bpt id="p1">[</bpt>Dispose 메서드를 구현<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">에 대 한 자세한 내용은 <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, 참조 <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> 및 <bpt id="p2">[</bpt>Finalize 메서드를 재정의<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Component.Disposed">
          <source>Occurs when the component is disposed by a call to the <ph id="ph1">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph> 메서드를 호출하여 구성 요소가 삭제되는 경우 발생합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Component.Disposed">
          <source>When you create a <ph id="ph1">&lt;xref:System.ComponentModel.Component.Disposed&gt;</ph> delegate, you identify the method that handles the event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Component.Disposed&gt;</ph> 대리자를 만드는 경우 이벤트를 처리하는 메서드를 식별합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Component.Disposed">
          <source>To associate the event with your event handler, add an instance of the delegate to the event.</source>
          <target state="translated">이벤트를 이벤트 처리기와 연결하려면 대리자의 인스턴스를 해당 이벤트에 추가합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Component.Disposed">
          <source>The event handler is called whenever the event occurs, unless you remove the delegate.</source>
          <target state="translated">대리자를 제거하지 않는 경우 이벤트가 발생할 때마다 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Component.Disposed">
          <source>For more information about the event handler delegates, see <bpt id="p1">[</bpt>NIB: Events and Delegates<ept id="p1">](http://msdn.microsoft.com/library/d98fd58b-fa4f-4598-8378-addf4355a115)</ept>.</source>
          <target state="translated">이벤트 처리기 대리자에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 및 대리자<ept id="p1">](http://msdn.microsoft.com/library/d98fd58b-fa4f-4598-8378-addf4355a115)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Component.Events">
          <source>Gets the list of event handlers that are attached to this <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>에 연결된 이벤트 처리기의 목록을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Events">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventHandlerList" /&gt;</ph> that provides the delegates for this component.</source>
          <target state="translated">이 구성 요소의 대리자를 제공하는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventHandlerList" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Events">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Component.Finalize">
          <source>Releases unmanaged resources and performs other cleanup operations before the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> is reclaimed by garbage collection.</source>
          <target state="translated">가비지 수집에 의해 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>이(가) 회수되기 전에 관리되지 않는 리소스를 해제하고 기타 정리 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Finalize">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph>.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph>를 재정의합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Finalize">
          <source>Application code should not call this method; an object's <ph id="ph1">`Finalize`</ph> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <ph id="ph2">&lt;xref:System.GC.SuppressFinalize%2A&gt;</ph> method.</source>
          <target state="translated">응용 프로그램 코드,이 메서드를 호출 하지 않아야 개체의 <ph id="ph1">`Finalize`</ph> 메서드를 호출 하 여 가비지 수집기의 종료를 사용 하지 않도록 설정 된 경우가 아니면 자동으로 가비지 수집 중 호출 됩니다는 <ph id="ph2">&lt;xref:System.GC.SuppressFinalize%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Finalize">
          <source>For more information, see <bpt id="p1">[</bpt>Finalize Methods and Destructors<ept id="p1">](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)</ept>, <bpt id="p2">[</bpt>Cleaning Up Unmanaged Resources<ept id="p2">](~/docs/standard/garbage-collection/unmanaged.md)</ept>, and <bpt id="p3">[</bpt>Overriding the Finalize Method<ept id="p3">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Finalize 메서드 및 소멸자<ept id="p1">](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)</ept>, <bpt id="p2">[</bpt>관리 되지 않는 리소스 정리<ept id="p2">](~/docs/standard/garbage-collection/unmanaged.md)</ept>, 및 <bpt id="p3">[</bpt>Finalize 메서드를 재정의<ept id="p3">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Component.GetService(System.Type)">
          <source>A service provided by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>에서 제공하는 서비스입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Component.GetService(System.Type)">
          <source>Returns an object that represents a service provided by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> or by its <ph id="ph2">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> 또는 해당 <ph id="ph2">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>에서 제공하는 서비스를 나타내는 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Component.GetService(System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that represents a service provided by the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the <ph id="ph4">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> does not provide the specified service.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>에서 제공하는 서비스를 나타내는 <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>이거나, <ph id="ph4">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>에서 지정된 서비스를 제공하지 않으면 <ph id="ph3">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.GetService(System.Type)">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">이 메서드는 파생된 클래스에서 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Component.Site">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>의 <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph>를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Site">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the <ph id="ph4">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> is not encapsulated in an <ph id="ph5">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph>, the <ph id="ph6">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> does not have an <ph id="ph7">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> associated with it, or the <ph id="ph8">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> is removed from its <ph id="ph9">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph>와 연결된 <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>이거나, <ph id="ph4">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>가 <ph id="ph5">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph>에 캡슐화되어 있지 않거나 <ph id="ph6">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>가 <ph id="ph7">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph>와 연결되어 있지 않거나 <ph id="ph8">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>가 <ph id="ph9">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph>에서 제거되었으면 <ph id="ph3">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Site">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> will have an <ph id="ph2">&lt;xref:System.ComponentModel.ISite&gt;</ph> if it has been added to an <ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph> and the <ph id="ph4">&lt;xref:System.ComponentModel.IContainer&gt;</ph> assigns an <ph id="ph5">&lt;xref:System.ComponentModel.ISite&gt;</ph> to it.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> 갖습니다는 <ph id="ph2">&lt;xref:System.ComponentModel.ISite&gt;</ph> 에 추가 된 경우는 <ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph> 및 <ph id="ph4">&lt;xref:System.ComponentModel.IContainer&gt;</ph> 할당 한 <ph id="ph5">&lt;xref:System.ComponentModel.ISite&gt;</ph> 에 있습니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Site">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.IContainer&gt;</ph> is responsible for assigning the <ph id="ph2">&lt;xref:System.ComponentModel.ISite&gt;</ph> to the <ph id="ph3">&lt;xref:System.ComponentModel.Component&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.IContainer&gt;</ph> 는 할당 해야는 <ph id="ph2">&lt;xref:System.ComponentModel.ISite&gt;</ph> 에 <ph id="ph3">&lt;xref:System.ComponentModel.Component&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Site">
          <source>Changing the value of the component's <ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph> does not necessarily change the name of the site the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> is assigned to.</source>
          <target state="translated">구성 요소의 값을 변경 <ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph> 반드시 변경 않습니다 사이트의 이름을 <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> 에 할당 됩니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Site">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Component.Site%2A&gt;</ph> property should be set only by an <ph id="ph2">&lt;xref:System.ComponentModel.IContainer&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Component.Site%2A&gt;</ph> 에서만 속성을 설정 해야는 <ph id="ph2">&lt;xref:System.ComponentModel.IContainer&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Site">
          <source>The property value is <ph id="ph1">`null`</ph> if the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> is removed from its <ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph>.</source>
          <target state="translated">속성 값이 <ph id="ph1">`null`</ph> 경우는 <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> 에서 제거 되는 <ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Site">
          <source>Assigning <ph id="ph1">`null`</ph> to this property does not necessarily remove the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> from the <ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph>.</source>
          <target state="translated">할당 <ph id="ph1">`null`</ph> 이 속성에 반드시 제거 되 고 <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> 에서 <ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Site">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> might or might not have a name.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> 이름을 있을 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Site">
          <source>If a <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> is given a name, the name must be unique among other <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> objects within its <ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> 되는 이름이 지정 된 경우 이름을 간에 고유 해야 다른 <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> 내의 개체를 해당 <ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Site">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph> stores the name of the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>; therefore, you can only name a <ph id="ph3">&lt;xref:System.ComponentModel.Component&gt;</ph> if it has an <ph id="ph4">&lt;xref:System.ComponentModel.ISite&gt;</ph> associated with it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph> 의 이름을 저장 하는 <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>이므로, 이름을 지정할 수 있습니다는 <ph id="ph3">&lt;xref:System.ComponentModel.Component&gt;</ph> 있으면는 <ph id="ph4">&lt;xref:System.ComponentModel.ISite&gt;</ph> 연관 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Component.ToString">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>, if any.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>의 이름이 포함된 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>을 반환합니다(있는 경우).</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Component.ToString">
          <source>This method should not be overridden.</source>
          <target state="translated">이 메서드는 재정의할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Component.ToString">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>, if any, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the <ph id="ph4">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> is unnamed.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>의 이름이 포함된 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>(있는 경우) 또는 <ph id="ph4">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>가 명명되지 않은 경우 <ph id="ph3">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.ToString">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> may or may not have a name.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> 이름을 없을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.ToString">
          <source>If a <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> is given a name, the name is unique among other <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> objects within its <ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> 은 이름은 이름이 고유한 특히 <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> 내의 개체를 해당 <ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.ToString">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph> stores the name of the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph> 의 이름을 저장 하는 <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.ToString">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> can only have an <ph id="ph2">&lt;xref:System.ComponentModel.ISite&gt;</ph> if it has been added to an <ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph> and the <ph id="ph4">&lt;xref:System.ComponentModel.IContainer&gt;</ph> assigns an <ph id="ph5">&lt;xref:System.ComponentModel.ISite&gt;</ph> to it.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> 하나만 사용할 수는 <ph id="ph2">&lt;xref:System.ComponentModel.ISite&gt;</ph> 에 추가 된 경우는 <ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph> 및 <ph id="ph4">&lt;xref:System.ComponentModel.IContainer&gt;</ph> 할당 한 <ph id="ph5">&lt;xref:System.ComponentModel.ISite&gt;</ph> 를 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>