<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TypeDescriptor.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5968d329f2f177601a519db6bf1860db9d9f3c359.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">968d329f2f177601a519db6bf1860db9d9f3c359</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Provides information about the characteristics for a component, such as its attributes, properties, and events.</source>
          <target state="translated">구성 요소의 특성, 속성 및 이벤트와 같이, 구성 요소의 특성에 대한 정보를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>The .NET Framework provides two ways to access metadata on a type: the reflection API provided in the <ph id="ph1">&lt;xref:System.Reflection?displayProperty=nameWithType&gt;</ph> namespace, and the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> class.</source>
          <target state="translated">.NET Framework는 메타 데이터 형식에 액세스 하는 두 가지 방법: 리플렉션 API에 제공 된는 <ph id="ph1">&lt;xref:System.Reflection?displayProperty=nameWithType&gt;</ph> 네임 스페이스 및 <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> 클래스.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Reflection is a general mechanism available to all types because its foundation is established in the <ph id="ph1">&lt;xref:System.Object.GetType%2A&gt;</ph> method of the root <ph id="ph2">&lt;xref:System.Object&gt;</ph> class.</source>
          <target state="translated">리플렉션 이므로 모든 형식에 사용할 수는 일반 메커니즘의 기초로 <ph id="ph1">&lt;xref:System.Object.GetType%2A&gt;</ph> 메서드는 루트의 <ph id="ph2">&lt;xref:System.Object&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>The information it returns for a type is not extensible, in that it cannot be modified after compilation of the target type.</source>
          <target state="translated">형식에 대해 반환 하는 정보는 달리, 확장 가능 대상 유형의 컴파일 후 수정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>For more information, see the topics in <bpt id="p1">[</bpt>Reflection<ept id="p1">](~/docs/framework/reflection-and-codedom/reflection.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 항목에서는 <bpt id="p1">[</bpt>리플렉션<ept id="p1">](~/docs/framework/reflection-and-codedom/reflection.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>In contrast, <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> is an extensible inspection mechanism for components: those classes that implement the <ph id="ph2">&lt;xref:System.ComponentModel.IComponent&gt;</ph> interface.</source>
          <target state="translated">반면, <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> 는 구성 요소에 대 한 확장 가능한 검사 메커니즘: 구현 하는 클래스는 <ph id="ph2">&lt;xref:System.ComponentModel.IComponent&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Unlike reflection, it does not inspect for methods.</source>
          <target state="translated">반사 달리 메서드에 대 한 검사 하지 것입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> can be dynamically extended by several services available through the target component's <ph id="ph2">&lt;xref:System.ComponentModel.Component.Site%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> 대상 구성 요소를 통해 사용할 수 있는 여러 서비스에서 동적으로 확장 될 <ph id="ph2">&lt;xref:System.ComponentModel.Component.Site%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>The following table shows these services.</source>
          <target state="translated">다음 표에서 이러한 서비스를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Service name</source>
          <target state="translated">서비스 이름</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Enables another class, such as <ph id="ph1">&lt;xref:System.Windows.Forms.ToolTip&gt;</ph>, to provide extra properties to a component.</source>
          <target state="translated">와 같은 다른 클래스를 사용 하면 <ph id="ph1">&lt;xref:System.Windows.Forms.ToolTip&gt;</ph>, 구성 요소에 추가 속성을 제공 하 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Enables another object to modify the standard metadata that is exposed by a component.</source>
          <target state="translated">다른 개체를에 구성 요소에 의해 노출 되는 표준 메타 데이터를 수정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Enables a class to completely and dynamically specify its own metadata, replacing the standard inspection mechanism of <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</source>
          <target state="translated">사용 하면 완전히 하 고 동적으로의 표준 검사 메커니즘을 바꾸는 자체 메타 데이터를 지정 하려면 클래스 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>The extensibility provided by <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> allows the design-time representation of a component to differ from its actual run-time representation, which makes <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> useful for building design-time infrastructure.</source>
          <target state="translated">제공 하는 확장성 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> 실제 실행 시간을 표현 하는 다르게 구성 요소의 디자인 타임 표시를 사용 하면 <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> 디자인 타임 인프라를 구축 하는 데 유용 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>All the methods in <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> are <ph id="ph2">`static`</ph>.</source>
          <target state="translated">모든 메서드에 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> 는 <ph id="ph2">`static`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>You cannot create an instance of this class, and this class cannot be inherited.</source>
          <target state="translated">이 클래스의 인스턴스를 만들 수 및이 클래스는 상속 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>You can set property and event values two different ways: specify them in the component class or change them at design time.</source>
          <target state="translated">속성을 설정할 수 있습니다 및 이벤트에는 두 가지 방법으로 값: 구성 요소 클래스에서 지정 하거나 디자인 타임에이 변경 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Because you can set these values two ways, the overloaded methods of <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> take two different types of parameters: a class type or an object instance.</source>
          <target state="translated">이 설정할 수 있으므로 두 가지 방법의 오버 로드 된 메서드 값 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> 다음 두 가지 다른 유형의 매개 변수: 클래스 유형 또는 개체 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>When you want to access <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> information and you have an instance of the object, use the method that calls for a component.</source>
          <target state="translated">액세스 하려는 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> 정보 및 사용자 개체의 인스턴스, 구성 요소에 대 한 호출 하는 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Use the method that calls for the class type only when you do not have an instance of the object.</source>
          <target state="translated">개체의 인스턴스가 없는 경우에 클래스 형식에 대 한 호출 하는 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Properties and events are cached by <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> for speed.</source>
          <target state="translated">캐시 하는 속성 및 이벤트 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> 속도 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Typically, they are constant for the lifetime of an object.</source>
          <target state="translated">일반적으로 서로 상수 개체의 수명에 대 한입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>However, extender providers and designers can change the set of properties on an object.</source>
          <target state="translated">그러나 extender 공급자 및 디자이너 개체에 대 한 속성 집합을 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>If this is the case, then the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt;</ph> method must be called to update the cache.</source>
          <target state="translated">이런 경우가 하면 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt;</ph> 메서드를 호출 하 여 캐시를 업데이트 해야 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Adds class-level attributes to the target component.</source>
          <target state="translated">클래스 수준 특성을 대상 구성 요소에 추가합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>An instance of the target component.</source>
          <target state="translated">대상 구성 요소의 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> objects to add to the component's class.</source>
          <target state="translated">구성 요소의 클래스에 추가할 <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>Adds class-level attributes to the target component instance.</source>
          <target state="translated">클래스 수준 특성을 대상 구성 요소 인스턴스에 추가합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>The newly created <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> that was used to add the specified attributes.</source>
          <target state="translated">지정된 속성을 추가하는 데 사용된 새로 만든 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Object%2CSystem.Attribute%5B%5D%29&gt;</ph> method adds class-level attributes to the specified instance of a component.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Object%2CSystem.Attribute%5B%5D%29&gt;</ph> 메서드는 구성 요소의 지정 된 인스턴스 클래스 수준 특성을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>Because this is a common requirement of applications using the <ph id="ph1">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph> Windows Forms Designer and Properties window, this method provides a shortcut by creating a type description provider that merges the provided attributes with the attributes that already exist on the class.</source>
          <target state="translated">이 항목은 사용 하 여 응용 프로그램의 일반적인 요구 사항은 <ph id="ph1">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph> Windows Forms 디자이너 및 속성 창에서이 메서드는 바로 가기가 제공된 된 특성의 특성으로 병합 하는 형식 설명 공급자를 만들어 제공 하는 클래스에 이미 있습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>The return value is the type description provider that was used to add the attributes.</source>
          <target state="translated">반환 값은 특성을 추가 하는 데 사용 된 형식 설명 공급자입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>This provider can later be passed to the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> method when the added attributes are no longer needed.</source>
          <target state="translated">나중에이 공급자에 전달할 수는 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> 메서드 추가 되는 특성이 더 이상 필요 없는 경우.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>One or both of the parameters is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">매개 변수 중 하나 또는 둘 다 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>for full access to system resources.</source>
          <target state="translated">시스템 리소스에 대 한 전체 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>Associated state:</source>
          <target state="translated">연결 된 상태:</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">대상 구성 요소의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> objects to add to the component's class.</source>
          <target state="translated">구성 요소의 클래스에 추가할 <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>Adds class-level attributes to the target component type.</source>
          <target state="translated">클래스 수준 특성을 대상 구성 요소 형식에 추가합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>The newly created <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> that was used to add the specified attributes.</source>
          <target state="translated">지정된 속성을 추가하는 데 사용된 새로 만든 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Type%2CSystem.Attribute%5B%5D%29&gt;</ph> method adds class-level attributes to the specified type of a component.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Type%2CSystem.Attribute%5B%5D%29&gt;</ph> 메서드는 구성 요소의 지정된 된 형식으로 클래스 수준 특성을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>Because this is a common requirement of applications using the <ph id="ph1">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph> Windows Forms Designer and Properties window, this method provides a shortcut by creating a type description provider that merges the provided attributes with the attributes that already exist on the class.</source>
          <target state="translated">이 항목은 사용 하 여 응용 프로그램의 일반적인 요구 사항은 <ph id="ph1">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph> Windows Forms 디자이너 및 속성 창에서이 메서드는 바로 가기가 제공된 된 특성의 특성으로 병합 하는 형식 설명 공급자를 만들어 제공 하는 클래스에 이미 있습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>The return value is the type description provider that was used to add the attributes.</source>
          <target state="translated">반환 값은 특성을 추가 하는 데 사용 된 형식 설명 공급자입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>This provider can later be passed to the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> method when the added attributes are no longer needed.</source>
          <target state="translated">나중에이 공급자에 전달할 수는 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> 메서드 추가 되는 특성이 더 이상 필요 없는 경우.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>One or both of the parameters is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">매개 변수 중 하나 또는 둘 다 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>for full access to system resources.</source>
          <target state="translated">시스템 리소스에 대 한 전체 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>Associated state:</source>
          <target state="translated">연결 된 상태:</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>The editor base type to add the editor table for.</source>
          <target state="translated">편집기 테이블을 추가할 편집기 기본 형식입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>If a table already exists for this type, this method will do nothing.</source>
          <target state="translated">이 형식에 대한 테이블이 이미 있으면 이 메서드는 아무 작업도 수행하지 않습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph> to add.</source>
          <target state="translated">추가할 <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>Adds an editor table for the given editor base type.</source>
          <target state="translated">지정된 편집기 기본 형식에 대한 편집기 테이블을 추가합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddEditorTable%2A&gt;</ph> method adds an editor table for the given editor base type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddEditorTable%2A&gt;</ph> 메서드는 지정 된 편집기 기본 형식에 대 한 편집기 테이블을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>Typically, editors are specified as metadata on a component.</source>
          <target state="translated">일반적으로 편집기는 구성 요소에서 메타 데이터로 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>However, if no metadata for a requested editor base type can be found on the component, the associated <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> will search an editor table for the editor type, if one can be found.</source>
          <target state="translated">그러나 경우 요청된 된 편집기 기본에 대 한 메타 데이터 형식을 찾을 수는 연결 된 구성 요소에 대해 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> 하나를 찾을 수 있는 편집기 형식에 대 한 편집기 테이블을 검색 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>Once an editor table has been added to a type descriptor, it cannot be removed and is owned by the type descriptor.</source>
          <target state="translated">편집기 테이블에는 형식 설명자에 추가 되 면 제거할 수 없습니다 및 형식 설명자가 소유 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>The type descriptor may freely make modifications to this table.</source>
          <target state="translated">형식 설명자에이 테이블에 있는 수정할 자유롭게 수 있습니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>The format for an editor table uses data types as keys and editors as values.</source>
          <target state="translated">편집기 테이블에 대 한 형식은 값으로 키와 편집기로 데이터 형식을 사용합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>The value portion of an entry in the table represents an editor instance.</source>
          <target state="translated">테이블에서 항목의 값 부분 편집기 인스턴스를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>It can have one of three values.</source>
          <target state="translated">세 가지 값 중 하나일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>If it contains a string, the type descriptor will assume this is a fully qualified name of a type, and then load the type for the object.</source>
          <target state="translated">문자열에 포함 된 경우이 개체에 대 한 정규화 된 이름 형식 및의 형식 로드 하는 형식 설명자는 가정 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>If it contains a type, an instance of this type will be created to obtain an editor.</source>
          <target state="translated">형식에 포함 된 경우 편집기를 가져오려면 이러한 종류의 인스턴스가 만들어질 수 있습니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>Finally, the value portion may contain an actual editor instance.</source>
          <target state="translated">마지막으로, 해당 값 부분이 실제 편집기 인스턴스를 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>If the type descriptor resolves an editor to an instance, it will store the instance back into the table for future use.</source>
          <target state="translated">형식 설명자 편집기 인스턴스로 확인 되 면 나중에 사용할 테이블로 다시 인스턴스를 저장 합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Adds a type description provider to the list of providers for this type descriptor.</source>
          <target state="translated">이 형식 설명자에 대한 공급자 목록에 형식 설명 공급자를 추가합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> to add.</source>
          <target state="translated">추가할 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>An instance of the target component.</source>
          <target state="translated">대상 구성 요소의 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Adds a type description provider for a single instance of a component.</source>
          <target state="translated">단일 구성 요소 인스턴스에 대한 형식 설명 공급자를 추가합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> method adds a type description provider that supplies type information for a single instance of a component.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> 메서드 형식 단일 인스턴스의 구성 요소에 대 한 정보를 제공 하는 형식 설명 공급자를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>If a provider is added by this method, the provider's <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A&gt;</ph> method will not be called because the instance already exists.</source>
          <target state="translated">이 메서드에서 공급자의 공급자를 추가 하는 경우 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A&gt;</ph> 인스턴스가 이미 존재 하기 때문에 메서드 호출 되지 것입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>This method does not maintain a hard reference to the component, so it does not prevent the component from finalizing.</source>
          <target state="translated">이 메서드는 구성 요소에 대 한 하드 참조를 유지 하지 않으므로 완료 하는 중에서 구성 요소를 주지 않습니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>It is possible to add multiple type description providers for the same type or object.</source>
          <target state="translated">동일한 형식 또는 개체에 대 한 여러 형식 설명 공급자를 추가 하는 것이 불가능 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>If this occurs, the first type description provider encountered that provides type information will be used exclusively.</source>
          <target state="translated">이 경우 첫 번째 형식 설명 공급자 발생 형식 정보를 제공 하는 단독으로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Since type information providers are stored in a stack, the last provider added will be the first one queried.</source>
          <target state="translated">형식 정보 공급자에는 스택을 저장 되므로, 마지막으로 추가 된 공급자 쿼리할 첫 번째 됩니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>This behavior enables the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> and <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A&gt;</ph> methods to be used to push and pop type description providers as required for particular scenarios.</source>
          <target state="translated">이 동작을 통해는 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> 및 <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A&gt;</ph> 특정 시나리오에 필요한 대로 푸시 및 팝 하는 데 사용할 메서드 형식 설명 공급자입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>If successful, this method calls the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Object%29&gt;</ph> method on the <ph id="ph2">`instance`</ph> parameter.</source>
          <target state="translated">성공이 메서드 호출의 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Object%29&gt;</ph> 메서드를는 <ph id="ph2">`instance`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>The two versions of this method produce results with different scopes.</source>
          <target state="translated">이 메서드의 두 가지 버전 범위가 다른 결과 생성 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</ph> method that takes an <ph id="ph2">&lt;xref:System.Object&gt;</ph> parameter affects only that single instance of the component specified.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</ph> 를 받는 메서드에 <ph id="ph2">&lt;xref:System.Object&gt;</ph> 매개 변수는 단일 인스턴스의 지정 된 구성에 영향을 줍니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>In contrast, the other overload, which takes a <ph id="ph1">&lt;xref:System.Type&gt;</ph> parameter, affects all instances of the component described by that type.</source>
          <target state="translated">반면, 다른 오버 로드를 사용 하는 한 <ph id="ph1">&lt;xref:System.Type&gt;</ph> 매개 변수를 해당 형식으로 설명 하는 구성 요소의 모든 인스턴스에 영향을 줍니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> method if you need to call from partially trusted code.</source>
          <target state="translated">사용 된 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> 메서드 부분적으로 신뢰할 수 있는 코드에서 호출 하는 경우.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">매개 변수 중 하나 또는 둘 다가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>for full access to system resources.</source>
          <target state="translated">시스템 리소스에 대 한 전체 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Associated state:</source>
          <target state="translated">연결 된 상태:</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> to add.</source>
          <target state="translated">추가할 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">대상 구성 요소의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Adds a type description provider for a component class.</source>
          <target state="translated">구성 요소 클래스에 대한 형식 설명 공급자를 추가합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> method adds a type description provider that supplies type information for the specified class, derived classes, and all instances of these types.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> 메서드 형식 지정된 된 클래스, 파생 된 클래스 및 이러한 형식의 모든 인스턴스에 대 한 정보를 제공 하는 형식 설명 공급자를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The <ph id="ph1">`type`</ph> parameter can be any type, including an interface.</source>
          <target state="translated"><ph id="ph1">`type`</ph> 매개 변수는 인터페이스를 포함 하 여 형식일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>For example, to provide custom type and instance information for all components, you would specify <ph id="ph1">`typeof(IComponent)`</ph>.</source>
          <target state="translated">예를 들어 사용자 지정 형식 및 모든 구성 요소에 대 한 인스턴스 정보를 제공 하려면 지정 <ph id="ph1">`typeof(IComponent)`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Passing <ph id="ph1">`typeof(object)`</ph> will call the provider to supply type information for all types.</source>
          <target state="translated">전달 <ph id="ph1">`typeof(object)`</ph> 모든 형식에 대 한 형식 정보를 제공 하도록 공급자를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>This method does not maintain a hard reference to any object, so it does not prevent objects from finalizing.</source>
          <target state="translated">이 메서드를 개체에 대 한 하드 참조를 유지 하지 않으므로 완료 하는 중에서 개체를 주지 않습니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>It is possible to add multiple type description providers for the same type or object.</source>
          <target state="translated">동일한 형식 또는 개체에 대 한 여러 형식 설명 공급자를 추가 하는 것이 불가능 합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>If this occurs, the first type description provider encountered that provides type information will be used exclusively.</source>
          <target state="translated">이 경우 첫 번째 형식 설명 공급자 발생 형식 정보를 제공 하는 단독으로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Because type information providers are stored in a stack, the last provider added will be the first one queried.</source>
          <target state="translated">형식 정보 공급자 스택을에 저장 되므로, 마지막으로 추가 된 공급자 쿼리할 첫 번째 됩니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>This behavior enables the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> and <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A&gt;</ph> methods to be used to push and pop type description providers as required for particular scenarios.</source>
          <target state="translated">이 동작을 통해는 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> 및 <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A&gt;</ph> 특정 시나리오에 필요한 대로 푸시 및 팝 하는 데 사용할 메서드 형식 설명 공급자입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>If successful, this method calls the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Type%29&gt;</ph> method on the <ph id="ph2">`type`</ph> parameter.</source>
          <target state="translated">성공이 메서드 호출의 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Type%29&gt;</ph> 메서드를는 <ph id="ph2">`type`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The two versions of this method produce results with different scopes.</source>
          <target state="translated">이 메서드의 두 가지 버전 범위가 다른 결과 생성 합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</ph> method that takes an <ph id="ph2">&lt;xref:System.Object&gt;</ph> parameter affects only that single instance of the component specified.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</ph> 를 받는 메서드에 <ph id="ph2">&lt;xref:System.Object&gt;</ph> 매개 변수는 단일 인스턴스의 지정 된 구성에 영향을 줍니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>In contrast, the other overload, which takes a <ph id="ph1">&lt;xref:System.Type&gt;</ph> parameter, affects all instances of the component described by that type.</source>
          <target state="translated">반면, 다른 오버 로드를 사용 하는 한 <ph id="ph1">&lt;xref:System.Type&gt;</ph> 매개 변수를 해당 형식으로 설명 하는 구성 요소의 모든 인스턴스에 영향을 줍니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> method if you need to call from partially trusted code.</source>
          <target state="translated">사용 된 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> 메서드 부분적으로 신뢰할 수 있는 코드에서 호출 하는 경우.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">매개 변수 중 하나 또는 둘 다가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>for full access to system resources.</source>
          <target state="translated">시스템 리소스에 대 한 전체 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Associated state:</source>
          <target state="translated">연결 된 상태:</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Adds a type description provider to the list of providers for this type descriptor.</source>
          <target state="translated">이 형식 설명자에 대한 공급자 목록에 형식 설명 공급자를 추가합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> to add.</source>
          <target state="translated">추가할 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>An instance of the target component.</source>
          <target state="translated">대상 구성 요소의 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Adds a type description provider for a single instance of a component.</source>
          <target state="translated">단일 구성 요소 인스턴스에 대한 형식 설명 공급자를 추가합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>This method can be called from partially trusted code.</source>
          <target state="translated">부분적으로 신뢰할 수 있는 코드에서 이 메서드를 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess&gt;</ph> is defined, the caller can register a provider for the specified instance if its type is also partially trusted.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess&gt;</ph> 는 정의 호출자에 게 등록할 수에 지정된 된 인스턴스에 대 한 공급자 해당 형식을 부분 신뢰 이기도 한 경우.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> method if you do not need to call from partially trusted code.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> 메서드 부분적으로 신뢰할 수 있는 코드에서 호출할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">매개 변수 중 하나 또는 둘 다가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>For registry access.</source>
          <target state="translated">레지스트리 액세스 권한입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">보안 동작: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">보안 동작: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Associated type: The <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> that is required by the assembly that defines the <ph id="ph2">&lt;paramref name="instance" /&gt;</ph> parameter's type.</source>
          <target state="translated">연결 된 형식:는 <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> 정의 하는 어셈블리에 필요 하는 <ph id="ph2">&lt;paramref name="instance" /&gt;</ph> 매개 변수의 형식입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> to add.</source>
          <target state="translated">추가할 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">대상 구성 요소의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Adds a type description provider for a component class.</source>
          <target state="translated">구성 요소 클래스에 대한 형식 설명 공급자를 추가합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>This method can be called from partially trusted code.</source>
          <target state="translated">부분적으로 신뢰할 수 있는 코드에서 이 메서드를 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>If <ph id="ph1">&lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess&gt;</ph> is defined, the caller can register a provider for the specified type if it is also partially trusted.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess&gt;</ph> 는 정의 호출자에 게 등록할 수를 지정 된 형식에 대 한 공급자 부분적으로 신뢰할 수 있는 이기도 한 경우.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> method if you do not need to call from partially trusted code.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> 메서드 부분적으로 신뢰할 수 있는 코드에서 호출할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">매개 변수 중 하나 또는 둘 다가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>For registry access.</source>
          <target state="translated">레지스트리 액세스 권한입니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">보안 동작: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">보안 동작: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Associated type: The <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> that is required by the assembly that defines <ph id="ph2">&lt;paramref name="type" /&gt;</ph>.</source>
          <target state="translated">연결 된 형식:는 <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> 정의 하는 어셈블리에서 필요한 <ph id="ph2">&lt;paramref name="type" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler">
          <source>Gets or sets the provider for the Component Object Model (COM) type information for the target component.</source>
          <target state="translated">대상 구성 요소에 대한 COM(구성 요소 개체 모델) 형식 정보에 대한 공급자를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComNativeDescriptorHandler" /&gt;</ph> instance representing the COM type information provider.</source>
          <target state="translated">COM 형식 정보 공급자를 나타내는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComNativeDescriptorHandler" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.ComponentModel.IComNativeDescriptorHandler&gt;</ph> interface are obsolete.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler%2A&gt;</ph> 속성 및 <ph id="ph2">&lt;xref:System.ComponentModel.IComNativeDescriptorHandler&gt;</ph> 인터페이스는 사용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A&gt;</ph> property.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A&gt;</ph> 속성을 참조하세요.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler">
          <source>for full access to system resources.</source>
          <target state="translated">시스템 리소스에 대 한 전체 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler">
          <source>Associated state:</source>
          <target state="translated">연결 된 상태:</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.TypeDescriptor.ComObjectType">
          <source>Gets the type of the Component Object Model (COM) object represented by the target component.</source>
          <target state="translated">대상 구성 요소에서 나타내는 COM(구성 요소 개체 모델) 개체의 형식을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.ComObjectType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the COM object represented by this component, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> for non-COM objects.</source>
          <target state="translated">이 구성 요소가 나타내는 COM 개체의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, 또는 비 COM 개체의 경우 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.ComObjectType">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A&gt;</ph> property returns a type that can be passed to the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> method to define a type description provider for COM types.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A&gt;</ph> 속성에 전달 될 수 있는 형식을 반환는 <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> 메서드를 COM 형식에 대 한 형식 설명 공급자를 정의 합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.ComObjectType">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A&gt;</ph> property and other members in this class replace the functionality in the obsolete <ph id="ph2">&lt;xref:System.ComponentModel.IComNativeDescriptorHandler&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A&gt;</ph> 속성 및이 클래스의 다른 멤버에는 사용 되지 않는 기능을 대체 합니다. <ph id="ph2">&lt;xref:System.ComponentModel.IComNativeDescriptorHandler&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.ComObjectType">
          <source>To implement a mapping layer between a COM object and <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>, add a <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> to handle type <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A&gt;</ph>.</source>
          <target state="translated">COM 개체 간의 매핑 계층을 구현 하 고 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>, 추가 <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> 형식을 처리 하려면 <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source>The primary <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">기본 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source>The secondary <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">보조 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source>Creates a primary-secondary association between two objects.</source>
          <target state="translated">두 개체 사이에 기본-보조 연결을 만듭니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt;</ph> method creates an association between a primary and a secondary object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt;</ph> 메서드는 기본 및 보조 개체 간의 연결을 만듭니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source>Once an association is created, a designer or other filtering mechanism can add properties that route to either object into the primary object's property set.</source>
          <target state="translated">연결을 만든 후 디자이너나 다른 필터링 메커니즘은 기본 개체의 속성 집합으로 라우팅되는 속성을 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source>When a property invocation is made against the primary object, the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A&gt;</ph> method will be called to resolve the actual object instance that is related to its type parameter.</source>
          <target state="translated">속성 호출의 주요 개체에 대 한 경우는 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A&gt;</ph> 해당 형식 매개 변수 관련 된 실제 개체 인스턴스를 해결 하려면 메서드가 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.WeakReference&gt;</ph> is used to maintain the association between the primary and secondary object; therefore, this method does not prevent either object from being finalized and reclaimed by garbage collection.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.WeakReference&gt;</ph> 사용 하 여 기본 및 보조 개체 간의 연결을 유지; 이므로이 메서드 하지 않는 두 개체에서 종료 하 고 가비지 수집에서 회수 합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">매개 변수 중 하나 또는 둘 다가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="primary" /&gt;</ph> is equal to <ph id="ph2">&lt;paramref name="secondary" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="primary" /&gt;</ph>가 <ph id="ph2">&lt;paramref name="secondary" /&gt;</ph>와 같은 경우</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source>for full access to system resources.</source>
          <target state="translated">시스템 리소스에 대 한 전체 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source>Associated state:</source>
          <target state="translated">연결 된 상태:</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> that specifies the component to associate with the designer.</source>
          <target state="translated">디자이너와 연결할 구성 요소를 지정하는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of designer to create.</source>
          <target state="translated">만들 디자이너의 형식을 나타내는 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)">
          <source>Creates an instance of the designer associated with the specified component and of the specified type of designer.</source>
          <target state="translated">지정된 구성 요소와 연결된 디자이너의 인스턴스 및 지정된 형식의 디자이너의 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesigner" /&gt;</ph> that is an instance of the designer for the component, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no designer can be found.</source>
          <target state="translated">구성 요소에 대한 디자이너의 인스턴스인 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesigner" /&gt;</ph>이거나, 디자이너를 찾을 수 없으면 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)">
          <source>If this method cannot find a valid <ph id="ph1">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph>, it searches up the class hierarchy for a designer.</source>
          <target state="translated">이 메서드는 유효한 찾을 수 없는 경우 <ph id="ph1">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph>, 디자이너에 대 한 클래스 계층 구조를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)">
          <source>If it cannot find a designer in the class hierarchy, it returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">반환 하는 경우 클래스 계층 구조에서 디자이너를 찾을 수 없습니다 것, <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Creates a new event descriptor that is identical to an existing event descriptor.</source>
          <target state="translated">기존 이벤트 설명자와 동일한 새 이벤트 설명자를 만듭니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])">
          <source>The type of the component for which to create the new event.</source>
          <target state="translated">새 이벤트를 만들 구성 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])">
          <source>The existing event information.</source>
          <target state="translated">기존 이벤트 정보입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])">
          <source>The new attributes.</source>
          <target state="translated">새 특성입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])">
          <source>Creates a new event descriptor that is identical to an existing event descriptor, when passed the existing <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph>.</source>
          <target state="translated">기존 <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph>를 전달할 때 기존 이벤트 설명자와 동일한 새 이벤트 설명자를 만듭니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])">
          <source>A new <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> that has merged the specified metadata attributes with the existing metadata attributes.</source>
          <target state="translated">지정된 메타데이터 특성과 기존 메타데이터 특성이 병합된 새 <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])">
          <source>Required to inspect non-public members of the component.</source>
          <target state="translated">구성 요소의 public이 아닌 멤버를 검사 하는 데 필요 합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])">
          <source>Link demand access required for <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /&gt;</ph> type <ph id="ph2">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph>.</source>
          <target state="translated">요청 시 액세스 하는 데 필요한 연결 <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /&gt;</ph> 형식 <ph id="ph2">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])">
          <source>The type of the component the event lives on.</source>
          <target state="translated">이벤트를 만들 구성 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])">
          <source>The name of the event.</source>
          <target state="translated">이벤트의 이름입니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])">
          <source>The type of the delegate that handles the event.</source>
          <target state="translated">이벤트를 처리하는 대리자의 형식입니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])">
          <source>The attributes for this event.</source>
          <target state="translated">이 이벤트에 대한 특성입니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])">
          <source>Creates a new event descriptor that is identical to an existing event descriptor by dynamically generating descriptor information from a specified event on a type.</source>
          <target state="translated">형식에 지정된 이벤트에서 설명자 정보를 동적으로 생성하여 기존 이벤트 설명자와 동일한 새 이벤트 설명자를 만듭니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> that is bound to a type.</source>
          <target state="translated">형식에 바인딩되는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])">
          <source>Required to inspect non-public members of the component.</source>
          <target state="translated">구성 요소의 public이 아닌 멤버를 검사 하는 데 필요 합니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])">
          <source>Link demand access required for <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /&gt;</ph> type <ph id="ph2">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph>.</source>
          <target state="translated">요청 시 액세스 하는 데 필요한 연결 <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /&gt;</ph> 형식 <ph id="ph2">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>The service provider that provides a <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> service.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> 서비스를 제공하는 서비스 공급자입니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 매개 변수는 <ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of object to create.</source>
          <target state="translated">만들 개체의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>An optional array of parameter types to be passed to the object's constructor.</source>
          <target state="translated">개체의 생성자에 전달할 매개 변수 형식의 선택적 배열입니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> or an array of zero length.</source>
          <target state="translated">이 매개 변수는 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 또는 0길이 배열일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>An optional array of parameter values to pass to the object's constructor.</source>
          <target state="translated">개체의 생성자에 전달할 매개 변수 값의 선택적 배열입니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>If not <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the number of elements must be the same as <bpt id="p1">&lt;c&gt;</bpt>argTypes<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>이 아니면 요소 개수가 <bpt id="p1">&lt;c&gt;</bpt>argTypes<ept id="p1">&lt;/c&gt;</ept>와 동일해야 합니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>Creates an object that can substitute for another data type.</source>
          <target state="translated">다른 데이터 형식 대신 사용할 수 있는 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>An instance of the substitute data type if an associated <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> is found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">연결된 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>가 있으면 대체 데이터 형식의 인스턴스이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A&gt;</ph> method will search for a <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> that is associated with the specified <ph id="ph3">`objectType`</ph> data type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A&gt;</ph> 메서드는 검색 한 <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> 지정 된 연결 된 <ph id="ph3">`objectType`</ph> 데이터 형식입니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>This method first tries to obtain a type description provider from the <ph id="ph1">`provider`</ph> parameter.</source>
          <target state="translated">이 메서드는에서 형식 설명 공급자를 먼저 시도 <ph id="ph1">`provider`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>If this fails, it searches its own internal tables for a provider (these entries were created through previous calls to <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</ph>).</source>
          <target state="translated">이 작업이 실패 하면 공급자에 대 한 자체 내부 테이블 검색 (이 항목에 대 한 이전 호출을 통해 만든 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>If it finds a provider, this method will delegate the creation call to that object.</source>
          <target state="translated">공급자, 발견 되 면이 메서드는 해당 개체에 만들기 호출을 위임 합니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source><ph id="ph1">&lt;paramref name="objectType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="args" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph> when <ph id="ph5">&lt;paramref name="argTypes" /&gt;</ph> is not <ph id="ph6">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph5">&lt;paramref name="argTypes" /&gt;</ph>가 <ph id="ph6">&lt;see langword="null" /&gt;</ph>이 아닐 때 <ph id="ph1">&lt;paramref name="objectType" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이거나 <ph id="ph3">&lt;paramref name="args" /&gt;</ph>가 <ph id="ph4">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source><ph id="ph1">&lt;paramref name="argTypes" /&gt;</ph> and <ph id="ph2">&lt;paramref name="args" /&gt;</ph> have different number of elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="argTypes" /&gt;</ph> 및 <ph id="ph2">&lt;paramref name="args" /&gt;</ph>의 요소 수가 다릅니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>If the derived class does not provide a substitute instance, this method should call the base implementation.</source>
          <target state="translated">파생된 클래스는 대체 인스턴스를 제공 하지 않는 경우이 메서드는 기본 구현을 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Creates a new property descriptor for an existing property of a component.</source>
          <target state="translated">구성 요소의 기존 속성에 대한 새 속성 설명자를 생성합니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the component that the property is a member of.</source>
          <target state="translated">속성이 멤버인 구성 요소의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])">
          <source>The existing property descriptor.</source>
          <target state="translated">기존 속성 설명자입니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])">
          <source>The new attributes for this property.</source>
          <target state="translated">이 속성의 새 특성입니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])">
          <source>Creates a new property descriptor from an existing property descriptor, using the specified existing <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> and attribute array.</source>
          <target state="translated">지정된 기존 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> 및 특성 배열을 사용하여 기존 속성 설명자에서 새 속성 설명자를 만듭니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])">
          <source>A new <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> that has the specified metadata attributes merged with the existing metadata attributes.</source>
          <target state="translated">지정된 메타데이터 특성이 기존 메타데이터 특성과 병합된 새 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])">
          <source>Required to inspect non-public members of the component.</source>
          <target state="translated">구성 요소의 public이 아닌 멤버를 검사 하는 데 필요 합니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])">
          <source>Link demand access required for <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /&gt;</ph> type <ph id="ph2">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph>.</source>
          <target state="translated">요청 시 액세스 하는 데 필요한 연결 <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /&gt;</ph> 형식 <ph id="ph2">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the component that the property is a member of.</source>
          <target state="translated">속성이 멤버인 구성 요소의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])">
          <source>The name of the property.</source>
          <target state="translated">속성의 이름입니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the property.</source>
          <target state="translated">속성의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])">
          <source>The new attributes for this property.</source>
          <target state="translated">이 속성의 새 특성입니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])">
          <source>Creates and dynamically binds a property descriptor to a type, using the specified property name, type, and attribute array.</source>
          <target state="translated">지정된 속성 이름, 형식 및 특성 배열을 사용하여 속성 설명자를 만들고 형식에 동적으로 바인딩합니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> that is bound to the specified type and that has the specified metadata attributes merged with the existing metadata attributes.</source>
          <target state="translated">지정 형식에 바인딩되고 지정된 메타데이터 특성이 기존 메타데이터 특성과 병합된 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])">
          <source>Required to inspect non-public members of the component.</source>
          <target state="translated">구성 요소의 public이 아닌 멤버를 검사 하는 데 필요 합니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])">
          <source>Link demand access required for <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /&gt;</ph> type <ph id="ph2">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph>.</source>
          <target state="translated">요청 시 액세스 하는 데 필요한 연결 <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /&gt;</ph> 형식 <ph id="ph2">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">대상 구성 요소의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)">
          <source>The primary object of the association.</source>
          <target state="translated">연결의 기본 개체입니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)">
          <source>Returns an instance of the type associated with the specified primary object.</source>
          <target state="translated">지정된 기본 개체와 연결된 형식의 인스턴스를 반환합니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)">
          <source>An instance of the secondary type that has been associated with the primary object if an association exists; otherwise, <ph id="ph1">&lt;paramref name="primary" /&gt;</ph> if no specified association exists.</source>
          <target state="translated">연결이 있으면 기본 개체와 연결된 보조 형식의 인스턴스이고, 지정된 연결이 없으면 <ph id="ph1">&lt;paramref name="primary" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)">
          <source>If a previous association has been made for the <ph id="ph1">`type`</ph> parameter using the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt;</ph> method, then the <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A&gt;</ph> method returns the correct secondary object to invoke for the requested type.</source>
          <target state="translated">이전에 연결에 대해 수행 된 경우는 <ph id="ph1">`type`</ph> 매개 변수를 사용 하는 <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt;</ph> 메서드를 하면 <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A&gt;</ph> 메서드를 호출할 요청된 된 형식에 대 한 올바른 보조 개체를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)">
          <source>Otherwise, <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A&gt;</ph> searches for a compatible designer for <ph id="ph2">`type`</ph> and returns the designer if one is found.</source>
          <target state="translated">그렇지 않으면 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A&gt;</ph> 검색에 대 한 호환 되는 디자이너에 대 한 <ph id="ph2">`type`</ph> 가 있는 경우 디자이너를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)">
          <source>This method never returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">이 메서드는 <ph id="ph1">`null`</ph>를 반환하지 않습니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.WeakReference&gt;</ph> is used to maintain the association between the primary and secondary object; therefore, this method does not prevent either the primary or secondary object from being finalized and reclaimed by garbage collection.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.WeakReference&gt;</ph> 사용 하 여 기본 및 보조 개체 간의 연결을 유지; 이므로이 메서드 하지 않는 기본 또는 보조 개체에서 종료 하 고 가비지 수집에서 회수 합니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">매개 변수 중 하나 또는 둘 다가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Returns the collection of attributes for a component or a type.</source>
          <target state="translated">구성 요소 또는 형식에 대한 특성 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>The component for which you want to get attributes.</source>
          <target state="translated">특성을 가져올 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>Returns the collection of attributes for the specified component.</source>
          <target state="translated">지정된 구성 요소에 대한 특성 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph> containing the attributes for the component.</source>
          <target state="translated">구성 요소의 특성을 포함하는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>If <ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, this method returns an empty collection.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이면 이 메서드는 빈 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>The attributes returned by the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A&gt;</ph> method may be dynamically modified from the original component's source listing by extender providers (<ph id="ph2">&lt;xref:System.ComponentModel.IExtenderProvider&gt;</ph>), filter services (<ph id="ph3">&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;</ph>), and attribute filters.</source>
          <target state="translated">반환 된 특성의 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A&gt;</ph> 원래 구성 요소의 소스 extender 공급자가 목록에서 메서드를 동적으로 수정 될 수 있습니다 (<ph id="ph2">&lt;xref:System.ComponentModel.IExtenderProvider&gt;</ph>), 서비스 필터 (<ph id="ph3">&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;</ph>), 및 특성 필터입니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>When you define a custom attribute with <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> set to <ph id="ph2">`true`</ph>, you must override the <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> property to make it unique.</source>
          <target state="translated">와 사용자 지정 특성을 정의 하는 경우 <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> 로 설정 <ph id="ph2">`true`</ph>를 재정의 해야 합니다는 <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> 속성을 고유 하 게 합니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>If all instances of your attribute are unique, override <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> to return the object identity of your attribute.</source>
          <target state="translated">특성의 모든 인스턴스가 되는 고유 재정의 <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> 하려면 특성의 개체 id를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>If only some instances of your attribute are unique, return a value from <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> that would return equality in those cases.</source>
          <target state="translated">값을 반환 하는 경우에 특성의 일부 인스턴스가 고유 하므로 <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> 같음 이러한 경우에 반환 하 합니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>For example, some attributes have a constructor parameter that acts as a unique key.</source>
          <target state="translated">예를 들어 일부 특성에는 고유 키로 사용 하는 생성자 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>For these attributes, return the value of the constructor parameter from the <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">이러한 특성에 대 한 생성자에서 매개 변수의 값을 반환 된 <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>The default implementation of <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> returns the type identity regardless of the value of the <ph id="ph2">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">기본 구현 <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> 형식 id의 값에 관계 없이 반환 된 <ph id="ph2">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> 속성.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>In order to return multiple instances of an <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> attribute from the <ph id="ph2">&lt;xref:System.ComponentModel.AttributeCollection&gt;</ph>, your attribute must override the <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">여러 인스턴스를 반환 하려면는 <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> 에서 특성의 <ph id="ph2">&lt;xref:System.ComponentModel.AttributeCollection&gt;</ph>, 사용자의 특성이 재정의 해야 합니다는 <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>For an example of this method, see the <ph id="ph1">&lt;xref:System.ComponentModel.AttributeCollection.Matches%2A&gt;</ph> method.</source>
          <target state="translated">이 방법의 예제를 보려면는 <ph id="ph1">&lt;xref:System.ComponentModel.AttributeCollection.Matches%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">대상 구성 요소의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>Returns a collection of attributes for the specified type of component.</source>
          <target state="translated">지정된 구성 요소 형식에 대한 특성 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph> with the attributes for the type of the component.</source>
          <target state="translated">해당 구성 요소 형식에 대한 특성이 들어 있는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>If the component is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, this method returns an empty collection.</source>
          <target state="translated">해당 구성 요소가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이면 이 메서드는 빈 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">개체의 인스턴스가 없는 경우에이 버전의이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>For attributes with <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> set to <ph id="ph2">`true`</ph>, the attribute collection removes duplicate instances.</source>
          <target state="translated">사용 하 여 특성에 대 한 <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> 로 설정 <ph id="ph2">`true`</ph>, 중복 된 인스턴스를 제거 하는 특성 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>These are instances in which the <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> property returns equal values.</source>
          <target state="translated">이러한 기호가 있는 <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> 속성 같은 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>When you define a custom attribute with <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> set to <ph id="ph2">`true`</ph>, you must override the <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> property to make it unique.</source>
          <target state="translated">와 사용자 지정 특성을 정의 하는 경우 <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> 로 설정 <ph id="ph2">`true`</ph>를 재정의 해야 합니다는 <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> 속성을 고유 하 게 합니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>If all instances of your attribute are unique, override <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> to return the object identity of your attribute.</source>
          <target state="translated">특성의 모든 인스턴스가 되는 고유 재정의 <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> 하려면 특성의 개체 id를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>If only some instances of your attribute are unique, return a value from <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> that would return equality in those cases.</source>
          <target state="translated">값을 반환 하는 경우에 특성의 일부 인스턴스가 고유 하므로 <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> 같음 이러한 경우에 반환 하 합니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>For example, some attributes have a constructor parameter that acts as a unique key.</source>
          <target state="translated">예를 들어 일부 특성에는 고유 키로 사용 하는 생성자 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>For these attributes, return the value of the constructor parameter from the <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">이러한 특성에 대 한 생성자에서 매개 변수의 값을 반환 된 <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>The default implementation of <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> returns the type identity regardless of the value of the <ph id="ph2">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">기본 구현 <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> 형식 id의 값에 관계 없이 반환 된 <ph id="ph2">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> 속성.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>In order to return multiple instances of an <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> attribute from the <ph id="ph2">&lt;xref:System.ComponentModel.AttributeCollection&gt;</ph>, your attribute must override the <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">여러 인스턴스를 반환 하려면는 <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> 에서 특성의 <ph id="ph2">&lt;xref:System.ComponentModel.AttributeCollection&gt;</ph>, 사용자의 특성이 재정의 해야 합니다는 <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>The component for which you want to get attributes.</source>
          <target state="translated">특성을 가져올 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to use a baseline set of attributes from the custom type descriptor if <bpt id="p1">&lt;c&gt;</bpt>component<ept id="p1">&lt;/c&gt;</ept> is of type <ph id="ph2">&lt;see cref="T:System.ComponentModel.ICustomTypeDescriptor" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>component<ept id="p1">&lt;/c&gt;</ept>가 <ph id="ph2">&lt;see cref="T:System.ComponentModel.ICustomTypeDescriptor" /&gt;</ph> 형식인 경우 사용자 지정 형식 설명자의 기준 특성 집합을 사용하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 사용하지 않으려면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>Returns a collection of attributes for the specified component and a Boolean indicating that a custom type descriptor has been created.</source>
          <target state="translated">지정된 구성 요소에 대한 특성 컬렉션과 사용자 지정 형식 설명자가 만들어졌음을 나타내는 부울 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph> with the attributes for the component.</source>
          <target state="translated">해당 구성 요소의 특성이 들어 있는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>If the component is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, this method returns an empty collection.</source>
          <target state="translated">해당 구성 요소가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이면 이 메서드는 빈 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>The attributes returned by the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A&gt;</ph> method may be dynamically modified from the original components source listing by extender providers (<ph id="ph2">&lt;xref:System.ComponentModel.IExtenderProvider&gt;</ph>), filter services (<ph id="ph3">&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;</ph>), and attribute filters.</source>
          <target state="translated">반환 된 특성의 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A&gt;</ph> extender 공급자가 나열 하는 구성 요소 원본에서 메서드를 동적으로 수정 될 수 있습니다 (<ph id="ph2">&lt;xref:System.ComponentModel.IExtenderProvider&gt;</ph>), 서비스 필터 (<ph id="ph3">&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;</ph>), 및 특성 필터입니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>When you define a custom attribute with <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> set to <ph id="ph2">`true`</ph>, you must override the <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> property to make it unique.</source>
          <target state="translated">와 사용자 지정 특성을 정의 하는 경우 <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> 로 설정 <ph id="ph2">`true`</ph>를 재정의 해야 합니다는 <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> 속성을 고유 하 게 합니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>If all instances of your attribute are unique, override <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> to return the object identity of your attribute.</source>
          <target state="translated">특성의 모든 인스턴스가 되는 고유 재정의 <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> 하려면 특성의 개체 id를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>If only some instances of your attribute are unique, return a value from <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> that would return equality in those cases.</source>
          <target state="translated">값을 반환 하는 경우에 특성의 일부 인스턴스가 고유 하므로 <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> 같음 이러한 경우에 반환 하 합니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>For example, some attributes have a constructor parameter that acts as a unique key.</source>
          <target state="translated">예를 들어 일부 특성에는 고유 키로 사용 하는 생성자 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>For these attributes, return the value of the constructor parameter from the <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">이러한 특성에 대 한 생성자에서 매개 변수의 값을 반환 된 <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>The default implementation of <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> returns the type identity regardless of the value of the <ph id="ph2">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">기본 구현 <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> 형식 id의 값에 관계 없이 반환 된 <ph id="ph2">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> 속성.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>In order to return multiple instances of an <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> attribute from the <ph id="ph2">&lt;xref:System.ComponentModel.AttributeCollection&gt;</ph>, your attribute must override the <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">여러 인스턴스를 반환 하려면는 <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> 에서 특성의 <ph id="ph2">&lt;xref:System.ComponentModel.AttributeCollection&gt;</ph>, 사용자의 특성이 재정의 해야 합니다는 <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Returns the name of the class for the specified component.</source>
          <target state="translated">지정된 구성 요소에 대한 클래스의 이름을 반환합니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> for which you want the class name.</source>
          <target state="translated">클래스 이름을 가져올 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)">
          <source>Returns the name of the class for the specified component using the default type descriptor.</source>
          <target state="translated">기본 형식 설명자를 사용하여 지정된 구성 요소에 대한 클래스 이름을 반환합니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the class for the specified component.</source>
          <target state="translated">지정된 구성 요소에 대한 클래스 이름을 포함하는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)">
          <source>Typically, this method returns the full <ph id="ph1">&lt;xref:System.Type&gt;</ph> name for the <ph id="ph2">`component`</ph> parameter type.</source>
          <target state="translated">이 메서드는 전체를 반환 하는 일반적으로 <ph id="ph1">&lt;xref:System.Type&gt;</ph> 이름을 <ph id="ph2">`component`</ph> 매개 변수 형식입니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)">
          <source>For example, the class name for a button is "System.Windows.Forms.Button".</source>
          <target state="translated">예를 들어 단추에 대 한 클래스 이름 "System.Windows.Forms.Button" 됩니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)">
          <source>If <ph id="ph1">`component`</ph> implements <ph id="ph2">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph>, it can return an alternate name.</source>
          <target state="translated">경우 <ph id="ph1">`component`</ph> 구현 <ph id="ph2">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph>, 대체 이름을 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)">
          <source>This method is equivalent to the overloaded <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetClassName%28System.Object%2CSystem.Boolean%29&gt;</ph> method with a second parameter of <ph id="ph2">`false`</ph>.</source>
          <target state="translated">이 메서드는 해당 하는 오버 로드 된 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetClassName%28System.Object%2CSystem.Boolean%29&gt;</ph> 의 두 번째 매개 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">대상 구성 요소의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Type)">
          <source>Returns the name of the class for the specified type.</source>
          <target state="translated">지정된 형식에 대한 클래스의 이름을 반환합니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the class for the specified component type.</source>
          <target state="translated">지정된 구성 요소 형식에 대한 클래스 이름을 포함하는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Type)">
          <source>This method uses the cached custom type descriptor for the specified type to discover the associated class name.</source>
          <target state="translated">이 메서드는 연결된 된 클래스 이름을 검색 하도록 지정된 된 형식에 대 한 캐시 된 사용자 지정 형식 설명자를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Type)">
          <source><ph id="ph1">&lt;paramref name="componentType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="componentType" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> for which you want the class name.</source>
          <target state="translated">클래스 이름을 가져올 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to consider custom type description information; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">사용자 지정 형식 설명 정보를 고려하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)">
          <source>Returns the name of the class for the specified component using a custom type descriptor.</source>
          <target state="translated">사용자 지정 형식 설명자를 사용하여 지정된 구성 요소에 대한 클래스의 이름을 반환합니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the class for the specified component.</source>
          <target state="translated">지정된 구성 요소에 대한 클래스 이름을 포함하는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)">
          <source>Typically, this method returns the full <ph id="ph1">&lt;xref:System.Type&gt;</ph> name for the <ph id="ph2">`component`</ph> parameter type.</source>
          <target state="translated">이 메서드는 전체를 반환 하는 일반적으로 <ph id="ph1">&lt;xref:System.Type&gt;</ph> 이름을 <ph id="ph2">`component`</ph> 매개 변수 형식입니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)">
          <source>For example, the class name for a button is "System.Windows.Forms.Button".</source>
          <target state="translated">예를 들어 단추에 대 한 클래스 이름 "System.Windows.Forms.Button" 됩니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)">
          <source>If the <ph id="ph1">`component`</ph> parameter implements <ph id="ph2">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph>, it can return an alternate name.</source>
          <target state="translated">경우는 <ph id="ph1">`component`</ph> 매개 변수를 구현 <ph id="ph2">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph>, 대체 이름을 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph>가 크로스 프로세스 원격 개체인 경우</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Returns the name of the specified component.</source>
          <target state="translated">지정된 구성 요소의 이름을 반환합니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> for which you want the class name.</source>
          <target state="translated">클래스 이름을 가져올 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)">
          <source>Returns the name of the specified component using the default type descriptor.</source>
          <target state="translated">기본 형식 설명자를 사용하여 지정된 구성 요소의 이름을 반환합니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the specified component, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there is no component name.</source>
          <target state="translated">지정된 구성 요소의 이름을 포함하는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>이거나 구성 요소 이름이 없으면 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)">
          <source>Typically, this method returns the name for the site of the component, if one exists.</source>
          <target state="translated">일반적으로이 메서드는 있는 경우 구성 요소를 사이트에 대 한 이름을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)">
          <source>For example, the class name for a button is "System.Windows.Forms.Button".</source>
          <target state="translated">예를 들어 단추에 대 한 클래스 이름 "System.Windows.Forms.Button" 됩니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)">
          <source>This method is equivalent to the overloaded <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetComponentName%28System.Object%2CSystem.Boolean%29&gt;</ph> method with a second parameter of <ph id="ph2">`false`</ph>.</source>
          <target state="translated">이 메서드는 해당 하는 오버 로드 된 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetComponentName%28System.Object%2CSystem.Boolean%29&gt;</ph> 의 두 번째 매개 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)">
          <source>This method is used at design time to retrieve the name of an instance of a component.</source>
          <target state="translated">이 메서드는 디자인 타임에는 구성 요소의 인스턴스 이름을 검색 합니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph>가 크로스 프로세스 원격 개체인 경우</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> for which you want the class name.</source>
          <target state="translated">클래스 이름을 가져올 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to consider custom type description information; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">사용자 지정 형식 설명 정보를 고려하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)">
          <source>Returns the name of the specified component using a custom type descriptor.</source>
          <target state="translated">사용자 지정 형식 설명자를 사용하여 지정된 구성 요소의 이름을 반환합니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)">
          <source>The name of the class for the specified component, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if there is no component name.</source>
          <target state="translated">지정된 구성 요소에 대한 클래스 이름이거나, 구성 요소 이름이 없으면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)">
          <source>This method is used at design time to retrieve the name of an instance of a component.</source>
          <target state="translated">이 메서드는 디자인 타임에는 구성 요소의 인스턴스 이름을 검색 합니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)">
          <source>Typically, this method returns the name for the site of the component, if one exists.</source>
          <target state="translated">일반적으로이 메서드는 있는 경우 구성 요소를 사이트에 대 한 이름을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)">
          <source>For example, the class name for a button is "System.Windows.Forms.Button".</source>
          <target state="translated">예를 들어 단추에 대 한 클래스 이름 "System.Windows.Forms.Button" 됩니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)">
          <source>If the component implements the <ph id="ph1">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph> interface, it can return an alternate name.</source>
          <target state="translated">구성 요소를 구현 하는 경우는 <ph id="ph1">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph> 인터페이스를 대체 이름을 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph>가 크로스 프로세스 원격 개체인 경우</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Returns a type converter for a component or a type.</source>
          <target state="translated">구성 요소 또는 형식에 대한 형식 변환자를 반환합니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)">
          <source>A component to get the converter for.</source>
          <target state="translated">변환기를 가져올 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)">
          <source>Returns a type converter for the type of the specified component.</source>
          <target state="translated">지정된 구성 요소의 형식에 대한 형식 변환자를 반환합니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> for the specified component.</source>
          <target state="translated">지정된 구성 요소에 대한 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)">
          <source>This method locates an appropriate type converter by looking for a <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>.</source>
          <target state="translated">이 메서드를 검색 하 여 적절 한 형식 변환기를 찾습니다는 <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)">
          <source>If it cannot find a <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>, it traverses the base class hierarchy of the class until it finds a primitive type.</source>
          <target state="translated">찾을 수 없는 경우는 <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>, 기본 형식의 찾을 때까지 클래스의 기본 클래스 계층 구조를 통과 합니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)">
          <source>This method is equivalent to the overloaded <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetConverter%2A&gt;</ph> method with a second parameter of <ph id="ph2">`false`</ph>.</source>
          <target state="translated">이 메서드는 해당 하는 오버 로드 된 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetConverter%2A&gt;</ph> 의 두 번째 매개 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)">
          <source>For an example of using this method, see the <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> class.</source>
          <target state="translated">이 메서드를 사용 하는 예제를 참조 하십시오.는 <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph>가 크로스 프로세스 원격 개체인 경우</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">대상 구성 요소의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)">
          <source>Returns a type converter for the specified type.</source>
          <target state="translated">지정된 형식에 대한 형식 변환자를 반환합니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> for the specified type.</source>
          <target state="translated">지정된 형식에 대한 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">개체의 인스턴스가 없는 경우에이 버전의이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)">
          <source>This method looks for the appropriate type converter by looking for a <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>.</source>
          <target state="translated">검색 하 여 적절 한 형식 변환기에 대 한이 메서드를 찾습니다는 <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)">
          <source>If it cannot find a <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>, it traverses the base class hierarchy of the class until it finds a primitive type.</source>
          <target state="translated">찾을 수 없는 경우는 <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>, 기본 형식의 찾을 때까지 클래스의 기본 클래스 계층 구조를 통과 합니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)">
          <source>A component to get the converter for.</source>
          <target state="translated">변환기를 가져올 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to consider custom type description information; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">사용자 지정 형식 설명 정보를 고려하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)">
          <source>Returns a type converter for the type of the specified component with a custom type descriptor.</source>
          <target state="translated">사용자 지정 형식 설명자를 사용하여 지정된 구성 요소의 형식에 대한 형식 변환자를 반환합니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> for the specified component.</source>
          <target state="translated">지정된 구성 요소에 대한 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)">
          <source>This method looks for the appropriate type converter by trying to find a <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>.</source>
          <target state="translated">이 메서드를 찾으려고 시도 하 여 적절 한 형식 변환기에 대 한 찾습니다는 <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)">
          <source>If it cannot find a <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>, it traverses the base class hierarchy of the class until it finds a primitive type.</source>
          <target state="translated">찾을 수 없는 경우는 <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>, 기본 형식의 찾을 때까지 클래스의 기본 클래스 계층 구조를 통과 합니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph>가 크로스 프로세스 원격 개체인 경우</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Returns the default event for a component or type.</source>
          <target state="translated">구성 요소 또는 형식에 대한 기본 이벤트를 반환합니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)">
          <source>The component to get the event for.</source>
          <target state="translated">이벤트를 가져올 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)">
          <source>Returns the default event for the specified component.</source>
          <target state="translated">지정된 구성 요소에 대한 기본 이벤트를 반환합니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> with the default event, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there are no events.</source>
          <target state="translated">기본 이벤트가 포함된 <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph>이거나, 이벤트가 없으면 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)">
          <source>This method is equivalent to the overloaded <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetDefaultEvent%28System.Object%2CSystem.Boolean%29&gt;</ph> method with a second parameter of <ph id="ph2">`false`</ph>.</source>
          <target state="translated">이 메서드는 해당 하는 오버 로드 된 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetDefaultEvent%28System.Object%2CSystem.Boolean%29&gt;</ph> 의 두 번째 매개 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph>가 크로스 프로세스 원격 개체인 경우</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">대상 구성 요소의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)">
          <source>Returns the default event for the specified type of component.</source>
          <target state="translated">지정된 구성 요소 형식의 기본 이벤트를 반환합니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> with the default event, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there are no events.</source>
          <target state="translated">기본 이벤트가 포함된 <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph>이거나, 이벤트가 없으면 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">개체의 인스턴스가 없는 경우에이 버전의이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)">
          <source><ph id="ph1">&lt;paramref name="componentType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="componentType" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)">
          <source>The component to get the event for.</source>
          <target state="translated">이벤트를 가져올 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to consider custom type description information; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">사용자 지정 형식 설명 정보를 고려하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)">
          <source>Returns the default event for a component with a custom type descriptor.</source>
          <target state="translated">사용자 지정 형식 설명자를 사용하여 구성 요소에 대한 기본 이벤트를 반환합니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> with the default event, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there are no events.</source>
          <target state="translated">기본 이벤트가 포함된 <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph>이거나, 이벤트가 없으면 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph>가 크로스 프로세스 원격 개체인 경우</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Returns the default property for a component.</source>
          <target state="translated">구성 요소에 대한 기본 속성을 반환합니다.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)">
          <source>The component to get the default property for.</source>
          <target state="translated">기본 속성을 가져올 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)">
          <source>Returns the default property for the specified component.</source>
          <target state="translated">지정된 구성 요소의 기본 속성을 반환합니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> with the default property, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there are no properties.</source>
          <target state="translated">기본 속성이 포함된 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph>이거나, 속성이 없으면 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)">
          <source>If the <ph id="ph1">`component`</ph> parameter is <ph id="ph2">`null`</ph>, this method returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">`component`</ph> 매개 변수는 <ph id="ph2">`null`</ph>,이 메서드가 반환 <ph id="ph3">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph>가 크로스 프로세스 원격 개체인 경우</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the class to get the property for.</source>
          <target state="translated">관련된 속성을 가져올 클래스를 나타내는 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)">
          <source>Returns the default property for the specified type of component.</source>
          <target state="translated">지정된 구성 요소 형식의 기본 속성을 반환합니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> with the default property, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there are no properties.</source>
          <target state="translated">기본 속성이 포함된 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph>이거나, 속성이 없으면 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">개체의 인스턴스가 없는 경우에이 버전의이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)">
          <source>If the <ph id="ph1">`componentType`</ph> parameter is <ph id="ph2">`null`</ph>, this method returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">`componentType`</ph> 매개 변수는 <ph id="ph2">`null`</ph>,이 메서드가 반환 <ph id="ph3">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)">
          <source>The component to get the default property for.</source>
          <target state="translated">기본 속성을 가져올 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to consider custom type description information; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">사용자 지정 형식 설명 정보를 고려하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)">
          <source>Returns the default property for the specified component with a custom type descriptor.</source>
          <target state="translated">사용자 지정 설명자가 있는 지정된 구성 요소에 대한 기본 속성을 반환합니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> with the default property, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there are no properties.</source>
          <target state="translated">기본 속성이 포함된 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph>이거나, 속성이 없으면 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)">
          <source>If the <ph id="ph1">`component`</ph> parameter is <ph id="ph2">`null`</ph>, this method returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">`component`</ph> 매개 변수는 <ph id="ph2">`null`</ph>,이 메서드가 반환 <ph id="ph3">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph>가 크로스 프로세스 원격 개체인 경우</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Returns an editor with the specified base type.</source>
          <target state="translated">지정한 기본 형식의 편집기를 반환합니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)">
          <source>The component to get the editor for.</source>
          <target state="translated">편집기를 가져올 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the base type of the editor you want to find.</source>
          <target state="translated">찾을 편집기의 기본 형식을 나타내는 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)">
          <source>Gets an editor with the specified base type for the specified component.</source>
          <target state="translated">지정된 구성 요소에 대해 지정된 기본 형식을 사용하는 편집기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)">
          <source>An instance of the editor that can be cast to the specified editor type, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no editor of the requested type can be found.</source>
          <target state="translated">지정된 편집기 형식으로 캐스팅될 수 있는 편집기의 인스턴스이거나, 요청된 형식의 편집기가 없으면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)">
          <source>The type of <ph id="ph1">`editorBaseType`</ph> is usually <ph id="ph2">&lt;xref:System.Drawing.Design.UITypeEditor&gt;</ph>, but you can also use other types (for example, <ph id="ph3">&lt;xref:System.ComponentModel.ComponentEditor&gt;</ph> and <ph id="ph4">&lt;xref:System.ComponentModel.InstanceCreationEditor&gt;</ph>).</source>
          <target state="translated">유형의 <ph id="ph1">`editorBaseType`</ph> 는 일반적으로 <ph id="ph2">&lt;xref:System.Drawing.Design.UITypeEditor&gt;</ph>, 하지만 다른 형식을 사용할 수 있습니다 (예를 들어 <ph id="ph3">&lt;xref:System.ComponentModel.ComponentEditor&gt;</ph> 및 <ph id="ph4">&lt;xref:System.ComponentModel.InstanceCreationEditor&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)">
          <source>You can define multiple editors for a property.</source>
          <target state="translated">속성에 대 한 여러 명의 편집기를 정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)">
          <source>You use this method to select the editor you want to use.</source>
          <target state="translated">이 메서드를 사용 하 여는 데 사용할 편집기를 선택 합니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> or <ph id="ph2">&lt;paramref name="editorBaseType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="editorBaseType" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph>가 크로스 프로세스 원격 개체인 경우</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">대상 구성 요소의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the base type of the editor you are trying to find.</source>
          <target state="translated">찾으려는 편집기의 기본 형식을 나타내는 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)">
          <source>Returns an editor with the specified base type for the specified type.</source>
          <target state="translated">지정된 형식에 대해 지정된 기본 형식을 사용하는 편집기를 반환합니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)">
          <source>An instance of the editor object that can be cast to the given base type, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no editor of the requested type can be found.</source>
          <target state="translated">지정된 기본 형식으로 캐스팅될 수 있는 편집기 개체의 인스턴스이거나, 요청된 형식의 편집기가 없으면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)">
          <source>The type of <ph id="ph1">`editorBaseType`</ph> is usually <ph id="ph2">&lt;xref:System.Drawing.Design.UITypeEditor&gt;</ph>, but you can also use other types (for example <ph id="ph3">&lt;xref:System.ComponentModel.ComponentEditor&gt;</ph> and <ph id="ph4">&lt;xref:System.ComponentModel.InstanceCreationEditor&gt;</ph>).</source>
          <target state="translated">유형의 <ph id="ph1">`editorBaseType`</ph> 는 일반적으로 <ph id="ph2">&lt;xref:System.Drawing.Design.UITypeEditor&gt;</ph>, 하지만 다른 형식을 사용할 수 있습니다 (예를 들어 <ph id="ph3">&lt;xref:System.ComponentModel.ComponentEditor&gt;</ph> 및 <ph id="ph4">&lt;xref:System.ComponentModel.InstanceCreationEditor&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)">
          <source>You can define multiple editors for a type.</source>
          <target state="translated">형식에 대해 여러 명의 편집기를 정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)">
          <source>You use this method to select the one you want to use.</source>
          <target state="translated">이 메서드를 사용 하 여 사용 하려는 항목을 선택 합니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">개체의 인스턴스가 없는 경우에이 버전의이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> or <ph id="ph2">&lt;paramref name="editorBaseType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="editorBaseType" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)">
          <source>The component to get the editor for.</source>
          <target state="translated">편집기를 가져올 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the base type of the editor you want to find.</source>
          <target state="translated">찾을 편집기의 기본 형식을 나타내는 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)">
          <source>A flag indicating whether custom type description information should be considered.</source>
          <target state="translated">사용자 지정 형식 설명 정보를 고려할지 여부를 나타내는 플래그입니다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)">
          <source>Returns an editor with the specified base type and with a custom type descriptor for the specified component.</source>
          <target state="translated">지정된 구성 요소에 대한 지정된 기본 형식 및 사용자 지정 형식 설명자를 사용하여 편집기를 반환합니다.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)">
          <source>An instance of the editor that can be cast to the specified editor type, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no editor of the requested type can be found.</source>
          <target state="translated">지정된 편집기 형식으로 캐스팅될 수 있는 편집기의 인스턴스이거나, 요청된 형식의 편집기가 없으면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)">
          <source>The type of <ph id="ph1">`editorBaseType`</ph> is usually <ph id="ph2">&lt;xref:System.Drawing.Design.UITypeEditor&gt;</ph>, but you can also use other types (for example <ph id="ph3">&lt;xref:System.ComponentModel.ComponentEditor&gt;</ph> and <ph id="ph4">&lt;xref:System.ComponentModel.InstanceCreationEditor&gt;</ph>).</source>
          <target state="translated">유형의 <ph id="ph1">`editorBaseType`</ph> 는 일반적으로 <ph id="ph2">&lt;xref:System.Drawing.Design.UITypeEditor&gt;</ph>, 하지만 다른 형식을 사용할 수 있습니다 (예를 들어 <ph id="ph3">&lt;xref:System.ComponentModel.ComponentEditor&gt;</ph> 및 <ph id="ph4">&lt;xref:System.ComponentModel.InstanceCreationEditor&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)">
          <source>You can define multiple editors for a property.</source>
          <target state="translated">속성에 대 한 여러 명의 편집기를 정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)">
          <source>You use this method to select the editor you want to use.</source>
          <target state="translated">이 메서드를 사용 하 여는 데 사용할 편집기를 선택 합니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> or <ph id="ph2">&lt;paramref name="editorBaseType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="editorBaseType" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph>가 크로스 프로세스 원격 개체인 경우</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Returns the collection of events for a component or type.</source>
          <target state="translated">구성 요소 또는 형식에 대한 이벤트 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)">
          <source>A component to get the events for.</source>
          <target state="translated">이벤트를 가져올 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)">
          <source>Returns the collection of events for the specified component.</source>
          <target state="translated">지정된 구성 요소에 대한 이벤트 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph> with the events for this component.</source>
          <target state="translated">이 구성 요소에 대한 이벤트가 들어 있는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)">
          <source>Retrieves a collection of events that the given <ph id="ph1">`component`</ph> parameter instance provides.</source>
          <target state="translated">이벤트의 컬렉션을 검색 하는 지정 된 <ph id="ph1">`component`</ph> 매개 변수 인스턴스를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)">
          <source>This collection can differ from the set of events the class provides.</source>
          <target state="translated">이 컬렉션 클래스를 제공 하는 이벤트 집합이 다를 수 있습니다.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)">
          <source>If the <ph id="ph1">`component`</ph> parameter is sited, the site can add or remove additional events.</source>
          <target state="translated">경우는 <ph id="ph1">`component`</ph> 매개 변수 사이 팅, 사이트에 추가 하거나 추가 이벤트를 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)">
          <source>If <ph id="ph1">`component`</ph> is <ph id="ph2">`null`</ph>, then an empty collection is returned.</source>
          <target state="translated">경우 <ph id="ph1">`component`</ph> 은 <ph id="ph2">`null`</ph>, 빈 컬렉션이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">호출에 따라 달라질 수 있으므로 항상 사용 하기 전에 주문, 반환된 된 컬렉션의 순서는 보장 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)">
          <source>For an example of this method, see the <ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptorCollection.Count%2A&gt;</ph> property.</source>
          <target state="translated">이 방법의 예제를 보려면는 <ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptorCollection.Count%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph>가 크로스 프로세스 원격 개체인 경우</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">대상 구성 요소의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type)">
          <source>Returns the collection of events for a specified type of component.</source>
          <target state="translated">지정된 구성 요소 형식에 대한 이벤트 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph> with the events for this component.</source>
          <target state="translated">이 구성 요소에 대한 이벤트가 들어 있는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type)">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">개체의 인스턴스가 없는 경우에이 버전의이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type)">
          <source>If the <ph id="ph1">`componentType`</ph> parameter is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">경우는 <ph id="ph1">`componentType`</ph> 매개 변수는 <ph id="ph2">`null`</ph>, 빈 컬렉션이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type)">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">호출에 따라 달라질 수 있으므로 항상 사용 하기 전에 주문, 반환된 된 컬렉션의 순서는 보장 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>A component to get the events for.</source>
          <target state="translated">이벤트를 가져올 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> that you can use as a filter.</source>
          <target state="translated">필터로 사용할 수 있는 <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> 형식의 배열입니다.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>Returns the collection of events for a specified component using a specified array of attributes as a filter.</source>
          <target state="translated">특성의 지정된 배열을 필터로 사용하여 지정된 구성 요소에 대한 이벤트 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph> with the events that match the specified attributes for this component.</source>
          <target state="translated">이 구성 요소의 지정된 특성과 일치하는 이벤트가 들어 있는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>The events for the <ph id="ph1">`component`</ph> parameter can differ from the events of a class, because the site can add or remove events if the <ph id="ph2">`component`</ph> parameter is sited.</source>
          <target state="translated">에 대 한 이벤트는 <ph id="ph1">`component`</ph> 사이트 추가 또는 경우 이벤트를 제거할 수 있으므로 매개 변수는 클래스의 이벤트에서 달라질 수 있습니다는 <ph id="ph2">`component`</ph> 매개 변수 사이 팅입니다.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>The <ph id="ph1">`attributes`</ph> array can have a mix of <ph id="ph2">&lt;xref:System.Type&gt;</ph> and <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">`attributes`</ph> 배열을 함께 사용할 수 있습니다 <ph id="ph2">&lt;xref:System.Type&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>Filtering is defined by the following rules:</source>
          <target state="translated">필터링은 다음 규칙에 의해 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>A <ph id="ph1">&lt;xref:System.Type&gt;</ph> is treated as a wildcard; it matches any event that has the <ph id="ph2">&lt;xref:System.Type&gt;</ph> in its set of attributes.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Type&gt;</ph> 와일드 카드;로 처리 됩니다 처리 되며 일치는 <ph id="ph2">&lt;xref:System.Type&gt;</ph> 해당 특성 집합에 있습니다.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>If an event does not have an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> of the same class, the event is not included in the returned array.</source>
          <target state="translated">이벤트에 없는 경우는 <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> 동일한 클래스의 이벤트는 반환 된 배열에 포함 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>If the attribute is an instance of the <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> class, the event must be an exact match or it is not included in the returned array.</source>
          <target state="translated">특성의 인스턴스 라면는 <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> 클래스는 이벤트에는 정확히 일치 해야 합니다. 또는 반환된 된 배열에 포함 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>If an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in the event.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> 인스턴스를 지정 하 고 기본 이벤트의 인스턴스가 없는 경우에 반환된 된 배열에 포함 되어는 <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>If <ph id="ph1">`component`</ph> is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">경우 <ph id="ph1">`component`</ph> 은 <ph id="ph2">`null`</ph>, 빈 컬렉션이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">호출에 따라 달라질 수 있으므로 항상 사용 하기 전에 주문, 반환된 된 컬렉션의 순서는 보장 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph>가 크로스 프로세스 원격 개체인 경우</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)">
          <source>A component to get the events for.</source>
          <target state="translated">이벤트를 가져올 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to consider custom type description information; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">사용자 지정 형식 설명 정보를 고려하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)">
          <source>Returns the collection of events for a specified component with a custom type descriptor.</source>
          <target state="translated">사용자 지정 형식 설명자가 있는 지정된 구성 요소에 대한 이벤트 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph> with the events for this component.</source>
          <target state="translated">이 구성 요소에 대한 이벤트가 들어 있는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)">
          <source>This method retrieves a collection of events that the given <ph id="ph1">`component`</ph> parameter instance provides.</source>
          <target state="translated">이 메서드는 이벤트의 컬렉션을 검색 하는 지정 된 <ph id="ph1">`component`</ph> 매개 변수 인스턴스를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)">
          <source>This can differ from the set of events the class provides.</source>
          <target state="translated">이 클래스를 제공 하는 이벤트 집합에서 다를 수 있습니다.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)">
          <source>If the <ph id="ph1">`component`</ph> parameter is sited, the site can add or remove additional events.</source>
          <target state="translated">경우는 <ph id="ph1">`component`</ph> 매개 변수 사이 팅, 사이트에 추가 하거나 추가 이벤트를 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)">
          <source>If <ph id="ph1">`component`</ph> is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">경우 <ph id="ph1">`component`</ph> 은 <ph id="ph2">`null`</ph>, 빈 컬렉션이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">호출에 따라 달라질 수 있으므로 항상 사용 하기 전에 주문, 반환된 된 컬렉션의 순서는 보장 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph>가 크로스 프로세스 원격 개체인 경우</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">대상 구성 요소의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> that you can use as a filter.</source>
          <target state="translated">필터로 사용할 수 있는 <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> 형식의 배열입니다.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>Returns the collection of events for a specified type of component using a specified array of attributes as a filter.</source>
          <target state="translated">특성의 지정된 배열을 필터로 사용하여 구성 요소의 지정된 형식에 대한 이벤트 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph> with the events that match the specified attributes for this component.</source>
          <target state="translated">이 구성 요소의 지정된 특성과 일치하는 이벤트가 들어 있는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">개체의 인스턴스가 없는 경우에이 버전의이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>The <ph id="ph1">`attributes`</ph> parameter array can have a mix of <ph id="ph2">&lt;xref:System.Type&gt;</ph> and <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">`attributes`</ph> 매개 변수 배열에는 혼합 되어 수 <ph id="ph2">&lt;xref:System.Type&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>Filtering is defined by the following rules:</source>
          <target state="translated">필터링은 다음 규칙에 의해 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>A <ph id="ph1">&lt;xref:System.Type&gt;</ph> is treated as a wildcard; it matches any event that has the <ph id="ph2">&lt;xref:System.Type&gt;</ph> in its set of attributes.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Type&gt;</ph> 와일드 카드;로 처리 됩니다 처리 되며 일치는 <ph id="ph2">&lt;xref:System.Type&gt;</ph> 해당 특성 집합에 있습니다.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>If an event does not have an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> of the same class, the event is not included in the returned array.</source>
          <target state="translated">이벤트에 없는 경우는 <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> 동일한 클래스의 이벤트는 반환 된 배열에 포함 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>If the attribute is an instance of the <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> class, the event must be an exact match or it is not included in the returned array.</source>
          <target state="translated">특성의 인스턴스 라면는 <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> 클래스는 이벤트에는 정확히 일치 해야 합니다. 또는 반환된 된 배열에 포함 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>If an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in the event.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> 인스턴스를 지정 하 고 기본 이벤트의 인스턴스가 없는 경우에 반환된 된 배열에 포함 되어는 <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>If the <ph id="ph1">`componentType`</ph> parameter is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">경우는 <ph id="ph1">`componentType`</ph> 매개 변수는 <ph id="ph2">`null`</ph>, 빈 컬렉션이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">호출에 따라 달라질 수 있으므로 항상 사용 하기 전에 주문, 반환된 된 컬렉션의 순서는 보장 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>A component to get the events for.</source>
          <target state="translated">이벤트를 가져올 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> to use as a filter.</source>
          <target state="translated">필터로 사용할 <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> 형식의 배열입니다.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to consider custom type description information; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">사용자 지정 형식 설명 정보를 고려하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>Returns the collection of events for a specified component using a specified array of attributes as a filter and using a custom type descriptor.</source>
          <target state="translated">지정한 특성 배열을 필터로 사용하고 사용자 지정 특성 설명자를 사용하여 지정된 구성 요소에 대한 이벤트 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph> with the events that match the specified attributes for this component.</source>
          <target state="translated">이 구성 요소의 지정된 특성과 일치하는 이벤트가 들어 있는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>The events for the <ph id="ph1">`component`</ph> parameter can differ from the events of a class, because the site can add or remove events if the <ph id="ph2">`component`</ph> parameter is sited.</source>
          <target state="translated">에 대 한 이벤트는 <ph id="ph1">`component`</ph> 사이트 추가 또는 경우 이벤트를 제거할 수 있으므로 매개 변수는 클래스의 이벤트에서 달라질 수 있습니다는 <ph id="ph2">`component`</ph> 매개 변수 사이 팅입니다.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>The <ph id="ph1">`attributes`</ph> parameter array can have a mix of <ph id="ph2">&lt;xref:System.Type&gt;</ph> and <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">`attributes`</ph> 매개 변수 배열에는 혼합 되어 수 <ph id="ph2">&lt;xref:System.Type&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>Filtering is defined by the following rules:</source>
          <target state="translated">필터링은 다음 규칙에 의해 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Type&gt;</ph> is treated as a wildcard; it matches any event that has the <ph id="ph2">&lt;xref:System.Type&gt;</ph> in its set of attributes.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Type&gt;</ph> 와일드 카드;로 처리 됩니다 처리 되며 일치는 <ph id="ph2">&lt;xref:System.Type&gt;</ph> 해당 특성 집합에 있습니다.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>If an event does not have an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> of the same class, the event is not included in the returned array.</source>
          <target state="translated">이벤트에 없는 경우는 <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> 동일한 클래스의 이벤트는 반환 된 배열에 포함 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>If the attribute is an instance of the <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> class, the event must be an exact match or it is not included in the returned array.</source>
          <target state="translated">특성의 인스턴스 라면는 <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> 클래스는 이벤트에는 정확히 일치 해야 합니다. 또는 반환된 된 배열에 포함 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>If an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in the event.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> 인스턴스를 지정 하 고 기본 이벤트의 인스턴스가 없는 경우에 반환된 된 배열에 포함 되어는 <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>If <ph id="ph1">`component`</ph> is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">경우 <ph id="ph1">`component`</ph> 은 <ph id="ph2">`null`</ph>, 빈 컬렉션이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">호출에 따라 달라질 수 있으므로 항상 사용 하기 전에 주문, 반환된 된 컬렉션의 순서는 보장 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph>가 크로스 프로세스 원격 개체인 경우</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> to find the name for.</source>
          <target state="translated">이름을 찾을 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)">
          <source>Returns the fully qualified name of the component.</source>
          <target state="translated">구성 요소의 정규화된 이름을 반환합니다.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)">
          <source>The fully qualified name of the specified component, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the component has no name.</source>
          <target state="translated">지정된 구성 요소의 정규화된 이름이거나, 구성 요소에 이름이 없으면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)">
          <source>In many cases, the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetFullComponentName%2A&gt;</ph> method will return the same value as the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetComponentName%2A&gt;</ph> method.</source>
          <target state="translated">대부분의 경우에서는 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetFullComponentName%2A&gt;</ph> 메서드는 동일한 값으로 반환 됩니다는 <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetComponentName%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)">
          <source>However, if the component resides in a nested container or has other nested semantics, it may return a different fully qualified name.</source>
          <target state="translated">그러나 경우 구성 요소는 중첩 된 컨테이너에 있는 중첩 된 다른 의미 체계, 다른 정규화 된 이름을 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Returns the collection of properties on a component or type.</source>
          <target state="translated">구성 요소 또는 형식에 대한 속성 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)">
          <source>A component to get the properties for.</source>
          <target state="translated">속성을 가져올 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)">
          <source>Returns the collection of properties for a specified component.</source>
          <target state="translated">지정된 구성 요소에 대한 속성 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> with the properties for the specified component.</source>
          <target state="translated">지정된 구성 요소의 속성이 포함된 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)">
          <source>The properties for a component can differ from the properties of a class, because the site can add or remove properties if the component is sited.</source>
          <target state="translated">구성 요소에 대 한 속성 다를 수 있습니다는 클래스의 속성에서 사이트를 추가 하거나 구성 요소 사이 팅 하는 경우 속성을 제거 하기 때문에 있습니다.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)">
          <source>If the <ph id="ph1">`component`</ph> parameter is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">경우는 <ph id="ph1">`component`</ph> 매개 변수는 <ph id="ph2">`null`</ph>, 빈 컬렉션이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">호출에 따라 달라질 수 있으므로 항상 사용 하기 전에 주문, 반환된 된 컬렉션의 순서는 보장 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> method to access the properties of a control.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> 컨트롤의 속성에 액세스 하는 메서드.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.ComponentModel.Design.ComponentDesigner&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.ComponentModel.Design.ComponentDesigner&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph>가 크로스 프로세스 원격 개체인 경우</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the component to get properties for.</source>
          <target state="translated">관련된 속성을 가져올 구성 요소를 나타내는 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)">
          <source>Returns the collection of properties for a specified type of component.</source>
          <target state="translated">구성 요소의 지정된 형식의 대한 속성의 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> with the properties for a specified type of component.</source>
          <target state="translated">지정된 구성 요소 형식에 대한 속성이 포함된 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">개체의 인스턴스가 없는 경우에이 버전의이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)">
          <source>If the <ph id="ph1">`componentType`</ph> parameter is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">경우는 <ph id="ph1">`componentType`</ph> 매개 변수는 <ph id="ph2">`null`</ph>, 빈 컬렉션이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">호출에 따라 달라질 수 있으므로 항상 사용 하기 전에 주문, 반환된 된 컬렉션의 순서는 보장 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>A component to get the properties for.</source>
          <target state="translated">속성을 가져올 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> to use as a filter.</source>
          <target state="translated">필터로 사용할 <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> 형식의 배열입니다.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>Returns the collection of properties for a specified component using a specified array of attributes as a filter.</source>
          <target state="translated">지정한 특성 배열을 필터로 사용하여 지정된 구성 요소에 대한 속성 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> with the properties that match the specified attributes for the specified component.</source>
          <target state="translated">지정된 구성 요소의 지정된 특성과 일치하는 속성이 포함된 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>The properties for the <ph id="ph1">`component`</ph> parameter can differ from the properties of a class, because the site can add or remove properties if the <ph id="ph2">`component`</ph> parameter is sited.</source>
          <target state="translated">에 대 한 속성의 <ph id="ph1">`component`</ph> 사이트를 추가 하거나 경우 속성을 제거 하기 때문에 매개 변수는 클래스의 속성에서 달라질 수 있습니다는 <ph id="ph2">`component`</ph> 매개 변수 사이 팅입니다.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>The <ph id="ph1">`attributes`</ph> parameter array is used to filter the array.</source>
          <target state="translated"><ph id="ph1">`attributes`</ph> 배열을 필터링 하려면 매개 변수 배열이 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>Filtering is defined by the following rules:</source>
          <target state="translated">필터링은 다음 규칙에 의해 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>If a property does not have an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> of the same class, the property is not included in the returned array.</source>
          <target state="translated">속성이 없는 경우는 <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> 동일한 클래스의 속성이 반환 되는 배열에 포함 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>If the attribute is an instance of the <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> class, the property must be an exact match or it is not included in the returned array.</source>
          <target state="translated">특성의 인스턴스 라면는 <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> 클래스 속성이 정확 하 게 일치 해야 합니다. 또는 반환된 된 배열에 포함 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>If an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in the property.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> 인스턴스를 지정 하 고은 기본 속성의 인스턴스가 없는 경우에 반환된 된 배열에 포함 되어는 <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> 속성에 있습니다.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>If <ph id="ph1">`attributes`</ph> has a default attribute, the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> method matches the case when the property does not have the attribute applied.</source>
          <target state="translated">경우 <ph id="ph1">`attributes`</ph> 기본 특성이 <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> 속성에 적용 된 특성 없을 때의 경우 일치 하는 메서드가 있습니다.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>If <ph id="ph1">`component`</ph> is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">경우 <ph id="ph1">`component`</ph> 은 <ph id="ph2">`null`</ph>, 빈 컬렉션이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">호출에 따라 달라질 수 있으므로 항상 사용 하기 전에 주문, 반환된 된 컬렉션의 순서는 보장 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는 구현 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Windows.Forms.Design.PropertyTab&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Forms.Design.PropertyTab&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph>가 크로스 프로세스 원격 개체인 경우</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)">
          <source>A component to get the properties for.</source>
          <target state="translated">속성을 가져올 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to not consider custom type description information; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">사용자 지정 형식 설명 정보를 고려하지 않으려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)">
          <source>Returns the collection of properties for a specified component using the default type descriptor.</source>
          <target state="translated">기본 형식 설명자를 사용하여 지정된 구성 요소에 대한 속성 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> with the properties for a specified component.</source>
          <target state="translated">지정된 구성 요소의 속성이 포함된 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)">
          <source>The properties for the <ph id="ph1">`component`</ph> parameter can differ from the properties of a class, because the site can add or remove properties if the <ph id="ph2">`component`</ph> parameter is sited.</source>
          <target state="translated">에 대 한 속성의 <ph id="ph1">`component`</ph> 사이트를 추가 하거나 경우 속성을 제거 하기 때문에 매개 변수는 클래스의 속성에서 달라질 수 있습니다는 <ph id="ph2">`component`</ph> 매개 변수 사이 팅입니다.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)">
          <source>If <ph id="ph1">`component`</ph> is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">경우 <ph id="ph1">`component`</ph> 은 <ph id="ph2">`null`</ph>, 빈 컬렉션이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">호출에 따라 달라질 수 있으므로 항상 사용 하기 전에 주문, 반환된 된 컬렉션의 순서는 보장 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph>가 크로스 프로세스 원격 개체인 경우</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">대상 구성 요소의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> to use as a filter.</source>
          <target state="translated">필터로 사용할 <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> 형식의 배열입니다.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>Returns the collection of properties for a specified type of component using a specified array of attributes as a filter.</source>
          <target state="translated">지정한 특성 배열을 필터로 사용하여 지정된 구성 요소 형식에 대한 속성 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> with the properties that match the specified attributes for this type of component.</source>
          <target state="translated">이 구성 요소 형식에 대해 지정된 특성과 일치하는 속성이 포함된 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">개체의 인스턴스가 없는 경우에이 버전의이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>The <ph id="ph1">`attributes`</ph> parameter array is used to filter the array.</source>
          <target state="translated"><ph id="ph1">`attributes`</ph> 배열을 필터링 하려면 매개 변수 배열이 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>Filtering is defined by the following rules:</source>
          <target state="translated">필터링은 다음 규칙에 의해 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>If a property does not have an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> of the same class, the property is not included in the returned array.</source>
          <target state="translated">속성이 없는 경우는 <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> 동일한 클래스의 속성이 반환 되는 배열에 포함 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>If the attribute is an instance of the <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> class, the property must be an exact match or it is not included in the returned array.</source>
          <target state="translated">특성의 인스턴스 라면는 <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> 클래스 속성이 정확 하 게 일치 해야 합니다. 또는 반환된 된 배열에 포함 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>If an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in the property.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> 인스턴스를 지정 하 고은 기본 속성의 인스턴스가 없는 경우에 반환된 된 배열에 포함 되어는 <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> 속성에 있습니다.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>If <ph id="ph1">`attributes`</ph> has a default attribute, the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> method matches the case when the property does not have the attribute applied.</source>
          <target state="translated">경우 <ph id="ph1">`attributes`</ph> 기본 특성이 <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> 속성에 적용 된 특성 없을 때의 경우 일치 하는 메서드가 있습니다.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>If the <ph id="ph1">`componentType`</ph> parameter is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">경우는 <ph id="ph1">`componentType`</ph> 매개 변수는 <ph id="ph2">`null`</ph>, 빈 컬렉션이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">호출에 따라 달라질 수 있으므로 항상 사용 하기 전에 주문, 반환된 된 컬렉션의 순서는 보장 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는 구현 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Windows.Forms.Design.PropertyTab&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Forms.Design.PropertyTab&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>A component to get the properties for.</source>
          <target state="translated">속성을 가져올 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> to use as a filter.</source>
          <target state="translated">필터로 사용할 <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> 형식의 배열입니다.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to consider custom type description information; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">사용자 지정 형식 설명 정보를 고려하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>Returns the collection of properties for a specified component using a specified array of attributes as a filter and using a custom type descriptor.</source>
          <target state="translated">지정한 특성 배열을 필터로 사용하고 사용자 지정 특성 설명자를 사용하여 지정된 구성 요소에 대한 속성 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> with the events that match the specified attributes for the specified component.</source>
          <target state="translated">지정된 구성 요소의 지정된 특성과 일치하는 이벤트가 포함된 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>The properties for a <ph id="ph1">`component`</ph> can differ from the properties of a class, because the site can add or remove properties if the <ph id="ph2">`component`</ph> is sited.</source>
          <target state="translated">에 대 한 속성을 <ph id="ph1">`component`</ph> 사이트를 추가 하거나 경우 속성을 제거 하기 때문에 클래스의 속성에서 다를 수 있습니다는 <ph id="ph2">`component`</ph> 배치 됩니다.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>The <ph id="ph1">`attributes`</ph> parameter array is used to filter the array.</source>
          <target state="translated"><ph id="ph1">`attributes`</ph> 배열을 필터링 하려면 매개 변수 배열이 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>Filtering is defined by the following rules:</source>
          <target state="translated">필터링은 다음 규칙에 의해 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>If a property does not have an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> of the same class, the property is not included in the returned array.</source>
          <target state="translated">속성이 없는 경우는 <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> 동일한 클래스의 속성이 반환 되는 배열에 포함 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>If the attribute is an instance of the <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> class, the property must be an exact match or it is not included in the returned array.</source>
          <target state="translated">특성의 인스턴스 라면는 <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> 클래스 속성이 정확 하 게 일치 해야 합니다. 또는 반환된 된 배열에 포함 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>If an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in the property.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> 인스턴스를 지정 하 고은 기본 속성의 인스턴스가 없는 경우에 반환된 된 배열에 포함 되어는 <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> 속성에 있습니다.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>If <ph id="ph1">`attributes`</ph> has a default attribute, the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> method matches the case when the property does not have the attribute applied.</source>
          <target state="translated">경우 <ph id="ph1">`attributes`</ph> 기본 특성이 <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> 속성에 적용 된 특성 없을 때의 경우 일치 하는 메서드가 있습니다.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>If the <ph id="ph1">`component`</ph> parameter is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">경우는 <ph id="ph1">`component`</ph> 매개 변수는 <ph id="ph2">`null`</ph>, 빈 컬렉션이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">호출에 따라 달라질 수 있으므로 항상 사용 하기 전에 주문, 반환된 된 컬렉션의 순서는 보장 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph>가 크로스 프로세스 원격 개체인 경우</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Returns the type description provider for the component or type.</source>
          <target state="translated">형식 또는 구성 요소에 대해 제공된 형식 설명 공급자를 반환합니다.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)">
          <source>An instance of the target component.</source>
          <target state="translated">대상 구성 요소의 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)">
          <source>Returns the type description provider for the specified component.</source>
          <target state="translated">지정된 구성 요소에 대해 형식 설명 공급자를 반환합니다.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> associated with the specified component.</source>
          <target state="translated">지정한 구성 요소와 연결된 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProvider%2A&gt;</ph> method will always return a type description provider.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProvider%2A&gt;</ph> 메서드는 항상 형식 설명 공급자를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)">
          <source>Even the default <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> implementation is built on a <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph>.</source>
          <target state="translated">기본도 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> 구현은 기반으로 한 <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)">
          <source><ph id="ph1">&lt;paramref name="instance" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="instance" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">대상 구성 요소의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)">
          <source>Returns the type description provider for the specified type.</source>
          <target state="translated">지정된 형식에 대한 형식 설명 공급자를 반환합니다.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> associated with the specified type.</source>
          <target state="translated">지정한 형식과 연결된 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProvider%2A&gt;</ph> method will always return a type description provider.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProvider%2A&gt;</ph> 메서드는 항상 형식 설명 공급자를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)">
          <source>Even the default <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> implementation is built on a <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph>.</source>
          <target state="translated">기본도 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> 구현은 기반으로 한 <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that can be used to perform reflection.</source>
          <target state="translated">리플렉션을 수행하는 데 사용할 수 있는 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)">
          <source>An instance of the target component.</source>
          <target state="translated">대상 구성 요소의 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that can be used to perform reflection, given an object.</source>
          <target state="translated">개체가 제공된 경우 리플렉션을 수행하는 데 사용할 수 있는 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> for the specified object.</source>
          <target state="translated">지정된 개체에 대한 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;</ph> method is a low-level version of the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;</ph> 메서드는 하위 수준 버전의는 <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;</ph> is typically used to perform standard reflection against an object when no custom type descriptor can be located for it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;</ph> 없는 사용자 지정 형식 설명자에 있을 수 있는 경우 개체에 대해 표준 리플렉션을 수행 하려면 일반적으로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)">
          <source><ph id="ph1">&lt;paramref name="instance" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="instance" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">대상 구성 요소의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that can be used to perform reflection, given a class type.</source>
          <target state="translated">클래스 형식이 제공된 경우 리플렉션을 수행하는 데 사용할 수 있는 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the specified class.</source>
          <target state="translated">지정된 클래스의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;</ph> method is a low-level version of the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;</ph> 메서드는 하위 수준 버전의는 <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;</ph> is typically used to perform standard reflection against a class when no custom type descriptor can be located for it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;</ph> 없는 사용자 지정 형식 설명자에 있을 수 있는 경우 클래스에 대해 표준 리플렉션을 수행 하려면 일반적으로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.TypeDescriptor.InterfaceType">
          <source>Gets a type that represents a type description provider for all interface types.</source>
          <target state="translated">모든 인터페이스 형식의 형식 설명 공급자를 나타내는 형식을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.InterfaceType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents a custom type description provider for all interface types.</source>
          <target state="translated">모든 인터페이스 형식에 대한 사용자 지정 형식 설명 공급자를 나타내는 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.InterfaceType">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.InterfaceType%2A&gt;</ph> property gets a <ph id="ph2">&lt;xref:System.Type&gt;</ph> object that you can pass to the <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</ph> methods to define a type description provider for interface types.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.InterfaceType%2A&gt;</ph> 속성 get는 <ph id="ph2">&lt;xref:System.Type&gt;</ph> 에 전달할 수 있는 개체는 <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</ph> 인터페이스 형식에 대 한 형식 설명 공급자를 정의 하는 메서드.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Clears the properties and events from the cache.</source>
          <target state="translated">캐시에서 속성 및 이벤트를 지웁니다.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
          <source>A component for which the properties or events have changed.</source>
          <target state="translated">속성 또는 이벤트가 변경된 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
          <source>Clears the properties and events for the specified component from the cache.</source>
          <target state="translated">캐시에서 지정된 구성 요소에 대한 속성 및 이벤트를 지웁니다.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
          <source>Properties and events are cached by <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> for speed.</source>
          <target state="translated">캐시 하는 속성 및 이벤트 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> 속도 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
          <source>Typically, they are constant for the lifetime of an object.</source>
          <target state="translated">일반적으로 서로 상수 개체의 수명에 대 한입니다.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
          <source>However, extender providers and designers can change the set of properties on an object.</source>
          <target state="translated">그러나 extender 공급자 및 디자이너 개체에 대 한 속성 집합을 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
          <source>If they do, they should call this method to clear the property and event descriptors of the object.</source>
          <target state="translated">그럴 경우 개체의 속성 및 이벤트 설명자의 선택을 취소 하려면이 메서드를 호출 해야 있습니다.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
          <source>This method is used only at design time.</source>
          <target state="translated">이 메서드는 디자인 타임에만 사용됩니다.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
          <source>It is not used during run time.</source>
          <target state="translated">런타임에 사용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
          <source>This method also raises a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> event when the properties or events of a component change.</source>
          <target state="translated">이 메서드는 또한 발생 한 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> 속성 또는 이벤트는 구성 요소의 변경 될 때 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
          <source>This event is only raised if there was a prior call to the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetEvents%2A&gt;</ph> method that cached the information.</source>
          <target state="translated">이 이벤트는 이전 호출 하는 경우에 발생는 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetEvents%2A&gt;</ph> 메서드 정보를 캐시 합니다.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
          <source>For an example of using this method, see the <ph id="ph1">&lt;xref:System.ComponentModel.RefreshEventHandler&gt;</ph> class.</source>
          <target state="translated">이 메서드를 사용 하는 예제를 참조 하십시오.는 <ph id="ph1">&lt;xref:System.ComponentModel.RefreshEventHandler&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> that represents the assembly to refresh.</source>
          <target state="translated">새로 고칠 어셈블리를 나타내는 <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
          <source>Each <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> in this assembly will be refreshed.</source>
          <target state="translated">이 어셈블리의 각 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>이 새로 고쳐집니다.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
          <source>Clears the properties and events for the specified assembly from the cache.</source>
          <target state="translated">캐시에서 지정된 어셈블리에 대한 속성 및 이벤트를 지웁니다.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
          <source>Properties and events are cached by <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> for speed.</source>
          <target state="translated">캐시 하는 속성 및 이벤트 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> 속도 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
          <source>Typically, they are constant for the lifetime of an object.</source>
          <target state="translated">일반적으로 서로 상수 개체의 수명에 대 한입니다.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
          <source>However, extender providers and designers can change the set of properties on an object.</source>
          <target state="translated">그러나 extender 공급자 및 디자이너 개체에 대 한 속성 집합을 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
          <source>If they do, they can call this method to clear the property and event descriptors of the object.</source>
          <target state="translated">그럴 경우 해당 개체의 속성 및 이벤트 설명자의 선택을 취소 하려면이 메서드를 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
          <source>This method is used only at design time.</source>
          <target state="translated">이 메서드는 디자인 타임에만 사용됩니다.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
          <source>It is not used during run time.</source>
          <target state="translated">런타임에 사용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
          <source>Before you make a call to the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt;</ph> method to clear the cache, you need to call the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> method for the specific assembly to cache the information first.</source>
          <target state="translated">에 대 한 호출을 수행 하기 전에 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt;</ph> 캐시를 지워야 하는 메서드를 호출 해야는 <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> 메서드는 특정 어셈블리 정보를 먼저 캐시에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
          <source>This method also raises a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> event to notify all classes that want to be notified when the property set of a component changes.</source>
          <target state="translated">이 메서드는 또한 발생 한 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> 속성 설정 구성 요소 변경의 알림을 받으려는 하는 모든 클래스에 알리는 이벤트를 합니다.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph> that represents the module to refresh.</source>
          <target state="translated">새로 고칠 모듈을 나타내는 <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
          <source>Each <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> in this module will be refreshed.</source>
          <target state="translated">이 모듈의 각 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>이 새로 고쳐집니다.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
          <source>Clears the properties and events for the specified module from the cache.</source>
          <target state="translated">캐시에서 지정된 모듈에 대한 속성 및 이벤트를 지웁니다.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
          <source>Properties and events are cached by <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> for speed.</source>
          <target state="translated">캐시 하는 속성 및 이벤트 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> 속도 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
          <source>Typically, they are constant for the lifetime of an object.</source>
          <target state="translated">일반적으로 서로 상수 개체의 수명에 대 한입니다.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
          <source>However, extender providers and designers can change the set of properties on an object.</source>
          <target state="translated">그러나 extender 공급자 및 디자이너 개체에 대 한 속성 집합을 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
          <source>If they do, they can call this method to clear the property and event descriptors of the object.</source>
          <target state="translated">그럴 경우 해당 개체의 속성 및 이벤트 설명자의 선택을 취소 하려면이 메서드를 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
          <source>This method is used only at design time.</source>
          <target state="translated">이 메서드는 디자인 타임에만 사용됩니다.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
          <source>It is not used during run time.</source>
          <target state="translated">런타임에 사용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
          <source>Before you make a call to the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt;</ph> method to clear the cache, you need to call the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> method for the specific module to cache the information first.</source>
          <target state="translated">에 대 한 호출을 수행 하기 전에 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt;</ph> 캐시를 지워야 하는 메서드를 호출 해야는 <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> 메서드 정보를 먼저 캐시 특정 모듈에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
          <source>This method also raises a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> event to notify all classes that want to be notified when the property set of a component changes.</source>
          <target state="translated">이 메서드는 또한 발생 한 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> 속성 설정 구성 요소 변경의 알림을 받으려는 하는 모든 클래스에 알리는 이벤트를 합니다.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">대상 구성 요소의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
          <source>Clears the properties and events for the specified type of component from the cache.</source>
          <target state="translated">캐시에서 지정된 구성 요소 형식에 대한 속성 및 이벤트를 지웁니다.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">개체의 인스턴스가 없는 경우에이 버전의이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
          <source>Properties and events are cached by <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> for speed.</source>
          <target state="translated">캐시 하는 속성 및 이벤트 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> 속도 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
          <source>Typically, they are constant for the lifetime of an object.</source>
          <target state="translated">일반적으로 서로 상수 개체의 수명에 대 한입니다.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
          <source>However, extender providers and designers can change the set of properties on an object.</source>
          <target state="translated">그러나 extender 공급자 및 디자이너 개체에 대 한 속성 집합을 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
          <source>If they do, they can call this method to clear the property and event descriptors of the object.</source>
          <target state="translated">그럴 경우 해당 개체의 속성 및 이벤트 설명자의 선택을 취소 하려면이 메서드를 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
          <source>This method is used only at design time.</source>
          <target state="translated">이 메서드는 디자인 타임에만 사용됩니다.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
          <source>It is not used during run time.</source>
          <target state="translated">런타임에 사용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
          <source>This method also raises a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> event when the properties or events of a component change.</source>
          <target state="translated">이 메서드는 또한 발생 한 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> 속성 또는 이벤트는 구성 요소의 변경 될 때 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
          <source>This event is only raised if there was a prior call to the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetEvents%2A&gt;</ph> method that cached the information.</source>
          <target state="translated">이 이벤트는 이전 호출 하는 경우에 발생는 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetEvents%2A&gt;</ph> 메서드 정보를 캐시 합니다.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.TypeDescriptor.Refreshed">
          <source>Occurs when the cache for a component is cleared.</source>
          <target state="translated">구성 요소에 대한 캐시를 지울 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.TypeDescriptor.Refreshed">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.TypeDescriptor.Refreshed">
          <source>For an example of using this event, see the <ph id="ph1">&lt;xref:System.ComponentModel.RefreshEventHandler&gt;</ph> class.</source>
          <target state="translated">이 이벤트를 사용 하는 예제를 참조 하십시오.는 <ph id="ph1">&lt;xref:System.ComponentModel.RefreshEventHandler&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)">
          <source>The primary <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">기본 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)">
          <source>The secondary <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">보조 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)">
          <source>Removes an association between two objects.</source>
          <target state="translated">두 개체 간의 연결을 제거합니다.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveAssociation%2A&gt;</ph> method removes an association between two objects formed by the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveAssociation%2A&gt;</ph> 만든 두 개체 간의 연결을 제거 하는 메서드는 <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.WeakReference&gt;</ph> is used to maintain the association between the primary and secondary object; therefore, this method does not influence when either object is finalized or reclaimed by garbage collection.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.WeakReference&gt;</ph> 사용 하 여 기본 및 보조 개체 간의 연결을 유지; 이므로이 메서드에 영향을 주지 않습니다 중 개체가 종료 되거나 가비지 수집에서 회수 합니다.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">매개 변수 중 하나 또는 둘 다가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)">
          <source>for full access to system resources.</source>
          <target state="translated">시스템 리소스에 대 한 전체 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)">
          <source>Associated state:</source>
          <target state="translated">연결 된 상태:</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)">
          <source>The primary <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> in an association.</source>
          <target state="translated">연결의 기본 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)">
          <source>Removes all associations for a primary object.</source>
          <target state="translated">기본 개체에 대한 모든 연결을 제거합니다.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveAssociations%2A&gt;</ph> method removes all associations between a primary object and all of its secondary objects, created by calls to the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveAssociations%2A&gt;</ph> 메서드를 호출 하 여 만든 보조 개체를 모두와 기본 개체 간의 모든 연결이 제거는 <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.WeakReference&gt;</ph> is used to maintain the association between the primary and secondary object; therefore, this method does not influence when either the primary of secondary objects are finalized or reclaimed by garbage collection.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.WeakReference&gt;</ph> 사용 하 여 기본 및 보조 개체 간의 연결을 유지; 따라서이 메서드는 영향을 주지 때 보조 개체의 주 종료 또는 가비지 수집에서 회수 됩니다.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)">
          <source><ph id="ph1">&lt;paramref name="primary" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="primary" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)">
          <source>for full access to system resources.</source>
          <target state="translated">시스템 리소스에 대 한 전체 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)">
          <source>Associated state:</source>
          <target state="translated">연결 된 상태:</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Removes a previously added type description provider.</source>
          <target state="translated">이전에 추가한 형식 설명 공급자를 제거합니다.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> to remove.</source>
          <target state="translated">제거할 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>An instance of the target component.</source>
          <target state="translated">대상 구성 요소의 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Removes a previously added type description provider that is associated with the specified object.</source>
          <target state="translated">지정한 개체와 연결되어 있는 이전에 추가한 형식 설명 공급자를 제거합니다.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>This method removes a type description provider previously added with the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> method.</source>
          <target state="translated">와 이전에 추가한 형식 설명 공급자를 제거 하는이 메서드는 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Removing a provider causes a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> event to be raised for the associated object.</source>
          <target state="translated">공급자를 제거 하면는 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> 이벤트를 연결된 된 개체에 대해 발생 합니다.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> method if you need to call from partially trusted code.</source>
          <target state="translated">사용 된 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> 메서드 부분적으로 신뢰할 수 있는 코드에서 호출 하는 경우.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">매개 변수 중 하나 또는 둘 다가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>for full access to system resources.</source>
          <target state="translated">시스템 리소스에 대 한 전체 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Associated state:</source>
          <target state="translated">연결 된 상태:</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> to remove.</source>
          <target state="translated">제거할 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">대상 구성 요소의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Removes a previously added type description provider that is associated with the specified type.</source>
          <target state="translated">지정한 형식과 연결되어 있는 이전에 추가한 형식 설명 공급자를 제거합니다.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>This method removes a type description provider previously added with the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> method.</source>
          <target state="translated">와 이전에 추가한 형식 설명 공급자를 제거 하는이 메서드는 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Removing a provider causes a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> event to be raised for the associated type.</source>
          <target state="translated">공급자를 제거 하면는 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> 이벤트를 연결된 된 형식에 대해 발생 합니다.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> method if you need to call from partially trusted code.</source>
          <target state="translated">사용 된 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> 메서드 부분적으로 신뢰할 수 있는 코드에서 호출 하는 경우.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">매개 변수 중 하나 또는 둘 다가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>for full access to system resources.</source>
          <target state="translated">시스템 리소스에 대 한 전체 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Associated state:</source>
          <target state="translated">연결 된 상태:</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Removes a previously added type description provider.</source>
          <target state="translated">이전에 추가한 형식 설명 공급자를 제거합니다.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> to remove.</source>
          <target state="translated">제거할 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>An instance of the target component.</source>
          <target state="translated">대상 구성 요소의 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Removes a previously added type description provider that is associated with the specified object.</source>
          <target state="translated">지정한 개체와 연결되어 있는 이전에 추가한 형식 설명 공급자를 제거합니다.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>This method removes a type description provider previously added with the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> method.</source>
          <target state="translated">와 이전에 추가한 형식 설명 공급자를 제거 하는이 메서드는 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Removing a provider causes a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> event to be raised for the associated object.</source>
          <target state="translated">공급자를 제거 하면는 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> 이벤트를 연결된 된 개체에 대해 발생 합니다.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>This method can be called from partially trusted code.</source>
          <target state="translated">부분적으로 신뢰할 수 있는 코드에서 이 메서드를 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess&gt;</ph> is defined, the caller can register a provider for the specified instance if its type is also partially trusted.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess&gt;</ph> 는 정의 호출자에 게 등록할 수에 지정된 된 인스턴스에 대 한 공급자 해당 형식을 부분 신뢰 이기도 한 경우.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> method if you do not need to call from partially trusted code.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> 메서드 부분적으로 신뢰할 수 있는 코드에서 호출할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">매개 변수 중 하나 또는 둘 다가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>For registry access.</source>
          <target state="translated">레지스트리 액세스 권한입니다.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">보안 동작: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">보안 동작: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Associated type: The <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> that is required by the assembly that defines the <ph id="ph2">&lt;paramref name="instance" /&gt;</ph> parameter's type.</source>
          <target state="translated">연결 된 형식:는 <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> 정의 하는 어셈블리에 필요 하는 <ph id="ph2">&lt;paramref name="instance" /&gt;</ph> 매개 변수의 형식입니다.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> to remove.</source>
          <target state="translated">제거할 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">대상 구성 요소의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Removes a previously added type description provider that is associated with the specified type.</source>
          <target state="translated">지정한 형식과 연결되어 있는 이전에 추가한 형식 설명 공급자를 제거합니다.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>This method removes a type description provider previously added with the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> method.</source>
          <target state="translated">와 이전에 추가한 형식 설명 공급자를 제거 하는이 메서드는 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Removing a provider causes a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> event to be raised for the associated type.</source>
          <target state="translated">공급자를 제거 하면는 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> 이벤트를 연결된 된 형식에 대해 발생 합니다.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>This method can be called from partially trusted code.</source>
          <target state="translated">부분적으로 신뢰할 수 있는 코드에서 이 메서드를 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>If <ph id="ph1">&lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess&gt;</ph> is defined, the caller can unregister a provider for the specified type if it is also partially trusted.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess&gt;</ph> 는 정의 호출자에 게 등록을 취소할 수를 지정 된 형식에 대 한 공급자 부분적으로 신뢰할 수 있는 이기도 한 경우.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> method if you do not need to call from partially trusted code.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> 메서드 부분적으로 신뢰할 수 있는 코드에서 호출할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">매개 변수 중 하나 또는 둘 다가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>For registry access.</source>
          <target state="translated">레지스트리 액세스 권한입니다.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">보안 동작: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">보안 동작: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Associated type: The <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> that is required by the assembly that defines <ph id="ph2">&lt;paramref name="type" /&gt;</ph>.</source>
          <target state="translated">연결 된 형식:는 <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> 정의 하는 어셈블리에서 필요한 <ph id="ph2">&lt;paramref name="type" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> that contains the descriptors to sort.</source>
          <target state="translated">정렬할 설명자를 포함하는 <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)">
          <source>Sorts descriptors using the name of the descriptor.</source>
          <target state="translated">설명자의 이름을 사용하여 설명자를 정렬합니다.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)">
          <source><ph id="ph1">&lt;paramref name="infos" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="infos" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>