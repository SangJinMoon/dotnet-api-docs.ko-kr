<Type Name="TypeDescriptor" FullName="System.ComponentModel.TypeDescriptor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="402b90676782f23b4720487e8f9cc3febcd32c4e" />
    <Meta Name="ms.sourcegitcommit" Value="4b4804968da1dfdf71c501075a5b66957b54f2e8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/27/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TypeDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TypeDescriptor extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TypeDescriptor" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TypeDescriptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeDescriptor sealed" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="fe0c3-101">구성 요소의 특성, 속성 및 이벤트와 같이, 구성 요소의 특성에 대한 정보를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fe0c3-101">Provides information about the characteristics for a component, such as its attributes, properties, and events.</span>
      </span>
      <span data-ttu-id="fe0c3-102">이 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fe0c3-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-103">.NET Framework는 메타 데이터 형식에 액세스 하는 두 가지 방법: 리플렉션 API에 제공 된는 <xref:System.Reflection?displayProperty=nameWithType> 네임 스페이스 및 <xref:System.ComponentModel.TypeDescriptor> 클래스.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-103">The .NET Framework provides two ways to access metadata on a type: the reflection API provided in the <xref:System.Reflection?displayProperty=nameWithType> namespace, and the <xref:System.ComponentModel.TypeDescriptor> class.</span></span> <span data-ttu-id="fe0c3-104">리플렉션 이므로 모든 형식에 사용할 수는 일반 메커니즘의 기초로 <xref:System.Object.GetType%2A> 메서드는 루트의 <xref:System.Object> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-104">Reflection is a general mechanism available to all types because its foundation is established in the <xref:System.Object.GetType%2A> method of the root <xref:System.Object> class.</span></span> <span data-ttu-id="fe0c3-105">형식에 대해 반환 하는 정보는 달리, 확장 가능 대상 유형의 컴파일 후 수정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-105">The information it returns for a type is not extensible, in that it cannot be modified after compilation of the target type.</span></span> <span data-ttu-id="fe0c3-106">자세한 내용은 참조 항목에서는 [리플렉션](~/docs/framework/reflection-and-codedom/reflection.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-106">For more information, see the topics in [Reflection](~/docs/framework/reflection-and-codedom/reflection.md).</span></span>  
  
 <span data-ttu-id="fe0c3-107">반면, <xref:System.ComponentModel.TypeDescriptor> 는 구성 요소에 대 한 확장 가능한 검사 메커니즘: 구현 하는 클래스는 <xref:System.ComponentModel.IComponent> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-107">In contrast, <xref:System.ComponentModel.TypeDescriptor> is an extensible inspection mechanism for components: those classes that implement the <xref:System.ComponentModel.IComponent> interface.</span></span> <span data-ttu-id="fe0c3-108">반사 달리 메서드에 대 한 검사 하지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-108">Unlike reflection, it does not inspect for methods.</span></span> <span data-ttu-id="fe0c3-109"><xref:System.ComponentModel.TypeDescriptor> 대상 구성 요소를 통해 사용할 수 있는 여러 서비스에서 동적으로 확장 될 <xref:System.ComponentModel.Component.Site%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-109"><xref:System.ComponentModel.TypeDescriptor> can be dynamically extended by several services available through the target component's <xref:System.ComponentModel.Component.Site%2A>.</span></span> <span data-ttu-id="fe0c3-110">다음 표에서 이러한 서비스를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-110">The following table shows these services.</span></span>  
  
|<span data-ttu-id="fe0c3-111">서비스 이름</span><span class="sxs-lookup"><span data-stu-id="fe0c3-111">Service name</span></span>|<span data-ttu-id="fe0c3-112">설명</span><span class="sxs-lookup"><span data-stu-id="fe0c3-112">Description</span></span>|  
|------------------|-----------------|  
|<xref:System.ComponentModel.IExtenderProvider>|<span data-ttu-id="fe0c3-113">와 같은 다른 클래스를 사용 하면 <xref:System.Windows.Forms.ToolTip>, 구성 요소에 추가 속성을 제공 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-113">Enables another class, such as <xref:System.Windows.Forms.ToolTip>, to provide extra properties to a component.</span></span>|  
|<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>|<span data-ttu-id="fe0c3-114">다른 개체를에 구성 요소에 의해 노출 되는 표준 메타 데이터를 수정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-114">Enables another object to modify the standard metadata that is exposed by a component.</span></span>|  
|<xref:System.ComponentModel.ICustomTypeDescriptor>|<span data-ttu-id="fe0c3-115">사용 하면 완전히 하 고 동적으로의 표준 검사 메커니즘을 바꾸는 자체 메타 데이터를 지정 하려면 클래스 <xref:System.ComponentModel.TypeDescriptor>합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-115">Enables a class to completely and dynamically specify its own metadata, replacing the standard inspection mechanism of <xref:System.ComponentModel.TypeDescriptor>.</span></span>|  
  
 <span data-ttu-id="fe0c3-116">제공 하는 확장성 <xref:System.ComponentModel.TypeDescriptor> 실제 실행 시간을 표현 하는 다르게 구성 요소의 디자인 타임 표시를 사용 하면 <xref:System.ComponentModel.TypeDescriptor> 디자인 타임 인프라를 구축 하는 데 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-116">The extensibility provided by <xref:System.ComponentModel.TypeDescriptor> allows the design-time representation of a component to differ from its actual run-time representation, which makes <xref:System.ComponentModel.TypeDescriptor> useful for building design-time infrastructure.</span></span>  
  
 <span data-ttu-id="fe0c3-117">모든 메서드에 <xref:System.ComponentModel.TypeDescriptor> 는 `static`합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-117">All the methods in <xref:System.ComponentModel.TypeDescriptor> are `static`.</span></span> <span data-ttu-id="fe0c3-118">이 클래스의 인스턴스를 만들 수 및이 클래스는 상속 될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-118">You cannot create an instance of this class, and this class cannot be inherited.</span></span>  
  
 <span data-ttu-id="fe0c3-119">속성을 설정할 수 있습니다 및 이벤트에는 두 가지 방법으로 값: 구성 요소 클래스에서 지정 하거나 디자인 타임에이 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-119">You can set property and event values two different ways: specify them in the component class or change them at design time.</span></span> <span data-ttu-id="fe0c3-120">이 설정할 수 있으므로 두 가지 방법의 오버 로드 된 메서드 값 <xref:System.ComponentModel.TypeDescriptor> 다음 두 가지 다른 유형의 매개 변수: 클래스 유형 또는 개체 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-120">Because you can set these values two ways, the overloaded methods of <xref:System.ComponentModel.TypeDescriptor> take two different types of parameters: a class type or an object instance.</span></span>  
  
 <span data-ttu-id="fe0c3-121">액세스 하려는 <xref:System.ComponentModel.TypeDescriptor> 정보 및 사용자 개체의 인스턴스, 구성 요소에 대 한 호출 하는 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-121">When you want to access <xref:System.ComponentModel.TypeDescriptor> information and you have an instance of the object, use the method that calls for a component.</span></span> <span data-ttu-id="fe0c3-122">개체의 인스턴스가 없는 경우에 클래스 형식에 대 한 호출 하는 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-122">Use the method that calls for the class type only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="fe0c3-123">캐시 하는 속성 및 이벤트 <xref:System.ComponentModel.TypeDescriptor> 속도 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-123">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="fe0c3-124">일반적으로 서로 상수 개체의 수명에 대 한입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-124">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="fe0c3-125">그러나 extender 공급자 및 디자이너 개체에 대 한 속성 집합을 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-125">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="fe0c3-126">이런 경우가 하면 <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> 메서드를 호출 하 여 캐시를 업데이트 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-126">If this is the case, then the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method must be called to update the cache.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.EventDescriptor" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
    <altmember cref="N:System.Reflection" />
    <altmember cref="T:System.ComponentModel.IComponent" />
    <altmember cref="T:System.ComponentModel.ISite" />
  </Docs>
  <Members>
    <MemberGroup MemberName="AddAttributes">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fe0c3-127">클래스 수준 특성을 대상 구성 요소에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-127">Adds class-level attributes to the target component.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeDescriptionProvider AddAttributes (object instance, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeDescriptionProvider AddAttributes(object instance, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddAttributes (instance As Object, ParamArray attributes As Attribute()) As TypeDescriptionProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeDescriptionProvider ^ AddAttributes(System::Object ^ instance, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="fe0c3-128">대상 구성 요소의 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-128">An instance of the target component.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="fe0c3-129">구성 요소의 클래스에 추가할 <see cref="T:System.Attribute" /> 개체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-129">An array of <see cref="T:System.Attribute" /> objects to add to the component's class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-130">클래스 수준 특성을 대상 구성 요소 인스턴스에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-130">Adds class-level attributes to the target component instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-131">지정된 속성을 추가하는 데 사용된 새로 만든 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-131">The newly created <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> that was used to add the specified attributes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-132"><xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Object%2CSystem.Attribute%5B%5D%29> 메서드는 구성 요소의 지정 된 인스턴스 클래스 수준 특성을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-132">The <xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Object%2CSystem.Attribute%5B%5D%29> method adds class-level attributes to the specified instance of a component.</span></span> <span data-ttu-id="fe0c3-133">이 메서드는 제공 된 특성과 특성을 이미 병합 하는 형식 설명 공급자를 만들어는 바로 가기를 제공 Visual Studio Windows Forms 디자이너 및 속성 창을 사용 하 여 응용 프로그램의 일반적인 요구 사항은 이기 때문에 클래스에 존재 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-133">Because this is a common requirement of applications using the Visual Studio Windows Forms Designer and Properties window, this method provides a shortcut by creating a type description provider that merges the provided attributes with the attributes that already exist on the class.</span></span> <span data-ttu-id="fe0c3-134">반환 값은 특성을 추가 하는 데 사용 된 형식 설명 공급자입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-134">The return value is the type description provider that was used to add the attributes.</span></span> <span data-ttu-id="fe0c3-135">나중에이 공급자에 전달할 수는 <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> 메서드 추가 되는 특성이 더 이상 필요 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-135">This provider can later be passed to the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method when the added attributes are no longer needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fe0c3-136">매개 변수 중 하나 또는 둘 다 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-136">One or both of the parameters is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.NamedPermissionSet">
          <span data-ttu-id="fe0c3-137">시스템 리소스에 대 한 전체 액세스 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-137">for full access to system resources.</span>
          </span>
          <span data-ttu-id="fe0c3-138">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-138">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="fe0c3-139">연결 된 상태:</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-139">Associated state:</span>
          </span>
        </permission>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeDescriptionProvider AddAttributes (Type type, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeDescriptionProvider AddAttributes(class System.Type type, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeDescriptionProvider ^ AddAttributes(Type ^ type, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="fe0c3-140">대상 구성 요소의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-140">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="fe0c3-141">구성 요소의 클래스에 추가할 <see cref="T:System.Attribute" /> 개체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-141">An array of <see cref="T:System.Attribute" /> objects to add to the component's class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-142">클래스 수준 특성을 대상 구성 요소 형식에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-142">Adds class-level attributes to the target component type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-143">지정된 속성을 추가하는 데 사용된 새로 만든 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-143">The newly created <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> that was used to add the specified attributes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-144"><xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Type%2CSystem.Attribute%5B%5D%29> 메서드는 구성 요소의 지정된 된 형식으로 클래스 수준 특성을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-144">The <xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Type%2CSystem.Attribute%5B%5D%29> method adds class-level attributes to the specified type of a component.</span></span> <span data-ttu-id="fe0c3-145">이 메서드는 제공 된 특성과 특성을 이미 병합 하는 형식 설명 공급자를 만들어는 바로 가기를 제공 Visual Studio Windows Forms 디자이너 및 속성 창을 사용 하 여 응용 프로그램의 일반적인 요구 사항은 이기 때문에 클래스에 존재 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-145">Because this is a common requirement of applications using the Visual Studio Windows Forms Designer and Properties window, this method provides a shortcut by creating a type description provider that merges the provided attributes with the attributes that already exist on the class.</span></span> <span data-ttu-id="fe0c3-146">반환 값은 특성을 추가 하는 데 사용 된 형식 설명 공급자입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-146">The return value is the type description provider that was used to add the attributes.</span></span> <span data-ttu-id="fe0c3-147">나중에이 공급자에 전달할 수는 <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> 메서드 추가 되는 특성이 더 이상 필요 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-147">This provider can later be passed to the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method when the added attributes are no longer needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fe0c3-148">매개 변수 중 하나 또는 둘 다 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-148">One or both of the parameters is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.NamedPermissionSet">
          <span data-ttu-id="fe0c3-149">시스템 리소스에 대 한 전체 액세스 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-149">for full access to system resources.</span>
          </span>
          <span data-ttu-id="fe0c3-150">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-150">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="fe0c3-151">연결 된 상태:</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-151">Associated state:</span>
          </span>
        </permission>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
      </Docs>
    </Member>
    <Member MemberName="AddEditorTable">
      <MemberSignature Language="C#" Value="public static void AddEditorTable (Type editorBaseType, System.Collections.Hashtable table);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddEditorTable(class System.Type editorBaseType, class System.Collections.Hashtable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddEditorTable (editorBaseType As Type, table As Hashtable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddEditorTable(Type ^ editorBaseType, System::Collections::Hashtable ^ table);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editorBaseType" Type="System.Type" />
        <Parameter Name="table" Type="System.Collections.Hashtable" />
      </Parameters>
      <Docs>
        <param name="editorBaseType">
          <span data-ttu-id="fe0c3-152">편집기 테이블을 추가할 편집기 기본 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-152">The editor base type to add the editor table for.</span>
          </span>
          <span data-ttu-id="fe0c3-153">이 형식에 대한 테이블이 이미 있으면 이 메서드는 아무 작업도 수행하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-153">If a table already exists for this type, this method will do nothing.</span>
          </span>
        </param>
        <param name="table">
          <span data-ttu-id="fe0c3-154">추가할 <see cref="T:System.Collections.Hashtable" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-154">The <see cref="T:System.Collections.Hashtable" /> to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-155">지정된 편집기 기본 형식에 대한 편집기 테이블을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-155">Adds an editor table for the given editor base type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-156"><xref:System.ComponentModel.TypeDescriptor.AddEditorTable%2A> 메서드는 지정 된 편집기 기본 형식에 대 한 편집기 테이블을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-156">The <xref:System.ComponentModel.TypeDescriptor.AddEditorTable%2A> method adds an editor table for the given editor base type.</span></span> <span data-ttu-id="fe0c3-157">일반적으로 편집기는 구성 요소에서 메타 데이터로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-157">Typically, editors are specified as metadata on a component.</span></span> <span data-ttu-id="fe0c3-158">그러나 경우 요청된 된 편집기 기본에 대 한 메타 데이터 형식을 찾을 수는 연결 된 구성 요소에 대해 <xref:System.ComponentModel.TypeDescriptor> 하나를 찾을 수 있는 편집기 형식에 대 한 편집기 테이블을 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-158">However, if no metadata for a requested editor base type can be found on the component, the associated <xref:System.ComponentModel.TypeDescriptor> will search an editor table for the editor type, if one can be found.</span></span> <span data-ttu-id="fe0c3-159">편집기 테이블에는 형식 설명자에 추가 되 면 제거할 수 없습니다 및 형식 설명자가 소유 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-159">Once an editor table has been added to a type descriptor, it cannot be removed and is owned by the type descriptor.</span></span> <span data-ttu-id="fe0c3-160">형식 설명자에이 테이블에 있는 수정할 자유롭게 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-160">The type descriptor may freely make modifications to this table.</span></span>  
  
 <span data-ttu-id="fe0c3-161">편집기 테이블에 대 한 형식은 값으로 키와 편집기로 데이터 형식을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-161">The format for an editor table uses data types as keys and editors as values.</span></span> <span data-ttu-id="fe0c3-162">테이블에서 항목의 값 부분 편집기 인스턴스를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-162">The value portion of an entry in the table represents an editor instance.</span></span> <span data-ttu-id="fe0c3-163">세 가지 값 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-163">It can have one of three values.</span></span> <span data-ttu-id="fe0c3-164">문자열에 포함 된 경우이 개체에 대 한 정규화 된 이름 형식 및의 형식 로드 하는 형식 설명자는 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-164">If it contains a string, the type descriptor will assume this is a fully qualified name of a type, and then load the type for the object.</span></span> <span data-ttu-id="fe0c3-165">형식에 포함 된 경우 편집기를 가져오려면 이러한 종류의 인스턴스가 만들어질 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-165">If it contains a type, an instance of this type will be created to obtain an editor.</span></span> <span data-ttu-id="fe0c3-166">마지막으로, 해당 값 부분이 실제 편집기 인스턴스를 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-166">Finally, the value portion may contain an actual editor instance.</span></span> <span data-ttu-id="fe0c3-167">형식 설명자 편집기 인스턴스로 확인 되 면 나중에 사용할 테이블로 다시 인스턴스를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-167">If the type descriptor resolves an editor to an instance, it will store the instance back into the table for future use.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddProvider">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fe0c3-168">이 형식 설명자에 대한 공급자 목록에 형식 설명 공급자를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-168">Adds a type description provider to the list of providers for this type descriptor.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddProvider">
      <MemberSignature Language="C#" Value="public static void AddProvider (System.ComponentModel.TypeDescriptionProvider provider, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddProvider(class System.ComponentModel.TypeDescriptionProvider provider, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddProvider (provider As TypeDescriptionProvider, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddProvider(System::ComponentModel::TypeDescriptionProvider ^ provider, System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="fe0c3-169">추가할 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-169">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to add.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="fe0c3-170">대상 구성 요소의 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-170">An instance of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-171">단일 구성 요소 인스턴스에 대한 형식 설명 공급자를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-171">Adds a type description provider for a single instance of a component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-172"><xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> 메서드 형식 단일 인스턴스의 구성 요소에 대 한 정보를 제공 하는 형식 설명 공급자를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-172">The <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method adds a type description provider that supplies type information for a single instance of a component.</span></span> <span data-ttu-id="fe0c3-173">이 메서드에서 공급자의 공급자를 추가 하는 경우 <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A> 인스턴스가 이미 존재 하기 때문에 메서드 호출 되지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-173">If a provider is added by this method, the provider's <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A> method will not be called because the instance already exists.</span></span>  
  
 <span data-ttu-id="fe0c3-174">이 메서드는 구성 요소에 대 한 하드 참조를 유지 하지 않으므로 완료 하는 중에서 구성 요소를 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-174">This method does not maintain a hard reference to the component, so it does not prevent the component from finalizing.</span></span>  
  
 <span data-ttu-id="fe0c3-175">동일한 형식 또는 개체에 대 한 여러 형식 설명 공급자를 추가 하는 것이 불가능 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-175">It is possible to add multiple type description providers for the same type or object.</span></span> <span data-ttu-id="fe0c3-176">이 경우 첫 번째 형식 설명 공급자 발생 형식 정보를 제공 하는 단독으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-176">If this occurs, the first type description provider encountered that provides type information will be used exclusively.</span></span> <span data-ttu-id="fe0c3-177">형식 정보 공급자에는 스택을 저장 되므로, 마지막으로 추가 된 공급자 쿼리할 첫 번째 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-177">Since type information providers are stored in a stack, the last provider added will be the first one queried.</span></span> <span data-ttu-id="fe0c3-178">이 동작을 통해는 <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> 및 <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A> 특정 시나리오에 필요한 대로 푸시 및 팝 하는 데 사용할 메서드 형식 설명 공급자입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-178">This behavior enables the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> and <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A> methods to be used to push and pop type description providers as required for particular scenarios.</span></span>  
  
 <span data-ttu-id="fe0c3-179">성공이 메서드 호출의 <xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Object%29> 메서드를는 `instance` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-179">If successful, this method calls the <xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Object%29> method on the `instance` parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fe0c3-180">이 메서드의 두 가지 버전 범위가 다른 결과 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-180">The two versions of this method produce results with different scopes.</span></span> <span data-ttu-id="fe0c3-181"><xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> 를 받는 메서드에 <xref:System.Object> 매개 변수는 단일 인스턴스의 지정 된 구성에 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-181">The <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> method that takes an <xref:System.Object> parameter affects only that single instance of the component specified.</span></span> <span data-ttu-id="fe0c3-182">반면, 다른 오버 로드를 사용 하는 한 <xref:System.Type> 매개 변수를 해당 형식으로 설명 하는 구성 요소의 모든 인스턴스에 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-182">In contrast, the other overload, which takes a <xref:System.Type> parameter, affects all instances of the component described by that type.</span></span>  
  
 <span data-ttu-id="fe0c3-183">사용 된 <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> 메서드 부분적으로 신뢰할 수 있는 코드에서 호출 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-183">Use the <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fe0c3-184">매개 변수 중 하나 또는 둘 다가 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-184">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.NamedPermissionSet">
          <span data-ttu-id="fe0c3-185">시스템 리소스에 대 한 전체 액세스 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-185">for full access to system resources.</span>
          </span>
          <span data-ttu-id="fe0c3-186">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-186">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="fe0c3-187">연결 된 상태:</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-187">Associated state:</span>
          </span>
        </permission>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.RemoveProvider" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="AddProvider">
      <MemberSignature Language="C#" Value="public static void AddProvider (System.ComponentModel.TypeDescriptionProvider provider, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddProvider(class System.ComponentModel.TypeDescriptionProvider provider, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddProvider(System::ComponentModel::TypeDescriptionProvider ^ provider, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="fe0c3-188">추가할 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-188">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to add.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="fe0c3-189">대상 구성 요소의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-189">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-190">구성 요소 클래스에 대한 형식 설명 공급자를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-190">Adds a type description provider for a component class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-191"><xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> 메서드 형식 지정된 된 클래스, 파생 된 클래스 및 이러한 형식의 모든 인스턴스에 대 한 정보를 제공 하는 형식 설명 공급자를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-191">The <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method adds a type description provider that supplies type information for the specified class, derived classes, and all instances of these types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fe0c3-192">`type` 매개 변수는 인터페이스를 포함 하 여 형식일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-192">The `type` parameter can be any type, including an interface.</span></span> <span data-ttu-id="fe0c3-193">예를 들어 사용자 지정 형식 및 모든 구성 요소에 대 한 인스턴스 정보를 제공 하려면 지정 `typeof(IComponent)`합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-193">For example, to provide custom type and instance information for all components, you would specify `typeof(IComponent)`.</span></span> <span data-ttu-id="fe0c3-194">전달 `typeof(object)` 모든 형식에 대 한 형식 정보를 제공 하도록 공급자를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-194">Passing `typeof(object)` will call the provider to supply type information for all types.</span></span>  
  
 <span data-ttu-id="fe0c3-195">이 메서드를 개체에 대 한 하드 참조를 유지 하지 않으므로 완료 하는 중에서 개체를 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-195">This method does not maintain a hard reference to any object, so it does not prevent objects from finalizing.</span></span>  
  
 <span data-ttu-id="fe0c3-196">동일한 형식 또는 개체에 대 한 여러 형식 설명 공급자를 추가 하는 것이 불가능 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-196">It is possible to add multiple type description providers for the same type or object.</span></span> <span data-ttu-id="fe0c3-197">이 경우 첫 번째 형식 설명 공급자 발생 형식 정보를 제공 하는 단독으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-197">If this occurs, the first type description provider encountered that provides type information will be used exclusively.</span></span> <span data-ttu-id="fe0c3-198">형식 정보 공급자 스택을에 저장 되므로, 마지막으로 추가 된 공급자 쿼리할 첫 번째 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-198">Because type information providers are stored in a stack, the last provider added will be the first one queried.</span></span> <span data-ttu-id="fe0c3-199">이 동작을 통해는 <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> 및 <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A> 특정 시나리오에 필요한 대로 푸시 및 팝 하는 데 사용할 메서드 형식 설명 공급자입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-199">This behavior enables the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> and <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A> methods to be used to push and pop type description providers as required for particular scenarios.</span></span>  
  
 <span data-ttu-id="fe0c3-200">성공이 메서드 호출의 <xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Type%29> 메서드를는 `type` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-200">If successful, this method calls the <xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Type%29> method on the `type` parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fe0c3-201">이 메서드의 두 가지 버전 범위가 다른 결과 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-201">The two versions of this method produce results with different scopes.</span></span> <span data-ttu-id="fe0c3-202"><xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> 를 받는 메서드에 <xref:System.Object> 매개 변수는 단일 인스턴스의 지정 된 구성에 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-202">The <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> method that takes an <xref:System.Object> parameter affects only that single instance of the component specified.</span></span> <span data-ttu-id="fe0c3-203">반면, 다른 오버 로드를 사용 하는 한 <xref:System.Type> 매개 변수를 해당 형식으로 설명 하는 구성 요소의 모든 인스턴스에 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-203">In contrast, the other overload, which takes a <xref:System.Type> parameter, affects all instances of the component described by that type.</span></span>  
  
 <span data-ttu-id="fe0c3-204">사용 된 <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> 메서드 부분적으로 신뢰할 수 있는 코드에서 호출 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-204">Use the <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fe0c3-205">매개 변수 중 하나 또는 둘 다가 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-205">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.NamedPermissionSet">
          <span data-ttu-id="fe0c3-206">시스템 리소스에 대 한 전체 액세스 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-206">for full access to system resources.</span>
          </span>
          <span data-ttu-id="fe0c3-207">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-207">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="fe0c3-208">연결 된 상태:</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-208">Associated state:</span>
          </span>
        </permission>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddProviderTransparent">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fe0c3-209">이 형식 설명자에 대한 공급자 목록에 형식 설명 공급자를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-209">Adds a type description provider to the list of providers for this type descriptor.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddProviderTransparent">
      <MemberSignature Language="C#" Value="public static void AddProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddProviderTransparent(class System.ComponentModel.TypeDescriptionProvider provider, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddProviderTransparent (provider As TypeDescriptionProvider, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddProviderTransparent(System::ComponentModel::TypeDescriptionProvider ^ provider, System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="fe0c3-210">추가할 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-210">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to add.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="fe0c3-211">대상 구성 요소의 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-211">An instance of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-212">단일 구성 요소 인스턴스에 대한 형식 설명 공급자를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-212">Adds a type description provider for a single instance of a component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-213">부분적으로 신뢰할 수 있는 코드에서 이 메서드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-213">This method can be called from partially trusted code.</span></span> <span data-ttu-id="fe0c3-214">경우 <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> 는 정의 호출자에 게 등록할 수에 지정된 된 인스턴스에 대 한 공급자 해당 형식을 부분 신뢰 이기도 한 경우.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-214">If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> is defined, the caller can register a provider for the specified instance if its type is also partially trusted.</span></span>  
  
 <span data-ttu-id="fe0c3-215">사용 하 여는 <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> 메서드 부분적으로 신뢰할 수 있는 코드에서 호출할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-215">Use the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you do not need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fe0c3-216">매개 변수 중 하나 또는 둘 다가 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-216">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.TypeDescriptorPermission">
          <span data-ttu-id="fe0c3-217">레지스트리 액세스 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-217">For registry access.</span>
          </span>
          <span data-ttu-id="fe0c3-218">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-218">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="fe0c3-219">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-219">Associated enumeration: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span>
          </span>
        </permission>
        <permission cref="P:System.Reflection.Assembly.PermissionSet">
          <span data-ttu-id="fe0c3-220">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-220">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="fe0c3-221">연결 된 형식:는 <see cref="T:System.Security.PermissionSet" /> 정의 하는 어셈블리에 필요 하는 <paramref name="instance" /> 매개 변수의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-221">Associated type: The <see cref="T:System.Security.PermissionSet" /> that is required by the assembly that defines the <paramref name="instance" /> parameter's type.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AddProviderTransparent">
      <MemberSignature Language="C#" Value="public static void AddProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddProviderTransparent(class System.ComponentModel.TypeDescriptionProvider provider, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddProviderTransparent(System::ComponentModel::TypeDescriptionProvider ^ provider, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="fe0c3-222">추가할 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-222">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to add.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="fe0c3-223">대상 구성 요소의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-223">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-224">구성 요소 클래스에 대한 형식 설명 공급자를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-224">Adds a type description provider for a component class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-225">부분적으로 신뢰할 수 있는 코드에서 이 메서드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-225">This method can be called from partially trusted code.</span></span> <span data-ttu-id="fe0c3-226">경우 <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> 는 정의 호출자에 게 등록할 수를 지정 된 형식에 대 한 공급자 부분적으로 신뢰할 수 있는 이기도 한 경우.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-226">If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> is defined, the caller can register a provider for the specified type if it is also partially trusted.</span></span>  
  
 <span data-ttu-id="fe0c3-227">사용 하 여는 <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> 메서드 부분적으로 신뢰할 수 있는 코드에서 호출할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-227">Use the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you do not need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fe0c3-228">매개 변수 중 하나 또는 둘 다가 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-228">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.TypeDescriptorPermission">
          <span data-ttu-id="fe0c3-229">레지스트리 액세스 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-229">For registry access.</span>
          </span>
          <span data-ttu-id="fe0c3-230">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-230">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="fe0c3-231">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-231">Associated enumeration: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span>
          </span>
        </permission>
        <permission cref="P:System.Reflection.Assembly.PermissionSet">
          <span data-ttu-id="fe0c3-232">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-232">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="fe0c3-233">연결 된 형식:는 <see cref="T:System.Security.PermissionSet" /> 정의 하는 어셈블리에서 필요한 <paramref name="type" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-233">Associated type: The <see cref="T:System.Security.PermissionSet" /> that is required by the assembly that defines <paramref name="type" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ComNativeDescriptorHandler">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.IComNativeDescriptorHandler ComNativeDescriptorHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ComponentModel.IComNativeDescriptorHandler ComNativeDescriptorHandler" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ComNativeDescriptorHandler As IComNativeDescriptorHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ComponentModel::IComNativeDescriptorHandler ^ ComNativeDescriptorHandler { System::ComponentModel::IComNativeDescriptorHandler ^ get(); void set(System::ComponentModel::IComNativeDescriptorHandler ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This property has been deprecated.  Use a type description provider to supply type information for COM types instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComNativeDescriptorHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe0c3-234">대상 구성 요소에 대한 COM(구성 요소 개체 모델) 형식 정보에 대한 공급자를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-234">Gets or sets the provider for the Component Object Model (COM) type information for the target component.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe0c3-235">COM 형식 정보 공급자를 나타내는 <see cref="T:System.ComponentModel.IComNativeDescriptorHandler" /> 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-235">An <see cref="T:System.ComponentModel.IComNativeDescriptorHandler" /> instance representing the COM type information provider.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-236"><xref:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler%2A> 속성 및 <xref:System.ComponentModel.IComNativeDescriptorHandler> 인터페이스는 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-236">The <xref:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler%2A> property and the <xref:System.ComponentModel.IComNativeDescriptorHandler> interface are obsolete.</span></span> <span data-ttu-id="fe0c3-237">자세한 내용은 <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> 속성을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-237">For more information, see the <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet">
          <span data-ttu-id="fe0c3-238">시스템 리소스에 대 한 전체 액세스 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-238">for full access to system resources.</span>
          </span>
          <span data-ttu-id="fe0c3-239">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-239">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="fe0c3-240">연결 된 상태:</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-240">Associated state:</span>
          </span>
        </permission>
        <altmember cref="P:System.ComponentModel.TypeDescriptor.ComObjectType" />
      </Docs>
    </Member>
    <Member MemberName="ComObjectType">
      <MemberSignature Language="C#" Value="public static Type ComObjectType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Type ComObjectType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.TypeDescriptor.ComObjectType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ComObjectType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Type ^ ComObjectType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe0c3-241">대상 구성 요소에서 나타내는 COM(구성 요소 개체 모델) 개체의 형식을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-241">Gets the type of the Component Object Model (COM) object represented by the target component.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe0c3-242">이 구성 요소가 나타내는 COM 개체의 <see cref="T:System.Type" />, 또는 비 COM 개체의 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-242">The <see cref="T:System.Type" /> of the COM object represented by this component, or <see langword="null" /> for non-COM objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-243"><xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> 속성에 전달 될 수 있는 형식을 반환는 <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> 메서드를 COM 형식에 대 한 형식 설명 공급자를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-243">The <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> property returns a type that can be passed to the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method to define a type description provider for COM types.</span></span>  
  
 <span data-ttu-id="fe0c3-244"><xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> 속성 및이 클래스의 다른 멤버에는 사용 되지 않는 기능을 대체 합니다. <xref:System.ComponentModel.IComNativeDescriptorHandler> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-244">The <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> property and other members in this class replace the functionality in the obsolete <xref:System.ComponentModel.IComNativeDescriptorHandler> interface.</span></span> <span data-ttu-id="fe0c3-245">COM 개체 간의 매핑 계층을 구현 하 고 <xref:System.ComponentModel.TypeDescriptor>, 추가 <xref:System.ComponentModel.TypeDescriptionProvider> 형식을 처리 하려면 <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-245">To implement a mapping layer between a COM object and <xref:System.ComponentModel.TypeDescriptor>, add a <xref:System.ComponentModel.TypeDescriptionProvider> to handle type <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler" />
      </Docs>
    </Member>
    <Member MemberName="CreateAssociation">
      <MemberSignature Language="C#" Value="public static void CreateAssociation (object primary, object secondary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateAssociation(object primary, object secondary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CreateAssociation (primary As Object, secondary As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateAssociation(System::Object ^ primary, System::Object ^ secondary);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primary" Type="System.Object" />
        <Parameter Name="secondary" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="primary">
          <span data-ttu-id="fe0c3-246">기본 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-246">The primary <see cref="T:System.Object" />.</span>
          </span>
        </param>
        <param name="secondary">
          <span data-ttu-id="fe0c3-247">보조 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-247">The secondary <see cref="T:System.Object" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-248">두 개체 사이에 기본-보조 연결을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-248">Creates a primary-secondary association between two objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-249"><xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> 메서드는 기본 및 보조 개체 간의 연결을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-249">The <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method creates an association between a primary and a secondary object.</span></span> <span data-ttu-id="fe0c3-250">연결을 만든 후 디자이너나 다른 필터링 메커니즘은 기본 개체의 속성 집합으로 라우팅되는 속성을 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-250">Once an association is created, a designer or other filtering mechanism can add properties that route to either object into the primary object's property set.</span></span> <span data-ttu-id="fe0c3-251">속성 호출의 주요 개체에 대 한 경우는 <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> 해당 형식 매개 변수 관련 된 실제 개체 인스턴스를 해결 하려면 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-251">When a property invocation is made against the primary object, the <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> method will be called to resolve the actual object instance that is related to its type parameter.</span></span>  
  
 <span data-ttu-id="fe0c3-252">A <xref:System.WeakReference> 사용 하 여 기본 및 보조 개체 간의 연결을 유지; 이므로이 메서드 하지 않는 두 개체에서 종료 하 고 가비지 수집에서 회수 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-252">A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not prevent either object from being finalized and reclaimed by garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fe0c3-253">매개 변수 중 하나 또는 둘 다가 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-253">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fe0c3-254">
            <paramref name="primary" />가 <paramref name="secondary" />와 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-254">
              <paramref name="primary" /> is equal to <paramref name="secondary" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.NamedPermissionSet">
          <span data-ttu-id="fe0c3-255">시스템 리소스에 대 한 전체 액세스 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-255">for full access to system resources.</span>
          </span>
          <span data-ttu-id="fe0c3-256">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-256">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="fe0c3-257">연결 된 상태:</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-257">Associated state:</span>
          </span>
        </permission>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CreateDesigner">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Design.IDesigner CreateDesigner (System.ComponentModel.IComponent component, Type designerBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Design.IDesigner CreateDesigner(class System.ComponentModel.IComponent component, class System.Type designerBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDesigner (component As IComponent, designerBaseType As Type) As IDesigner" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Design::IDesigner ^ CreateDesigner(System::ComponentModel::IComponent ^ component, Type ^ designerBaseType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.IDesigner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="designerBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="fe0c3-258">디자이너와 연결할 구성 요소를 지정하는 <see cref="T:System.ComponentModel.IComponent" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-258">An <see cref="T:System.ComponentModel.IComponent" /> that specifies the component to associate with the designer.</span>
          </span>
        </param>
        <param name="designerBaseType">
          <span data-ttu-id="fe0c3-259">만들 디자이너의 형식을 나타내는 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-259">A <see cref="T:System.Type" /> that represents the type of designer to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-260">지정된 구성 요소와 연결된 디자이너의 인스턴스 및 지정된 형식의 디자이너의 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-260">Creates an instance of the designer associated with the specified component and of the specified type of designer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-261">구성 요소에 대한 디자이너의 인스턴스인 <see cref="T:System.ComponentModel.Design.IDesigner" />이거나, 디자이너를 찾을 수 없으면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-261">An <see cref="T:System.ComponentModel.Design.IDesigner" /> that is an instance of the designer for the component, or <see langword="null" /> if no designer can be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-262">이 메서드는 유효한 찾을 수 없는 경우 <xref:System.ComponentModel.DesignerAttribute>, 디자이너에 대 한 클래스 계층 구조를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-262">If this method cannot find a valid <xref:System.ComponentModel.DesignerAttribute>, it searches up the class hierarchy for a designer.</span></span> <span data-ttu-id="fe0c3-263">반환 하는 경우 클래스 계층 구조에서 디자이너를 찾을 수 없습니다 것, `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-263">If it cannot find a designer in the class hierarchy, it returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IComponent" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateEvent">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fe0c3-264">기존 이벤트 설명자와 동일한 새 이벤트 설명자를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-264">Creates a new event descriptor that is identical to an existing event descriptor.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor CreateEvent (Type componentType, System.ComponentModel.EventDescriptor oldEventDescriptor, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor CreateEvent(class System.Type componentType, class System.ComponentModel.EventDescriptor oldEventDescriptor, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateEvent (componentType As Type, oldEventDescriptor As EventDescriptor, ParamArray attributes As Attribute()) As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ CreateEvent(Type ^ componentType, System::ComponentModel::EventDescriptor ^ oldEventDescriptor, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="oldEventDescriptor" Type="System.ComponentModel.EventDescriptor" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="fe0c3-265">새 이벤트를 만들 구성 요소의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-265">The type of the component for which to create the new event.</span>
          </span>
        </param>
        <param name="oldEventDescriptor">
          <span data-ttu-id="fe0c3-266">기존 이벤트 정보입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-266">The existing event information.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="fe0c3-267">새 특성입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-267">The new attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-268">기존 <see cref="T:System.ComponentModel.EventDescriptor" />를 전달할 때 기존 이벤트 설명자와 동일한 새 이벤트 설명자를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-268">Creates a new event descriptor that is identical to an existing event descriptor, when passed the existing <see cref="T:System.ComponentModel.EventDescriptor" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-269">지정된 메타데이터 특성과 기존 메타데이터 특성이 병합된 새 <see cref="T:System.ComponentModel.EventDescriptor" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-269">A new <see cref="T:System.ComponentModel.EventDescriptor" /> that has merged the specified metadata attributes with the existing metadata attributes.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="fe0c3-270">구성 요소의 public이 아닌 멤버를 검사 하는 데 필요 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-270">Required to inspect non-public members of the component.</span>
          </span>
          <span data-ttu-id="fe0c3-271">요청 시 액세스 하는 데 필요한 연결 <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> 형식 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-271">Link demand access required for <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> type <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
      </Docs>
    </Member>
    <Member MemberName="CreateEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor CreateEvent (Type componentType, string name, Type type, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor CreateEvent(class System.Type componentType, string name, class System.Type type, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ CreateEvent(Type ^ componentType, System::String ^ name, Type ^ type, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="fe0c3-272">이벤트를 만들 구성 요소의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-272">The type of the component the event lives on.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="fe0c3-273">이벤트의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-273">The name of the event.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="fe0c3-274">이벤트를 처리하는 대리자의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-274">The type of the delegate that handles the event.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="fe0c3-275">이 이벤트에 대한 특성입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-275">The attributes for this event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-276">형식에 지정된 이벤트에서 설명자 정보를 동적으로 생성하여 기존 이벤트 설명자와 동일한 새 이벤트 설명자를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-276">Creates a new event descriptor that is identical to an existing event descriptor by dynamically generating descriptor information from a specified event on a type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-277">형식에 바인딩되는 <see cref="T:System.ComponentModel.EventDescriptor" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-277">An <see cref="T:System.ComponentModel.EventDescriptor" /> that is bound to a type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="fe0c3-278">구성 요소의 public이 아닌 멤버를 검사 하는 데 필요 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-278">Required to inspect non-public members of the component.</span>
          </span>
          <span data-ttu-id="fe0c3-279">요청 시 액세스 하는 데 필요한 연결 <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> 형식 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-279">Link demand access required for <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> type <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (IServiceProvider provider, Type objectType, Type[] argTypes, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.IServiceProvider provider, class System.Type objectType, class System.Type[] argTypes, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (provider As IServiceProvider, objectType As Type, argTypes As Type(), args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(IServiceProvider ^ provider, Type ^ objectType, cli::array &lt;Type ^&gt; ^ argTypes, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="argTypes" Type="System.Type[]" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="fe0c3-280">
            <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> 서비스를 제공하는 서비스 공급자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-280">The service provider that provides a <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> service.</span>
          </span>
          <span data-ttu-id="fe0c3-281">이 매개 변수는 <see langword="null" />일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-281">This parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="objectType">
          <span data-ttu-id="fe0c3-282">만들 개체의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-282">The <see cref="T:System.Type" /> of object to create.</span>
          </span>
        </param>
        <param name="argTypes">
          <span data-ttu-id="fe0c3-283">개체의 생성자에 전달할 매개 변수 형식의 선택적 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-283">An optional array of parameter types to be passed to the object's constructor.</span>
          </span>
          <span data-ttu-id="fe0c3-284">이 매개 변수는 <see langword="null" /> 또는 0길이 배열일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-284">This parameter can be <see langword="null" /> or an array of zero length.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="fe0c3-285">개체의 생성자에 전달할 매개 변수 값의 선택적 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-285">An optional array of parameter values to pass to the object's constructor.</span>
          </span>
          <span data-ttu-id="fe0c3-286">
            <see langword="null" />이 아니면 요소 개수가 <c>argTypes</c>와 동일해야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-286">If not <see langword="null" />, the number of elements must be the same as <c>argTypes</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-287">다른 데이터 형식 대신 사용할 수 있는 개체를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-287">Creates an object that can substitute for another data type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-288">연결된 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />가 있으면 대체 데이터 형식의 인스턴스이고, 그렇지 않으면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-288">An instance of the substitute data type if an associated <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> is found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-289"><xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A> 메서드는 검색 한 <xref:System.ComponentModel.TypeDescriptionProvider> 지정 된 연결 된 `objectType` 데이터 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-289">The <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A> method will search for a <xref:System.ComponentModel.TypeDescriptionProvider> that is associated with the specified `objectType` data type.</span></span> <span data-ttu-id="fe0c3-290">이 메서드는에서 형식 설명 공급자를 먼저 시도 `provider` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-290">This method first tries to obtain a type description provider from the `provider` parameter.</span></span> <span data-ttu-id="fe0c3-291">이 작업이 실패 하면 공급자에 대 한 자체 내부 테이블 검색 (이 항목에 대 한 이전 호출을 통해 만든 <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>).</span><span class="sxs-lookup"><span data-stu-id="fe0c3-291">If this fails, it searches its own internal tables for a provider (these entries were created through previous calls to <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>).</span></span> <span data-ttu-id="fe0c3-292">공급자, 발견 되 면이 메서드는 해당 개체에 만들기 호출을 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-292">If it finds a provider, this method will delegate the creation call to that object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fe0c3-293">
            <paramref name="argTypes" />가 <see langword="null" />이 아닐 때 <paramref name="objectType" />이 <see langword="null" />이거나 <paramref name="args" />가 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-293">
              <paramref name="objectType" /> is <see langword="null" />, or <paramref name="args" /> is <see langword="null" /> when <paramref name="argTypes" /> is not <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fe0c3-294">
            <paramref name="argTypes" /> 및 <paramref name="args" />의 요소 수가 다릅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-294">
              <paramref name="argTypes" /> and <paramref name="args" /> have different number of elements.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="fe0c3-295">파생된 클래스는 대체 인스턴스를 제공 하지 않는 경우이 메서드는 기본 구현을 호출 해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="fe0c3-295">If the derived class does not provide a substitute instance, this method should call the base implementation.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateProperty">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fe0c3-296">구성 요소의 기존 속성에 대한 새 속성 설명자를 생성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-296">Creates a new property descriptor for an existing property of a component.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor CreateProperty (Type componentType, System.ComponentModel.PropertyDescriptor oldPropertyDescriptor, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor CreateProperty(class System.Type componentType, class System.ComponentModel.PropertyDescriptor oldPropertyDescriptor, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateProperty (componentType As Type, oldPropertyDescriptor As PropertyDescriptor, ParamArray attributes As Attribute()) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ CreateProperty(Type ^ componentType, System::ComponentModel::PropertyDescriptor ^ oldPropertyDescriptor, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="oldPropertyDescriptor" Type="System.ComponentModel.PropertyDescriptor" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="fe0c3-297">속성이 멤버인 구성 요소의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-297">The <see cref="T:System.Type" /> of the component that the property is a member of.</span>
          </span>
        </param>
        <param name="oldPropertyDescriptor">
          <span data-ttu-id="fe0c3-298">기존 속성 설명자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-298">The existing property descriptor.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="fe0c3-299">이 속성의 새 특성입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-299">The new attributes for this property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-300">지정된 기존 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 및 특성 배열을 사용하여 기존 속성 설명자에서 새 속성 설명자를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-300">Creates a new property descriptor from an existing property descriptor, using the specified existing <see cref="T:System.ComponentModel.PropertyDescriptor" /> and attribute array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-301">지정된 메타데이터 특성이 기존 메타데이터 특성과 병합된 새 <see cref="T:System.ComponentModel.PropertyDescriptor" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-301">A new <see cref="T:System.ComponentModel.PropertyDescriptor" /> that has the specified metadata attributes merged with the existing metadata attributes.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="fe0c3-302">구성 요소의 public이 아닌 멤버를 검사 하는 데 필요 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-302">Required to inspect non-public members of the component.</span>
          </span>
          <span data-ttu-id="fe0c3-303">요청 시 액세스 하는 데 필요한 연결 <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> 형식 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-303">Link demand access required for <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> type <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
      </Docs>
    </Member>
    <Member MemberName="CreateProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor CreateProperty (Type componentType, string name, Type type, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor CreateProperty(class System.Type componentType, string name, class System.Type type, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ CreateProperty(Type ^ componentType, System::String ^ name, Type ^ type, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="fe0c3-304">속성이 멤버인 구성 요소의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-304">The <see cref="T:System.Type" /> of the component that the property is a member of.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="fe0c3-305">속성의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-305">The name of the property.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="fe0c3-306">속성의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-306">The <see cref="T:System.Type" /> of the property.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="fe0c3-307">이 속성의 새 특성입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-307">The new attributes for this property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-308">지정된 속성 이름, 형식 및 특성 배열을 사용하여 속성 설명자를 만들고 형식에 동적으로 바인딩합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-308">Creates and dynamically binds a property descriptor to a type, using the specified property name, type, and attribute array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-309">지정 형식에 바인딩되고 지정된 메타데이터 특성이 기존 메타데이터 특성과 병합된 <see cref="T:System.ComponentModel.PropertyDescriptor" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-309">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that is bound to the specified type and that has the specified metadata attributes merged with the existing metadata attributes.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="fe0c3-310">구성 요소의 public이 아닌 멤버를 검사 하는 데 필요 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-310">Required to inspect non-public members of the component.</span>
          </span>
          <span data-ttu-id="fe0c3-311">요청 시 액세스 하는 데 필요한 연결 <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> 형식 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-311">Link demand access required for <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> type <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
      </Docs>
    </Member>
    <Member MemberName="GetAssociation">
      <MemberSignature Language="C#" Value="public static object GetAssociation (Type type, object primary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetAssociation(class System.Type type, object primary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetAssociation(Type ^ type, System::Object ^ primary);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="primary" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="fe0c3-312">대상 구성 요소의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-312">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <param name="primary">
          <span data-ttu-id="fe0c3-313">연결의 기본 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-313">The primary object of the association.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-314">지정된 기본 개체와 연결된 형식의 인스턴스를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-314">Returns an instance of the type associated with the specified primary object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-315">연결이 있으면 기본 개체와 연결된 보조 형식의 인스턴스이고, 지정된 연결이 없으면 <paramref name="primary" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-315">An instance of the secondary type that has been associated with the primary object if an association exists; otherwise, <paramref name="primary" /> if no specified association exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-316">이전에 연결에 대해 수행 된 경우는 `type` 매개 변수를 사용 하는 <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> 메서드를 하면 <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> 메서드를 호출할 요청된 된 형식에 대 한 올바른 보조 개체를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-316">If a previous association has been made for the `type` parameter using the <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method, then the <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> method returns the correct secondary object to invoke for the requested type.</span></span> <span data-ttu-id="fe0c3-317">그렇지 않으면 <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> 검색에 대 한 호환 되는 디자이너에 대 한 `type` 가 있는 경우 디자이너를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-317">Otherwise, <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> searches for a compatible designer for `type` and returns the designer if one is found.</span></span> <span data-ttu-id="fe0c3-318">이 메서드는 `null`를 반환하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-318">This method never returns `null`.</span></span>  
  
 <span data-ttu-id="fe0c3-319">A <xref:System.WeakReference> 사용 하 여 기본 및 보조 개체 간의 연결을 유지; 이므로이 메서드 하지 않는 기본 또는 보조 개체에서 종료 하 고 가비지 수집에서 회수 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-319">A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not prevent either the primary or secondary object from being finalized and reclaimed by garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fe0c3-320">매개 변수 중 하나 또는 둘 다가 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-320">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAttributes">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fe0c3-321">구성 요소 또는 형식에 대한 특성 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-321">Returns the collection of attributes for a component or a type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.AttributeCollection GetAttributes (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.AttributeCollection GetAttributes(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAttributes (component As Object) As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::AttributeCollection ^ GetAttributes(System::Object ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="fe0c3-322">특성을 가져올 구성 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-322">The component for which you want to get attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-323">지정된 구성 요소에 대한 특성 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-323">Returns the collection of attributes for the specified component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-324">구성 요소의 특성을 포함하는 <see cref="T:System.ComponentModel.AttributeCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-324">An <see cref="T:System.ComponentModel.AttributeCollection" /> containing the attributes for the component.</span>
          </span>
          <span data-ttu-id="fe0c3-325">
            <paramref name="component" />가 <see langword="null" />이면 이 메서드는 빈 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-325">If <paramref name="component" /> is <see langword="null" />, this method returns an empty collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-326">반환 된 특성의 <xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A> 원래 구성 요소의 소스 extender 공급자가 목록에서 메서드를 동적으로 수정 될 수 있습니다 (<xref:System.ComponentModel.IExtenderProvider>), 서비스 필터 (<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>), 및 특성 필터입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-326">The attributes returned by the <xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A> method may be dynamically modified from the original component's source listing by extender providers (<xref:System.ComponentModel.IExtenderProvider>), filter services (<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>), and attribute filters.</span></span>  
  
 <span data-ttu-id="fe0c3-327">와 사용자 지정 특성을 정의 하는 경우 <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> 로 설정 `true`를 재정의 해야 합니다는 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 속성을 고유 하 게 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-327">When you define a custom attribute with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> set to `true`, you must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property to make it unique.</span></span> <span data-ttu-id="fe0c3-328">특성의 모든 인스턴스가 되는 고유 재정의 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 하려면 특성의 개체 id를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-328">If all instances of your attribute are unique, override <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> to return the object identity of your attribute.</span></span> <span data-ttu-id="fe0c3-329">값을 반환 하는 경우에 특성의 일부 인스턴스가 고유 하므로 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 같음 이러한 경우에 반환 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-329">If only some instances of your attribute are unique, return a value from <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> that would return equality in those cases.</span></span> <span data-ttu-id="fe0c3-330">예를 들어 일부 특성에는 고유 키로 사용 하는 생성자 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-330">For example, some attributes have a constructor parameter that acts as a unique key.</span></span> <span data-ttu-id="fe0c3-331">이러한 특성에 대 한 생성자에서 매개 변수의 값을 반환 된 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-331">For these attributes, return the value of the constructor parameter from the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fe0c3-332">기본 구현 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 형식 id의 값에 관계 없이 반환 된 <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> 속성.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-332">The default implementation of <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> returns the type identity regardless of the value of the <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="fe0c3-333">여러 인스턴스를 반환 하려면는 <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> 에서 특성의 <xref:System.ComponentModel.AttributeCollection>, 사용자의 특성이 재정의 해야 합니다는 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-333">In order to return multiple instances of an <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> attribute from the <xref:System.ComponentModel.AttributeCollection>, your attribute must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe0c3-334">이 방법의 예제를 보려면는 <xref:System.ComponentModel.AttributeCollection.Matches%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-334">For an example of this method, see the <xref:System.ComponentModel.AttributeCollection.Matches%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.ComponentModel.AttributeCollection" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.AttributeCollection GetAttributes (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.AttributeCollection GetAttributes(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAttributes (componentType As Type) As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::AttributeCollection ^ GetAttributes(Type ^ componentType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="fe0c3-335">대상 구성 요소의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-335">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-336">지정된 구성 요소 형식에 대한 특성 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-336">Returns a collection of attributes for the specified type of component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-337">해당 구성 요소 형식에 대한 특성이 들어 있는 <see cref="T:System.ComponentModel.AttributeCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-337">An <see cref="T:System.ComponentModel.AttributeCollection" /> with the attributes for the type of the component.</span>
          </span>
          <span data-ttu-id="fe0c3-338">해당 구성 요소가 <see langword="null" />이면 이 메서드는 빈 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-338">If the component is <see langword="null" />, this method returns an empty collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-339">개체의 인스턴스가 없는 경우에이 버전의이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-339">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="fe0c3-340">사용 하 여 특성에 대 한 <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> 로 설정 `true`, 중복 된 인스턴스를 제거 하는 특성 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-340">For attributes with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> set to `true`, the attribute collection removes duplicate instances.</span></span> <span data-ttu-id="fe0c3-341">이러한 기호가 있는 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 속성 같은 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-341">These are instances in which the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property returns equal values.</span></span>  
  
 <span data-ttu-id="fe0c3-342">와 사용자 지정 특성을 정의 하는 경우 <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> 로 설정 `true`를 재정의 해야 합니다는 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 속성을 고유 하 게 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-342">When you define a custom attribute with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> set to `true`, you must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property to make it unique.</span></span> <span data-ttu-id="fe0c3-343">특성의 모든 인스턴스가 되는 고유 재정의 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 하려면 특성의 개체 id를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-343">If all instances of your attribute are unique, override <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> to return the object identity of your attribute.</span></span> <span data-ttu-id="fe0c3-344">값을 반환 하는 경우에 특성의 일부 인스턴스가 고유 하므로 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 같음 이러한 경우에 반환 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-344">If only some instances of your attribute are unique, return a value from <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> that would return equality in those cases.</span></span> <span data-ttu-id="fe0c3-345">예를 들어 일부 특성에는 고유 키로 사용 하는 생성자 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-345">For example, some attributes have a constructor parameter that acts as a unique key.</span></span> <span data-ttu-id="fe0c3-346">이러한 특성에 대 한 생성자에서 매개 변수의 값을 반환 된 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-346">For these attributes, return the value of the constructor parameter from the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fe0c3-347">기본 구현 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 형식 id의 값에 관계 없이 반환 된 <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> 속성.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-347">The default implementation of <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> returns the type identity regardless of the value of the <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="fe0c3-348">여러 인스턴스를 반환 하려면는 <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> 에서 특성의 <xref:System.ComponentModel.AttributeCollection>, 사용자의 특성이 재정의 해야 합니다는 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-348">In order to return multiple instances of an <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> attribute from the <xref:System.ComponentModel.AttributeCollection>, your attribute must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.ComponentModel.AttributeCollection" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.AttributeCollection GetAttributes (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.AttributeCollection GetAttributes(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAttributes (component As Object, noCustomTypeDesc As Boolean) As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::AttributeCollection ^ GetAttributes(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="fe0c3-349">특성을 가져올 구성 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-349">The component for which you want to get attributes.</span>
          </span>
        </param>
        <param name="noCustomTypeDesc">
          <span data-ttu-id="fe0c3-350">
            <c>component</c>가 <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> 형식인 경우 사용자 지정 형식 설명자의 기준 특성 집합을 사용하려면 <see langword="true" />이고, 사용하지 않으려면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-350">
              <see langword="true" /> to use a baseline set of attributes from the custom type descriptor if <c>component</c> is of type <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-351">지정된 구성 요소에 대한 특성 컬렉션과 사용자 지정 형식 설명자가 만들어졌음을 나타내는 부울 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-351">Returns a collection of attributes for the specified component and a Boolean indicating that a custom type descriptor has been created.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-352">해당 구성 요소의 특성이 들어 있는 <see cref="T:System.ComponentModel.AttributeCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-352">An <see cref="T:System.ComponentModel.AttributeCollection" /> with the attributes for the component.</span>
          </span>
          <span data-ttu-id="fe0c3-353">해당 구성 요소가 <see langword="null" />이면 이 메서드는 빈 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-353">If the component is <see langword="null" />, this method returns an empty collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-354">반환 된 특성의 <xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A> extender 공급자가 나열 하는 구성 요소 원본에서 메서드를 동적으로 수정 될 수 있습니다 (<xref:System.ComponentModel.IExtenderProvider>), 서비스 필터 (<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>), 및 특성 필터입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-354">The attributes returned by the <xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A> method may be dynamically modified from the original components source listing by extender providers (<xref:System.ComponentModel.IExtenderProvider>), filter services (<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>), and attribute filters.</span></span>  
  
 <span data-ttu-id="fe0c3-355">와 사용자 지정 특성을 정의 하는 경우 <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> 로 설정 `true`를 재정의 해야 합니다는 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 속성을 고유 하 게 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-355">When you define a custom attribute with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> set to `true`, you must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property to make it unique.</span></span> <span data-ttu-id="fe0c3-356">특성의 모든 인스턴스가 되는 고유 재정의 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 하려면 특성의 개체 id를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-356">If all instances of your attribute are unique, override <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> to return the object identity of your attribute.</span></span> <span data-ttu-id="fe0c3-357">값을 반환 하는 경우에 특성의 일부 인스턴스가 고유 하므로 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 같음 이러한 경우에 반환 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-357">If only some instances of your attribute are unique, return a value from <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> that would return equality in those cases.</span></span> <span data-ttu-id="fe0c3-358">예를 들어 일부 특성에는 고유 키로 사용 하는 생성자 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-358">For example, some attributes have a constructor parameter that acts as a unique key.</span></span> <span data-ttu-id="fe0c3-359">이러한 특성에 대 한 생성자에서 매개 변수의 값을 반환 된 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-359">For these attributes, return the value of the constructor parameter from the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fe0c3-360">기본 구현 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 형식 id의 값에 관계 없이 반환 된 <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> 속성.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-360">The default implementation of <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> returns the type identity regardless of the value of the <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="fe0c3-361">여러 인스턴스를 반환 하려면는 <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> 에서 특성의 <xref:System.ComponentModel.AttributeCollection>, 사용자의 특성이 재정의 해야 합니다는 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-361">In order to return multiple instances of an <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> attribute from the <xref:System.ComponentModel.AttributeCollection>, your attribute must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.ComponentModel.AttributeCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetClassName">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fe0c3-362">지정된 구성 요소에 대한 클래스의 이름을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-362">Returns the name of the class for the specified component.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetClassName">
      <MemberSignature Language="C#" Value="public static string GetClassName (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetClassName(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetClassName (component As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetClassName(System::Object ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="fe0c3-363">클래스 이름을 가져올 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-363">The <see cref="T:System.Object" /> for which you want the class name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-364">기본 형식 설명자를 사용하여 지정된 구성 요소에 대한 클래스 이름을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-364">Returns the name of the class for the specified component using the default type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-365">지정된 구성 요소에 대한 클래스 이름을 포함하는 <see cref="T:System.String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-365">A <see cref="T:System.String" /> containing the name of the class for the specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-366">이 메서드는 전체를 반환 하는 일반적으로 <xref:System.Type> 이름을 `component` 매개 변수 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-366">Typically, this method returns the full <xref:System.Type> name for the `component` parameter type.</span></span> <span data-ttu-id="fe0c3-367">예를 들어 단추에 대 한 클래스 이름 "System.Windows.Forms.Button" 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-367">For example, the class name for a button is "System.Windows.Forms.Button".</span></span> <span data-ttu-id="fe0c3-368">경우 `component` 구현 <xref:System.ComponentModel.ICustomTypeDescriptor>, 대체 이름을 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-368">If `component` implements <xref:System.ComponentModel.ICustomTypeDescriptor>, it can return an alternate name.</span></span>  
  
 <span data-ttu-id="fe0c3-369">이 메서드는 해당 하는 오버 로드 된 <xref:System.ComponentModel.TypeDescriptor.GetClassName%28System.Object%2CSystem.Boolean%29> 의 두 번째 매개 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-369">This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetClassName%28System.Object%2CSystem.Boolean%29> method with a second parameter of `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fe0c3-370">
            <paramref name="component" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-370">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <Member MemberName="GetClassName">
      <MemberSignature Language="C#" Value="public static string GetClassName (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetClassName(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetClassName (componentType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetClassName(Type ^ componentType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="fe0c3-371">대상 구성 요소의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-371">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-372">지정된 형식에 대한 클래스의 이름을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-372">Returns the name of the class for the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-373">지정된 구성 요소 형식에 대한 클래스 이름을 포함하는 <see cref="T:System.String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-373">A <see cref="T:System.String" /> containing the name of the class for the specified component type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-374">이 메서드는 연결된 된 클래스 이름을 검색 하도록 지정된 된 형식에 대 한 캐시 된 사용자 지정 형식 설명자를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-374">This method uses the cached custom type descriptor for the specified type to discover the associated class name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fe0c3-375">
            <paramref name="componentType" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-375">
              <paramref name="componentType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <Member MemberName="GetClassName">
      <MemberSignature Language="C#" Value="public static string GetClassName (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetClassName(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetClassName (component As Object, noCustomTypeDesc As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetClassName(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="fe0c3-376">클래스 이름을 가져올 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-376">The <see cref="T:System.Object" /> for which you want the class name.</span>
          </span>
        </param>
        <param name="noCustomTypeDesc">
          <span data-ttu-id="fe0c3-377">사용자 지정 형식 설명 정보를 고려하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-377">
              <see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-378">사용자 지정 형식 설명자를 사용하여 지정된 구성 요소에 대한 클래스의 이름을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-378">Returns the name of the class for the specified component using a custom type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-379">지정된 구성 요소에 대한 클래스 이름을 포함하는 <see cref="T:System.String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-379">A <see cref="T:System.String" /> containing the name of the class for the specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-380">이 메서드는 전체를 반환 하는 일반적으로 <xref:System.Type> 이름을 `component` 매개 변수 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-380">Typically, this method returns the full <xref:System.Type> name for the `component` parameter type.</span></span> <span data-ttu-id="fe0c3-381">예를 들어 단추에 대 한 클래스 이름 "System.Windows.Forms.Button" 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-381">For example, the class name for a button is "System.Windows.Forms.Button".</span></span> <span data-ttu-id="fe0c3-382">경우는 `component` 매개 변수를 구현 <xref:System.ComponentModel.ICustomTypeDescriptor>, 대체 이름을 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-382">If the `component` parameter implements <xref:System.ComponentModel.ICustomTypeDescriptor>, it can return an alternate name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fe0c3-383">
            <paramref name="component" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-383">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fe0c3-384">
            <paramref name="component" />가 크로스 프로세스 원격 개체인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-384">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetClassName" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetComponentName">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fe0c3-385">지정된 구성 요소의 이름을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-385">Returns the name of the specified component.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetComponentName">
      <MemberSignature Language="C#" Value="public static string GetComponentName (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetComponentName(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComponentName (component As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetComponentName(System::Object ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="fe0c3-386">클래스 이름을 가져올 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-386">The <see cref="T:System.Object" /> for which you want the class name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-387">기본 형식 설명자를 사용하여 지정된 구성 요소의 이름을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-387">Returns the name of the specified component using the default type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-388">지정된 구성 요소의 이름을 포함하는 <see cref="T:System.String" />이거나 구성 요소 이름이 없으면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-388">A <see cref="T:System.String" /> containing the name of the specified component, or <see langword="null" /> if there is no component name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-389">일반적으로이 메서드는 있는 경우 구성 요소를 사이트에 대 한 이름을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-389">Typically, this method returns the name for the site of the component, if one exists.</span></span> <span data-ttu-id="fe0c3-390">예를 들어 단추에 대 한 클래스 이름 "System.Windows.Forms.Button" 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-390">For example, the class name for a button is "System.Windows.Forms.Button".</span></span>  
  
 <span data-ttu-id="fe0c3-391">이 메서드는 해당 하는 오버 로드 된 <xref:System.ComponentModel.TypeDescriptor.GetComponentName%28System.Object%2CSystem.Boolean%29> 의 두 번째 매개 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-391">This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetComponentName%28System.Object%2CSystem.Boolean%29> method with a second parameter of `false`.</span></span>  
  
 <span data-ttu-id="fe0c3-392">이 메서드는 디자인 타임에는 구성 요소의 인스턴스 이름을 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-392">This method is used at design time to retrieve the name of an instance of a component.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fe0c3-393">
            <paramref name="component" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-393">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fe0c3-394">
            <paramref name="component" />가 크로스 프로세스 원격 개체인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-394">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <Member MemberName="GetComponentName">
      <MemberSignature Language="C#" Value="public static string GetComponentName (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetComponentName(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComponentName (component As Object, noCustomTypeDesc As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetComponentName(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="fe0c3-395">클래스 이름을 가져올 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-395">The <see cref="T:System.Object" /> for which you want the class name.</span>
          </span>
        </param>
        <param name="noCustomTypeDesc">
          <span data-ttu-id="fe0c3-396">사용자 지정 형식 설명 정보를 고려하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-396">
              <see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-397">사용자 지정 형식 설명자를 사용하여 지정된 구성 요소의 이름을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-397">Returns the name of the specified component using a custom type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-398">지정된 구성 요소에 대한 클래스 이름이거나, 구성 요소 이름이 없으면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-398">The name of the class for the specified component, or <see langword="null" /> if there is no component name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-399">이 메서드는 디자인 타임에는 구성 요소의 인스턴스 이름을 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-399">This method is used at design time to retrieve the name of an instance of a component.</span></span> <span data-ttu-id="fe0c3-400">일반적으로이 메서드는 있는 경우 구성 요소를 사이트에 대 한 이름을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-400">Typically, this method returns the name for the site of the component, if one exists.</span></span> <span data-ttu-id="fe0c3-401">예를 들어 단추에 대 한 클래스 이름 "System.Windows.Forms.Button" 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-401">For example, the class name for a button is "System.Windows.Forms.Button".</span></span> <span data-ttu-id="fe0c3-402">구성 요소를 구현 하는 경우는 <xref:System.ComponentModel.ICustomTypeDescriptor> 인터페이스를 대체 이름을 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-402">If the component implements the <xref:System.ComponentModel.ICustomTypeDescriptor> interface, it can return an alternate name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fe0c3-403">
            <paramref name="component" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-403">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fe0c3-404">
            <paramref name="component" />가 크로스 프로세스 원격 개체인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-404">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetComponentName" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetConverter">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fe0c3-405">구성 요소 또는 형식에 대한 형식 변환자를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-405">Returns a type converter for a component or a type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetConverter">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeConverter GetConverter (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeConverter GetConverter(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetConverter (component As Object) As TypeConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeConverter ^ GetConverter(System::Object ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="fe0c3-406">변환기를 가져올 구성 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-406">A component to get the converter for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-407">지정된 구성 요소의 형식에 대한 형식 변환자를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-407">Returns a type converter for the type of the specified component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-408">지정된 구성 요소에 대한 <see cref="T:System.ComponentModel.TypeConverter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-408">A <see cref="T:System.ComponentModel.TypeConverter" /> for the specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-409">이 메서드를 검색 하 여 적절 한 형식 변환기를 찾습니다는 <xref:System.ComponentModel.TypeConverterAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-409">This method locates an appropriate type converter by looking for a <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="fe0c3-410">찾을 수 없는 경우는 <xref:System.ComponentModel.TypeConverterAttribute>, 기본 형식의 찾을 때까지 클래스의 기본 클래스 계층 구조를 통과 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-410">If it cannot find a <xref:System.ComponentModel.TypeConverterAttribute>, it traverses the base class hierarchy of the class until it finds a primitive type.</span></span>  
  
 <span data-ttu-id="fe0c3-411">이 메서드는 해당 하는 오버 로드 된 <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> 의 두 번째 매개 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-411">This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method with a second parameter of `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe0c3-412">이 메서드를 사용 하는 예제를 참조 하십시오.는 <xref:System.ComponentModel.TypeConverter> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-412">For an example of using this method, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fe0c3-413">
            <paramref name="component" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-413">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fe0c3-414">
            <paramref name="component" />가 크로스 프로세스 원격 개체인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-414">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetConverter">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeConverter GetConverter (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeConverter GetConverter(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeConverter ^ GetConverter(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="fe0c3-415">대상 구성 요소의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-415">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-416">지정된 형식에 대한 형식 변환자를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-416">Returns a type converter for the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-417">지정된 형식에 대한 <see cref="T:System.ComponentModel.TypeConverter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-417">A <see cref="T:System.ComponentModel.TypeConverter" /> for the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-418">개체의 인스턴스가 없는 경우에이 버전의이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-418">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="fe0c3-419">검색 하 여 적절 한 형식 변환기에 대 한이 메서드를 찾습니다는 <xref:System.ComponentModel.TypeConverterAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-419">This method looks for the appropriate type converter by looking for a <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="fe0c3-420">찾을 수 없는 경우는 <xref:System.ComponentModel.TypeConverterAttribute>, 기본 형식의 찾을 때까지 클래스의 기본 클래스 계층 구조를 통과 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-420">If it cannot find a <xref:System.ComponentModel.TypeConverterAttribute>, it traverses the base class hierarchy of the class until it finds a primitive type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fe0c3-421">
            <paramref name="type" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-421">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetConverter">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeConverter GetConverter (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeConverter GetConverter(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetConverter (component As Object, noCustomTypeDesc As Boolean) As TypeConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeConverter ^ GetConverter(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="fe0c3-422">변환기를 가져올 구성 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-422">A component to get the converter for.</span>
          </span>
        </param>
        <param name="noCustomTypeDesc">
          <span data-ttu-id="fe0c3-423">사용자 지정 형식 설명 정보를 고려하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-423">
              <see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-424">사용자 지정 형식 설명자를 사용하여 지정된 구성 요소의 형식에 대한 형식 변환자를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-424">Returns a type converter for the type of the specified component with a custom type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-425">지정된 구성 요소에 대한 <see cref="T:System.ComponentModel.TypeConverter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-425">A <see cref="T:System.ComponentModel.TypeConverter" /> for the specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-426">이 메서드를 찾으려고 시도 하 여 적절 한 형식 변환기에 대 한 찾습니다는 <xref:System.ComponentModel.TypeConverterAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-426">This method looks for the appropriate type converter by trying to find a <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="fe0c3-427">찾을 수 없는 경우는 <xref:System.ComponentModel.TypeConverterAttribute>, 기본 형식의 찾을 때까지 클래스의 기본 클래스 계층 구조를 통과 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-427">If it cannot find a <xref:System.ComponentModel.TypeConverterAttribute>, it traverses the base class hierarchy of the class until it finds a primitive type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fe0c3-428">
            <paramref name="component" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-428">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fe0c3-429">
            <paramref name="component" />가 크로스 프로세스 원격 개체인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-429">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDefaultEvent">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fe0c3-430">구성 요소 또는 형식에 대한 기본 이벤트를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-430">Returns the default event for a component or type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDefaultEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor GetDefaultEvent (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor GetDefaultEvent(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultEvent (component As Object) As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ GetDefaultEvent(System::Object ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="fe0c3-431">이벤트를 가져올 구성 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-431">The component to get the event for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-432">지정된 구성 요소에 대한 기본 이벤트를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-432">Returns the default event for the specified component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-433">기본 이벤트가 포함된 <see cref="T:System.ComponentModel.EventDescriptor" />이거나, 이벤트가 없으면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-433">An <see cref="T:System.ComponentModel.EventDescriptor" /> with the default event, or <see langword="null" /> if there are no events.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-434">이 메서드는 해당 하는 오버 로드 된 <xref:System.ComponentModel.TypeDescriptor.GetDefaultEvent%28System.Object%2CSystem.Boolean%29> 의 두 번째 매개 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-434">This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetDefaultEvent%28System.Object%2CSystem.Boolean%29> method with a second parameter of `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fe0c3-435">
            <paramref name="component" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-435">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fe0c3-436">
            <paramref name="component" />가 크로스 프로세스 원격 개체인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-436">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.DefaultEventAttribute" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor GetDefaultEvent (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor GetDefaultEvent(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultEvent (componentType As Type) As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ GetDefaultEvent(Type ^ componentType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="fe0c3-437">대상 구성 요소의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-437">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-438">지정된 구성 요소 형식의 기본 이벤트를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-438">Returns the default event for the specified type of component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-439">기본 이벤트가 포함된 <see cref="T:System.ComponentModel.EventDescriptor" />이거나, 이벤트가 없으면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-439">An <see cref="T:System.ComponentModel.EventDescriptor" /> with the default event, or <see langword="null" /> if there are no events.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-440">개체의 인스턴스가 없는 경우에이 버전의이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-440">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fe0c3-441">
            <paramref name="componentType" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-441">
              <paramref name="componentType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.DefaultEventAttribute" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor GetDefaultEvent (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor GetDefaultEvent(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultEvent (component As Object, noCustomTypeDesc As Boolean) As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ GetDefaultEvent(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="fe0c3-442">이벤트를 가져올 구성 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-442">The component to get the event for.</span>
          </span>
        </param>
        <param name="noCustomTypeDesc">
          <span data-ttu-id="fe0c3-443">사용자 지정 형식 설명 정보를 고려하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-443">
              <see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-444">사용자 지정 형식 설명자를 사용하여 구성 요소에 대한 기본 이벤트를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-444">Returns the default event for a component with a custom type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-445">기본 이벤트가 포함된 <see cref="T:System.ComponentModel.EventDescriptor" />이거나, 이벤트가 없으면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-445">An <see cref="T:System.ComponentModel.EventDescriptor" /> with the default event, or <see langword="null" /> if there are no events.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fe0c3-446">
            <paramref name="component" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-446">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fe0c3-447">
            <paramref name="component" />가 크로스 프로세스 원격 개체인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-447">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.DefaultEventAttribute" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDefaultProperty">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fe0c3-448">구성 요소에 대한 기본 속성을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-448">Returns the default property for a component.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDefaultProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor GetDefaultProperty (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor GetDefaultProperty(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultProperty (component As Object) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ GetDefaultProperty(System::Object ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="fe0c3-449">기본 속성을 가져올 구성 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-449">The component to get the default property for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-450">지정된 구성 요소의 기본 속성을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-450">Returns the default property for the specified component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-451">기본 속성이 포함된 <see cref="T:System.ComponentModel.PropertyDescriptor" />이거나, 속성이 없으면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-451">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> with the default property, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-452">경우는 `component` 매개 변수는 `null`,이 메서드가 반환 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-452">If the `component` parameter is `null`, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fe0c3-453">
            <paramref name="component" />가 크로스 프로세스 원격 개체인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-453">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.DefaultPropertyAttribute" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor GetDefaultProperty (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor GetDefaultProperty(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultProperty (componentType As Type) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ GetDefaultProperty(Type ^ componentType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="fe0c3-454">관련된 속성을 가져올 클래스를 나타내는 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-454">A <see cref="T:System.Type" /> that represents the class to get the property for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-455">지정된 구성 요소 형식의 기본 속성을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-455">Returns the default property for the specified type of component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-456">기본 속성이 포함된 <see cref="T:System.ComponentModel.PropertyDescriptor" />이거나, 속성이 없으면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-456">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> with the default property, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-457">개체의 인스턴스가 없는 경우에이 버전의이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-457">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="fe0c3-458">경우는 `componentType` 매개 변수는 `null`,이 메서드가 반환 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-458">If the `componentType` parameter is `null`, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DefaultPropertyAttribute" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor GetDefaultProperty (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor GetDefaultProperty(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultProperty (component As Object, noCustomTypeDesc As Boolean) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ GetDefaultProperty(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="fe0c3-459">기본 속성을 가져올 구성 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-459">The component to get the default property for.</span>
          </span>
        </param>
        <param name="noCustomTypeDesc">
          <span data-ttu-id="fe0c3-460">사용자 지정 형식 설명 정보를 고려하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-460">
              <see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-461">사용자 지정 설명자가 있는 지정된 구성 요소에 대한 기본 속성을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-461">Returns the default property for the specified component with a custom type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-462">기본 속성이 포함된 <see cref="T:System.ComponentModel.PropertyDescriptor" />이거나, 속성이 없으면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-462">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> with the default property, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-463">경우는 `component` 매개 변수는 `null`,이 메서드가 반환 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-463">If the `component` parameter is `null`, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fe0c3-464">
            <paramref name="component" />가 크로스 프로세스 원격 개체인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-464">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.DefaultPropertyAttribute" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEditor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fe0c3-465">지정한 기본 형식의 편집기를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-465">Returns an editor with the specified base type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEditor">
      <MemberSignature Language="C#" Value="public static object GetEditor (object component, Type editorBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetEditor(object component, class System.Type editorBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEditor (component As Object, editorBaseType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetEditor(System::Object ^ component, Type ^ editorBaseType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="editorBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="fe0c3-466">편집기를 가져올 구성 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-466">The component to get the editor for.</span>
          </span>
        </param>
        <param name="editorBaseType">
          <span data-ttu-id="fe0c3-467">찾을 편집기의 기본 형식을 나타내는 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-467">A <see cref="T:System.Type" /> that represents the base type of the editor you want to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-468">지정된 구성 요소에 대해 지정된 기본 형식을 사용하는 편집기를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-468">Gets an editor with the specified base type for the specified component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-469">지정된 편집기 형식으로 캐스팅될 수 있는 편집기의 인스턴스이거나, 요청된 형식의 편집기가 없으면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-469">An instance of the editor that can be cast to the specified editor type, or <see langword="null" /> if no editor of the requested type can be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-470">유형의 `editorBaseType` 는 일반적으로 <xref:System.Drawing.Design.UITypeEditor>, 하지만 다른 형식을 사용할 수 있습니다 (예를 들어 <xref:System.ComponentModel.ComponentEditor> 및 <xref:System.ComponentModel.InstanceCreationEditor>).</span><span class="sxs-lookup"><span data-stu-id="fe0c3-470">The type of `editorBaseType` is usually <xref:System.Drawing.Design.UITypeEditor>, but you can also use other types (for example, <xref:System.ComponentModel.ComponentEditor> and <xref:System.ComponentModel.InstanceCreationEditor>).</span></span>  
  
 <span data-ttu-id="fe0c3-471">속성에 대 한 여러 명의 편집기를 정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-471">You can define multiple editors for a property.</span></span> <span data-ttu-id="fe0c3-472">이 메서드를 사용 하 여는 데 사용할 편집기를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-472">You use this method to select the editor you want to use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fe0c3-473">
            <paramref name="component" /> 또는 <paramref name="editorBaseType" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-473">
              <paramref name="component" /> or <paramref name="editorBaseType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fe0c3-474">
            <paramref name="component" />가 크로스 프로세스 원격 개체인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-474">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetEditor">
      <MemberSignature Language="C#" Value="public static object GetEditor (Type type, Type editorBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetEditor(class System.Type type, class System.Type editorBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetEditor(Type ^ type, Type ^ editorBaseType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="editorBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="fe0c3-475">대상 구성 요소의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-475">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <param name="editorBaseType">
          <span data-ttu-id="fe0c3-476">찾으려는 편집기의 기본 형식을 나타내는 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-476">A <see cref="T:System.Type" /> that represents the base type of the editor you are trying to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-477">지정된 형식에 대해 지정된 기본 형식을 사용하는 편집기를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-477">Returns an editor with the specified base type for the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-478">지정된 기본 형식으로 캐스팅될 수 있는 편집기 개체의 인스턴스이거나, 요청된 형식의 편집기가 없으면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-478">An instance of the editor object that can be cast to the given base type, or <see langword="null" /> if no editor of the requested type can be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-479">유형의 `editorBaseType` 는 일반적으로 <xref:System.Drawing.Design.UITypeEditor>, 하지만 다른 형식을 사용할 수 있습니다 (예를 들어 <xref:System.ComponentModel.ComponentEditor> 및 <xref:System.ComponentModel.InstanceCreationEditor>).</span><span class="sxs-lookup"><span data-stu-id="fe0c3-479">The type of `editorBaseType` is usually <xref:System.Drawing.Design.UITypeEditor>, but you can also use other types (for example <xref:System.ComponentModel.ComponentEditor> and <xref:System.ComponentModel.InstanceCreationEditor>).</span></span>  
  
 <span data-ttu-id="fe0c3-480">형식에 대해 여러 명의 편집기를 정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-480">You can define multiple editors for a type.</span></span> <span data-ttu-id="fe0c3-481">이 메서드를 사용 하 여 사용 하려는 항목을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-481">You use this method to select the one you want to use.</span></span>  
  
 <span data-ttu-id="fe0c3-482">개체의 인스턴스가 없는 경우에이 버전의이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-482">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fe0c3-483">
            <paramref name="type" /> 또는 <paramref name="editorBaseType" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-483">
              <paramref name="type" /> or <paramref name="editorBaseType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetEditor">
      <MemberSignature Language="C#" Value="public static object GetEditor (object component, Type editorBaseType, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetEditor(object component, class System.Type editorBaseType, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEditor (component As Object, editorBaseType As Type, noCustomTypeDesc As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetEditor(System::Object ^ component, Type ^ editorBaseType, bool noCustomTypeDesc);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="editorBaseType" Type="System.Type" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="fe0c3-484">편집기를 가져올 구성 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-484">The component to get the editor for.</span>
          </span>
        </param>
        <param name="editorBaseType">
          <span data-ttu-id="fe0c3-485">찾을 편집기의 기본 형식을 나타내는 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-485">A <see cref="T:System.Type" /> that represents the base type of the editor you want to find.</span>
          </span>
        </param>
        <param name="noCustomTypeDesc">
          <span data-ttu-id="fe0c3-486">사용자 지정 형식 설명 정보를 고려할지 여부를 나타내는 플래그입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-486">A flag indicating whether custom type description information should be considered.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-487">지정된 구성 요소에 대한 지정된 기본 형식 및 사용자 지정 형식 설명자를 사용하여 편집기를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-487">Returns an editor with the specified base type and with a custom type descriptor for the specified component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-488">지정된 편집기 형식으로 캐스팅될 수 있는 편집기의 인스턴스이거나, 요청된 형식의 편집기가 없으면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-488">An instance of the editor that can be cast to the specified editor type, or <see langword="null" /> if no editor of the requested type can be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-489">유형의 `editorBaseType` 는 일반적으로 <xref:System.Drawing.Design.UITypeEditor>, 하지만 다른 형식을 사용할 수 있습니다 (예를 들어 <xref:System.ComponentModel.ComponentEditor> 및 <xref:System.ComponentModel.InstanceCreationEditor>).</span><span class="sxs-lookup"><span data-stu-id="fe0c3-489">The type of `editorBaseType` is usually <xref:System.Drawing.Design.UITypeEditor>, but you can also use other types (for example <xref:System.ComponentModel.ComponentEditor> and <xref:System.ComponentModel.InstanceCreationEditor>).</span></span>  
  
 <span data-ttu-id="fe0c3-490">속성에 대 한 여러 명의 편집기를 정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-490">You can define multiple editors for a property.</span></span> <span data-ttu-id="fe0c3-491">이 메서드를 사용 하 여는 데 사용할 편집기를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-491">You use this method to select the editor you want to use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fe0c3-492">
            <paramref name="component" /> 또는 <paramref name="editorBaseType" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-492">
              <paramref name="component" /> or <paramref name="editorBaseType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fe0c3-493">
            <paramref name="component" />가 크로스 프로세스 원격 개체인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-493">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvents">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fe0c3-494">구성 요소 또는 형식에 대한 이벤트 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-494">Returns the collection of events for a component or type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (component As Object) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(System::Object ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="fe0c3-495">이벤트를 가져올 구성 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-495">A component to get the events for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-496">지정된 구성 요소에 대한 이벤트 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-496">Returns the collection of events for the specified component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-497">이 구성 요소에 대한 이벤트가 들어 있는 <see cref="T:System.ComponentModel.EventDescriptorCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-497">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events for this component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-498">이벤트의 컬렉션을 검색 하는 지정 된 `component` 매개 변수 인스턴스를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-498">Retrieves a collection of events that the given `component` parameter instance provides.</span></span> <span data-ttu-id="fe0c3-499">이 컬렉션 클래스를 제공 하는 이벤트 집합이 다를 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-499">This collection can differ from the set of events the class provides.</span></span> <span data-ttu-id="fe0c3-500">경우는 `component` 매개 변수 사이 팅, 사이트에 추가 하거나 추가 이벤트를 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-500">If the `component` parameter is sited, the site can add or remove additional events.</span></span>  
  
 <span data-ttu-id="fe0c3-501">경우 `component` 은 `null`, 빈 컬렉션이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-501">If `component` is `null`, then an empty collection is returned.</span></span>  
  
 <span data-ttu-id="fe0c3-502">호출에 따라 달라질 수 있으므로 항상 사용 하기 전에 주문, 반환된 된 컬렉션의 순서는 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-502">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe0c3-503">이 방법의 예제를 보려면는 <xref:System.ComponentModel.EventDescriptorCollection.Count%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-503">For an example of this method, see the <xref:System.ComponentModel.EventDescriptorCollection.Count%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fe0c3-504">
            <paramref name="component" />가 크로스 프로세스 원격 개체인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-504">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (componentType As Type) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(Type ^ componentType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="fe0c3-505">대상 구성 요소의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-505">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-506">지정된 구성 요소 형식에 대한 이벤트 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-506">Returns the collection of events for a specified type of component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-507">이 구성 요소에 대한 이벤트가 들어 있는 <see cref="T:System.ComponentModel.EventDescriptorCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-507">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events for this component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-508">개체의 인스턴스가 없는 경우에이 버전의이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-508">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="fe0c3-509">경우는 `componentType` 매개 변수는 `null`, 빈 컬렉션이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-509">If the `componentType` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="fe0c3-510">호출에 따라 달라질 수 있으므로 항상 사용 하기 전에 주문, 반환된 된 컬렉션의 순서는 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-510">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (object component, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(object component, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (component As Object, attributes As Attribute()) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(System::Object ^ component, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="fe0c3-511">이벤트를 가져올 구성 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-511">A component to get the events for.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="fe0c3-512">필터로 사용할 수 있는 <see cref="T:System.Attribute" /> 형식의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-512">An array of type <see cref="T:System.Attribute" /> that you can use as a filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-513">특성의 지정된 배열을 필터로 사용하여 지정된 구성 요소에 대한 이벤트 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-513">Returns the collection of events for a specified component using a specified array of attributes as a filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-514">이 구성 요소의 지정된 특성과 일치하는 이벤트가 들어 있는 <see cref="T:System.ComponentModel.EventDescriptorCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-514">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events that match the specified attributes for this component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-515">에 대 한 이벤트는 `component` 사이트 추가 또는 경우 이벤트를 제거할 수 있으므로 매개 변수는 클래스의 이벤트에서 달라질 수 있습니다는 `component` 매개 변수 사이 팅입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-515">The events for the `component` parameter can differ from the events of a class, because the site can add or remove events if the `component` parameter is sited.</span></span>  
  
 <span data-ttu-id="fe0c3-516">`attributes` 배열을 함께 사용할 수 있습니다 <xref:System.Type> 및 <xref:System.Attribute> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-516">The `attributes` array can have a mix of <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="fe0c3-517">필터링은 다음 규칙에 의해 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-517">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="fe0c3-518">A <xref:System.Type> 와일드 카드;로 처리 됩니다 처리 되며 일치는 <xref:System.Type> 해당 특성 집합에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-518">A <xref:System.Type> is treated as a wildcard; it matches any event that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="fe0c3-519">이벤트에 없는 경우는 <xref:System.Attribute> 동일한 클래스의 이벤트는 반환 된 배열에 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-519">If an event does not have an <xref:System.Attribute> of the same class, the event is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="fe0c3-520">특성의 인스턴스 라면는 <xref:System.Attribute> 클래스는 이벤트에는 정확히 일치 해야 합니다. 또는 반환된 된 배열에 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-520">If the attribute is an instance of the <xref:System.Attribute> class, the event must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="fe0c3-521">경우는 <xref:System.Attribute> 인스턴스를 지정 하 고 기본 이벤트의 인스턴스가 없는 경우에 반환된 된 배열에 포함 되어는 <xref:System.Attribute> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-521">If an <xref:System.Attribute> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the event.</span></span>  
  
 <span data-ttu-id="fe0c3-522">경우 `component` 은 `null`, 빈 컬렉션이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-522">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="fe0c3-523">호출에 따라 달라질 수 있으므로 항상 사용 하기 전에 주문, 반환된 된 컬렉션의 순서는 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-523">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fe0c3-524">
            <paramref name="component" />가 크로스 프로세스 원격 개체인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-524">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (component As Object, noCustomTypeDesc As Boolean) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="fe0c3-525">이벤트를 가져올 구성 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-525">A component to get the events for.</span>
          </span>
        </param>
        <param name="noCustomTypeDesc">
          <span data-ttu-id="fe0c3-526">사용자 지정 형식 설명 정보를 고려하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-526">
              <see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-527">사용자 지정 형식 설명자가 있는 지정된 구성 요소에 대한 이벤트 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-527">Returns the collection of events for a specified component with a custom type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-528">이 구성 요소에 대한 이벤트가 들어 있는 <see cref="T:System.ComponentModel.EventDescriptorCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-528">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events for this component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-529">이 메서드는 이벤트의 컬렉션을 검색 하는 지정 된 `component` 매개 변수 인스턴스를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-529">This method retrieves a collection of events that the given `component` parameter instance provides.</span></span> <span data-ttu-id="fe0c3-530">이 클래스를 제공 하는 이벤트 집합에서 다를 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-530">This can differ from the set of events the class provides.</span></span> <span data-ttu-id="fe0c3-531">경우는 `component` 매개 변수 사이 팅, 사이트에 추가 하거나 추가 이벤트를 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-531">If the `component` parameter is sited, the site can add or remove additional events.</span></span>  
  
 <span data-ttu-id="fe0c3-532">경우 `component` 은 `null`, 빈 컬렉션이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-532">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="fe0c3-533">호출에 따라 달라질 수 있으므로 항상 사용 하기 전에 주문, 반환된 된 컬렉션의 순서는 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-533">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fe0c3-534">
            <paramref name="component" />가 크로스 프로세스 원격 개체인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-534">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (Type componentType, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(class System.Type componentType, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (componentType As Type, attributes As Attribute()) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(Type ^ componentType, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="fe0c3-535">대상 구성 요소의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-535">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="fe0c3-536">필터로 사용할 수 있는 <see cref="T:System.Attribute" /> 형식의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-536">An array of type <see cref="T:System.Attribute" /> that you can use as a filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-537">특성의 지정된 배열을 필터로 사용하여 구성 요소의 지정된 형식에 대한 이벤트 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-537">Returns the collection of events for a specified type of component using a specified array of attributes as a filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-538">이 구성 요소의 지정된 특성과 일치하는 이벤트가 들어 있는 <see cref="T:System.ComponentModel.EventDescriptorCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-538">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events that match the specified attributes for this component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-539">개체의 인스턴스가 없는 경우에이 버전의이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-539">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="fe0c3-540">`attributes` 매개 변수 배열에는 혼합 되어 수 <xref:System.Type> 및 <xref:System.Attribute> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-540">The `attributes` parameter array can have a mix of <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="fe0c3-541">필터링은 다음 규칙에 의해 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-541">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="fe0c3-542">A <xref:System.Type> 와일드 카드;로 처리 됩니다 처리 되며 일치는 <xref:System.Type> 해당 특성 집합에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-542">A <xref:System.Type> is treated as a wildcard; it matches any event that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="fe0c3-543">이벤트에 없는 경우는 <xref:System.Attribute> 동일한 클래스의 이벤트는 반환 된 배열에 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-543">If an event does not have an <xref:System.Attribute> of the same class, the event is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="fe0c3-544">특성의 인스턴스 라면는 <xref:System.Attribute> 클래스는 이벤트에는 정확히 일치 해야 합니다. 또는 반환된 된 배열에 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-544">If the attribute is an instance of the <xref:System.Attribute> class, the event must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="fe0c3-545">경우는 <xref:System.Attribute> 인스턴스를 지정 하 고 기본 이벤트의 인스턴스가 없는 경우에 반환된 된 배열에 포함 되어는 <xref:System.Attribute> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-545">If an <xref:System.Attribute> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the event.</span></span>  
  
 <span data-ttu-id="fe0c3-546">경우는 `componentType` 매개 변수는 `null`, 빈 컬렉션이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-546">If the `componentType` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="fe0c3-547">호출에 따라 달라질 수 있으므로 항상 사용 하기 전에 주문, 반환된 된 컬렉션의 순서는 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-547">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (object component, Attribute[] attributes, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(object component, class System.Attribute[] attributes, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (component As Object, attributes As Attribute(), noCustomTypeDesc As Boolean) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(System::Object ^ component, cli::array &lt;Attribute ^&gt; ^ attributes, bool noCustomTypeDesc);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="fe0c3-548">이벤트를 가져올 구성 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-548">A component to get the events for.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="fe0c3-549">필터로 사용할 <see cref="T:System.Attribute" /> 형식의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-549">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span>
          </span>
        </param>
        <param name="noCustomTypeDesc">
          <span data-ttu-id="fe0c3-550">사용자 지정 형식 설명 정보를 고려하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-550">
              <see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-551">지정한 특성 배열을 필터로 사용하고 사용자 지정 특성 설명자를 사용하여 지정된 구성 요소에 대한 이벤트 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-551">Returns the collection of events for a specified component using a specified array of attributes as a filter and using a custom type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-552">이 구성 요소의 지정된 특성과 일치하는 이벤트가 들어 있는 <see cref="T:System.ComponentModel.EventDescriptorCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-552">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events that match the specified attributes for this component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-553">에 대 한 이벤트는 `component` 사이트 추가 또는 경우 이벤트를 제거할 수 있으므로 매개 변수는 클래스의 이벤트에서 달라질 수 있습니다는 `component` 매개 변수 사이 팅입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-553">The events for the `component` parameter can differ from the events of a class, because the site can add or remove events if the `component` parameter is sited.</span></span>  
  
 <span data-ttu-id="fe0c3-554">`attributes` 매개 변수 배열에는 혼합 되어 수 <xref:System.Type> 및 <xref:System.Attribute> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-554">The `attributes` parameter array can have a mix of <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="fe0c3-555">필터링은 다음 규칙에 의해 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-555">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="fe0c3-556">A <xref:System.Type> 와일드 카드;로 처리 됩니다 처리 되며 일치는 <xref:System.Type> 해당 특성 집합에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-556">A <xref:System.Type> is treated as a wildcard; it matches any event that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="fe0c3-557">이벤트에 없는 경우는 <xref:System.Attribute> 동일한 클래스의 이벤트는 반환 된 배열에 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-557">If an event does not have an <xref:System.Attribute> of the same class, the event is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="fe0c3-558">특성의 인스턴스 라면는 <xref:System.Attribute> 클래스는 이벤트에는 정확히 일치 해야 합니다. 또는 반환된 된 배열에 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-558">If the attribute is an instance of the <xref:System.Attribute> class, the event must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="fe0c3-559">경우는 <xref:System.Attribute> 인스턴스를 지정 하 고 기본 이벤트의 인스턴스가 없는 경우에 반환된 된 배열에 포함 되어는 <xref:System.Attribute> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-559">If an <xref:System.Attribute> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the event.</span></span>  
  
 <span data-ttu-id="fe0c3-560">경우 `component` 은 `null`, 빈 컬렉션이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-560">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="fe0c3-561">호출에 따라 달라질 수 있으므로 항상 사용 하기 전에 주문, 반환된 된 컬렉션의 순서는 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-561">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fe0c3-562">
            <paramref name="component" />가 크로스 프로세스 원격 개체인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-562">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetFullComponentName">
      <MemberSignature Language="C#" Value="public static string GetFullComponentName (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFullComponentName(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFullComponentName (component As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFullComponentName(System::Object ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="fe0c3-563">이름을 찾을 <see cref="T:System.ComponentModel.Component" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-563">The <see cref="T:System.ComponentModel.Component" /> to find the name for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-564">구성 요소의 정규화된 이름을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-564">Returns the fully qualified name of the component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-565">지정된 구성 요소의 정규화된 이름이거나, 구성 요소에 이름이 없으면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-565">The fully qualified name of the specified component, or <see langword="null" /> if the component has no name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-566">대부분의 경우에서는 <xref:System.ComponentModel.TypeDescriptor.GetFullComponentName%2A> 메서드는 동일한 값으로 반환 됩니다는 <xref:System.ComponentModel.TypeDescriptor.GetComponentName%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-566">In many cases, the <xref:System.ComponentModel.TypeDescriptor.GetFullComponentName%2A> method will return the same value as the <xref:System.ComponentModel.TypeDescriptor.GetComponentName%2A> method.</span></span> <span data-ttu-id="fe0c3-567">그러나 경우 구성 요소는 중첩 된 컨테이너에 있는 중첩 된 다른 의미 체계, 다른 정규화 된 이름을 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-567">However, if the component resides in a nested container or has other nested semantics, it may return a different fully qualified name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fe0c3-568">
            <paramref name="component" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-568">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperties">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fe0c3-569">구성 요소 또는 형식에 대한 속성 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-569">Returns the collection of properties on a component or type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (component As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="fe0c3-570">속성을 가져올 구성 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-570">A component to get the properties for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-571">지정된 구성 요소에 대한 속성 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-571">Returns the collection of properties for a specified component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-572">지정된 구성 요소의 속성이 포함된 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-572">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties for the specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-573">구성 요소에 대 한 속성 다를 수 있습니다는 클래스의 속성에서 사이트를 추가 하거나 구성 요소 사이 팅 하는 경우 속성을 제거 하기 때문에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-573">The properties for a component can differ from the properties of a class, because the site can add or remove properties if the component is sited.</span></span>  
  
 <span data-ttu-id="fe0c3-574">경우는 `component` 매개 변수는 `null`, 빈 컬렉션이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-574">If the `component` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="fe0c3-575">호출에 따라 달라질 수 있으므로 항상 사용 하기 전에 주문, 반환된 된 컬렉션의 순서는 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-575">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe0c3-576">다음 코드 예제에서는 <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> 컨트롤의 속성에 액세스 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-576">The following code example demonstrates the use of the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method to access the properties of a control.</span></span> <span data-ttu-id="fe0c3-577">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.ComponentModel.Design.ComponentDesigner> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-577">This code example is part of a larger example provided for the <xref:System.ComponentModel.Design.ComponentDesigner> class.</span></span>  
  
 [!code-csharp[System.ComponentModel.Design.DesignerServices#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerServices/CS/Form1.cs#8)]
 [!code-vb[System.ComponentModel.Design.DesignerServices#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerServices/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fe0c3-578">
            <paramref name="component" />가 크로스 프로세스 원격 개체인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-578">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (componentType As Type) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(Type ^ componentType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="fe0c3-579">관련된 속성을 가져올 구성 요소를 나타내는 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-579">A <see cref="T:System.Type" /> that represents the component to get properties for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-580">구성 요소의 지정된 형식의 대한 속성의 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-580">Returns the collection of properties for a specified type of component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-581">지정된 구성 요소 형식에 대한 속성이 포함된 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-581">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties for a specified type of component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-582">개체의 인스턴스가 없는 경우에이 버전의이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-582">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="fe0c3-583">경우는 `componentType` 매개 변수는 `null`, 빈 컬렉션이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-583">If the `componentType` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="fe0c3-584">호출에 따라 달라질 수 있으므로 항상 사용 하기 전에 주문, 반환된 된 컬렉션의 순서는 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-584">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(object component, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (component As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ component, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="fe0c3-585">속성을 가져올 구성 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-585">A component to get the properties for.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="fe0c3-586">필터로 사용할 <see cref="T:System.Attribute" /> 형식의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-586">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-587">지정한 특성 배열을 필터로 사용하여 지정된 구성 요소에 대한 속성 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-587">Returns the collection of properties for a specified component using a specified array of attributes as a filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-588">지정된 구성 요소의 지정된 특성과 일치하는 속성이 포함된 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-588">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that match the specified attributes for the specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-589">에 대 한 속성의 `component` 사이트를 추가 하거나 경우 속성을 제거 하기 때문에 매개 변수는 클래스의 속성에서 달라질 수 있습니다는 `component` 매개 변수 사이 팅입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-589">The properties for the `component` parameter can differ from the properties of a class, because the site can add or remove properties if the `component` parameter is sited.</span></span>  
  
 <span data-ttu-id="fe0c3-590">`attributes` 배열을 필터링 하려면 매개 변수 배열이 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-590">The `attributes` parameter array is used to filter the array.</span></span> <span data-ttu-id="fe0c3-591">필터링은 다음 규칙에 의해 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-591">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="fe0c3-592">속성이 없는 경우는 <xref:System.Attribute> 동일한 클래스의 속성이 반환 되는 배열에 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-592">If a property does not have an <xref:System.Attribute> of the same class, the property is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="fe0c3-593">특성의 인스턴스 라면는 <xref:System.Attribute> 클래스 속성이 정확 하 게 일치 해야 합니다. 또는 반환된 된 배열에 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-593">If the attribute is an instance of the <xref:System.Attribute> class, the property must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="fe0c3-594">경우는 <xref:System.Attribute> 인스턴스를 지정 하 고은 기본 속성의 인스턴스가 없는 경우에 반환된 된 배열에 포함 되어는 <xref:System.Attribute> 속성에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-594">If an <xref:System.Attribute> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
-   <span data-ttu-id="fe0c3-595">경우 `attributes` 기본 특성이 <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> 속성에 적용 된 특성 없을 때의 경우 일치 하는 메서드가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-595">If `attributes` has a default attribute, the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method matches the case when the property does not have the attribute applied.</span></span>  
  
 <span data-ttu-id="fe0c3-596">경우 `component` 은 `null`, 빈 컬렉션이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-596">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="fe0c3-597">호출에 따라 달라질 수 있으므로 항상 사용 하기 전에 주문, 반환된 된 컬렉션의 순서는 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-597">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe0c3-598">다음 코드 예제에서는 구현 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-598">The following code example demonstrates how to implement the <xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A> method.</span></span> <span data-ttu-id="fe0c3-599">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Windows.Forms.Design.PropertyTab> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-599">This code example is part of a larger example provided for the <xref:System.Windows.Forms.Design.PropertyTab> class.</span></span>  
  
 [!code-cpp[PropertyTabExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/PropertyTabExample/CPP/class1.cpp#2)]
 [!code-csharp[PropertyTabExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/PropertyTabExample/CS/class1.cs#2)]
 [!code-vb[PropertyTabExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PropertyTabExample/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fe0c3-600">
            <paramref name="component" />가 크로스 프로세스 원격 개체인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-600">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (component As Object, noCustomTypeDesc As Boolean) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="fe0c3-601">속성을 가져올 구성 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-601">A component to get the properties for.</span>
          </span>
        </param>
        <param name="noCustomTypeDesc">
          <span data-ttu-id="fe0c3-602">사용자 지정 형식 설명 정보를 고려하지 않으려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-602">
              <see langword="true" /> to not consider custom type description information; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-603">기본 형식 설명자를 사용하여 지정된 구성 요소에 대한 속성 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-603">Returns the collection of properties for a specified component using the default type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-604">지정된 구성 요소의 속성이 포함된 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-604">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties for a specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-605">에 대 한 속성의 `component` 사이트를 추가 하거나 경우 속성을 제거 하기 때문에 매개 변수는 클래스의 속성에서 달라질 수 있습니다는 `component` 매개 변수 사이 팅입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-605">The properties for the `component` parameter can differ from the properties of a class, because the site can add or remove properties if the `component` parameter is sited.</span></span>  
  
 <span data-ttu-id="fe0c3-606">경우 `component` 은 `null`, 빈 컬렉션이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-606">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="fe0c3-607">호출에 따라 달라질 수 있으므로 항상 사용 하기 전에 주문, 반환된 된 컬렉션의 순서는 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-607">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fe0c3-608">
            <paramref name="component" />가 크로스 프로세스 원격 개체인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-608">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (Type componentType, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.Type componentType, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (componentType As Type, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(Type ^ componentType, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="fe0c3-609">대상 구성 요소의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-609">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="fe0c3-610">필터로 사용할 <see cref="T:System.Attribute" /> 형식의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-610">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-611">지정한 특성 배열을 필터로 사용하여 지정된 구성 요소 형식에 대한 속성 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-611">Returns the collection of properties for a specified type of component using a specified array of attributes as a filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-612">이 구성 요소 형식에 대해 지정된 특성과 일치하는 속성이 포함된 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-612">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that match the specified attributes for this type of component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-613">개체의 인스턴스가 없는 경우에이 버전의이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-613">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="fe0c3-614">`attributes` 배열을 필터링 하려면 매개 변수 배열이 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-614">The `attributes` parameter array is used to filter the array.</span></span> <span data-ttu-id="fe0c3-615">필터링은 다음 규칙에 의해 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-615">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="fe0c3-616">속성이 없는 경우는 <xref:System.Attribute> 동일한 클래스의 속성이 반환 되는 배열에 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-616">If a property does not have an <xref:System.Attribute> of the same class, the property is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="fe0c3-617">특성의 인스턴스 라면는 <xref:System.Attribute> 클래스 속성이 정확 하 게 일치 해야 합니다. 또는 반환된 된 배열에 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-617">If the attribute is an instance of the <xref:System.Attribute> class, the property must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="fe0c3-618">경우는 <xref:System.Attribute> 인스턴스를 지정 하 고은 기본 속성의 인스턴스가 없는 경우에 반환된 된 배열에 포함 되어는 <xref:System.Attribute> 속성에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-618">If an <xref:System.Attribute> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
-   <span data-ttu-id="fe0c3-619">경우 `attributes` 기본 특성이 <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> 속성에 적용 된 특성 없을 때의 경우 일치 하는 메서드가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-619">If `attributes` has a default attribute, the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method matches the case when the property does not have the attribute applied.</span></span>  
  
 <span data-ttu-id="fe0c3-620">경우는 `componentType` 매개 변수는 `null`, 빈 컬렉션이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-620">If the `componentType` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="fe0c3-621">호출에 따라 달라질 수 있으므로 항상 사용 하기 전에 주문, 반환된 된 컬렉션의 순서는 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-621">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe0c3-622">다음 코드 예제에서는 구현 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-622">The following code example demonstrates how to implement the <xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A> method.</span></span> <span data-ttu-id="fe0c3-623">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Windows.Forms.Design.PropertyTab> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-623">This code example is part of a larger example provided for the <xref:System.Windows.Forms.Design.PropertyTab> class.</span></span>  
  
 [!code-cpp[PropertyTabExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/PropertyTabExample/CPP/class1.cpp#2)]
 [!code-csharp[PropertyTabExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/PropertyTabExample/CS/class1.cs#2)]
 [!code-vb[PropertyTabExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PropertyTabExample/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component, Attribute[] attributes, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(object component, class System.Attribute[] attributes, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (component As Object, attributes As Attribute(), noCustomTypeDesc As Boolean) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ component, cli::array &lt;Attribute ^&gt; ^ attributes, bool noCustomTypeDesc);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="fe0c3-624">속성을 가져올 구성 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-624">A component to get the properties for.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="fe0c3-625">필터로 사용할 <see cref="T:System.Attribute" /> 형식의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-625">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span>
          </span>
        </param>
        <param name="noCustomTypeDesc">
          <span data-ttu-id="fe0c3-626">사용자 지정 형식 설명 정보를 고려하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-626">
              <see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-627">지정한 특성 배열을 필터로 사용하고 사용자 지정 특성 설명자를 사용하여 지정된 구성 요소에 대한 속성 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-627">Returns the collection of properties for a specified component using a specified array of attributes as a filter and using a custom type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-628">지정된 구성 요소의 지정된 특성과 일치하는 이벤트가 포함된 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-628">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the events that match the specified attributes for the specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-629">에 대 한 속성을 `component` 사이트를 추가 하거나 경우 속성을 제거 하기 때문에 클래스의 속성에서 다를 수 있습니다는 `component` 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-629">The properties for a `component` can differ from the properties of a class, because the site can add or remove properties if the `component` is sited.</span></span>  
  
 <span data-ttu-id="fe0c3-630">`attributes` 배열을 필터링 하려면 매개 변수 배열이 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-630">The `attributes` parameter array is used to filter the array.</span></span> <span data-ttu-id="fe0c3-631">필터링은 다음 규칙에 의해 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-631">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="fe0c3-632">속성이 없는 경우는 <xref:System.Attribute> 동일한 클래스의 속성이 반환 되는 배열에 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-632">If a property does not have an <xref:System.Attribute> of the same class, the property is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="fe0c3-633">특성의 인스턴스 라면는 <xref:System.Attribute> 클래스 속성이 정확 하 게 일치 해야 합니다. 또는 반환된 된 배열에 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-633">If the attribute is an instance of the <xref:System.Attribute> class, the property must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="fe0c3-634">경우는 <xref:System.Attribute> 인스턴스를 지정 하 고은 기본 속성의 인스턴스가 없는 경우에 반환된 된 배열에 포함 되어는 <xref:System.Attribute> 속성에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-634">If an <xref:System.Attribute> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
-   <span data-ttu-id="fe0c3-635">경우 `attributes` 기본 특성이 <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> 속성에 적용 된 특성 없을 때의 경우 일치 하는 메서드가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-635">If `attributes` has a default attribute, the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method matches the case when the property does not have the attribute applied.</span></span>  
  
 <span data-ttu-id="fe0c3-636">경우는 `component` 매개 변수는 `null`, 빈 컬렉션이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-636">If the `component` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="fe0c3-637">호출에 따라 달라질 수 있으므로 항상 사용 하기 전에 주문, 반환된 된 컬렉션의 순서는 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-637">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fe0c3-638">
            <paramref name="component" />가 크로스 프로세스 원격 개체인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-638">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProvider">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fe0c3-639">형식 또는 구성 요소에 대해 제공된 형식 설명 공급자를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-639">Returns the type description provider for the component or type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProvider">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeDescriptionProvider GetProvider (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeDescriptionProvider GetProvider(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProvider (instance As Object) As TypeDescriptionProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeDescriptionProvider ^ GetProvider(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="fe0c3-640">대상 구성 요소의 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-640">An instance of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-641">지정된 구성 요소에 대해 형식 설명 공급자를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-641">Returns the type description provider for the specified component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-642">지정한 구성 요소와 연결된 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-642">A <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> associated with the specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-643"><xref:System.ComponentModel.TypeDescriptor.GetProvider%2A> 메서드는 항상 형식 설명 공급자를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-643">The <xref:System.ComponentModel.TypeDescriptor.GetProvider%2A> method will always return a type description provider.</span></span> <span data-ttu-id="fe0c3-644">기본도 <xref:System.ComponentModel.TypeDescriptor> 구현은 기반으로 한 <xref:System.ComponentModel.TypeDescriptionProvider>합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-644">Even the default <xref:System.ComponentModel.TypeDescriptor> implementation is built on a <xref:System.ComponentModel.TypeDescriptionProvider>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fe0c3-645">
            <paramref name="instance" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-645">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.TypeDescriptionProvider" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.RemoveProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetProvider">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeDescriptionProvider GetProvider (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeDescriptionProvider GetProvider(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeDescriptionProvider ^ GetProvider(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="fe0c3-646">대상 구성 요소의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-646">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-647">지정된 형식에 대한 형식 설명 공급자를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-647">Returns the type description provider for the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-648">지정한 형식과 연결된 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-648">A <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> associated with the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-649"><xref:System.ComponentModel.TypeDescriptor.GetProvider%2A> 메서드는 항상 형식 설명 공급자를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-649">The <xref:System.ComponentModel.TypeDescriptor.GetProvider%2A> method will always return a type description provider.</span></span> <span data-ttu-id="fe0c3-650">기본도 <xref:System.ComponentModel.TypeDescriptor> 구현은 기반으로 한 <xref:System.ComponentModel.TypeDescriptionProvider>합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-650">Even the default <xref:System.ComponentModel.TypeDescriptor> implementation is built on a <xref:System.ComponentModel.TypeDescriptionProvider>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fe0c3-651">
            <paramref name="type" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-651">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.TypeDescriptionProvider" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.RemoveProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetReflectionType">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fe0c3-652">리플렉션을 수행하는 데 사용할 수 있는 <see cref="T:System.Type" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-652">Returns a <see cref="T:System.Type" /> that can be used to perform reflection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public static Type GetReflectionType (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetReflectionType(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetReflectionType (instance As Object) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetReflectionType(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="fe0c3-653">대상 구성 요소의 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-653">An instance of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-654">개체가 제공된 경우 리플렉션을 수행하는 데 사용할 수 있는 <see cref="T:System.Type" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-654">Returns a <see cref="T:System.Type" /> that can be used to perform reflection, given an object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-655">지정된 개체에 대한 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-655">A <see cref="T:System.Type" /> for the specified object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-656"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> 메서드는 하위 수준 버전의는 <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-656">The <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> method is a low-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="fe0c3-657"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> 없는 사용자 지정 형식 설명자에 있을 수 있는 경우 개체에 대해 표준 리플렉션을 수행 하려면 일반적으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-657"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> is typically used to perform standard reflection against an object when no custom type descriptor can be located for it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fe0c3-658">
            <paramref name="instance" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-658">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public static Type GetReflectionType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetReflectionType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetReflectionType(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="fe0c3-659">대상 구성 요소의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-659">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-660">클래스 형식이 제공된 경우 리플렉션을 수행하는 데 사용할 수 있는 <see cref="T:System.Type" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-660">Returns a <see cref="T:System.Type" /> that can be used to perform reflection, given a class type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe0c3-661">지정된 클래스의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-661">A <see cref="T:System.Type" /> of the specified class.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-662"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> 메서드는 하위 수준 버전의는 <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-662">The <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> method is a low-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="fe0c3-663"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> 없는 사용자 지정 형식 설명자에 있을 수 있는 경우 클래스에 대해 표준 리플렉션을 수행 하려면 일반적으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-663"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> is typically used to perform standard reflection against a class when no custom type descriptor can be located for it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fe0c3-664">
            <paramref name="type" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-664">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProvider" />
      </Docs>
    </Member>
    <Member MemberName="InterfaceType">
      <MemberSignature Language="C#" Value="public static Type InterfaceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Type InterfaceType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.TypeDescriptor.InterfaceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InterfaceType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Type ^ InterfaceType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe0c3-665">모든 인터페이스 형식의 형식 설명 공급자를 나타내는 형식을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-665">Gets a type that represents a type description provider for all interface types.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe0c3-666">모든 인터페이스 형식에 대한 사용자 지정 형식 설명 공급자를 나타내는 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-666">A <see cref="T:System.Type" /> that represents a custom type description provider for all interface types.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-667"><xref:System.ComponentModel.TypeDescriptor.InterfaceType%2A> 속성 get는 <xref:System.Type> 에 전달할 수 있는 개체는 <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> 인터페이스 형식에 대 한 형식 설명 공급자를 정의 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-667">The <xref:System.ComponentModel.TypeDescriptor.InterfaceType%2A> property gets a <xref:System.Type> object that you can pass to the <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> methods to define a type description provider for interface types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Refresh">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fe0c3-668">캐시에서 속성 및 이벤트를 지웁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-668">Clears the properties and events from the cache.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Refresh (component As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh(System::Object ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="fe0c3-669">속성 또는 이벤트가 변경된 구성 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-669">A component for which the properties or events have changed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-670">캐시에서 지정된 구성 요소에 대한 속성 및 이벤트를 지웁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-670">Clears the properties and events for the specified component from the cache.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-671">캐시 하는 속성 및 이벤트 <xref:System.ComponentModel.TypeDescriptor> 속도 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-671">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="fe0c3-672">일반적으로 서로 상수 개체의 수명에 대 한입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-672">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="fe0c3-673">그러나 extender 공급자 및 디자이너 개체에 대 한 속성 집합을 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-673">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="fe0c3-674">그럴 경우 개체의 속성 및 이벤트 설명자의 선택을 취소 하려면이 메서드를 호출 해야 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-674">If they do, they should call this method to clear the property and event descriptors of the object.</span></span> <span data-ttu-id="fe0c3-675">이 메서드는 디자인 타임에만 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-675">This method is used only at design time.</span></span> <span data-ttu-id="fe0c3-676">런타임에 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-676">It is not used during run time.</span></span>  
  
 <span data-ttu-id="fe0c3-677">이 메서드는 또한 발생 한 <xref:System.ComponentModel.TypeDescriptor.Refreshed> 속성 또는 이벤트는 구성 요소의 변경 될 때 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-677">This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event when the properties or events of a component change.</span></span> <span data-ttu-id="fe0c3-678">이 이벤트는 이전 호출 하는 경우에 발생는 <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> 또는 <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> 메서드 정보를 캐시 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-678">This event is only raised if there was a prior call to the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> or <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> method that cached the information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe0c3-679">이 메서드를 사용 하는 예제를 참조 하십시오.는 <xref:System.ComponentModel.RefreshEventHandler> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-679">For an example of using this method, see the <xref:System.ComponentModel.RefreshEventHandler> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh(System::Reflection::Assembly ^ assembly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly">
          <span data-ttu-id="fe0c3-680">새로 고칠 어셈블리를 나타내는 <see cref="T:System.Reflection.Assembly" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-680">The <see cref="T:System.Reflection.Assembly" /> that represents the assembly to refresh.</span>
          </span>
          <span data-ttu-id="fe0c3-681">이 어셈블리의 각 <see cref="T:System.Type" />이 새로 고쳐집니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-681">Each <see cref="T:System.Type" /> in this assembly will be refreshed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-682">캐시에서 지정된 어셈블리에 대한 속성 및 이벤트를 지웁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-682">Clears the properties and events for the specified assembly from the cache.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-683">캐시 하는 속성 및 이벤트 <xref:System.ComponentModel.TypeDescriptor> 속도 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-683">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="fe0c3-684">일반적으로 서로 상수 개체의 수명에 대 한입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-684">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="fe0c3-685">그러나 extender 공급자 및 디자이너 개체에 대 한 속성 집합을 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-685">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="fe0c3-686">그럴 경우 해당 개체의 속성 및 이벤트 설명자의 선택을 취소 하려면이 메서드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-686">If they do, they can call this method to clear the property and event descriptors of the object.</span></span> <span data-ttu-id="fe0c3-687">이 메서드는 디자인 타임에만 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-687">This method is used only at design time.</span></span> <span data-ttu-id="fe0c3-688">런타임에 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-688">It is not used during run time.</span></span>  
  
 <span data-ttu-id="fe0c3-689">에 대 한 호출을 수행 하기 전에 <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> 캐시를 지워야 하는 메서드를 호출 해야는 <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> 메서드는 특정 어셈블리 정보를 먼저 캐시에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-689">Before you make a call to the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method to clear the cache, you need to call the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method for the specific assembly to cache the information first.</span></span>  
  
 <span data-ttu-id="fe0c3-690">이 메서드는 또한 발생 한 <xref:System.ComponentModel.TypeDescriptor.Refreshed> 속성 설정 구성 요소 변경의 알림을 받으려는 하는 모든 클래스에 알리는 이벤트를 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-690">This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to notify all classes that want to be notified when the property set of a component changes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.Assembly" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.IExtenderProvider" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh (System.Reflection.Module module);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh(class System.Reflection.Module module) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh(System::Reflection::Module ^ module);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="module" Type="System.Reflection.Module" />
      </Parameters>
      <Docs>
        <param name="module">
          <span data-ttu-id="fe0c3-691">새로 고칠 모듈을 나타내는 <see cref="T:System.Reflection.Module" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-691">The <see cref="T:System.Reflection.Module" /> that represents the module to refresh.</span>
          </span>
          <span data-ttu-id="fe0c3-692">이 모듈의 각 <see cref="T:System.Type" />이 새로 고쳐집니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-692">Each <see cref="T:System.Type" /> in this module will be refreshed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-693">캐시에서 지정된 모듈에 대한 속성 및 이벤트를 지웁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-693">Clears the properties and events for the specified module from the cache.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-694">캐시 하는 속성 및 이벤트 <xref:System.ComponentModel.TypeDescriptor> 속도 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-694">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="fe0c3-695">일반적으로 서로 상수 개체의 수명에 대 한입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-695">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="fe0c3-696">그러나 extender 공급자 및 디자이너 개체에 대 한 속성 집합을 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-696">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="fe0c3-697">그럴 경우 해당 개체의 속성 및 이벤트 설명자의 선택을 취소 하려면이 메서드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-697">If they do, they can call this method to clear the property and event descriptors of the object.</span></span> <span data-ttu-id="fe0c3-698">이 메서드는 디자인 타임에만 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-698">This method is used only at design time.</span></span> <span data-ttu-id="fe0c3-699">런타임에 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-699">It is not used during run time.</span></span>  
  
 <span data-ttu-id="fe0c3-700">에 대 한 호출을 수행 하기 전에 <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> 캐시를 지워야 하는 메서드를 호출 해야는 <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> 메서드 정보를 먼저 캐시 특정 모듈에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-700">Before you make a call to the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method to clear the cache, you need to call the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method for the specific module to cache the information first.</span></span>  
  
 <span data-ttu-id="fe0c3-701">이 메서드는 또한 발생 한 <xref:System.ComponentModel.TypeDescriptor.Refreshed> 속성 설정 구성 요소 변경의 알림을 받으려는 하는 모든 클래스에 알리는 이벤트를 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-701">This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to notify all classes that want to be notified when the property set of a component changes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.Module" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.IExtenderProvider" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="fe0c3-702">대상 구성 요소의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-702">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-703">캐시에서 지정된 구성 요소 형식에 대한 속성 및 이벤트를 지웁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-703">Clears the properties and events for the specified type of component from the cache.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-704">개체의 인스턴스가 없는 경우에이 버전의이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-704">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="fe0c3-705">캐시 하는 속성 및 이벤트 <xref:System.ComponentModel.TypeDescriptor> 속도 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-705">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="fe0c3-706">일반적으로 서로 상수 개체의 수명에 대 한입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-706">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="fe0c3-707">그러나 extender 공급자 및 디자이너 개체에 대 한 속성 집합을 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-707">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="fe0c3-708">그럴 경우 해당 개체의 속성 및 이벤트 설명자의 선택을 취소 하려면이 메서드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-708">If they do, they can call this method to clear the property and event descriptors of the object.</span></span> <span data-ttu-id="fe0c3-709">이 메서드는 디자인 타임에만 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-709">This method is used only at design time.</span></span> <span data-ttu-id="fe0c3-710">런타임에 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-710">It is not used during run time.</span></span>  
  
 <span data-ttu-id="fe0c3-711">이 메서드는 또한 발생 한 <xref:System.ComponentModel.TypeDescriptor.Refreshed> 속성 또는 이벤트는 구성 요소의 변경 될 때 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-711">This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event when the properties or events of a component change.</span></span> <span data-ttu-id="fe0c3-712">이 이벤트는 이전 호출 하는 경우에 발생는 <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> 또는 <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> 메서드 정보를 캐시 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-712">This event is only raised if there was a prior call to the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> or <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> method that cached the information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.IExtenderProvider" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      </Docs>
    </Member>
    <Member MemberName="Refreshed">
      <MemberSignature Language="C#" Value="public static event System.ComponentModel.RefreshEventHandler Refreshed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.RefreshEventHandler Refreshed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event Refreshed As RefreshEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event System::ComponentModel::RefreshEventHandler ^ Refreshed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.RefreshEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe0c3-713">구성 요소에 대한 캐시를 지울 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-713">Occurs when the cache for a component is cleared.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-714">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-714">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe0c3-715">이 이벤트를 사용 하는 예제를 참조 하십시오.는 <xref:System.ComponentModel.RefreshEventHandler> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-715">For an example of using this event, see the <xref:System.ComponentModel.RefreshEventHandler> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAssociation">
      <MemberSignature Language="C#" Value="public static void RemoveAssociation (object primary, object secondary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveAssociation(object primary, object secondary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveAssociation (primary As Object, secondary As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveAssociation(System::Object ^ primary, System::Object ^ secondary);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primary" Type="System.Object" />
        <Parameter Name="secondary" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="primary">
          <span data-ttu-id="fe0c3-716">기본 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-716">The primary <see cref="T:System.Object" />.</span>
          </span>
        </param>
        <param name="secondary">
          <span data-ttu-id="fe0c3-717">보조 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-717">The secondary <see cref="T:System.Object" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-718">두 개체 간의 연결을 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-718">Removes an association between two objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-719"><xref:System.ComponentModel.TypeDescriptor.RemoveAssociation%2A> 만든 두 개체 간의 연결을 제거 하는 메서드는 <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-719">The <xref:System.ComponentModel.TypeDescriptor.RemoveAssociation%2A> method removes an association between two objects formed by the <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method.</span></span>  
  
 <span data-ttu-id="fe0c3-720">A <xref:System.WeakReference> 사용 하 여 기본 및 보조 개체 간의 연결을 유지; 이므로이 메서드에 영향을 주지 않습니다 중 개체가 종료 되거나 가비지 수집에서 회수 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-720">A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not influence when either object is finalized or reclaimed by garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fe0c3-721">매개 변수 중 하나 또는 둘 다가 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-721">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.NamedPermissionSet">
          <span data-ttu-id="fe0c3-722">시스템 리소스에 대 한 전체 액세스 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-722">for full access to system resources.</span>
          </span>
          <span data-ttu-id="fe0c3-723">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-723">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="fe0c3-724">연결 된 상태:</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-724">Associated state:</span>
          </span>
        </permission>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAssociations">
      <MemberSignature Language="C#" Value="public static void RemoveAssociations (object primary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveAssociations(object primary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveAssociations (primary As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveAssociations(System::Object ^ primary);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primary" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="primary">
          <span data-ttu-id="fe0c3-725">연결의 기본 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-725">The primary <see cref="T:System.Object" /> in an association.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-726">기본 개체에 대한 모든 연결을 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-726">Removes all associations for a primary object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-727"><xref:System.ComponentModel.TypeDescriptor.RemoveAssociations%2A> 메서드를 호출 하 여 만든 보조 개체를 모두와 기본 개체 간의 모든 연결이 제거는 <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-727">The <xref:System.ComponentModel.TypeDescriptor.RemoveAssociations%2A> method removes all associations between a primary object and all of its secondary objects, created by calls to the <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method.</span></span>  
  
 <span data-ttu-id="fe0c3-728">A <xref:System.WeakReference> 사용 하 여 기본 및 보조 개체 간의 연결을 유지; 따라서이 메서드는 영향을 주지 때 보조 개체의 주 종료 또는 가비지 수집에서 회수 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-728">A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not influence when either the primary of secondary objects are finalized or reclaimed by garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fe0c3-729">
            <paramref name="primary" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-729">
              <paramref name="primary" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.NamedPermissionSet">
          <span data-ttu-id="fe0c3-730">시스템 리소스에 대 한 전체 액세스 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-730">for full access to system resources.</span>
          </span>
          <span data-ttu-id="fe0c3-731">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-731">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="fe0c3-732">연결 된 상태:</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-732">Associated state:</span>
          </span>
        </permission>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveProvider">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fe0c3-733">이전에 추가한 형식 설명 공급자를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-733">Removes a previously added type description provider.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveProvider">
      <MemberSignature Language="C#" Value="public static void RemoveProvider (System.ComponentModel.TypeDescriptionProvider provider, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveProvider(class System.ComponentModel.TypeDescriptionProvider provider, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveProvider (provider As TypeDescriptionProvider, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveProvider(System::ComponentModel::TypeDescriptionProvider ^ provider, System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="fe0c3-734">제거할 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-734">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to remove.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="fe0c3-735">대상 구성 요소의 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-735">An instance of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-736">지정한 개체와 연결되어 있는 이전에 추가한 형식 설명 공급자를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-736">Removes a previously added type description provider that is associated with the specified object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-737">와 이전에 추가한 형식 설명 공급자를 제거 하는이 메서드는 <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-737">This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method.</span></span> <span data-ttu-id="fe0c3-738">공급자를 제거 하면는 <xref:System.ComponentModel.TypeDescriptor.Refreshed> 이벤트를 연결된 된 개체에 대해 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-738">Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated object.</span></span>  
  
 <span data-ttu-id="fe0c3-739">사용 된 <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> 메서드 부분적으로 신뢰할 수 있는 코드에서 호출 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-739">Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fe0c3-740">매개 변수 중 하나 또는 둘 다가 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-740">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.NamedPermissionSet">
          <span data-ttu-id="fe0c3-741">시스템 리소스에 대 한 전체 액세스 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-741">for full access to system resources.</span>
          </span>
          <span data-ttu-id="fe0c3-742">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-742">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="fe0c3-743">연결 된 상태:</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-743">Associated state:</span>
          </span>
        </permission>
        <altmember cref="T:System.ComponentModel.TypeDescriptionProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProvider" />
      </Docs>
    </Member>
    <Member MemberName="RemoveProvider">
      <MemberSignature Language="C#" Value="public static void RemoveProvider (System.ComponentModel.TypeDescriptionProvider provider, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveProvider(class System.ComponentModel.TypeDescriptionProvider provider, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveProvider(System::ComponentModel::TypeDescriptionProvider ^ provider, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="fe0c3-744">제거할 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-744">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to remove.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="fe0c3-745">대상 구성 요소의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-745">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-746">지정한 형식과 연결되어 있는 이전에 추가한 형식 설명 공급자를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-746">Removes a previously added type description provider that is associated with the specified type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-747">와 이전에 추가한 형식 설명 공급자를 제거 하는이 메서드는 <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-747">This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method.</span></span> <span data-ttu-id="fe0c3-748">공급자를 제거 하면는 <xref:System.ComponentModel.TypeDescriptor.Refreshed> 이벤트를 연결된 된 형식에 대해 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-748">Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated type.</span></span>  
  
 <span data-ttu-id="fe0c3-749">사용 된 <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> 메서드 부분적으로 신뢰할 수 있는 코드에서 호출 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-749">Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fe0c3-750">매개 변수 중 하나 또는 둘 다가 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-750">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.NamedPermissionSet">
          <span data-ttu-id="fe0c3-751">시스템 리소스에 대 한 전체 액세스 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-751">for full access to system resources.</span>
          </span>
          <span data-ttu-id="fe0c3-752">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-752">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="fe0c3-753">연결 된 상태:</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-753">Associated state:</span>
          </span>
        </permission>
        <altmember cref="T:System.ComponentModel.TypeDescriptionProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveProviderTransparent">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fe0c3-754">이전에 추가한 형식 설명 공급자를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-754">Removes a previously added type description provider.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveProviderTransparent">
      <MemberSignature Language="C#" Value="public static void RemoveProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveProviderTransparent(class System.ComponentModel.TypeDescriptionProvider provider, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveProviderTransparent (provider As TypeDescriptionProvider, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveProviderTransparent(System::ComponentModel::TypeDescriptionProvider ^ provider, System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="fe0c3-755">제거할 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-755">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to remove.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="fe0c3-756">대상 구성 요소의 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-756">An instance of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-757">지정한 개체와 연결되어 있는 이전에 추가한 형식 설명 공급자를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-757">Removes a previously added type description provider that is associated with the specified object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-758">와 이전에 추가한 형식 설명 공급자를 제거 하는이 메서드는 <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-758">This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method.</span></span> <span data-ttu-id="fe0c3-759">공급자를 제거 하면는 <xref:System.ComponentModel.TypeDescriptor.Refreshed> 이벤트를 연결된 된 개체에 대해 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-759">Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated object.</span></span>  
  
 <span data-ttu-id="fe0c3-760">부분적으로 신뢰할 수 있는 코드에서 이 메서드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-760">This method can be called from partially trusted code.</span></span> <span data-ttu-id="fe0c3-761">경우 <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> 는 정의 호출자에 게 등록할 수에 지정된 된 인스턴스에 대 한 공급자 해당 형식을 부분 신뢰 이기도 한 경우.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-761">If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> is defined, the caller can register a provider for the specified instance if its type is also partially trusted.</span></span>  
  
 <span data-ttu-id="fe0c3-762">사용 하 여는 <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> 메서드 부분적으로 신뢰할 수 있는 코드에서 호출할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-762">Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you do not need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fe0c3-763">매개 변수 중 하나 또는 둘 다가 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-763">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.TypeDescriptorPermission">
          <span data-ttu-id="fe0c3-764">레지스트리 액세스 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-764">For registry access.</span>
          </span>
          <span data-ttu-id="fe0c3-765">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-765">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="fe0c3-766">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-766">Associated enumeration: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span>
          </span>
        </permission>
        <permission cref="P:System.Reflection.Assembly.PermissionSet">
          <span data-ttu-id="fe0c3-767">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-767">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="fe0c3-768">연결 된 형식:는 <see cref="T:System.Security.PermissionSet" /> 정의 하는 어셈블리에 필요 하는 <paramref name="instance" /> 매개 변수의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-768">Associated type: The <see cref="T:System.Security.PermissionSet" /> that is required by the assembly that defines the <paramref name="instance" /> parameter's type.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="RemoveProviderTransparent">
      <MemberSignature Language="C#" Value="public static void RemoveProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveProviderTransparent(class System.ComponentModel.TypeDescriptionProvider provider, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveProviderTransparent(System::ComponentModel::TypeDescriptionProvider ^ provider, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="fe0c3-769">제거할 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-769">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to remove.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="fe0c3-770">대상 구성 요소의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-770">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-771">지정한 형식과 연결되어 있는 이전에 추가한 형식 설명 공급자를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-771">Removes a previously added type description provider that is associated with the specified type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0c3-772">와 이전에 추가한 형식 설명 공급자를 제거 하는이 메서드는 <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-772">This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method.</span></span> <span data-ttu-id="fe0c3-773">공급자를 제거 하면는 <xref:System.ComponentModel.TypeDescriptor.Refreshed> 이벤트를 연결된 된 형식에 대해 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-773">Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated type.</span></span>  
  
 <span data-ttu-id="fe0c3-774">부분적으로 신뢰할 수 있는 코드에서 이 메서드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-774">This method can be called from partially trusted code.</span></span> <span data-ttu-id="fe0c3-775">경우 <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> 는 정의 호출자에 게 등록을 취소할 수를 지정 된 형식에 대 한 공급자 부분적으로 신뢰할 수 있는 이기도 한 경우.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-775">If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> is defined, the caller can unregister a provider for the specified type if it is also partially trusted.</span></span>  
  
 <span data-ttu-id="fe0c3-776">사용 하 여는 <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> 메서드 부분적으로 신뢰할 수 있는 코드에서 호출할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="fe0c3-776">Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you do not need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fe0c3-777">매개 변수 중 하나 또는 둘 다가 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-777">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.TypeDescriptorPermission">
          <span data-ttu-id="fe0c3-778">레지스트리 액세스 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-778">For registry access.</span>
          </span>
          <span data-ttu-id="fe0c3-779">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-779">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="fe0c3-780">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-780">Associated enumeration: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span>
          </span>
        </permission>
        <permission cref="P:System.Reflection.Assembly.PermissionSet">
          <span data-ttu-id="fe0c3-781">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-781">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="fe0c3-782">연결 된 형식:는 <see cref="T:System.Security.PermissionSet" /> 정의 하는 어셈블리에서 필요한 <paramref name="type" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-782">Associated type: The <see cref="T:System.Security.PermissionSet" /> that is required by the assembly that defines <paramref name="type" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SortDescriptorArray">
      <MemberSignature Language="C#" Value="public static void SortDescriptorArray (System.Collections.IList infos);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SortDescriptorArray(class System.Collections.IList infos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SortDescriptorArray (infos As IList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SortDescriptorArray(System::Collections::IList ^ infos);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="infos" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="infos">
          <span data-ttu-id="fe0c3-783">정렬할 설명자를 포함하는 <see cref="T:System.Collections.IList" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-783">An <see cref="T:System.Collections.IList" /> that contains the descriptors to sort.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe0c3-784">설명자의 이름을 사용하여 설명자를 정렬합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-784">Sorts descriptors using the name of the descriptor.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fe0c3-785">
            <paramref name="infos" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe0c3-785">
              <paramref name="infos" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.Refresh" />
      </Docs>
    </Member>
  </Members>
</Type>