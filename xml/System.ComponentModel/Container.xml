<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Container.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59fa6bbbc17aa353499d9fe0e1402c1a610c8f597.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9fa6bbbc17aa353499d9fe0e1402c1a610c8f597</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Container">
          <source>Encapsulates zero or more components.</source>
          <target state="translated">0개 이상의 구성 요소를 캡슐화합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Container">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Container&gt;</ph> class is the default implementation for the <ph id="ph2">&lt;xref:System.ComponentModel.IContainer&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Container&gt;</ph> 클래스에 대 한 기본 구현은 <ph id="ph2">&lt;xref:System.ComponentModel.IContainer&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Container">
          <source>Containers are objects that encapsulate and track zero or more components.</source>
          <target state="translated">컨테이너는 캡슐화 하 고 0 개 이상의 구성 요소를 추적 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Container">
          <source>In this context, containment refers to logical containment, not visual containment.</source>
          <target state="translated">이 컨텍스트에서 포함은 논리적인 포함 하지 시각적 포함을 의미 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Container">
          <source>You can use components and containers in a variety of scenarios, including scenarios that are both visual and not visual.</source>
          <target state="translated">구성 요소와 컨테이너는 다양 한 시각 및 시각적 하지 않은 시나리오를 비롯 한 시나리오를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Container">
          <source>The components in a container are tracked in a first-in, first-out list, which also defines the order of the components within the container.</source>
          <target state="translated">컨테이너의 구성 요소는 목록의 선입 선출 컨테이너 내에서 구성 요소의 순서를 정의 하기도 하는 추적 됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Container">
          <source>Added components are appended to the end of the list.</source>
          <target state="translated">추가 된 구성 요소 목록 끝에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Container">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>에 <ph id="ph2">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>를 추가합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent)">
          <source>The component to add.</source>
          <target state="translated">추가할 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>을 <ph id="ph2">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>에 추가합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent)">
          <source>The component is unnamed.</source>
          <target state="translated">이름이 지정되지 않은 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent)">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">이 메서드는 파생된 클래스에서 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent)">
          <source>The new <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> is added to the end of the list.</source>
          <target state="translated">새 <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> 목록의 끝에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)">
          <source>The component to add.</source>
          <target state="translated">추가할 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)">
          <source>The unique, case-insensitive name to assign to the component.</source>
          <target state="translated">구성 요소에 할당할 대/소문자를 구분하지 않는 고유한 이름</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph>, which leaves the component unnamed.</source>
          <target state="translated">구성 요소의 이름을 지정하지 않는 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph> and assigns it a name.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>를 <ph id="ph2">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>에 추가하고 이름을 지정합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">이 메서드는 파생된 클래스에서 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)">
          <source>The new <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> is added to the end of the list.</source>
          <target state="translated">새 <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> 목록의 끝에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is not unique.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph>이 고유하지 않은 경우</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Container.Components">
          <source>Gets all the components in the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>의 모든 구성 요소를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Container.Components">
          <source>A collection that contains the components in the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>에 있는 구성 요소를 포함하는 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Container.Components">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">이 메서드는 파생된 클래스에서 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Container.Components">
          <source>The components in the collection are stored in the same order as they were added to the <ph id="ph1">&lt;xref:System.ComponentModel.Container&gt;</ph>.</source>
          <target state="translated">컬렉션의 구성 요소에 추가 된 순서에 저장 됩니다는 <ph id="ph1">&lt;xref:System.ComponentModel.Container&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.CreateSite(System.ComponentModel.IComponent,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> to create a site for.</source>
          <target state="translated">해당 사이트를 만들 <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.CreateSite(System.ComponentModel.IComponent,System.String)">
          <source>The name to assign to <bpt id="p1">&lt;c&gt;</bpt>component<ept id="p1">&lt;/c&gt;</ept>, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> to skip the name assignment.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>component<ept id="p1">&lt;/c&gt;</ept>에 할당할 이름이거나, 이름을 할당하지 않으려면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.CreateSite(System.ComponentModel.IComponent,System.String)">
          <source>Creates a site <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> for the given <ph id="ph2">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> and assigns the given name to the site.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> 사이트를 만들고 지정된 이름을 이 사이트에 할당합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.CreateSite(System.ComponentModel.IComponent,System.String)">
          <source>The newly created site.</source>
          <target state="translated">새로 만든 사이트입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.CreateSite(System.ComponentModel.IComponent,System.String)">
          <source>If the <ph id="ph1">`name`</ph> parameter is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.ComponentModel.IComponent&gt;</ph> is added to the <ph id="ph4">&lt;xref:System.ComponentModel.Container&gt;</ph> without an identifying name.</source>
          <target state="translated">경우는 <ph id="ph1">`name`</ph> 매개 변수는 <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.ComponentModel.IComponent&gt;</ph> 에 추가 되는 <ph id="ph4">&lt;xref:System.ComponentModel.Container&gt;</ph> 식별 이름 없이 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.CreateSite(System.ComponentModel.IComponent,System.String)">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">이 메서드는 파생된 클래스에서 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.CreateSite(System.ComponentModel.IComponent,System.String)">
          <source>Implementers that need to override the <ph id="ph1">&lt;xref:System.ComponentModel.Container.CreateSite%2A&gt;</ph> method can provide a custom implementation through a class that implements the <ph id="ph2">&lt;xref:System.ComponentModel.ISite&gt;</ph> interface.</source>
          <target state="translated">재정의할 필요가 있는 구현자는 <ph id="ph1">&lt;xref:System.ComponentModel.Container.CreateSite%2A&gt;</ph> 메서드를 구현 하는 클래스를 통해 사용자 지정 구현을 제공할 수는 <ph id="ph2">&lt;xref:System.ComponentModel.ISite&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Container">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>에서 사용하는 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>에서 사용하는 모든 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.ComponentModel.Container.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Container.Dispose%2A&gt;</ph> 사용을 마치면 <ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph>를 호출합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Container.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Container.Dispose%2A&gt;</ph> 메서드를 사용하면 <ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph>를 사용할 수 없게 됩니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.ComponentModel.Container.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.ComponentModel.Container&gt;</ph> was occupying.</source>
          <target state="translated">호출한 후 <ph id="ph1">&lt;xref:System.ComponentModel.Container.Dispose%2A&gt;</ph>에 대 한 모든 참조를 해제 해야는 <ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph> 가비지 수집기는 메모리를 회수할 수 있도록 하는 <ph id="ph3">&lt;xref:System.ComponentModel.Container&gt;</ph> 차지한 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> 및 <bpt id="p2">[</bpt>Dispose 메서드를 구현<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.ComponentModel.Container.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Container.Dispose%2A&gt;</ph>에 대한 마지막 참조를 해제하기 전에 반드시 <ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph>를 호출하십시오.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.ComponentModel.Container&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">이렇게 하지 않으면 가비지 수집기가 <ph id="ph1">&lt;xref:System.ComponentModel.Container&gt;</ph> 개체의 <ph id="ph2">`Finalize`</ph> 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>로 설정하고, 관리되지 않는 리소스만 해제하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>, and optionally releases the managed resources.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">이 메서드는 public <ph id="ph1">`Dispose`</ph> 메서드 및 <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> 보호 된 호출 <ph id="ph2">`Dispose(Boolean)`</ph> 메서드는 <ph id="ph3">`disposing`</ph> 매개 변수 설정 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 호출 <ph id="ph2">`Dispose`</ph> 와 <ph id="ph3">`disposing`</ph> 로 설정 <ph id="ph4">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph> references.</source>
          <target state="translated">경우는 <ph id="ph1">`disposing`</ph> 매개 변수가 true 이면이 메서드는 관리 개체가 보유 하는 모든 리소스를 해제 합니다.이 <ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph> 참조 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">이 메서드는 참조되는 각 개체의 <ph id="ph1">`Dispose`</ph> 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>는 다른 개체에서 여러 번 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> 이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">구현 하는 방법에 대 한 자세한 내용은 <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, 참조 <bpt id="p1">[</bpt>Dispose 메서드를 구현<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">에 대 한 자세한 내용은 <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, 참조 <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> 및 <bpt id="p2">[</bpt>Finalize 메서드를 재정의<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Finalize">
          <source>Releases unmanaged resources and performs other cleanup operations before the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph> is reclaimed by garbage collection.</source>
          <target state="translated">가비지 수집에 의해 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>이(가) 회수되기 전에 관리되지 않는 리소스를 해제하고 기타 정리 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Finalize">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph>.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph>를 재정의합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Finalize">
          <source>Application code should not call this method; an object's <ph id="ph1">`Finalize`</ph> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <ph id="ph2">&lt;xref:System.GC.SuppressFinalize%2A&gt;</ph> method.</source>
          <target state="translated">응용 프로그램 코드,이 메서드를 호출 하지 않아야 개체의 <ph id="ph1">`Finalize`</ph> 메서드를 호출 하 여 가비지 수집기의 종료를 사용 하지 않도록 설정 된 경우가 아니면 자동으로 가비지 수집 중 호출 됩니다는 <ph id="ph2">&lt;xref:System.GC.SuppressFinalize%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Finalize">
          <source>For more information, see <bpt id="p1">[</bpt>Finalize Methods and Destructors<ept id="p1">](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)</ept>, <bpt id="p2">[</bpt>Cleaning Up Unmanaged Resources<ept id="p2">](~/docs/standard/garbage-collection/unmanaged.md)</ept>, and <bpt id="p3">[</bpt>Overriding the Finalize Method<ept id="p3">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Finalize 메서드 및 소멸자<ept id="p1">](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)</ept>, <bpt id="p2">[</bpt>관리 되지 않는 리소스 정리<ept id="p2">](~/docs/standard/garbage-collection/unmanaged.md)</ept>, 및 <bpt id="p3">[</bpt>Finalize 메서드를 재정의<ept id="p3">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.GetService(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the service to retrieve.</source>
          <target state="translated">검색할 서비스의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.GetService(System.Type)">
          <source>Gets the service object of the specified type, if it is available.</source>
          <target state="translated">가능한 경우, 지정된 형식의 서비스 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.GetService(System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> implementing the requested service, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the service cannot be resolved.</source>
          <target state="translated">요청된 서비스를 구현하는 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>이거나, 서비스를 확인할 수 없는 경우에는 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.GetService(System.Type)">
          <source>The default implementation of this method returns the current instance of the class if <ph id="ph1">`service`</ph> is an <ph id="ph2">&lt;xref:System.ComponentModel.IContainer&gt;</ph>; otherwise, it returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">이 메서드의 기본 구현 하는 경우 클래스의 현재 인스턴스를 반환 <ph id="ph1">`service`</ph> 는 <ph id="ph2">&lt;xref:System.ComponentModel.IContainer&gt;</ph>, 그렇지 않으면 반환 <ph id="ph3">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.GetService(System.Type)">
          <source>You can override this method to provide a custom implementation to return a service object.</source>
          <target state="translated">서비스 개체를 반환 하도록 사용자 지정 구현을 제공 하려면이 메서드를 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.GetService(System.Type)">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.IServiceProvider.GetService%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.IServiceProvider.GetService%2A?displayProperty=nameWithType&gt;</ph> 메서드를 참조하세요.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Remove(System.ComponentModel.IComponent)">
          <source>The component to remove.</source>
          <target state="translated">제거할 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Remove(System.ComponentModel.IComponent)">
          <source>Removes a component from the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>에서 구성 요소를 제거합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Remove(System.ComponentModel.IComponent)">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">이 메서드는 파생된 클래스에서 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.RemoveWithoutUnsiting(System.ComponentModel.IComponent)">
          <source>The component to remove.</source>
          <target state="translated">제거할 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.RemoveWithoutUnsiting(System.ComponentModel.IComponent)">
          <source>Removes a component from the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph> without setting <ph id="ph2">&lt;see cref="P:System.ComponentModel.IComponent.Site" /&gt;</ph> to <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>를 <ph id="ph3">&lt;see langword="null" /&gt;</ph>로 설정하지 않고 <ph id="ph2">&lt;see cref="P:System.ComponentModel.IComponent.Site" /&gt;</ph>에서 구성 요소를 제거합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.RemoveWithoutUnsiting(System.ComponentModel.IComponent)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Container.RemoveWithoutUnsiting%2A&gt;</ph> method cleans up the site as usual, but it does not set the component's <ph id="ph2">&lt;xref:System.ComponentModel.IComponent.Site%2A&gt;</ph> property to <ph id="ph3">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Container.RemoveWithoutUnsiting%2A&gt;</ph> 메서드 일반적으로 사이트를 정리 하지만 구성 요소의 설정 하지 않으므로 <ph id="ph2">&lt;xref:System.ComponentModel.IComponent.Site%2A&gt;</ph> 속성을 <ph id="ph3">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.ValidateName(System.ComponentModel.IComponent,System.String)">
          <source>The named component.</source>
          <target state="translated">명명된 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.ValidateName(System.ComponentModel.IComponent,System.String)">
          <source>The component name to validate.</source>
          <target state="translated">유효성을 검사할 구성 요소 이름입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.ValidateName(System.ComponentModel.IComponent,System.String)">
          <source>Determines whether the component name is unique for this container.</source>
          <target state="translated">구성 요소 이름이 이 컨테이너에서 고유한지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.ValidateName(System.ComponentModel.IComponent,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Container.ValidateName%2A&gt;</ph> method is called by the <ph id="ph2">&lt;xref:System.ComponentModel.Container.Add%2A&gt;</ph> method to determine if the name of the <ph id="ph3">`component`</ph> being added is unique for this <ph id="ph4">&lt;xref:System.ComponentModel.Container&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Container.ValidateName%2A&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.ComponentModel.Container.Add%2A&gt;</ph> 여부를 확인 하는 메서드 이름을 <ph id="ph3">`component`</ph> 추가 되는 것은이 대 한 고유 <ph id="ph4">&lt;xref:System.ComponentModel.Container&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.ValidateName(System.ComponentModel.IComponent,System.String)">
          <source>If the <ph id="ph1">`name`</ph> parameter is not <ph id="ph2">`null`</ph> and is not unique, an <ph id="ph3">&lt;xref:System.ArgumentException&gt;</ph> is thrown.</source>
          <target state="translated">경우는 <ph id="ph1">`name`</ph> 매개 변수가 않습니다 <ph id="ph2">`null`</ph> , 고유 하지 않습니다는 <ph id="ph3">&lt;xref:System.ArgumentException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.ValidateName(System.ComponentModel.IComponent,System.String)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.ValidateName(System.ComponentModel.IComponent,System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is not unique.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph>이 고유하지 않은 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>