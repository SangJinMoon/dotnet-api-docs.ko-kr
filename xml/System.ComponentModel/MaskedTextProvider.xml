<Type Name="MaskedTextProvider" FullName="System.ComponentModel.MaskedTextProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="84b3c219c485de8adb27bf75b95d2c798763ea71" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30380897" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MaskedTextProvider : ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MaskedTextProvider extends System.Object implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.MaskedTextProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class MaskedTextProvider&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MaskedTextProvider : ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <see cref="T:System.Windows.Forms.MaskedTextBox" /> 컨트롤과 같이 마스킹을 지원하는 컨트롤에서 사용할 수 있는 마스크 구문 분석 서비스를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MaskedTextBox> 컨트롤 마스크를 리터럴 문자로 구성 및 서식 지정에 대해 모든 사용자 입력을 테스트 하는 요소를 포함 합니다. 으로 특정 마스크 구문 분석 엔진을 영구적으로 연결 하는 대신 <xref:System.Windows.Forms.MaskedTextBox>, Windows Forms 나타내는 별도 서비스로 제공는 <xref:System.ComponentModel.MaskedTextProvider> 에 대 한 설명서에 설명 된 마스킹 언어의 구문을 정의 하는 클래스 <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> 속성입니다.  
  
 멤버는 대부분의 <xref:System.Windows.Forms.MaskedTextBox> 클래스는 연관 된 유사한 이름의 멤버에 해당 구현을 참조 <xref:System.ComponentModel.MaskedTextProvider>합니다. 예를 들어는 <xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A?displayProperty=nameWithType> 의 속성은 <xref:System.Windows.Forms.MaskedTextBox> 클래스에 대 한 모든 참조는 <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> 의 <xref:System.ComponentModel.MaskedTextProvider> 클래스입니다.  
  
 사용 하는 마스크 구문 분석 엔진 <xref:System.ComponentModel.MaskedTextProvider> 마스킹된 편집 컨트롤 Microsoft Visual Basic 버전 6에 포함 된 다음에 모델링 됩니다. 마스킹 언어에 대 한 설명서에서 설명 된 <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> 속성입니다.  
  
 관련 된 다음 세 가지 문자열이 고 <xref:System.ComponentModel.MaskedTextProvider> 클래스입니다.  
  
|문자열 이름|설명|  
|-----------------|-----------------|  
|입력된 문자 또는 문자열|/ / 마스크에 대해 적용 되는 입력으로 사용 되는 문자를 나타냅니다. 실제로 평면은 입력된 문자열 포함 하 여 여러 입력된 작업으로 구성 될 수 있습니다 <xref:System.ComponentModel.MaskedTextProvider.Add%2A>, <xref:System.ComponentModel.MaskedTextProvider.Replace%2A>, <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>, 및 <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>합니다. 따라서 입력된 문자열을 직접 액세스할 수 없습니다. 그러나 입력된 문자열의 측면은 경우에 사용할 수는 <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> 및 <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>, <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A>, 및 <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> 속성입니다.|  
|마스크|입력을 마스크 형식이 지정 된 문자열에는 입력된 문자열을 변환 하는 데 서식 지정을 나타냅니다. 이 문자열에 설정 된 <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> 통해 주로 액세스는 <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> 속성입니다. 와 같은 마스크의 특성 다른 구성원을 통해 사용할 수 있습니다는 <xref:System.ComponentModel.MaskedTextProvider.Length%2A>, <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>, 및 <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> 속성입니다.|  
|서식이 지정 된 문자열|/ / 마스크 전체 입력된 문자열에 적용 되는 결과 문자열을 나타냅니다. 클래스의 많은 멤버가 포함 된 서식이 지정 된 문자열을 쿼리할 수 포함 하 여 <xref:System.ComponentModel.MaskedTextProvider.Item%2A>, <xref:System.ComponentModel.MaskedTextProvider.Length%2A>, <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>, <xref:System.ComponentModel.MaskedTextProvider.MaskFull%2A>, <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A>, <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A>등입니다. 형식이 지정 된 문자열의 전체 값은 사용할 수는 <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> 및 <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 메서드.|  
  
> [!NOTE]
>  입력된 문자열의 경우 처럼 직접적인 사용자 입력을 나타낼 수는 <xref:System.Windows.Forms.MaskedTextBox>, 사용자 입력/출력 작업와 직접 관련 된 다른 프로세스에 의해 생성 될 수 있습니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.MaskedTextBox" />
    <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskedTextProvider" />
    <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.ComponentModel.MaskedTextProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mask">입력 마스크를 나타내는 <see cref="T:System.String" />입니다.</param>
        <summary>지정된 마스크를 사용하여 <see cref="T:System.ComponentModel.MaskedTextProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자를 사용 하는 다음 호출 하는 것은 <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> 생성자:  
  
 `MaskedTextProvider(mask , null, true, '_', '\0', false)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, bool restrictToAscii);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, bool restrictToAscii) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, restrictToAscii As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, bool restrictToAscii);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="restrictToAscii" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask">입력 마스크를 나타내는 <see cref="T:System.String" />입니다.</param>
        <param name="restrictToAscii">
          입력을 ASCII 호환 문자로 제한하려면 <see langword="true" />이고, 전체 유니코드 집합을 허용하려면 <see langword="false" />입니다.</param>
        <summary>지정된 마스크와 ASCII 제한 값을 사용하여 <see cref="T:System.ComponentModel.MaskedTextProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자를 사용 하는 다음 호출 하는 것은 <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> 생성자:  
  
 `MaskedTextProvider(mask , null, true, '_', '\0', restrictToASCII)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AsciiOnly" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="mask">입력 마스크를 나타내는 <see cref="T:System.String" />입니다.</param>
        <param name="culture">영역을 구분하는 구분 문자를 설정하는 데 사용되는 <see cref="T:System.Globalization.CultureInfo" />입니다.</param>
        <summary>지정된 마스크와 culture를 사용하여 <see cref="T:System.ComponentModel.MaskedTextProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자를 사용 하는 다음 호출 하는 것은 <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> 생성자:  
  
 `MaskedTextProvider(mask , culture, true, '_', '\0', false)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Culture" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, char passwordChar, bool allowPromptAsInput);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, char passwordChar, bool allowPromptAsInput) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Char,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, passwordChar As Char, allowPromptAsInput As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, char passwordChar, bool allowPromptAsInput);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="passwordChar" Type="System.Char" />
        <Parameter Name="allowPromptAsInput" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask">입력 마스크를 나타내는 <see cref="T:System.String" />입니다.</param>
        <param name="passwordChar">암호 문자열에 입력된 문자에 대해 표시될 <see cref="T:System.Char" />입니다.</param>
        <param name="allowPromptAsInput">
          프롬프트 문자를 입력으로 허용하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>지정된 마스크, 암호 문자 및 프롬프트 용도 값을 사용하여 <see cref="T:System.ComponentModel.MaskedTextProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자를 사용 하는 다음 호출 하는 것은 <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> 생성자:  
  
 `MaskedTextProvider(mask , null, allowPromptAsInput, '_', passwordChar, false)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, bool restrictToAscii);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, class System.Globalization.CultureInfo culture, bool restrictToAscii) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, culture As CultureInfo, restrictToAscii As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, System::Globalization::CultureInfo ^ culture, bool restrictToAscii);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="restrictToAscii" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask">입력 마스크를 나타내는 <see cref="T:System.String" />입니다.</param>
        <param name="culture">영역을 구분하는 구분 문자를 설정하는 데 사용되는 <see cref="T:System.Globalization.CultureInfo" />입니다.</param>
        <param name="restrictToAscii">
          입력을 ASCII 호환 문자로 제한하려면 <see langword="true" />이고, 전체 유니코드 집합을 허용하려면 <see langword="false" />입니다.</param>
        <summary>지정된 마스크, culture 및 ASCII 제한 값을 사용하여 <see cref="T:System.ComponentModel.MaskedTextProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자를 사용 하는 다음 호출 하는 것은 <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> 생성자:  
  
 `MaskedTextProvider(mask , culture, true, '_', '\0', restrictToAscii)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Culture" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AsciiOnly" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, char passwordChar, bool allowPromptAsInput);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, class System.Globalization.CultureInfo culture, char passwordChar, bool allowPromptAsInput) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Char,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, culture As CultureInfo, passwordChar As Char, allowPromptAsInput As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, System::Globalization::CultureInfo ^ culture, char passwordChar, bool allowPromptAsInput);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="passwordChar" Type="System.Char" />
        <Parameter Name="allowPromptAsInput" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask">입력 마스크를 나타내는 <see cref="T:System.String" />입니다.</param>
        <param name="culture">영역을 구분하는 구분 문자를 설정하는 데 사용되는 <see cref="T:System.Globalization.CultureInfo" />입니다.</param>
        <param name="passwordChar">암호 문자열에 입력된 문자에 대해 표시될 <see cref="T:System.Char" />입니다.</param>
        <param name="allowPromptAsInput">
          프롬프트 문자를 입력으로 허용하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>지정된 마스크, culture, 암호 문자 및 프롬프트 용도 값을 사용하여 <see cref="T:System.ComponentModel.MaskedTextProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자를 사용 하는 다음 호출 하는 것은 <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> 생성자:  
  
 `MaskedTextProvider(mask , culture, allowPromptAsInput, '_', passwordChar, false)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Culture" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, bool allowPromptAsInput, char promptChar, char passwordChar, bool restrictToAscii);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, class System.Globalization.CultureInfo culture, bool allowPromptAsInput, char promptChar, char passwordChar, bool restrictToAscii) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean,System.Char,System.Char,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, culture As CultureInfo, allowPromptAsInput As Boolean, promptChar As Char, passwordChar As Char, restrictToAscii As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, System::Globalization::CultureInfo ^ culture, bool allowPromptAsInput, char promptChar, char passwordChar, bool restrictToAscii);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="allowPromptAsInput" Type="System.Boolean" />
        <Parameter Name="promptChar" Type="System.Char" />
        <Parameter Name="passwordChar" Type="System.Char" />
        <Parameter Name="restrictToAscii" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask">입력 마스크를 나타내는 <see cref="T:System.String" />입니다.</param>
        <param name="culture">영역을 구분하는 구분 문자를 설정하는 데 사용되는 <see cref="T:System.Globalization.CultureInfo" />입니다.</param>
        <param name="allowPromptAsInput">프롬프트 문자가 유효한 입력 문자로 허용되는지 여부를 지정하는 <see cref="T:System.Boolean" /> 값입니다.</param>
        <param name="promptChar">사용자 입력에 대한 자리 표시자로 표시될 <see cref="T:System.Char" />입니다.</param>
        <param name="passwordChar">암호 문자열에 입력된 문자에 대해 표시될 <see cref="T:System.Char" />입니다.</param>
        <param name="restrictToAscii">
          입력을 ASCII 호환 문자로 제한하려면 <see langword="true" />이고, 전체 유니코드 집합을 허용하려면 <see langword="false" />입니다.</param>
        <summary>지정된 마스크, culture, 프롬프트 용도 값, 프롬프트 문자, 암호 문자 및 ASCII 제한 값을 사용하여 <see cref="T:System.ComponentModel.MaskedTextProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자는 오버 로드 된 가장 일반적인 양식을 나타냅니다. `mask` 매개 변수에 의해 정의 된 마스킹 언어 따라야 합니다는 <xref:System.ComponentModel.MaskedTextProvider> 에 자세히 설명 하는 클래스는 <xref:System.Windows.Forms.MaskedTextBox.Mask%2A?displayProperty=nameWithType> 의 속성은 <xref:System.Windows.Forms.MaskedTextBox> 클래스.  
  
 문화권 관련 정보에 대 한 중립 문화권을 쿼리할 수 없습니다 때문에 <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> 생성자 ´ ֲ는 <xref:System.Globalization.CultureInfo.GetCultures%2A> 메서드를 사용 하는 적절 한 구분 기호 문자를 결정 하는 첫 번째 비 중립 문화권에 대 한 검색 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">마스크 매개 변수가 <see langword="null" />이거나 <see cref="F:System.String.Empty" />인 경우  
  
 또는  
  
 마스크에 하나 이상의 인쇄할 수 없는 문자가 포함된 경우</exception>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.Clone" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Culture" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AsciiOnly" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>서식이 지정된 문자열에 입력 문자나 입력 문자열을 추가합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public bool Add (char input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Add(char input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Add(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Add(char input);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="input">서식이 지정된 문자열에 추가할 <see cref="T:System.Char" /> 값입니다.</param>
        <summary>서식이 지정된 문자열의 끝에 지정된 입력 문자를 추가합니다.</summary>
        <returns>
          입력 문자가 성공적으로 추가되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29> 메서드 추가 `input` 문자 형식이 지정 된 문자열의 첫 번째 사용 가능한 위치에는 값으로 표시 된 마지막 할당 된 위치 뒤의 <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> 속성입니다. 이 메서드는 다음과 같은 원인에 대 한 실패 합니다.  
  
-   입력된 값 `input`,이 인쇄 가능 해당 마스크 요소는 일치 하지 않습니다.  
  
-   서식이 지정 된 문자열에서 사용 가능한 편집 위치가 0 개 또는 사용 가능한 편집 위치가 없습니다 후 마지막에 할당 된 위치입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public bool Add (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Add(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Add(System::String ^ input);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">서식이 지정된 문자열에 추가할 문자 값을 포함하는 <see cref="T:System.String" />입니다.</param>
        <summary>서식이 지정된 문자열의 끝에 지정된 입력 문자열의 문자를 추가합니다.</summary>
        <returns>
          입력 문자열의 모든 문자가 성공적으로 추가되었으면 <see langword="true" />이고, 추가된 문자가 없음을 나타내면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29> 에서 문자를 추가 하는 메서드는 `input` 후 사용 가능한 첫 번째 위치로 시작 하는 형식이 지정 된 문자열을 문자열 <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>합니다. 이 메서드는 다음과 같은 원인에 대 한 실패 합니다.  
  
-   입력된 값에는 문자 `input`, 입력된 값 또는 인쇄할 수 없는, 해당 마스크 요소는 일치 하지 않습니다.  
  
-   않습니다 서식이 지정 된 문자열에 충분 한 사용 가능한 편집 위치가 후 마지막에 할당 된 위치입니다.  
  
 이 방법이 실패 하면, 한 추가 되지 않으며 메서드에서 반환 하는 경우 `false`합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="input" /> 매개 변수가 <see langword="null" />인 경우</exception>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public bool Add (char input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Add(char input, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Add(System.Char,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As Char, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Add(char input, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">서식이 지정된 문자열에 추가할 <see cref="T:System.Char" /> 값입니다.</param>
        <param name="testPosition">문자를 추가하려고 한 서식이 지정된 문자열의 위치(0부터 시작)입니다. 출력 매개 변수입니다.</param>
        <param name="resultHint">작업의 결과를 간략하게 설명하는 <see cref="T:System.ComponentModel.MaskedTextResultHint" />입니다. 출력 매개 변수입니다.</param>
        <summary>서식이 지정된 문자열의 끝에 지정된 입력 문자를 추가한 다음 위치와 설명 정보를 출력합니다.</summary>
        <returns>
          입력 문자가 성공적으로 추가되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> 메서드를 추가 하려고 합니다.는 `input` 문자 형식이 지정 된 문자열의 첫 번째 사용 가능한 위치에는 값으로 표시 된 마지막 할당 된 위치 뒤의 <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> 속성입니다. 이 메서드는 사용 가능한 모든 위치가 마지막 위치에 할당된 하기 전에 경우 실패 합니다. 이 메서드는 다음과 같은 원인에 대 한 실패 합니다.  
  
-   입력된 값 `input`,이 인쇄 가능 해당 마스크 요소는 일치 하지 않습니다.  
  
-   서식이 지정 된 문자열에서 사용 가능한 편집 위치가 0 개 또는 사용 가능한 편집 위치가 없습니다 후 마지막에 할당 된 위치입니다.  
  
 이 메서드는 동일 하 게 작동 하는 단일 재정의 버전 <xref:System.Char> 매개 변수를 <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29>제외 하 고 추가 정보를 출력 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public bool Add (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Add(string input, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Add(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As String, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Add(System::String ^ input, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">서식이 지정된 문자열에 추가할 문자 값을 포함하는 <see cref="T:System.String" />입니다.</param>
        <param name="testPosition">문자를 추가하려고 한 서식이 지정된 문자열의 위치(0부터 시작)입니다. 출력 매개 변수입니다.</param>
        <param name="resultHint">작업의 결과를 간략하게 설명하는 <see cref="T:System.ComponentModel.MaskedTextResultHint" />입니다. 출력 매개 변수입니다.</param>
        <summary>서식이 지정된 문자열의 끝에 지정된 입력 문자열의 문자를 추가한 다음 위치와 설명 정보를 출력합니다.</summary>
        <returns>
          입력 문자열의 모든 문자가 성공적으로 추가되었으면 <see langword="true" />이고, 추가된 문자가 없음을 나타내면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> 에서 문자를 추가 하는 메서드는 `input` 후 사용 가능한 첫 번째 위치로 시작 하는 형식이 지정 된 문자열을 문자열 <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>합니다. 이 메서드는 다음과 같은 원인에 대 한 실패 합니다.  
  
-   입력된 값에는 문자 `input`, 입력된 값 또는 인쇄할 수 없는, 해당 마스크 요소는 일치 하지 않습니다.  
  
-   않습니다 서식이 지정 된 문자열에 충분 한 사용 가능한 편집 위치가 후 마지막에 할당 된 위치입니다.  
  
 이 방법이 실패 하면, 한 추가 되지 않으며 메서드에서 반환 하는 경우 `false`합니다.  
  
 이 메서드는 동일 하 게 작동 하는 단일 재정의 버전 <xref:System.String> 매개 변수를 <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29>제외 하 고 추가 정보를 출력 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="AllowPromptAsInput">
      <MemberSignature Language="C#" Value="public bool AllowPromptAsInput { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPromptAsInput" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowPromptAsInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowPromptAsInput { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>프롬프트 문자가 유효한 입력 문자로 처리되는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          사용자가 컨트롤에 <see cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />를 입력할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> 에 속성의 값이 설정의 <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> 생성자입니다.  
  
 경우에 <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> 은 `true`를 수락 하려면 프롬프트 문자가 마스크의 현재 위치에 대해 유효 해야 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
      </Docs>
    </Member>
    <Member MemberName="AsciiOnly">
      <MemberSignature Language="C#" Value="public bool AsciiOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AsciiOnly" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.AsciiOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsciiOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AsciiOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>마스크에 ASCII 문자 집합 밖에 있는 문자가 허용되는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          ASCII만 허용되면 <see langword="true" />이고, <see cref="T:System.ComponentModel.MaskedTextProvider" />에서 임의의 유니코드 문자를 허용하면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> 에 속성의 값이 설정의 <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> 생성자입니다.  
  
 경우 `true`, <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> 사용자 입력은 ASCII 문자 집합을 제한 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AsciiOnly" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
      </Docs>
    </Member>
    <Member MemberName="AssignedEditPositionCount">
      <MemberSignature Language="C#" Value="public int AssignedEditPositionCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AssignedEditPositionCount" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssignedEditPositionCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AssignedEditPositionCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>입력 값이 이미 성공적으로 할당된 편집 가능한 문자 위치의 수를 가져옵니다.</summary>
        <value>서식이 지정된 문자열에서 문자 값이 이미 할당된 입력 마스크의 편집 가능한 문자 위치 수를 포함하는 <see cref="T:System.Int32" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 편집 가능한 문자 위치를 나타내는의 총 수는 <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> 속성의 합계와 같아야 합니다.는 <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> 및 <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="AvailableEditPositionCount">
      <MemberSignature Language="C#" Value="public int AvailableEditPositionCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AvailableEditPositionCount" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AvailableEditPositionCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AvailableEditPositionCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>입력 값이 아직 할당되지 않은 입력 마스크의 편집 가능한 문자 위치 수를 가져옵니다.</summary>
        <value>문자 값이 아직 할당되지 않은 편집 가능한 문자 위치 수를 포함하는 <see cref="T:System.Int32" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 편집 가능한 문자 위치를 나타내는의 총 수는 <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> 속성의 합계와 같아야 합니다.는 <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> 및 <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Clear">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>서식이 지정된 문자열에서 입력 문자를 모두 지웁니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>서식이 지정된 문자열에서 편집 가능한 입력 문자를 모두 지우고 프롬프트 문자로 바꿉니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.Clear> 메서드 편집 가능한 모든 위치에 프롬프트 문자를 삽입 하는 형식이 지정 된 문자열을 다시 초기화 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear (out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear([out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Clear(System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear (ByRef resultHint As MaskedTextResultHint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear([Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="resultHint">작업의 결과를 간략하게 설명하는 <see cref="T:System.ComponentModel.MaskedTextResultHint" />입니다. 출력 매개 변수입니다.</param>
        <summary>서식이 지정된 문자열에서 편집 가능한 입력 문자를 모두 지우고 프롬프트 문자로 바꾼 다음 설명 정보를 출력합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.Clear%28System.ComponentModel.MaskedTextResultHint%40%29> 메서드 편집 가능한 모든 위치에 프롬프트 문자를 삽입 하는 형식이 지정 된 문자열을 다시 초기화 합니다. 매개 변수를 사용 하는 재정의 된 버전에 동등 하 게 작동 <xref:System.ComponentModel.MaskedTextProvider.Clear>, 추가 정보를 출력 하는 제외 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 <see cref="T:System.ComponentModel.MaskedTextProvider" />의 복사본을 만듭니다.</summary>
        <returns>이 메서드가 만들고 개체로 캐스팅하는 <see cref="T:System.ComponentModel.MaskedTextProvider" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.Clone%2A> 현재의 새 복사본을 반환 하는 메서드 <xref:System.ComponentModel.MaskedTextProvider>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.#ctor" />
        <altmember cref="T:System.ICloneable" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.Culture" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>입력 마스크에서 지역화할 수 있는 구분 기호와 자리 표시자의 값을 결정하는 culture를 가져옵니다.</summary>
        <value>입력 마스크와 연결된 culture 정보를 포함하는 <see cref="T:System.Globalization.CultureInfo" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.Culture%2A> 에서 속성이 설정 된 <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> 생성자입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Culture" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
      </Docs>
    </Member>
    <Member MemberName="DefaultPasswordChar">
      <MemberSignature Language="C#" Value="public static char DefaultPasswordChar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property char DefaultPasswordChar" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultPasswordChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property char DefaultPasswordChar { char get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자 입력을 숨기는 데 사용되는 기본 암호 문자를 가져옵니다.</summary>
        <value>기본 암호 문자를 나타내는 <see cref="T:System.Char" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A> 속성에 정의 된는 <xref:System.ComponentModel.MaskedTextProvider> 별표 문자 (*)를 클래스입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IsPassword" />
      </Docs>
    </Member>
    <Member MemberName="EditPositionCount">
      <MemberSignature Language="C#" Value="public int EditPositionCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EditPositionCount" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditPositionCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int EditPositionCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>서식이 지정된 문자열의 편집 가능한 위치 수를 가져옵니다.</summary>
        <value>서식이 지정된 문자열의 편집 가능한 위치 수를 포함하는 <see cref="T:System.Int32" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 편집 가능한 문자 위치를 나타내는의 총 수는 <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> 속성의 합과 같도록는 <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> 및 <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> 속성입니다. 이 값에는 필수 및 선택적 편집 가능한 문자를 모두 포함 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="EditPositions">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator EditPositions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator EditPositions" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditPositions As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IEnumerator ^ EditPositions { System::Collections::IEnumerator ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>서식이 지정된 문자열의 편집 가능한 위치에 대해 새로 만든 열거자를 가져옵니다.</summary>
        <value>서식이 지정된 문자열의 편집 가능한 위치에 대한 열거를 지원하는 <see cref="T:System.Collections.IEnumerator" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 액세스할 때마다는 <xref:System.ComponentModel.MaskedTextProvider.EditPositions%2A> 속성을 편집 가능한 위치에 임시 컬렉션을 만들어집니다는 검색 된 <xref:System.Collections.IEnumerator> 에서 작동 합니다.  
  
 이 컬렉션은 읽기 전용입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindAssignedEditPositionFrom">
      <MemberSignature Language="C#" Value="public int FindAssignedEditPositionFrom (int position, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindAssignedEditPositionFrom(int32 position, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAssignedEditPositionFrom (position As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindAssignedEditPositionFrom(int position, bool direction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="position">검색을 시작할 서식이 지정된 문자열의 위치(0부터 시작)입니다.</param>
        <param name="direction">검색 방향을 나타내는 <see cref="T:System.Boolean" />으로, 앞으로 검색하려면 <see langword="true" />를 지정하고 뒤로 검색하려면 <see langword="false" />를 지정합니다.</param>
        <summary>지정된 검색 방향을 사용하여 지정된 위치 다음의 첫 번째 할당된 편집 가능한 위치를 반환합니다.</summary>
        <returns>검색에 성공하면 첫 번째 할당된 편집 가능한 위치(0부터 시작)를 나타내는 <see cref="T:System.Int32" />이고, 그렇지 않으면 <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 편집 가능한 문자로 구성 되어 서식이 지정 된 문자열 및 리터럴에서 복사 / / 마스크입니다. 편집 가능한 문자 위치 입력 할당 된 경우 유효한 입력된 문자가 또는 다시 할당 그렇지 않은 경우 마스크에서 복사 된 프롬프트 문자가 차지 하거나 됩니다.  
  
 <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A> 지정된 된 위치와 검색 방향을 후 첫 번째 할당 된 문자를 검색할 메서드를 사용 합니다. 결과에 대 한 매개 변수로 전달할 수 있습니다 이후에 <xref:System.ComponentModel.MaskedTextProvider.Item%2A> 인덱서가이 위치에 할당 된 값을 가져옵니다.  
  
 <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> 및 <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A> 메서드는이 메서드를 보완 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindAssignedEditPositionInRange">
      <MemberSignature Language="C#" Value="public int FindAssignedEditPositionInRange (int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindAssignedEditPositionInRange(int32 startPosition, int32 endPosition, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAssignedEditPositionInRange (startPosition As Integer, endPosition As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindAssignedEditPositionInRange(int startPosition, int endPosition, bool direction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPosition">검색이 시작되는 서식이 지정된 문자열의 위치(0부터 시작)입니다.</param>
        <param name="endPosition">검색이 끝나는 서식이 지정된 문자열의 위치(0부터 시작)입니다.</param>
        <param name="direction">검색 방향을 나타내는 <see cref="T:System.Boolean" />으로, 앞으로 검색하려면 <see langword="true" />를 지정하고 뒤로 검색하려면 <see langword="false" />를 지정합니다.</param>
        <summary>지정된 검색 방향을 사용하여 지정된 위치 사이에 있는 첫 번째 할당된 편집 가능한 위치를 반환합니다.</summary>
        <returns>검색에 성공하면 첫 번째 할당된 편집 가능한 위치(0부터 시작)를 나타내는 <see cref="T:System.Int32" />이고, 그렇지 않으면 <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 편집 가능한 문자로 구성 되어 서식이 지정 된 문자열 및 리터럴에서 복사 / / 마스크입니다. 편집 가능한 문자 위치 입력 할당 된 경우 유효한 입력된 문자가 또는 다시 할당 그렇지 않은 경우 마스크에서 복사 된 프롬프트 문자가 차지 하거나 됩니다.  
  
 <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A> 두 지정 된 위치 사이 (포함), 지정 된 검색 방향을 사용 하 여 할당 된 첫 번째 문자를 검색할 메서드를 사용 합니다. 결과에 대 한 매개 변수로 전달할 수 있습니다 이후에 <xref:System.ComponentModel.MaskedTextProvider.Item%2A> 인덱서가이 위치에 할당 된 값을 가져옵니다.  
  
 <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> 및 <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A> 메서드는이 메서드를 보완 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindEditPositionFrom">
      <MemberSignature Language="C#" Value="public int FindEditPositionFrom (int position, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindEditPositionFrom(int32 position, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindEditPositionFrom (position As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindEditPositionFrom(int position, bool direction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="position">검색을 시작할 서식이 지정된 문자열의 위치(0부터 시작)입니다.</param>
        <param name="direction">검색 방향을 나타내는 <see cref="T:System.Boolean" />으로, 앞으로 검색하려면 <see langword="true" />를 지정하고 뒤로 검색하려면 <see langword="false" />를 지정합니다.</param>
        <summary>지정된 검색 방향을 사용하여 지정된 위치 다음의 첫 번째 편집 가능한 위치를 반환합니다.</summary>
        <returns>검색에 성공하면 첫 번째 편집 가능한 위치(0부터 시작)를 나타내는 <see cref="T:System.Int32" />이고, 그렇지 않으면 <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A> 메서드 검색 한 다음 지정 하거나 지정된 된 위치 다음 서식이 지정 된 문자열에서 편집할 수 있는 위치를 지정 하는 데 사용 됩니다.  
  
 <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> 메서드는이 메서드의 보완 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindEditPositionInRange">
      <MemberSignature Language="C#" Value="public int FindEditPositionInRange (int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindEditPositionInRange(int32 startPosition, int32 endPosition, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindEditPositionInRange (startPosition As Integer, endPosition As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindEditPositionInRange(int startPosition, int endPosition, bool direction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPosition">검색이 시작되는 서식이 지정된 문자열의 위치(0부터 시작)입니다.</param>
        <param name="endPosition">검색이 끝나는 서식이 지정된 문자열의 위치(0부터 시작)입니다.</param>
        <param name="direction">검색 방향을 나타내는 <see cref="T:System.Boolean" />으로, 앞으로 검색하려면 <see langword="true" />를 지정하고 뒤로 검색하려면 <see langword="false" />를 지정합니다.</param>
        <summary>지정된 검색 방향을 사용하여 지정된 위치 사이에 있는 첫 번째 편집 가능한 위치를 반환합니다.</summary>
        <returns>검색에 성공하면 첫 번째 편집 가능한 위치(0부터 시작)를 나타내는 <see cref="T:System.Int32" />이고, 그렇지 않으면 <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A> 사이 (포함), 지정 된 검색 방향을 사용 하 여 두 지정 된 위치를 편집 가능한 첫 번째 문자를 검색할 메서드를 사용 합니다. 결과에 대 한 매개 변수로 전달할 수 있습니다 이후에 <xref:System.ComponentModel.MaskedTextProvider.Item%2A> 인덱서가이 위치에 할당 된 값을 가져옵니다.  
  
 <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> 메서드는이 메서드의 보완 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindNonEditPositionFrom">
      <MemberSignature Language="C#" Value="public int FindNonEditPositionFrom (int position, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindNonEditPositionFrom(int32 position, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNonEditPositionFrom (position As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindNonEditPositionFrom(int position, bool direction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="position">검색을 시작할 서식이 지정된 문자열의 위치(0부터 시작)입니다.</param>
        <param name="direction">검색 방향을 나타내는 <see cref="T:System.Boolean" />으로, 앞으로 검색하려면 <see langword="true" />를 지정하고 뒤로 검색하려면 <see langword="false" />를 지정합니다.</param>
        <summary>지정된 검색 방향을 사용하여 지정된 위치 다음의 첫 번째 편집 가능하지 않은 위치를 반환합니다.</summary>
        <returns>검색에 성공하면 첫 번째 리터럴 위치(0부터 시작)를 나타내는 <see cref="T:System.Int32" />이고, 그렇지 않으면 <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> 메서드는 지정된 된 위치 다음 서식이 지정 된 문자열에서 리터럴 다음 문자를 검색 하는 데 사용 됩니다. 결과에 대 한 매개 변수로 전달할 수 있습니다 이후에 <xref:System.ComponentModel.MaskedTextProvider.Item%2A> 인덱서가이 위치에 리터럴 값을 가져옵니다.  
  
 <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A> 메서드는이 메서드의 보완 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindNonEditPositionInRange">
      <MemberSignature Language="C#" Value="public int FindNonEditPositionInRange (int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindNonEditPositionInRange(int32 startPosition, int32 endPosition, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNonEditPositionInRange (startPosition As Integer, endPosition As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindNonEditPositionInRange(int startPosition, int endPosition, bool direction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPosition">검색이 시작되는 서식이 지정된 문자열의 위치(0부터 시작)입니다.</param>
        <param name="endPosition">검색이 끝나는 서식이 지정된 문자열의 위치(0부터 시작)입니다.</param>
        <param name="direction">검색 방향을 나타내는 <see cref="T:System.Boolean" />으로, 앞으로 검색하려면 <see langword="true" />를 지정하고 뒤로 검색하려면 <see langword="false" />를 지정합니다.</param>
        <summary>지정된 검색 방향을 사용하여 지정된 위치 사이에 있는 첫 번째 편집 가능하지 않은 위치를 반환합니다.</summary>
        <returns>검색에 성공하면 첫 번째 리터럴 위치(0부터 시작)를 나타내는 <see cref="T:System.Int32" />이고, 그렇지 않으면 <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> 두 지정 된 위치 사이 (포함)에 지정 된 검색 방향을 사용 하는 첫 번째 문자를 검색할 메서드를 사용 합니다. 결과에 대 한 매개 변수로 전달할 수 있습니다 이후에 <xref:System.ComponentModel.MaskedTextProvider.Item%2A> 인덱서가이 위치에 리터럴 값을 가져옵니다.  
  
 <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A> 메서드는이 메서드의 보완 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindUnassignedEditPositionFrom">
      <MemberSignature Language="C#" Value="public int FindUnassignedEditPositionFrom (int position, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindUnassignedEditPositionFrom(int32 position, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindUnassignedEditPositionFrom (position As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindUnassignedEditPositionFrom(int position, bool direction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="position">검색을 시작할 서식이 지정된 문자열의 위치(0부터 시작)입니다.</param>
        <param name="direction">검색 방향을 나타내는 <see cref="T:System.Boolean" />으로, 앞으로 검색하려면 <see langword="true" />를 지정하고 뒤로 검색하려면 <see langword="false" />를 지정합니다.</param>
        <summary>지정된 검색 방향을 사용하여 지정된 위치 다음의 첫 번째 할당되지 않은 편집 가능한 위치를 반환합니다.</summary>
        <returns>검색에 성공하면 첫 번째 할당되지 않은 편집 가능한 위치(0부터 시작)를 나타내는 <see cref="T:System.Int32" />이고, 그렇지 않으면 <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 편집 가능한 문자로 구성 되어 서식이 지정 된 문자열 및 리터럴에서 복사 / / 마스크입니다. 편집 가능한 문자 위치 입력 할당 된 경우 유효한 입력된 문자가 또는 다시 할당 그렇지 않은 경우 마스크에서 복사 된 프롬프트 문자가 차지 하거나 됩니다.  
  
 <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A> 지정된 된 위치와 검색 방향을 다음 할당 되지 않은 첫 번째 문자에 대 한 검색 메서드를 사용 합니다. 프롬프트 문자와이 위치를 차지 합니다.  
  
 <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> 및 <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A> 메서드는이 메서드를 보완 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindUnassignedEditPositionInRange">
      <MemberSignature Language="C#" Value="public int FindUnassignedEditPositionInRange (int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindUnassignedEditPositionInRange(int32 startPosition, int32 endPosition, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindUnassignedEditPositionInRange (startPosition As Integer, endPosition As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindUnassignedEditPositionInRange(int startPosition, int endPosition, bool direction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPosition">검색이 시작되는 서식이 지정된 문자열의 위치(0부터 시작)입니다.</param>
        <param name="endPosition">검색이 끝나는 서식이 지정된 문자열의 위치(0부터 시작)입니다.</param>
        <param name="direction">검색 방향을 나타내는 <see cref="T:System.Boolean" />으로, 앞으로 검색하려면 <see langword="true" />를 지정하고 뒤로 검색하려면 <see langword="false" />를 지정합니다.</param>
        <summary>지정된 검색 방향을 사용하여 지정된 위치 사이에 있는 첫 번째 할당되지 않은 편집 가능한 위치를 반환합니다.</summary>
        <returns>검색에 성공하면 첫 번째 할당되지 않은 편집 가능한 위치(0부터 시작)를 나타내는 <see cref="T:System.Int32" />이고, 그렇지 않으면 <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 편집 가능한 문자로 구성 되어 서식이 지정 된 문자열 및 리터럴에서 복사 / / 마스크입니다. 편집 가능한 문자 위치 입력 할당 된 경우 유효한 입력된 문자가 또는 다시 할당 그렇지 않은 경우 마스크에서 복사 된 프롬프트 문자가 차지 하거나 됩니다.  
  
 <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A> 두 지정 된 위치 사이 (포함), 지정 된 검색 방향을 사용 하 여 할당 되지 않은 첫 번째 문자를 검색할 메서드를 사용 합니다. 프롬프트 문자와이 위치를 차지 합니다.  
  
 <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> 및 <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A> 메서드는이 메서드를 보완 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetOperationResultFromHint">
      <MemberSignature Language="C#" Value="public static bool GetOperationResultFromHint (System.ComponentModel.MaskedTextResultHint hint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetOperationResultFromHint(valuetype System.ComponentModel.MaskedTextResultHint hint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint(System.ComponentModel.MaskedTextResultHint)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetOperationResultFromHint (hint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetOperationResultFromHint(System::ComponentModel::MaskedTextResultHint hint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hint" Type="System.ComponentModel.MaskedTextResultHint" />
      </Parameters>
      <Docs>
        <param name="hint">대개 이전 작업의 출력 매개 변수로 가져온 <see cref="T:System.ComponentModel.MaskedTextResultHint" /> 값입니다.</param>
        <summary>지정된 <see cref="T:System.ComponentModel.MaskedTextResultHint" />가 성공을 나타내는지 아니면 실패를 나타내는지를 확인합니다.</summary>
        <returns>
          지정된 <see cref="T:System.ComponentModel.MaskedTextResultHint" /> 값이 성공을 나타내면 <see langword="true" />이고, 실패를 나타내면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 메서드는 <xref:System.ComponentModel.MaskedTextProvider> 형식의 매개 변수를 포함 하는 클래스 <xref:System.ComponentModel.MaskedTextResultHint> 메서드가 작동 하는 방법에 대 한 정보를 출력 하는 데 사용 되는: <xref:System.ComponentModel.MaskedTextProvider.Add%2A>, <xref:System.ComponentModel.MaskedTextProvider.Clear%2A>, <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>, <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>, <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>, <xref:System.ComponentModel.MaskedTextProvider.Replace%2A> <xref:System.ComponentModel.MaskedTextProvider.Set%2A>, <xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A>, 및 <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>합니다. <xref:System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint%2A> 메서드는이 값을 해석 하 고 나타내는 부울 값을 반환 여부는 <xref:System.ComponentModel.MaskedTextResultHint> 작업이 성공 또는 실패 되었다는 신호에 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.MaskedTextResultHint" />
      </Docs>
    </Member>
    <Member MemberName="IncludeLiterals">
      <MemberSignature Language="C#" Value="public bool IncludeLiterals { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeLiterals" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeLiterals As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeLiterals { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>입력 마스크의 리터럴 문자가 서식이 지정된 문자열에 포함되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          리터럴이 포함되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> 및 <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> 속성 프롬프트 및 리터럴 문자를 호출할 때 표시 되는지 여부를 결정 합니다는 <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 메서드. 이러한 두 가지이 속성을 설정 하 여 `false`, 구문 분석된 된 문자열은 사용자가 입력 한 문자만 나타냅니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.SkipLiterals" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      </Docs>
    </Member>
    <Member MemberName="IncludePrompt">
      <MemberSignature Language="C#" Value="public bool IncludePrompt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludePrompt" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludePrompt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludePrompt { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" />가 서식이 지정된 문자열을 표시할 때 사용자 입력이 없음을 나타내는 데 사용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          프롬프트 문자가 사용자 입력이 제공되지 않은 위치를 나타내는 데 사용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> 및 <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> 속성 프롬프트 및 리터럴 문자를 호출할 때 표시 되는지 여부를 결정 합니다는 <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 메서드. 이러한 두 가지이 속성을 설정 하 여 `false`, 구문 분석된 된 문자열은 사용자가 입력 한 문자만 나타냅니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      </Docs>
    </Member>
    <MemberGroup MemberName="InsertAt">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>서식이 지정된 문자열의 특정한 위치에 문자나 문자열을 삽입합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public bool InsertAt (char input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InsertAt(char input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertAt (input As Char, position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InsertAt(char input, int position);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">삽입할 <see cref="T:System.Char" />입니다.</param>
        <param name="position">문자를 삽입할 서식이 지정된 문자열의 위치(0부터 시작)입니다.</param>
        <summary>서식이 지정된 문자열의 지정된 위치에 지정한 문자를 삽입합니다.</summary>
        <returns>
          성공적으로 삽입되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> 에 또는 다음에 지정 된 첫 번째 편집 위치에 문자를 삽입 하는 메서드는 `pos` 매개 변수입니다. 이 메서드는 모든 기존 문자의 이동 삽입 된 공간을 만들기 위해 위치를 하나씩 삽입 지점 뒤 `input` 문자입니다. 다음 오류 중 하나가 발생 삽입을 수행 하지 않으며 메서드에서 반환 `false`합니다.  
  
-   `pos` 매개 변수는 0 보다 작거나 보다 큰는 <xref:System.ComponentModel.MaskedTextProvider.Length%2A> 서식이 지정 된 문자열입니다.  
  
-   편집 가능한 문자 형식이 지정 된 문자열에 또는 다음 지정된 된 위치에 없습니다. `pos`합니다.  
  
-   삽입 문자 `input`, 않으므로 유효한 입력된 문자가 인쇄 가능 하지 않거나 해당 마스크 요소는 일치 하지 않습니다.  
  
-   기존 문자를 이동할 수 있도록 사용 가능한 위치가 삽입 지점으로의 오른쪽에 있습니다.  
  
-   기존 문자를 이동 하면 / / 마스크의 위반이 발생 합니다.  
  
 빈 `input` 문자열에 형식이 지정 되는 변경 되지 하면 문자열, 있지만 반환 `true`합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public bool InsertAt (string input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InsertAt(string input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertAt (input As String, position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InsertAt(System::String ^ input, int position);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">삽입할 <see cref="T:System.String" />입니다.</param>
        <param name="position">입력 문자열을 삽입할 서식이 지정된 문자열의 위치(0부터 시작)입니다.</param>
        <summary>서식이 지정된 문자열의 지정된 위치에 지정한 문자열을 삽입합니다.</summary>
        <returns>
          성공적으로 삽입되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> 에서 각 문자를 삽입 하는 메서드는 `input` 위치에 있는 편집 위치에 문자열 `pos` 이상. 이 메서드는 각 위치를 하나씩 삽입 지점 문자를 삽입 한 후 모든 기존 문자를 이동 합니다. 다음 오류 중 하나가 발생 삽입할 되지 않으며 메서드에서 반환 `false`합니다.  
  
-   `pos` 매개 변수는 0 보다 작거나 보다 큰는 <xref:System.ComponentModel.MaskedTextProvider.Length%2A> 서식이 지정 된 문자열입니다.  
  
-   편집 가능한 만큼 문자를 서식이 지정 된 문자열에 또는 다음 지정된 된 위치에 존재 `pos`에서 문자를 모두를 삽입 하는 등의 `input` 문자열입니다.  
  
-   삽입 문자 중 하나 이상이 없는 유효한 입력된 문자는 인쇄 하거나 해당 하는 마스크 요소를 맞지 않는 하기 때문에 있습니다.  
  
-   않습니다는 삽입 지점으로의 오른쪽에 충분히 사용할 수 있는 위치를 기존 문자를 이동할 수 없습니다.  
  
-   기존 문자를 이동 하면 / / 마스크의 위반이 발생 합니다. 각 개별 문자 삽입 중에 발생이 이동 하는 참고 합니다.  
  
 빈 `input` 문자열에 형식이 지정 되는 변경 되지 하면 문자열, 있지만 반환 `true`합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="input" /> 매개 변수가 <see langword="null" />인 경우</exception>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public bool InsertAt (char input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InsertAt(char input, int32 position, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertAt (input As Char, position As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InsertAt(char input, int position, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">삽입할 <see cref="T:System.Char" />입니다.</param>
        <param name="position">문자를 삽입할 서식이 지정된 문자열의 위치(0부터 시작)입니다.</param>
        <param name="testPosition">메서드가 성공적으로 수행되면 문자가 삽입된 마지막 위치이고, 그렇지 않으면 삽입에 실패한 첫 번째 위치입니다. 출력 매개 변수입니다.</param>
        <param name="resultHint">삽입 작업의 결과를 간략하게 설명하는 <see cref="T:System.ComponentModel.MaskedTextResultHint" />입니다. 출력 매개 변수입니다.</param>
        <summary>서식이 지정된 문자열의 지정된 위치에 지정한 문자를 삽입하고 마지막 삽입 위치와 작업의 상태를 반환합니다.</summary>
        <returns>
          성공적으로 삽입되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> 에 또는 다음에 지정 된 첫 번째 편집 위치에 문자를 삽입 하는 메서드는 `pos` 매개 변수입니다. 이 메서드는 모든 기존 문자의 이동 삽입 된 공간을 만들기 위해 위치를 하나씩 삽입 지점 뒤 `input` 문자입니다. 다음 오류 중 하나가 발생 삽입을 수행 하지 않으며 메서드에서 반환 `false`합니다.  
  
-   `pos` 매개 변수는 0 보다 작거나 보다 큰는 <xref:System.ComponentModel.MaskedTextProvider.Length%2A> 서식이 지정 된 문자열입니다.  
  
-   편집 가능한 문자 형식이 지정 된 문자열에 또는 다음 지정된 된 위치에 없습니다. `pos`합니다.  
  
-   삽입 문자 `input`, 않으므로 유효한 입력된 문자가 인쇄 가능 하지 않거나 해당 마스크 요소는 일치 하지 않습니다.  
  
-   기존 문자를 이동할 수 있도록 사용 가능한 위치가 삽입 지점으로의 오른쪽에 있습니다.  
  
-   기존 문자를 이동 하면 / / 마스크의 위반이 발생 합니다.  
  
 빈 `input` 문자열에 형식이 지정 되는 변경 되지 하면 문자열, 있지만 반환 `true`합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public bool InsertAt (string input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InsertAt(string input, int32 position, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertAt (input As String, position As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InsertAt(System::String ^ input, int position, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">삽입할 <see cref="T:System.String" />입니다.</param>
        <param name="position">입력 문자열을 삽입할 서식이 지정된 문자열의 위치(0부터 시작)입니다.</param>
        <param name="testPosition">메서드가 성공적으로 수행되면 문자가 삽입된 마지막 위치이고, 그렇지 않으면 삽입에 실패한 첫 번째 위치입니다. 출력 매개 변수입니다.</param>
        <param name="resultHint">삽입 작업의 결과를 간략하게 설명하는 <see cref="T:System.ComponentModel.MaskedTextResultHint" />입니다. 출력 매개 변수입니다.</param>
        <summary>서식이 지정된 문자열의 지정된 위치에 지정한 문자열을 삽입하고 마지막 삽입 위치와 작업의 상태를 반환합니다.</summary>
        <returns>
          성공적으로 삽입되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> 에서 각 문자를 삽입 하는 메서드는 `input` 위치에 있는 편집 위치에 문자열 `pos` 이상. 이 메서드는 각 위치를 하나씩 삽입 지점 문자를 삽입 한 후 모든 기존 문자를 이동 합니다. 다음 오류 중 하나가 발생 삽입할 되지 않으며 메서드에서 반환 `false`합니다.  
  
-   `pos` 매개 변수는 0 보다 작거나 보다 큰는 <xref:System.ComponentModel.MaskedTextProvider.Length%2A> 서식이 지정 된 문자열입니다.  
  
-   편집 가능한 만큼 문자를 서식이 지정 된 문자열에 또는 다음 지정된 된 위치에 존재 `pos`에서 문자를 모두를 삽입 하는 등의 `input` 문자열입니다.  
  
-   삽입 문자 중 하나 이상이 없는 유효한 입력된 문자는 인쇄 하거나 해당 하는 마스크 요소를 맞지 않는 하기 때문에 있습니다.  
  
-   않습니다는 삽입 지점으로의 오른쪽에 충분히 사용할 수 있는 위치를 기존 문자를 이동할 수 없습니다.  
  
-   기존 문자를 이동 하면 / / 마스크의 위반이 발생 합니다. 각 개별 문자 삽입 중에 발생이 이동 하는 참고 합니다.  
  
 빈 `input` 문자열에 형식이 지정 되는 변경 되지 하면 문자열, 있지만 반환 `true`합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="input" /> 매개 변수가 <see langword="null" />인 경우</exception>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="InvalidIndex">
      <MemberSignature Language="C#" Value="public static int InvalidIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 InvalidIndex" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvalidIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int InvalidIndex { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>잘못된 인덱스 범위의 상한을 가져옵니다.</summary>
        <value>가장 큰 잘못된 인덱스를 나타내는 값으로, 공급자 구현에서 확인됩니다. 예를 들어, 가장 작은 유효한 인덱스가 0이면 이 속성은 -1을 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.InvalidIndex%2A> 속성은 유효 하지 않은 인덱싱 작업의 경우와 같은 결과 나타내는 데 사용 되는 <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> 메서드.  
  
 공급자를 사용 하거나 직접 구현할 때 잘못 된 값, 잘못 된 보다는 하드 코딩 인식 인지 여부를 결정 하이 속성을 사용 해야 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsAvailablePosition">
      <MemberSignature Language="C#" Value="public bool IsAvailablePosition (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsAvailablePosition(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAvailablePosition (position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAvailablePosition(int position);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">테스트할 마스크의 위치(0부터 시작)입니다.</param>
        <summary>지정된 위치에 할당할 수 있는지 여부를 확인합니다.</summary>
        <returns>
          서식이 지정된 문자열의 지정된 위치가 편집 가능하고 아직 할당되지 않았으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.IsAvailablePosition%2A> 메서드 반환 `true` 다음 조건을 모두 만족 하는 경우:  
  
-   `pos` 매개 변수는이 서식이 지정 된 문자열의 범위 내에 즉, 해당 값 보다 크거나 0과 같은 같고 작은 보다는 <xref:System.ComponentModel.MaskedTextProvider.Length%2A> 서식이 지정 된 문자열입니다.  
  
-   지정된 된 위치에는 편집 가능한 문자입니다.  
  
-   문자는이 위치에 할당 되지 이미 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsEditPosition">
      <MemberSignature Language="C#" Value="public bool IsEditPosition (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEditPosition(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEditPosition (position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEditPosition(int position);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">테스트할 마스크의 위치(0부터 시작)입니다.</param>
        <summary>지정된 위치가 편집 가능한지 여부를 확인합니다.</summary>
        <returns>
          서식이 지정된 문자열의 지정된 위치가 편집 가능하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.IsEditPosition%2A> 메서드 반환 `true` 다음 조건 중 만족 하는 경우:  
  
-   `pos` 매개 변수는이 서식이 지정 된 문자열의 범위 내에 즉, 해당 값 보다 크거나 0과 같은 같고 작은 보다는 <xref:System.ComponentModel.MaskedTextProvider.Length%2A> 서식이 지정 된 문자열입니다.  
  
-   지정된 된 위치에는 편집 가능한 문자입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsPassword">
      <MemberSignature Language="C#" Value="public bool IsPassword { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPassword" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.IsPassword" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPassword As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPassword { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>암호 보호가 서식이 지정된 문자열에 적용되는지 여부를 결정하는 값을 가져오거나 설정합니다.</summary>
        <value>
          입력 문자열이 암호 문자열로 처리되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 두 가지 방법으로 다음 중 하나를 사용 하 여 암호 보호를 초기화할 수 있습니다.  
  
-   설정의 <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> 속성을 비-`null` 값입니다.  
  
-   설정는 <xref:System.ComponentModel.MaskedTextProvider.IsPassword%2A> 속성을 `true`.로 설정 된 <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> 속성을는 <xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A> 값입니다.  
  
 <xref:System.ComponentModel.MaskedTextProvider.IsPassword%2A> 사용 되는 <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> 및 <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 메서드를 사용 하 여 숨기 거 나 실제 입력된 문자를 표시할 것인지 결정 <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      </Docs>
    </Member>
    <Member MemberName="IsValidInputChar">
      <MemberSignature Language="C#" Value="public static bool IsValidInputChar (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidInputChar(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidInputChar (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidInputChar(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">테스트할 <see cref="T:System.Char" /> 값입니다.</param>
        <summary>지정된 문자가 유효한 입력 문자인지 여부를 확인합니다.</summary>
        <returns>
          지정된 문자에 유효한 입력 값이 포함되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 유효한 입력된 문자에는 문자, 숫자, 문장 부호, 기호 및 공백 문자를 포함 하는 모든 인쇄 가능한 문자, 포함 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AsciiOnly" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
      </Docs>
    </Member>
    <Member MemberName="IsValidMaskChar">
      <MemberSignature Language="C#" Value="public static bool IsValidMaskChar (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidMaskChar(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidMaskChar (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidMaskChar(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">테스트할 <see cref="T:System.Char" /> 값입니다.</param>
        <summary>지정된 문자가 유효한 마스크 문자인지 여부를 확인합니다.</summary>
        <returns>
          지정된 문자에 유효한 마스크 값이 포함되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 유효한 마스크 문자는 문자, 숫자, 문장 부호, 기호 및 공백 문자를 포함 하는 모든 인쇄 가능한 문자, 포함 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
      </Docs>
    </Member>
    <Member MemberName="IsValidPasswordChar">
      <MemberSignature Language="C#" Value="public static bool IsValidPasswordChar (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidPasswordChar(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidPasswordChar (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidPasswordChar(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">테스트할 <see cref="T:System.Char" /> 값입니다.</param>
        <summary>지정된 문자가 유효한 암호 문자인지 여부를 확인합니다.</summary>
        <returns>
          지정된 문자에 유효한 암호 값이 포함되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 유효한 암호 문자는 모든 인쇄 가능한 문자 및 암호 기능을 해제 하는 데 사용 되는 null 문자가 포함 됩니다. 인쇄 가능한 문자는 문자, 숫자, 문장 부호, 기호 및 공백 문자를 포함 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IsPassword" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public char this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char default[int] { char get(int index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">검색할 요소의 인덱스(0부터 시작)입니다.</param>
        <summary>서식이 지정된 문자열의 지정된 위치에서 요소를 가져옵니다.</summary>
        <value>서식이 지정된 문자열의 지정된 위치에 있는 <see cref="T:System.Char" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.Item%2A> 속성은에 대 한 표준 인덱서는 <xref:System.ComponentModel.MaskedTextProvider> 클래스입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <paramref name="index" />가 0보다 작거나 마스크의 <see cref="P:System.ComponentModel.MaskedTextProvider.Length" />보다 크거나 같은 경우</exception>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
      </Docs>
    </Member>
    <Member MemberName="LastAssignedPosition">
      <MemberSignature Language="C#" Value="public int LastAssignedPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LastAssignedPosition" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastAssignedPosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LastAssignedPosition { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>마스크에 할당된 가장 오른쪽 입력 문자에 대한 마스크의 인덱스를 가져옵니다.</summary>
        <value>입력 문자가 하나 이상 마스크에 할당되었으면 할당된 가장 오른쪽 위치의 인덱스를 포함하는 <see cref="T:System.Int32" />이고, 할당된 위치가 없으면 <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> 속성 입력된 문자가 할당 된 원점 기준으로 마스크에서 가장 멀리 있는 편집 위치를 나타냅니다. 영어와 같이 왼쪽에서 오른쪽 (왼쪽에서 오른쪽)를 읽을 언어에 대 한이 맨 오른쪽 위치를 할당 합니다. 언어의 오른쪽에서 왼쪽으로 (오른쪽에서 왼쪽)를 읽을 경우 맨 왼쪽 위치가 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>마스크 한정자 문자를 제외한 마스크의 길이를 가져옵니다.</summary>
        <value>마스크 입력을 수정하는 문자를 제외한 마스크의 위치 수를 포함하는 <see cref="T:System.Int32" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.Length%2A> 속성 리터럴 및 편집 가능한 문자를 포함 하는 마스크에 있는 문자의 총 수를 나타냅니다. 값을 빼서 리터럴 문자 수를 확인할 수는 <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> 에서 <xref:System.ComponentModel.MaskedTextProvider.Length%2A>합니다.  
  
 <xref:System.ComponentModel.MaskedTextProvider.Length%2A> 또한 입력된 문자, 리터럴 및 프롬프트 문자를 포함 하 여 형식이 지정 된 문자열의 길이 설명 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
      </Docs>
    </Member>
    <Member MemberName="Mask">
      <MemberSignature Language="C#" Value="public string Mask { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Mask" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.Mask" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mask As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Mask { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>입력 마스크를 가져옵니다.</summary>
        <value>전체 마스크를 포함하는 <see cref="T:System.String" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> 에서 속성이 설정 된 <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> 생성자입니다. 이 마스크는 마스킹 언어에서 정의 된 유효한 문자만 포함 해야 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.#ctor" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.MaskFull" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.MaskCompleted" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.Clone" />
      </Docs>
    </Member>
    <Member MemberName="MaskCompleted">
      <MemberSignature Language="C#" Value="public bool MaskCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MaskCompleted" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.MaskCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaskCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MaskCompleted { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>모든 필수 입력이 서식이 지정된 문자열에 입력되었는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          모든 필수 입력이 마스크에 입력되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> 속성 필수 입력된 요소만 확인 합니다. 모든 필수 및 선택적 입력된 요소 입력 되었는지 여부를 확인 하려면는 <xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A?displayProperty=nameWithType> 의 속성은 <xref:System.Windows.Forms.MaskedTextBox> 클래스를 대신 합니다.  
  
 현재 값은 <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> 속성 결정 서식 요소가 있는 것으로 간주 됩니다 필요 하며 선택적입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskCompleted" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.MaskFull" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
      </Docs>
    </Member>
    <Member MemberName="MaskFull">
      <MemberSignature Language="C#" Value="public bool MaskFull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MaskFull" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.MaskFull" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaskFull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MaskFull { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>모든 필수 입력과 선택적 입력이 서식이 지정된 문자열에 입력되었는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          모든 필수 입력과 선택적 입력이 입력되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우에 필요 입력 된 입력된 요소를 확인 하려면 사용 된 <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> 속성 대신 합니다. 현재 값은 <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> 속성 결정 서식 요소가 있는 것으로 간주 됩니다 필요 하며 선택적입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskFull" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.MaskCompleted" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
      </Docs>
    </Member>
    <Member MemberName="PasswordChar">
      <MemberSignature Language="C#" Value="public char PasswordChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PasswordChar" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      <MemberSignature Language="VB.NET" Value="Public Property PasswordChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char PasswordChar { char get(); void set(char value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>실제 입력 문자를 대체할 문자를 가져오거나 설정합니다.</summary>
        <value>암호 문자로 사용되는 <see cref="T:System.Char" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 중요 한 사용자 입력에 대 한 것이 일반적을 출력 작업 하는 동안 사용자가 입력 한 실제 정보를 숨깁니다. 경우는 <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> 속성 이외`null` 문자, 출력 메서드 같은 <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> 및 <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 와 지정 된 암호 문자는 입력된 문자를 숨깁니다. 이 속성을 설정 `null` 암호 보호 기능이 사용 되지 것입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">이 속성을 설정할 때 지정되는 암호 문자가 현재 프롬프트 문자 <see cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />와 같은 경우. 둘은 달라야 합니다.</exception>
        <exception cref="T:System.ArgumentException">
          <see cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" /> 메서드에서 확인한 결과 이 속성을 설정할 때 지정되는 문자가 유효한 암호 문자가 아닌 경우</exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IsPassword" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      </Docs>
    </Member>
    <Member MemberName="PromptChar">
      <MemberSignature Language="C#" Value="public char PromptChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PromptChar" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.PromptChar" />
      <MemberSignature Language="VB.NET" Value="Public Property PromptChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char PromptChar { char get(); void set(char value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용 가능한 모든 편집 위치에 대해 사용자 입력이 없음을 나타내는 데 사용되는 문자를 가져오거나 설정합니다.</summary>
        <value>사용자에게 입력하라고 요청하는 데 사용되는 문자입니다. 기본값은 밑줄(_)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> 속성에서 사용 되는 프롬프트 문자를 나타내는 <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> 및 <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 형식화 된 입력된 문자열의 현재 상태를 나타내는 방법입니다. 프롬프트 문자가 입력된 값이 아직 할당 하지 않은 편집 가능한 위치에 배치 됩니다. 일부 버전의는 <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 메서드는 또한의 값에 따라서도 달라질는 <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">이 속성을 설정할 때 지정되는 프롬프트 문자가 현재 암호 문자 <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />와 같은 경우. 둘은 달라야 합니다.</exception>
        <exception cref="T:System.ArgumentException">
          <see cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" /> 메서드에서 확인한 결과 이 속성을 설정할 때 지정되는 문자가 유효한 암호 문자가 아닌 경우</exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>서식이 지정된 문자열에서 마지막 할당된 문자를 제거합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>서식이 지정된 문자열에서 마지막 할당된 문자를 제거합니다.</summary>
        <returns>
          문자가 성공적으로 제거되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.Remove%2A> 아직 여기에서는 마스크에 할당 된 문자가 없으면 메서드는 영향을 주지 않습니다.  
  
 할당 된 마지막 문자는 서식이 지정 된 문자열에서 제거 되 면 이후에 입력할 해당 위치에 대 한 편집 가능한 마스크 문자 재설정 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove([out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Remove(System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove([Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="testPosition">서식이 지정된 문자열에서 문자가 실제로 제거된 위치(0부터 시작)입니다. 출력 매개 변수입니다.</param>
        <param name="resultHint">작업의 결과를 간략하게 설명하는 <see cref="T:System.ComponentModel.MaskedTextResultHint" />입니다. 출력 매개 변수입니다.</param>
        <summary>서식이 지정된 문자열에서 마지막 할당된 문자를 제거한 다음 제거 위치와 설명 정보를 출력합니다.</summary>
        <returns>
          문자가 성공적으로 제거되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.Remove%2A> 아직 여기에서는 마스크에 할당 된 문자가 없으면 메서드는 영향을 주지 않습니다.  
  
 할당 된 마지막 문자는 서식이 지정 된 문자열에서 제거 되 면 이후에 입력할 해당 위치에 대 한 편집 가능한 마스크 문자 재설정 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveAt">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>서식이 지정된 문자열에서 할당된 문자를 하나 이상 제거합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public bool RemoveAt (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAt(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAt (position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAt(int position);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">제거할 할당된 문자의 위치(0부터 시작)입니다.</param>
        <summary>서식이 지정된 문자열에서 지정된 위치에 있는 할당된 문자를 제거합니다.</summary>
        <returns>
          문자가 성공적으로 제거되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> 지정 제거 위치에 할당 된 문자가 없는 경우 메서드는 영향을 주지 않습니다. 리터럴 문자와이 메서드에 의해 영향을 받지 않습니다.  
  
 문자 제거 되 면 / / 마스크의 나머지 상위에 위치한 문자 제거에 의해 만들어진 간격 위해 왼쪽으로 이동 합니다. 비워진된 위치 입력에 대 한 다시 설정 됩니다. 입력 한 문자의 이동 마스크 정의 이유로 인해, 제거 하지 않습니다 발생 하며, 및 <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> 반환 `false`합니다.  
  
 이 메서드 호출 오버 로드 된 다음 호출 하는 것은 <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%28System.Int32%2CSystem.Int32%29> 버전:  
  
 `RemoveAt(pos, pos);`  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public bool RemoveAt (int startPosition, int endPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAt(int32 startPosition, int32 endPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAt (startPosition As Integer, endPosition As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAt(int startPosition, int endPosition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startPosition">제거할 첫 번째 할당된 문자의 인덱스(0부터 시작)입니다.</param>
        <param name="endPosition">제거할 마지막 할당된 문자의 인덱스(0부터 시작)입니다.</param>
        <summary>서식이 지정된 문자열에서 지정된 위치 사이에 있는 할당된 문자를 제거합니다.</summary>
        <returns>
          문자가 성공적으로 제거되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> 지정 된 제거 위치의에 할당 된 문자가 없는 경우 메서드는 영향을 주지 않습니다.  
  
 문자 제거 되 면 / / 마스크의 나머지 상위에 위치한 문자 제거에 의해 만들어진 간격 위해 왼쪽으로 이동 합니다. 비워진된 위치 입력에 대 한 다시 설정 됩니다. 입력 한 문자의 이동 마스크 정의 이유로 인해, 제거 하지 않습니다 발생 하며, 및 <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> 반환 `false`합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public bool RemoveAt (int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAt(int32 startPosition, int32 endPosition, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAt (startPosition As Integer, endPosition As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAt(int startPosition, int endPosition, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="startPosition">제거할 첫 번째 할당된 문자의 인덱스(0부터 시작)입니다.</param>
        <param name="endPosition">제거할 마지막 할당된 문자의 인덱스(0부터 시작)입니다.</param>
        <param name="testPosition">성공하면 서식이 지정된 문자열에서 문자가 실제로 제거된 위치(0부터 시작)이고, 그렇지 않으면 작업에 실패한 첫 번째 위치입니다. 출력 매개 변수입니다.</param>
        <param name="resultHint">작업의 결과를 간략하게 설명하는 <see cref="T:System.ComponentModel.MaskedTextResultHint" />입니다. 출력 매개 변수입니다.</param>
        <summary>서식이 지정된 문자열에서 지정된 위치 사이에 있는 할당된 문자를 제거한 다음 제거 위치와 설명 정보를 출력합니다.</summary>
        <returns>
          문자가 성공적으로 제거되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> 지정 된 제거 위치의에 할당 된 문자가 없는 경우 메서드는 영향을 주지 않습니다.  
  
 문자 제거 되 면 / / 마스크의 나머지 상위에 위치한 문자 제거에 의해 만들어진 간격 위해 왼쪽으로 이동 합니다. 비워진된 위치 입력에 대 한 다시 설정 됩니다. 입력 한 문자의 이동 마스크 정의 이유로 인해, 제거 하지 않습니다 발생 하며, 및 <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> 반환 `false`합니다.  
  
 이 버전의 <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> 메서드가 작동 하는 방법에 대 한 자세한 정보를 전달 하는 두 개의 추가 출력 매개 변수를 제공 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Replace">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>서식이 지정된 문자열의 편집 가능한 문자 하나 이상을 지정된 문자로 바꿉니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (char input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(char input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As Char, position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(char input, int position);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">기존 값을 바꾸는 <see cref="T:System.Char" /> 값입니다.</param>
        <param name="position">바꿀 첫 번째 편집 가능한 문자를 검색할 위치(0부터 시작)입니다.</param>
        <summary>지정된 위치나 그 뒤에 있는 한 문자를 지정된 문자 값으로 바꿉니다.</summary>
        <returns>
          문자가 성공적으로 바뀌었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%29> 서식이 지정 된 문자열에 또는 다음 지정된 된 위치에서 편집 가능한 첫 번째 위치에 대 한 메서드 검색 `pos`합니다. 지정된 된 문자를 편집 가능한 위치의 값이 변경가 있는 경우 `input`합니다. 다음 조건 중 하나에 바뀌지 않고 수행 하는 오류가 고 값의 발생 `false` 반환 됩니다.  
  
-   `pos` 매개 변수는 0 보다 작거나 보다 큰는 <xref:System.ComponentModel.MaskedTextProvider.Length%2A> 서식이 지정 된 문자열입니다.  
  
-   편집 가능한 문자 형식이 지정 된 문자열에 또는 다음 지정된 된 위치에 없습니다. `pos`합니다.  
  
-   대체 문자 `input`, 않으므로 유효한 입력된 문자가 인쇄 가능 하지 않거나 해당 마스크 요소는 일치 하지 않습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (string input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(string input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As String, position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(System::String ^ input, int position);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">기존의 편집 가능한 문자를 바꾸는 데 사용되는 <see cref="T:System.String" /> 값입니다.</param>
        <param name="position">바꿀 첫 번째 편집 가능한 문자를 검색할 위치(0부터 시작)입니다.</param>
        <summary>지정된 위치에서 시작하는 편집 가능한 문자의 범위를 지정된 문자열로 바꿉니다.</summary>
        <returns>
          모든 문자가 성공적으로 바뀌었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%29> 편집 가능한 첫 번째 위치에 또는 다음 지정된 된 위치에 대 한 메서드 검색 `pos`합니다. 기존 문자 값은이 시점 이후에 충분 한 편집 가능한 위치는 가정 운영를 대체 하 여 하나씩의 대체 문자열 매개 변수 내용 `input`합니다.  
  
 다음 조건에는 오류로 간주 됩니다. 오류가 발생할 때 발생 하는 대체 항목 없음 및 <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%29> 반환 `false`합니다.  
  
-   `pos` 매개 변수는 0 보다 작거나 보다 큰는 <xref:System.ComponentModel.MaskedTextProvider.Length%2A> 서식이 지정 된 문자열입니다.  
  
-   대체 문자열의 내용을 포함할 수 서식이 지정 된 문자열의 편집 가능한 위치 충분 하지 않습니다.  
  
-   대체 문자 값 중 하나가 올바르지 않습니다 인쇄 가능한 되지 않았거나 해당 하는 마스크 요소는 일치 하지 않습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="input" /> 매개 변수가 <see langword="null" />인 경우</exception>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (char input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(char input, int32 position, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As Char, position As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(char input, int position, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">기존 값을 바꾸는 <see cref="T:System.Char" /> 값입니다.</param>
        <param name="position">바꿀 첫 번째 편집 가능한 문자를 검색할 위치(0부터 시작)입니다.</param>
        <param name="testPosition">성공하면 서식이 지정된 문자열에서 마지막 문자가 실제로 바뀐 위치(0부터 시작)이고, 그렇지 않으면 작업에 실패한 첫 번째 위치입니다. 출력 매개 변수입니다.</param>
        <param name="resultHint">바꾸기 작업의 결과를 간략하게 설명하는 <see cref="T:System.ComponentModel.MaskedTextResultHint" />입니다. 출력 매개 변수입니다.</param>
        <summary>지정된 위치나 그 뒤에 있는 한 문자를 지정된 문자 값으로 바꾼 다음 제거 위치와 설명 정보를 출력합니다.</summary>
        <returns>
          문자가 성공적으로 바뀌었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> 서식이 지정 된 문자열에 또는 다음 지정된 된 위치에서 편집 가능한 첫 번째 위치에 대 한 메서드 검색 `pos`합니다. 지정된 된 문자를 편집 가능한 위치의 값이 변경가 있는 경우 `input`합니다. 다음 조건 중 하나에 바뀌지 않고 수행할 수 있는 오류 조건 및의 값에서 발생 `false` 반환 됩니다.  
  
-   `pos` 매개 변수는 0 보다 작거나 보다 큰는 <xref:System.ComponentModel.MaskedTextProvider.Length%2A> 서식이 지정 된 문자열입니다.  
  
-   편집 가능한 문자 형식이 지정 된 문자열에 또는 다음 지정된 된 위치에 없습니다. `pos`합니다.  
  
-   대체 문자 `input`, 않으므로 유효한 입력된 문자가 인쇄 가능 하지 않거나 해당 마스크 요소는 일치 하지 않습니다.  
  
 반환 값 외에도이 메서드는 두 개의 출력 매개 변수 바꾸기 작업에 대 한 추가 정보를 제공 하는.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (string input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(string input, int32 position, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As String, position As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(System::String ^ input, int position, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">기존의 편집 가능한 문자를 바꾸는 데 사용되는 <see cref="T:System.String" /> 값입니다.</param>
        <param name="position">바꿀 첫 번째 편집 가능한 문자를 검색할 위치(0부터 시작)입니다.</param>
        <param name="testPosition">성공하면 서식이 지정된 문자열에서 마지막 문자가 실제로 바뀐 위치(0부터 시작)이고, 그렇지 않으면 작업에 실패한 첫 번째 위치입니다. 출력 매개 변수입니다.</param>
        <param name="resultHint">바꾸기 작업의 결과를 간략하게 설명하는 <see cref="T:System.ComponentModel.MaskedTextResultHint" />입니다. 출력 매개 변수입니다.</param>
        <summary>지정된 위치에서 시작하는 편집 가능한 문자의 범위를 지정된 문자열로 바꾼 다음 제거 위치와 설명 정보를 출력합니다.</summary>
        <returns>
          모든 문자가 성공적으로 바뀌었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> 편집 가능한 첫 번째 위치에 또는 다음 지정된 된 위치에 대 한 메서드 검색 `pos`합니다. 이 시점 이후에 편집 가능한 충분 한 위치 있다고 가정 하에서 운영 하는 기존 문자 값이 대체 하 여 하나씩의 대체 문자열 매개 변수 내용 `input`합니다.  
  
 다음 조건에는 오류로 간주 됩니다. 오류가 발생할 때 발생 하는 대체 항목 없음 및 <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> 반환 `false`합니다.  
  
-   `pos` 매개 변수는 0 보다 작거나 보다 큰는 <xref:System.ComponentModel.MaskedTextProvider.Length%2A> 서식이 지정 된 문자열입니다.  
  
-   대체 문자열의 내용을 포함할 수 서식이 지정 된 문자열의 편집 가능한 위치 충분 하지 않습니다.  
  
-   대체 문자 값 중 하나가 올바르지 않습니다 인쇄 가능한 되지 않았거나 해당 하는 마스크 요소는 일치 하지 않습니다.  
  
 반환 값 외에도이 메서드는 두 개의 출력 매개 변수 바꾸기 작업에 대 한 추가 정보를 제공 하는.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (char input, int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(char input, int32 startPosition, int32 endPosition, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As Char, startPosition As Integer, endPosition As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(char input, int startPosition, int endPosition, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">기존 값을 바꾸는 <see cref="T:System.Char" /> 값입니다.</param>
        <param name="startPosition">바꾸기가 시작되는 서식이 지정된 문자열의 위치(0부터 시작)입니다.</param>
        <param name="endPosition">바꾸기가 끝나는 서식이 지정된 문자열의 위치(0부터 시작)입니다.</param>
        <param name="testPosition">성공하면 서식이 지정된 문자열에서 마지막 문자가 실제로 바뀐 위치(0부터 시작)이고, 그렇지 않으면 작업에 실패한 첫 번째 위치입니다. 출력 매개 변수입니다.</param>
        <param name="resultHint">바꾸기 작업의 결과를 간략하게 설명하는 <see cref="T:System.ComponentModel.MaskedTextResultHint" />입니다. 출력 매개 변수입니다.</param>
        <summary>지정된 시작 위치와 끝 위치 사이에 있는 한 문자를 지정된 문자 값으로 바꾼 다음 제거 위치와 설명 정보를 출력합니다.</summary>
        <returns>
          문자가 성공적으로 바뀌었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> 방법으로 지정 된 시작 및 끝 위치 사이의 서식이 지정 된 문자열에 편집 가능한 첫 번째 위치를 검색 합니다. 지정된 된 문자를 편집 가능한 위치의 값이 변경가 있는 경우 `input`합니다. 다음 조건 중 하나에 바뀌지 않고 수행할 수 있는 오류 조건 및의 값에서 발생 `false` 반환 됩니다.  
  
-   `startPos` 또는 `endPos` 매개 변수 형식이 지정 된 문자열의 또는 끝을 넘어 시작 되기 전에 지점입니다.  
  
-   지정 된 간격 내에 편집 가능한 문자를 찾을 수 없습니다.  
  
-   대체 문자 `input`, 않으므로 유효한 입력된 문자가 인쇄 가능 하지 않거나 해당 마스크 요소는 일치 하지 않습니다.  
  
 반환 값 외에도이 메서드는 두 개의 출력 매개 변수 바꾸기 작업에 대 한 추가 정보를 제공 하는.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (string input, int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(string input, int32 startPosition, int32 endPosition, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As String, startPosition As Integer, endPosition As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(System::String ^ input, int startPosition, int endPosition, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">기존의 편집 가능한 문자를 바꾸는 데 사용되는 <see cref="T:System.String" /> 값입니다.</param>
        <param name="startPosition">바꾸기가 시작되는 서식이 지정된 문자열의 위치(0부터 시작)입니다.</param>
        <param name="endPosition">바꾸기가 끝나는 서식이 지정된 문자열의 위치(0부터 시작)입니다.</param>
        <param name="testPosition">성공하면 서식이 지정된 문자열에서 마지막 문자가 실제로 바뀐 위치(0부터 시작)이고, 그렇지 않으면 작업에 실패한 첫 번째 위치입니다. 출력 매개 변수입니다.</param>
        <param name="resultHint">바꾸기 작업의 결과를 간략하게 설명하는 <see cref="T:System.ComponentModel.MaskedTextResultHint" />입니다. 출력 매개 변수입니다.</param>
        <summary>지정된 시작 위치와 끝 위치 사이에 있는 편집 가능한 문자의 범위를 지정된 문자열로 바꾼 다음 제거 위치와 설명 정보를 출력합니다.</summary>
        <returns>
          모든 문자가 성공적으로 바뀌었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.Replace%2A> 방법으로 지정 된 시작 및 끝 위치 사이의 서식이 지정 된 문자열에 편집 가능한 첫 번째 위치를 검색 합니다. 이 시점 이후에 편집 가능한 충분 한 위치 있다고 가정 하에서 운영 하는 기존 문자 값이 대체 하 여 하나씩의 대체 문자열 매개 변수 내용 `input`합니다.  
  
 다음 조건에는 오류로 간주 됩니다. 오류가 발생할 때 발생 하는 대체 항목 없음 및 <xref:System.ComponentModel.MaskedTextProvider.Replace%2A> 반환 `false`합니다.  
  
-   `startPos` 또는 `endPos` 매개 변수 형식이 지정 된 문자열의 또는 끝을 넘어 시작 되기 전에 지점입니다.  
  
-   대체 문자열의 내용을 포함할 수 서식이 지정 된 문자열의 편집 가능한 위치 충분 하지 않습니다.  
  
-   대체 문자 값 중 하나가 올바르지 않습니다 인쇄 가능한 되지 않았거나 해당 하는 마스크 요소는 일치 하지 않습니다.  
  
 반환 값 외에도이 메서드는 두 개의 출력 매개 변수 바꾸기 작업에 대 한 추가 정보를 제공 하는.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="ResetOnPrompt">
      <MemberSignature Language="C#" Value="public bool ResetOnPrompt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ResetOnPrompt" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
      <MemberSignature Language="VB.NET" Value="Public Property ResetOnPrompt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ResetOnPrompt { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>프롬프트 문자와 일치하는 입력 문자가 처리되는 방법을 결정하는 값을 가져오거나 설정합니다.</summary>
        <value>
          입력 문자로 입력된 프롬프트 문자 때문에 마스크의 현재 편집 가능한 위치가 다시 설정되면 <see langword="true" />이고, 프롬프트 문자가 일반 입력 문자로 처리됨을 나타내면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider> 특수 한 방식으로 두 가지 범주의 문자, 삽입 및 프롬프트 문자를 처리할 수 있습니다. / / 마스크 및 중 하나에 대해 각 입력된 문자는 테스트 하는 일반적으로 승인 또는 거부 합니다. 가정 하에서 작동 하는 <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> 속성 이외의 값으로 설정 됩니다 `null`, 다음 설정의 <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A> 속성을 `true` 프롬프트 문자에 대 한 특수 한 처리 됩니다. 프롬프트 문자가 추가 되 면 삭제 된 현재 마스크 문자 위치와 현재 위치가 다음 편집 가능한 문자 하면 합니다.  
  
 <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A> 우선는 <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> 다음 표에 설명 된 대로 속성입니다.  
  
|<xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A>|<xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>|결과 동작|  
|---------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------|  
|`true`|`true`|프롬프트 문자가 추가할 수 있으며, 다시 설정 되 면 현재 마스크 위치가 있습니다. 기본값입니다.|  
|`true`|`false`|프롬프트 문자가 추가할 수 있으며, 다시 설정 되 면 현재 마스크 위치가 있습니다.|  
|`false`|`true`|프롬프트 문자가 입력 일반 문자로 처리 됩니다.|  
|`false`|`false`|프롬프트 문자가 잘못 되었으며 메서드가 문자를 추가 하는 실패 합니다.|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ResetOnPrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.SkipLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.Clear" />
      </Docs>
    </Member>
    <Member MemberName="ResetOnSpace">
      <MemberSignature Language="C#" Value="public bool ResetOnSpace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ResetOnSpace" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
      <MemberSignature Language="VB.NET" Value="Public Property ResetOnSpace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ResetOnSpace { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>공백 입력 문자가 처리되는 방법을 결정하는 값을 가져오거나 설정합니다.</summary>
        <value>
          공백 입력 문자 때문에 마스크의 현재 편집 가능한 위치가 다시 설정되면 <see langword="true" />이고, 공백 입력 문자가 일반 입력 문자로 처리됨을 나타내면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider> 특수 한 방식으로 두 가지 범주의 문자, 공백 및 프롬프트 문자를 처리할 수 있습니다. / / 마스크 및 중 하나에 대해 각 입력된 문자는 테스트 하는 일반적으로 승인 또는 거부 합니다. 설정의 <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> 속성을 `true` 지워지는 현재 마스크 문자 위치 및 편집 가능한 다음 문자에 대 한 고급 되 고 현재 위치에서 발생 합니다.  
  
 <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> 유용 프롬프트를 제외 하 고 저장 된 텍스트를 할당할 때 여기서 프롬프트 공백으로 바뀝니다. 이러한 설정 하는 문자열을 복원 하기 전에 <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> 를 `true` 입력된 문자열에서 공간을 차지 하는 위치에 프롬프트 문자를 다시 설정 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ResetOnSpace" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.SkipLiterals" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.Clear" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Set">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>서식이 지정된 문자열을 지정된 입력 문자열로 설정합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public bool Set (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Set(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Set(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Set (input As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Set(System::String ^ input);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">서식이 지정된 문자열을 설정하는 데 사용되는 <see cref="T:System.String" /> 값입니다.</param>
        <summary>서식이 지정된 문자열을 지정된 입력 문자열로 설정합니다.</summary>
        <returns>
          모든 문자가 성공적으로 설정되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.Set%2A> 메서드 서식이 지정 된 문자열의 기존 내용을 지우고 대 한 마스크를 적용 하는 `input` 서식이 지정 된 문자열의 내용을 업데이트 하는 문자열입니다.  
  
 다음 조건에는 오류로 간주 됩니다. 형식이 지정 된 문자열이 변경 되지 않고 오류가 발생 하면 및 <xref:System.ComponentModel.MaskedTextProvider.Set%2A> 반환 `false`합니다.  
  
-   대체 문자열의 내용을 포함할 수 서식이 지정 된 문자열의 편집 가능한 위치 충분 하지 않습니다.  
  
-   대체 문자 값 중 하나가 올바르지 않습니다 인쇄 가능한 되지 않았거나 해당 하는 마스크 요소는 일치 하지 않습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="input" /> 매개 변수가 <see langword="null" />인 경우</exception>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public bool Set (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Set(string input, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Set(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Set (input As String, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Set(System::String ^ input, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">서식이 지정된 문자열을 설정하는 데 사용되는 <see cref="T:System.String" /> 값입니다.</param>
        <param name="testPosition">성공하면 서식이 지정된 문자열에서 마지막 문자가 실제로 설정된 위치(0부터 시작)이고, 그렇지 않으면 작업에 실패한 첫 번째 위치입니다. 출력 매개 변수입니다.</param>
        <param name="resultHint">설정 작업의 결과를 간략하게 설명하는 <see cref="T:System.ComponentModel.MaskedTextResultHint" />입니다. 출력 매개 변수입니다.</param>
        <summary>서식이 지정된 문자열을 지정된 입력 문자열로 설정한 다음 제거 위치와 설명 정보를 출력합니다.</summary>
        <returns>
          모든 문자가 성공적으로 설정되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.Set%2A> 메서드 서식이 지정 된 문자열의 기존 내용을 지우고 대 한 마스크를 적용 하는 `input` 서식이 지정 된 문자열의 내용을 업데이트 하는 문자열입니다.  
  
 다음 조건에는 오류로 간주 됩니다. 형식이 지정 된 문자열이 변경 되지 않고 오류가 발생 하면 및 <xref:System.ComponentModel.MaskedTextProvider.Set%2A> 반환 `false`합니다.  
  
-   대체 문자열의 내용을 포함할 수 서식이 지정 된 문자열의 편집 가능한 위치 충분 하지 않습니다.  
  
-   대체 문자 값 중 하나가 올바르지 않습니다 인쇄 가능한 되지 않았거나 해당 하는 마스크 요소는 일치 하지 않습니다.  
  
 이 버전의 <xref:System.ComponentModel.MaskedTextProvider.Set%2A> 메서드가 작동 하는 방법에 대 한 자세한 정보를 전달 하는 두 개의 추가 출력 매개 변수를 제공 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="input" /> 매개 변수가 <see langword="null" />인 경우</exception>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
      </Docs>
    </Member>
    <Member MemberName="SkipLiterals">
      <MemberSignature Language="C#" Value="public bool SkipLiterals { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipLiterals" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.SkipLiterals" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipLiterals As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SkipLiterals { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>마스크의 리터럴 문자 위치를 해당하는 같은 값으로 덮어쓸 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          리터럴을 다시 추가할 수 있도록 하려면 <see langword="true" />이고, 사용자가 리터럴 문자를 덮어쓸 수 없게 하려면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 입력된 마스크는 리터럴 및 편집 가능한 문자를 포함할 수 있습니다. 입력된 문자 리터럴의 값이 차지 하는 마스크의 위치에 추가 하는 시도가 이루어집니다는 <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A> 속성 결과 결정 합니다.  
  
-   이 속성이 `true`, 입력된 문자를 추가 하는 경우 동일한 값을 가진 리터럴을 덮어쓸 수 있습니다. 예를 들어 슬래시 문자 값 `'/'`, 마스크의 세 번째 위치를 추가할 수 없습니다 `"00/00/000"`합니다.  
  
-   이 속성이 `false`, 유효 하지 않은 리터럴 문자를 차지 하는 마스크 위치에 값을 할당할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.SkipLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
      </Docs>
    </Member>
    <Member MemberName="ToDisplayString">
      <MemberSignature Language="C#" Value="public string ToDisplayString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToDisplayString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToDisplayString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToDisplayString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>서식이 지정된 문자열을 표시 가능한 형태로 반환합니다.</summary>
        <returns>프롬프트와 마스크 리터럴을 포함하는 형식이 지정된 <see cref="T:System.String" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> 메서드의 값에 관계 없이 반환 값의 프롬프트 및 리터럴 문자를 항상 포함 됩니다는 <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> 또는 <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> 속성입니다. 이 메서드는 경우에 항상 암호 문자를 표시 된 <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> 속성 이외의 문자 값으로 설정 됩니다 `null`합니다.  
  
 <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> 와 같은 관련된 사용자 인터페이스 요소에 표시할 문자열을 가져오는 데 주로 사용 <xref:System.Windows.Forms.MaskedTextBox>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>서식이 지정된 문자열을 반환합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>할당된 모든 문자 값을 포함하는 서식이 지정된 문자열을 반환합니다.</summary>
        <returns>할당된 모든 문자 값을 포함하는 형식이 지정된 <see cref="T:System.String" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 버전의 오버 로드 된 <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 프롬프트와 리터럴의 현재 값을 따르는 메서드가 포함 되어는 <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> 및 <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> 속성을 각각. 항상 값을 무시 하는 원래 입력된 문자를 반환 합니다는 <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> 속성입니다.  
  
> [!IMPORTANT]
>  이 메서드는 일반적으로 암호 문자는 사용자 인터페이스에서 보호 되는 정보를 표시, 하므로 해야 사용 될 매우 주의 하 여 중요 한 사용자 데이터를 실수로 누설 되지 않도록 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool ignorePasswordChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool ignorePasswordChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (ignorePasswordChar As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(bool ignorePasswordChar);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ignorePasswordChar" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ignorePasswordChar">
          실제 편집 가능한 문자를 반환하려면 <see langword="true" />이고, <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> 속성이 적용됨을 나타내려면 <see langword="false" />입니다.</param>
        <summary>암호 문자를 선택적으로 포함하여 서식이 지정된 문자열을 반환합니다.</summary>
        <returns>리터럴과 프롬프트를 포함하고 암호 문자를 선택적으로 포함하는 형식이 지정된 <see cref="T:System.String" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 버전의 오버 로드 된 <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 프롬프트와 리터럴의 현재 값을 따르는 메서드가 포함 되어는 <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> 및 <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> 속성을 각각. 경우는 `ignorePasswordChar` 매개 변수는 `true`, 값을 무시 하는 원래 입력된 문자를 반환 합니다는 <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> 속성입니다. 이 매개 변수가 `false`, 암호 문자 경우 편집 가능한 사용자 입력을 숨기는 데 사용할는 <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> 속성 이외의 값으로 설정 됩니다 `null`합니다.  
  
> [!IMPORTANT]
>  이 메서드는 잠재적으로 암호 문자로 사용자 인터페이스에서 일반적으로 보호 되는 정보를 표시, 하므로 해야 사용 될 매우 주의 하 여 중요 한 사용자 데이터를 실수로 누설 되지 않도록 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool includePrompt, bool includeLiterals);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool includePrompt, bool includeLiterals) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (includePrompt As Boolean, includeLiterals As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(bool includePrompt, bool includeLiterals);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrompt" Type="System.Boolean" />
        <Parameter Name="includeLiterals" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrompt">
          반환 문자열에 프롬프트 문자를 포함하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="includeLiterals">
          반환 문자열에 리터럴 문자를 포함하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>프롬프트 및 리터럴 문자를 선택적으로 포함하여 서식이 지정된 문자열을 반환합니다.</summary>
        <returns>할당된 모든 문자 값을 포함하고 리터럴과 프롬프트를 선택적으로 포함하는 형식이 지정된 <see cref="T:System.String" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 버전의 오버 로드 된 <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 프롬프트와 리터럴 값에 따라 메서드가 포함 되어는 `IncludePrompt` 및 `IncludeLiterals` 매개 변수를 각각. 이러한 매개 변수 값을 재정의 <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> 속성입니다. 이 메서드는 항상 값을 무시 하는 원래 입력된 문자를 반환 된 <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> 속성입니다.  
  
> [!IMPORTANT]
>  이 메서드는 일반적으로 암호 문자는 사용자 인터페이스에서 보호 되는 정보를 표시, 하므로 해야 사용 될 매우 주의 하 여 중요 한 사용자 데이터를 실수로 누설 되지 않도록 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (int startPosition, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(int32 startPosition, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (startPosition As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(int startPosition, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startPosition">출력이 시작되는 서식이 지정된 문자열의 위치(0부터 시작)입니다.</param>
        <param name="length">반환할 문자 수입니다.</param>
        <summary>서식이 지정된 문자열의 부분 문자열을 반환합니다.</summary>
        <returns>성공하면 할당된 모든 문자 값을 포함하는 형식이 지정된 <see cref="T:System.String" />의 부분 문자열이고, 그렇지 않으면 <see cref="F:System.String.Empty" /> 문자열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 버전의 오버 로드 된 <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 위치에서 시작 하 여 형식이 지정 된 문자열의 부분 문자열을 반환 하는 메서드 `startPos` 후속로 지정 된 문자 수를 포함 하는 `length` 매개 변수입니다. 반환 된 문자열에 프롬프트와의 현재 값에 따라 리터럴을 포함 되어는 <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> 및 <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> 속성을 각각. 반환 문자열에는 원래 입력된 문자; 포함 됩니다. <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> 속성은 항상 무시 됩니다.  
  
> [!IMPORTANT]
>  이 메서드는 일반적으로 암호 문자는 사용자 인터페이스에서 보호 되는 정보를 표시, 하므로 해야 사용 될 매우 주의 하 여 중요 한 사용자 데이터를 실수로 누설 되지 않도록 합니다.  
  
 <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 입력된 매개 변수에서 차이가 있을 때 다음 작업을 수행 합니다.  
  
-   경우 `startPos` 작으면 0 보다 시작 위치는 0으로 설정 됩니다.  
  
-   경우 `startPos` 실제 보다 크거나 <xref:System.ComponentModel.MaskedTextProvider.Length%2A> 서식이 지정 된 문자열의는 <xref:System.String.Empty> 문자열이 반환 됩니다.  
  
-   경우 `length` 나머지 수 문자 남은 시작 위치를 문자가 반환 되는 것 보다 큽니다.  
  
-   경우 `length` 가 0 보다 작은 <xref:System.String.Empty> 문자열이 반환 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool ignorePasswordChar, int startPosition, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool ignorePasswordChar, int32 startPosition, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (ignorePasswordChar As Boolean, startPosition As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(bool ignorePasswordChar, int startPosition, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ignorePasswordChar" Type="System.Boolean" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ignorePasswordChar">
          실제 편집 가능한 문자를 반환하려면 <see langword="true" />이고, <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> 속성이 적용됨을 나타내려면 <see langword="false" />입니다.</param>
        <param name="startPosition">출력이 시작되는 서식이 지정된 문자열의 위치(0부터 시작)입니다.</param>
        <param name="length">반환할 문자 수입니다.</param>
        <summary>암호 문자를 선택적으로 포함하여 서식이 지정된 문자열의 부분 문자열을 반환합니다.</summary>
        <returns>성공하면 리터럴과 프롬프트를 포함하고 암호 문자를 선택적으로 포함하는 형식이 지정된 <see cref="T:System.String" />의 부분 문자열이고, 그렇지 않으면 <see cref="F:System.String.Empty" /> 문자열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 버전의 오버 로드 된 <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 위치에서 시작 하 여 형식이 지정 된 문자열의 부분 문자열을 반환 하는 메서드 `startPos` 후속로 지정 된 문자 수를 포함 하는 `length` 매개 변수입니다. 반환 된 문자열에 프롬프트와의 현재 값에 따라 리터럴을 포함 되어는 <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> 및 <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> 속성을 각각. 경우는 `ignorePasswordChar` 매개 변수는 `true`, 값을 무시 하는 원래 입력된 문자를 반환 합니다는 <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> 속성입니다. 이 매개 변수가 `false`, 암호 문자 경우 편집 가능한 사용자 입력을 숨기는 데 사용할는 <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> 속성 이외의 값으로 설정 됩니다 `null`합니다.  
  
> [!IMPORTANT]
>  이 메서드는 잠재적으로 암호 문자로 사용자 인터페이스에서 일반적으로 보호 되는 정보를 표시, 하므로 해야 사용 될 매우 주의 하 여 중요 한 사용자 데이터를 실수로 누설 되지 않도록 합니다.  
  
 <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 입력된 매개 변수에서 차이가 있을 때 다음 작업을 수행 합니다.  
  
-   경우 `startPos` 작으면 0 보다 시작 위치는 0으로 설정 됩니다.  
  
-   경우 `startPos` 실제 보다 크거나 <xref:System.ComponentModel.MaskedTextProvider.Length%2A> 서식이 지정 된 문자열의는 <xref:System.String.Empty> 문자열이 반환 됩니다.  
  
-   경우 `length` 나머지 수 문자 남은 시작 위치를 문자가 반환 되는 것 보다 큽니다.  
  
-   경우 `length` 가 0 보다 작은 <xref:System.String.Empty> 문자열이 반환 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool includePrompt, bool includeLiterals, int startPosition, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool includePrompt, bool includeLiterals, int32 startPosition, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (includePrompt As Boolean, includeLiterals As Boolean, startPosition As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(bool includePrompt, bool includeLiterals, int startPosition, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrompt" Type="System.Boolean" />
        <Parameter Name="includeLiterals" Type="System.Boolean" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="includePrompt">
          반환 문자열에 프롬프트 문자를 포함하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="includeLiterals">
          반환 문자열에 리터럴 문자를 포함하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="startPosition">출력이 시작되는 서식이 지정된 문자열의 위치(0부터 시작)입니다.</param>
        <param name="length">반환할 문자 수입니다.</param>
        <summary>프롬프트 및 리터럴 문자를 선택적으로 포함하여 서식이 지정된 문자열의 부분 문자열을 반환합니다.</summary>
        <returns>성공하면 할당된 모든 문자 값을 포함하고 리터럴과 프롬프트를 선택적으로 포함하는 형식이 지정된 <see cref="T:System.String" />의 부분 문자열이고, 그렇지 않으면 <see cref="F:System.String.Empty" /> 문자열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 버전의 오버 로드 된 <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 위치에서 시작 하 여 형식이 지정 된 문자열의 부분 문자열을 반환 하는 메서드 `startPos` 후속로 지정 된 문자 수를 포함 하는 `length` 매개 변수입니다. 반환 문자열에 프롬프트와 값에 따라 리터럴이 `IncludePrompt` 및 `IncludeLiterals` 매개 변수를 각각. 이러한 매개 변수 값을 재정의 <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> 속성입니다. 이 메서드는 항상 값을 무시 하는 원래 입력된 문자를 반환 된 <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> 속성입니다.  
  
> [!IMPORTANT]
>  이 메서드는 일반적으로 암호 문자는 사용자 인터페이스에서 보호 되는 정보를 표시, 하므로 해야 사용 될 매우 주의 하 여 중요 한 사용자 데이터를 실수로 누설 되지 않도록 합니다.  
  
 <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 입력된 매개 변수에서 차이가 있을 때 다음 작업을 수행 합니다.  
  
-   경우 `startPos` 작으면 0 보다 시작 위치는 0으로 설정 됩니다.  
  
-   경우 `startPos` 실제 보다 크거나 <xref:System.ComponentModel.MaskedTextProvider.Length%2A> 서식이 지정 된 문자열의는 <xref:System.String.Empty> 문자열이 반환 됩니다.  
  
-   경우 `length` 나머지 수 문자 남은 시작 위치를 문자가 반환 되는 것 보다 큽니다.  
  
-   경우 `length` 가 0 보다 작은 <xref:System.String.Empty> 문자열이 반환 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool ignorePasswordChar, bool includePrompt, bool includeLiterals, int startPosition, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool ignorePasswordChar, bool includePrompt, bool includeLiterals, int32 startPosition, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (ignorePasswordChar As Boolean, includePrompt As Boolean, includeLiterals As Boolean, startPosition As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(bool ignorePasswordChar, bool includePrompt, bool includeLiterals, int startPosition, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ignorePasswordChar" Type="System.Boolean" />
        <Parameter Name="includePrompt" Type="System.Boolean" />
        <Parameter Name="includeLiterals" Type="System.Boolean" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ignorePasswordChar">
          실제 편집 가능한 문자를 반환하려면 <see langword="true" />이고, <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> 속성이 적용됨을 나타내려면 <see langword="false" />입니다.</param>
        <param name="includePrompt">
          반환 문자열에 프롬프트 문자를 포함하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="includeLiterals">
          반환 문자열에서 리터럴 문자를 반환하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="startPosition">출력이 시작되는 서식이 지정된 문자열의 위치(0부터 시작)입니다.</param>
        <param name="length">반환할 문자 수입니다.</param>
        <summary>프롬프트, 리터럴 및 암호 문자를 선택적으로 포함하여 서식이 지정된 문자열의 부분 문자열을 반환합니다.</summary>
        <returns>성공하면 할당된 모든 문자 값을 포함하고 리터럴, 프롬프트 및 암호 문자를 선택적으로 포함하는 형식이 지정된 <see cref="T:System.String" />의 부분 문자열이고, 그렇지 않으면 <see cref="F:System.String.Empty" /> 문자열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 버전의 오버 로드 된 <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 위치에서 시작 하 여 형식이 지정 된 문자열의 부분 문자열을 반환 하는 메서드 `startPos` 후속로 지정 된 문자 수를 포함 하는 `length` 매개 변수입니다. 반환 문자열에 프롬프트와 값에 따라 리터럴이 `IncludePrompt` 및 `IncludeLiterals` 매개 변수를 각각. 이러한 매개 변수 값을 재정의 <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> 및 <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> 속성입니다. 경우는 `ignorePasswordChar` 매개 변수는 `true`, 값을 무시 하는 원래 입력된 문자를 반환 합니다는 <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> 속성입니다. 이 매개 변수가 `false`, 암호 문자 경우 편집 가능한 사용자 입력을 숨기는 데 사용할는 <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> 속성 이외의 값으로 설정 됩니다 `null`합니다.  
  
> [!IMPORTANT]
>  이 메서드는 잠재적으로 암호 문자로 사용자 인터페이스에서 일반적으로 보호 되는 정보를 표시, 하므로 해야 사용 될 매우 주의 하 여 중요 한 사용자 데이터를 실수로 누설 되지 않도록 합니다.  
  
 <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 입력된 매개 변수에서 차이가 있을 때 다음 작업을 수행 합니다.  
  
-   경우 `startPos` 작으면 0 보다 시작 위치는 0으로 설정 됩니다.  
  
-   경우 `startPos` 실제 보다 크거나 <xref:System.ComponentModel.MaskedTextProvider.Length%2A> 서식이 지정 된 문자열의는 <xref:System.String.Empty> 문자열이 반환 됩니다.  
  
-   경우 `length` 나머지 수 문자 남은 시작 위치를 문자가 반환 되는 것 보다 큽니다.  
  
-   경우 `length` 가 0 보다 작은 <xref:System.String.Empty> 문자열이 반환 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="VerifyChar">
      <MemberSignature Language="C#" Value="public bool VerifyChar (char input, int position, out System.ComponentModel.MaskedTextResultHint hint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyChar(char input, int32 position, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; hint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyChar (input As Char, position As Integer, ByRef hint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyChar(char input, int position, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % hint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="hint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">테스트할 <see cref="T:System.Char" /> 값입니다.</param>
        <param name="position">입력 문자를 테스트할 마스크의 위치입니다.</param>
        <param name="hint">작업의 결과를 간략하게 설명하는 <see cref="T:System.ComponentModel.MaskedTextResultHint" />입니다. 출력 매개 변수입니다.</param>
        <summary>지정된 문자가 지정된 위치에서 성공적으로 설정될 수 있는지 여부를 테스트합니다.</summary>
        <returns>
          지정된 문자를 지정된 위치에서 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A> 메서드는 단일 문자 값 형식이 지정 된 문자열에 지정된 된 위치에 유효한 입력을 나타내는지 여부를 테스트 합니다. 이 메서드는 반환 `false` 이유는 다음과 같습니다.  
  
-   `pos` 매개 변수는 0 보다 작거나 보다 큰는 <xref:System.ComponentModel.MaskedTextProvider.Length%2A> 의 <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>합니다.  
  
-   문자 `input` 은 의해 결정 된 올바른 입력된 문자가 아닙니다는 <xref:System.ComponentModel.MaskedTextProvider.IsValidInputChar%2A> 메서드.  
  
-   `input` 지정된 된 위치에 마스크 요소와 호환 되지 않는 `pos`합니다.  
  
 마지막 조건의 현재 값에 종속 될 수는 <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>, <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>, <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>, <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> 및 <xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A> 속성입니다.  
  
 / / 마스크에 대 한 전체 입력된 문자열을 테스트 하려면 중 하나를 사용는 <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> 메서드 대신 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(System.Char,System.Int32)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="VerifyEscapeChar">
      <MemberSignature Language="C#" Value="public bool VerifyEscapeChar (char input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyEscapeChar(char input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyEscapeChar (input As Char, position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyEscapeChar(char input, int position);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">테스트할 <see cref="T:System.Char" /> 값입니다.</param>
        <param name="position">입력 문자를 테스트할 마스크의 위치입니다.</param>
        <summary>지정된 문자가 지정된 위치에서 이스케이프되는지 여부를 테스트합니다.</summary>
        <returns>
          지정된 문자가 지정된 위치에서 이스케이프되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 문자를 라고 *이스케이프* 유효한 입력은 있지만 서식이 지정 된 문자열의 해당 위치에 할당 되지 않은 경우. 이스케이프 된 문자는 다음 세 가지 범주로:  
  
-   경우 프롬프트 문자가 이스케이프 되는 <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> 속성은 `true`합니다.  
  
-   같은 리터럴 값의 마스크에 있는 경우 입력된 문자가 이스케이프 되는 <xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A> 속성은 `true`합니다.  
  
-   경우에 공백 문자를 이스케이프는 <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> 속성은 `true`합니다.  
  
 <xref:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar%2A> 메서드는 또한 반환 `false` 경우는 `pos` 매개 변수는 0 보다 작거나 보다 큰는 <xref:System.ComponentModel.MaskedTextProvider.Length%2A> 의 <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.SkipLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
      </Docs>
    </Member>
    <MemberGroup MemberName="VerifyString">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 문자열이 성공적으로 설정될 수 있는지 여부를 테스트합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="VerifyString">
      <MemberSignature Language="C#" Value="public bool VerifyString (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyString(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.VerifyString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyString (input As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyString(System::String ^ input);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">테스트할 <see cref="T:System.String" /> 값입니다.</param>
        <summary>지정된 문자열이 성공적으로 설정될 수 있는지 여부를 테스트합니다.</summary>
        <returns>
          지정된 문자열이 유효한 입력을 나타내면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> 적용 되는 `input` 실제로 테스트 하는 형식이 지정 된 문자열을 변경 하지 않고 마스크에 대해 문자열 있는지 여부를 `input` 해당 유효 <xref:System.ComponentModel.MaskedTextProvider.Set%2A> 작업 합니다. 또한이 메서드 반환 `true` 입력이 리디렉션되면 `null` 이거나 길이가 0입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
      </Docs>
    </Member>
    <Member MemberName="VerifyString">
      <MemberSignature Language="C#" Value="public bool VerifyString (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyString(string input, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.VerifyString(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyString (input As String, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyString(System::String ^ input, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">테스트할 <see cref="T:System.String" /> 값입니다.</param>
        <param name="testPosition">성공하면 실제로 테스트한 마지막 문자의 위치(0부터 시작)이고, 그렇지 않으면 테스트에 실패한 첫 번째 위치입니다. 출력 매개 변수입니다.</param>
        <param name="resultHint">테스트 작업의 결과를 간략하게 설명하는 <see cref="T:System.ComponentModel.MaskedTextResultHint" />입니다. 출력 매개 변수입니다.</param>
        <summary>지정된 문자열이 성공적으로 설정될 수 있는지 여부를 테스트한 다음 위치와 설명 정보를 출력합니다.</summary>
        <returns>
          지정된 문자열이 유효한 입력을 나타내면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> 적용 되는 `input` 실제로 테스트 하는 형식이 지정 된 문자열을 변경 하지 않고 마스크에 대해 문자열 있는지 여부를 `input` 해당 유효 <xref:System.ComponentModel.MaskedTextProvider.Set%2A> 작업 합니다. 또한이 메서드 반환 `true` 입력이 리디렉션되면 `null` 이거나 길이가 0입니다.  
  
 이 버전의 <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> 메서드가 작동 하는 방법에 대 한 자세한 정보를 전달 하는 두 개의 추가 출력 매개 변수를 제공 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
      </Docs>
    </Member>
  </Members>
</Type>