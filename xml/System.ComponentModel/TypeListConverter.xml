<Type Name="TypeListConverter" FullName="System.ComponentModel.TypeListConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="92457af0d7932ca76b41766d49bf205a79213786" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39817384" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TypeListConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TypeListConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TypeListConverter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TypeListConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeListConverter abstract : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type TypeListConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="20b57-101">사용 가능한 형식으로 목록 상자를 채우는 데 사용할 수 있는 형식 변환기를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="20b57-101">Provides a type converter that can be used to populate a list box with available types.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20b57-102">이 생성자에 형식 목록을 제공 해야 `abstract` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="20b57-102">You must provide the list of types to the constructor of this `abstract` class.</span></span>  
  
 <span data-ttu-id="20b57-103">형식 변환기에 대 한 자세한 내용은 참조는 <xref:System.ComponentModel.TypeConverter> 기본 클래스 및 [방법: 형식 변환기를 구현](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56)합니다.</span><span class="sxs-lookup"><span data-stu-id="20b57-103">For more information about type converters, see the <xref:System.ComponentModel.TypeConverter> base class and [How to: Implement a Type Converter](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="20b57-104">인스턴스를 만들지 마십시오는 <xref:System.ComponentModel.TypeListConverter>합니다.</span><span class="sxs-lookup"><span data-stu-id="20b57-104">You should never create an instance of a <xref:System.ComponentModel.TypeListConverter>.</span></span> <span data-ttu-id="20b57-105">대신, 호출 된 <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> 메서드의 <xref:System.ComponentModel.TypeDescriptor>합니다.</span><span class="sxs-lookup"><span data-stu-id="20b57-105">Instead, call the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method of <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="20b57-106">자세한 내용은 예제를 참조 합니다 <xref:System.ComponentModel.TypeConverter> 기본 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="20b57-106">For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="20b57-107">
        <para>상속 하는 경우 <see cref="T:System.ComponentModel.TypeListConverter" />, 다음 메서드를 재정의할 수 있습니다.  -사용자 지정 형식 변환을 지원 하려면 재정의 <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />를 <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />, 및 <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" /> 메서드.  -해당 값을 변경 하려면 개체를 다시 만들어야 하는 형식으로 변환 하려면 다음을 수행 합니다 재정의 된 <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> 및 <see cref="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" /> 메서드.  -재정의 속성을 지 원하는 형식으로 변환 하려면 다음을 수행 합니다 합니다 <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> 고 <see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" /> 메서드. 속성을 변환 하는 클래스에 없는 속성을 구현 해야 하 고 사용할 수 있는 경우는 <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /> 속성 설명자를 구현 하기 위한 기반으로 합니다. 상속 하는 경우 <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />를 재정의 해야 합니다 <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> 및 <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> 메서드.  -표준 값을 지 원하는 형식으로 변환 하려면 재정의 <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" /> 고 <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> 메서드.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="20b57-107">
          <para>When you inherit from <see cref="T:System.ComponentModel.TypeListConverter" />, you can override the following methods.  -   To support custom type conversion, override the <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />, and <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" /> methods.  -   To convert types that must re-create the object to change its value, override the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> and <see cref="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" /> methods.  -   To convert types that support properties, override the <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> and <see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" /> methods. If the class you are converting does not have properties, and you need to implement properties, you can use the <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /> class as a base for implementing the property descriptors. When you inherit from <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />, you must override the <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> and <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> methods.  -   To convert types that support standard values, override the <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" /> and <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> methods.</para>
        </span>
      </span>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TypeListConverter (Type[] types);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Type[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeListConverter.#ctor(System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (types As Type())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TypeListConverter(cli::array &lt;Type ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.TypeListConverter : Type[] -&gt; System.ComponentModel.TypeListConverter" Usage="new System.ComponentModel.TypeListConverter types" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="types" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="types">
          <span data-ttu-id="20b57-108">사용 가능한 형식으로 사용할 <see cref="T:System.Type" /> 형식의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b57-108">The array of type <see cref="T:System.Type" /> to use as the available types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20b57-109">사용 가능한 형식의 형식 배열을 사용하여 <see cref="T:System.ComponentModel.TypeListConverter" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b57-109">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeListConverter" /> class using the type array as the available types.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20b57-110">제공 하는 종류는 `types` 매개 변수는 사용 가능한 형식으로 목록 상자를 채우는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="20b57-110">The types provided in the `types` parameter can be used to populate a list box with the available types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeListConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="typeListConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="20b57-111">형식 컨텍스트를 제공하는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b57-111">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="sourceType">
          <span data-ttu-id="20b57-112">소스 개체의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b57-112">The <see cref="T:System.Type" /> of the source object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20b57-113">지정된 컨텍스트를 사용하여 이 변환기가 소스 개체의 지정된 <see cref="T:System.Type" />을 변환할 수 있는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b57-113">Gets a value indicating whether this converter can convert the specified <see cref="T:System.Type" /> of the source object using the given context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20b57-114">이 변환기에서 변환을 수행할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b57-114">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="typeListConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="20b57-115">형식 컨텍스트를 제공하는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b57-115">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="20b57-116">변환할 형식을 나타내는 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b57-116">A <see cref="T:System.Type" /> that represents the type you wish to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20b57-117">컨텍스트를 사용하여 이 변환기에서 개체를 지정된 대상 형식으로 변환할 수 있는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b57-117">Gets a value indicating whether this converter can convert an object to the given destination type using the context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20b57-118">이 변환기에서 변환을 수행할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b57-118">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20b57-119">`context` 매개 변수는 이 변환기가 호출되는 환경에 대한 추가 정보를 추출하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="20b57-119">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="20b57-120">이 매개 변수는 `null`이 될 수 있으므로 항상 확인해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="20b57-120">This can be `null`, so always check.</span></span> <span data-ttu-id="20b57-121">또한 컨텍스트 개체의 속성은 `null`을 반환할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="20b57-121">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="20b57-122">
            <para>사용자 고유의 변환 요구 사항을 제공 하려면이 메서드를 재정의 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="20b57-122">
              <para>Override this method to provide your own conversion requirements.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeListConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="typeListConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="20b57-123">형식 컨텍스트를 제공하는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b57-123">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="20b57-124">글꼴을 나타내는 데 사용할 문화권을 지정하는 <see cref="T:System.Globalization.CultureInfo" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b57-124">A <see cref="T:System.Globalization.CultureInfo" /> that specifies the culture used to represent the font.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="20b57-125">변환할 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b57-125">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20b57-126">지정된 개체를 변환기의 네이티브 형식으로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b57-126">Converts the specified object to the native type of the converter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20b57-127">변환된 값을 나타내는 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b57-127">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="typeListConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="20b57-128">형식 컨텍스트를 제공하는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b57-128">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="20b57-129">선택적 <see cref="T:System.Globalization.CultureInfo" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b57-129">An optional <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
          <span data-ttu-id="20b57-130">제공되지 않으면 현재 문화권으로 가정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b57-130">If not supplied, the current culture is assumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="20b57-131">변환할 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b57-131">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="20b57-132">값을 변환할 대상 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b57-132">The <see cref="T:System.Type" /> to convert the value to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20b57-133">주어진 값 개체를 지정한 대상 형식으로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b57-133">Converts the given value object to the specified destination type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20b57-134">변환된 <paramref name="value" />를 나타내는 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b57-134">An <see cref="T:System.Object" /> that represents the converted <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20b57-135">문자열 개체에서이 메서드는 가장 일반적으로 형식을 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="20b57-135">This method most commonly converts types to and from string objects.</span></span>  
  
 <span data-ttu-id="20b57-136">`context` 매개 변수는 이 변환기가 호출되는 환경에 대한 추가 정보를 추출하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="20b57-136">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="20b57-137">이 매개 변수는 `null`이 될 수 있으므로 항상 확인해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="20b57-137">This can be `null`, so always check.</span></span> <span data-ttu-id="20b57-138">또한 컨텍스트 개체의 속성은 `null`을 반환할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="20b57-138">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="20b57-139">
            <paramref name="destinationType" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b57-139">
              <paramref name="destinationType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="20b57-140">변환할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b57-140">The conversion cannot be performed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection" Usage="typeListConverter.GetStandardValues context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="20b57-141">형식 컨텍스트를 제공하는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b57-141">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20b57-142">이 유효성 검사기를 사용하도록 디자인된 데이터 형식의 표준 값 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b57-142">Gets a collection of standard values for the data type this validator is designed for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20b57-143">유효한 표준 값 집합을 포함하는 <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />이거나 데이터 형식이 표준 값 집합을 지원하지 않는 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b57-143">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> that holds a standard set of valid values, or <see langword="null" /> if the data type does not support a standard set of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20b57-144">`context` 매개 변수는 이 변환기가 호출되는 환경에 대한 추가 정보를 추출하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="20b57-144">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="20b57-145">이 매개 변수는 `null`이 될 수 있으므로 항상 확인해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="20b57-145">This can be `null`, so always check.</span></span> <span data-ttu-id="20b57-146">또한 컨텍스트 개체의 속성은 `null`을 반환할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="20b57-146">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeListConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="typeListConverter.GetStandardValuesExclusive context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="20b57-147">형식 컨텍스트를 제공하는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b57-147">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20b57-148">
            <see cref="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> 메서드에서 반환된 표준 값 목록이 단독 목록인지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b57-148">Gets a value indicating whether the list of standard values returned from the <see cref="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> method is an exclusive list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20b57-149">
            <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />에서 반환된 <see cref="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />이 가능한 값을 포함하는 단독 목록이므로 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b57-149">
              <see langword="true" /> because the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> is an exhaustive list of possible values.</span>
          </span>
          <span data-ttu-id="20b57-150">이 메서드는 <see langword="false" />를 반환하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b57-150">This method never returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20b57-151">`context` 매개 변수는 이 변환기가 호출되는 환경에 대한 추가 정보를 추출하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="20b57-151">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="20b57-152">이 매개 변수는 `null`이 될 수 있으므로 항상 확인해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="20b57-152">This can be `null`, so always check.</span></span> <span data-ttu-id="20b57-153">또한 컨텍스트 개체의 속성은 `null`을 반환할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="20b57-153">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="20b57-154">단독 목록인 경우 다른 값이 없는 이외에 유효한 표준 값 목록이 <xref:System.ComponentModel.TypeListConverter.GetStandardValues%2A> 메서드를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="20b57-154">When the list is exclusive, no other values are valid besides the list of standard values the <xref:System.ComponentModel.TypeListConverter.GetStandardValues%2A> method provides.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeListConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="typeListConverter.GetStandardValuesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="20b57-155">형식 컨텍스트를 제공하는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b57-155">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20b57-156">지정된 컨텍스트를 사용하여, 이 개체가 목록에서 선택할 수 있는 표준 값 집합을 지원하는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b57-156">Gets a value indicating whether this object supports a standard set of values that can be picked from a list using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20b57-157">개체가 지원하는 공통되는 값 집합을 찾기 위해 <see cref="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />를 호출해야 하므로 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b57-157">
              <see langword="true" /> because <see cref="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> should be called to find a common set of values the object supports.</span>
          </span>
          <span data-ttu-id="20b57-158">이 메서드는 <see langword="false" />를 반환하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b57-158">This method never returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20b57-159">`context` 매개 변수는 이 변환기가 호출되는 환경에 대한 추가 정보를 추출하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="20b57-159">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="20b57-160">이 매개 변수는 `null`이 될 수 있으므로 항상 확인해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="20b57-160">This can be `null`, so always check.</span></span> <span data-ttu-id="20b57-161">또한 컨텍스트 개체의 속성은 `null`을 반환할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="20b57-161">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>