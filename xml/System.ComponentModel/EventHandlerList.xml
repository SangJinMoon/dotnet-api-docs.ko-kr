<Type Name="EventHandlerList" FullName="System.ComponentModel.EventHandlerList">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a4fa77cc3268ee7da75307e3beed7e3248681c69" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39923343" /></Metadata><TypeSignature Language="C#" Value="public sealed class EventHandlerList : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventHandlerList extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.EventHandlerList" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventHandlerList&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventHandlerList sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type EventHandlerList = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="a9210-101">간단한 대리자 목록을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="a9210-101">Provides a simple list of delegates.</span></span> <span data-ttu-id="a9210-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="a9210-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9210-103">이 클래스에는 대리자의 목록에서 항목을 찾는 선형 검색 알고리즘을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="a9210-103">This class uses a linear search algorithm to find entries in the list of delegates.</span></span> <span data-ttu-id="a9210-104">선형 검색 알고리즘을 많은 수의 항목을 작업할 때 비효율적입니다.</span><span class="sxs-lookup"><span data-stu-id="a9210-104">A linear search algorithm is inefficient when working with a large number of entries.</span></span> <span data-ttu-id="a9210-105">따라서 큰 목록에 있는 경우 항목을 찾는 느립니다.</span><span class="sxs-lookup"><span data-stu-id="a9210-105">Therefore, when you have a large list, finding entries is slow.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9210-106">사용 하는 예제에 대 한는 <xref:System.ComponentModel.EventHandlerList>를 참조 하세요 [방법: 처리할 여러 이벤트를 사용 하 여 이벤트 속성](~/docs/standard/events/how-to-handle-multiple-events-using-event-properties.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="a9210-106">For an example of using an <xref:System.ComponentModel.EventHandlerList>, see [How to: Handle Multiple Events Using Event Properties](~/docs/standard/events/how-to-handle-multiple-events-using-event-properties.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventHandlerList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EventHandlerList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventHandlerList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a9210-107"><see cref="T:System.ComponentModel.EventHandlerList" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="a9210-107">Initializes a new instance of the <see cref="T:System.ComponentModel.EventHandlerList" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (object key, Delegate value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHandler(object key, class System.Delegate value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EventHandlerList.AddHandler(System.Object,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddHandler (key As Object, value As Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHandler(System::Object ^ key, Delegate ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddHandler : obj * Delegate -&gt; unit" Usage="eventHandlerList.AddHandler (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="a9210-108">해당 이벤트가 포함된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a9210-108">The object that owns the event.</span></span></param>
        <param name="value"><span data-ttu-id="a9210-109">목록에 추가할 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="a9210-109">The delegate to add to the list.</span></span></param>
        <summary><span data-ttu-id="a9210-110">목록에 대리자를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="a9210-110">Adds a delegate to the list.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHandlers">
      <MemberSignature Language="C#" Value="public void AddHandlers (System.ComponentModel.EventHandlerList listToAddFrom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHandlers(class System.ComponentModel.EventHandlerList listToAddFrom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EventHandlerList.AddHandlers(System.ComponentModel.EventHandlerList)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddHandlers (listToAddFrom As EventHandlerList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHandlers(System::ComponentModel::EventHandlerList ^ listToAddFrom);" />
      <MemberSignature Language="F#" Value="member this.AddHandlers : System.ComponentModel.EventHandlerList -&gt; unit" Usage="eventHandlerList.AddHandlers listToAddFrom" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listToAddFrom" Type="System.ComponentModel.EventHandlerList" />
      </Parameters>
      <Docs>
        <param name="listToAddFrom"><span data-ttu-id="a9210-111">추가할 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="a9210-111">The list to add.</span></span></param>
        <summary><span data-ttu-id="a9210-112">현재 목록에 대리자 목록을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="a9210-112">Adds a list of delegates to the current list.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EventHandlerList.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="eventHandlerList.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a9210-113">대리자 목록을 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="a9210-113">Disposes the delegate list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9210-114"><xref:System.ComponentModel.EventHandlerList.Dispose%2A> 사용을 마치면 <xref:System.ComponentModel.EventHandlerList>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="a9210-114">Call <xref:System.ComponentModel.EventHandlerList.Dispose%2A> when you are finished using the <xref:System.ComponentModel.EventHandlerList>.</span></span> <span data-ttu-id="a9210-115"><xref:System.ComponentModel.EventHandlerList.Dispose%2A> 메서드를 사용하면 <xref:System.ComponentModel.EventHandlerList>를 사용할 수 없게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a9210-115">The <xref:System.ComponentModel.EventHandlerList.Dispose%2A> method leaves the <xref:System.ComponentModel.EventHandlerList> in an unusable state.</span></span> <span data-ttu-id="a9210-116">호출한 후 <xref:System.ComponentModel.EventHandlerList.Dispose%2A>에 대 한 모든 참조를 해제 해야 합니다 <xref:System.ComponentModel.EventHandlerList> 차지 했던 메모리를 가비지 수집에 의해 회수 될 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="a9210-116">After calling <xref:System.ComponentModel.EventHandlerList.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.EventHandlerList> so the memory it was occupying can be reclaimed by garbage collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9210-117"><xref:System.ComponentModel.EventHandlerList.Dispose%2A>에 대한 마지막 참조를 해제하기 전에 반드시 <xref:System.ComponentModel.EventHandlerList>를 호출하십시오.</span><span class="sxs-lookup"><span data-stu-id="a9210-117">Always call <xref:System.ComponentModel.EventHandlerList.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.EventHandlerList>.</span></span> <span data-ttu-id="a9210-118">이 고, 그렇지 리소스를 <xref:System.ComponentModel.EventHandlerList> 가 사용 하 여 확보 되지 것입니다. 가비지 컬렉션 호출 될 때까지 <xref:System.ComponentModel.EventHandlerList> 개체의 소멸자입니다.</span><span class="sxs-lookup"><span data-stu-id="a9210-118">Otherwise, the resources the <xref:System.ComponentModel.EventHandlerList> is using will not be freed until garbage collection calls the <xref:System.ComponentModel.EventHandlerList> object's destructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Delegate this[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Delegate Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.EventHandlerList.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As Object) As Delegate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Delegate ^ default[System::Object ^] { Delegate ^ get(System::Object ^ key); void set(System::Object ^ key, Delegate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(obj) : Delegate with get, set" Usage="System.ComponentModel.EventHandlerList.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="a9210-119">목록에서 찾을 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a9210-119">An object to find in the list.</span></span></param>
        <summary><span data-ttu-id="a9210-120">지정된 개체의 대리자를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="a9210-120">Gets or sets the delegate for the specified object.</span></span></summary>
        <value><span data-ttu-id="a9210-121">지정된 키의 대리자이거나, 대리자가 없을 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a9210-121">The delegate for the specified key, or <see langword="null" /> if a delegate does not exist.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9210-122">경우 키 목록에 없는 키의 값을 설정 하는 대리자를 제공 하 고 키 목록의 맨 위에 추가 되 고 해당 값으로는 대리자에 할당할.</span><span class="sxs-lookup"><span data-stu-id="a9210-122">When the key is not found in the list and you provide a delegate to set the value of the key, then the key is added to the top of the list and assigned to the delegate as its value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.EventHandlerList" />
      </Docs>
    </Member>
    <Member MemberName="RemoveHandler">
      <MemberSignature Language="C#" Value="public void RemoveHandler (object key, Delegate value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveHandler(object key, class System.Delegate value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EventHandlerList.RemoveHandler(System.Object,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveHandler (key As Object, value As Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveHandler(System::Object ^ key, Delegate ^ value);" />
      <MemberSignature Language="F#" Value="member this.RemoveHandler : obj * Delegate -&gt; unit" Usage="eventHandlerList.RemoveHandler (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="a9210-123">해당 이벤트가 포함된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a9210-123">The object that owns the event.</span></span></param>
        <param name="value"><span data-ttu-id="a9210-124">목록에서 제거할 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="a9210-124">The delegate to remove from the list.</span></span></param>
        <summary><span data-ttu-id="a9210-125">목록에서 대리자를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="a9210-125">Removes a delegate from the list.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>