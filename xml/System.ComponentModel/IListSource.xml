<Type Name="IListSource" FullName="System.ComponentModel.IListSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="854d2280630e0531066f1e077cc99d8d435b9d8a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30375917" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IListSource" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IListSource" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.IListSource" />
  <TypeSignature Language="VB.NET" Value="Public Interface IListSource" />
  <TypeSignature Language="C++ CLI" Value="public interface class IListSource" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataSourceListEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Forms.Design.DataSourceConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>데이터 소스에 바인딩될 수 있는 목록을 반환하는 기능을 개체에 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반적으로 구현 하지 않는 개체에서 데이터 원본에 바인딩될 수 있는 목록을 반환 하려면이 인터페이스를 사용 <xref:System.Collections.IList> 자체입니다.  
  
 데이터 바인딩 중 하나가 실행 시 또는 디자이너에서 발생할 수 있습니다 하지만 각각에 대 한 규칙이 있습니다. 런타임 시 데이터는 다음 중 하나에 바인딩할 수 있습니다.  
  
-   <xref:System.Array>  
  
-   구현자 <xref:System.Collections.IList>구현자에 강력한 형식의 <xref:System.Collections.IList.Item%2A> 속성 (즉,는 <xref:System.Type> 이외의 <xref:System.Object>). 기본 구현 하 여이 수행할 수 있습니다 <xref:System.Collections.IList.Item%2A> 개인 합니다. 만들려는 경우 한 <xref:System.Collections.IList> 강력한 형식의 컬렉션의 규칙을 따르는에서 파생 되어야 <xref:System.Collections.CollectionBase>합니다.  
  
-   구현자 <xref:System.ComponentModel.ITypedList>합니다.  
  
 디자이너에서 바인딩할 수를 초기화할 수 있습니다 <xref:System.ComponentModel.Component> 동일한 규칙에 따라 개체입니다.  
  
> [!NOTE]
>  구현자 <xref:System.ComponentModel.IListSource> 반환할 수 있습니다는 <xref:System.Collections.IList> 의 컬렉션을 포함 하는 <xref:System.Collections.IList> 개체입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 구현 하는 방법을 보여 줍니다.는 <xref:System.ComponentModel.IListSource> 인터페이스입니다. 라는 구성 요소가 `EmployeeListSource` 노출는 <xref:System.Collections.IList> 구현 하 여 데이터 바인딩에 <xref:System.ComponentModel.IListSource.GetList%2A> 메서드. 전체 코드 목록을 참조 하십시오. [하는 방법: IListSource 인터페이스 구현](~/docs/framework/winforms/how-to-implement-the-ilistsource-interface.md)합니다.  
  
 [!code-csharp[System.ComponentModel.IListSource#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.IListSource/CS/EmployeeListSource.cs#1)]
 [!code-vb[System.ComponentModel.IListSource#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.IListSource/VB/EmployeeListSource.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.IListSource" />
    <altmember cref="T:System.ComponentModel.ITypedList" />
    <altmember cref="T:System.ComponentModel.BindingList`1" />
    <altmember cref="T:System.ComponentModel.IBindingList" />
    <altmember cref="T:System.Collections.CollectionBase" />
  </Docs>
  <Members>
    <Member MemberName="ContainsListCollection">
      <MemberSignature Language="C#" Value="public bool ContainsListCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ContainsListCollection" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContainsListCollection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ContainsListCollection { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>해당 컬렉션이 <see cref="T:System.Collections.IList" /> 개체의 컬렉션인지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          해당 컬렉션이 <see cref="T:System.Collections.IList" /> 개체의 컬렉션이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 사용 하 여 <xref:System.Data.DataSet> 반환 `true` 때문에 <xref:System.Data.DataSet> 클래스 컬렉션의 컬렉션을 포함 합니다. 이 속성을 사용 하 여 <xref:System.Data.DataTable> 반환 `false` 때문에 <xref:System.Data.DataTable> 클래스 개체의 컬렉션을 포함 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 구현 하는 방법을 보여 줍니다.는 <xref:System.ComponentModel.IListSource> 인터페이스입니다. 라는 구성 요소가 `EmployeeListSource` 포함 되지 않습니다 나타냅니다는 <xref:System.Collections.IList> 반환 하 여 데이터 바인딩을 위해 `false` 에서 <xref:System.ComponentModel.IListSource.ContainsListCollection%2A> 메서드. 전체 코드 목록을 참조 하십시오. [하는 방법: IListSource 인터페이스 구현](~/docs/framework/winforms/how-to-implement-the-ilistsource-interface.md)합니다.  
  
 [!code-csharp[System.ComponentModel.IListSource#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.IListSource/CS/EmployeeListSource.cs#3)]
 [!code-vb[System.ComponentModel.IListSource#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.IListSource/VB/EmployeeListSource.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IListSource" />
        <altmember cref="T:System.ComponentModel.ITypedList" />
        <altmember cref="T:System.ComponentModel.BindingList`1" />
        <altmember cref="T:System.ComponentModel.IBindingList" />
      </Docs>
    </Member>
    <Member MemberName="GetList">
      <MemberSignature Language="C#" Value="public System.Collections.IList GetList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IList GetList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IListSource.GetList" />
      <MemberSignature Language="VB.NET" Value="Public Function GetList () As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IList ^ GetList();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Collections.IList" />를 직접 구현하지 않는 개체에서 데이터 소스에 바인딩될 수 있는 <see cref="T:System.Collections.IList" />를 반환합니다.</summary>
        <returns>해당 개체에서 데이터 소스에 바인딩될 수 있는 <see cref="T:System.Collections.IList" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 구현 하는 방법을 보여 줍니다.는 <xref:System.ComponentModel.IListSource> 인터페이스입니다. 라는 구성 요소가 `EmployeeListSource` 노출는 <xref:System.Collections.IList> 구현 하 여 데이터 바인딩에 <xref:System.ComponentModel.IListSource.GetList%2A> 메서드. 전체 코드 목록을 참조 하십시오. [하는 방법: IListSource 인터페이스 구현](~/docs/framework/winforms/how-to-implement-the-ilistsource-interface.md)합니다.  
  
 [!code-csharp[System.ComponentModel.IListSource#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.IListSource/CS/EmployeeListSource.cs#4)]
 [!code-vb[System.ComponentModel.IListSource#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.IListSource/VB/EmployeeListSource.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IListSource" />
        <altmember cref="T:System.ComponentModel.ITypedList" />
        <altmember cref="T:System.ComponentModel.BindingList`1" />
        <altmember cref="T:System.ComponentModel.IBindingList" />
      </Docs>
    </Member>
  </Members>
</Type>