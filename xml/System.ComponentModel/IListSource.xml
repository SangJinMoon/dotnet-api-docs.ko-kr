<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IListSource.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5854d2280630e0531066f1e077cc99d8d435b9d8a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">854d2280630e0531066f1e077cc99d8d435b9d8a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.IListSource">
          <source>Provides functionality to an object to return a list that can be bound to a data source.</source>
          <target state="translated">데이터 소스에 바인딩될 수 있는 목록을 반환하는 기능을 개체에 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.IListSource">
          <source>You typically use this interface to return a list that can be bound to a data source, from an object that does not implement <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> itself.</source>
          <target state="translated">일반적으로 구현 하지 않는 개체에서 데이터 원본에 바인딩될 수 있는 목록을 반환 하려면이 인터페이스를 사용 <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> 자체입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.IListSource">
          <source>Binding to data can occur at either run time or in a designer, but there are rules for each.</source>
          <target state="translated">데이터 바인딩 중 하나가 실행 시 또는 디자이너에서 발생할 수 있습니다 하지만 각각에 대 한 규칙이 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.IListSource">
          <source>At run time, you can bind to data in any of the following:</source>
          <target state="translated">런타임 시 데이터는 다음 중 하나에 바인딩할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.IListSource">
          <source>Implementer of <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph>, provided the implementer has a strongly typed <ph id="ph2">&lt;xref:System.Collections.IList.Item%2A&gt;</ph> property (that is, the <ph id="ph3">&lt;xref:System.Type&gt;</ph> is anything but <ph id="ph4">&lt;xref:System.Object&gt;</ph>).</source>
          <target state="translated">구현자 <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph>구현자에 강력한 형식의 <ph id="ph2">&lt;xref:System.Collections.IList.Item%2A&gt;</ph> 속성 (즉,는 <ph id="ph3">&lt;xref:System.Type&gt;</ph> 이외의 <ph id="ph4">&lt;xref:System.Object&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.IListSource">
          <source>You can accomplish this by making the default implementation of <ph id="ph1">&lt;xref:System.Collections.IList.Item%2A&gt;</ph> private.</source>
          <target state="translated">기본 구현 하 여이 수행할 수 있습니다 <ph id="ph1">&lt;xref:System.Collections.IList.Item%2A&gt;</ph> 개인 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.IListSource">
          <source>If you want to create an <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> that follows the rules of a strongly typed collection, you should derive from <ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph>.</source>
          <target state="translated">만들려는 경우 한 <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> 강력한 형식의 컬렉션의 규칙을 따르는에서 파생 되어야 <ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.IListSource">
          <source>Implementer of <ph id="ph1">&lt;xref:System.ComponentModel.ITypedList&gt;</ph>.</source>
          <target state="translated">구현자 <ph id="ph1">&lt;xref:System.ComponentModel.ITypedList&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.IListSource">
          <source>In a designer, you can initialize binding to <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> objects by following the same rules.</source>
          <target state="translated">디자이너에서 바인딩할 수를 초기화할 수 있습니다 <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> 동일한 규칙에 따라 개체입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.IListSource">
          <source>Implementers of <ph id="ph1">&lt;xref:System.ComponentModel.IListSource&gt;</ph> can return an <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> that contains a collection of <ph id="ph3">&lt;xref:System.Collections.IList&gt;</ph> objects.</source>
          <target state="translated">구현자 <ph id="ph1">&lt;xref:System.ComponentModel.IListSource&gt;</ph> 반환할 수 있습니다는 <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> 의 컬렉션을 포함 하는 <ph id="ph3">&lt;xref:System.Collections.IList&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.IListSource">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.ComponentModel.IListSource&gt;</ph> interface.</source>
          <target state="translated">다음 코드 예제에서는 구현 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.ComponentModel.IListSource&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.IListSource">
          <source>A component named <ph id="ph1">`EmployeeListSource`</ph> exposes an <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> for data binding by implementing the <ph id="ph3">&lt;xref:System.ComponentModel.IListSource.GetList%2A&gt;</ph> method.</source>
          <target state="translated">라는 구성 요소가 <ph id="ph1">`EmployeeListSource`</ph> 노출는 <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> 구현 하 여 데이터 바인딩에 <ph id="ph3">&lt;xref:System.ComponentModel.IListSource.GetList%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.IListSource">
          <source>For a full code listing, see <bpt id="p1">[</bpt>How to: Implement the IListSource Interface<ept id="p1">](~/docs/framework/winforms/how-to-implement-the-ilistsource-interface.md)</ept>.</source>
          <target state="translated">전체 코드 목록을 참조 하십시오. <bpt id="p1">[</bpt>하는 방법: IListSource 인터페이스 구현<ept id="p1">](~/docs/framework/winforms/how-to-implement-the-ilistsource-interface.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.IListSource.ContainsListCollection">
          <source>Gets a value indicating whether the collection is a collection of <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> objects.</source>
          <target state="translated">해당 컬렉션이 <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> 개체의 컬렉션인지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.IListSource.ContainsListCollection">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the collection is a collection of <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> objects; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">해당 컬렉션이 <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> 개체의 컬렉션이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.IListSource.ContainsListCollection">
          <source>Using this property in <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> returns <ph id="ph2">`true`</ph> because the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> class contains a collection of collections.</source>
          <target state="translated">이 속성을 사용 하 여 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 반환 <ph id="ph2">`true`</ph> 때문에 <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> 클래스 컬렉션의 컬렉션을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.IListSource.ContainsListCollection">
          <source>Using this property in <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> returns <ph id="ph2">`false`</ph> because the <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> class contains a collection of objects.</source>
          <target state="translated">이 속성을 사용 하 여 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> 반환 <ph id="ph2">`false`</ph> 때문에 <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> 클래스 개체의 컬렉션을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.IListSource.ContainsListCollection">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.ComponentModel.IListSource&gt;</ph> interface.</source>
          <target state="translated">다음 코드 예제에서는 구현 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.ComponentModel.IListSource&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.IListSource.ContainsListCollection">
          <source>A component named <ph id="ph1">`EmployeeListSource`</ph> indicates that it does not contain an <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> for data binding by returning <ph id="ph3">`false`</ph> from the <ph id="ph4">&lt;xref:System.ComponentModel.IListSource.ContainsListCollection%2A&gt;</ph> method.</source>
          <target state="translated">라는 구성 요소가 <ph id="ph1">`EmployeeListSource`</ph> 포함 되지 않습니다 나타냅니다는 <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> 반환 하 여 데이터 바인딩을 위해 <ph id="ph3">`false`</ph> 에서 <ph id="ph4">&lt;xref:System.ComponentModel.IListSource.ContainsListCollection%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.IListSource.ContainsListCollection">
          <source>For a full code listing, see <bpt id="p1">[</bpt>How to: Implement the IListSource Interface<ept id="p1">](~/docs/framework/winforms/how-to-implement-the-ilistsource-interface.md)</ept>.</source>
          <target state="translated">전체 코드 목록을 참조 하십시오. <bpt id="p1">[</bpt>하는 방법: IListSource 인터페이스 구현<ept id="p1">](~/docs/framework/winforms/how-to-implement-the-ilistsource-interface.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.IListSource.GetList">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> that can be bound to a data source from an object that does not implement an <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> itself.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>를 직접 구현하지 않는 개체에서 데이터 소스에 바인딩될 수 있는 <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.IListSource.GetList">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> that can be bound to a data source from the object.</source>
          <target state="translated">해당 개체에서 데이터 소스에 바인딩될 수 있는 <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.IListSource.GetList">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.ComponentModel.IListSource&gt;</ph> interface.</source>
          <target state="translated">다음 코드 예제에서는 구현 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.ComponentModel.IListSource&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.IListSource.GetList">
          <source>A component named <ph id="ph1">`EmployeeListSource`</ph> exposes an <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> for data binding by implementing the <ph id="ph3">&lt;xref:System.ComponentModel.IListSource.GetList%2A&gt;</ph> method.</source>
          <target state="translated">라는 구성 요소가 <ph id="ph1">`EmployeeListSource`</ph> 노출는 <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> 구현 하 여 데이터 바인딩에 <ph id="ph3">&lt;xref:System.ComponentModel.IListSource.GetList%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.IListSource.GetList">
          <source>For a full code listing, see <bpt id="p1">[</bpt>How to: Implement the IListSource Interface<ept id="p1">](~/docs/framework/winforms/how-to-implement-the-ilistsource-interface.md)</ept>.</source>
          <target state="translated">전체 코드 목록을 참조 하십시오. <bpt id="p1">[</bpt>하는 방법: IListSource 인터페이스 구현<ept id="p1">](~/docs/framework/winforms/how-to-implement-the-ilistsource-interface.md)</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>