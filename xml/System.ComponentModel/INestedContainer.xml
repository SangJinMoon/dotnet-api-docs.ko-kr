<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="INestedContainer.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5583e123f6057aeb9827a161adfe0401ae17afc2f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">583e123f6057aeb9827a161adfe0401ae17afc2f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.INestedContainer">
          <source>Provides functionality for nested containers, which logically contain zero or more other components and are owned by a parent component.</source>
          <target state="translated">논리적으로 다른 구성 요소를 0개 이상 포함하고 부모 구성 요소가 소유하는 중첩 컨테이너에 대한 기능을 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.INestedContainer">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.INestedContainer&gt;</ph> interface adds the concept of an owning component to the <ph id="ph2">&lt;xref:System.ComponentModel.IContainer&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.INestedContainer&gt;</ph> 를 소유 하는 구성의 개념을 추가 하는 인터페이스는 <ph id="ph2">&lt;xref:System.ComponentModel.IContainer&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.INestedContainer">
          <source>A nested container is an object that logically, but not necessarily visually, contains zero or more child components and is owned by some parent component.</source>
          <target state="translated">중첩 된 컨테이너는 논리적으로 하지만 반드시 시각적 하지 0 개 이상의 자식 구성 요소를 포함 하 고 일부 부모 구성 요소에서 소유 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.INestedContainer">
          <source>For visual containment, the owning component is often another container.</source>
          <target state="translated">시각적 포함에 대 한 해당 구성 요소가 종종 다른 컨테이너입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.INestedContainer">
          <source>Nested containers allow sections of a control to be designable, without requiring an explicit serialized member variable or a custom serializer for each subcontrol.</source>
          <target state="translated">중첩 된 컨테이너는 각 하위 컨트롤에 대 한 serialize 된 명시적 멤버 변수 또는 사용자 지정 serializer를 요구 하지 않고을 디자인할 수 있는 컨트롤의 섹션을 허용 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.INestedContainer">
          <source>Instead, the form designer maintains one master container of components.</source>
          <target state="translated">대신, 폼 디자이너에는 하나의 마스터 컨테이너 구성 요소를 유지 관리합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.INestedContainer">
          <source>Each component’s site may have a nested container that provides a place to put extra components.</source>
          <target state="translated">각 구성 요소의 사이트 추가 구성 요소를 배치할 위치를 제공 하는 중첩 된 컨테이너에 있을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.INestedContainer">
          <source>When a component is sited in a nested container, the name it receives is a combination of its given name and its owning component’s name.</source>
          <target state="translated">중첩된 컨테이너에는 구성 요소를 배치 하는 경우 받는 이름은 지정 된 이름과 해당 소유 하는 구성 이름의 조합입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.INestedContainer">
          <source>Additionally, components added to a nested container have full access to the services of the parent container, and the nested container provides the same behavior of the parent with respect to adding new components.</source>
          <target state="translated">또한 중첩된 된 컨테이너에 추가 된 구성 요소는 부모 컨테이너의 서비스에 액세스와 중첩 된 컨테이너의 새 구성 요소를 추가 하는 관련 하 여 부모 동일한 동작을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.INestedContainer">
          <source>The nested container will create the designer for each component it contains, thereby enabling design-time support.</source>
          <target state="translated">중첩 된 컨테이너에 포함 된 각 구성 요소에 대 한 디자이너를 디자인 타임 지원을 사용할 수 있게 만듭니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.INestedContainer">
          <source>Because standard code serializers do not look at nested containers, these components are only serialized if a path to them can be obtained by walking the components in the primary container.</source>
          <target state="translated">표준 코드 serializer 중첩 된 컨테이너를 확인 하지 않습니다, 때문에 이러한 구성 요소는 경우에 직렬화 기본 컨테이너의 구성 요소를 검색 하 여 경로를 가져올 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.INestedContainer">
          <source>Nested containers can be found by querying a component's site for services of type <ph id="ph1">&lt;xref:System.ComponentModel.INestedContainer&gt;</ph>.</source>
          <target state="translated">형식의 서비스에 대 한 구성 요소의 사이트를 쿼리하여 중첩 된 컨테이너를 찾을 수 <ph id="ph1">&lt;xref:System.ComponentModel.INestedContainer&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.INestedContainer.Owner">
          <source>Gets the owning component for the nested container.</source>
          <target state="translated">중첩 컨테이너의 소유 구성 요소를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.INestedContainer.Owner">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> that owns the nested container.</source>
          <target state="translated">중첩 컨테이너를 소유하는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.INestedContainer.Owner">
          <source>The owning component is the characteristic that differentiates nested containers from ordinary containers.</source>
          <target state="translated">해당 구성 요소가 일반 컨테이너에서 중첩 된 컨테이너를 구분할 수 있는 특성입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>