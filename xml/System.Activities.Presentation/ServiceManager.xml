<Type Name="ServiceManager" FullName="System.Activities.Presentation.ServiceManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ef01108ef35eb58ce57912f1ab763e7f18bc9feb" /><Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/09/2018" /><Meta Name="ms.locfileid" Value="51311403" /></Metadata><TypeSignature Language="C#" Value="public abstract class ServiceManager : IServiceProvider, System.Collections.Generic.IEnumerable&lt;Type&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ServiceManager extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt;, class System.Collections.IEnumerable, class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.ServiceManager" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ServiceManager&#xA;Implements IEnumerable(Of Type), IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceManager abstract : IServiceProvider, System::Collections::Generic::IEnumerable&lt;Type ^&gt;" />
  <TypeSignature Language="F#" Value="type ServiceManager = class&#xA;    interface IServiceProvider&#xA;    interface seq&lt;Type&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="3dbf7-101"><see cref="T:System.IServiceProvider" />를 구현하고 편집 컨텍스트에서 제공하는 서비스에 액세스할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-101">Implements <see cref="T:System.IServiceProvider" /> and provides access to services offered by the editing context.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dbf7-102"><xref:System.Activities.Presentation.EditingContext.Services%2A>는 디자이너가 사용할 수 있도록 호스트가 제공하는 기능이나 편집기 내의 모든 디자이너에 기능을 제공하기 위해 디자이너가 사용하는 기능을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-102"><xref:System.Activities.Presentation.EditingContext.Services%2A> represent functionality that is either provided by the host for the designer to use or that is used by the designer to make functionality available to all designers within the editor.</span></span> <span data-ttu-id="3dbf7-103">이 서비스는 <xref:System.Activities.Presentation.EditingContext> 속성이 <xref:System.Activities.Presentation.EditingContext.Services%2A>에서 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-103">It is obtained from the <xref:System.Activities.Presentation.EditingContext> by the <xref:System.Activities.Presentation.EditingContext.Services%2A> property.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ServiceManager ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ServiceManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3dbf7-104"><see cref="T:System.Activities.Presentation.ServiceManager" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-104">Initializes a new instance of the <see cref="T:System.Activities.Presentation.ServiceManager" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public abstract bool Contains (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.Contains(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Contains (serviceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Contains(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member Contains : Type -&gt; bool" Usage="serviceManager.Contains serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="3dbf7-105">확인할 서비스의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-105">The type of service to check.</span></span></param>
        <summary><span data-ttu-id="3dbf7-106">지정한 형식의 서비스가 서비스 관리자에 포함되어 있는지 여부를 나타내는 부울 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-106">Returns a Boolean value that indicates whether the service manager contains a service of the given type.</span></span></summary>
        <returns><span data-ttu-id="3dbf7-107"><paramref name="serviceType" /> 형식의 서비스가 게시되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-107"><see langword="true" /> if a service of type <paramref name="serviceType" /> has been published; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains&lt;TServiceType&gt;">
      <MemberSignature Language="C#" Value="public bool Contains&lt;TServiceType&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains&lt;TServiceType&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.Contains``1" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains(Of TServiceType) () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TServiceType&gt;&#xA; bool Contains();" />
      <MemberSignature Language="F#" Value="member this.Contains : unit -&gt; bool" Usage="serviceManager.Contains " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TServiceType" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TServiceType"><span data-ttu-id="3dbf7-108">확인할 서비스의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-108">The type of service to check.</span></span></typeparam>
        <summary><span data-ttu-id="3dbf7-109">지정한 형식의 서비스가 서비스 관리자에 포함되어 있는지 여부를 나타내는 부울 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-109">Returns a Boolean value that indicates whether the service manager contains a service of the given type.</span></span></summary>
        <returns><span data-ttu-id="3dbf7-110"><paramref name="serviceType" /> 형식의 서비스가 게시되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-110"><see langword="true" /> if a service of type <paramref name="serviceType" /> has been published; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerator&lt;Type&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Type&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEnumerator () As IEnumerator(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IEnumerator&lt;Type ^&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;Type&gt;" Usage="serviceManager.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3dbf7-111">이 서비스 관리자가 게시하는 모든 서비스를 열거하는 데 사용할 수 있는 열거자를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-111">Retrieves an enumerator that can be used to enumerate all of the services that this service manager publishes.</span></span></summary>
        <returns><span data-ttu-id="3dbf7-112">게시된 서비스의 열거형이 포함된 <see cref="T:System.Collections.Generic.IEnumerator`1" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-112">Returns <see cref="T:System.Collections.Generic.IEnumerator`1" />, which contains an enumeration of published services.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequiredService&lt;TServiceType&gt;">
      <MemberSignature Language="C#" Value="public TServiceType GetRequiredService&lt;TServiceType&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TServiceType GetRequiredService&lt;TServiceType&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.GetRequiredService``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRequiredService(Of TServiceType) () As TServiceType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TServiceType&gt;&#xA; TServiceType GetRequiredService();" />
      <MemberSignature Language="F#" Value="member this.GetRequiredService : unit -&gt; 'ServiceType" Usage="serviceManager.GetRequiredService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TServiceType</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TServiceType" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TServiceType"><span data-ttu-id="3dbf7-113">검색할 서비스의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-113">The type of service to retrieve.</span></span></typeparam>
        <summary><span data-ttu-id="3dbf7-114">요청된 서비스를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-114">Retrieves the requested service.</span></span></summary>
        <returns><span data-ttu-id="3dbf7-115">서비스 인스턴스인 제네릭 형식을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-115">Returns a generic type, which is an instance of the service.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dbf7-116"><xref:System.Activities.Presentation.ServiceManager.GetService%2A>와 달리 이 메서드는 서비스를 사용할 수 없는 경우 <xref:System.NotSupportedException>을 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-116">Unlike <xref:System.Activities.Presentation.ServiceManager.GetService%2A>, this method throws a <xref:System.NotSupportedException> if the service is not available.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="3dbf7-117">지정한 형식의 서비스가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="3dbf7-117">There is no service of the given type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public abstract object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member GetService : Type -&gt; obj" Usage="serviceManager.GetService serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="3dbf7-118">검색할 서비스의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-118">The type of service to retrieve.</span></span></param>
        <summary><span data-ttu-id="3dbf7-119">요청된 서비스를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-119">Retrieves the requested service.</span></span>  <span data-ttu-id="3dbf7-120">이 메서드는 서비스를 찾을 수 없는 경우 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-120">This method returns <see langword="null" /> if the service could not be located.</span></span></summary>
        <returns><span data-ttu-id="3dbf7-121">서비스 인스턴스인 <see cref="T:System.Object" />를 반환하거나 서비스가 게시되지 않은 경우 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-121">Returns <see cref="T:System.Object" />, which is an instance of the service, or <see langword="null" /> if the service has not been published.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3dbf7-122"><paramref name="serviceType" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="3dbf7-122"><paramref name="serviceType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetService&lt;TServiceType&gt;">
      <MemberSignature Language="C#" Value="public TServiceType GetService&lt;TServiceType&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TServiceType GetService&lt;TServiceType&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.GetService``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService(Of TServiceType) () As TServiceType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TServiceType&gt;&#xA; TServiceType GetService();" />
      <MemberSignature Language="F#" Value="member this.GetService : unit -&gt; 'ServiceType" Usage="serviceManager.GetService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TServiceType</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TServiceType" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TServiceType"><span data-ttu-id="3dbf7-123">검색할 서비스의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-123">The type of service to retrieve.</span></span></typeparam>
        <summary><span data-ttu-id="3dbf7-124">요청된 서비스를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-124">Retrieves the requested service.</span></span>  <span data-ttu-id="3dbf7-125">이 메서드는 서비스를 찾을 수 없는 경우 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-125">This method returns <see langword="null" /> if the service could not be located.</span></span></summary>
        <returns><span data-ttu-id="3dbf7-126">서비스 인스턴스인 제네릭 형식 또는 서비스가 게시되지 않은 경우 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-126">Returns a generic type, which is an instance of the service, or <see langword="null" /> if the service has not been published.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTarget">
      <MemberSignature Language="C#" Value="protected static object GetTarget (Delegate callback);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig object GetTarget(class System.Delegate callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.GetTarget(System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetTarget (callback As Delegate) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Object ^ GetTarget(Delegate ^ callback);" />
      <MemberSignature Language="F#" Value="static member GetTarget : Delegate -&gt; obj" Usage="System.Activities.Presentation.ServiceManager.GetTarget callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="3dbf7-127">대상을 가져올 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-127">The delegate to get the target for.</span></span></param>
        <summary><span data-ttu-id="3dbf7-128">대리자의 대상 개체를 반환하는 도우미 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-128">A helper method that returns the target object for a delegate.</span></span> <span data-ttu-id="3dbf7-129">제네릭 대리자를 프록시하는 대리자가 만들어진 경우 이 메서드는 프록시가 아니라 원래 개체를 올바르게 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-129">If the delegate was created to proxy a generic delegate, this will correctly return the original object, not the proxy.</span></span></summary>
        <returns><span data-ttu-id="3dbf7-130">콜백 대상인 <see cref="T:System.Object" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-130">Returns <see cref="T:System.Object" />, which is the callback target.</span></span> <span data-ttu-id="3dbf7-131">콜백에서 정적 개체를 나타낼 경우 <see langword="null" />을 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-131">This can return <see langword="null" /> if the callback represents a static object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3dbf7-132"><paramref name="callback" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="3dbf7-132"><paramref name="callback" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Publish">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3dbf7-133">지정한 서비스 형식을 게시하지만 인스턴스를 선언하지는 않습니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-133">Publishes the given service type, but does not declare an instance.</span></span> <span data-ttu-id="3dbf7-134">서비스가 요청된 경우 인스턴스를 만들기 위해 게시 서비스 콜백이 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-134">When the service is requested, the Publish service callback will be invoked to create the instance.</span></span> <span data-ttu-id="3dbf7-135">콜백은 한 번만 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-135">The callback is invoked only once.</span></span> <span data-ttu-id="3dbf7-136">그 후에는 캐시된 인스턴스가 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-136">After that, the instance it returned is cached.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Publish">
      <MemberSignature Language="C#" Value="public abstract void Publish (Type serviceType, System.Activities.Presentation.PublishServiceCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Publish(class System.Type serviceType, class System.Activities.Presentation.PublishServiceCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.Publish(System.Type,System.Activities.Presentation.PublishServiceCallback)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Publish (serviceType As Type, callback As PublishServiceCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Publish(Type ^ serviceType, System::Activities::Presentation::PublishServiceCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Publish : Type * System.Activities.Presentation.PublishServiceCallback -&gt; unit" Usage="serviceManager.Publish (serviceType, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="callback" Type="System.Activities.Presentation.PublishServiceCallback" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="3dbf7-137">게시할 서비스의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-137">The type of service to publish.</span></span></param>
        <param name="callback"><span data-ttu-id="3dbf7-138">서비스 인스턴스가 필요한 경우 호출될 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-138">A callback that will be invoked when an instance of the service is needed.</span></span></param>
        <summary><span data-ttu-id="3dbf7-139">지정한 서비스 형식을 게시하지만 인스턴스를 선언하지는 않습니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-139">Publishes the specified service type, but does not declare an instance.</span></span> <span data-ttu-id="3dbf7-140">서비스가 요청된 경우 인스턴스를 만들기 위해 게시 서비스 콜백이 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-140">When the service is requested, the Publish service callback will be invoked to create the instance.</span></span> <span data-ttu-id="3dbf7-141">콜백은 한 번만 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-141">The callback is invoked only once.</span></span> <span data-ttu-id="3dbf7-142">그 후에는 캐시된 인스턴스가 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-142">After that, the instance it returned is cached.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3dbf7-143"><paramref name="serviceType" /> 또는 <paramref name="callback" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="3dbf7-143"><paramref name="serviceType" /> or <paramref name="callback" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3dbf7-144"><paramref name="serviceType" />이 이미 게시된 경우</span><span class="sxs-lookup"><span data-stu-id="3dbf7-144"><paramref name="serviceType" /> has already been published.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Publish">
      <MemberSignature Language="C#" Value="public abstract void Publish (Type serviceType, object serviceInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Publish(class System.Type serviceType, object serviceInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.Publish(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Publish (serviceType As Type, serviceInstance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Publish(Type ^ serviceType, System::Object ^ serviceInstance);" />
      <MemberSignature Language="F#" Value="abstract member Publish : Type * obj -&gt; unit" Usage="serviceManager.Publish (serviceType, serviceInstance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="serviceInstance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="3dbf7-145">게시할 서비스의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-145">The type of service to publish.</span></span></param>
        <param name="serviceInstance"><span data-ttu-id="3dbf7-146">서비스 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-146">An instance of the service.</span></span></param>
        <summary><span data-ttu-id="3dbf7-147">지정한 서비스를 게시합니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-147">Publishes the given service.</span></span> <span data-ttu-id="3dbf7-148">게시된 후에는 편집 컨텍스트가 삭제될 때까지 서비스 인스턴스가 서비스 관리자에 유지됩니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-148">After it is published, the service instance remains in the service manager until the editing context is disposed of.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3dbf7-149"><paramref name="serviceType" /> 또는 <paramref name="serviceInstance" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="3dbf7-149"><paramref name="serviceType" /> or <paramref name="serviceInstance" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3dbf7-150"><paramref name="serviceInstance" />가 <paramref name="serviceType" />에서 파생되지 않거나 구현하지 않는 경우 또는 <paramref name="serviceType" />이 이미 게시된 경우</span><span class="sxs-lookup"><span data-stu-id="3dbf7-150"><paramref name="serviceInstance" /> does not derive from or implement <paramref name="serviceType" />, or <paramref name="serviceType" /> has already been published.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Publish&lt;TServiceType&gt;">
      <MemberSignature Language="C#" Value="public void Publish&lt;TServiceType&gt; (System.Activities.Presentation.PublishServiceCallback&lt;TServiceType&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Publish&lt;TServiceType&gt;(class System.Activities.Presentation.PublishServiceCallback`1&lt;!!TServiceType&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.Publish``1(System.Activities.Presentation.PublishServiceCallback{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Publish(Of TServiceType) (callback As PublishServiceCallback(Of TServiceType))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TServiceType&gt;&#xA; void Publish(System::Activities::Presentation::PublishServiceCallback&lt;TServiceType&gt; ^ callback);" />
      <MemberSignature Language="F#" Value="member this.Publish : System.Activities.Presentation.PublishServiceCallback&lt;'ServiceType&gt; -&gt; unit" Usage="serviceManager.Publish callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TServiceType" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Activities.Presentation.PublishServiceCallback&lt;TServiceType&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TServiceType"><span data-ttu-id="3dbf7-151">게시할 서비스의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-151">The type of the service to publish.</span></span></typeparam>
        <param name="callback"><span data-ttu-id="3dbf7-152">서비스 인스턴스가 필요한 경우 호출될 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-152">A callback that will be invoked when an instance of the service is needed.</span></span></param>
        <summary><span data-ttu-id="3dbf7-153">지정한 서비스 형식을 게시하지만 인스턴스를 선언하지는 않습니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-153">Publishes the given service type, but does not declare an instance yet.</span></span> <span data-ttu-id="3dbf7-154">서비스가 요청될 경우 인스턴스를 만들기 위해 <see langword="PublishServiceCallback" />이 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-154">When the service is requested, the <see langword="PublishServiceCallback" /> will be invoked to create the instance.</span></span> <span data-ttu-id="3dbf7-155">콜백은 한 번만 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-155">The callback is invoked only once.</span></span> <span data-ttu-id="3dbf7-156">그 후에는 캐시된 인스턴스가 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-156">After that, the instance it returned is cached.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3dbf7-157"><paramref name="callback" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="3dbf7-157"><paramref name="callback" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Publish&lt;TServiceType&gt;">
      <MemberSignature Language="C#" Value="public void Publish&lt;TServiceType&gt; (TServiceType serviceInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Publish&lt;TServiceType&gt;(!!TServiceType serviceInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.Publish``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Publish(Of TServiceType) (serviceInstance As TServiceType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TServiceType&gt;&#xA; void Publish(TServiceType serviceInstance);" />
      <MemberSignature Language="F#" Value="member this.Publish : 'ServiceType -&gt; unit" Usage="serviceManager.Publish serviceInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TServiceType" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="serviceInstance" Type="TServiceType" />
      </Parameters>
      <Docs>
        <typeparam name="TServiceType"><span data-ttu-id="3dbf7-158">게시할 서비스의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-158">The type of the service to publish.</span></span></typeparam>
        <param name="serviceInstance"><span data-ttu-id="3dbf7-159">서비스 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-159">An instance of the service.</span></span></param>
        <summary><span data-ttu-id="3dbf7-160">지정한 서비스를 게시합니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-160">Publishes the given service.</span></span> <span data-ttu-id="3dbf7-161">게시된 후에는 편집 컨텍스트가 삭제될 때까지 서비스 인스턴스가 서비스 관리자에 유지됩니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-161">After it is published, the service instance remains in the service manager until the editing context is disposed of.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3dbf7-162"><paramref name="serviceInstance" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="3dbf7-162"><paramref name="serviceInstance" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveCallback">
      <MemberSignature Language="C#" Value="protected static Delegate RemoveCallback (Delegate existing, Delegate toRemove);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Delegate RemoveCallback(class System.Delegate existing, class System.Delegate toRemove) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.RemoveCallback(System.Delegate,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function RemoveCallback (existing As Delegate, toRemove As Delegate) As Delegate" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static Delegate ^ RemoveCallback(Delegate ^ existing, Delegate ^ toRemove);" />
      <MemberSignature Language="F#" Value="static member RemoveCallback : Delegate * Delegate -&gt; Delegate" Usage="System.Activities.Presentation.ServiceManager.RemoveCallback (existing, toRemove)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="existing" Type="System.Delegate" />
        <Parameter Name="toRemove" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="existing"><span data-ttu-id="3dbf7-163">콜백을 제거할 기존 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-163">The existing delegate to remove the callback from.</span></span></param>
        <param name="toRemove"><span data-ttu-id="3dbf7-164">제거할 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-164">The callback to remove.</span></span></param>
        <summary><span data-ttu-id="3dbf7-165"><see langword="Delegate.Remove" /> 작업을 수행하고 제네릭 콜백에 대한 프록시인 대리자의 래핑을 해제하는 도우미 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-165">A helper method that performs a <see langword="Delegate.Remove" /> operation, and unwraps delegates that are proxies to generic callbacks.</span></span> <span data-ttu-id="3dbf7-166"><see cref="Overload:System.Activities.Presentation.ServiceManager.Unsubscribe" /> 구현에 이 메서드를 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-166">You should use this method in your <see cref="Overload:System.Activities.Presentation.ServiceManager.Unsubscribe" /> implementations.</span></span></summary>
        <returns><span data-ttu-id="3dbf7-167">기존 대리자에 할당할 새 값인 <see cref="T:System.Delegate" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-167">Returns <see cref="T:System.Delegate" />, which is  a new value to assign to the existing delegate.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subscribe">
      <MemberSignature Language="C#" Value="public abstract void Subscribe (Type serviceType, System.Activities.Presentation.SubscribeServiceCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Subscribe(class System.Type serviceType, class System.Activities.Presentation.SubscribeServiceCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.Subscribe(System.Type,System.Activities.Presentation.SubscribeServiceCallback)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Subscribe (serviceType As Type, callback As SubscribeServiceCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Subscribe(Type ^ serviceType, System::Activities::Presentation::SubscribeServiceCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Subscribe : Type * System.Activities.Presentation.SubscribeServiceCallback -&gt; unit" Usage="serviceManager.Subscribe (serviceType, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="callback" Type="System.Activities.Presentation.SubscribeServiceCallback" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="3dbf7-168">구독할 서비스의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-168">The type of service to subscribe to.</span></span></param>
        <param name="callback"><span data-ttu-id="3dbf7-169">서비스를 사용할 수 있는 경우 알림을 받을 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-169">A callback that will be notified when the service is available.</span></span></param>
        <summary><span data-ttu-id="3dbf7-170">요청된 서비스가 게시된 경우 제공한 콜백 함수를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-170">Invokes the provided callback when someone has published the requested service.</span></span> <span data-ttu-id="3dbf7-171">서비스를 사용할 수 있는 경우 이 메서드는 콜백을 즉시 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-171">If the service was already available, this method invokes the callback immediately.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3dbf7-172"><paramref name="serviceType" /> 또는 <paramref name="callback" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="3dbf7-172"><paramref name="serviceType" /> or <paramref name="callback" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Subscribe&lt;TServiceType&gt;">
      <MemberSignature Language="C#" Value="public void Subscribe&lt;TServiceType&gt; (System.Activities.Presentation.SubscribeServiceCallback&lt;TServiceType&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Subscribe&lt;TServiceType&gt;(class System.Activities.Presentation.SubscribeServiceCallback`1&lt;!!TServiceType&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.Subscribe``1(System.Activities.Presentation.SubscribeServiceCallback{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Subscribe(Of TServiceType) (callback As SubscribeServiceCallback(Of TServiceType))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TServiceType&gt;&#xA; void Subscribe(System::Activities::Presentation::SubscribeServiceCallback&lt;TServiceType&gt; ^ callback);" />
      <MemberSignature Language="F#" Value="member this.Subscribe : System.Activities.Presentation.SubscribeServiceCallback&lt;'ServiceType&gt; -&gt; unit" Usage="serviceManager.Subscribe callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TServiceType" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Activities.Presentation.SubscribeServiceCallback&lt;TServiceType&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TServiceType"><span data-ttu-id="3dbf7-173">구독할 서비스의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-173">The type of the service to subscribe to.</span></span></typeparam>
        <param name="callback"><span data-ttu-id="3dbf7-174">서비스를 사용할 수 있는 경우 알림을 받을 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-174">A callback that will be notified when the service is available.</span></span></param>
        <summary><span data-ttu-id="3dbf7-175">요청된 서비스가 게시된 경우 제공한 콜백 함수를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-175">Invokes the provided callback when someone has published the requested service.</span></span> <span data-ttu-id="3dbf7-176">서비스를 사용할 수 있는 경우 이 메서드는 콜백을 즉시 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-176">If the service was already available, this method invokes the callback immediately.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3dbf7-177"><paramref name="callback" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="3dbf7-177"><paramref name="callback" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3dbf7-178">이 서비스 관리자가 게시하는 모든 서비스를 열거하는 데 사용할 수 있는 열거자를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-178">Retrieves an enumerator that can be used to enumerate all of the services that this service manager publishes.</span></span></summary>
        <returns><span data-ttu-id="3dbf7-179">게시된 서비스의 열거형이 포함된 <see cref="T:System.Collections.IEnumerator" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-179">Returns <see cref="T:System.Collections.IEnumerator" />, which contains an enumeration of published services.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unsubscribe">
      <MemberSignature Language="C#" Value="public abstract void Unsubscribe (Type serviceType, System.Activities.Presentation.SubscribeServiceCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unsubscribe(class System.Type serviceType, class System.Activities.Presentation.SubscribeServiceCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.Unsubscribe(System.Type,System.Activities.Presentation.SubscribeServiceCallback)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Unsubscribe (serviceType As Type, callback As SubscribeServiceCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Unsubscribe(Type ^ serviceType, System::Activities::Presentation::SubscribeServiceCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Unsubscribe : Type * System.Activities.Presentation.SubscribeServiceCallback -&gt; unit" Usage="serviceManager.Unsubscribe (serviceType, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="callback" Type="System.Activities.Presentation.SubscribeServiceCallback" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="3dbf7-180">구독을 제거할 서비스의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-180">The type of service to remove the subscription from.</span></span></param>
        <param name="callback"><span data-ttu-id="3dbf7-181">구독에서 제거할 콜백 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-181">The callback object to remove from the subscription.</span></span></param>
        <summary><span data-ttu-id="3dbf7-182">서비스 형식의 구독을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-182">Removes a subscription for a service type.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3dbf7-183"><paramref name="serviceType" /> 또는 <paramref name="callback" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="3dbf7-183"><paramref name="serviceType" /> or <paramref name="callback" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Unsubscribe&lt;TServiceType&gt;">
      <MemberSignature Language="C#" Value="public void Unsubscribe&lt;TServiceType&gt; (System.Activities.Presentation.SubscribeServiceCallback&lt;TServiceType&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unsubscribe&lt;TServiceType&gt;(class System.Activities.Presentation.SubscribeServiceCallback`1&lt;!!TServiceType&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.Unsubscribe``1(System.Activities.Presentation.SubscribeServiceCallback{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unsubscribe(Of TServiceType) (callback As SubscribeServiceCallback(Of TServiceType))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TServiceType&gt;&#xA; void Unsubscribe(System::Activities::Presentation::SubscribeServiceCallback&lt;TServiceType&gt; ^ callback);" />
      <MemberSignature Language="F#" Value="member this.Unsubscribe : System.Activities.Presentation.SubscribeServiceCallback&lt;'ServiceType&gt; -&gt; unit" Usage="serviceManager.Unsubscribe callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TServiceType" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Activities.Presentation.SubscribeServiceCallback&lt;TServiceType&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TServiceType"><span data-ttu-id="3dbf7-184">구독을 제거할 서비스의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-184">The type of the service to remove the subscription from.</span></span></typeparam>
        <param name="callback"><span data-ttu-id="3dbf7-185">구독에서 제거할 콜백 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-185">The callback object to remove from the subscription.</span></span></param>
        <summary><span data-ttu-id="3dbf7-186">서비스 형식의 구독을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="3dbf7-186">Removes a subscription for a service type.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3dbf7-187"><paramref name="callback" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="3dbf7-187"><paramref name="callback" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>