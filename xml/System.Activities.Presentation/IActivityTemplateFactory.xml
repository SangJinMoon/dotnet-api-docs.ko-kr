<Type Name="IActivityTemplateFactory" FullName="System.Activities.Presentation.IActivityTemplateFactory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8f04d418af91f1cb087b5f1fd13c6e5958764e4f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36720188" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IActivityTemplateFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IActivityTemplateFactory" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.IActivityTemplateFactory" />
  <TypeSignature Language="VB.NET" Value="Public Interface IActivityTemplateFactory" />
  <TypeSignature Language="C++ CLI" Value="public interface class IActivityTemplateFactory" />
  <TypeSignature Language="F#" Value="type IActivityTemplateFactory = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>"placeholder" <see cref="T:System.Activities.Activity" /> 개체를 캡슐화하는 템플릿을 만들기 위해 클래스에서 구현하는 팩터리 메서드를 정의합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용자 지정 활동 템플릿은 <xref:System.Activities.Presentation.IActivityTemplateFactory>를 구현해야 합니다. 사용자 지정 활동 템플릿은 사용자가 각 활동을 개별적으로 만들고 모든 속성 및 기타 설정을 수동으로 구성하지 않아도 되도록 사용자 지정 복합 활동을 비롯한 여러 활동의 구성을 사용자 지정하는 데 사용됩니다.  
  
   
  
## Examples  
  
```  
  
public sealed class MyDelayActivity : IActivityTemplateFactory  
  
{  
     public Activity Create(DependencyObject target)  
     {  
         return new System.Activities.Statements.Delay  
         {  
             DisplayName = "DelayActivityTemplate",  
             Duration = new TimeSpan(0,0,10)  
  
         };  
     }  
 }  
  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public System.Activities.Activity Create (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Activity Create(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.IActivityTemplateFactory.Create(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (target As DependencyObject) As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Activity ^ Create(System::Windows::DependencyObject ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Create : System.Windows.DependencyObject -&gt; System.Activities.Activity" Usage="iActivityTemplateFactory.Create target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target">이 <see cref="T:System.Activities.Presentation.IActivityTemplateFactory" /> 인스턴스에서 사용하는 종속성 개체입니다.</param>
        <summary>지정한 대상 개체에 대해 미리 정의된 디자인 패턴을 나타내는 <see cref="T:System.Activities.Activity" /> 클래스의 인스턴스를 만듭니다.</summary>
        <returns>워크플로 <see cref="T:System.Activities.Activity" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용자 지정 활동 템플릿에 사용되는 작업 인스턴스를 만들고 구성하는 데 사용됩니다.  
  
   
  
## Examples  
 기간이 10초인 Delay 활동을 구성하는 템플릿을 만듭니다.  
  
```  
  
public sealed class MyDelayActivity : IActivityTemplateFactory  
  
{  
     public Activity Create(DependencyObject target)  
     {  
         return new System.Activities.Statements.Delay  
         {  
             DisplayName = "DelayActivityTemplate",  
             Duration = new TimeSpan(0,0,10)  
  
         };  
     }  
 }  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>